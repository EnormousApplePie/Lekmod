; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvTypes.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?s_eARTIFACT_ANCIENT_RUIN@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_ANCIENT_RUIN
PUBLIC	?s_eARTIFACT_BARBARIAN_CAMP@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BARBARIAN_CAMP
PUBLIC	?s_eARTIFACT_BATTLE_RANGED@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BATTLE_RANGED
PUBLIC	?s_eARTIFACT_BATTLE_MELEE@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BATTLE_MELEE
PUBLIC	?s_eARTIFACT_RAZED_CITY@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_RAZED_CITY
PUBLIC	?s_eARTIFACT_WRITING@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_WRITING
PUBLIC	?s_eGREAT_WORK_SLOT_ART_ARTIFACT@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_ART_ARTIFACT
PUBLIC	?s_eGREAT_WORK_SLOT_LITERATURE@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_LITERATURE
PUBLIC	?s_eGREAT_WORK_SLOT_MUSIC@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_MUSIC
PUBLIC	?s_eMISSION_MOVE_TO@@3W4MissionTypes@@A		; s_eMISSION_MOVE_TO
PUBLIC	?s_eMISSION_ROUTE_TO@@3W4MissionTypes@@A	; s_eMISSION_ROUTE_TO
PUBLIC	?s_eMISSION_MOVE_TO_UNIT@@3W4MissionTypes@@A	; s_eMISSION_MOVE_TO_UNIT
PUBLIC	?s_eMISSION_SWAP_UNITS@@3W4MissionTypes@@A	; s_eMISSION_SWAP_UNITS
PUBLIC	?s_eMISSION_SKIP@@3W4MissionTypes@@A		; s_eMISSION_SKIP
PUBLIC	?s_eMISSION_SLEEP@@3W4MissionTypes@@A		; s_eMISSION_SLEEP
PUBLIC	?s_eMISSION_ALERT@@3W4MissionTypes@@A		; s_eMISSION_ALERT
PUBLIC	?s_eMISSION_FORTIFY@@3W4MissionTypes@@A		; s_eMISSION_FORTIFY
PUBLIC	?s_eMISSION_GARRISON@@3W4MissionTypes@@A	; s_eMISSION_GARRISON
PUBLIC	?s_eMISSION_SET_UP_FOR_RANGED_ATTACK@@3W4MissionTypes@@A ; s_eMISSION_SET_UP_FOR_RANGED_ATTACK
PUBLIC	?s_eMISSION_EMBARK@@3W4MissionTypes@@A		; s_eMISSION_EMBARK
PUBLIC	?s_eMISSION_DISEMBARK@@3W4MissionTypes@@A	; s_eMISSION_DISEMBARK
PUBLIC	?s_eMISSION_AIRPATROL@@3W4MissionTypes@@A	; s_eMISSION_AIRPATROL
PUBLIC	?s_eMISSION_HEAL@@3W4MissionTypes@@A		; s_eMISSION_HEAL
PUBLIC	?s_eMISSION_AIRLIFT@@3W4MissionTypes@@A		; s_eMISSION_AIRLIFT
PUBLIC	?s_eMISSION_NUKE@@3W4MissionTypes@@A		; s_eMISSION_NUKE
PUBLIC	?s_eMISSION_PARADROP@@3W4MissionTypes@@A	; s_eMISSION_PARADROP
PUBLIC	?s_eMISSION_AIR_SWEEP@@3W4MissionTypes@@A	; s_eMISSION_AIR_SWEEP
PUBLIC	?s_eMISSION_REBASE@@3W4MissionTypes@@A		; s_eMISSION_REBASE
PUBLIC	?s_eMISSION_RANGE_ATTACK@@3W4MissionTypes@@A	; s_eMISSION_RANGE_ATTACK
PUBLIC	?s_eMISSION_PILLAGE@@3W4MissionTypes@@A		; s_eMISSION_PILLAGE
PUBLIC	?s_eMISSION_FOUND@@3W4MissionTypes@@A		; s_eMISSION_FOUND
PUBLIC	?s_eMISSION_JOIN@@3W4MissionTypes@@A		; s_eMISSION_JOIN
PUBLIC	?s_eMISSION_CONSTRUCT@@3W4MissionTypes@@A	; s_eMISSION_CONSTRUCT
PUBLIC	?s_eMISSION_DISCOVER@@3W4MissionTypes@@A	; s_eMISSION_DISCOVER
PUBLIC	?s_eMISSION_HURRY@@3W4MissionTypes@@A		; s_eMISSION_HURRY
PUBLIC	?s_eMISSION_TRADE@@3W4MissionTypes@@A		; s_eMISSION_TRADE
PUBLIC	?s_eMISSION_BUY_CITY_STATE@@3W4MissionTypes@@A	; s_eMISSION_BUY_CITY_STATE
PUBLIC	?s_eMISSION_REPAIR_FLEET@@3W4MissionTypes@@A	; s_eMISSION_REPAIR_FLEET
PUBLIC	?s_eMISSION_SPACESHIP@@3W4MissionTypes@@A	; s_eMISSION_SPACESHIP
PUBLIC	?s_eMISSION_CULTURE_BOMB@@3W4MissionTypes@@A	; s_eMISSION_CULTURE_BOMB
PUBLIC	?s_eMISSION_FOUND_RELIGION@@3W4MissionTypes@@A	; s_eMISSION_FOUND_RELIGION
PUBLIC	?s_eMISSION_GOLDEN_AGE@@3W4MissionTypes@@A	; s_eMISSION_GOLDEN_AGE
PUBLIC	?s_eMISSION_BUILD@@3W4MissionTypes@@A		; s_eMISSION_BUILD
PUBLIC	?s_eMISSION_LEAD@@3W4MissionTypes@@A		; s_eMISSION_LEAD
PUBLIC	?s_eMISSION_DIE_ANIMATION@@3W4MissionTypes@@A	; s_eMISSION_DIE_ANIMATION
PUBLIC	?s_eMISSION_BEGIN_COMBAT@@3W4MissionTypes@@A	; s_eMISSION_BEGIN_COMBAT
PUBLIC	?s_eMISSION_END_COMBAT@@3W4MissionTypes@@A	; s_eMISSION_END_COMBAT
PUBLIC	?s_eMISSION_AIRSTRIKE@@3W4MissionTypes@@A	; s_eMISSION_AIRSTRIKE
PUBLIC	?s_eMISSION_SURRENDER@@3W4MissionTypes@@A	; s_eMISSION_SURRENDER
PUBLIC	?s_eMISSION_CAPTURED@@3W4MissionTypes@@A	; s_eMISSION_CAPTURED
PUBLIC	?s_eMISSION_IDLE@@3W4MissionTypes@@A		; s_eMISSION_IDLE
PUBLIC	?s_eMISSION_DIE@@3W4MissionTypes@@A		; s_eMISSION_DIE
PUBLIC	?s_eMISSION_DAMAGE@@3W4MissionTypes@@A		; s_eMISSION_DAMAGE
PUBLIC	?s_eMISSION_MULTI_SELECT@@3W4MissionTypes@@A	; s_eMISSION_MULTI_SELECT
PUBLIC	?s_eMISSION_MULTI_DESELECT@@3W4MissionTypes@@A	; s_eMISSION_MULTI_DESELECT
PUBLIC	?s_eMISSION_WAIT_FOR@@3W4MissionTypes@@A	; s_eMISSION_WAIT_FOR
PUBLIC	?s_eMISSION_SPREAD_RELIGION@@3W4MissionTypes@@A	; s_eMISSION_SPREAD_RELIGION
PUBLIC	?s_eMISSION_ENHANCE_RELIGION@@3W4MissionTypes@@A ; s_eMISSION_ENHANCE_RELIGION
PUBLIC	?s_eMISSION_REMOVE_HERESY@@3W4MissionTypes@@A	; s_eMISSION_REMOVE_HERESY
PUBLIC	?s_eMISSION_ESTABLISH_TRADE_ROUTE@@3W4MissionTypes@@A ; s_eMISSION_ESTABLISH_TRADE_ROUTE
PUBLIC	?s_eMISSION_PLUNDER_TRADE_ROUTE@@3W4MissionTypes@@A ; s_eMISSION_PLUNDER_TRADE_ROUTE
PUBLIC	?s_eMISSION_GREAT_WORK@@3W4MissionTypes@@A	; s_eMISSION_GREAT_WORK
PUBLIC	?s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY@@3W4MissionTypes@@A ; s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY
PUBLIC	?s_eMISSION_SELL_EXOTIC_GOODS@@3W4MissionTypes@@A ; s_eMISSION_SELL_EXOTIC_GOODS
PUBLIC	?s_eMISSION_GIVE_POLICIES@@3W4MissionTypes@@A	; s_eMISSION_GIVE_POLICIES
PUBLIC	?s_eMISSION_ONE_SHOT_TOURISM@@3W4MissionTypes@@A ; s_eMISSION_ONE_SHOT_TOURISM
PUBLIC	?s_eMISSION_CHANGE_ADMIRAL_PORT@@3W4MissionTypes@@A ; s_eMISSION_CHANGE_ADMIRAL_PORT
PUBLIC	?s_uiNUM_MISSION_TYPES@@3IA			; s_uiNUM_MISSION_TYPES
_BSS	SEGMENT
?s_eARTIFACT_ANCIENT_RUIN@@3W4GreatWorkArtifactClass@@A DD 01H DUP (?) ; s_eARTIFACT_ANCIENT_RUIN
?s_eARTIFACT_BARBARIAN_CAMP@@3W4GreatWorkArtifactClass@@A DD 01H DUP (?) ; s_eARTIFACT_BARBARIAN_CAMP
?s_eARTIFACT_BATTLE_RANGED@@3W4GreatWorkArtifactClass@@A DD 01H DUP (?) ; s_eARTIFACT_BATTLE_RANGED
?s_eARTIFACT_BATTLE_MELEE@@3W4GreatWorkArtifactClass@@A DD 01H DUP (?) ; s_eARTIFACT_BATTLE_MELEE
?s_eARTIFACT_RAZED_CITY@@3W4GreatWorkArtifactClass@@A DD 01H DUP (?) ; s_eARTIFACT_RAZED_CITY
?s_eARTIFACT_WRITING@@3W4GreatWorkArtifactClass@@A DD 01H DUP (?) ; s_eARTIFACT_WRITING
?s_uiNUM_MISSION_TYPES@@3IA DD 01H DUP (?)		; s_uiNUM_MISSION_TYPES
_BSS	ENDS
_DATA	SEGMENT
?s_eGREAT_WORK_SLOT_ART_ARTIFACT@@3W4GreatWorkSlotType@@A DD 0ffffffffH ; s_eGREAT_WORK_SLOT_ART_ARTIFACT
?s_eGREAT_WORK_SLOT_LITERATURE@@3W4GreatWorkSlotType@@A DD 0ffffffffH ; s_eGREAT_WORK_SLOT_LITERATURE
?s_eGREAT_WORK_SLOT_MUSIC@@3W4GreatWorkSlotType@@A DD 0ffffffffH ; s_eGREAT_WORK_SLOT_MUSIC
?s_eMISSION_MOVE_TO@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_MOVE_TO
?s_eMISSION_ROUTE_TO@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_ROUTE_TO
?s_eMISSION_MOVE_TO_UNIT@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_MOVE_TO_UNIT
?s_eMISSION_SWAP_UNITS@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_SWAP_UNITS
?s_eMISSION_SKIP@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_SKIP
?s_eMISSION_SLEEP@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_SLEEP
?s_eMISSION_ALERT@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_ALERT
?s_eMISSION_FORTIFY@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_FORTIFY
?s_eMISSION_GARRISON@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_GARRISON
?s_eMISSION_SET_UP_FOR_RANGED_ATTACK@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_SET_UP_FOR_RANGED_ATTACK
?s_eMISSION_EMBARK@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_EMBARK
?s_eMISSION_DISEMBARK@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_DISEMBARK
?s_eMISSION_AIRPATROL@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_AIRPATROL
?s_eMISSION_HEAL@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_HEAL
?s_eMISSION_AIRLIFT@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_AIRLIFT
?s_eMISSION_NUKE@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_NUKE
?s_eMISSION_PARADROP@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_PARADROP
?s_eMISSION_AIR_SWEEP@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_AIR_SWEEP
?s_eMISSION_REBASE@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_REBASE
?s_eMISSION_RANGE_ATTACK@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_RANGE_ATTACK
?s_eMISSION_PILLAGE@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_PILLAGE
?s_eMISSION_FOUND@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_FOUND
?s_eMISSION_JOIN@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_JOIN
?s_eMISSION_CONSTRUCT@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_CONSTRUCT
?s_eMISSION_DISCOVER@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_DISCOVER
?s_eMISSION_HURRY@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_HURRY
?s_eMISSION_TRADE@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_TRADE
?s_eMISSION_BUY_CITY_STATE@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_BUY_CITY_STATE
?s_eMISSION_REPAIR_FLEET@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_REPAIR_FLEET
?s_eMISSION_SPACESHIP@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_SPACESHIP
?s_eMISSION_CULTURE_BOMB@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_CULTURE_BOMB
?s_eMISSION_FOUND_RELIGION@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_FOUND_RELIGION
?s_eMISSION_GOLDEN_AGE@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_GOLDEN_AGE
?s_eMISSION_BUILD@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_BUILD
?s_eMISSION_LEAD@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_LEAD
?s_eMISSION_DIE_ANIMATION@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_DIE_ANIMATION
?s_eMISSION_BEGIN_COMBAT@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_BEGIN_COMBAT
?s_eMISSION_END_COMBAT@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_END_COMBAT
?s_eMISSION_AIRSTRIKE@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_AIRSTRIKE
?s_eMISSION_SURRENDER@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_SURRENDER
?s_eMISSION_CAPTURED@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_CAPTURED
?s_eMISSION_IDLE@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_IDLE
?s_eMISSION_DIE@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_DIE
?s_eMISSION_DAMAGE@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_DAMAGE
?s_eMISSION_MULTI_SELECT@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_MULTI_SELECT
?s_eMISSION_MULTI_DESELECT@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_MULTI_DESELECT
?s_eMISSION_WAIT_FOR@@3W4MissionTypes@@A DD 0ffffffffH	; s_eMISSION_WAIT_FOR
?s_eMISSION_SPREAD_RELIGION@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_SPREAD_RELIGION
?s_eMISSION_ENHANCE_RELIGION@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_ENHANCE_RELIGION
?s_eMISSION_REMOVE_HERESY@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_REMOVE_HERESY
?s_eMISSION_ESTABLISH_TRADE_ROUTE@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_ESTABLISH_TRADE_ROUTE
?s_eMISSION_PLUNDER_TRADE_ROUTE@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_PLUNDER_TRADE_ROUTE
?s_eMISSION_GREAT_WORK@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_GREAT_WORK
?s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY
?s_eMISSION_SELL_EXOTIC_GOODS@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_SELL_EXOTIC_GOODS
?s_eMISSION_GIVE_POLICIES@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_GIVE_POLICIES
?s_eMISSION_ONE_SHOT_TOURISM@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_ONE_SHOT_TOURISM
?s_eMISSION_CHANGE_ADMIRAL_PORT@@3W4MissionTypes@@A DD 0ffffffffH ; s_eMISSION_CHANGE_ADMIRAL_PORT
_DATA	ENDS
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>
PUBLIC	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
PUBLIC	??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@tr1@std@@QAE@XZ ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
PUBLIC	??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
PUBLIC	??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
PUBLIC	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>
PUBLIC	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
PUBLIC	??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@tr1@std@@QAE@XZ ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
PUBLIC	??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
PUBLIC	??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
PUBLIC	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>
PUBLIC	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
PUBLIC	??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@tr1@std@@QAE@XZ ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
PUBLIC	??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >
PUBLIC	??_C@_0EI@GBBLEJGE@MissionType?5?9?5?$CFs?5is?5used?5in?5the?5@ ; `string'
PUBLIC	??_C@_08BIIFDPDO@Missions?$AA@			; `string'
PUBLIC	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::lower_bound
PUBLIC	??_C@_0BO@BDJODNLG@SELECT?5Type?0?5ID?5from?5Missions?$AA@ ; `string'
PUBLIC	??_C@_0BM@MFANNJKP@MISSION_CHANGE_ADMIRAL_PORT?$AA@ ; `string'
PUBLIC	??_C@_0BJ@EJBMPPFF@MISSION_ONE_SHOT_TOURISM?$AA@ ; `string'
PUBLIC	??_C@_0BG@LOAGIFNL@MISSION_GIVE_POLICIES?$AA@	; `string'
PUBLIC	??_C@_0BK@ICBBGKKM@MISSION_SELL_EXOTIC_GOODS?$AA@ ; `string'
PUBLIC	??_C@_0CE@EABDKEKH@MISSION_CHANGE_TRADE_UNIT_HOME_C@ ; `string'
PUBLIC	??_C@_0BK@LFMKFHIN@MISSION_CREATE_GREAT_WORK?$AA@ ; `string'
PUBLIC	??_C@_0BM@IPGLACPM@MISSION_PLUNDER_TRADE_ROUTE?$AA@ ; `string'
PUBLIC	??_C@_0BO@FAGJDEEL@MISSION_ESTABLISH_TRADE_ROUTE?$AA@ ; `string'
PUBLIC	??_C@_0BG@EJOOLACC@MISSION_REMOVE_HERESY?$AA@	; `string'
PUBLIC	??_C@_0BJ@CAFCOFIP@MISSION_ENHANCE_RELIGION?$AA@ ; `string'
PUBLIC	??_C@_0BI@KPKBBILE@MISSION_SPREAD_RELIGION?$AA@	; `string'
PUBLIC	??_C@_0BB@LIFCDCDE@MISSION_WAIT_FOR?$AA@	; `string'
PUBLIC	??_C@_0BH@BGKGPINP@MISSION_MULTI_DESELECT?$AA@	; `string'
PUBLIC	??_C@_0BF@HKMBIDLB@MISSION_MULTI_SELECT?$AA@	; `string'
PUBLIC	??_C@_0P@FJCBGHCF@MISSION_DAMAGE?$AA@		; `string'
PUBLIC	??_C@_0M@HDKMMFCJ@MISSION_DIE?$AA@		; `string'
PUBLIC	??_C@_0N@MKOEKIAK@MISSION_IDLE?$AA@		; `string'
PUBLIC	??_C@_0BB@DPPMBADM@MISSION_CAPTURED?$AA@	; `string'
PUBLIC	??_C@_0BC@EPBCGKNJ@MISSION_SURRENDER?$AA@	; `string'
PUBLIC	??_C@_0BC@BACHFLCB@MISSION_AIRSTRIKE?$AA@	; `string'
PUBLIC	??_C@_0BD@NKGOBLIJ@MISSION_END_COMBAT?$AA@	; `string'
PUBLIC	??_C@_0BF@KBMPCBGC@MISSION_BEGIN_COMBAT?$AA@	; `string'
PUBLIC	??_C@_0BG@EKNAJPN@MISSION_DIE_ANIMATION?$AA@	; `string'
PUBLIC	??_C@_0N@KLHLOCAN@MISSION_LEAD?$AA@		; `string'
PUBLIC	??_C@_0O@HLECACPL@MISSION_BUILD?$AA@		; `string'
PUBLIC	??_C@_0BD@IEJECC@MISSION_GOLDEN_AGE?$AA@	; `string'
PUBLIC	??_C@_0BH@NPEBMGMP@MISSION_FOUND_RELIGION?$AA@	; `string'
PUBLIC	??_C@_0BF@DBBOGFGE@MISSION_CULTURE_BOMB?$AA@	; `string'
PUBLIC	??_C@_0BC@NPJCPJEJ@MISSION_SPACESHIP?$AA@	; `string'
PUBLIC	??_C@_0BF@FOHJHALL@MISSION_REPAIR_FLEET?$AA@	; `string'
PUBLIC	??_C@_0BH@FCDCBDLI@MISSION_BUY_CITY_STATE?$AA@	; `string'
PUBLIC	??_C@_0O@MOFBHHHL@MISSION_TRADE?$AA@		; `string'
PUBLIC	??_C@_0O@LEBFBDGF@MISSION_HURRY?$AA@		; `string'
PUBLIC	??_C@_0BB@BOOJODFN@MISSION_DISCOVER?$AA@	; `string'
PUBLIC	??_C@_0BC@LNJEMHN@MISSION_CONSTRUCT?$AA@	; `string'
PUBLIC	??_C@_0N@LPHKEOPL@MISSION_JOIN?$AA@		; `string'
PUBLIC	??_C@_0O@NDMIPDIH@MISSION_FOUND?$AA@		; `string'
PUBLIC	??_C@_0BA@BIGOKDHA@MISSION_PILLAGE?$AA@		; `string'
PUBLIC	??_C@_0BF@LOAKEPLA@MISSION_RANGE_ATTACK?$AA@	; `string'
PUBLIC	??_C@_0P@FPMBBALK@MISSION_REBASE?$AA@		; `string'
PUBLIC	??_C@_0BC@HFJPPKDL@MISSION_AIR_SWEEP?$AA@	; `string'
PUBLIC	??_C@_0BB@BAIMAADI@MISSION_PARADROP?$AA@	; `string'
PUBLIC	??_C@_0N@JFCOFCGF@MISSION_NUKE?$AA@		; `string'
PUBLIC	??_C@_0BA@GAMJAOG@MISSION_AIRLIFT?$AA@		; `string'
PUBLIC	??_C@_0N@JGCCMOMF@MISSION_HEAL?$AA@		; `string'
PUBLIC	??_C@_0BC@KMEHOEDP@MISSION_AIRPATROL?$AA@	; `string'
PUBLIC	??_C@_0BC@DCFDGAEA@MISSION_DISEMBARK?$AA@	; `string'
PUBLIC	??_C@_0P@IOKKHHCO@MISSION_EMBARK?$AA@		; `string'
PUBLIC	??_C@_0CB@GCBCFJNP@MISSION_SET_UP_FOR_RANGED_ATTACK@ ; `string'
PUBLIC	??_C@_0BB@MJACMDLO@MISSION_GARRISON?$AA@	; `string'
PUBLIC	??_C@_0BA@IKCHAOML@MISSION_FORTIFY?$AA@		; `string'
PUBLIC	??_C@_0O@IGIKKGDF@MISSION_ALERT?$AA@		; `string'
PUBLIC	??_C@_0O@LFJBHFFE@MISSION_SLEEP?$AA@		; `string'
PUBLIC	??_C@_0N@IJKJBDIA@MISSION_SKIP?$AA@		; `string'
PUBLIC	??_C@_0BD@BDBPDFAK@MISSION_SWAP_UNITS?$AA@	; `string'
PUBLIC	??_C@_0BF@CPDOPHHL@MISSION_MOVE_TO_UNIT?$AA@	; `string'
PUBLIC	??_C@_0BB@KPGPCEEI@MISSION_ROUTE_TO?$AA@	; `string'
PUBLIC	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
PUBLIC	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
PUBLIC	??_C@_0BA@GHBECEDD@MISSION_MOVE_TO?$AA@		; `string'
PUBLIC	??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >
PUBLIC	?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Tidy
PUBLIC	?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Tidy
PUBLIC	??_C@_0EO@LHBFGGEG@GreatWorkSlotType?5?9?5?$CFs?5is?5used?5i@ ; `string'
PUBLIC	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::lower_bound
PUBLIC	??_C@_0CE@MCMINNCJ@SELECT?5Type?0?5ID?5from?5GreatWorkSl@ ; `string'
PUBLIC	??_C@_0BG@BDIEOOGE@GREAT_WORK_SLOT_MUSIC?$AA@	; `string'
PUBLIC	??_C@_0BL@MEMIEKNO@GREAT_WORK_SLOT_LITERATURE?$AA@ ; `string'
PUBLIC	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Insert
PUBLIC	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
PUBLIC	??_C@_0BN@CGPMDLDK@GREAT_WORK_SLOT_ART_ARTIFACT?$AA@ ; `string'
PUBLIC	??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >
PUBLIC	?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Tidy
PUBLIC	?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Tidy
PUBLIC	??_C@_0N@GNBOCNM@Gamecore?4log?$AA@		; `string'
PUBLIC	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ		; sprintf_s<256>
PUBLIC	??_C@_0EJ@DFFLCDJG@ArtifactType?5?9?5?$CFs?5is?5used?5in?5the@ ; `string'
PUBLIC	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::lower_bound
PUBLIC	??_C@_0CO@IBNCHGPL@SELECT?5Type?0?5ID?5from?5GreatWorkAr@ ; `string'
PUBLIC	??_C@_0BB@IBFOPINB@ARTIFACT_WRITING?$AA@	; `string'
PUBLIC	??_C@_0BE@POGCPAJA@ARTIFACT_RAZED_CITY?$AA@	; `string'
PUBLIC	??_C@_0BG@EOLFDHMN@ARTIFACT_BATTLE_MELEE?$AA@	; `string'
PUBLIC	??_C@_0BH@KLEALEOB@ARTIFACT_BATTLE_RANGED?$AA@	; `string'
PUBLIC	??_C@_0BI@EGCECJKF@ARTIFACT_BARBARIAN_CAMP?$AA@	; `string'
PUBLIC	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
PUBLIC	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
PUBLIC	??_C@_0BG@HMJJDBCN@ARTIFACT_ANCIENT_RUIN?$AA@	; `string'
PUBLIC	??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >
PUBLIC	__$ArrayPad$
PUBLIC	?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z ; CvTypes::AcquireTypes
EXTRN	__imp_?Count@Connection@Database@@QAEHPBD_N@Z:PROC
EXTRN	__imp_??1Results@Database@@UAE@XZ:PROC
EXTRN	?GetInstance@FILogFileMgr@@SAAAV1@XZ:PROC	; FILogFileMgr::GetInstance
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
EXTRN	__imp_?GetInt@Results@Database@@QAEHH@Z:PROC
EXTRN	__imp_?GetText@Results@Database@@QAEPBDH@Z:PROC
EXTRN	__imp_?Step@Results@Database@@QAE_NXZ:PROC
EXTRN	__imp_?Execute@Connection@Database@@QBE_NAAVResults@2@PBDH@Z:PROC
EXTRN	__imp_??0Results@Database@@QAE@PBD@Z:PROC
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0EI@GBBLEJGE@MissionType?5?9?5?$CFs?5is?5used?5in?5the?5@
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
CONST	SEGMENT
??_C@_0EI@GBBLEJGE@MissionType?5?9?5?$CFs?5is?5used?5in?5the?5@ DB 'Missi'
	DB	'onType - %s is used in the DLL but does not exist in the data'
	DB	'base.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08BIIFDPDO@Missions?$AA@
CONST	SEGMENT
??_C@_08BIIFDPDO@Missions?$AA@ DB 'Missions', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BDJODNLG@SELECT?5Type?0?5ID?5from?5Missions?$AA@
CONST	SEGMENT
??_C@_0BO@BDJODNLG@SELECT?5Type?0?5ID?5from?5Missions?$AA@ DB 'SELECT Typ'
	DB	'e, ID from Missions', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MFANNJKP@MISSION_CHANGE_ADMIRAL_PORT?$AA@
CONST	SEGMENT
??_C@_0BM@MFANNJKP@MISSION_CHANGE_ADMIRAL_PORT?$AA@ DB 'MISSION_CHANGE_AD'
	DB	'MIRAL_PORT', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EJBMPPFF@MISSION_ONE_SHOT_TOURISM?$AA@
CONST	SEGMENT
??_C@_0BJ@EJBMPPFF@MISSION_ONE_SHOT_TOURISM?$AA@ DB 'MISSION_ONE_SHOT_TOU'
	DB	'RISM', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LOAGIFNL@MISSION_GIVE_POLICIES?$AA@
CONST	SEGMENT
??_C@_0BG@LOAGIFNL@MISSION_GIVE_POLICIES?$AA@ DB 'MISSION_GIVE_POLICIES', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@ICBBGKKM@MISSION_SELL_EXOTIC_GOODS?$AA@
CONST	SEGMENT
??_C@_0BK@ICBBGKKM@MISSION_SELL_EXOTIC_GOODS?$AA@ DB 'MISSION_SELL_EXOTIC'
	DB	'_GOODS', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@EABDKEKH@MISSION_CHANGE_TRADE_UNIT_HOME_C@
CONST	SEGMENT
??_C@_0CE@EABDKEKH@MISSION_CHANGE_TRADE_UNIT_HOME_C@ DB 'MISSION_CHANGE_T'
	DB	'RADE_UNIT_HOME_CITY', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LFMKFHIN@MISSION_CREATE_GREAT_WORK?$AA@
CONST	SEGMENT
??_C@_0BK@LFMKFHIN@MISSION_CREATE_GREAT_WORK?$AA@ DB 'MISSION_CREATE_GREA'
	DB	'T_WORK', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IPGLACPM@MISSION_PLUNDER_TRADE_ROUTE?$AA@
CONST	SEGMENT
??_C@_0BM@IPGLACPM@MISSION_PLUNDER_TRADE_ROUTE?$AA@ DB 'MISSION_PLUNDER_T'
	DB	'RADE_ROUTE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FAGJDEEL@MISSION_ESTABLISH_TRADE_ROUTE?$AA@
CONST	SEGMENT
??_C@_0BO@FAGJDEEL@MISSION_ESTABLISH_TRADE_ROUTE?$AA@ DB 'MISSION_ESTABLI'
	DB	'SH_TRADE_ROUTE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EJOOLACC@MISSION_REMOVE_HERESY?$AA@
CONST	SEGMENT
??_C@_0BG@EJOOLACC@MISSION_REMOVE_HERESY?$AA@ DB 'MISSION_REMOVE_HERESY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CAFCOFIP@MISSION_ENHANCE_RELIGION?$AA@
CONST	SEGMENT
??_C@_0BJ@CAFCOFIP@MISSION_ENHANCE_RELIGION?$AA@ DB 'MISSION_ENHANCE_RELI'
	DB	'GION', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KPKBBILE@MISSION_SPREAD_RELIGION?$AA@
CONST	SEGMENT
??_C@_0BI@KPKBBILE@MISSION_SPREAD_RELIGION?$AA@ DB 'MISSION_SPREAD_RELIGI'
	DB	'ON', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LIFCDCDE@MISSION_WAIT_FOR?$AA@
CONST	SEGMENT
??_C@_0BB@LIFCDCDE@MISSION_WAIT_FOR?$AA@ DB 'MISSION_WAIT_FOR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BGKGPINP@MISSION_MULTI_DESELECT?$AA@
CONST	SEGMENT
??_C@_0BH@BGKGPINP@MISSION_MULTI_DESELECT?$AA@ DB 'MISSION_MULTI_DESELECT'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HKMBIDLB@MISSION_MULTI_SELECT?$AA@
CONST	SEGMENT
??_C@_0BF@HKMBIDLB@MISSION_MULTI_SELECT?$AA@ DB 'MISSION_MULTI_SELECT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FJCBGHCF@MISSION_DAMAGE?$AA@
CONST	SEGMENT
??_C@_0P@FJCBGHCF@MISSION_DAMAGE?$AA@ DB 'MISSION_DAMAGE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HDKMMFCJ@MISSION_DIE?$AA@
CONST	SEGMENT
??_C@_0M@HDKMMFCJ@MISSION_DIE?$AA@ DB 'MISSION_DIE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MKOEKIAK@MISSION_IDLE?$AA@
CONST	SEGMENT
??_C@_0N@MKOEKIAK@MISSION_IDLE?$AA@ DB 'MISSION_IDLE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DPPMBADM@MISSION_CAPTURED?$AA@
CONST	SEGMENT
??_C@_0BB@DPPMBADM@MISSION_CAPTURED?$AA@ DB 'MISSION_CAPTURED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EPBCGKNJ@MISSION_SURRENDER?$AA@
CONST	SEGMENT
??_C@_0BC@EPBCGKNJ@MISSION_SURRENDER?$AA@ DB 'MISSION_SURRENDER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BACHFLCB@MISSION_AIRSTRIKE?$AA@
CONST	SEGMENT
??_C@_0BC@BACHFLCB@MISSION_AIRSTRIKE?$AA@ DB 'MISSION_AIRSTRIKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NKGOBLIJ@MISSION_END_COMBAT?$AA@
CONST	SEGMENT
??_C@_0BD@NKGOBLIJ@MISSION_END_COMBAT?$AA@ DB 'MISSION_END_COMBAT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KBMPCBGC@MISSION_BEGIN_COMBAT?$AA@
CONST	SEGMENT
??_C@_0BF@KBMPCBGC@MISSION_BEGIN_COMBAT?$AA@ DB 'MISSION_BEGIN_COMBAT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EKNAJPN@MISSION_DIE_ANIMATION?$AA@
CONST	SEGMENT
??_C@_0BG@EKNAJPN@MISSION_DIE_ANIMATION?$AA@ DB 'MISSION_DIE_ANIMATION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KLHLOCAN@MISSION_LEAD?$AA@
CONST	SEGMENT
??_C@_0N@KLHLOCAN@MISSION_LEAD?$AA@ DB 'MISSION_LEAD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HLECACPL@MISSION_BUILD?$AA@
CONST	SEGMENT
??_C@_0O@HLECACPL@MISSION_BUILD?$AA@ DB 'MISSION_BUILD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IEJECC@MISSION_GOLDEN_AGE?$AA@
CONST	SEGMENT
??_C@_0BD@IEJECC@MISSION_GOLDEN_AGE?$AA@ DB 'MISSION_GOLDEN_AGE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NPEBMGMP@MISSION_FOUND_RELIGION?$AA@
CONST	SEGMENT
??_C@_0BH@NPEBMGMP@MISSION_FOUND_RELIGION?$AA@ DB 'MISSION_FOUND_RELIGION'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DBBOGFGE@MISSION_CULTURE_BOMB?$AA@
CONST	SEGMENT
??_C@_0BF@DBBOGFGE@MISSION_CULTURE_BOMB?$AA@ DB 'MISSION_CULTURE_BOMB', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NPJCPJEJ@MISSION_SPACESHIP?$AA@
CONST	SEGMENT
??_C@_0BC@NPJCPJEJ@MISSION_SPACESHIP?$AA@ DB 'MISSION_SPACESHIP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FOHJHALL@MISSION_REPAIR_FLEET?$AA@
CONST	SEGMENT
??_C@_0BF@FOHJHALL@MISSION_REPAIR_FLEET?$AA@ DB 'MISSION_REPAIR_FLEET', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FCDCBDLI@MISSION_BUY_CITY_STATE?$AA@
CONST	SEGMENT
??_C@_0BH@FCDCBDLI@MISSION_BUY_CITY_STATE?$AA@ DB 'MISSION_BUY_CITY_STATE'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MOFBHHHL@MISSION_TRADE?$AA@
CONST	SEGMENT
??_C@_0O@MOFBHHHL@MISSION_TRADE?$AA@ DB 'MISSION_TRADE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LEBFBDGF@MISSION_HURRY?$AA@
CONST	SEGMENT
??_C@_0O@LEBFBDGF@MISSION_HURRY?$AA@ DB 'MISSION_HURRY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BOOJODFN@MISSION_DISCOVER?$AA@
CONST	SEGMENT
??_C@_0BB@BOOJODFN@MISSION_DISCOVER?$AA@ DB 'MISSION_DISCOVER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LNJEMHN@MISSION_CONSTRUCT?$AA@
CONST	SEGMENT
??_C@_0BC@LNJEMHN@MISSION_CONSTRUCT?$AA@ DB 'MISSION_CONSTRUCT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPHKEOPL@MISSION_JOIN?$AA@
CONST	SEGMENT
??_C@_0N@LPHKEOPL@MISSION_JOIN?$AA@ DB 'MISSION_JOIN', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NDMIPDIH@MISSION_FOUND?$AA@
CONST	SEGMENT
??_C@_0O@NDMIPDIH@MISSION_FOUND?$AA@ DB 'MISSION_FOUND', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BIGOKDHA@MISSION_PILLAGE?$AA@
CONST	SEGMENT
??_C@_0BA@BIGOKDHA@MISSION_PILLAGE?$AA@ DB 'MISSION_PILLAGE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LOAKEPLA@MISSION_RANGE_ATTACK?$AA@
CONST	SEGMENT
??_C@_0BF@LOAKEPLA@MISSION_RANGE_ATTACK?$AA@ DB 'MISSION_RANGE_ATTACK', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FPMBBALK@MISSION_REBASE?$AA@
CONST	SEGMENT
??_C@_0P@FPMBBALK@MISSION_REBASE?$AA@ DB 'MISSION_REBASE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HFJPPKDL@MISSION_AIR_SWEEP?$AA@
CONST	SEGMENT
??_C@_0BC@HFJPPKDL@MISSION_AIR_SWEEP?$AA@ DB 'MISSION_AIR_SWEEP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BAIMAADI@MISSION_PARADROP?$AA@
CONST	SEGMENT
??_C@_0BB@BAIMAADI@MISSION_PARADROP?$AA@ DB 'MISSION_PARADROP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JFCOFCGF@MISSION_NUKE?$AA@
CONST	SEGMENT
??_C@_0N@JFCOFCGF@MISSION_NUKE?$AA@ DB 'MISSION_NUKE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GAMJAOG@MISSION_AIRLIFT?$AA@
CONST	SEGMENT
??_C@_0BA@GAMJAOG@MISSION_AIRLIFT?$AA@ DB 'MISSION_AIRLIFT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JGCCMOMF@MISSION_HEAL?$AA@
CONST	SEGMENT
??_C@_0N@JGCCMOMF@MISSION_HEAL?$AA@ DB 'MISSION_HEAL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KMEHOEDP@MISSION_AIRPATROL?$AA@
CONST	SEGMENT
??_C@_0BC@KMEHOEDP@MISSION_AIRPATROL?$AA@ DB 'MISSION_AIRPATROL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DCFDGAEA@MISSION_DISEMBARK?$AA@
CONST	SEGMENT
??_C@_0BC@DCFDGAEA@MISSION_DISEMBARK?$AA@ DB 'MISSION_DISEMBARK', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IOKKHHCO@MISSION_EMBARK?$AA@
CONST	SEGMENT
??_C@_0P@IOKKHHCO@MISSION_EMBARK?$AA@ DB 'MISSION_EMBARK', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@GCBCFJNP@MISSION_SET_UP_FOR_RANGED_ATTACK@
CONST	SEGMENT
??_C@_0CB@GCBCFJNP@MISSION_SET_UP_FOR_RANGED_ATTACK@ DB 'MISSION_SET_UP_F'
	DB	'OR_RANGED_ATTACK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MJACMDLO@MISSION_GARRISON?$AA@
CONST	SEGMENT
??_C@_0BB@MJACMDLO@MISSION_GARRISON?$AA@ DB 'MISSION_GARRISON', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IKCHAOML@MISSION_FORTIFY?$AA@
CONST	SEGMENT
??_C@_0BA@IKCHAOML@MISSION_FORTIFY?$AA@ DB 'MISSION_FORTIFY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IGIKKGDF@MISSION_ALERT?$AA@
CONST	SEGMENT
??_C@_0O@IGIKKGDF@MISSION_ALERT?$AA@ DB 'MISSION_ALERT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LFJBHFFE@MISSION_SLEEP?$AA@
CONST	SEGMENT
??_C@_0O@LFJBHFFE@MISSION_SLEEP?$AA@ DB 'MISSION_SLEEP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IJKJBDIA@MISSION_SKIP?$AA@
CONST	SEGMENT
??_C@_0N@IJKJBDIA@MISSION_SKIP?$AA@ DB 'MISSION_SKIP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BDBPDFAK@MISSION_SWAP_UNITS?$AA@
CONST	SEGMENT
??_C@_0BD@BDBPDFAK@MISSION_SWAP_UNITS?$AA@ DB 'MISSION_SWAP_UNITS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CPDOPHHL@MISSION_MOVE_TO_UNIT?$AA@
CONST	SEGMENT
??_C@_0BF@CPDOPHHL@MISSION_MOVE_TO_UNIT?$AA@ DB 'MISSION_MOVE_TO_UNIT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KPGPCEEI@MISSION_ROUTE_TO?$AA@
CONST	SEGMENT
??_C@_0BB@KPGPCEEI@MISSION_ROUTE_TO?$AA@ DB 'MISSION_ROUTE_TO', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GHBECEDD@MISSION_MOVE_TO?$AA@
CONST	SEGMENT
??_C@_0BA@GHBECEDD@MISSION_MOVE_TO?$AA@ DB 'MISSION_MOVE_TO', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@LHBFGGEG@GreatWorkSlotType?5?9?5?$CFs?5is?5used?5i@
CONST	SEGMENT
??_C@_0EO@LHBFGGEG@GreatWorkSlotType?5?9?5?$CFs?5is?5used?5i@ DB 'GreatWo'
	DB	'rkSlotType - %s is used in the DLL but does not exist in the '
	DB	'database.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@MCMINNCJ@SELECT?5Type?0?5ID?5from?5GreatWorkSl@
CONST	SEGMENT
??_C@_0CE@MCMINNCJ@SELECT?5Type?0?5ID?5from?5GreatWorkSl@ DB 'SELECT Type'
	DB	', ID from GreatWorkSlots', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BDIEOOGE@GREAT_WORK_SLOT_MUSIC?$AA@
CONST	SEGMENT
??_C@_0BG@BDIEOOGE@GREAT_WORK_SLOT_MUSIC?$AA@ DB 'GREAT_WORK_SLOT_MUSIC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MEMIEKNO@GREAT_WORK_SLOT_LITERATURE?$AA@
CONST	SEGMENT
??_C@_0BL@MEMIEKNO@GREAT_WORK_SLOT_LITERATURE?$AA@ DB 'GREAT_WORK_SLOT_LI'
	DB	'TERATURE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CGPMDLDK@GREAT_WORK_SLOT_ART_ARTIFACT?$AA@
CONST	SEGMENT
??_C@_0BN@CGPMDLDK@GREAT_WORK_SLOT_ART_ARTIFACT?$AA@ DB 'GREAT_WORK_SLOT_'
	DB	'ART_ARTIFACT', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GNBOCNM@Gamecore?4log?$AA@
CONST	SEGMENT
??_C@_0N@GNBOCNM@Gamecore?4log?$AA@ DB 'Gamecore.log', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@DFFLCDJG@ArtifactType?5?9?5?$CFs?5is?5used?5in?5the@
CONST	SEGMENT
??_C@_0EJ@DFFLCDJG@ArtifactType?5?9?5?$CFs?5is?5used?5in?5the@ DB 'Artifa'
	DB	'ctType - %s is used in the DLL but does not exist in the data'
	DB	'base.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@IBNCHGPL@SELECT?5Type?0?5ID?5from?5GreatWorkAr@
CONST	SEGMENT
??_C@_0CO@IBNCHGPL@SELECT?5Type?0?5ID?5from?5GreatWorkAr@ DB 'SELECT Type'
	DB	', ID from GreatWorkArtifactClasses', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IBFOPINB@ARTIFACT_WRITING?$AA@
CONST	SEGMENT
??_C@_0BB@IBFOPINB@ARTIFACT_WRITING?$AA@ DB 'ARTIFACT_WRITING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@POGCPAJA@ARTIFACT_RAZED_CITY?$AA@
CONST	SEGMENT
??_C@_0BE@POGCPAJA@ARTIFACT_RAZED_CITY?$AA@ DB 'ARTIFACT_RAZED_CITY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EOLFDHMN@ARTIFACT_BATTLE_MELEE?$AA@
CONST	SEGMENT
??_C@_0BG@EOLFDHMN@ARTIFACT_BATTLE_MELEE?$AA@ DB 'ARTIFACT_BATTLE_MELEE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KLEALEOB@ARTIFACT_BATTLE_RANGED?$AA@
CONST	SEGMENT
??_C@_0BH@KLEALEOB@ARTIFACT_BATTLE_RANGED?$AA@ DB 'ARTIFACT_BATTLE_RANGED'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EGCECJKF@ARTIFACT_BARBARIAN_CAMP?$AA@
CONST	SEGMENT
??_C@_0BI@EGCECJKF@ARTIFACT_BARBARIAN_CAMP?$AA@ DB 'ARTIFACT_BARBARIAN_CA'
	DB	'MP', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HMJJDBCN@ARTIFACT_ANCIENT_RUIN?$AA@
CONST	SEGMENT
??_C@_0BG@HMJJDBCN@ARTIFACT_ANCIENT_RUIN?$AA@ DB 'ARTIFACT_ANCIENT_RUIN', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z DD 019930522H
	DD	095H
	DD	FLAT:__unwindtable$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$8
	DD	05H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$9
	DD	00H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$11
	DD	07H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$12
	DD	00H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$14
	DD	09H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$15
	DD	00H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$17
	DD	0bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$18
	DD	00H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$19
	DD	0dH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$20
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$230
	DD	0fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$232
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$234
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$21
	DD	012H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$23
	DD	013H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$24
	DD	012H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$26
	DD	015H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$27
	DD	012H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$29
	DD	017H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$30
	DD	012H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$31
	DD	019H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$32
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$249
	DD	01bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$251
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$253
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$33
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$35
	DD	01fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$36
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$38
	DD	021H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$39
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$41
	DD	023H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$42
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$44
	DD	025H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$45
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$47
	DD	027H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$48
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$50
	DD	029H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$51
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$53
	DD	02bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$54
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$56
	DD	02dH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$57
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$59
	DD	02fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$60
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$62
	DD	031H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$63
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$65
	DD	033H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$66
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$68
	DD	035H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$69
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$71
	DD	037H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$72
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$74
	DD	039H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$75
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$77
	DD	03bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$78
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$80
	DD	03dH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$81
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$83
	DD	03fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$84
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$86
	DD	041H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$87
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$89
	DD	043H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$90
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$92
	DD	045H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$93
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$95
	DD	047H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$96
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$98
	DD	049H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$99
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$101
	DD	04bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$102
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$104
	DD	04dH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$105
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$107
	DD	04fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$108
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$110
	DD	051H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$111
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$113
	DD	053H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$114
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$116
	DD	055H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$117
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$119
	DD	057H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$120
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$122
	DD	059H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$123
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$125
	DD	05bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$126
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$128
	DD	05dH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$129
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$131
	DD	05fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$132
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$134
	DD	061H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$135
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$137
	DD	063H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$138
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$140
	DD	065H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$141
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$143
	DD	067H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$144
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$146
	DD	069H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$147
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$149
	DD	06bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$150
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$152
	DD	06dH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$153
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$155
	DD	06fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$156
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$158
	DD	071H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$159
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$161
	DD	073H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$162
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$164
	DD	075H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$165
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$167
	DD	077H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$168
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$170
	DD	079H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$171
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$173
	DD	07bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$174
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$176
	DD	07dH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$177
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$179
	DD	07fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$180
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$182
	DD	081H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$183
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$185
	DD	083H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$186
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$188
	DD	085H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$189
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$191
	DD	087H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$192
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$194
	DD	089H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$195
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$197
	DD	08bH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$198
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$200
	DD	08dH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$201
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$203
	DD	08fH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$204
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$206
	DD	091H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$207
	DD	01eH
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$208
	DD	093H
	DD	FLAT:__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$209
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvtypes.cpp
xdata$x	ENDS
;	COMDAT ?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z
_TEXT	SEGMENT
tv2858 = -8052						; size = 4
tv3341 = -8048						; size = 4
tv3340 = -8044						; size = 4
tv3334 = -8040						; size = 4
tv3333 = -8036						; size = 4
tv3327 = -8032						; size = 4
tv3326 = -8028						; size = 4
tv3320 = -8024						; size = 4
tv3319 = -8020						; size = 4
tv3313 = -8016						; size = 4
tv3312 = -8012						; size = 4
tv3306 = -8008						; size = 4
tv3305 = -8004						; size = 4
tv3299 = -8000						; size = 4
tv3298 = -7996						; size = 4
tv3292 = -7992						; size = 4
tv3291 = -7988						; size = 4
tv3285 = -7984						; size = 4
tv3284 = -7980						; size = 4
tv3278 = -7976						; size = 4
tv3277 = -7972						; size = 4
tv3271 = -7968						; size = 4
tv3270 = -7964						; size = 4
tv3264 = -7960						; size = 4
tv3263 = -7956						; size = 4
tv3257 = -7952						; size = 4
tv3256 = -7948						; size = 4
tv3250 = -7944						; size = 4
tv3249 = -7940						; size = 4
tv3243 = -7936						; size = 4
tv3242 = -7932						; size = 4
tv3236 = -7928						; size = 4
tv3235 = -7924						; size = 4
tv3229 = -7920						; size = 4
tv3228 = -7916						; size = 4
tv3222 = -7912						; size = 4
tv3221 = -7908						; size = 4
tv3215 = -7904						; size = 4
tv3214 = -7900						; size = 4
tv3208 = -7896						; size = 4
tv3207 = -7892						; size = 4
tv3201 = -7888						; size = 4
tv3200 = -7884						; size = 4
tv3194 = -7880						; size = 4
tv3193 = -7876						; size = 4
tv3187 = -7872						; size = 4
tv3186 = -7868						; size = 4
tv3180 = -7864						; size = 4
tv3179 = -7860						; size = 4
tv3173 = -7856						; size = 4
tv3172 = -7852						; size = 4
tv3166 = -7848						; size = 4
tv3165 = -7844						; size = 4
tv3159 = -7840						; size = 4
tv3158 = -7836						; size = 4
tv3152 = -7832						; size = 4
tv3151 = -7828						; size = 4
tv3145 = -7824						; size = 4
tv3144 = -7820						; size = 4
tv3138 = -7816						; size = 4
tv3137 = -7812						; size = 4
tv3131 = -7808						; size = 4
tv3130 = -7804						; size = 4
tv3124 = -7800						; size = 4
tv3123 = -7796						; size = 4
tv3117 = -7792						; size = 4
tv3116 = -7788						; size = 4
tv3110 = -7784						; size = 4
tv3109 = -7780						; size = 4
tv3103 = -7776						; size = 4
tv3102 = -7772						; size = 4
tv3096 = -7768						; size = 4
tv3095 = -7764						; size = 4
tv3089 = -7760						; size = 4
tv3088 = -7756						; size = 4
tv3082 = -7752						; size = 4
tv3081 = -7748						; size = 4
tv3075 = -7744						; size = 4
tv3074 = -7740						; size = 4
tv3068 = -7736						; size = 4
tv3067 = -7732						; size = 4
tv3061 = -7728						; size = 4
tv3060 = -7724						; size = 4
tv3054 = -7720						; size = 4
tv3053 = -7716						; size = 4
tv3047 = -7712						; size = 4
tv3046 = -7708						; size = 4
tv3040 = -7704						; size = 4
tv3039 = -7700						; size = 4
tv3033 = -7696						; size = 4
tv3032 = -7692						; size = 4
tv3026 = -7688						; size = 4
tv3025 = -7684						; size = 4
tv3019 = -7680						; size = 4
tv3018 = -7676						; size = 4
tv3012 = -7672						; size = 4
tv3011 = -7668						; size = 4
tv3005 = -7664						; size = 4
tv3004 = -7660						; size = 4
tv2998 = -7656						; size = 4
tv2997 = -7652						; size = 4
tv2991 = -7648						; size = 4
tv2990 = -7644						; size = 4
tv2984 = -7640						; size = 4
tv2983 = -7636						; size = 4
tv2977 = -7632						; size = 4
tv2976 = -7628						; size = 4
tv2970 = -7624						; size = 4
tv2969 = -7620						; size = 4
tv2963 = -7616						; size = 4
tv2962 = -7612						; size = 4
tv2956 = -7608						; size = 4
tv2955 = -7604						; size = 4
tv2949 = -7600						; size = 4
tv2948 = -7596						; size = 4
tv2942 = -7592						; size = 4
tv2941 = -7588						; size = 4
tv615 = -7584						; size = 4
tv2932 = -7580						; size = 4
tv2931 = -7576						; size = 4
tv2925 = -7572						; size = 4
tv2924 = -7568						; size = 4
tv2918 = -7564						; size = 4
tv2917 = -7560						; size = 4
tv411 = -7556						; size = 4
tv2908 = -7552						; size = 4
tv2907 = -7548						; size = 4
tv2901 = -7544						; size = 4
tv2900 = -7540						; size = 4
tv2894 = -7536						; size = 4
tv2893 = -7532						; size = 4
tv2887 = -7528						; size = 4
tv2886 = -7524						; size = 4
tv2880 = -7520						; size = 4
tv2879 = -7516						; size = 4
tv2873 = -7512						; size = 4
tv2872 = -7508						; size = 4
$T230799 = -7436					; size = 4
$T230728 = -7432					; size = 4
$T230684 = -7428					; size = 4
$T230675 = -7424					; size = 4
$T230669 = -7420					; size = 4
$T230622 = -7416					; size = 4
$T230155 = -7240					; size = 4
$T230435 = -7236					; size = 4
$T230142 = -7232					; size = 4
$T230104 = -7228					; size = 4
$T230121 = -7224					; size = 4
$T230091 = -7220					; size = 4
$T230053 = -7216					; size = 4
$T230070 = -7212					; size = 4
$T230040 = -7208					; size = 4
$T230002 = -7204					; size = 4
$T230019 = -7200					; size = 4
$T229989 = -7196					; size = 4
$T229951 = -7192					; size = 4
$T229968 = -7188					; size = 4
$T229938 = -7184					; size = 4
$T229900 = -7180					; size = 4
$T229917 = -7176					; size = 4
$T229887 = -7172					; size = 4
$T229849 = -7168					; size = 4
$T229866 = -7164					; size = 4
$T229836 = -7160					; size = 4
$T229798 = -7156					; size = 4
$T229815 = -7152					; size = 4
$T229785 = -7148					; size = 4
$T229747 = -7144					; size = 4
$T229764 = -7140					; size = 4
$T229734 = -7136					; size = 4
$T229696 = -7132					; size = 4
$T229713 = -7128					; size = 4
$T229683 = -7124					; size = 4
$T229645 = -7120					; size = 4
$T229661 = -7116					; size = 4
$T229632 = -7112					; size = 4
$T229594 = -7108					; size = 4
$T229610 = -7104					; size = 4
$T229581 = -7100					; size = 4
$T229543 = -7096					; size = 4
$T229559 = -7092					; size = 4
$T229530 = -7088					; size = 4
$T229492 = -7084					; size = 4
$T229508 = -7080					; size = 4
$T229479 = -7076					; size = 4
$T229441 = -7072					; size = 4
$T229457 = -7068					; size = 4
$T229428 = -7064					; size = 4
$T229390 = -7060					; size = 4
$T229406 = -7056					; size = 4
$T229377 = -7052					; size = 4
$T229339 = -7048					; size = 4
$T229356 = -7044					; size = 4
$T229326 = -7040					; size = 4
$T229288 = -7036					; size = 4
$T229305 = -7032					; size = 4
$T229275 = -7028					; size = 4
$T229237 = -7024					; size = 4
$T229254 = -7020					; size = 4
$T229224 = -7016					; size = 4
$T229186 = -7012					; size = 4
$T229203 = -7008					; size = 4
$T229173 = -7004					; size = 4
$T229135 = -7000					; size = 4
$T229152 = -6996					; size = 4
$T229122 = -6992					; size = 4
$T229084 = -6988					; size = 4
$T229101 = -6984					; size = 4
$T229071 = -6980					; size = 4
$T229033 = -6976					; size = 4
$T229050 = -6972					; size = 4
$T229020 = -6968					; size = 4
$T228982 = -6964					; size = 4
$T228999 = -6960					; size = 4
$T228969 = -6956					; size = 4
$T228931 = -6952					; size = 4
$T228948 = -6948					; size = 4
$T228918 = -6944					; size = 4
$T228880 = -6940					; size = 4
$T228897 = -6936					; size = 4
$T228867 = -6932					; size = 4
$T228829 = -6928					; size = 4
$T228846 = -6924					; size = 4
$T228816 = -6920					; size = 4
$T228778 = -6916					; size = 4
$T228795 = -6912					; size = 4
$T228765 = -6908					; size = 4
$T228727 = -6904					; size = 4
$T228744 = -6900					; size = 4
$T228714 = -6896					; size = 4
$T228676 = -6892					; size = 4
$T228693 = -6888					; size = 4
$T228663 = -6884					; size = 4
$T228625 = -6880					; size = 4
$T228641 = -6876					; size = 4
$T228612 = -6872					; size = 4
$T228574 = -6868					; size = 4
$T228590 = -6864					; size = 4
$T228561 = -6860					; size = 4
$T228523 = -6856					; size = 4
$T228539 = -6852					; size = 4
$T228510 = -6848					; size = 4
$T228472 = -6844					; size = 4
$T228488 = -6840					; size = 4
$T228459 = -6836					; size = 4
$T228421 = -6832					; size = 4
$T228437 = -6828					; size = 4
$T228408 = -6824					; size = 4
$T228370 = -6820					; size = 4
$T228386 = -6816					; size = 4
$T228357 = -6812					; size = 4
$T228319 = -6808					; size = 4
$T228336 = -6804					; size = 4
$T228306 = -6800					; size = 4
$T228268 = -6796					; size = 4
$T228285 = -6792					; size = 4
$T228255 = -6788					; size = 4
$T228217 = -6784					; size = 4
$T228234 = -6780					; size = 4
$T228204 = -6776					; size = 4
$T228166 = -6772					; size = 4
$T228183 = -6768					; size = 4
$T228153 = -6764					; size = 4
$T228115 = -6760					; size = 4
$T228132 = -6756					; size = 4
$T228102 = -6752					; size = 4
$T228064 = -6748					; size = 4
$T228081 = -6744					; size = 4
$T228051 = -6740					; size = 4
$T228013 = -6736					; size = 4
$T228030 = -6732					; size = 4
$T228000 = -6728					; size = 4
$T227962 = -6724					; size = 4
$T227979 = -6720					; size = 4
$T227949 = -6716					; size = 4
$T227911 = -6712					; size = 4
$T227928 = -6708					; size = 4
$T227898 = -6704					; size = 4
$T227860 = -6700					; size = 4
$T227877 = -6696					; size = 4
$T227847 = -6692					; size = 4
$T227809 = -6688					; size = 4
$T227826 = -6684					; size = 4
$T227796 = -6680					; size = 4
$T227758 = -6676					; size = 4
$T227775 = -6672					; size = 4
$T227745 = -6668					; size = 4
$T227707 = -6664					; size = 4
$T227724 = -6660					; size = 4
$T227694 = -6656					; size = 4
$T227656 = -6652					; size = 4
$T227673 = -6648					; size = 4
$T227643 = -6644					; size = 4
$T227605 = -6640					; size = 4
$T227621 = -6636					; size = 4
$T227592 = -6632					; size = 4
$T227554 = -6628					; size = 4
$T227570 = -6624					; size = 4
$T227541 = -6620					; size = 4
$T227503 = -6616					; size = 4
$T227519 = -6612					; size = 4
$T227490 = -6608					; size = 4
$T227452 = -6604					; size = 4
$T227468 = -6600					; size = 4
$T227439 = -6596					; size = 4
$T227401 = -6592					; size = 4
$T227417 = -6588					; size = 4
$T227388 = -6584					; size = 4
$T227350 = -6580					; size = 4
$T227366 = -6576					; size = 4
$T227337 = -6572					; size = 4
$T227299 = -6568					; size = 4
$T227316 = -6564					; size = 4
$T227286 = -6560					; size = 4
$T227248 = -6556					; size = 4
$T227265 = -6552					; size = 4
$T227235 = -6548					; size = 4
$T227226 = -6543					; size = 2
$T227225 = -6541					; size = 1
$T227174 = -6540					; size = 4
$T227134 = -6536					; size = 4
$T227111 = -6532					; size = 4
$T227040 = -6528					; size = 4
$T226996 = -6524					; size = 4
$T226987 = -6520					; size = 4
$T226981 = -6516					; size = 4
$T226934 = -6512					; size = 4
$T226887 = -6508					; size = 4
$T226904 = -6504					; size = 4
$T226874 = -6500					; size = 4
$T226836 = -6496					; size = 4
$T226853 = -6492					; size = 4
$T226823 = -6488					; size = 4
$T226785 = -6484					; size = 4
$T226802 = -6480					; size = 4
$T226772 = -6476					; size = 4
$T226763 = -6471					; size = 2
$T226762 = -6469					; size = 1
$T226711 = -6468					; size = 4
$T226671 = -6464					; size = 4
$T226648 = -6460					; size = 4
$T226577 = -6456					; size = 4
$T226533 = -6452					; size = 4
$T226524 = -6448					; size = 4
$T226518 = -6444					; size = 4
$T226471 = -6440					; size = 4
$T226424 = -6436					; size = 4
$T226440 = -6432					; size = 4
$T226411 = -6428					; size = 4
$T226373 = -6424					; size = 4
$T226389 = -6420					; size = 4
$T226360 = -6416					; size = 4
$T226322 = -6412					; size = 4
$T226338 = -6408					; size = 4
$T226309 = -6404					; size = 4
$T226271 = -6400					; size = 4
$T226288 = -6396					; size = 4
$T226258 = -6392					; size = 4
$T226220 = -6388					; size = 4
$T226237 = -6384					; size = 4
$T226207 = -6380					; size = 4
$T226169 = -6376					; size = 4
$T226186 = -6372					; size = 4
$T226156 = -6368					; size = 4
$T226147 = -6363					; size = 2
$T226146 = -6361					; size = 1
$T225923 = -6360					; size = 4
$T225922 = -6356					; size = 4
$T225921 = -6352					; size = 8
$T225920 = -6344					; size = 32
$T225919 = -6312					; size = 4
$T225918 = -6308					; size = 32
$T225917 = -6276					; size = 8
$T225916 = -6268					; size = 32
$T225915 = -6236					; size = 4
$T225914 = -6232					; size = 32
$T225913 = -6200					; size = 8
$T225912 = -6192					; size = 32
$T225911 = -6160					; size = 4
$T225910 = -6156					; size = 32
$T225909 = -6124					; size = 8
$T225908 = -6116					; size = 32
$T225907 = -6084					; size = 4
$T225906 = -6080					; size = 32
$T225905 = -6048					; size = 8
$T225904 = -6040					; size = 32
$T225903 = -6008					; size = 4
$T225902 = -6004					; size = 32
$T225901 = -5972					; size = 8
$T225900 = -5964					; size = 32
$T225899 = -5932					; size = 4
$T225898 = -5928					; size = 32
$T225897 = -5896					; size = 8
$T225896 = -5888					; size = 32
$T225895 = -5856					; size = 4
$T225894 = -5852					; size = 32
$T225893 = -5820					; size = 8
$T225892 = -5812					; size = 32
$T225891 = -5780					; size = 4
$T225890 = -5776					; size = 32
$T225889 = -5744					; size = 8
$T225888 = -5736					; size = 32
$T225887 = -5704					; size = 4
$T225886 = -5700					; size = 32
$T225885 = -5668					; size = 8
$T225884 = -5660					; size = 32
$T225883 = -5628					; size = 4
$T225882 = -5624					; size = 32
$T225881 = -5592					; size = 8
$T225880 = -5584					; size = 32
$T225879 = -5552					; size = 4
$T225878 = -5548					; size = 32
$T225877 = -5516					; size = 8
$T225876 = -5508					; size = 32
$T225875 = -5476					; size = 4
$T225874 = -5472					; size = 32
$T225873 = -5440					; size = 8
$T225872 = -5432					; size = 32
$T225871 = -5400					; size = 4
$T225870 = -5396					; size = 32
$T225869 = -5364					; size = 8
$T225868 = -5356					; size = 32
$T225867 = -5324					; size = 4
$T225866 = -5320					; size = 32
$T225865 = -5288					; size = 8
$T225864 = -5280					; size = 32
$T225863 = -5248					; size = 4
$T225862 = -5244					; size = 32
$T225861 = -5212					; size = 8
$T225860 = -5204					; size = 32
$T225859 = -5172					; size = 4
$T225858 = -5168					; size = 32
$T225857 = -5136					; size = 8
$T225856 = -5128					; size = 32
$T225855 = -5096					; size = 4
$T225854 = -5092					; size = 32
$T225853 = -5060					; size = 8
$T225852 = -5052					; size = 32
$T225851 = -5020					; size = 4
$T225850 = -5016					; size = 32
$T225849 = -4984					; size = 8
$T225848 = -4976					; size = 32
$T225847 = -4944					; size = 4
$T225846 = -4940					; size = 32
$T225845 = -4908					; size = 8
$T225844 = -4900					; size = 32
$T225843 = -4868					; size = 4
$T225842 = -4864					; size = 32
$T225841 = -4832					; size = 8
$T225840 = -4824					; size = 32
$T225839 = -4792					; size = 4
$T225838 = -4788					; size = 32
$T225837 = -4756					; size = 8
$T225836 = -4748					; size = 32
$T225835 = -4716					; size = 4
$T225834 = -4712					; size = 32
$T225833 = -4680					; size = 8
$T225832 = -4672					; size = 32
$T225831 = -4640					; size = 4
$T225830 = -4636					; size = 32
$T225829 = -4604					; size = 8
$T225828 = -4596					; size = 32
$T225827 = -4564					; size = 4
$T225826 = -4560					; size = 32
$T225825 = -4528					; size = 8
$T225824 = -4520					; size = 32
$T225823 = -4488					; size = 4
$T225822 = -4484					; size = 32
$T225821 = -4452					; size = 8
$T225820 = -4444					; size = 32
$T225819 = -4412					; size = 4
$T225818 = -4408					; size = 32
$T225817 = -4376					; size = 8
$T225816 = -4368					; size = 32
$T225815 = -4336					; size = 4
$T225814 = -4332					; size = 32
$T225813 = -4300					; size = 8
$T225812 = -4292					; size = 32
$T225811 = -4260					; size = 4
$T225810 = -4256					; size = 32
$T225809 = -4224					; size = 8
$T225808 = -4216					; size = 32
$T225807 = -4184					; size = 4
$T225806 = -4180					; size = 32
$T225805 = -4148					; size = 8
$T225804 = -4140					; size = 32
$T225803 = -4108					; size = 4
$T225802 = -4104					; size = 32
$T225801 = -4072					; size = 8
$T225800 = -4064					; size = 32
$T225799 = -4032					; size = 4
$T225798 = -4028					; size = 32
$T225797 = -3996					; size = 8
$T225796 = -3988					; size = 32
$T225795 = -3956					; size = 4
$T225794 = -3952					; size = 32
$T225793 = -3920					; size = 8
$T225792 = -3912					; size = 32
$T225791 = -3880					; size = 4
$T225790 = -3876					; size = 32
$T225789 = -3844					; size = 8
$T225788 = -3836					; size = 32
$T225787 = -3804					; size = 4
$T225786 = -3800					; size = 32
$T225785 = -3768					; size = 8
$T225784 = -3760					; size = 32
$T225783 = -3728					; size = 4
$T225782 = -3724					; size = 32
$T225781 = -3692					; size = 8
$T225780 = -3684					; size = 32
$T225779 = -3652					; size = 4
$T225778 = -3648					; size = 32
$T225777 = -3616					; size = 8
$T225776 = -3608					; size = 32
$T225775 = -3576					; size = 4
$T225774 = -3572					; size = 32
$T225773 = -3540					; size = 8
$T225772 = -3532					; size = 32
$T225771 = -3500					; size = 4
$T225770 = -3496					; size = 32
$T225769 = -3464					; size = 8
$T225768 = -3456					; size = 32
$T225767 = -3424					; size = 4
$T225766 = -3420					; size = 32
$T225765 = -3388					; size = 8
$T225764 = -3380					; size = 32
$T225763 = -3348					; size = 4
$T225762 = -3344					; size = 32
$T225761 = -3312					; size = 8
$T225760 = -3304					; size = 32
$T225759 = -3272					; size = 4
$T225758 = -3268					; size = 32
$T225757 = -3236					; size = 8
$T225756 = -3228					; size = 32
$T225755 = -3196					; size = 4
$T225754 = -3192					; size = 32
$T225753 = -3160					; size = 8
$T225752 = -3152					; size = 32
$T225751 = -3120					; size = 4
$T225750 = -3116					; size = 32
$T225749 = -3084					; size = 8
$T225748 = -3076					; size = 32
$T225747 = -3044					; size = 4
$T225746 = -3040					; size = 32
$T225745 = -3008					; size = 8
$T225744 = -3000					; size = 32
$T225743 = -2968					; size = 4
$T225742 = -2964					; size = 32
$T225741 = -2932					; size = 8
$T225740 = -2924					; size = 32
$T225739 = -2892					; size = 4
$T225738 = -2888					; size = 32
$T225737 = -2856					; size = 8
$T225736 = -2848					; size = 32
$T225735 = -2816					; size = 4
$T225734 = -2812					; size = 32
$T225733 = -2780					; size = 8
$T225732 = -2772					; size = 32
$T225731 = -2740					; size = 4
$T225730 = -2736					; size = 32
$T225729 = -2704					; size = 8
$T225728 = -2696					; size = 32
$T225727 = -2664					; size = 4
$T225726 = -2660					; size = 32
$T225725 = -2628					; size = 8
$T225724 = -2620					; size = 32
$T225723 = -2588					; size = 4
$T225722 = -2584					; size = 32
$T225721 = -2552					; size = 8
$T225720 = -2544					; size = 32
$T225719 = -2512					; size = 4
$T225718 = -2508					; size = 32
$T225717 = -2476					; size = 8
$T225716 = -2468					; size = 32
$T225715 = -2436					; size = 4
$T225714 = -2432					; size = 32
$T225713 = -2400					; size = 8
$T225712 = -2392					; size = 32
$T225711 = -2360					; size = 4
$T225710 = -2356					; size = 32
$T225709 = -2324					; size = 8
$T225708 = -2316					; size = 32
$T225707 = -2284					; size = 4
$T225706 = -2280					; size = 32
$T225705 = -2248					; size = 8
$T225704 = -2240					; size = 32
$T225703 = -2208					; size = 4
$T225702 = -2204					; size = 32
$T225701 = -2172					; size = 8
$T225700 = -2164					; size = 32
$T225699 = -2132					; size = 4
$T225698 = -2128					; size = 32
$T225697 = -2096					; size = 8
$T225696 = -2088					; size = 32
$T225695 = -2056					; size = 4
$T225694 = -2052					; size = 32
$T225693 = -2020					; size = 8
$T225692 = -2012					; size = 32
$T225691 = -1980					; size = 4
$T225690 = -1976					; size = 32
$T225689 = -1944					; size = 4
$T225688 = -1940					; size = 4
$T225687 = -1936					; size = 8
$T225686 = -1928					; size = 32
$T225685 = -1896					; size = 4
$T225684 = -1892					; size = 32
$T225683 = -1860					; size = 8
$T225682 = -1852					; size = 32
$T225681 = -1820					; size = 4
$T225680 = -1816					; size = 32
$T225679 = -1784					; size = 8
$T225678 = -1776					; size = 32
$T225677 = -1744					; size = 4
$T225676 = -1740					; size = 32
$T225675 = -1708					; size = 4
$T225674 = -1704					; size = 4
$T225673 = -1700					; size = 8
$T225672 = -1692					; size = 32
$T225671 = -1660					; size = 4
$T225670 = -1656					; size = 32
$T225669 = -1624					; size = 8
$T225668 = -1616					; size = 32
$T225667 = -1584					; size = 4
$T225666 = -1580					; size = 32
$T225665 = -1548					; size = 8
$T225664 = -1540					; size = 32
$T225663 = -1508					; size = 4
$T225662 = -1504					; size = 32
$T225661 = -1472					; size = 8
$T225660 = -1464					; size = 32
$T225659 = -1432					; size = 4
$T225658 = -1428					; size = 32
$T225657 = -1396					; size = 8
$T225656 = -1388					; size = 32
$T225655 = -1356					; size = 4
$T225654 = -1352					; size = 32
$T225653 = -1320					; size = 8
$T225652 = -1312					; size = 32
$T225651 = -1280					; size = 4
$T225650 = -1276					; size = 32
_msg$221205 = -1244					; size = 256
_pLog$221207 = -988					; size = 4
_it$221198 = -984					; size = 4
_strMissionType$221188 = -980				; size = 28
_it$221189 = -952					; size = 4
_iNumTypes$221194 = -948				; size = 4
_kMissionTypesLookupTable$220632 = -944			; size = 44
_kResults$221182 = -900					; size = 64
_msg$219520 = -836					; size = 256
_pLog$219522 = -576					; size = 4
_it$219513 = -572					; size = 4
_strType$219507 = -568					; size = 28
_it$219508 = -540					; size = 4
_kTypeLookupTable$219281 = -536				; size = 44
_kResults$219501 = -492					; size = 64
_msg$218163 = -428					; size = 256
_pLog$218170 = -168					; size = 4
_it$218156 = -164					; size = 4
_strArtifactType$218150 = -160				; size = 28
__$ArrayPad$ = -132					; size = 4
_it$218151 = -128					; size = 4
_kResults$218144 = -124					; size = 64
_kArtifactTypeLookupTable$217906 = -56			; size = 44
__$EHRec$ = -12						; size = 12
_db$ = 8						; size = 4
?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z PROC ; CvTypes::AcquireTypes, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 8040				; 00001f68H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 89   : 
; 90   : 	//ArtifactType
; 91   : 	{
; 92   : 		typedef std::tr1::unordered_map<std::string, GreatWorkArtifactClass*> LookupTable;
; 93   : 		LookupTable kArtifactTypeLookupTable;

	lea	eax, DWORD PTR $T226146[ebp]
	push	eax
	lea	ecx, DWORD PTR $T226147[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp]
	call	??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 94   : 		kArtifactTypeLookupTable.insert(make_pair(std::string("ARTIFACT_ANCIENT_RUIN"), &s_eARTIFACT_ANCIENT_RUIN));

	push	OFFSET ?s_eARTIFACT_ANCIENT_RUIN@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_ANCIENT_RUIN
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225651[ebp], esp
	push	OFFSET ??_C@_0BG@HMJJDBCN@ARTIFACT_ANCIENT_RUIN?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2872[ebp], eax
	lea	edx, DWORD PTR $T225652[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2873[ebp], eax
	mov	eax, DWORD PTR tv2873[ebp]
	mov	DWORD PTR $T226156[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T226156[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225650[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T226156[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225650[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp+8]
	mov	DWORD PTR $T226169[ebp], ecx
	mov	edx, DWORD PTR $T226169[ebp]
	mov	DWORD PTR $T226186[ebp], edx
	mov	eax, DWORD PTR $T226186[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225650[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225653[ebp]
	push	edx
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T225650[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T225652[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 95   : 		kArtifactTypeLookupTable.insert(make_pair(std::string("ARTIFACT_BARBARIAN_CAMP"), &s_eARTIFACT_BARBARIAN_CAMP));

	push	OFFSET ?s_eARTIFACT_BARBARIAN_CAMP@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BARBARIAN_CAMP
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225655[ebp], esp
	push	OFFSET ??_C@_0BI@EGCECJKF@ARTIFACT_BARBARIAN_CAMP?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2879[ebp], eax
	lea	eax, DWORD PTR $T225656[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2880[ebp], eax
	mov	ecx, DWORD PTR tv2880[ebp]
	mov	DWORD PTR $T226207[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR $T226207[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225654[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T226207[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225654[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp+8]
	mov	DWORD PTR $T226220[ebp], edx
	mov	eax, DWORD PTR $T226220[ebp]
	mov	DWORD PTR $T226237[ebp], eax
	mov	ecx, DWORD PTR $T226237[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225654[ebp]
	push	edx
	lea	eax, DWORD PTR $T225657[ebp]
	push	eax
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T225654[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T225656[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 96   : 		kArtifactTypeLookupTable.insert(make_pair(std::string("ARTIFACT_BATTLE_RANGED"), &s_eARTIFACT_BATTLE_RANGED));

	push	OFFSET ?s_eARTIFACT_BATTLE_RANGED@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BATTLE_RANGED
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225659[ebp], esp
	push	OFFSET ??_C@_0BH@KLEALEOB@ARTIFACT_BATTLE_RANGED?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2886[ebp], eax
	lea	ecx, DWORD PTR $T225660[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2887[ebp], eax
	mov	edx, DWORD PTR tv2887[ebp]
	mov	DWORD PTR $T226258[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR $T226258[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225658[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T226258[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225658[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR _kArtifactTypeLookupTable$217906[ebp+8]
	mov	DWORD PTR $T226271[ebp], eax
	mov	ecx, DWORD PTR $T226271[ebp]
	mov	DWORD PTR $T226288[ebp], ecx
	mov	edx, DWORD PTR $T226288[ebp]
	push	edx
	lea	eax, DWORD PTR $T225658[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225661[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T225658[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T225660[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 97   : 		kArtifactTypeLookupTable.insert(make_pair(std::string("ARTIFACT_BATTLE_MELEE"), &s_eARTIFACT_BATTLE_MELEE));

	push	OFFSET ?s_eARTIFACT_BATTLE_MELEE@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BATTLE_MELEE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225663[ebp], esp
	push	OFFSET ??_C@_0BG@EOLFDHMN@ARTIFACT_BATTLE_MELEE?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2893[ebp], eax
	lea	edx, DWORD PTR $T225664[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2894[ebp], eax
	mov	eax, DWORD PTR tv2894[ebp]
	mov	DWORD PTR $T226309[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR $T226309[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225662[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T226309[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225662[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp+8]
	mov	DWORD PTR $T226322[ebp], ecx
	mov	edx, DWORD PTR $T226322[ebp]
	mov	DWORD PTR $T226338[ebp], edx
	mov	eax, DWORD PTR $T226338[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225662[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225665[ebp]
	push	edx
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T225662[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T225664[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 98   : 		kArtifactTypeLookupTable.insert(make_pair(std::string("ARTIFACT_RAZED_CITY"), &s_eARTIFACT_RAZED_CITY));

	push	OFFSET ?s_eARTIFACT_RAZED_CITY@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_RAZED_CITY
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225667[ebp], esp
	push	OFFSET ??_C@_0BE@POGCPAJA@ARTIFACT_RAZED_CITY?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2900[ebp], eax
	lea	eax, DWORD PTR $T225668[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2901[ebp], eax
	mov	ecx, DWORD PTR tv2901[ebp]
	mov	DWORD PTR $T226360[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	edx, DWORD PTR $T226360[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225666[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T226360[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225666[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	edx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp+8]
	mov	DWORD PTR $T226373[ebp], edx
	mov	eax, DWORD PTR $T226373[ebp]
	mov	DWORD PTR $T226389[ebp], eax
	mov	ecx, DWORD PTR $T226389[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225666[ebp]
	push	edx
	lea	eax, DWORD PTR $T225669[ebp]
	push	eax
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T225666[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T225668[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 99   : 		kArtifactTypeLookupTable.insert(make_pair(std::string("ARTIFACT_WRITING"), &s_eARTIFACT_WRITING));

	push	OFFSET ?s_eARTIFACT_WRITING@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_WRITING
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225671[ebp], esp
	push	OFFSET ??_C@_0BB@IBFOPINB@ARTIFACT_WRITING?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2907[ebp], eax
	lea	ecx, DWORD PTR $T225672[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2908[ebp], eax
	mov	edx, DWORD PTR tv2908[ebp]
	mov	DWORD PTR $T226411[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	eax, DWORD PTR $T226411[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225670[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T226411[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225670[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	eax, DWORD PTR _kArtifactTypeLookupTable$217906[ebp+8]
	mov	DWORD PTR $T226424[ebp], eax
	mov	ecx, DWORD PTR $T226424[ebp]
	mov	DWORD PTR $T226440[ebp], ecx
	mov	edx, DWORD PTR $T226440[ebp]
	push	edx
	lea	eax, DWORD PTR $T225670[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225673[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T225670[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T225672[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 100  : 
; 101  : 		Database::Results kResults;

	push	0
	lea	ecx, DWORD PTR _kResults$218144[ebp]
	call	DWORD PTR __imp_??0Results@Database@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH

; 102  : 		if(db.Execute(kResults, "SELECT Type, ID from GreatWorkArtifactClasses"))

	push	-1
	push	OFFSET ??_C@_0CO@IBNCHGPL@SELECT?5Type?0?5ID?5from?5GreatWorkAr@
	lea	edx, DWORD PTR _kResults$218144[ebp]
	push	edx
	mov	ecx, DWORD PTR _db$[ebp]
	call	DWORD PTR __imp_?Execute@Connection@Database@@QBE_NAAVResults@2@PBDH@Z
	movzx	eax, al
	test	eax, eax
	je	$LN25@AcquireTyp
$LN24@AcquireTyp:

; 103  : 		{
; 104  : 			while(kResults.Step())

	lea	ecx, DWORD PTR _kResults$218144[ebp]
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	movzx	ecx, al
	test	ecx, ecx
	je	$LN25@AcquireTyp

; 105  : 			{
; 106  : 				std::string strArtifactType = kResults.GetText(0);

	push	0
	lea	ecx, DWORD PTR _kResults$218144[ebp]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDH@Z
	push	eax
	lea	ecx, DWORD PTR _strArtifactType$218150[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH

; 107  : 				LookupTable::iterator it = kArtifactTypeLookupTable.find(strArtifactType);

	lea	edx, DWORD PTR _strArtifactType$218150[ebp]
	push	edx
	lea	eax, DWORD PTR _it$218151[ebp]
	push	eax
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp]
	call	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::lower_bound

; 108  : 				if(it != kArtifactTypeLookupTable.end())

	mov	ecx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp+8]
	mov	DWORD PTR $T226471[ebp], ecx
	mov	edx, DWORD PTR $T226471[ebp]
	mov	DWORD PTR $T225674[ebp], edx
	mov	eax, DWORD PTR _it$218151[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T225674[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN22@AcquireTyp

; 109  : 				{
; 110  : 					(*it->second) = static_cast<GreatWorkArtifactClass>(kResults.GetInt(1));

	mov	ecx, DWORD PTR _it$218151[ebp]
	add	ecx, 8
	mov	DWORD PTR $T226518[ebp], ecx
	push	1
	lea	ecx, DWORD PTR _kResults$218144[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	edx, DWORD PTR $T226518[ebp]
	mov	ecx, DWORD PTR [edx+28]
	mov	DWORD PTR [ecx], eax
$LN22@AcquireTyp:

; 111  : 				}
; 112  : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR _strArtifactType$218150[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	$LN24@AcquireTyp
$LN25@AcquireTyp:

; 113  : 		}
; 114  : 
; 115  : 		for(LookupTable::iterator it = kArtifactTypeLookupTable.begin(); it != kArtifactTypeLookupTable.end(); ++it)

	mov	edx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp+8]
	mov	DWORD PTR $T226524[ebp], edx
	mov	eax, DWORD PTR $T226524[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T226533[ebp], ecx
	mov	edx, DWORD PTR $T226533[ebp]
	mov	DWORD PTR _it$218156[ebp], edx
	jmp	SHORT $LN21@AcquireTyp
$LN395@AcquireTyp:
	mov	eax, DWORD PTR _it$218156[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$218156[ebp], ecx
$LN21@AcquireTyp:
	mov	edx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp+8]
	mov	DWORD PTR $T226577[ebp], edx
	mov	eax, DWORD PTR $T226577[ebp]
	mov	DWORD PTR $T225675[ebp], eax
	mov	ecx, DWORD PTR _it$218156[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR $T225675[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	$LN19@AcquireTyp

; 116  : 		{
; 117  : 			if((*it->second) == NO_GREAT_WORK_ARTIFACT_CLASS)

	mov	edx, DWORD PTR _it$218156[ebp]
	mov	eax, DWORD PTR [edx+36]
	cmp	DWORD PTR [eax], 0
	jne	$LN18@AcquireTyp

; 118  : 			{
; 119  : 				char msg[256] = {0};

	mov	BYTE PTR _msg$218163[ebp], 0
	push	255					; 000000ffH
	push	0
	lea	ecx, DWORD PTR _msg$218163[ebp+1]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 120  : 				sprintf_s(msg, "ArtifactType - %s is used in the DLL but does not exist in the database.", it->first.c_str());

	mov	edx, DWORD PTR _it$218156[ebp]
	add	edx, 8
	mov	DWORD PTR $T226648[ebp], edx
	mov	ecx, DWORD PTR $T226648[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	OFFSET ??_C@_0EJ@DFFLCDJG@ArtifactType?5?9?5?$CFs?5is?5used?5in?5the@
	lea	eax, DWORD PTR _msg$218163[ebp]
	push	eax
	call	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ	; sprintf_s<256>
	add	esp, 12					; 0000000cH

; 121  : 				FILogFile* pLog = LOGFILEMGR.GetLog("Gamecore.log", FILogFile::kDontTimeStamp);

	call	?GetInstance@FILogFileMgr@@SAAAV1@XZ	; FILogFileMgr::GetInstance
	mov	DWORD PTR tv411[ebp], eax
	push	0
	push	1
	push	OFFSET ??_C@_0N@GNBOCNM@Gamecore?4log?$AA@
	mov	ecx, DWORD PTR tv411[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv411[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR _pLog$218170[ebp], eax

; 122  : 				pLog->WarningMsg(msg);

	lea	ecx, DWORD PTR _msg$218163[ebp]
	push	ecx
	mov	edx, DWORD PTR _pLog$218170[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pLog$218170[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	add	esp, 8
$LN18@AcquireTyp:

; 123  : 				CvAssertMsg(false, msg);
; 124  : 			}
; 125  : 		}

	jmp	$LN395@AcquireTyp
$LN19@AcquireTyp:

; 126  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kResults$218144[ebp]
	call	DWORD PTR __imp_??1Results@Database@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	eax, DWORD PTR _kArtifactTypeLookupTable$217906[ebp+16]
	mov	DWORD PTR $T226671[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	ecx, DWORD PTR $T226671[ebp]
	call	?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp+4]
	mov	DWORD PTR $T226711[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	ecx, DWORD PTR $T226711[ebp]
	call	?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 127  : 
; 128  : 	//GreatWorkSlots
; 129  : 	{
; 130  : 		typedef std::tr1::unordered_map<std::string, GreatWorkSlotType*> LookupTable;
; 131  : 		LookupTable kTypeLookupTable;

	lea	edx, DWORD PTR $T226762[ebp]
	push	edx
	lea	eax, DWORD PTR $T226763[ebp]
	push	eax
	lea	ecx, DWORD PTR _kTypeLookupTable$219281[ebp]
	call	??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >
	mov	DWORD PTR __$EHRec$[ebp+8], 18		; 00000012H

; 132  : 		kTypeLookupTable.insert(make_pair(std::string("GREAT_WORK_SLOT_ART_ARTIFACT"), &s_eGREAT_WORK_SLOT_ART_ARTIFACT));

	push	OFFSET ?s_eGREAT_WORK_SLOT_ART_ARTIFACT@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_ART_ARTIFACT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225677[ebp], esp
	push	OFFSET ??_C@_0BN@CGPMDLDK@GREAT_WORK_SLOT_ART_ARTIFACT?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2917[ebp], eax
	lea	ecx, DWORD PTR $T225678[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2918[ebp], eax
	mov	edx, DWORD PTR tv2918[ebp]
	mov	DWORD PTR $T226772[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	eax, DWORD PTR $T226772[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225676[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T226772[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225676[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	eax, DWORD PTR _kTypeLookupTable$219281[ebp+8]
	mov	DWORD PTR $T226785[ebp], eax
	mov	ecx, DWORD PTR $T226785[ebp]
	mov	DWORD PTR $T226802[ebp], ecx
	mov	edx, DWORD PTR $T226802[ebp]
	push	edx
	lea	eax, DWORD PTR $T225676[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225679[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kTypeLookupTable$219281[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	lea	ecx, DWORD PTR $T225676[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T225678[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 133  : 		kTypeLookupTable.insert(make_pair(std::string("GREAT_WORK_SLOT_LITERATURE"), &s_eGREAT_WORK_SLOT_LITERATURE));

	push	OFFSET ?s_eGREAT_WORK_SLOT_LITERATURE@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_LITERATURE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225681[ebp], esp
	push	OFFSET ??_C@_0BL@MEMIEKNO@GREAT_WORK_SLOT_LITERATURE?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2924[ebp], eax
	lea	edx, DWORD PTR $T225682[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2925[ebp], eax
	mov	eax, DWORD PTR tv2925[ebp]
	mov	DWORD PTR $T226823[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	ecx, DWORD PTR $T226823[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225680[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T226823[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225680[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	ecx, DWORD PTR _kTypeLookupTable$219281[ebp+8]
	mov	DWORD PTR $T226836[ebp], ecx
	mov	edx, DWORD PTR $T226836[ebp]
	mov	DWORD PTR $T226853[ebp], edx
	mov	eax, DWORD PTR $T226853[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225680[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225683[ebp]
	push	edx
	lea	ecx, DWORD PTR _kTypeLookupTable$219281[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	lea	ecx, DWORD PTR $T225680[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T225682[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 134  : 		kTypeLookupTable.insert(make_pair(std::string("GREAT_WORK_SLOT_MUSIC"), &s_eGREAT_WORK_SLOT_MUSIC));

	push	OFFSET ?s_eGREAT_WORK_SLOT_MUSIC@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_MUSIC
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225685[ebp], esp
	push	OFFSET ??_C@_0BG@BDIEOOGE@GREAT_WORK_SLOT_MUSIC?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2931[ebp], eax
	lea	eax, DWORD PTR $T225686[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2932[ebp], eax
	mov	ecx, DWORD PTR tv2932[ebp]
	mov	DWORD PTR $T226874[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	edx, DWORD PTR $T226874[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225684[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T226874[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225684[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	mov	edx, DWORD PTR _kTypeLookupTable$219281[ebp+8]
	mov	DWORD PTR $T226887[ebp], edx
	mov	eax, DWORD PTR $T226887[ebp]
	mov	DWORD PTR $T226904[ebp], eax
	mov	ecx, DWORD PTR $T226904[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225684[ebp]
	push	edx
	lea	eax, DWORD PTR $T225687[ebp]
	push	eax
	lea	ecx, DWORD PTR _kTypeLookupTable$219281[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	lea	ecx, DWORD PTR $T225684[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T225686[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 135  : 
; 136  : 		Database::Results kResults;

	push	0
	lea	ecx, DWORD PTR _kResults$219501[ebp]
	call	DWORD PTR __imp_??0Results@Database@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H

; 137  : 		if(db.Execute(kResults, "SELECT Type, ID from GreatWorkSlots"))

	push	-1
	push	OFFSET ??_C@_0CE@MCMINNCJ@SELECT?5Type?0?5ID?5from?5GreatWorkSl@
	lea	ecx, DWORD PTR _kResults$219501[ebp]
	push	ecx
	mov	ecx, DWORD PTR _db$[ebp]
	call	DWORD PTR __imp_?Execute@Connection@Database@@QBE_NAAVResults@2@PBDH@Z
	movzx	edx, al
	test	edx, edx
	je	$LN17@AcquireTyp
$LN16@AcquireTyp:

; 138  : 		{
; 139  : 			while(kResults.Step())

	lea	ecx, DWORD PTR _kResults$219501[ebp]
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	movzx	eax, al
	test	eax, eax
	je	$LN17@AcquireTyp

; 140  : 			{
; 141  : 				std::string strType = kResults.GetText(0);

	push	0
	lea	ecx, DWORD PTR _kResults$219501[ebp]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDH@Z
	push	eax
	lea	ecx, DWORD PTR _strType$219507[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH

; 142  : 				LookupTable::iterator it = kTypeLookupTable.find(strType);

	lea	ecx, DWORD PTR _strType$219507[ebp]
	push	ecx
	lea	edx, DWORD PTR _it$219508[ebp]
	push	edx
	lea	ecx, DWORD PTR _kTypeLookupTable$219281[ebp]
	call	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::lower_bound

; 143  : 				if(it != kTypeLookupTable.end())

	mov	eax, DWORD PTR _kTypeLookupTable$219281[ebp+8]
	mov	DWORD PTR $T226934[ebp], eax
	mov	ecx, DWORD PTR $T226934[ebp]
	mov	DWORD PTR $T225688[ebp], ecx
	mov	edx, DWORD PTR _it$219508[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T225688[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN14@AcquireTyp

; 144  : 				{
; 145  : 					(*it->second) = static_cast<GreatWorkSlotType>(kResults.GetInt(1));

	mov	eax, DWORD PTR _it$219508[ebp]
	add	eax, 8
	mov	DWORD PTR $T226981[ebp], eax
	push	1
	lea	ecx, DWORD PTR _kResults$219501[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	ecx, DWORD PTR $T226981[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [edx], eax
$LN14@AcquireTyp:

; 146  : 				}
; 147  : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	lea	ecx, DWORD PTR _strType$219507[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	$LN16@AcquireTyp
$LN17@AcquireTyp:

; 148  : 		}
; 149  : 
; 150  : 		for(LookupTable::iterator it = kTypeLookupTable.begin(); it != kTypeLookupTable.end(); ++it)

	mov	eax, DWORD PTR _kTypeLookupTable$219281[ebp+8]
	mov	DWORD PTR $T226987[ebp], eax
	mov	ecx, DWORD PTR $T226987[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T226996[ebp], edx
	mov	eax, DWORD PTR $T226996[ebp]
	mov	DWORD PTR _it$219513[ebp], eax
	jmp	SHORT $LN13@AcquireTyp
$LN554@AcquireTyp:
	mov	ecx, DWORD PTR _it$219513[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _it$219513[ebp], edx
$LN13@AcquireTyp:
	mov	eax, DWORD PTR _kTypeLookupTable$219281[ebp+8]
	mov	DWORD PTR $T227040[ebp], eax
	mov	ecx, DWORD PTR $T227040[ebp]
	mov	DWORD PTR $T225689[ebp], ecx
	mov	edx, DWORD PTR _it$219513[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T225689[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	$LN11@AcquireTyp

; 151  : 		{
; 152  : 			if((*it->second) == NO_GREAT_WORK_SLOT)

	mov	eax, DWORD PTR _it$219513[ebp]
	mov	ecx, DWORD PTR [eax+36]
	cmp	DWORD PTR [ecx], -1
	jne	$LN10@AcquireTyp

; 153  : 			{
; 154  : 				char msg[256] = {0};

	mov	BYTE PTR _msg$219520[ebp], 0
	push	255					; 000000ffH
	push	0
	lea	edx, DWORD PTR _msg$219520[ebp+1]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 155  : 				sprintf_s(msg, "GreatWorkSlotType - %s is used in the DLL but does not exist in the database.", it->first.c_str());

	mov	eax, DWORD PTR _it$219513[ebp]
	add	eax, 8
	mov	DWORD PTR $T227111[ebp], eax
	mov	ecx, DWORD PTR $T227111[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	OFFSET ??_C@_0EO@LHBFGGEG@GreatWorkSlotType?5?9?5?$CFs?5is?5used?5i@
	lea	ecx, DWORD PTR _msg$219520[ebp]
	push	ecx
	call	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ	; sprintf_s<256>
	add	esp, 12					; 0000000cH

; 156  : 				FILogFile* pLog = LOGFILEMGR.GetLog("Gamecore.log", FILogFile::kDontTimeStamp);

	call	?GetInstance@FILogFileMgr@@SAAAV1@XZ	; FILogFileMgr::GetInstance
	mov	DWORD PTR tv615[ebp], eax
	push	0
	push	1
	push	OFFSET ??_C@_0N@GNBOCNM@Gamecore?4log?$AA@
	mov	edx, DWORD PTR tv615[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv615[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR _pLog$219522[ebp], eax

; 157  : 				pLog->WarningMsg(msg);

	lea	eax, DWORD PTR _msg$219520[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLog$219522[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pLog$219522[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	add	esp, 8
$LN10@AcquireTyp:

; 158  : 				CvAssertMsg(false, msg);
; 159  : 			}
; 160  : 		}

	jmp	$LN554@AcquireTyp
$LN11@AcquireTyp:

; 161  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR _kResults$219501[ebp]
	call	DWORD PTR __imp_??1Results@Database@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR __$EHRec$[ebp+8], 27		; 0000001bH
	lea	edx, DWORD PTR _kTypeLookupTable$219281[ebp+16]
	mov	DWORD PTR $T227134[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	mov	ecx, DWORD PTR $T227134[ebp]
	call	?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	eax, DWORD PTR _kTypeLookupTable$219281[ebp+4]
	mov	DWORD PTR $T227174[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 29		; 0000001dH
	mov	ecx, DWORD PTR $T227174[ebp]
	call	?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 162  : 
; 163  : 	//MissionTypes
; 164  : 	{
; 165  : 		typedef std::tr1::unordered_map<std::string, MissionTypes*> LookupTable;
; 166  : 		LookupTable kMissionTypesLookupTable;

	lea	ecx, DWORD PTR $T227225[ebp]
	push	ecx
	lea	edx, DWORD PTR $T227226[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >
	mov	DWORD PTR __$EHRec$[ebp+8], 30		; 0000001eH

; 167  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_MOVE_TO"), &s_eMISSION_MOVE_TO));

	push	OFFSET ?s_eMISSION_MOVE_TO@@3W4MissionTypes@@A ; s_eMISSION_MOVE_TO
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225691[ebp], esp
	push	OFFSET ??_C@_0BA@GHBECEDD@MISSION_MOVE_TO?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2941[ebp], eax
	lea	eax, DWORD PTR $T225692[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2942[ebp], eax
	mov	ecx, DWORD PTR tv2942[ebp]
	mov	DWORD PTR $T227235[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	mov	edx, DWORD PTR $T227235[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225690[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T227235[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225690[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T227248[ebp], edx
	mov	eax, DWORD PTR $T227248[ebp]
	mov	DWORD PTR $T227265[ebp], eax
	mov	ecx, DWORD PTR $T227265[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225690[ebp]
	push	edx
	lea	eax, DWORD PTR $T225693[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	lea	ecx, DWORD PTR $T225690[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225692[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 168  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_ROUTE_TO"), &s_eMISSION_ROUTE_TO));

	push	OFFSET ?s_eMISSION_ROUTE_TO@@3W4MissionTypes@@A ; s_eMISSION_ROUTE_TO
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225695[ebp], esp
	push	OFFSET ??_C@_0BB@KPGPCEEI@MISSION_ROUTE_TO?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2948[ebp], eax
	lea	ecx, DWORD PTR $T225696[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2949[ebp], eax
	mov	edx, DWORD PTR tv2949[ebp]
	mov	DWORD PTR $T227286[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	mov	eax, DWORD PTR $T227286[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225694[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T227286[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225694[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T227299[ebp], eax
	mov	ecx, DWORD PTR $T227299[ebp]
	mov	DWORD PTR $T227316[ebp], ecx
	mov	edx, DWORD PTR $T227316[ebp]
	push	edx
	lea	eax, DWORD PTR $T225694[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225697[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	lea	ecx, DWORD PTR $T225694[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225696[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 169  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_MOVE_TO_UNIT"), &s_eMISSION_MOVE_TO_UNIT));

	push	OFFSET ?s_eMISSION_MOVE_TO_UNIT@@3W4MissionTypes@@A ; s_eMISSION_MOVE_TO_UNIT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225699[ebp], esp
	push	OFFSET ??_C@_0BF@CPDOPHHL@MISSION_MOVE_TO_UNIT?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2955[ebp], eax
	lea	edx, DWORD PTR $T225700[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2956[ebp], eax
	mov	eax, DWORD PTR tv2956[ebp]
	mov	DWORD PTR $T227337[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	mov	ecx, DWORD PTR $T227337[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225698[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T227337[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225698[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T227350[ebp], ecx
	mov	edx, DWORD PTR $T227350[ebp]
	mov	DWORD PTR $T227366[ebp], edx
	mov	eax, DWORD PTR $T227366[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225698[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225701[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	lea	ecx, DWORD PTR $T225698[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225700[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 170  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_SWAP_UNITS"), &s_eMISSION_SWAP_UNITS));

	push	OFFSET ?s_eMISSION_SWAP_UNITS@@3W4MissionTypes@@A ; s_eMISSION_SWAP_UNITS
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225703[ebp], esp
	push	OFFSET ??_C@_0BD@BDBPDFAK@MISSION_SWAP_UNITS?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2962[ebp], eax
	lea	eax, DWORD PTR $T225704[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2963[ebp], eax
	mov	ecx, DWORD PTR tv2963[ebp]
	mov	DWORD PTR $T227388[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	mov	edx, DWORD PTR $T227388[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225702[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T227388[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225702[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T227401[ebp], edx
	mov	eax, DWORD PTR $T227401[ebp]
	mov	DWORD PTR $T227417[ebp], eax
	mov	ecx, DWORD PTR $T227417[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225702[ebp]
	push	edx
	lea	eax, DWORD PTR $T225705[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	lea	ecx, DWORD PTR $T225702[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225704[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 171  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_SKIP"), &s_eMISSION_SKIP));

	push	OFFSET ?s_eMISSION_SKIP@@3W4MissionTypes@@A ; s_eMISSION_SKIP
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225707[ebp], esp
	push	OFFSET ??_C@_0N@IJKJBDIA@MISSION_SKIP?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2969[ebp], eax
	lea	ecx, DWORD PTR $T225708[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2970[ebp], eax
	mov	edx, DWORD PTR tv2970[ebp]
	mov	DWORD PTR $T227439[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	mov	eax, DWORD PTR $T227439[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225706[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T227439[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225706[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T227452[ebp], eax
	mov	ecx, DWORD PTR $T227452[ebp]
	mov	DWORD PTR $T227468[ebp], ecx
	mov	edx, DWORD PTR $T227468[ebp]
	push	edx
	lea	eax, DWORD PTR $T225706[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225709[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	lea	ecx, DWORD PTR $T225706[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225708[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 172  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_SLEEP"), &s_eMISSION_SLEEP));

	push	OFFSET ?s_eMISSION_SLEEP@@3W4MissionTypes@@A ; s_eMISSION_SLEEP
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225711[ebp], esp
	push	OFFSET ??_C@_0O@LFJBHFFE@MISSION_SLEEP?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2976[ebp], eax
	lea	edx, DWORD PTR $T225712[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2977[ebp], eax
	mov	eax, DWORD PTR tv2977[ebp]
	mov	DWORD PTR $T227490[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	mov	ecx, DWORD PTR $T227490[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225710[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T227490[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225710[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T227503[ebp], ecx
	mov	edx, DWORD PTR $T227503[ebp]
	mov	DWORD PTR $T227519[ebp], edx
	mov	eax, DWORD PTR $T227519[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225710[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225713[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	lea	ecx, DWORD PTR $T225710[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225712[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 173  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_ALERT"), &s_eMISSION_ALERT));

	push	OFFSET ?s_eMISSION_ALERT@@3W4MissionTypes@@A ; s_eMISSION_ALERT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225715[ebp], esp
	push	OFFSET ??_C@_0O@IGIKKGDF@MISSION_ALERT?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2983[ebp], eax
	lea	eax, DWORD PTR $T225716[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2984[ebp], eax
	mov	ecx, DWORD PTR tv2984[ebp]
	mov	DWORD PTR $T227541[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	mov	edx, DWORD PTR $T227541[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225714[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T227541[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225714[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T227554[ebp], edx
	mov	eax, DWORD PTR $T227554[ebp]
	mov	DWORD PTR $T227570[ebp], eax
	mov	ecx, DWORD PTR $T227570[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225714[ebp]
	push	edx
	lea	eax, DWORD PTR $T225717[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	lea	ecx, DWORD PTR $T225714[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225716[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 174  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_FORTIFY"), &s_eMISSION_FORTIFY));

	push	OFFSET ?s_eMISSION_FORTIFY@@3W4MissionTypes@@A ; s_eMISSION_FORTIFY
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225719[ebp], esp
	push	OFFSET ??_C@_0BA@IKCHAOML@MISSION_FORTIFY?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2990[ebp], eax
	lea	ecx, DWORD PTR $T225720[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2991[ebp], eax
	mov	edx, DWORD PTR tv2991[ebp]
	mov	DWORD PTR $T227592[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	mov	eax, DWORD PTR $T227592[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225718[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T227592[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225718[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T227605[ebp], eax
	mov	ecx, DWORD PTR $T227605[ebp]
	mov	DWORD PTR $T227621[ebp], ecx
	mov	edx, DWORD PTR $T227621[ebp]
	push	edx
	lea	eax, DWORD PTR $T225718[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225721[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	lea	ecx, DWORD PTR $T225718[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225720[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 175  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_GARRISON"), &s_eMISSION_GARRISON));

	push	OFFSET ?s_eMISSION_GARRISON@@3W4MissionTypes@@A ; s_eMISSION_GARRISON
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225723[ebp], esp
	push	OFFSET ??_C@_0BB@MJACMDLO@MISSION_GARRISON?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv2997[ebp], eax
	lea	edx, DWORD PTR $T225724[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv2998[ebp], eax
	mov	eax, DWORD PTR tv2998[ebp]
	mov	DWORD PTR $T227643[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	mov	ecx, DWORD PTR $T227643[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225722[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T227643[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225722[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T227656[ebp], ecx
	mov	edx, DWORD PTR $T227656[ebp]
	mov	DWORD PTR $T227673[ebp], edx
	mov	eax, DWORD PTR $T227673[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225722[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225725[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	lea	ecx, DWORD PTR $T225722[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225724[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 176  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_SET_UP_FOR_RANGED_ATTACK"), &s_eMISSION_SET_UP_FOR_RANGED_ATTACK));

	push	OFFSET ?s_eMISSION_SET_UP_FOR_RANGED_ATTACK@@3W4MissionTypes@@A ; s_eMISSION_SET_UP_FOR_RANGED_ATTACK
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225727[ebp], esp
	push	OFFSET ??_C@_0CB@GCBCFJNP@MISSION_SET_UP_FOR_RANGED_ATTACK@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3004[ebp], eax
	lea	eax, DWORD PTR $T225728[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3005[ebp], eax
	mov	ecx, DWORD PTR tv3005[ebp]
	mov	DWORD PTR $T227694[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	mov	edx, DWORD PTR $T227694[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225726[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T227694[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225726[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T227707[ebp], edx
	mov	eax, DWORD PTR $T227707[ebp]
	mov	DWORD PTR $T227724[ebp], eax
	mov	ecx, DWORD PTR $T227724[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225726[ebp]
	push	edx
	lea	eax, DWORD PTR $T225729[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	lea	ecx, DWORD PTR $T225726[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225728[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 177  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_EMBARK"), &s_eMISSION_EMBARK));

	push	OFFSET ?s_eMISSION_EMBARK@@3W4MissionTypes@@A ; s_eMISSION_EMBARK
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225731[ebp], esp
	push	OFFSET ??_C@_0P@IOKKHHCO@MISSION_EMBARK?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3011[ebp], eax
	lea	ecx, DWORD PTR $T225732[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3012[ebp], eax
	mov	edx, DWORD PTR tv3012[ebp]
	mov	DWORD PTR $T227745[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 51		; 00000033H
	mov	eax, DWORD PTR $T227745[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225730[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T227745[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225730[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T227758[ebp], eax
	mov	ecx, DWORD PTR $T227758[ebp]
	mov	DWORD PTR $T227775[ebp], ecx
	mov	edx, DWORD PTR $T227775[ebp]
	push	edx
	lea	eax, DWORD PTR $T225730[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225733[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 51		; 00000033H
	lea	ecx, DWORD PTR $T225730[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225732[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 178  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_DISEMBARK"), &s_eMISSION_DISEMBARK));

	push	OFFSET ?s_eMISSION_DISEMBARK@@3W4MissionTypes@@A ; s_eMISSION_DISEMBARK
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225735[ebp], esp
	push	OFFSET ??_C@_0BC@DCFDGAEA@MISSION_DISEMBARK?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3018[ebp], eax
	lea	edx, DWORD PTR $T225736[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3019[ebp], eax
	mov	eax, DWORD PTR tv3019[ebp]
	mov	DWORD PTR $T227796[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	mov	ecx, DWORD PTR $T227796[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225734[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T227796[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225734[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 54		; 00000036H
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T227809[ebp], ecx
	mov	edx, DWORD PTR $T227809[ebp]
	mov	DWORD PTR $T227826[ebp], edx
	mov	eax, DWORD PTR $T227826[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225734[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225737[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	lea	ecx, DWORD PTR $T225734[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225736[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 179  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_AIRPATROL"), &s_eMISSION_AIRPATROL));

	push	OFFSET ?s_eMISSION_AIRPATROL@@3W4MissionTypes@@A ; s_eMISSION_AIRPATROL
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225739[ebp], esp
	push	OFFSET ??_C@_0BC@KMEHOEDP@MISSION_AIRPATROL?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3025[ebp], eax
	lea	eax, DWORD PTR $T225740[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3026[ebp], eax
	mov	ecx, DWORD PTR tv3026[ebp]
	mov	DWORD PTR $T227847[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 55		; 00000037H
	mov	edx, DWORD PTR $T227847[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225738[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T227847[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225738[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 56		; 00000038H
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T227860[ebp], edx
	mov	eax, DWORD PTR $T227860[ebp]
	mov	DWORD PTR $T227877[ebp], eax
	mov	ecx, DWORD PTR $T227877[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225738[ebp]
	push	edx
	lea	eax, DWORD PTR $T225741[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 55		; 00000037H
	lea	ecx, DWORD PTR $T225738[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225740[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 180  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_HEAL"), &s_eMISSION_HEAL));

	push	OFFSET ?s_eMISSION_HEAL@@3W4MissionTypes@@A ; s_eMISSION_HEAL
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225743[ebp], esp
	push	OFFSET ??_C@_0N@JGCCMOMF@MISSION_HEAL?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3032[ebp], eax
	lea	ecx, DWORD PTR $T225744[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3033[ebp], eax
	mov	edx, DWORD PTR tv3033[ebp]
	mov	DWORD PTR $T227898[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 57		; 00000039H
	mov	eax, DWORD PTR $T227898[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225742[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T227898[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225742[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T227911[ebp], eax
	mov	ecx, DWORD PTR $T227911[ebp]
	mov	DWORD PTR $T227928[ebp], ecx
	mov	edx, DWORD PTR $T227928[ebp]
	push	edx
	lea	eax, DWORD PTR $T225742[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225745[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 57		; 00000039H
	lea	ecx, DWORD PTR $T225742[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225744[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 181  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_AIRLIFT"), &s_eMISSION_AIRLIFT));

	push	OFFSET ?s_eMISSION_AIRLIFT@@3W4MissionTypes@@A ; s_eMISSION_AIRLIFT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225747[ebp], esp
	push	OFFSET ??_C@_0BA@GAMJAOG@MISSION_AIRLIFT?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3039[ebp], eax
	lea	edx, DWORD PTR $T225748[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3040[ebp], eax
	mov	eax, DWORD PTR tv3040[ebp]
	mov	DWORD PTR $T227949[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	mov	ecx, DWORD PTR $T227949[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225746[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T227949[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225746[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T227962[ebp], ecx
	mov	edx, DWORD PTR $T227962[ebp]
	mov	DWORD PTR $T227979[ebp], edx
	mov	eax, DWORD PTR $T227979[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225746[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225749[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	lea	ecx, DWORD PTR $T225746[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225748[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 182  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_NUKE"), &s_eMISSION_NUKE));

	push	OFFSET ?s_eMISSION_NUKE@@3W4MissionTypes@@A ; s_eMISSION_NUKE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225751[ebp], esp
	push	OFFSET ??_C@_0N@JFCOFCGF@MISSION_NUKE?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3046[ebp], eax
	lea	eax, DWORD PTR $T225752[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3047[ebp], eax
	mov	ecx, DWORD PTR tv3047[ebp]
	mov	DWORD PTR $T228000[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	mov	edx, DWORD PTR $T228000[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225750[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T228000[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225750[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228013[ebp], edx
	mov	eax, DWORD PTR $T228013[ebp]
	mov	DWORD PTR $T228030[ebp], eax
	mov	ecx, DWORD PTR $T228030[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225750[ebp]
	push	edx
	lea	eax, DWORD PTR $T225753[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	lea	ecx, DWORD PTR $T225750[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225752[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 183  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_PARADROP"), &s_eMISSION_PARADROP));

	push	OFFSET ?s_eMISSION_PARADROP@@3W4MissionTypes@@A ; s_eMISSION_PARADROP
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225755[ebp], esp
	push	OFFSET ??_C@_0BB@BAIMAADI@MISSION_PARADROP?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3053[ebp], eax
	lea	ecx, DWORD PTR $T225756[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3054[ebp], eax
	mov	edx, DWORD PTR tv3054[ebp]
	mov	DWORD PTR $T228051[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	mov	eax, DWORD PTR $T228051[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225754[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T228051[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225754[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228064[ebp], eax
	mov	ecx, DWORD PTR $T228064[ebp]
	mov	DWORD PTR $T228081[ebp], ecx
	mov	edx, DWORD PTR $T228081[ebp]
	push	edx
	lea	eax, DWORD PTR $T225754[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225757[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	lea	ecx, DWORD PTR $T225754[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225756[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 184  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_AIR_SWEEP"), &s_eMISSION_AIR_SWEEP));

	push	OFFSET ?s_eMISSION_AIR_SWEEP@@3W4MissionTypes@@A ; s_eMISSION_AIR_SWEEP
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225759[ebp], esp
	push	OFFSET ??_C@_0BC@HFJPPKDL@MISSION_AIR_SWEEP?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3060[ebp], eax
	lea	edx, DWORD PTR $T225760[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3061[ebp], eax
	mov	eax, DWORD PTR tv3061[ebp]
	mov	DWORD PTR $T228102[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H
	mov	ecx, DWORD PTR $T228102[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225758[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T228102[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225758[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 66		; 00000042H
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228115[ebp], ecx
	mov	edx, DWORD PTR $T228115[ebp]
	mov	DWORD PTR $T228132[ebp], edx
	mov	eax, DWORD PTR $T228132[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225758[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225761[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H
	lea	ecx, DWORD PTR $T225758[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225760[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 185  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_REBASE"), &s_eMISSION_REBASE));

	push	OFFSET ?s_eMISSION_REBASE@@3W4MissionTypes@@A ; s_eMISSION_REBASE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225763[ebp], esp
	push	OFFSET ??_C@_0P@FPMBBALK@MISSION_REBASE?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3067[ebp], eax
	lea	eax, DWORD PTR $T225764[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3068[ebp], eax
	mov	ecx, DWORD PTR tv3068[ebp]
	mov	DWORD PTR $T228153[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H
	mov	edx, DWORD PTR $T228153[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225762[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T228153[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225762[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228166[ebp], edx
	mov	eax, DWORD PTR $T228166[ebp]
	mov	DWORD PTR $T228183[ebp], eax
	mov	ecx, DWORD PTR $T228183[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225762[ebp]
	push	edx
	lea	eax, DWORD PTR $T225765[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H
	lea	ecx, DWORD PTR $T225762[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225764[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 186  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_RANGE_ATTACK"), &s_eMISSION_RANGE_ATTACK));

	push	OFFSET ?s_eMISSION_RANGE_ATTACK@@3W4MissionTypes@@A ; s_eMISSION_RANGE_ATTACK
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225767[ebp], esp
	push	OFFSET ??_C@_0BF@LOAKEPLA@MISSION_RANGE_ATTACK?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3074[ebp], eax
	lea	ecx, DWORD PTR $T225768[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3075[ebp], eax
	mov	edx, DWORD PTR tv3075[ebp]
	mov	DWORD PTR $T228204[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 69		; 00000045H
	mov	eax, DWORD PTR $T228204[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225766[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T228204[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225766[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 70		; 00000046H
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228217[ebp], eax
	mov	ecx, DWORD PTR $T228217[ebp]
	mov	DWORD PTR $T228234[ebp], ecx
	mov	edx, DWORD PTR $T228234[ebp]
	push	edx
	lea	eax, DWORD PTR $T225766[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225769[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 69		; 00000045H
	lea	ecx, DWORD PTR $T225766[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225768[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 187  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_PILLAGE"), &s_eMISSION_PILLAGE));

	push	OFFSET ?s_eMISSION_PILLAGE@@3W4MissionTypes@@A ; s_eMISSION_PILLAGE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225771[ebp], esp
	push	OFFSET ??_C@_0BA@BIGOKDHA@MISSION_PILLAGE?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3081[ebp], eax
	lea	edx, DWORD PTR $T225772[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3082[ebp], eax
	mov	eax, DWORD PTR tv3082[ebp]
	mov	DWORD PTR $T228255[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 71		; 00000047H
	mov	ecx, DWORD PTR $T228255[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225770[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T228255[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225770[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 72		; 00000048H
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228268[ebp], ecx
	mov	edx, DWORD PTR $T228268[ebp]
	mov	DWORD PTR $T228285[ebp], edx
	mov	eax, DWORD PTR $T228285[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225770[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225773[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 71		; 00000047H
	lea	ecx, DWORD PTR $T225770[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225772[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 188  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_FOUND"), &s_eMISSION_FOUND));

	push	OFFSET ?s_eMISSION_FOUND@@3W4MissionTypes@@A ; s_eMISSION_FOUND
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225775[ebp], esp
	push	OFFSET ??_C@_0O@NDMIPDIH@MISSION_FOUND?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3088[ebp], eax
	lea	eax, DWORD PTR $T225776[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3089[ebp], eax
	mov	ecx, DWORD PTR tv3089[ebp]
	mov	DWORD PTR $T228306[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 73		; 00000049H
	mov	edx, DWORD PTR $T228306[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225774[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T228306[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225774[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 74		; 0000004aH
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228319[ebp], edx
	mov	eax, DWORD PTR $T228319[ebp]
	mov	DWORD PTR $T228336[ebp], eax
	mov	ecx, DWORD PTR $T228336[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225774[ebp]
	push	edx
	lea	eax, DWORD PTR $T225777[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 73		; 00000049H
	lea	ecx, DWORD PTR $T225774[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225776[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 189  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_JOIN"), &s_eMISSION_JOIN));

	push	OFFSET ?s_eMISSION_JOIN@@3W4MissionTypes@@A ; s_eMISSION_JOIN
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225779[ebp], esp
	push	OFFSET ??_C@_0N@LPHKEOPL@MISSION_JOIN?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3095[ebp], eax
	lea	ecx, DWORD PTR $T225780[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3096[ebp], eax
	mov	edx, DWORD PTR tv3096[ebp]
	mov	DWORD PTR $T228357[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	mov	eax, DWORD PTR $T228357[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225778[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T228357[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225778[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 76		; 0000004cH
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228370[ebp], eax
	mov	ecx, DWORD PTR $T228370[ebp]
	mov	DWORD PTR $T228386[ebp], ecx
	mov	edx, DWORD PTR $T228386[ebp]
	push	edx
	lea	eax, DWORD PTR $T225778[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225781[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	lea	ecx, DWORD PTR $T225778[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225780[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 190  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_CONSTRUCT"), &s_eMISSION_CONSTRUCT));

	push	OFFSET ?s_eMISSION_CONSTRUCT@@3W4MissionTypes@@A ; s_eMISSION_CONSTRUCT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225783[ebp], esp
	push	OFFSET ??_C@_0BC@LNJEMHN@MISSION_CONSTRUCT?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3102[ebp], eax
	lea	edx, DWORD PTR $T225784[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3103[ebp], eax
	mov	eax, DWORD PTR tv3103[ebp]
	mov	DWORD PTR $T228408[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 77		; 0000004dH
	mov	ecx, DWORD PTR $T228408[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225782[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T228408[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225782[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 78		; 0000004eH
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228421[ebp], ecx
	mov	edx, DWORD PTR $T228421[ebp]
	mov	DWORD PTR $T228437[ebp], edx
	mov	eax, DWORD PTR $T228437[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225782[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225785[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 77		; 0000004dH
	lea	ecx, DWORD PTR $T225782[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225784[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 191  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_DISCOVER"), &s_eMISSION_DISCOVER));

	push	OFFSET ?s_eMISSION_DISCOVER@@3W4MissionTypes@@A ; s_eMISSION_DISCOVER
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225787[ebp], esp
	push	OFFSET ??_C@_0BB@BOOJODFN@MISSION_DISCOVER?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3109[ebp], eax
	lea	eax, DWORD PTR $T225788[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3110[ebp], eax
	mov	ecx, DWORD PTR tv3110[ebp]
	mov	DWORD PTR $T228459[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 79		; 0000004fH
	mov	edx, DWORD PTR $T228459[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225786[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T228459[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225786[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 80		; 00000050H
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228472[ebp], edx
	mov	eax, DWORD PTR $T228472[ebp]
	mov	DWORD PTR $T228488[ebp], eax
	mov	ecx, DWORD PTR $T228488[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225786[ebp]
	push	edx
	lea	eax, DWORD PTR $T225789[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 79		; 0000004fH
	lea	ecx, DWORD PTR $T225786[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225788[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 192  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_HURRY"), &s_eMISSION_HURRY));

	push	OFFSET ?s_eMISSION_HURRY@@3W4MissionTypes@@A ; s_eMISSION_HURRY
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225791[ebp], esp
	push	OFFSET ??_C@_0O@LEBFBDGF@MISSION_HURRY?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3116[ebp], eax
	lea	ecx, DWORD PTR $T225792[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3117[ebp], eax
	mov	edx, DWORD PTR tv3117[ebp]
	mov	DWORD PTR $T228510[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 81		; 00000051H
	mov	eax, DWORD PTR $T228510[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225790[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T228510[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225790[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 82		; 00000052H
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228523[ebp], eax
	mov	ecx, DWORD PTR $T228523[ebp]
	mov	DWORD PTR $T228539[ebp], ecx
	mov	edx, DWORD PTR $T228539[ebp]
	push	edx
	lea	eax, DWORD PTR $T225790[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225793[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 81		; 00000051H
	lea	ecx, DWORD PTR $T225790[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225792[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 193  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_TRADE"), &s_eMISSION_TRADE));

	push	OFFSET ?s_eMISSION_TRADE@@3W4MissionTypes@@A ; s_eMISSION_TRADE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225795[ebp], esp
	push	OFFSET ??_C@_0O@MOFBHHHL@MISSION_TRADE?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3123[ebp], eax
	lea	edx, DWORD PTR $T225796[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3124[ebp], eax
	mov	eax, DWORD PTR tv3124[ebp]
	mov	DWORD PTR $T228561[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 83		; 00000053H
	mov	ecx, DWORD PTR $T228561[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225794[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T228561[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225794[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 84		; 00000054H
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228574[ebp], ecx
	mov	edx, DWORD PTR $T228574[ebp]
	mov	DWORD PTR $T228590[ebp], edx
	mov	eax, DWORD PTR $T228590[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225794[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225797[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 83		; 00000053H
	lea	ecx, DWORD PTR $T225794[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225796[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 194  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_BUY_CITY_STATE"), &s_eMISSION_BUY_CITY_STATE));

	push	OFFSET ?s_eMISSION_BUY_CITY_STATE@@3W4MissionTypes@@A ; s_eMISSION_BUY_CITY_STATE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225799[ebp], esp
	push	OFFSET ??_C@_0BH@FCDCBDLI@MISSION_BUY_CITY_STATE?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3130[ebp], eax
	lea	eax, DWORD PTR $T225800[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3131[ebp], eax
	mov	ecx, DWORD PTR tv3131[ebp]
	mov	DWORD PTR $T228612[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 85		; 00000055H
	mov	edx, DWORD PTR $T228612[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225798[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T228612[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225798[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 86		; 00000056H
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228625[ebp], edx
	mov	eax, DWORD PTR $T228625[ebp]
	mov	DWORD PTR $T228641[ebp], eax
	mov	ecx, DWORD PTR $T228641[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225798[ebp]
	push	edx
	lea	eax, DWORD PTR $T225801[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 85		; 00000055H
	lea	ecx, DWORD PTR $T225798[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225800[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 195  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_REPAIR_FLEET"), &s_eMISSION_REPAIR_FLEET));

	push	OFFSET ?s_eMISSION_REPAIR_FLEET@@3W4MissionTypes@@A ; s_eMISSION_REPAIR_FLEET
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225803[ebp], esp
	push	OFFSET ??_C@_0BF@FOHJHALL@MISSION_REPAIR_FLEET?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3137[ebp], eax
	lea	ecx, DWORD PTR $T225804[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3138[ebp], eax
	mov	edx, DWORD PTR tv3138[ebp]
	mov	DWORD PTR $T228663[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 87		; 00000057H
	mov	eax, DWORD PTR $T228663[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225802[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T228663[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225802[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 88		; 00000058H
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228676[ebp], eax
	mov	ecx, DWORD PTR $T228676[ebp]
	mov	DWORD PTR $T228693[ebp], ecx
	mov	edx, DWORD PTR $T228693[ebp]
	push	edx
	lea	eax, DWORD PTR $T225802[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225805[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 87		; 00000057H
	lea	ecx, DWORD PTR $T225802[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225804[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 196  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_SPACESHIP"), &s_eMISSION_SPACESHIP));

	push	OFFSET ?s_eMISSION_SPACESHIP@@3W4MissionTypes@@A ; s_eMISSION_SPACESHIP
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225807[ebp], esp
	push	OFFSET ??_C@_0BC@NPJCPJEJ@MISSION_SPACESHIP?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3144[ebp], eax
	lea	edx, DWORD PTR $T225808[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3145[ebp], eax
	mov	eax, DWORD PTR tv3145[ebp]
	mov	DWORD PTR $T228714[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 89		; 00000059H
	mov	ecx, DWORD PTR $T228714[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225806[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T228714[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225806[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 90		; 0000005aH
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228727[ebp], ecx
	mov	edx, DWORD PTR $T228727[ebp]
	mov	DWORD PTR $T228744[ebp], edx
	mov	eax, DWORD PTR $T228744[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225806[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225809[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 89		; 00000059H
	lea	ecx, DWORD PTR $T225806[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225808[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 197  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_CULTURE_BOMB"), &s_eMISSION_CULTURE_BOMB));

	push	OFFSET ?s_eMISSION_CULTURE_BOMB@@3W4MissionTypes@@A ; s_eMISSION_CULTURE_BOMB
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225811[ebp], esp
	push	OFFSET ??_C@_0BF@DBBOGFGE@MISSION_CULTURE_BOMB?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3151[ebp], eax
	lea	eax, DWORD PTR $T225812[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3152[ebp], eax
	mov	ecx, DWORD PTR tv3152[ebp]
	mov	DWORD PTR $T228765[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 91		; 0000005bH
	mov	edx, DWORD PTR $T228765[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225810[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T228765[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225810[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 92		; 0000005cH
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228778[ebp], edx
	mov	eax, DWORD PTR $T228778[ebp]
	mov	DWORD PTR $T228795[ebp], eax
	mov	ecx, DWORD PTR $T228795[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225810[ebp]
	push	edx
	lea	eax, DWORD PTR $T225813[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 91		; 0000005bH
	lea	ecx, DWORD PTR $T225810[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225812[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 198  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_FOUND_RELIGION"), &s_eMISSION_FOUND_RELIGION));

	push	OFFSET ?s_eMISSION_FOUND_RELIGION@@3W4MissionTypes@@A ; s_eMISSION_FOUND_RELIGION
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225815[ebp], esp
	push	OFFSET ??_C@_0BH@NPEBMGMP@MISSION_FOUND_RELIGION?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3158[ebp], eax
	lea	ecx, DWORD PTR $T225816[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3159[ebp], eax
	mov	edx, DWORD PTR tv3159[ebp]
	mov	DWORD PTR $T228816[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 93		; 0000005dH
	mov	eax, DWORD PTR $T228816[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225814[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T228816[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225814[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228829[ebp], eax
	mov	ecx, DWORD PTR $T228829[ebp]
	mov	DWORD PTR $T228846[ebp], ecx
	mov	edx, DWORD PTR $T228846[ebp]
	push	edx
	lea	eax, DWORD PTR $T225814[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225817[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 93		; 0000005dH
	lea	ecx, DWORD PTR $T225814[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225816[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 199  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_GOLDEN_AGE"), &s_eMISSION_GOLDEN_AGE));

	push	OFFSET ?s_eMISSION_GOLDEN_AGE@@3W4MissionTypes@@A ; s_eMISSION_GOLDEN_AGE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225819[ebp], esp
	push	OFFSET ??_C@_0BD@IEJECC@MISSION_GOLDEN_AGE?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3165[ebp], eax
	lea	edx, DWORD PTR $T225820[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3166[ebp], eax
	mov	eax, DWORD PTR tv3166[ebp]
	mov	DWORD PTR $T228867[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 95		; 0000005fH
	mov	ecx, DWORD PTR $T228867[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225818[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T228867[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225818[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 96		; 00000060H
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228880[ebp], ecx
	mov	edx, DWORD PTR $T228880[ebp]
	mov	DWORD PTR $T228897[ebp], edx
	mov	eax, DWORD PTR $T228897[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225818[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225821[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 95		; 0000005fH
	lea	ecx, DWORD PTR $T225818[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225820[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 200  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_BUILD"), &s_eMISSION_BUILD));

	push	OFFSET ?s_eMISSION_BUILD@@3W4MissionTypes@@A ; s_eMISSION_BUILD
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225823[ebp], esp
	push	OFFSET ??_C@_0O@HLECACPL@MISSION_BUILD?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3172[ebp], eax
	lea	eax, DWORD PTR $T225824[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3173[ebp], eax
	mov	ecx, DWORD PTR tv3173[ebp]
	mov	DWORD PTR $T228918[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 97		; 00000061H
	mov	edx, DWORD PTR $T228918[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225822[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T228918[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225822[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 98		; 00000062H
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228931[ebp], edx
	mov	eax, DWORD PTR $T228931[ebp]
	mov	DWORD PTR $T228948[ebp], eax
	mov	ecx, DWORD PTR $T228948[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225822[ebp]
	push	edx
	lea	eax, DWORD PTR $T225825[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 97		; 00000061H
	lea	ecx, DWORD PTR $T225822[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225824[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 201  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_LEAD"), &s_eMISSION_LEAD));

	push	OFFSET ?s_eMISSION_LEAD@@3W4MissionTypes@@A ; s_eMISSION_LEAD
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225827[ebp], esp
	push	OFFSET ??_C@_0N@KLHLOCAN@MISSION_LEAD?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3179[ebp], eax
	lea	ecx, DWORD PTR $T225828[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3180[ebp], eax
	mov	edx, DWORD PTR tv3180[ebp]
	mov	DWORD PTR $T228969[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 99		; 00000063H
	mov	eax, DWORD PTR $T228969[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225826[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T228969[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225826[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 100		; 00000064H
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T228982[ebp], eax
	mov	ecx, DWORD PTR $T228982[ebp]
	mov	DWORD PTR $T228999[ebp], ecx
	mov	edx, DWORD PTR $T228999[ebp]
	push	edx
	lea	eax, DWORD PTR $T225826[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225829[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 99		; 00000063H
	lea	ecx, DWORD PTR $T225826[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225828[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 202  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_DIE_ANIMATION"), &s_eMISSION_DIE_ANIMATION));

	push	OFFSET ?s_eMISSION_DIE_ANIMATION@@3W4MissionTypes@@A ; s_eMISSION_DIE_ANIMATION
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225831[ebp], esp
	push	OFFSET ??_C@_0BG@EKNAJPN@MISSION_DIE_ANIMATION?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3186[ebp], eax
	lea	edx, DWORD PTR $T225832[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3187[ebp], eax
	mov	eax, DWORD PTR tv3187[ebp]
	mov	DWORD PTR $T229020[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 101		; 00000065H
	mov	ecx, DWORD PTR $T229020[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225830[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T229020[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225830[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 102		; 00000066H
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229033[ebp], ecx
	mov	edx, DWORD PTR $T229033[ebp]
	mov	DWORD PTR $T229050[ebp], edx
	mov	eax, DWORD PTR $T229050[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225830[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225833[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 101		; 00000065H
	lea	ecx, DWORD PTR $T225830[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225832[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 203  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_BEGIN_COMBAT"), &s_eMISSION_BEGIN_COMBAT));

	push	OFFSET ?s_eMISSION_BEGIN_COMBAT@@3W4MissionTypes@@A ; s_eMISSION_BEGIN_COMBAT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225835[ebp], esp
	push	OFFSET ??_C@_0BF@KBMPCBGC@MISSION_BEGIN_COMBAT?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3193[ebp], eax
	lea	eax, DWORD PTR $T225836[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3194[ebp], eax
	mov	ecx, DWORD PTR tv3194[ebp]
	mov	DWORD PTR $T229071[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 103		; 00000067H
	mov	edx, DWORD PTR $T229071[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225834[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T229071[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225834[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 104		; 00000068H
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229084[ebp], edx
	mov	eax, DWORD PTR $T229084[ebp]
	mov	DWORD PTR $T229101[ebp], eax
	mov	ecx, DWORD PTR $T229101[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225834[ebp]
	push	edx
	lea	eax, DWORD PTR $T225837[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 103		; 00000067H
	lea	ecx, DWORD PTR $T225834[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225836[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 204  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_END_COMBAT"), &s_eMISSION_END_COMBAT));

	push	OFFSET ?s_eMISSION_END_COMBAT@@3W4MissionTypes@@A ; s_eMISSION_END_COMBAT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225839[ebp], esp
	push	OFFSET ??_C@_0BD@NKGOBLIJ@MISSION_END_COMBAT?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3200[ebp], eax
	lea	ecx, DWORD PTR $T225840[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3201[ebp], eax
	mov	edx, DWORD PTR tv3201[ebp]
	mov	DWORD PTR $T229122[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 105		; 00000069H
	mov	eax, DWORD PTR $T229122[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225838[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T229122[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225838[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 106		; 0000006aH
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229135[ebp], eax
	mov	ecx, DWORD PTR $T229135[ebp]
	mov	DWORD PTR $T229152[ebp], ecx
	mov	edx, DWORD PTR $T229152[ebp]
	push	edx
	lea	eax, DWORD PTR $T225838[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225841[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 105		; 00000069H
	lea	ecx, DWORD PTR $T225838[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225840[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 205  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_AIRSTRIKE"), &s_eMISSION_AIRSTRIKE));

	push	OFFSET ?s_eMISSION_AIRSTRIKE@@3W4MissionTypes@@A ; s_eMISSION_AIRSTRIKE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225843[ebp], esp
	push	OFFSET ??_C@_0BC@BACHFLCB@MISSION_AIRSTRIKE?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3207[ebp], eax
	lea	edx, DWORD PTR $T225844[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3208[ebp], eax
	mov	eax, DWORD PTR tv3208[ebp]
	mov	DWORD PTR $T229173[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 107		; 0000006bH
	mov	ecx, DWORD PTR $T229173[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225842[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T229173[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225842[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 108		; 0000006cH
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229186[ebp], ecx
	mov	edx, DWORD PTR $T229186[ebp]
	mov	DWORD PTR $T229203[ebp], edx
	mov	eax, DWORD PTR $T229203[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225842[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225845[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 107		; 0000006bH
	lea	ecx, DWORD PTR $T225842[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225844[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 206  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_SURRENDER"), &s_eMISSION_SURRENDER));

	push	OFFSET ?s_eMISSION_SURRENDER@@3W4MissionTypes@@A ; s_eMISSION_SURRENDER
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225847[ebp], esp
	push	OFFSET ??_C@_0BC@EPBCGKNJ@MISSION_SURRENDER?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3214[ebp], eax
	lea	eax, DWORD PTR $T225848[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3215[ebp], eax
	mov	ecx, DWORD PTR tv3215[ebp]
	mov	DWORD PTR $T229224[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 109		; 0000006dH
	mov	edx, DWORD PTR $T229224[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225846[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T229224[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225846[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 110		; 0000006eH
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229237[ebp], edx
	mov	eax, DWORD PTR $T229237[ebp]
	mov	DWORD PTR $T229254[ebp], eax
	mov	ecx, DWORD PTR $T229254[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225846[ebp]
	push	edx
	lea	eax, DWORD PTR $T225849[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 109		; 0000006dH
	lea	ecx, DWORD PTR $T225846[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225848[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 207  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_CAPTURED"), &s_eMISSION_CAPTURED));

	push	OFFSET ?s_eMISSION_CAPTURED@@3W4MissionTypes@@A ; s_eMISSION_CAPTURED
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225851[ebp], esp
	push	OFFSET ??_C@_0BB@DPPMBADM@MISSION_CAPTURED?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3221[ebp], eax
	lea	ecx, DWORD PTR $T225852[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3222[ebp], eax
	mov	edx, DWORD PTR tv3222[ebp]
	mov	DWORD PTR $T229275[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 111		; 0000006fH
	mov	eax, DWORD PTR $T229275[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225850[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T229275[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225850[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229288[ebp], eax
	mov	ecx, DWORD PTR $T229288[ebp]
	mov	DWORD PTR $T229305[ebp], ecx
	mov	edx, DWORD PTR $T229305[ebp]
	push	edx
	lea	eax, DWORD PTR $T225850[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225853[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 111		; 0000006fH
	lea	ecx, DWORD PTR $T225850[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225852[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 208  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_IDLE"), &s_eMISSION_IDLE));

	push	OFFSET ?s_eMISSION_IDLE@@3W4MissionTypes@@A ; s_eMISSION_IDLE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225855[ebp], esp
	push	OFFSET ??_C@_0N@MKOEKIAK@MISSION_IDLE?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3228[ebp], eax
	lea	edx, DWORD PTR $T225856[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3229[ebp], eax
	mov	eax, DWORD PTR tv3229[ebp]
	mov	DWORD PTR $T229326[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 113		; 00000071H
	mov	ecx, DWORD PTR $T229326[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225854[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T229326[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225854[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 114		; 00000072H
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229339[ebp], ecx
	mov	edx, DWORD PTR $T229339[ebp]
	mov	DWORD PTR $T229356[ebp], edx
	mov	eax, DWORD PTR $T229356[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225854[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225857[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 113		; 00000071H
	lea	ecx, DWORD PTR $T225854[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225856[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 209  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_DIE"), &s_eMISSION_DIE));

	push	OFFSET ?s_eMISSION_DIE@@3W4MissionTypes@@A ; s_eMISSION_DIE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225859[ebp], esp
	push	OFFSET ??_C@_0M@HDKMMFCJ@MISSION_DIE?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3235[ebp], eax
	lea	eax, DWORD PTR $T225860[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3236[ebp], eax
	mov	ecx, DWORD PTR tv3236[ebp]
	mov	DWORD PTR $T229377[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 115		; 00000073H
	mov	edx, DWORD PTR $T229377[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225858[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T229377[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225858[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 116		; 00000074H
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229390[ebp], edx
	mov	eax, DWORD PTR $T229390[ebp]
	mov	DWORD PTR $T229406[ebp], eax
	mov	ecx, DWORD PTR $T229406[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225858[ebp]
	push	edx
	lea	eax, DWORD PTR $T225861[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 115		; 00000073H
	lea	ecx, DWORD PTR $T225858[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225860[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 210  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_DAMAGE"), &s_eMISSION_DAMAGE));

	push	OFFSET ?s_eMISSION_DAMAGE@@3W4MissionTypes@@A ; s_eMISSION_DAMAGE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225863[ebp], esp
	push	OFFSET ??_C@_0P@FJCBGHCF@MISSION_DAMAGE?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3242[ebp], eax
	lea	ecx, DWORD PTR $T225864[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3243[ebp], eax
	mov	edx, DWORD PTR tv3243[ebp]
	mov	DWORD PTR $T229428[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 117		; 00000075H
	mov	eax, DWORD PTR $T229428[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225862[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T229428[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225862[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 118		; 00000076H
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229441[ebp], eax
	mov	ecx, DWORD PTR $T229441[ebp]
	mov	DWORD PTR $T229457[ebp], ecx
	mov	edx, DWORD PTR $T229457[ebp]
	push	edx
	lea	eax, DWORD PTR $T225862[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225865[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 117		; 00000075H
	lea	ecx, DWORD PTR $T225862[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225864[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 211  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_MULTI_SELECT"), &s_eMISSION_MULTI_SELECT));

	push	OFFSET ?s_eMISSION_MULTI_SELECT@@3W4MissionTypes@@A ; s_eMISSION_MULTI_SELECT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225867[ebp], esp
	push	OFFSET ??_C@_0BF@HKMBIDLB@MISSION_MULTI_SELECT?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3249[ebp], eax
	lea	edx, DWORD PTR $T225868[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3250[ebp], eax
	mov	eax, DWORD PTR tv3250[ebp]
	mov	DWORD PTR $T229479[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 119		; 00000077H
	mov	ecx, DWORD PTR $T229479[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225866[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T229479[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225866[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 120		; 00000078H
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229492[ebp], ecx
	mov	edx, DWORD PTR $T229492[ebp]
	mov	DWORD PTR $T229508[ebp], edx
	mov	eax, DWORD PTR $T229508[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225866[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225869[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 119		; 00000077H
	lea	ecx, DWORD PTR $T225866[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225868[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 212  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_MULTI_DESELECT"), &s_eMISSION_MULTI_DESELECT));

	push	OFFSET ?s_eMISSION_MULTI_DESELECT@@3W4MissionTypes@@A ; s_eMISSION_MULTI_DESELECT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225871[ebp], esp
	push	OFFSET ??_C@_0BH@BGKGPINP@MISSION_MULTI_DESELECT?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3256[ebp], eax
	lea	eax, DWORD PTR $T225872[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3257[ebp], eax
	mov	ecx, DWORD PTR tv3257[ebp]
	mov	DWORD PTR $T229530[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 121		; 00000079H
	mov	edx, DWORD PTR $T229530[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225870[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T229530[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225870[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 122		; 0000007aH
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229543[ebp], edx
	mov	eax, DWORD PTR $T229543[ebp]
	mov	DWORD PTR $T229559[ebp], eax
	mov	ecx, DWORD PTR $T229559[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225870[ebp]
	push	edx
	lea	eax, DWORD PTR $T225873[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 121		; 00000079H
	lea	ecx, DWORD PTR $T225870[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225872[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 213  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_WAIT_FOR"), &s_eMISSION_WAIT_FOR));

	push	OFFSET ?s_eMISSION_WAIT_FOR@@3W4MissionTypes@@A ; s_eMISSION_WAIT_FOR
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225875[ebp], esp
	push	OFFSET ??_C@_0BB@LIFCDCDE@MISSION_WAIT_FOR?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3263[ebp], eax
	lea	ecx, DWORD PTR $T225876[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3264[ebp], eax
	mov	edx, DWORD PTR tv3264[ebp]
	mov	DWORD PTR $T229581[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 123		; 0000007bH
	mov	eax, DWORD PTR $T229581[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225874[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T229581[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225874[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 124		; 0000007cH
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229594[ebp], eax
	mov	ecx, DWORD PTR $T229594[ebp]
	mov	DWORD PTR $T229610[ebp], ecx
	mov	edx, DWORD PTR $T229610[ebp]
	push	edx
	lea	eax, DWORD PTR $T225874[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225877[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 123		; 0000007bH
	lea	ecx, DWORD PTR $T225874[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225876[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 214  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_SPREAD_RELIGION"), &s_eMISSION_SPREAD_RELIGION));

	push	OFFSET ?s_eMISSION_SPREAD_RELIGION@@3W4MissionTypes@@A ; s_eMISSION_SPREAD_RELIGION
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225879[ebp], esp
	push	OFFSET ??_C@_0BI@KPKBBILE@MISSION_SPREAD_RELIGION?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3270[ebp], eax
	lea	edx, DWORD PTR $T225880[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3271[ebp], eax
	mov	eax, DWORD PTR tv3271[ebp]
	mov	DWORD PTR $T229632[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 125		; 0000007dH
	mov	ecx, DWORD PTR $T229632[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225878[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T229632[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225878[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 126		; 0000007eH
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229645[ebp], ecx
	mov	edx, DWORD PTR $T229645[ebp]
	mov	DWORD PTR $T229661[ebp], edx
	mov	eax, DWORD PTR $T229661[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225878[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225881[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 125		; 0000007dH
	lea	ecx, DWORD PTR $T225878[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225880[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 215  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_ENHANCE_RELIGION"), &s_eMISSION_ENHANCE_RELIGION));

	push	OFFSET ?s_eMISSION_ENHANCE_RELIGION@@3W4MissionTypes@@A ; s_eMISSION_ENHANCE_RELIGION
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225883[ebp], esp
	push	OFFSET ??_C@_0BJ@CAFCOFIP@MISSION_ENHANCE_RELIGION?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3277[ebp], eax
	lea	eax, DWORD PTR $T225884[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3278[ebp], eax
	mov	ecx, DWORD PTR tv3278[ebp]
	mov	DWORD PTR $T229683[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 127		; 0000007fH
	mov	edx, DWORD PTR $T229683[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225882[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T229683[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225882[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 128		; 00000080H
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229696[ebp], edx
	mov	eax, DWORD PTR $T229696[ebp]
	mov	DWORD PTR $T229713[ebp], eax
	mov	ecx, DWORD PTR $T229713[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225882[ebp]
	push	edx
	lea	eax, DWORD PTR $T225885[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 127		; 0000007fH
	lea	ecx, DWORD PTR $T225882[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225884[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 216  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_REMOVE_HERESY"), &s_eMISSION_REMOVE_HERESY));

	push	OFFSET ?s_eMISSION_REMOVE_HERESY@@3W4MissionTypes@@A ; s_eMISSION_REMOVE_HERESY
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225887[ebp], esp
	push	OFFSET ??_C@_0BG@EJOOLACC@MISSION_REMOVE_HERESY?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3284[ebp], eax
	lea	ecx, DWORD PTR $T225888[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3285[ebp], eax
	mov	edx, DWORD PTR tv3285[ebp]
	mov	DWORD PTR $T229734[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 129		; 00000081H
	mov	eax, DWORD PTR $T229734[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225886[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T229734[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225886[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 130		; 00000082H
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229747[ebp], eax
	mov	ecx, DWORD PTR $T229747[ebp]
	mov	DWORD PTR $T229764[ebp], ecx
	mov	edx, DWORD PTR $T229764[ebp]
	push	edx
	lea	eax, DWORD PTR $T225886[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225889[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 129		; 00000081H
	lea	ecx, DWORD PTR $T225886[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225888[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 217  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_ESTABLISH_TRADE_ROUTE"), &s_eMISSION_ESTABLISH_TRADE_ROUTE));

	push	OFFSET ?s_eMISSION_ESTABLISH_TRADE_ROUTE@@3W4MissionTypes@@A ; s_eMISSION_ESTABLISH_TRADE_ROUTE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225891[ebp], esp
	push	OFFSET ??_C@_0BO@FAGJDEEL@MISSION_ESTABLISH_TRADE_ROUTE?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3291[ebp], eax
	lea	edx, DWORD PTR $T225892[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3292[ebp], eax
	mov	eax, DWORD PTR tv3292[ebp]
	mov	DWORD PTR $T229785[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 131		; 00000083H
	mov	ecx, DWORD PTR $T229785[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225890[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T229785[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225890[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 132		; 00000084H
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229798[ebp], ecx
	mov	edx, DWORD PTR $T229798[ebp]
	mov	DWORD PTR $T229815[ebp], edx
	mov	eax, DWORD PTR $T229815[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225890[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225893[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 131		; 00000083H
	lea	ecx, DWORD PTR $T225890[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225892[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 218  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_PLUNDER_TRADE_ROUTE"), &s_eMISSION_PLUNDER_TRADE_ROUTE));

	push	OFFSET ?s_eMISSION_PLUNDER_TRADE_ROUTE@@3W4MissionTypes@@A ; s_eMISSION_PLUNDER_TRADE_ROUTE
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225895[ebp], esp
	push	OFFSET ??_C@_0BM@IPGLACPM@MISSION_PLUNDER_TRADE_ROUTE?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3298[ebp], eax
	lea	eax, DWORD PTR $T225896[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3299[ebp], eax
	mov	ecx, DWORD PTR tv3299[ebp]
	mov	DWORD PTR $T229836[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 133		; 00000085H
	mov	edx, DWORD PTR $T229836[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225894[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T229836[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225894[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 134		; 00000086H
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229849[ebp], edx
	mov	eax, DWORD PTR $T229849[ebp]
	mov	DWORD PTR $T229866[ebp], eax
	mov	ecx, DWORD PTR $T229866[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225894[ebp]
	push	edx
	lea	eax, DWORD PTR $T225897[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 133		; 00000085H
	lea	ecx, DWORD PTR $T225894[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225896[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 219  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_CREATE_GREAT_WORK"), &s_eMISSION_GREAT_WORK));

	push	OFFSET ?s_eMISSION_GREAT_WORK@@3W4MissionTypes@@A ; s_eMISSION_GREAT_WORK
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225899[ebp], esp
	push	OFFSET ??_C@_0BK@LFMKFHIN@MISSION_CREATE_GREAT_WORK?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3305[ebp], eax
	lea	ecx, DWORD PTR $T225900[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3306[ebp], eax
	mov	edx, DWORD PTR tv3306[ebp]
	mov	DWORD PTR $T229887[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 135		; 00000087H
	mov	eax, DWORD PTR $T229887[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225898[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T229887[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225898[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 136		; 00000088H
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229900[ebp], eax
	mov	ecx, DWORD PTR $T229900[ebp]
	mov	DWORD PTR $T229917[ebp], ecx
	mov	edx, DWORD PTR $T229917[ebp]
	push	edx
	lea	eax, DWORD PTR $T225898[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225901[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 135		; 00000087H
	lea	ecx, DWORD PTR $T225898[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225900[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 220  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_CHANGE_TRADE_UNIT_HOME_CITY"), &s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY));

	push	OFFSET ?s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY@@3W4MissionTypes@@A ; s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225903[ebp], esp
	push	OFFSET ??_C@_0CE@EABDKEKH@MISSION_CHANGE_TRADE_UNIT_HOME_C@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3312[ebp], eax
	lea	edx, DWORD PTR $T225904[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3313[ebp], eax
	mov	eax, DWORD PTR tv3313[ebp]
	mov	DWORD PTR $T229938[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 137		; 00000089H
	mov	ecx, DWORD PTR $T229938[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225902[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T229938[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225902[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 138		; 0000008aH
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T229951[ebp], ecx
	mov	edx, DWORD PTR $T229951[ebp]
	mov	DWORD PTR $T229968[ebp], edx
	mov	eax, DWORD PTR $T229968[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225902[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225905[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 137		; 00000089H
	lea	ecx, DWORD PTR $T225902[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225904[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 221  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_SELL_EXOTIC_GOODS"), &s_eMISSION_SELL_EXOTIC_GOODS));

	push	OFFSET ?s_eMISSION_SELL_EXOTIC_GOODS@@3W4MissionTypes@@A ; s_eMISSION_SELL_EXOTIC_GOODS
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225907[ebp], esp
	push	OFFSET ??_C@_0BK@ICBBGKKM@MISSION_SELL_EXOTIC_GOODS?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3319[ebp], eax
	lea	eax, DWORD PTR $T225908[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3320[ebp], eax
	mov	ecx, DWORD PTR tv3320[ebp]
	mov	DWORD PTR $T229989[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 139		; 0000008bH
	mov	edx, DWORD PTR $T229989[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225906[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T229989[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225906[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 140		; 0000008cH
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T230002[ebp], edx
	mov	eax, DWORD PTR $T230002[ebp]
	mov	DWORD PTR $T230019[ebp], eax
	mov	ecx, DWORD PTR $T230019[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225906[ebp]
	push	edx
	lea	eax, DWORD PTR $T225909[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 139		; 0000008bH
	lea	ecx, DWORD PTR $T225906[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225908[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 222  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_GIVE_POLICIES"), &s_eMISSION_GIVE_POLICIES));

	push	OFFSET ?s_eMISSION_GIVE_POLICIES@@3W4MissionTypes@@A ; s_eMISSION_GIVE_POLICIES
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225911[ebp], esp
	push	OFFSET ??_C@_0BG@LOAGIFNL@MISSION_GIVE_POLICIES?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3326[ebp], eax
	lea	ecx, DWORD PTR $T225912[ebp]
	push	ecx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3327[ebp], eax
	mov	edx, DWORD PTR tv3327[ebp]
	mov	DWORD PTR $T230040[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 141		; 0000008dH
	mov	eax, DWORD PTR $T230040[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225910[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T230040[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR $T225910[ebp+28], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 142		; 0000008eH
	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T230053[ebp], eax
	mov	ecx, DWORD PTR $T230053[ebp]
	mov	DWORD PTR $T230070[ebp], ecx
	mov	edx, DWORD PTR $T230070[ebp]
	push	edx
	lea	eax, DWORD PTR $T225910[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225913[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 141		; 0000008dH
	lea	ecx, DWORD PTR $T225910[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225912[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 223  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_ONE_SHOT_TOURISM"), &s_eMISSION_ONE_SHOT_TOURISM));

	push	OFFSET ?s_eMISSION_ONE_SHOT_TOURISM@@3W4MissionTypes@@A ; s_eMISSION_ONE_SHOT_TOURISM
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225915[ebp], esp
	push	OFFSET ??_C@_0BJ@EJBMPPFF@MISSION_ONE_SHOT_TOURISM?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3333[ebp], eax
	lea	edx, DWORD PTR $T225916[ebp]
	push	edx
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3334[ebp], eax
	mov	eax, DWORD PTR tv3334[ebp]
	mov	DWORD PTR $T230091[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 143		; 0000008fH
	mov	ecx, DWORD PTR $T230091[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T225914[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T230091[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR $T225914[ebp+28], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 144		; 00000090H
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T230104[ebp], ecx
	mov	edx, DWORD PTR $T230104[ebp]
	mov	DWORD PTR $T230121[ebp], edx
	mov	eax, DWORD PTR $T230121[ebp]
	push	eax
	lea	ecx, DWORD PTR $T225914[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225917[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 143		; 0000008fH
	lea	ecx, DWORD PTR $T225914[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225916[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 224  : 		kMissionTypesLookupTable.insert(make_pair(std::string("MISSION_CHANGE_ADMIRAL_PORT"), &s_eMISSION_CHANGE_ADMIRAL_PORT));

	push	OFFSET ?s_eMISSION_CHANGE_ADMIRAL_PORT@@3W4MissionTypes@@A ; s_eMISSION_CHANGE_ADMIRAL_PORT
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T225919[ebp], esp
	push	OFFSET ??_C@_0BM@MFANNJKP@MISSION_CHANGE_ADMIRAL_PORT?$AA@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv3340[ebp], eax
	lea	eax, DWORD PTR $T225920[ebp]
	push	eax
	call	??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv3341[ebp], eax
	mov	ecx, DWORD PTR tv3341[ebp]
	mov	DWORD PTR $T230142[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 145		; 00000091H
	mov	edx, DWORD PTR $T230142[ebp]
	push	edx
	lea	ecx, DWORD PTR $T225918[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T230142[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T225918[ebp+28], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 146		; 00000092H
	mov	edx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T230155[ebp], edx
	mov	eax, DWORD PTR $T230155[ebp]
	mov	DWORD PTR $T230435[ebp], eax
	mov	ecx, DWORD PTR $T230435[ebp]
	push	ecx
	lea	edx, DWORD PTR $T225918[ebp]
	push	edx
	lea	eax, DWORD PTR $T225921[ebp]
	push	eax
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	mov	BYTE PTR __$EHRec$[ebp+8], 145		; 00000091H
	lea	ecx, DWORD PTR $T225918[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T225920[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 225  : 
; 226  : 		Database::Results kResults;

	push	0
	lea	ecx, DWORD PTR _kResults$221182[ebp]
	call	DWORD PTR __imp_??0Results@Database@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 147		; 00000093H

; 227  : 		if(db.Execute(kResults, "SELECT Type, ID from Missions"))

	push	-1
	push	OFFSET ??_C@_0BO@BDJODNLG@SELECT?5Type?0?5ID?5from?5Missions?$AA@
	lea	ecx, DWORD PTR _kResults$221182[ebp]
	push	ecx
	mov	ecx, DWORD PTR _db$[ebp]
	call	DWORD PTR __imp_?Execute@Connection@Database@@QBE_NAAVResults@2@PBDH@Z
	movzx	edx, al
	test	edx, edx
	je	$LN9@AcquireTyp
$LN8@AcquireTyp:

; 228  : 		{
; 229  : 			while(kResults.Step())

	lea	ecx, DWORD PTR _kResults$221182[ebp]
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	movzx	eax, al
	test	eax, eax
	je	$LN9@AcquireTyp

; 230  : 			{
; 231  : 				std::string strMissionType = kResults.GetText(0);

	push	0
	lea	ecx, DWORD PTR _kResults$221182[ebp]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDH@Z
	push	eax
	lea	ecx, DWORD PTR _strMissionType$221188[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 148		; 00000094H

; 232  : 				LookupTable::iterator it = kMissionTypesLookupTable.find(strMissionType);

	lea	ecx, DWORD PTR _strMissionType$221188[ebp]
	push	ecx
	lea	edx, DWORD PTR _it$221189[ebp]
	push	edx
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::lower_bound

; 233  : 				if(it != kMissionTypesLookupTable.end())

	mov	eax, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T230622[ebp], eax
	mov	ecx, DWORD PTR $T230622[ebp]
	mov	DWORD PTR $T225922[ebp], ecx
	mov	edx, DWORD PTR _it$221189[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T225922[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN6@AcquireTyp

; 234  : 				{
; 235  : 					(*it->second) = static_cast<MissionTypes>(kResults.GetInt(1));

	mov	eax, DWORD PTR _it$221189[ebp]
	add	eax, 8
	mov	DWORD PTR $T230669[ebp], eax
	push	1
	lea	ecx, DWORD PTR _kResults$221182[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	ecx, DWORD PTR $T230669[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [edx], eax
$LN6@AcquireTyp:

; 236  : 				}
; 237  : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 147		; 00000093H
	lea	ecx, DWORD PTR _strMissionType$221188[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	$LN8@AcquireTyp
$LN9@AcquireTyp:

; 238  : 		}
; 239  : 
; 240  : 		int iNumTypes = db.Count("Missions", false);

	push	0
	push	OFFSET ??_C@_08BIIFDPDO@Missions?$AA@
	mov	ecx, DWORD PTR _db$[ebp]
	call	DWORD PTR __imp_?Count@Connection@Database@@QAEHPBD_N@Z
	mov	DWORD PTR _iNumTypes$221194[ebp], eax

; 241  : 		if(iNumTypes >= 0)

	cmp	DWORD PTR _iNumTypes$221194[ebp], 0
	jl	SHORT $LN5@AcquireTyp

; 242  : 		{
; 243  : 			s_uiNUM_MISSION_TYPES = static_cast<unsigned int>(iNumTypes);

	mov	eax, DWORD PTR _iNumTypes$221194[ebp]
	mov	DWORD PTR ?s_uiNUM_MISSION_TYPES@@3IA, eax ; s_uiNUM_MISSION_TYPES
$LN5@AcquireTyp:

; 244  : 		}
; 245  : 
; 246  : 		for(LookupTable::iterator it = kMissionTypesLookupTable.begin(); it != kMissionTypesLookupTable.end(); ++it)

	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T230675[ebp], ecx
	mov	edx, DWORD PTR $T230675[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T230684[ebp], eax
	mov	ecx, DWORD PTR $T230684[ebp]
	mov	DWORD PTR _it$221198[ebp], ecx
	jmp	SHORT $LN4@AcquireTyp
$LN1964@AcquireTyp:
	mov	edx, DWORD PTR _it$221198[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _it$221198[ebp], eax
$LN4@AcquireTyp:
	mov	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp+8]
	mov	DWORD PTR $T230728[ebp], ecx
	mov	edx, DWORD PTR $T230728[ebp]
	mov	DWORD PTR $T225923[ebp], edx
	mov	eax, DWORD PTR _it$221198[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T225923[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	$LN2@AcquireTyp

; 247  : 		{
; 248  : 			if((*it->second) == NO_MISSION)

	mov	ecx, DWORD PTR _it$221198[ebp]
	mov	edx, DWORD PTR [ecx+36]
	cmp	DWORD PTR [edx], -1
	jne	$LN1@AcquireTyp

; 249  : 			{
; 250  : 				char msg[256] = {0};

	mov	BYTE PTR _msg$221205[ebp], 0
	push	255					; 000000ffH
	push	0
	lea	eax, DWORD PTR _msg$221205[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 251  : 				sprintf_s(msg, "MissionType - %s is used in the DLL but does not exist in the database.", it->first.c_str());

	mov	ecx, DWORD PTR _it$221198[ebp]
	add	ecx, 8
	mov	DWORD PTR $T230799[ebp], ecx
	mov	ecx, DWORD PTR $T230799[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	OFFSET ??_C@_0EI@GBBLEJGE@MissionType?5?9?5?$CFs?5is?5used?5in?5the?5@
	lea	edx, DWORD PTR _msg$221205[ebp]
	push	edx
	call	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ	; sprintf_s<256>
	add	esp, 12					; 0000000cH

; 252  : 				FILogFile* pLog = LOGFILEMGR.GetLog("Gamecore.log", FILogFile::kDontTimeStamp);

	call	?GetInstance@FILogFileMgr@@SAAAV1@XZ	; FILogFileMgr::GetInstance
	mov	DWORD PTR tv2858[ebp], eax
	push	0
	push	1
	push	OFFSET ??_C@_0N@GNBOCNM@Gamecore?4log?$AA@
	mov	eax, DWORD PTR tv2858[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv2858[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR _pLog$221207[ebp], eax

; 253  : 				pLog->WarningMsg(msg);

	lea	ecx, DWORD PTR _msg$221205[ebp]
	push	ecx
	mov	edx, DWORD PTR _pLog$221207[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pLog$221207[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	add	esp, 8
$LN1@AcquireTyp:

; 254  : 				CvAssertMsg(false, msg);
; 255  : 			}
; 256  : 		}

	jmp	$LN1964@AcquireTyp
$LN2@AcquireTyp:

; 257  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR _kResults$221182[ebp]
	call	DWORD PTR __imp_??1Results@Database@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	call	??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >

; 258  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$0:
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp]
	jmp	??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@tr1@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$2:
	lea	ecx, DWORD PTR $T225652[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$3:
	lea	ecx, DWORD PTR $T225650[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$5:
	lea	ecx, DWORD PTR $T225656[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$6:
	lea	ecx, DWORD PTR $T225654[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$8:
	lea	ecx, DWORD PTR $T225660[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$9:
	lea	ecx, DWORD PTR $T225658[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$11:
	lea	ecx, DWORD PTR $T225664[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$12:
	lea	ecx, DWORD PTR $T225662[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$14:
	lea	ecx, DWORD PTR $T225668[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$15:
	lea	ecx, DWORD PTR $T225666[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$17:
	lea	ecx, DWORD PTR $T225672[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$18:
	lea	ecx, DWORD PTR $T225670[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$19:
	lea	ecx, DWORD PTR _kResults$218144[ebp]
	jmp	DWORD PTR __imp_??1Results@Database@@UAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$20:
	lea	ecx, DWORD PTR _strArtifactType$218150[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$230:
	lea	ecx, DWORD PTR _kArtifactTypeLookupTable$217906[ebp+4]
	jmp	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$232:
	mov	ecx, DWORD PTR $T226671[ebp]
	jmp	??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$234:
	mov	ecx, DWORD PTR $T226711[ebp]
	jmp	??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$21:
	lea	ecx, DWORD PTR _kTypeLookupTable$219281[ebp]
	jmp	??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@tr1@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$23:
	lea	ecx, DWORD PTR $T225678[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$24:
	lea	ecx, DWORD PTR $T225676[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$26:
	lea	ecx, DWORD PTR $T225682[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$27:
	lea	ecx, DWORD PTR $T225680[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$29:
	lea	ecx, DWORD PTR $T225686[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$30:
	lea	ecx, DWORD PTR $T225684[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$31:
	lea	ecx, DWORD PTR _kResults$219501[ebp]
	jmp	DWORD PTR __imp_??1Results@Database@@UAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$32:
	lea	ecx, DWORD PTR _strType$219507[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$249:
	lea	ecx, DWORD PTR _kTypeLookupTable$219281[ebp+4]
	jmp	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$251:
	mov	ecx, DWORD PTR $T227134[ebp]
	jmp	??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$253:
	mov	ecx, DWORD PTR $T227174[ebp]
	jmp	??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$33:
	lea	ecx, DWORD PTR _kMissionTypesLookupTable$220632[ebp]
	jmp	??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@tr1@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$35:
	lea	ecx, DWORD PTR $T225692[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$36:
	lea	ecx, DWORD PTR $T225690[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$38:
	lea	ecx, DWORD PTR $T225696[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$39:
	lea	ecx, DWORD PTR $T225694[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$41:
	lea	ecx, DWORD PTR $T225700[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$42:
	lea	ecx, DWORD PTR $T225698[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$44:
	lea	ecx, DWORD PTR $T225704[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$45:
	lea	ecx, DWORD PTR $T225702[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$47:
	lea	ecx, DWORD PTR $T225708[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$48:
	lea	ecx, DWORD PTR $T225706[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$50:
	lea	ecx, DWORD PTR $T225712[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$51:
	lea	ecx, DWORD PTR $T225710[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$53:
	lea	ecx, DWORD PTR $T225716[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$54:
	lea	ecx, DWORD PTR $T225714[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$56:
	lea	ecx, DWORD PTR $T225720[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$57:
	lea	ecx, DWORD PTR $T225718[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$59:
	lea	ecx, DWORD PTR $T225724[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$60:
	lea	ecx, DWORD PTR $T225722[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$62:
	lea	ecx, DWORD PTR $T225728[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$63:
	lea	ecx, DWORD PTR $T225726[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$65:
	lea	ecx, DWORD PTR $T225732[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$66:
	lea	ecx, DWORD PTR $T225730[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$68:
	lea	ecx, DWORD PTR $T225736[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$69:
	lea	ecx, DWORD PTR $T225734[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$71:
	lea	ecx, DWORD PTR $T225740[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$72:
	lea	ecx, DWORD PTR $T225738[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$74:
	lea	ecx, DWORD PTR $T225744[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$75:
	lea	ecx, DWORD PTR $T225742[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$77:
	lea	ecx, DWORD PTR $T225748[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$78:
	lea	ecx, DWORD PTR $T225746[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$80:
	lea	ecx, DWORD PTR $T225752[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$81:
	lea	ecx, DWORD PTR $T225750[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$83:
	lea	ecx, DWORD PTR $T225756[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$84:
	lea	ecx, DWORD PTR $T225754[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$86:
	lea	ecx, DWORD PTR $T225760[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$87:
	lea	ecx, DWORD PTR $T225758[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$89:
	lea	ecx, DWORD PTR $T225764[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$90:
	lea	ecx, DWORD PTR $T225762[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$92:
	lea	ecx, DWORD PTR $T225768[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$93:
	lea	ecx, DWORD PTR $T225766[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$95:
	lea	ecx, DWORD PTR $T225772[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$96:
	lea	ecx, DWORD PTR $T225770[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$98:
	lea	ecx, DWORD PTR $T225776[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$99:
	lea	ecx, DWORD PTR $T225774[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$101:
	lea	ecx, DWORD PTR $T225780[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$102:
	lea	ecx, DWORD PTR $T225778[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$104:
	lea	ecx, DWORD PTR $T225784[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$105:
	lea	ecx, DWORD PTR $T225782[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$107:
	lea	ecx, DWORD PTR $T225788[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$108:
	lea	ecx, DWORD PTR $T225786[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$110:
	lea	ecx, DWORD PTR $T225792[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$111:
	lea	ecx, DWORD PTR $T225790[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$113:
	lea	ecx, DWORD PTR $T225796[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$114:
	lea	ecx, DWORD PTR $T225794[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$116:
	lea	ecx, DWORD PTR $T225800[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$117:
	lea	ecx, DWORD PTR $T225798[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$119:
	lea	ecx, DWORD PTR $T225804[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$120:
	lea	ecx, DWORD PTR $T225802[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$122:
	lea	ecx, DWORD PTR $T225808[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$123:
	lea	ecx, DWORD PTR $T225806[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$125:
	lea	ecx, DWORD PTR $T225812[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$126:
	lea	ecx, DWORD PTR $T225810[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$128:
	lea	ecx, DWORD PTR $T225816[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$129:
	lea	ecx, DWORD PTR $T225814[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$131:
	lea	ecx, DWORD PTR $T225820[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$132:
	lea	ecx, DWORD PTR $T225818[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$134:
	lea	ecx, DWORD PTR $T225824[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$135:
	lea	ecx, DWORD PTR $T225822[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$137:
	lea	ecx, DWORD PTR $T225828[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$138:
	lea	ecx, DWORD PTR $T225826[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$140:
	lea	ecx, DWORD PTR $T225832[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$141:
	lea	ecx, DWORD PTR $T225830[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$143:
	lea	ecx, DWORD PTR $T225836[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$144:
	lea	ecx, DWORD PTR $T225834[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$146:
	lea	ecx, DWORD PTR $T225840[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$147:
	lea	ecx, DWORD PTR $T225838[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$149:
	lea	ecx, DWORD PTR $T225844[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$150:
	lea	ecx, DWORD PTR $T225842[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$152:
	lea	ecx, DWORD PTR $T225848[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$153:
	lea	ecx, DWORD PTR $T225846[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$155:
	lea	ecx, DWORD PTR $T225852[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$156:
	lea	ecx, DWORD PTR $T225850[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$158:
	lea	ecx, DWORD PTR $T225856[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$159:
	lea	ecx, DWORD PTR $T225854[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$161:
	lea	ecx, DWORD PTR $T225860[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$162:
	lea	ecx, DWORD PTR $T225858[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$164:
	lea	ecx, DWORD PTR $T225864[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$165:
	lea	ecx, DWORD PTR $T225862[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$167:
	lea	ecx, DWORD PTR $T225868[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$168:
	lea	ecx, DWORD PTR $T225866[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$170:
	lea	ecx, DWORD PTR $T225872[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$171:
	lea	ecx, DWORD PTR $T225870[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$173:
	lea	ecx, DWORD PTR $T225876[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$174:
	lea	ecx, DWORD PTR $T225874[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$176:
	lea	ecx, DWORD PTR $T225880[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$177:
	lea	ecx, DWORD PTR $T225878[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$179:
	lea	ecx, DWORD PTR $T225884[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$180:
	lea	ecx, DWORD PTR $T225882[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$182:
	lea	ecx, DWORD PTR $T225888[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$183:
	lea	ecx, DWORD PTR $T225886[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$185:
	lea	ecx, DWORD PTR $T225892[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$186:
	lea	ecx, DWORD PTR $T225890[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$188:
	lea	ecx, DWORD PTR $T225896[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$189:
	lea	ecx, DWORD PTR $T225894[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$191:
	lea	ecx, DWORD PTR $T225900[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$192:
	lea	ecx, DWORD PTR $T225898[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$194:
	lea	ecx, DWORD PTR $T225904[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$195:
	lea	ecx, DWORD PTR $T225902[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$197:
	lea	ecx, DWORD PTR $T225908[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$198:
	lea	ecx, DWORD PTR $T225906[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$200:
	lea	ecx, DWORD PTR $T225912[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$201:
	lea	ecx, DWORD PTR $T225910[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$203:
	lea	ecx, DWORD PTR $T225916[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$204:
	lea	ecx, DWORD PTR $T225914[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$206:
	lea	ecx, DWORD PTR $T225920[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$207:
	lea	ecx, DWORD PTR $T225918[ebp]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$208:
	lea	ecx, DWORD PTR _kResults$221182[ebp]
	jmp	DWORD PTR __imp_??1Results@Database@@UAE@XZ
__unwindfunclet$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z$209:
	lea	ecx, DWORD PTR _strMissionType$221188[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8044]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-120]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AcquireTypes@CvTypes@@YAXAAVConnection@Database@@@Z ENDP ; CvTypes::AcquireTypes
PUBLIC	??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >
; Function compile flags: /Odtp
;	COMDAT ??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -72						; size = 4
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@tr1@std@@QAE@XZ PROC ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@tr1@std@@QAE@XZ ENDP ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>
_TEXT	ENDS
PUBLIC	??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >
; Function compile flags: /Odtp
;	COMDAT ??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -72						; size = 4
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@tr1@std@@QAE@XZ PROC ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@tr1@std@@QAE@XZ ENDP ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@tr1@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -72						; size = 4
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@tr1@std@@QAE@XZ PROC ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@tr1@std@@QAE@XZ ENDP ; std::tr1::unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~unordered_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>
_TEXT	ENDS
PUBLIC	?getARTIFACT_ANCIENT_RUIN@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ; CvTypes::getARTIFACT_ANCIENT_RUIN
; Function compile flags: /Odtp
;	COMDAT ?getARTIFACT_ANCIENT_RUIN@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ
_TEXT	SEGMENT
?getARTIFACT_ANCIENT_RUIN@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ PROC ; CvTypes::getARTIFACT_ANCIENT_RUIN, COMDAT

; 264  : {

	push	ebp
	mov	ebp, esp

; 265  : 	return s_eARTIFACT_ANCIENT_RUIN;

	mov	eax, DWORD PTR ?s_eARTIFACT_ANCIENT_RUIN@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_ANCIENT_RUIN

; 266  : }

	pop	ebp
	ret	0
?getARTIFACT_ANCIENT_RUIN@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ENDP ; CvTypes::getARTIFACT_ANCIENT_RUIN
_TEXT	ENDS
PUBLIC	?getARTIFACT_BARBARIAN_CAMP@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ; CvTypes::getARTIFACT_BARBARIAN_CAMP
; Function compile flags: /Odtp
;	COMDAT ?getARTIFACT_BARBARIAN_CAMP@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ
_TEXT	SEGMENT
?getARTIFACT_BARBARIAN_CAMP@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ PROC ; CvTypes::getARTIFACT_BARBARIAN_CAMP, COMDAT

; 269  : {

	push	ebp
	mov	ebp, esp

; 270  : 	return s_eARTIFACT_BARBARIAN_CAMP;

	mov	eax, DWORD PTR ?s_eARTIFACT_BARBARIAN_CAMP@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BARBARIAN_CAMP

; 271  : }

	pop	ebp
	ret	0
?getARTIFACT_BARBARIAN_CAMP@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ENDP ; CvTypes::getARTIFACT_BARBARIAN_CAMP
_TEXT	ENDS
PUBLIC	?getARTIFACT_BATTLE_RANGED@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ; CvTypes::getARTIFACT_BATTLE_RANGED
; Function compile flags: /Odtp
;	COMDAT ?getARTIFACT_BATTLE_RANGED@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ
_TEXT	SEGMENT
?getARTIFACT_BATTLE_RANGED@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ PROC ; CvTypes::getARTIFACT_BATTLE_RANGED, COMDAT

; 274  : {

	push	ebp
	mov	ebp, esp

; 275  : 	return s_eARTIFACT_BATTLE_RANGED;

	mov	eax, DWORD PTR ?s_eARTIFACT_BATTLE_RANGED@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BATTLE_RANGED

; 276  : }

	pop	ebp
	ret	0
?getARTIFACT_BATTLE_RANGED@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ENDP ; CvTypes::getARTIFACT_BATTLE_RANGED
_TEXT	ENDS
PUBLIC	?getARTIFACT_BATTLE_MELEE@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ; CvTypes::getARTIFACT_BATTLE_MELEE
; Function compile flags: /Odtp
;	COMDAT ?getARTIFACT_BATTLE_MELEE@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ
_TEXT	SEGMENT
?getARTIFACT_BATTLE_MELEE@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ PROC ; CvTypes::getARTIFACT_BATTLE_MELEE, COMDAT

; 279  : {

	push	ebp
	mov	ebp, esp

; 280  : 	return s_eARTIFACT_BATTLE_MELEE;

	mov	eax, DWORD PTR ?s_eARTIFACT_BATTLE_MELEE@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_BATTLE_MELEE

; 281  : }

	pop	ebp
	ret	0
?getARTIFACT_BATTLE_MELEE@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ENDP ; CvTypes::getARTIFACT_BATTLE_MELEE
_TEXT	ENDS
PUBLIC	?getARTIFACT_RAZED_CITY@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ; CvTypes::getARTIFACT_RAZED_CITY
; Function compile flags: /Odtp
;	COMDAT ?getARTIFACT_RAZED_CITY@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ
_TEXT	SEGMENT
?getARTIFACT_RAZED_CITY@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ PROC ; CvTypes::getARTIFACT_RAZED_CITY, COMDAT

; 284  : {

	push	ebp
	mov	ebp, esp

; 285  : 	return s_eARTIFACT_RAZED_CITY;

	mov	eax, DWORD PTR ?s_eARTIFACT_RAZED_CITY@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_RAZED_CITY

; 286  : }

	pop	ebp
	ret	0
?getARTIFACT_RAZED_CITY@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ENDP ; CvTypes::getARTIFACT_RAZED_CITY
_TEXT	ENDS
PUBLIC	?getARTIFACT_WRITING@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ; CvTypes::getARTIFACT_WRITING
; Function compile flags: /Odtp
;	COMDAT ?getARTIFACT_WRITING@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ
_TEXT	SEGMENT
?getARTIFACT_WRITING@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ PROC ; CvTypes::getARTIFACT_WRITING, COMDAT

; 289  : {

	push	ebp
	mov	ebp, esp

; 290  : 	return s_eARTIFACT_WRITING;

	mov	eax, DWORD PTR ?s_eARTIFACT_WRITING@@3W4GreatWorkArtifactClass@@A ; s_eARTIFACT_WRITING

; 291  : }

	pop	ebp
	ret	0
?getARTIFACT_WRITING@CvTypes@@YA?BW4GreatWorkArtifactClass@@XZ ENDP ; CvTypes::getARTIFACT_WRITING
_TEXT	ENDS
PUBLIC	?getGREAT_WORK_SLOT_ART_ARTIFACT@CvTypes@@YA?BW4GreatWorkSlotType@@XZ ; CvTypes::getGREAT_WORK_SLOT_ART_ARTIFACT
; Function compile flags: /Odtp
;	COMDAT ?getGREAT_WORK_SLOT_ART_ARTIFACT@CvTypes@@YA?BW4GreatWorkSlotType@@XZ
_TEXT	SEGMENT
?getGREAT_WORK_SLOT_ART_ARTIFACT@CvTypes@@YA?BW4GreatWorkSlotType@@XZ PROC ; CvTypes::getGREAT_WORK_SLOT_ART_ARTIFACT, COMDAT

; 297  : {

	push	ebp
	mov	ebp, esp

; 298  : 	return s_eGREAT_WORK_SLOT_ART_ARTIFACT;

	mov	eax, DWORD PTR ?s_eGREAT_WORK_SLOT_ART_ARTIFACT@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_ART_ARTIFACT

; 299  : }

	pop	ebp
	ret	0
?getGREAT_WORK_SLOT_ART_ARTIFACT@CvTypes@@YA?BW4GreatWorkSlotType@@XZ ENDP ; CvTypes::getGREAT_WORK_SLOT_ART_ARTIFACT
_TEXT	ENDS
PUBLIC	?getGREAT_WORK_SLOT_LITERATURE@CvTypes@@YA?BW4GreatWorkSlotType@@XZ ; CvTypes::getGREAT_WORK_SLOT_LITERATURE
; Function compile flags: /Odtp
;	COMDAT ?getGREAT_WORK_SLOT_LITERATURE@CvTypes@@YA?BW4GreatWorkSlotType@@XZ
_TEXT	SEGMENT
?getGREAT_WORK_SLOT_LITERATURE@CvTypes@@YA?BW4GreatWorkSlotType@@XZ PROC ; CvTypes::getGREAT_WORK_SLOT_LITERATURE, COMDAT

; 302  : {

	push	ebp
	mov	ebp, esp

; 303  : 	return s_eGREAT_WORK_SLOT_LITERATURE;

	mov	eax, DWORD PTR ?s_eGREAT_WORK_SLOT_LITERATURE@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_LITERATURE

; 304  : }

	pop	ebp
	ret	0
?getGREAT_WORK_SLOT_LITERATURE@CvTypes@@YA?BW4GreatWorkSlotType@@XZ ENDP ; CvTypes::getGREAT_WORK_SLOT_LITERATURE
_TEXT	ENDS
PUBLIC	?getGREAT_WORK_SLOT_MUSIC@CvTypes@@YA?BW4GreatWorkSlotType@@XZ ; CvTypes::getGREAT_WORK_SLOT_MUSIC
; Function compile flags: /Odtp
;	COMDAT ?getGREAT_WORK_SLOT_MUSIC@CvTypes@@YA?BW4GreatWorkSlotType@@XZ
_TEXT	SEGMENT
?getGREAT_WORK_SLOT_MUSIC@CvTypes@@YA?BW4GreatWorkSlotType@@XZ PROC ; CvTypes::getGREAT_WORK_SLOT_MUSIC, COMDAT

; 307  : {

	push	ebp
	mov	ebp, esp

; 308  : 	return s_eGREAT_WORK_SLOT_MUSIC;

	mov	eax, DWORD PTR ?s_eGREAT_WORK_SLOT_MUSIC@@3W4GreatWorkSlotType@@A ; s_eGREAT_WORK_SLOT_MUSIC

; 309  : }

	pop	ebp
	ret	0
?getGREAT_WORK_SLOT_MUSIC@CvTypes@@YA?BW4GreatWorkSlotType@@XZ ENDP ; CvTypes::getGREAT_WORK_SLOT_MUSIC
_TEXT	ENDS
PUBLIC	?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_MOVE_TO, COMDAT

; 314  : {

	push	ebp
	mov	ebp, esp

; 315  : 	return s_eMISSION_MOVE_TO;

	mov	eax, DWORD PTR ?s_eMISSION_MOVE_TO@@3W4MissionTypes@@A ; s_eMISSION_MOVE_TO

; 316  : }

	pop	ebp
	ret	0
?getMISSION_MOVE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_MOVE_TO
_TEXT	ENDS
PUBLIC	?getMISSION_ROUTE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ROUTE_TO
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_ROUTE_TO@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_ROUTE_TO@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_ROUTE_TO, COMDAT

; 318  : {

	push	ebp
	mov	ebp, esp

; 319  : 	return s_eMISSION_ROUTE_TO;

	mov	eax, DWORD PTR ?s_eMISSION_ROUTE_TO@@3W4MissionTypes@@A ; s_eMISSION_ROUTE_TO

; 320  : }

	pop	ebp
	ret	0
?getMISSION_ROUTE_TO@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_ROUTE_TO
_TEXT	ENDS
PUBLIC	?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MOVE_TO_UNIT
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_MOVE_TO_UNIT, COMDAT

; 322  : {

	push	ebp
	mov	ebp, esp

; 323  : 	return s_eMISSION_MOVE_TO_UNIT;

	mov	eax, DWORD PTR ?s_eMISSION_MOVE_TO_UNIT@@3W4MissionTypes@@A ; s_eMISSION_MOVE_TO_UNIT

; 324  : }

	pop	ebp
	ret	0
?getMISSION_MOVE_TO_UNIT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_MOVE_TO_UNIT
_TEXT	ENDS
PUBLIC	?getMISSION_SWAP_UNITS@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SWAP_UNITS
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_SWAP_UNITS@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_SWAP_UNITS@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_SWAP_UNITS, COMDAT

; 326  : {

	push	ebp
	mov	ebp, esp

; 327  : 	return s_eMISSION_SWAP_UNITS;

	mov	eax, DWORD PTR ?s_eMISSION_SWAP_UNITS@@3W4MissionTypes@@A ; s_eMISSION_SWAP_UNITS

; 328  : }

	pop	ebp
	ret	0
?getMISSION_SWAP_UNITS@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_SWAP_UNITS
_TEXT	ENDS
PUBLIC	?getMISSION_SKIP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SKIP
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_SKIP@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_SKIP@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_SKIP, COMDAT

; 330  : {

	push	ebp
	mov	ebp, esp

; 331  : 	return s_eMISSION_SKIP;

	mov	eax, DWORD PTR ?s_eMISSION_SKIP@@3W4MissionTypes@@A ; s_eMISSION_SKIP

; 332  : }

	pop	ebp
	ret	0
?getMISSION_SKIP@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_SKIP
_TEXT	ENDS
PUBLIC	?getMISSION_SLEEP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SLEEP
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_SLEEP@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_SLEEP@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_SLEEP, COMDAT

; 334  : {

	push	ebp
	mov	ebp, esp

; 335  : 	return s_eMISSION_SLEEP;

	mov	eax, DWORD PTR ?s_eMISSION_SLEEP@@3W4MissionTypes@@A ; s_eMISSION_SLEEP

; 336  : }

	pop	ebp
	ret	0
?getMISSION_SLEEP@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_SLEEP
_TEXT	ENDS
PUBLIC	?getMISSION_ALERT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ALERT
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_ALERT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_ALERT@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_ALERT, COMDAT

; 338  : {

	push	ebp
	mov	ebp, esp

; 339  : 	return s_eMISSION_ALERT;

	mov	eax, DWORD PTR ?s_eMISSION_ALERT@@3W4MissionTypes@@A ; s_eMISSION_ALERT

; 340  : }

	pop	ebp
	ret	0
?getMISSION_ALERT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_ALERT
_TEXT	ENDS
PUBLIC	?getMISSION_FORTIFY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_FORTIFY
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_FORTIFY@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_FORTIFY@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_FORTIFY, COMDAT

; 342  : {

	push	ebp
	mov	ebp, esp

; 343  : 	return s_eMISSION_FORTIFY;

	mov	eax, DWORD PTR ?s_eMISSION_FORTIFY@@3W4MissionTypes@@A ; s_eMISSION_FORTIFY

; 344  : }

	pop	ebp
	ret	0
?getMISSION_FORTIFY@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_FORTIFY
_TEXT	ENDS
PUBLIC	?getMISSION_GARRISON@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_GARRISON
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_GARRISON@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_GARRISON@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_GARRISON, COMDAT

; 346  : {

	push	ebp
	mov	ebp, esp

; 347  : 	return s_eMISSION_GARRISON;

	mov	eax, DWORD PTR ?s_eMISSION_GARRISON@@3W4MissionTypes@@A ; s_eMISSION_GARRISON

; 348  : }

	pop	ebp
	ret	0
?getMISSION_GARRISON@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_GARRISON
_TEXT	ENDS
PUBLIC	?getMISSION_SET_UP_FOR_RANGED_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SET_UP_FOR_RANGED_ATTACK
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_SET_UP_FOR_RANGED_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_SET_UP_FOR_RANGED_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_SET_UP_FOR_RANGED_ATTACK, COMDAT

; 350  : {

	push	ebp
	mov	ebp, esp

; 351  : 	return s_eMISSION_SET_UP_FOR_RANGED_ATTACK;

	mov	eax, DWORD PTR ?s_eMISSION_SET_UP_FOR_RANGED_ATTACK@@3W4MissionTypes@@A ; s_eMISSION_SET_UP_FOR_RANGED_ATTACK

; 352  : }

	pop	ebp
	ret	0
?getMISSION_SET_UP_FOR_RANGED_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_SET_UP_FOR_RANGED_ATTACK
_TEXT	ENDS
PUBLIC	?getMISSION_EMBARK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_EMBARK
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_EMBARK@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_EMBARK@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_EMBARK, COMDAT

; 354  : {

	push	ebp
	mov	ebp, esp

; 355  : 	return s_eMISSION_EMBARK;

	mov	eax, DWORD PTR ?s_eMISSION_EMBARK@@3W4MissionTypes@@A ; s_eMISSION_EMBARK

; 356  : }

	pop	ebp
	ret	0
?getMISSION_EMBARK@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_EMBARK
_TEXT	ENDS
PUBLIC	?getMISSION_DISEMBARK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_DISEMBARK
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_DISEMBARK@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_DISEMBARK@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_DISEMBARK, COMDAT

; 358  : {

	push	ebp
	mov	ebp, esp

; 359  : 	return s_eMISSION_DISEMBARK;

	mov	eax, DWORD PTR ?s_eMISSION_DISEMBARK@@3W4MissionTypes@@A ; s_eMISSION_DISEMBARK

; 360  : }

	pop	ebp
	ret	0
?getMISSION_DISEMBARK@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_DISEMBARK
_TEXT	ENDS
PUBLIC	?getMISSION_AIRPATROL@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_AIRPATROL
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_AIRPATROL@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_AIRPATROL@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_AIRPATROL, COMDAT

; 362  : {

	push	ebp
	mov	ebp, esp

; 363  : 	return s_eMISSION_AIRPATROL;

	mov	eax, DWORD PTR ?s_eMISSION_AIRPATROL@@3W4MissionTypes@@A ; s_eMISSION_AIRPATROL

; 364  : }

	pop	ebp
	ret	0
?getMISSION_AIRPATROL@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_AIRPATROL
_TEXT	ENDS
PUBLIC	?getMISSION_HEAL@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_HEAL
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_HEAL@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_HEAL@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_HEAL, COMDAT

; 366  : {

	push	ebp
	mov	ebp, esp

; 367  : 	return s_eMISSION_HEAL;

	mov	eax, DWORD PTR ?s_eMISSION_HEAL@@3W4MissionTypes@@A ; s_eMISSION_HEAL

; 368  : }

	pop	ebp
	ret	0
?getMISSION_HEAL@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_HEAL
_TEXT	ENDS
PUBLIC	?getMISSION_AIRLIFT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_AIRLIFT
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_AIRLIFT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_AIRLIFT@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_AIRLIFT, COMDAT

; 370  : {

	push	ebp
	mov	ebp, esp

; 371  : 	return s_eMISSION_AIRLIFT;

	mov	eax, DWORD PTR ?s_eMISSION_AIRLIFT@@3W4MissionTypes@@A ; s_eMISSION_AIRLIFT

; 372  : }

	pop	ebp
	ret	0
?getMISSION_AIRLIFT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_AIRLIFT
_TEXT	ENDS
PUBLIC	?getMISSION_NUKE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_NUKE
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_NUKE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_NUKE@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_NUKE, COMDAT

; 374  : {

	push	ebp
	mov	ebp, esp

; 375  : 	return s_eMISSION_NUKE;

	mov	eax, DWORD PTR ?s_eMISSION_NUKE@@3W4MissionTypes@@A ; s_eMISSION_NUKE

; 376  : }

	pop	ebp
	ret	0
?getMISSION_NUKE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_NUKE
_TEXT	ENDS
PUBLIC	?getMISSION_PARADROP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_PARADROP
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_PARADROP@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_PARADROP@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_PARADROP, COMDAT

; 378  : {

	push	ebp
	mov	ebp, esp

; 379  : 	return s_eMISSION_PARADROP;

	mov	eax, DWORD PTR ?s_eMISSION_PARADROP@@3W4MissionTypes@@A ; s_eMISSION_PARADROP

; 380  : }

	pop	ebp
	ret	0
?getMISSION_PARADROP@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_PARADROP
_TEXT	ENDS
PUBLIC	?getMISSION_AIR_SWEEP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_AIR_SWEEP
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_AIR_SWEEP@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_AIR_SWEEP@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_AIR_SWEEP, COMDAT

; 382  : {

	push	ebp
	mov	ebp, esp

; 383  : 	return s_eMISSION_AIR_SWEEP;

	mov	eax, DWORD PTR ?s_eMISSION_AIR_SWEEP@@3W4MissionTypes@@A ; s_eMISSION_AIR_SWEEP

; 384  : }

	pop	ebp
	ret	0
?getMISSION_AIR_SWEEP@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_AIR_SWEEP
_TEXT	ENDS
PUBLIC	?getMISSION_REBASE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_REBASE
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_REBASE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_REBASE@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_REBASE, COMDAT

; 386  : {

	push	ebp
	mov	ebp, esp

; 387  : 	return s_eMISSION_REBASE;

	mov	eax, DWORD PTR ?s_eMISSION_REBASE@@3W4MissionTypes@@A ; s_eMISSION_REBASE

; 388  : }

	pop	ebp
	ret	0
?getMISSION_REBASE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_REBASE
_TEXT	ENDS
PUBLIC	?getMISSION_RANGE_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_RANGE_ATTACK
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_RANGE_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_RANGE_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_RANGE_ATTACK, COMDAT

; 390  : {

	push	ebp
	mov	ebp, esp

; 391  : 	return s_eMISSION_RANGE_ATTACK;

	mov	eax, DWORD PTR ?s_eMISSION_RANGE_ATTACK@@3W4MissionTypes@@A ; s_eMISSION_RANGE_ATTACK

; 392  : }

	pop	ebp
	ret	0
?getMISSION_RANGE_ATTACK@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_RANGE_ATTACK
_TEXT	ENDS
PUBLIC	?getMISSION_PILLAGE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_PILLAGE
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_PILLAGE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_PILLAGE@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_PILLAGE, COMDAT

; 394  : {

	push	ebp
	mov	ebp, esp

; 395  : 	return s_eMISSION_PILLAGE;

	mov	eax, DWORD PTR ?s_eMISSION_PILLAGE@@3W4MissionTypes@@A ; s_eMISSION_PILLAGE

; 396  : }

	pop	ebp
	ret	0
?getMISSION_PILLAGE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_PILLAGE
_TEXT	ENDS
PUBLIC	?getMISSION_FOUND@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_FOUND
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_FOUND@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_FOUND@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_FOUND, COMDAT

; 398  : {

	push	ebp
	mov	ebp, esp

; 399  : 	return s_eMISSION_FOUND;

	mov	eax, DWORD PTR ?s_eMISSION_FOUND@@3W4MissionTypes@@A ; s_eMISSION_FOUND

; 400  : }

	pop	ebp
	ret	0
?getMISSION_FOUND@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_FOUND
_TEXT	ENDS
PUBLIC	?getMISSION_JOIN@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_JOIN
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_JOIN@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_JOIN@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_JOIN, COMDAT

; 402  : {

	push	ebp
	mov	ebp, esp

; 403  : 	return s_eMISSION_JOIN;

	mov	eax, DWORD PTR ?s_eMISSION_JOIN@@3W4MissionTypes@@A ; s_eMISSION_JOIN

; 404  : }

	pop	ebp
	ret	0
?getMISSION_JOIN@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_JOIN
_TEXT	ENDS
PUBLIC	?getMISSION_CONSTRUCT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CONSTRUCT
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_CONSTRUCT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_CONSTRUCT@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_CONSTRUCT, COMDAT

; 406  : {

	push	ebp
	mov	ebp, esp

; 407  : 	return s_eMISSION_CONSTRUCT;

	mov	eax, DWORD PTR ?s_eMISSION_CONSTRUCT@@3W4MissionTypes@@A ; s_eMISSION_CONSTRUCT

; 408  : }

	pop	ebp
	ret	0
?getMISSION_CONSTRUCT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_CONSTRUCT
_TEXT	ENDS
PUBLIC	?getMISSION_DISCOVER@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_DISCOVER
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_DISCOVER@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_DISCOVER@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_DISCOVER, COMDAT

; 410  : {

	push	ebp
	mov	ebp, esp

; 411  : 	return s_eMISSION_DISCOVER;

	mov	eax, DWORD PTR ?s_eMISSION_DISCOVER@@3W4MissionTypes@@A ; s_eMISSION_DISCOVER

; 412  : }

	pop	ebp
	ret	0
?getMISSION_DISCOVER@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_DISCOVER
_TEXT	ENDS
PUBLIC	?getMISSION_HURRY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_HURRY
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_HURRY@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_HURRY@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_HURRY, COMDAT

; 414  : {

	push	ebp
	mov	ebp, esp

; 415  : 	return s_eMISSION_HURRY;

	mov	eax, DWORD PTR ?s_eMISSION_HURRY@@3W4MissionTypes@@A ; s_eMISSION_HURRY

; 416  : }

	pop	ebp
	ret	0
?getMISSION_HURRY@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_HURRY
_TEXT	ENDS
PUBLIC	?getMISSION_TRADE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_TRADE
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_TRADE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_TRADE@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_TRADE, COMDAT

; 418  : {

	push	ebp
	mov	ebp, esp

; 419  : 	return s_eMISSION_TRADE;

	mov	eax, DWORD PTR ?s_eMISSION_TRADE@@3W4MissionTypes@@A ; s_eMISSION_TRADE

; 420  : }

	pop	ebp
	ret	0
?getMISSION_TRADE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_TRADE
_TEXT	ENDS
PUBLIC	?getMISSION_REPAIR_FLEET@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_REPAIR_FLEET
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_REPAIR_FLEET@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_REPAIR_FLEET@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_REPAIR_FLEET, COMDAT

; 422  : {

	push	ebp
	mov	ebp, esp

; 423  : 	return s_eMISSION_REPAIR_FLEET;

	mov	eax, DWORD PTR ?s_eMISSION_REPAIR_FLEET@@3W4MissionTypes@@A ; s_eMISSION_REPAIR_FLEET

; 424  : }

	pop	ebp
	ret	0
?getMISSION_REPAIR_FLEET@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_REPAIR_FLEET
_TEXT	ENDS
PUBLIC	?getMISSION_BUY_CITY_STATE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_BUY_CITY_STATE
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_BUY_CITY_STATE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_BUY_CITY_STATE@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_BUY_CITY_STATE, COMDAT

; 426  : {

	push	ebp
	mov	ebp, esp

; 427  : 	return s_eMISSION_BUY_CITY_STATE;

	mov	eax, DWORD PTR ?s_eMISSION_BUY_CITY_STATE@@3W4MissionTypes@@A ; s_eMISSION_BUY_CITY_STATE

; 428  : }

	pop	ebp
	ret	0
?getMISSION_BUY_CITY_STATE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_BUY_CITY_STATE
_TEXT	ENDS
PUBLIC	?getMISSION_SPACESHIP@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SPACESHIP
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_SPACESHIP@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_SPACESHIP@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_SPACESHIP, COMDAT

; 430  : {

	push	ebp
	mov	ebp, esp

; 431  : 	return s_eMISSION_SPACESHIP;

	mov	eax, DWORD PTR ?s_eMISSION_SPACESHIP@@3W4MissionTypes@@A ; s_eMISSION_SPACESHIP

; 432  : }

	pop	ebp
	ret	0
?getMISSION_SPACESHIP@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_SPACESHIP
_TEXT	ENDS
PUBLIC	?getMISSION_CULTURE_BOMB@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CULTURE_BOMB
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_CULTURE_BOMB@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_CULTURE_BOMB@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_CULTURE_BOMB, COMDAT

; 434  : {

	push	ebp
	mov	ebp, esp

; 435  : 	return s_eMISSION_CULTURE_BOMB;

	mov	eax, DWORD PTR ?s_eMISSION_CULTURE_BOMB@@3W4MissionTypes@@A ; s_eMISSION_CULTURE_BOMB

; 436  : }

	pop	ebp
	ret	0
?getMISSION_CULTURE_BOMB@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_CULTURE_BOMB
_TEXT	ENDS
PUBLIC	?getMISSION_FOUND_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_FOUND_RELIGION
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_FOUND_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_FOUND_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_FOUND_RELIGION, COMDAT

; 438  : {

	push	ebp
	mov	ebp, esp

; 439  : 	return s_eMISSION_FOUND_RELIGION;

	mov	eax, DWORD PTR ?s_eMISSION_FOUND_RELIGION@@3W4MissionTypes@@A ; s_eMISSION_FOUND_RELIGION

; 440  : }

	pop	ebp
	ret	0
?getMISSION_FOUND_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_FOUND_RELIGION
_TEXT	ENDS
PUBLIC	?getMISSION_GOLDEN_AGE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_GOLDEN_AGE
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_GOLDEN_AGE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_GOLDEN_AGE@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_GOLDEN_AGE, COMDAT

; 442  : {

	push	ebp
	mov	ebp, esp

; 443  : 	return s_eMISSION_GOLDEN_AGE;

	mov	eax, DWORD PTR ?s_eMISSION_GOLDEN_AGE@@3W4MissionTypes@@A ; s_eMISSION_GOLDEN_AGE

; 444  : }

	pop	ebp
	ret	0
?getMISSION_GOLDEN_AGE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_GOLDEN_AGE
_TEXT	ENDS
PUBLIC	?getMISSION_BUILD@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_BUILD
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_BUILD@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_BUILD@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_BUILD, COMDAT

; 446  : {

	push	ebp
	mov	ebp, esp

; 447  : 	return s_eMISSION_BUILD;

	mov	eax, DWORD PTR ?s_eMISSION_BUILD@@3W4MissionTypes@@A ; s_eMISSION_BUILD

; 448  : }

	pop	ebp
	ret	0
?getMISSION_BUILD@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_BUILD
_TEXT	ENDS
PUBLIC	?getMISSION_LEAD@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_LEAD
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_LEAD@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_LEAD@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_LEAD, COMDAT

; 450  : {

	push	ebp
	mov	ebp, esp

; 451  : 	return s_eMISSION_LEAD;

	mov	eax, DWORD PTR ?s_eMISSION_LEAD@@3W4MissionTypes@@A ; s_eMISSION_LEAD

; 452  : }

	pop	ebp
	ret	0
?getMISSION_LEAD@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_LEAD
_TEXT	ENDS
PUBLIC	?getMISSION_DIE_ANIMATION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_DIE_ANIMATION
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_DIE_ANIMATION@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_DIE_ANIMATION@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_DIE_ANIMATION, COMDAT

; 454  : {

	push	ebp
	mov	ebp, esp

; 455  : 	return s_eMISSION_DIE_ANIMATION;

	mov	eax, DWORD PTR ?s_eMISSION_DIE_ANIMATION@@3W4MissionTypes@@A ; s_eMISSION_DIE_ANIMATION

; 456  : }

	pop	ebp
	ret	0
?getMISSION_DIE_ANIMATION@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_DIE_ANIMATION
_TEXT	ENDS
PUBLIC	?getMISSION_BEGIN_COMBAT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_BEGIN_COMBAT
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_BEGIN_COMBAT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_BEGIN_COMBAT@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_BEGIN_COMBAT, COMDAT

; 458  : {

	push	ebp
	mov	ebp, esp

; 459  : 	return s_eMISSION_BEGIN_COMBAT;

	mov	eax, DWORD PTR ?s_eMISSION_BEGIN_COMBAT@@3W4MissionTypes@@A ; s_eMISSION_BEGIN_COMBAT

; 460  : }

	pop	ebp
	ret	0
?getMISSION_BEGIN_COMBAT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_BEGIN_COMBAT
_TEXT	ENDS
PUBLIC	?getMISSION_END_COMBAT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_END_COMBAT
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_END_COMBAT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_END_COMBAT@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_END_COMBAT, COMDAT

; 462  : {

	push	ebp
	mov	ebp, esp

; 463  : 	return s_eMISSION_END_COMBAT;

	mov	eax, DWORD PTR ?s_eMISSION_END_COMBAT@@3W4MissionTypes@@A ; s_eMISSION_END_COMBAT

; 464  : }

	pop	ebp
	ret	0
?getMISSION_END_COMBAT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_END_COMBAT
_TEXT	ENDS
PUBLIC	?getMISSION_AIRSTRIKE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_AIRSTRIKE
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_AIRSTRIKE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_AIRSTRIKE@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_AIRSTRIKE, COMDAT

; 466  : {

	push	ebp
	mov	ebp, esp

; 467  : 	return s_eMISSION_AIRSTRIKE;

	mov	eax, DWORD PTR ?s_eMISSION_AIRSTRIKE@@3W4MissionTypes@@A ; s_eMISSION_AIRSTRIKE

; 468  : }

	pop	ebp
	ret	0
?getMISSION_AIRSTRIKE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_AIRSTRIKE
_TEXT	ENDS
PUBLIC	?getMISSION_SURRENDER@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SURRENDER
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_SURRENDER@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_SURRENDER@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_SURRENDER, COMDAT

; 470  : {

	push	ebp
	mov	ebp, esp

; 471  : 	return s_eMISSION_SURRENDER;

	mov	eax, DWORD PTR ?s_eMISSION_SURRENDER@@3W4MissionTypes@@A ; s_eMISSION_SURRENDER

; 472  : }

	pop	ebp
	ret	0
?getMISSION_SURRENDER@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_SURRENDER
_TEXT	ENDS
PUBLIC	?getMISSION_CAPTURED@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CAPTURED
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_CAPTURED@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_CAPTURED@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_CAPTURED, COMDAT

; 474  : {

	push	ebp
	mov	ebp, esp

; 475  : 	return s_eMISSION_CAPTURED;

	mov	eax, DWORD PTR ?s_eMISSION_CAPTURED@@3W4MissionTypes@@A ; s_eMISSION_CAPTURED

; 476  : }

	pop	ebp
	ret	0
?getMISSION_CAPTURED@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_CAPTURED
_TEXT	ENDS
PUBLIC	?getMISSION_IDLE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_IDLE
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_IDLE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_IDLE@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_IDLE, COMDAT

; 478  : {

	push	ebp
	mov	ebp, esp

; 479  : 	return s_eMISSION_IDLE;

	mov	eax, DWORD PTR ?s_eMISSION_IDLE@@3W4MissionTypes@@A ; s_eMISSION_IDLE

; 480  : }

	pop	ebp
	ret	0
?getMISSION_IDLE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_IDLE
_TEXT	ENDS
PUBLIC	?getMISSION_DIE@CvTypes@@YA?BW4MissionTypes@@XZ	; CvTypes::getMISSION_DIE
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_DIE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_DIE@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_DIE, COMDAT

; 482  : {

	push	ebp
	mov	ebp, esp

; 483  : 	return s_eMISSION_DIE;

	mov	eax, DWORD PTR ?s_eMISSION_DIE@@3W4MissionTypes@@A ; s_eMISSION_DIE

; 484  : }

	pop	ebp
	ret	0
?getMISSION_DIE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_DIE
_TEXT	ENDS
PUBLIC	?getMISSION_DAMAGE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_DAMAGE
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_DAMAGE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_DAMAGE@CvTypes@@YA?BW4MissionTypes@@XZ PROC	; CvTypes::getMISSION_DAMAGE, COMDAT

; 486  : {

	push	ebp
	mov	ebp, esp

; 487  : 	return s_eMISSION_DAMAGE;

	mov	eax, DWORD PTR ?s_eMISSION_DAMAGE@@3W4MissionTypes@@A ; s_eMISSION_DAMAGE

; 488  : }

	pop	ebp
	ret	0
?getMISSION_DAMAGE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP	; CvTypes::getMISSION_DAMAGE
_TEXT	ENDS
PUBLIC	?getMISSION_MULTI_SELECT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MULTI_SELECT
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_MULTI_SELECT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_MULTI_SELECT@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_MULTI_SELECT, COMDAT

; 490  : {

	push	ebp
	mov	ebp, esp

; 491  : 	return s_eMISSION_MULTI_SELECT;

	mov	eax, DWORD PTR ?s_eMISSION_MULTI_SELECT@@3W4MissionTypes@@A ; s_eMISSION_MULTI_SELECT

; 492  : }

	pop	ebp
	ret	0
?getMISSION_MULTI_SELECT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_MULTI_SELECT
_TEXT	ENDS
PUBLIC	?getMISSION_MULTI_DESELECT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_MULTI_DESELECT
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_MULTI_DESELECT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_MULTI_DESELECT@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_MULTI_DESELECT, COMDAT

; 494  : {

	push	ebp
	mov	ebp, esp

; 495  : 	return s_eMISSION_MULTI_DESELECT;

	mov	eax, DWORD PTR ?s_eMISSION_MULTI_DESELECT@@3W4MissionTypes@@A ; s_eMISSION_MULTI_DESELECT

; 496  : }

	pop	ebp
	ret	0
?getMISSION_MULTI_DESELECT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_MULTI_DESELECT
_TEXT	ENDS
PUBLIC	?getMISSION_WAIT_FOR@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_WAIT_FOR
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_WAIT_FOR@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_WAIT_FOR@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_WAIT_FOR, COMDAT

; 498  : {

	push	ebp
	mov	ebp, esp

; 499  : 	return s_eMISSION_WAIT_FOR;

	mov	eax, DWORD PTR ?s_eMISSION_WAIT_FOR@@3W4MissionTypes@@A ; s_eMISSION_WAIT_FOR

; 500  : }

	pop	ebp
	ret	0
?getMISSION_WAIT_FOR@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_WAIT_FOR
_TEXT	ENDS
PUBLIC	?getMISSION_SPREAD_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SPREAD_RELIGION
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_SPREAD_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_SPREAD_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_SPREAD_RELIGION, COMDAT

; 502  : {

	push	ebp
	mov	ebp, esp

; 503  : 	return s_eMISSION_SPREAD_RELIGION;

	mov	eax, DWORD PTR ?s_eMISSION_SPREAD_RELIGION@@3W4MissionTypes@@A ; s_eMISSION_SPREAD_RELIGION

; 504  : }

	pop	ebp
	ret	0
?getMISSION_SPREAD_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_SPREAD_RELIGION
_TEXT	ENDS
PUBLIC	?getMISSION_ENHANCE_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ENHANCE_RELIGION
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_ENHANCE_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_ENHANCE_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_ENHANCE_RELIGION, COMDAT

; 506  : {

	push	ebp
	mov	ebp, esp

; 507  : 	return s_eMISSION_ENHANCE_RELIGION;

	mov	eax, DWORD PTR ?s_eMISSION_ENHANCE_RELIGION@@3W4MissionTypes@@A ; s_eMISSION_ENHANCE_RELIGION

; 508  : }

	pop	ebp
	ret	0
?getMISSION_ENHANCE_RELIGION@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_ENHANCE_RELIGION
_TEXT	ENDS
PUBLIC	?getMISSION_REMOVE_HERESY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_REMOVE_HERESY
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_REMOVE_HERESY@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_REMOVE_HERESY@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_REMOVE_HERESY, COMDAT

; 510  : {

	push	ebp
	mov	ebp, esp

; 511  : 	return s_eMISSION_REMOVE_HERESY;

	mov	eax, DWORD PTR ?s_eMISSION_REMOVE_HERESY@@3W4MissionTypes@@A ; s_eMISSION_REMOVE_HERESY

; 512  : }

	pop	ebp
	ret	0
?getMISSION_REMOVE_HERESY@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_REMOVE_HERESY
_TEXT	ENDS
PUBLIC	?getMISSION_ESTABLISH_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ESTABLISH_TRADE_ROUTE
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_ESTABLISH_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_ESTABLISH_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_ESTABLISH_TRADE_ROUTE, COMDAT

; 514  : {

	push	ebp
	mov	ebp, esp

; 515  : 	return s_eMISSION_ESTABLISH_TRADE_ROUTE;

	mov	eax, DWORD PTR ?s_eMISSION_ESTABLISH_TRADE_ROUTE@@3W4MissionTypes@@A ; s_eMISSION_ESTABLISH_TRADE_ROUTE

; 516  : }

	pop	ebp
	ret	0
?getMISSION_ESTABLISH_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_ESTABLISH_TRADE_ROUTE
_TEXT	ENDS
PUBLIC	?getMISSION_PLUNDER_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_PLUNDER_TRADE_ROUTE
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_PLUNDER_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_PLUNDER_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_PLUNDER_TRADE_ROUTE, COMDAT

; 518  : {

	push	ebp
	mov	ebp, esp

; 519  : 	return s_eMISSION_PLUNDER_TRADE_ROUTE;

	mov	eax, DWORD PTR ?s_eMISSION_PLUNDER_TRADE_ROUTE@@3W4MissionTypes@@A ; s_eMISSION_PLUNDER_TRADE_ROUTE

; 520  : }

	pop	ebp
	ret	0
?getMISSION_PLUNDER_TRADE_ROUTE@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_PLUNDER_TRADE_ROUTE
_TEXT	ENDS
PUBLIC	?getMISSION_GREAT_WORK@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_GREAT_WORK
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_GREAT_WORK@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_GREAT_WORK@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_GREAT_WORK, COMDAT

; 522  : {

	push	ebp
	mov	ebp, esp

; 523  : 	return s_eMISSION_GREAT_WORK;

	mov	eax, DWORD PTR ?s_eMISSION_GREAT_WORK@@3W4MissionTypes@@A ; s_eMISSION_GREAT_WORK

; 524  : }

	pop	ebp
	ret	0
?getMISSION_GREAT_WORK@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_GREAT_WORK
_TEXT	ENDS
PUBLIC	?getMISSION_CHANGE_TRADE_UNIT_HOME_CITY@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CHANGE_TRADE_UNIT_HOME_CITY
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_CHANGE_TRADE_UNIT_HOME_CITY@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_CHANGE_TRADE_UNIT_HOME_CITY@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_CHANGE_TRADE_UNIT_HOME_CITY, COMDAT

; 526  : {

	push	ebp
	mov	ebp, esp

; 527  : 	return s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY;

	mov	eax, DWORD PTR ?s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY@@3W4MissionTypes@@A ; s_eMISSION_CHANGE_TRADE_UNIT_HOME_CITY

; 528  : }

	pop	ebp
	ret	0
?getMISSION_CHANGE_TRADE_UNIT_HOME_CITY@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_CHANGE_TRADE_UNIT_HOME_CITY
_TEXT	ENDS
PUBLIC	?getMISSION_CHANGE_ADMIRAL_PORT@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_CHANGE_ADMIRAL_PORT
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_CHANGE_ADMIRAL_PORT@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_CHANGE_ADMIRAL_PORT@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_CHANGE_ADMIRAL_PORT, COMDAT

; 530  : {

	push	ebp
	mov	ebp, esp

; 531  : 	return s_eMISSION_CHANGE_ADMIRAL_PORT;

	mov	eax, DWORD PTR ?s_eMISSION_CHANGE_ADMIRAL_PORT@@3W4MissionTypes@@A ; s_eMISSION_CHANGE_ADMIRAL_PORT

; 532  : }

	pop	ebp
	ret	0
?getMISSION_CHANGE_ADMIRAL_PORT@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_CHANGE_ADMIRAL_PORT
_TEXT	ENDS
PUBLIC	?getMISSION_SELL_EXOTIC_GOODS@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_SELL_EXOTIC_GOODS
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_SELL_EXOTIC_GOODS@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_SELL_EXOTIC_GOODS@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_SELL_EXOTIC_GOODS, COMDAT

; 534  : {

	push	ebp
	mov	ebp, esp

; 535  : 	return s_eMISSION_SELL_EXOTIC_GOODS;

	mov	eax, DWORD PTR ?s_eMISSION_SELL_EXOTIC_GOODS@@3W4MissionTypes@@A ; s_eMISSION_SELL_EXOTIC_GOODS

; 536  : }

	pop	ebp
	ret	0
?getMISSION_SELL_EXOTIC_GOODS@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_SELL_EXOTIC_GOODS
_TEXT	ENDS
PUBLIC	?getNUM_MISSION_TYPES@CvTypes@@YA?BIXZ		; CvTypes::getNUM_MISSION_TYPES
; Function compile flags: /Odtp
;	COMDAT ?getNUM_MISSION_TYPES@CvTypes@@YA?BIXZ
_TEXT	SEGMENT
?getNUM_MISSION_TYPES@CvTypes@@YA?BIXZ PROC		; CvTypes::getNUM_MISSION_TYPES, COMDAT

; 538  : {

	push	ebp
	mov	ebp, esp

; 539  : 	return s_uiNUM_MISSION_TYPES;

	mov	eax, DWORD PTR ?s_uiNUM_MISSION_TYPES@@3IA ; s_uiNUM_MISSION_TYPES

; 540  : }

	pop	ebp
	ret	0
?getNUM_MISSION_TYPES@CvTypes@@YA?BIXZ ENDP		; CvTypes::getNUM_MISSION_TYPES
_TEXT	ENDS
PUBLIC	?getMISSION_GIVE_POLICIES@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_GIVE_POLICIES
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_GIVE_POLICIES@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_GIVE_POLICIES@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_GIVE_POLICIES, COMDAT

; 542  : {

	push	ebp
	mov	ebp, esp

; 543  : 	return s_eMISSION_GIVE_POLICIES;

	mov	eax, DWORD PTR ?s_eMISSION_GIVE_POLICIES@@3W4MissionTypes@@A ; s_eMISSION_GIVE_POLICIES

; 544  : }

	pop	ebp
	ret	0
?getMISSION_GIVE_POLICIES@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_GIVE_POLICIES
_TEXT	ENDS
PUBLIC	?getMISSION_ONE_SHOT_TOURISM@CvTypes@@YA?BW4MissionTypes@@XZ ; CvTypes::getMISSION_ONE_SHOT_TOURISM
; Function compile flags: /Odtp
;	COMDAT ?getMISSION_ONE_SHOT_TOURISM@CvTypes@@YA?BW4MissionTypes@@XZ
_TEXT	SEGMENT
?getMISSION_ONE_SHOT_TOURISM@CvTypes@@YA?BW4MissionTypes@@XZ PROC ; CvTypes::getMISSION_ONE_SHOT_TOURISM, COMDAT

; 546  : {

	push	ebp
	mov	ebp, esp

; 547  : 	return s_eMISSION_ONE_SHOT_TOURISM;

	mov	eax, DWORD PTR ?s_eMISSION_ONE_SHOT_TOURISM@@3W4MissionTypes@@A ; s_eMISSION_ONE_SHOT_TOURISM

; 548  : }

	pop	ebp
	ret	0
?getMISSION_ONE_SHOT_TOURISM@CvTypes@@YA?BW4MissionTypes@@XZ ENDP ; CvTypes::getMISSION_ONE_SHOT_TOURISM
_TEXT	ENDS
PUBLIC	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::clear
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$4
__ehfuncinfo$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
xdata$x	ENDS
;	COMDAT ??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ
_TEXT	SEGMENT
_this$ = -84						; size = 4
$T232221 = -80						; size = 4
$T232151 = -76						; size = 4
$T232128 = -72						; size = 4
$T232062 = -48						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >, COMDAT
; _this$ = ecx

; 365  : 		{	// destroy hash table

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 366  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR $T232062[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T232062[ebp]
	call	?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR $T232221[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR $T232221[ebp]
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::clear
	mov	edx, DWORD PTR $T232221[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T232128[ebp], eax
	mov	ecx, DWORD PTR $T232221[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T232151[ebp], edx
	mov	eax, DWORD PTR $T232151[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ecx, DWORD PTR $T232221[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$2:
	mov	ecx, DWORD PTR $T232062[ebp]
	jmp	??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ
__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$4:
	mov	ecx, DWORD PTR $T232221[ebp]
	jmp	??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ
__ehhandler$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >
PUBLIC	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::clear
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$4
__ehfuncinfo$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
xdata$x	ENDS
;	COMDAT ??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ
_TEXT	SEGMENT
_this$ = -84						; size = 4
$T232476 = -80						; size = 4
$T232406 = -76						; size = 4
$T232383 = -72						; size = 4
$T232317 = -48						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >, COMDAT
; _this$ = ecx

; 365  : 		{	// destroy hash table

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 366  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR $T232317[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T232317[ebp]
	call	?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR $T232476[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR $T232476[ebp]
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::clear
	mov	edx, DWORD PTR $T232476[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T232383[ebp], eax
	mov	ecx, DWORD PTR $T232476[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T232406[ebp], edx
	mov	eax, DWORD PTR $T232406[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ecx, DWORD PTR $T232476[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$2:
	mov	ecx, DWORD PTR $T232317[ebp]
	jmp	??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ
__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$4:
	mov	ecx, DWORD PTR $T232476[ebp]
	jmp	??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ
__ehhandler$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >
PUBLIC	??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
PUBLIC	??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
PUBLIC	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
PUBLIC	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::clear
PUBLIC	?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Tidy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$4
__ehfuncinfo$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
xdata$x	ENDS
;	COMDAT ??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ
_TEXT	SEGMENT
_this$ = -84						; size = 4
$T232731 = -80						; size = 4
$T232661 = -76						; size = 4
$T232638 = -72						; size = 4
$T232572 = -48						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >, COMDAT
; _this$ = ecx

; 365  : 		{	// destroy hash table

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 366  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR $T232572[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T232572[ebp]
	call	?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR $T232731[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR $T232731[ebp]
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::clear
	mov	edx, DWORD PTR $T232731[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T232638[ebp], eax
	mov	ecx, DWORD PTR $T232731[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T232661[ebp], edx
	mov	eax, DWORD PTR $T232661[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ecx, DWORD PTR $T232731[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$2:
	mov	ecx, DWORD PTR $T232572[ebp]
	jmp	??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ
__unwindfunclet$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ$4:
	mov	ecx, DWORD PTR $T232731[ebp]
	jmp	??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ
__ehhandler$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@XZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::~_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >
PUBLIC	??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
PUBLIC	?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Init
PUBLIC	__real@40800000
PUBLIC	?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAE_NI@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Buy
PUBLIC	??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
EXTRN	__CxxThrowException@8:PROC
;	COMDAT __real@40800000
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z$1
__ehfuncinfo$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
xdata$x	ENDS
;	COMDAT ??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z
_TEXT	SEGMENT
tv152 = -272						; size = 4
tv218 = -268						; size = 4
_this$ = -264						; size = 4
$T232879 = -156						; size = 4
$T232829 = -62						; size = 1
$T232816 = -61						; size = 1
$T232812 = -60						; size = 4
$T232805 = -52						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >, COMDAT
; _this$ = ecx

; 343  : 		{	// construct empty hash table

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Parg$[ebp]
	mov	cx, WORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx], cx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR $T232879[ebp], ecx
	lea	edx, DWORD PTR $T232829[ebp]
	mov	DWORD PTR $T232805[ebp], edx
	lea	eax, DWORD PTR $T232816[ebp]
	mov	DWORD PTR $T232812[ebp], eax
	mov	ecx, DWORD PTR $T232879[ebp]
	mov	DWORD PTR tv218[ebp], ecx
	mov	edx, DWORD PTR $T232879[ebp]
	mov	DWORD PTR tv152[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	0
	mov	ecx, DWORD PTR $T232879[ebp]
	call	?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAE_NI@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Buy
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [eax+40], xmm0

; 344  : 		_Init();

	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Init

; 345  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z$5:
	mov	ecx, DWORD PTR $T232879[ebp]
	jmp	??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
__ehhandler$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@std@@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >
PUBLIC	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
EXTRN	__imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z:PROC
; Function compile flags: /Odtp
;	COMDAT ?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z
_TEXT	SEGMENT
tv161 = -60						; size = 4
_this$ = -56						; size = 4
$T233252 = -52						; size = 4
$T233227 = -48						; size = 4
$T233205 = -44						; size = 4
$T233178 = -40						; size = 4
$T233154 = -36						; size = 4
$T233132 = -32						; size = 4
$T233114 = -28						; size = 4
__Num$233116 = -24					; size = 4
$T233107 = -20						; size = 4
$T233106 = -16						; size = 4
$T233105 = -12						; size = 4
__Where$ = -8						; size = 4
__Bucket$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 637  : 		{	// find leftmost not less than _Keyval in mutable hash table

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 638  : 		size_type _Bucket = _Hashval(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
	mov	DWORD PTR $T233114[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T233114[ebp]
	and	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR __Num$233116[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	cmp	ecx, DWORD PTR __Num$233116[ebp]
	ja	SHORT $LN10@lower_boun
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	shr	eax, 1
	add	eax, 1
	mov	ecx, DWORD PTR __Num$233116[ebp]
	sub	ecx, eax
	mov	DWORD PTR __Num$233116[ebp], ecx
$LN10@lower_boun:
	mov	edx, DWORD PTR __Num$233116[ebp]
	mov	DWORD PTR __Bucket$[ebp], edx

; 639  : 		iterator _Where;

	mov	DWORD PTR __Where$[ebp], 0

; 640  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T233132[ebp], eax
	mov	ecx, DWORD PTR $T233132[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T233105[ebp], edx
	mov	eax, DWORD PTR $T233105[ebp]
	mov	DWORD PTR __Where$[ebp], eax
	jmp	SHORT $LN4@lower_boun
$LN26@lower_boun:
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Where$[ebp], edx
$LN4@lower_boun:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4+4]
	mov	DWORD PTR $T233154[ebp], eax
	mov	ecx, DWORD PTR $T233154[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	cmp	edx, DWORD PTR __Where$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	$LN2@lower_boun

; 641  : 			if (!this->comp(this->_Kfn(*_Where), _Keyval))

	mov	eax, DWORD PTR __Where$[ebp]
	add	eax, 8
	mov	DWORD PTR $T233178[ebp], eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T233178[ebp]
	push	edx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@lower_boun

; 642  : 				return (this->comp(_Keyval,
; 643  : 					this->_Kfn(*_Where)) ? end() : _Where);

	mov	edx, DWORD PTR __Where$[ebp]
	add	edx, 8
	mov	DWORD PTR $T233205[ebp], edx
	mov	eax, DWORD PTR $T233205[ebp]
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	movzx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN7@lower_boun
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T233227[ebp], edx
	mov	eax, DWORD PTR $T233227[ebp]
	mov	DWORD PTR $T233107[ebp], eax
	lea	ecx, DWORD PTR $T233107[ebp]
	mov	DWORD PTR tv161[ebp], ecx
	jmp	SHORT $LN8@lower_boun
$LN7@lower_boun:
	lea	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR tv161[ebp], edx
$LN8@lower_boun:
	mov	eax, DWORD PTR tv161[ebp]
	mov	DWORD PTR $T233106[ebp], eax
	mov	ecx, DWORD PTR $T233106[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@lower_boun
$LN1@lower_boun:

; 644  : 		return (end());

	jmp	$LN26@lower_boun
$LN2@lower_boun:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T233252[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR $T233252[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@lower_boun:

; 645  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Reinsert
PUBLIC	?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Insert
PUBLIC	?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::splice
PUBLIC	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase
; Function compile flags: /Odtp
;	COMDAT ?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z
_TEXT	SEGMENT
tv381 = -296						; size = 4
tv666 = -292						; size = 8
tv662 = -284						; size = 8
_this$ = -276						; size = 4
__Count$233715 = -156					; size = 4
$T233692 = -152						; size = 4
$T233684 = -148						; size = 4
$T233678 = -144						; size = 4
$T233665 = -140						; size = 4
$T233661 = -136						; size = 4
$T233552 = -120						; size = 4
$T233417 = -96						; size = 4
$T233380 = -92						; size = 4
$T233347 = -88						; size = 4
$T233305 = -84						; size = 4
$T233301 = -80						; size = 4
$T233288 = -76						; size = 4
__Num$233290 = -72					; size = 4
$T233280 = -65						; size = 1
$T233279 = -64						; size = 4
$T233278 = -60						; size = 4
$T233277 = -56						; size = 4
$T233276 = -52						; size = 4
$T233275 = -48						; size = 4
$T233274 = -44						; size = 4
$T233273 = -37						; size = 1
$T233272 = -36						; size = 4
$T233271 = -32						; size = 4
$T233270 = -28						; size = 4
$T233269 = -24						; size = 4
__Idx$221535 = -20					; size = 4
__Maxsize$221533 = -16					; size = 4
__Newsize$221534 = -12					; size = 4
__Bucket$ = -8						; size = 4
__Plist$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
__Where$ = 16						; size = 4
?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 836  : 		{	// try to insert (possibly existing) node with value _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 296				; 00000128H
	mov	DWORD PTR _this$[ebp], ecx

; 837  : 		size_type _Bucket = _Hashval(this->_Kfn(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
	mov	DWORD PTR $T233288[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T233288[ebp]
	and	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR __Num$233290[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	cmp	ecx, DWORD PTR __Num$233290[ebp]
	ja	SHORT $LN23@Insert
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	shr	eax, 1
	add	eax, 1
	mov	ecx, DWORD PTR __Num$233290[ebp]
	sub	ecx, eax
	mov	DWORD PTR __Num$233290[ebp], ecx
$LN23@Insert:
	mov	edx, DWORD PTR __Num$233290[ebp]
	mov	DWORD PTR __Bucket$[ebp], edx

; 838  : 		iterator _Plist = _Get_iter_from_vec(_Vec[_Bucket + 1]);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4+4]
	mov	DWORD PTR $T233301[ebp], eax
	mov	ecx, DWORD PTR $T233301[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Plist$[ebp], edx
$LN30@Insert:

; 839  : 
; 840  : 		for (; _Plist != _Get_iter_from_vec(_Vec[_Bucket]); )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T233305[ebp], eax
	mov	ecx, DWORD PTR $T233305[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T233269[ebp], edx
	mov	eax, DWORD PTR __Plist$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T233269[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	$LN17@Insert

; 841  : 			if (this->comp(this->_Kfn(_Val), this->_Kfn(*--_Plist)))

	mov	ecx, DWORD PTR __Plist$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Plist$[ebp], edx
	mov	eax, DWORD PTR __Plist$[ebp]
	add	eax, 8
	mov	DWORD PTR $T233347[ebp], eax
	mov	ecx, DWORD PTR $T233347[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN16@Insert

; 842  : 				;	// still too high in bucket list
; 843  : 			else if (_Multi

	jmp	$LN12@Insert
$LN16@Insert:

; 844  : 				|| this->comp(this->_Kfn(*_Plist), this->_Kfn(_Val)))

	xor	edx, edx
	jne	SHORT $LN13@Insert
	mov	eax, DWORD PTR __Plist$[ebp]
	add	eax, 8
	mov	DWORD PTR $T233380[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T233380[ebp]
	push	edx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@Insert
$LN13@Insert:

; 845  : 				{	// found insertion point, back up to it
; 846  : 				++_Plist;

	mov	edx, DWORD PTR __Plist$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Plist$[ebp], eax

; 847  : 				break;

	jmp	SHORT $LN17@Insert

; 848  : 				}
; 849  : 			else

	jmp	SHORT $LN12@Insert
$LN14@Insert:

; 850  : 				{	// discard new list element and return existing
; 851  : 				if (_Where != end())

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T233417[ebp], edx
	mov	eax, DWORD PTR $T233417[ebp]
	mov	DWORD PTR $T233270[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR $T233270[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@Insert

; 852  : 					_List.erase(_Where);

	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T233271[ebp], edx
	mov	eax, DWORD PTR $T233271[ebp]
	push	eax
	lea	ecx, DWORD PTR $T233272[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase
$LN11@Insert:

; 853  : 				return (_Pairib(_Plist, false));

	mov	BYTE PTR $T233273[ebp], 0
	mov	edx, DWORD PTR __Plist$[ebp]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	dl, BYTE PTR $T233273[ebp]
	mov	BYTE PTR [ecx+4], dl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN19@Insert
$LN12@Insert:

; 854  : 				}

	jmp	$LN30@Insert
$LN17@Insert:

; 855  : 
; 856  : 		if (_Where != end())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T233552[ebp], ecx
	mov	edx, DWORD PTR $T233552[ebp]
	mov	DWORD PTR $T233274[ebp], edx
	mov	eax, DWORD PTR __Where$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T233274[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN10@Insert

; 857  : 			_List.splice(_Plist, _List, _Where);	// move element into place

	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T233275[ebp], ecx
	mov	edx, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR $T233276[ebp], edx
	mov	eax, DWORD PTR $T233275[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR $T233276[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::splice

; 858  : 		else

	jmp	SHORT $LN9@Insert
$LN10@Insert:

; 859  : 			_Where = _List.insert(_Plist, _Val);	// insert new element

	mov	eax, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR $T233277[ebp], eax
	mov	ecx, DWORD PTR $T233277[ebp]
	mov	DWORD PTR $T233661[ebp], ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR $T233661[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Insert
	mov	ecx, DWORD PTR $T233661[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T233661[ebp], edx
	mov	eax, DWORD PTR $T233661[ebp]
	mov	DWORD PTR $T233278[ebp], eax
	mov	ecx, DWORD PTR $T233278[ebp]
	mov	DWORD PTR __Where$[ebp], ecx
$LN9@Insert:
	jmp	SHORT $LN8@Insert
$LN7@Insert:

; 860  : 		for (; _Plist == _Get_iter_from_vec(_Vec[_Bucket]); --_Bucket)

	mov	edx, DWORD PTR __Bucket$[ebp]
	sub	edx, 1
	mov	DWORD PTR __Bucket$[ebp], edx
$LN8@Insert:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T233665[ebp], eax
	mov	ecx, DWORD PTR $T233665[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T233279[ebp], edx
	mov	eax, DWORD PTR __Plist$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T233279[ebp]
	sete	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN6@Insert

; 861  : 			{	// update end iterators if new first bucket element
; 862  : 			_Vec[_Bucket] = _Where;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax

; 863  : 			if (_Bucket == 0)

	cmp	DWORD PTR __Bucket$[ebp], 0
	jne	SHORT $LN5@Insert

; 864  : 				break;

	jmp	SHORT $LN6@Insert
$LN5@Insert:

; 865  : 			}

	jmp	SHORT $LN7@Insert
$LN6@Insert:

; 866  : 
; 867  : 		if (max_load_factor() < load_factor())

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+40]
	movss	DWORD PTR $T233678[ebp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR $T233684[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR $T233692[ebp], edx
	mov	eax, DWORD PTR $T233692[ebp]
	mov	DWORD PTR tv662[ebp], eax
	mov	DWORD PTR tv662[ebp+4], 0
	fild	QWORD PTR tv662[ebp]
	mov	ecx, DWORD PTR $T233684[ebp]
	mov	DWORD PTR tv666[ebp], ecx
	mov	DWORD PTR tv666[ebp+4], 0
	fild	QWORD PTR tv666[ebp]
	fdivrp	ST(1), ST(0)
	fld	DWORD PTR $T233678[ebp]
	fxch	ST(1)
	fcomip	ST(1)
	fstp	ST(0)
	jbe	$LN4@Insert

; 868  :  #if _HAS_INCREMENTAL_HASH
; 869  : 			_Grow();	// too dense, need to grow hash table
; 870  : 
; 871  :  #else /* _HAS_INCREMENTAL_HASH */
; 872  : 			{	// rehash to bigger table
; 873  : 			size_type _Maxsize = _Vec.max_size() / 2;

	mov	DWORD PTR __Count$233715[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$233715[ebp], 0
	jbe	SHORT $LN211@Insert
	mov	edx, DWORD PTR __Count$233715[ebp]
	mov	DWORD PTR tv381[ebp], edx
	jmp	SHORT $LN212@Insert
$LN211@Insert:
	mov	DWORD PTR tv381[ebp], 1
$LN212@Insert:
	mov	eax, DWORD PTR tv381[ebp]
	shr	eax, 1
	mov	DWORD PTR __Maxsize$221533[ebp], eax

; 874  : 			size_type _Newsize = bucket_count();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR __Newsize$221534[ebp], edx

; 875  : 
; 876  : 			for (int _Idx = 0; _Idx < 3 && _Newsize < _Maxsize; ++_Idx)

	mov	DWORD PTR __Idx$221535[ebp], 0
	jmp	SHORT $LN3@Insert
$LN2@Insert:
	mov	eax, DWORD PTR __Idx$221535[ebp]
	add	eax, 1
	mov	DWORD PTR __Idx$221535[ebp], eax
$LN3@Insert:
	cmp	DWORD PTR __Idx$221535[ebp], 3
	jge	SHORT $LN1@Insert
	mov	ecx, DWORD PTR __Newsize$221534[ebp]
	cmp	ecx, DWORD PTR __Maxsize$221533[ebp]
	jae	SHORT $LN1@Insert

; 877  : 				_Newsize *= 2;	// multiply safely by 8

	mov	edx, DWORD PTR __Newsize$221534[ebp]
	shl	edx, 1
	mov	DWORD PTR __Newsize$221534[ebp], edx
	jmp	SHORT $LN2@Insert
$LN1@Insert:

; 878  : 			_Init(_Newsize);

	mov	eax, DWORD PTR __Newsize$221534[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Init

; 879  : 			_Reinsert();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Reinsert
$LN4@Insert:

; 880  : 			}
; 881  : #endif /* _HAS_INCREMENTAL_HASH */
; 882  : 
; 883  : 		return (_Pairib(_Where, true));	// return iterator for new element

	mov	BYTE PTR $T233280[ebp], 1
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR $T233280[ebp]
	mov	BYTE PTR [eax+4], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN19@Insert:

; 884  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
_TEXT	ENDS
EXTRN	__imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDU_Size_type_nosscl@01@@Z:PROC
EXTRN	__imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ:PROC
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\functional
;	COMDAT ??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
tv87 = -32						; size = 4
_this$ = -28						; size = 4
$T233982 = -24						; size = 4
__Val$ = -16						; size = 4
__Last$ = -12						; size = 4
__First$ = -8						; size = 4
__Stride$ = -4						; size = 4
__Keyval$ = 8						; size = 4
??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator(), COMDAT
; _this$ = ecx

; 1282 : 		{	// hash _Keyval to size_t value by pseudorandomizing transform

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1283 : 		size_t _Val = 2166136261U;

	mov	DWORD PTR __Val$[ebp], -2128831035	; 811c9dc5H

; 1284 : 		size_t _First = 0;

	mov	DWORD PTR __First$[ebp], 0

; 1285 : 		size_t _Last = _Keyval.size();

	mov	ecx, DWORD PTR __Keyval$[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	mov	DWORD PTR __Last$[ebp], eax

; 1286 : 		size_t _Stride = 1 + _Last / 10;

	mov	eax, DWORD PTR __Last$[ebp]
	xor	edx, edx
	mov	ecx, 10					; 0000000aH
	div	ecx
	add	eax, 1
	mov	DWORD PTR __Stride$[ebp], eax

; 1287 : 
; 1288 : 		if (_Stride < _Last)

	mov	edx, DWORD PTR __Stride$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	jae	SHORT $LN4@operator

; 1289 : 			_Last -= _Stride;

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __Stride$[ebp]
	mov	DWORD PTR __Last$[ebp], eax
$LN4@operator:

; 1290 : 		for(; _First < _Last; _First += _Stride)

	jmp	SHORT $LN3@operator
$LN2@operator:
	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, DWORD PTR __Stride$[ebp]
	mov	DWORD PTR __First$[ebp], ecx
$LN3@operator:
	mov	edx, DWORD PTR __First$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	jae	SHORT $LN1@operator

; 1291 : 			_Val = 16777619U * _Val ^ (size_t)_Keyval[_First];

	push	ecx
	mov	DWORD PTR $T233982[ebp], esp
	mov	eax, DWORD PTR $T233982[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR __Keyval$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDU_Size_type_nosscl@01@@Z
	mov	DWORD PTR tv87[ebp], eax
	mov	edx, DWORD PTR tv87[ebp]
	movsx	eax, BYTE PTR [edx]
	mov	ecx, DWORD PTR __Val$[ebp]
	imul	ecx, 16777619				; 01000193H
	xor	ecx, eax
	mov	DWORD PTR __Val$[ebp], ecx
	jmp	SHORT $LN2@operator
$LN1@operator:

; 1292 : 		return (_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 1293 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T234072 = -40						; size = 4
$T234049 = -36						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >, COMDAT
; _this$ = ecx

; 520  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 521  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::clear
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T234049[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T234072[ebp], eax
	mov	ecx, DWORD PTR $T234072[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 522  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ
__ehhandler$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -48						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 559  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Tidy

; 560  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ
__ehhandler$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
PUBLIC	??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
PUBLIC	?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Init
PUBLIC	?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAE_NI@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Buy
PUBLIC	??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z$1
__ehfuncinfo$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
xdata$x	ENDS
;	COMDAT ??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z
_TEXT	SEGMENT
tv152 = -272						; size = 4
tv218 = -268						; size = 4
_this$ = -264						; size = 4
$T234348 = -156						; size = 4
$T234299 = -62						; size = 1
$T234286 = -61						; size = 1
$T234282 = -60						; size = 4
$T234275 = -52						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >, COMDAT
; _this$ = ecx

; 343  : 		{	// construct empty hash table

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Parg$[ebp]
	mov	cx, WORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx], cx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR $T234348[ebp], ecx
	lea	edx, DWORD PTR $T234299[ebp]
	mov	DWORD PTR $T234275[ebp], edx
	lea	eax, DWORD PTR $T234286[ebp]
	mov	DWORD PTR $T234282[ebp], eax
	mov	ecx, DWORD PTR $T234348[ebp]
	mov	DWORD PTR tv218[ebp], ecx
	mov	edx, DWORD PTR $T234348[ebp]
	mov	DWORD PTR tv152[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	0
	mov	ecx, DWORD PTR $T234348[ebp]
	call	?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAE_NI@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Buy
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [eax+40], xmm0

; 344  : 		_Init();

	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Init

; 345  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z$5:
	mov	ecx, DWORD PTR $T234348[ebp]
	jmp	??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
__ehhandler$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@std@@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >
; Function compile flags: /Odtp
;	COMDAT ?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z
_TEXT	SEGMENT
tv161 = -60						; size = 4
_this$ = -56						; size = 4
$T234719 = -52						; size = 4
$T234694 = -48						; size = 4
$T234672 = -44						; size = 4
$T234645 = -40						; size = 4
$T234621 = -36						; size = 4
$T234599 = -32						; size = 4
$T234581 = -28						; size = 4
__Num$234586 = -24					; size = 4
$T234574 = -20						; size = 4
$T234573 = -16						; size = 4
$T234572 = -12						; size = 4
__Where$ = -8						; size = 4
__Bucket$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 637  : 		{	// find leftmost not less than _Keyval in mutable hash table

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 638  : 		size_type _Bucket = _Hashval(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
	mov	DWORD PTR $T234581[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T234581[ebp]
	and	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR __Num$234586[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	cmp	ecx, DWORD PTR __Num$234586[ebp]
	ja	SHORT $LN10@lower_boun@2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	shr	eax, 1
	add	eax, 1
	mov	ecx, DWORD PTR __Num$234586[ebp]
	sub	ecx, eax
	mov	DWORD PTR __Num$234586[ebp], ecx
$LN10@lower_boun@2:
	mov	edx, DWORD PTR __Num$234586[ebp]
	mov	DWORD PTR __Bucket$[ebp], edx

; 639  : 		iterator _Where;

	mov	DWORD PTR __Where$[ebp], 0

; 640  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T234599[ebp], eax
	mov	ecx, DWORD PTR $T234599[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T234572[ebp], edx
	mov	eax, DWORD PTR $T234572[ebp]
	mov	DWORD PTR __Where$[ebp], eax
	jmp	SHORT $LN4@lower_boun@2
$LN26@lower_boun@2:
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Where$[ebp], edx
$LN4@lower_boun@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4+4]
	mov	DWORD PTR $T234621[ebp], eax
	mov	ecx, DWORD PTR $T234621[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	cmp	edx, DWORD PTR __Where$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	$LN2@lower_boun@2

; 641  : 			if (!this->comp(this->_Kfn(*_Where), _Keyval))

	mov	eax, DWORD PTR __Where$[ebp]
	add	eax, 8
	mov	DWORD PTR $T234645[ebp], eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T234645[ebp]
	push	edx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@lower_boun@2

; 642  : 				return (this->comp(_Keyval,
; 643  : 					this->_Kfn(*_Where)) ? end() : _Where);

	mov	edx, DWORD PTR __Where$[ebp]
	add	edx, 8
	mov	DWORD PTR $T234672[ebp], edx
	mov	eax, DWORD PTR $T234672[ebp]
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	movzx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN7@lower_boun@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T234694[ebp], edx
	mov	eax, DWORD PTR $T234694[ebp]
	mov	DWORD PTR $T234574[ebp], eax
	lea	ecx, DWORD PTR $T234574[ebp]
	mov	DWORD PTR tv161[ebp], ecx
	jmp	SHORT $LN8@lower_boun@2
$LN7@lower_boun@2:
	lea	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR tv161[ebp], edx
$LN8@lower_boun@2:
	mov	eax, DWORD PTR tv161[ebp]
	mov	DWORD PTR $T234573[ebp], eax
	mov	ecx, DWORD PTR $T234573[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@lower_boun@2
$LN1@lower_boun@2:

; 644  : 		return (end());

	jmp	$LN26@lower_boun@2
$LN2@lower_boun@2:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T234719[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR $T234719[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@lower_boun@2:

; 645  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Reinsert
PUBLIC	?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Insert
PUBLIC	?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::splice
PUBLIC	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase
; Function compile flags: /Odtp
;	COMDAT ?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@4@@Z
_TEXT	SEGMENT
tv381 = -296						; size = 4
tv666 = -292						; size = 8
tv662 = -284						; size = 8
_this$ = -276						; size = 4
__Count$235179 = -156					; size = 4
$T235159 = -152						; size = 4
$T235151 = -148						; size = 4
$T235145 = -144						; size = 4
$T235132 = -140						; size = 4
$T235128 = -136						; size = 4
$T235019 = -120						; size = 4
$T234884 = -96						; size = 4
$T234847 = -92						; size = 4
$T234814 = -88						; size = 4
$T234772 = -84						; size = 4
$T234768 = -80						; size = 4
$T234755 = -76						; size = 4
__Num$234760 = -72					; size = 4
$T234747 = -65						; size = 1
$T234746 = -64						; size = 4
$T234745 = -60						; size = 4
$T234744 = -56						; size = 4
$T234743 = -52						; size = 4
$T234742 = -48						; size = 4
$T234741 = -44						; size = 4
$T234740 = -37						; size = 1
$T234739 = -36						; size = 4
$T234738 = -32						; size = 4
$T234737 = -28						; size = 4
$T234736 = -24						; size = 4
__Idx$221620 = -20					; size = 4
__Maxsize$221618 = -16					; size = 4
__Newsize$221619 = -12					; size = 4
__Bucket$ = -8						; size = 4
__Plist$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
__Where$ = 16						; size = 4
?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@4@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 836  : 		{	// try to insert (possibly existing) node with value _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 296				; 00000128H
	mov	DWORD PTR _this$[ebp], ecx

; 837  : 		size_type _Bucket = _Hashval(this->_Kfn(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
	mov	DWORD PTR $T234755[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T234755[ebp]
	and	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR __Num$234760[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	cmp	ecx, DWORD PTR __Num$234760[ebp]
	ja	SHORT $LN23@Insert@2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	shr	eax, 1
	add	eax, 1
	mov	ecx, DWORD PTR __Num$234760[ebp]
	sub	ecx, eax
	mov	DWORD PTR __Num$234760[ebp], ecx
$LN23@Insert@2:
	mov	edx, DWORD PTR __Num$234760[ebp]
	mov	DWORD PTR __Bucket$[ebp], edx

; 838  : 		iterator _Plist = _Get_iter_from_vec(_Vec[_Bucket + 1]);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4+4]
	mov	DWORD PTR $T234768[ebp], eax
	mov	ecx, DWORD PTR $T234768[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Plist$[ebp], edx
$LN30@Insert@2:

; 839  : 
; 840  : 		for (; _Plist != _Get_iter_from_vec(_Vec[_Bucket]); )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T234772[ebp], eax
	mov	ecx, DWORD PTR $T234772[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T234736[ebp], edx
	mov	eax, DWORD PTR __Plist$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T234736[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	$LN17@Insert@2

; 841  : 			if (this->comp(this->_Kfn(_Val), this->_Kfn(*--_Plist)))

	mov	ecx, DWORD PTR __Plist$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Plist$[ebp], edx
	mov	eax, DWORD PTR __Plist$[ebp]
	add	eax, 8
	mov	DWORD PTR $T234814[ebp], eax
	mov	ecx, DWORD PTR $T234814[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN16@Insert@2

; 842  : 				;	// still too high in bucket list
; 843  : 			else if (_Multi

	jmp	$LN12@Insert@2
$LN16@Insert@2:

; 844  : 				|| this->comp(this->_Kfn(*_Plist), this->_Kfn(_Val)))

	xor	edx, edx
	jne	SHORT $LN13@Insert@2
	mov	eax, DWORD PTR __Plist$[ebp]
	add	eax, 8
	mov	DWORD PTR $T234847[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T234847[ebp]
	push	edx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@Insert@2
$LN13@Insert@2:

; 845  : 				{	// found insertion point, back up to it
; 846  : 				++_Plist;

	mov	edx, DWORD PTR __Plist$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Plist$[ebp], eax

; 847  : 				break;

	jmp	SHORT $LN17@Insert@2

; 848  : 				}
; 849  : 			else

	jmp	SHORT $LN12@Insert@2
$LN14@Insert@2:

; 850  : 				{	// discard new list element and return existing
; 851  : 				if (_Where != end())

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T234884[ebp], edx
	mov	eax, DWORD PTR $T234884[ebp]
	mov	DWORD PTR $T234737[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR $T234737[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@Insert@2

; 852  : 					_List.erase(_Where);

	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T234738[ebp], edx
	mov	eax, DWORD PTR $T234738[ebp]
	push	eax
	lea	ecx, DWORD PTR $T234739[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase
$LN11@Insert@2:

; 853  : 				return (_Pairib(_Plist, false));

	mov	BYTE PTR $T234740[ebp], 0
	mov	edx, DWORD PTR __Plist$[ebp]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	dl, BYTE PTR $T234740[ebp]
	mov	BYTE PTR [ecx+4], dl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN19@Insert@2
$LN12@Insert@2:

; 854  : 				}

	jmp	$LN30@Insert@2
$LN17@Insert@2:

; 855  : 
; 856  : 		if (_Where != end())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T235019[ebp], ecx
	mov	edx, DWORD PTR $T235019[ebp]
	mov	DWORD PTR $T234741[ebp], edx
	mov	eax, DWORD PTR __Where$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T234741[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN10@Insert@2

; 857  : 			_List.splice(_Plist, _List, _Where);	// move element into place

	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T234742[ebp], ecx
	mov	edx, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR $T234743[ebp], edx
	mov	eax, DWORD PTR $T234742[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR $T234743[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::splice

; 858  : 		else

	jmp	SHORT $LN9@Insert@2
$LN10@Insert@2:

; 859  : 			_Where = _List.insert(_Plist, _Val);	// insert new element

	mov	eax, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR $T234744[ebp], eax
	mov	ecx, DWORD PTR $T234744[ebp]
	mov	DWORD PTR $T235128[ebp], ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR $T235128[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Insert
	mov	ecx, DWORD PTR $T235128[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T235128[ebp], edx
	mov	eax, DWORD PTR $T235128[ebp]
	mov	DWORD PTR $T234745[ebp], eax
	mov	ecx, DWORD PTR $T234745[ebp]
	mov	DWORD PTR __Where$[ebp], ecx
$LN9@Insert@2:
	jmp	SHORT $LN8@Insert@2
$LN7@Insert@2:

; 860  : 		for (; _Plist == _Get_iter_from_vec(_Vec[_Bucket]); --_Bucket)

	mov	edx, DWORD PTR __Bucket$[ebp]
	sub	edx, 1
	mov	DWORD PTR __Bucket$[ebp], edx
$LN8@Insert@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T235132[ebp], eax
	mov	ecx, DWORD PTR $T235132[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T234746[ebp], edx
	mov	eax, DWORD PTR __Plist$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T234746[ebp]
	sete	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN6@Insert@2

; 861  : 			{	// update end iterators if new first bucket element
; 862  : 			_Vec[_Bucket] = _Where;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax

; 863  : 			if (_Bucket == 0)

	cmp	DWORD PTR __Bucket$[ebp], 0
	jne	SHORT $LN5@Insert@2

; 864  : 				break;

	jmp	SHORT $LN6@Insert@2
$LN5@Insert@2:

; 865  : 			}

	jmp	SHORT $LN7@Insert@2
$LN6@Insert@2:

; 866  : 
; 867  : 		if (max_load_factor() < load_factor())

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+40]
	movss	DWORD PTR $T235145[ebp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR $T235151[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR $T235159[ebp], edx
	mov	eax, DWORD PTR $T235159[ebp]
	mov	DWORD PTR tv662[ebp], eax
	mov	DWORD PTR tv662[ebp+4], 0
	fild	QWORD PTR tv662[ebp]
	mov	ecx, DWORD PTR $T235151[ebp]
	mov	DWORD PTR tv666[ebp], ecx
	mov	DWORD PTR tv666[ebp+4], 0
	fild	QWORD PTR tv666[ebp]
	fdivrp	ST(1), ST(0)
	fld	DWORD PTR $T235145[ebp]
	fxch	ST(1)
	fcomip	ST(1)
	fstp	ST(0)
	jbe	$LN4@Insert@2

; 868  :  #if _HAS_INCREMENTAL_HASH
; 869  : 			_Grow();	// too dense, need to grow hash table
; 870  : 
; 871  :  #else /* _HAS_INCREMENTAL_HASH */
; 872  : 			{	// rehash to bigger table
; 873  : 			size_type _Maxsize = _Vec.max_size() / 2;

	mov	DWORD PTR __Count$235179[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$235179[ebp], 0
	jbe	SHORT $LN211@Insert@2
	mov	edx, DWORD PTR __Count$235179[ebp]
	mov	DWORD PTR tv381[ebp], edx
	jmp	SHORT $LN212@Insert@2
$LN211@Insert@2:
	mov	DWORD PTR tv381[ebp], 1
$LN212@Insert@2:
	mov	eax, DWORD PTR tv381[ebp]
	shr	eax, 1
	mov	DWORD PTR __Maxsize$221618[ebp], eax

; 874  : 			size_type _Newsize = bucket_count();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR __Newsize$221619[ebp], edx

; 875  : 
; 876  : 			for (int _Idx = 0; _Idx < 3 && _Newsize < _Maxsize; ++_Idx)

	mov	DWORD PTR __Idx$221620[ebp], 0
	jmp	SHORT $LN3@Insert@2
$LN2@Insert@2:
	mov	eax, DWORD PTR __Idx$221620[ebp]
	add	eax, 1
	mov	DWORD PTR __Idx$221620[ebp], eax
$LN3@Insert@2:
	cmp	DWORD PTR __Idx$221620[ebp], 3
	jge	SHORT $LN1@Insert@2
	mov	ecx, DWORD PTR __Newsize$221619[ebp]
	cmp	ecx, DWORD PTR __Maxsize$221618[ebp]
	jae	SHORT $LN1@Insert@2

; 877  : 				_Newsize *= 2;	// multiply safely by 8

	mov	edx, DWORD PTR __Newsize$221619[ebp]
	shl	edx, 1
	mov	DWORD PTR __Newsize$221619[ebp], edx
	jmp	SHORT $LN2@Insert@2
$LN1@Insert@2:

; 878  : 			_Init(_Newsize);

	mov	eax, DWORD PTR __Newsize$221619[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Init

; 879  : 			_Reinsert();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Reinsert
$LN4@Insert@2:

; 880  : 			}
; 881  : #endif /* _HAS_INCREMENTAL_HASH */
; 882  : 
; 883  : 		return (_Pairib(_Where, true));	// return iterator for new element

	mov	BYTE PTR $T234747[ebp], 1
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR $T234747[ebp]
	mov	BYTE PTR [eax+4], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN19@Insert@2:

; 884  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@4@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Insert
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T235532 = -40						; size = 4
$T235509 = -36						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >, COMDAT
; _this$ = ecx

; 520  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 521  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::clear
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T235509[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T235532[ebp], eax
	mov	ecx, DWORD PTR $T235532[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 522  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ
__ehhandler$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -48						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 559  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Tidy

; 560  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ
__ehhandler$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
PUBLIC	??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
PUBLIC	?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Init
PUBLIC	?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAE_NI@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Buy
PUBLIC	??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z$1
__ehfuncinfo$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
xdata$x	ENDS
;	COMDAT ??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z
_TEXT	SEGMENT
tv152 = -272						; size = 4
tv218 = -268						; size = 4
_this$ = -264						; size = 4
$T235808 = -156						; size = 4
$T235759 = -62						; size = 1
$T235746 = -61						; size = 1
$T235742 = -60						; size = 4
$T235735 = -52						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >, COMDAT
; _this$ = ecx

; 343  : 		{	// construct empty hash table

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Parg$[ebp]
	mov	cx, WORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx], cx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR $T235808[ebp], ecx
	lea	edx, DWORD PTR $T235759[ebp]
	mov	DWORD PTR $T235735[ebp], edx
	lea	eax, DWORD PTR $T235746[ebp]
	mov	DWORD PTR $T235742[ebp], eax
	mov	ecx, DWORD PTR $T235808[ebp]
	mov	DWORD PTR tv218[ebp], ecx
	mov	edx, DWORD PTR $T235808[ebp]
	mov	DWORD PTR tv152[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	0
	mov	ecx, DWORD PTR $T235808[ebp]
	call	?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAE_NI@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Buy
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@40800000
	movss	DWORD PTR [eax+40], xmm0

; 344  : 		_Init();

	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Init

; 345  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z$5:
	mov	ecx, DWORD PTR $T235808[ebp]
	jmp	??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ
__unwindfunclet$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
__ehhandler$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-264]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE@ABV?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@std@@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >
; Function compile flags: /Odtp
;	COMDAT ?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z
_TEXT	SEGMENT
tv161 = -60						; size = 4
_this$ = -56						; size = 4
$T236179 = -52						; size = 4
$T236154 = -48						; size = 4
$T236132 = -44						; size = 4
$T236105 = -40						; size = 4
$T236081 = -36						; size = 4
$T236059 = -32						; size = 4
$T236041 = -28						; size = 4
__Num$236046 = -24					; size = 4
$T236034 = -20						; size = 4
$T236033 = -16						; size = 4
$T236032 = -12						; size = 4
__Where$ = -8						; size = 4
__Bucket$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 637  : 		{	// find leftmost not less than _Keyval in mutable hash table

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 638  : 		size_type _Bucket = _Hashval(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
	mov	DWORD PTR $T236041[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T236041[ebp]
	and	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR __Num$236046[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	cmp	ecx, DWORD PTR __Num$236046[ebp]
	ja	SHORT $LN10@lower_boun@3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	shr	eax, 1
	add	eax, 1
	mov	ecx, DWORD PTR __Num$236046[ebp]
	sub	ecx, eax
	mov	DWORD PTR __Num$236046[ebp], ecx
$LN10@lower_boun@3:
	mov	edx, DWORD PTR __Num$236046[ebp]
	mov	DWORD PTR __Bucket$[ebp], edx

; 639  : 		iterator _Where;

	mov	DWORD PTR __Where$[ebp], 0

; 640  : 		for (_Where = _Get_iter_from_vec(_Vec[_Bucket]); _Vec[_Bucket + 1] != _Where; ++_Where)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T236059[ebp], eax
	mov	ecx, DWORD PTR $T236059[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T236032[ebp], edx
	mov	eax, DWORD PTR $T236032[ebp]
	mov	DWORD PTR __Where$[ebp], eax
	jmp	SHORT $LN4@lower_boun@3
$LN26@lower_boun@3:
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Where$[ebp], edx
$LN4@lower_boun@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4+4]
	mov	DWORD PTR $T236081[ebp], eax
	mov	ecx, DWORD PTR $T236081[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	cmp	edx, DWORD PTR __Where$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	$LN2@lower_boun@3

; 641  : 			if (!this->comp(this->_Kfn(*_Where), _Keyval))

	mov	eax, DWORD PTR __Where$[ebp]
	add	eax, 8
	mov	DWORD PTR $T236105[ebp], eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T236105[ebp]
	push	edx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@lower_boun@3

; 642  : 				return (this->comp(_Keyval,
; 643  : 					this->_Kfn(*_Where)) ? end() : _Where);

	mov	edx, DWORD PTR __Where$[ebp]
	add	edx, 8
	mov	DWORD PTR $T236132[ebp], edx
	mov	eax, DWORD PTR $T236132[ebp]
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	movzx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN7@lower_boun@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T236154[ebp], edx
	mov	eax, DWORD PTR $T236154[ebp]
	mov	DWORD PTR $T236034[ebp], eax
	lea	ecx, DWORD PTR $T236034[ebp]
	mov	DWORD PTR tv161[ebp], ecx
	jmp	SHORT $LN8@lower_boun@3
$LN7@lower_boun@3:
	lea	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR tv161[ebp], edx
$LN8@lower_boun@3:
	mov	eax, DWORD PTR tv161[ebp]
	mov	DWORD PTR $T236033[ebp], eax
	mov	ecx, DWORD PTR $T236033[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@lower_boun@3
$LN1@lower_boun@3:

; 644  : 		return (end());

	jmp	$LN26@lower_boun@3
$LN2@lower_boun@3:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T236179[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR $T236179[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@lower_boun@3:

; 645  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?lower_bound@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@QAE?AV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Reinsert
PUBLIC	?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Insert
PUBLIC	?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::splice
PUBLIC	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase
; Function compile flags: /Odtp
;	COMDAT ?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z
_TEXT	SEGMENT
tv381 = -296						; size = 4
tv666 = -292						; size = 8
tv662 = -284						; size = 8
_this$ = -276						; size = 4
__Count$236642 = -156					; size = 4
$T236619 = -152						; size = 4
$T236611 = -148						; size = 4
$T236605 = -144						; size = 4
$T236592 = -140						; size = 4
$T236588 = -136						; size = 4
$T236479 = -120						; size = 4
$T236344 = -96						; size = 4
$T236307 = -92						; size = 4
$T236274 = -88						; size = 4
$T236232 = -84						; size = 4
$T236228 = -80						; size = 4
$T236215 = -76						; size = 4
__Num$236220 = -72					; size = 4
$T236207 = -65						; size = 1
$T236206 = -64						; size = 4
$T236205 = -60						; size = 4
$T236204 = -56						; size = 4
$T236203 = -52						; size = 4
$T236202 = -48						; size = 4
$T236201 = -44						; size = 4
$T236200 = -37						; size = 1
$T236199 = -36						; size = 4
$T236198 = -32						; size = 4
$T236197 = -28						; size = 4
$T236196 = -24						; size = 4
__Idx$221705 = -20					; size = 4
__Maxsize$221703 = -16					; size = 4
__Newsize$221704 = -12					; size = 4
__Bucket$ = -8						; size = 4
__Plist$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
__Where$ = 16						; size = 4
?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 836  : 		{	// try to insert (possibly existing) node with value _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 296				; 00000128H
	mov	DWORD PTR _this$[ebp], ecx

; 837  : 		size_type _Bucket = _Hashval(this->_Kfn(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@std@@QBEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
	mov	DWORD PTR $T236215[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T236215[ebp]
	and	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR __Num$236220[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	cmp	ecx, DWORD PTR __Num$236220[ebp]
	ja	SHORT $LN23@Insert@3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	shr	eax, 1
	add	eax, 1
	mov	ecx, DWORD PTR __Num$236220[ebp]
	sub	ecx, eax
	mov	DWORD PTR __Num$236220[ebp], ecx
$LN23@Insert@3:
	mov	edx, DWORD PTR __Num$236220[ebp]
	mov	DWORD PTR __Bucket$[ebp], edx

; 838  : 		iterator _Plist = _Get_iter_from_vec(_Vec[_Bucket + 1]);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4+4]
	mov	DWORD PTR $T236228[ebp], eax
	mov	ecx, DWORD PTR $T236228[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Plist$[ebp], edx
$LN30@Insert@3:

; 839  : 
; 840  : 		for (; _Plist != _Get_iter_from_vec(_Vec[_Bucket]); )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T236232[ebp], eax
	mov	ecx, DWORD PTR $T236232[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T236196[ebp], edx
	mov	eax, DWORD PTR __Plist$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T236196[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	$LN17@Insert@3

; 841  : 			if (this->comp(this->_Kfn(_Val), this->_Kfn(*--_Plist)))

	mov	ecx, DWORD PTR __Plist$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Plist$[ebp], edx
	mov	eax, DWORD PTR __Plist$[ebp]
	add	eax, 8
	mov	DWORD PTR $T236274[ebp], eax
	mov	ecx, DWORD PTR $T236274[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN16@Insert@3

; 842  : 				;	// still too high in bucket list
; 843  : 			else if (_Multi

	jmp	$LN12@Insert@3
$LN16@Insert@3:

; 844  : 				|| this->comp(this->_Kfn(*_Plist), this->_Kfn(_Val)))

	xor	edx, edx
	jne	SHORT $LN13@Insert@3
	mov	eax, DWORD PTR __Plist$[ebp]
	add	eax, 8
	mov	DWORD PTR $T236307[ebp], eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T236307[ebp]
	push	edx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@Insert@3
$LN13@Insert@3:

; 845  : 				{	// found insertion point, back up to it
; 846  : 				++_Plist;

	mov	edx, DWORD PTR __Plist$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Plist$[ebp], eax

; 847  : 				break;

	jmp	SHORT $LN17@Insert@3

; 848  : 				}
; 849  : 			else

	jmp	SHORT $LN12@Insert@3
$LN14@Insert@3:

; 850  : 				{	// discard new list element and return existing
; 851  : 				if (_Where != end())

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T236344[ebp], edx
	mov	eax, DWORD PTR $T236344[ebp]
	mov	DWORD PTR $T236197[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR $T236197[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@Insert@3

; 852  : 					_List.erase(_Where);

	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T236198[ebp], edx
	mov	eax, DWORD PTR $T236198[ebp]
	push	eax
	lea	ecx, DWORD PTR $T236199[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase
$LN11@Insert@3:

; 853  : 				return (_Pairib(_Plist, false));

	mov	BYTE PTR $T236200[ebp], 0
	mov	edx, DWORD PTR __Plist$[ebp]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	dl, BYTE PTR $T236200[ebp]
	mov	BYTE PTR [ecx+4], dl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN19@Insert@3
$LN12@Insert@3:

; 854  : 				}

	jmp	$LN30@Insert@3
$LN17@Insert@3:

; 855  : 
; 856  : 		if (_Where != end())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T236479[ebp], ecx
	mov	edx, DWORD PTR $T236479[ebp]
	mov	DWORD PTR $T236201[ebp], edx
	mov	eax, DWORD PTR __Where$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T236201[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN10@Insert@3

; 857  : 			_List.splice(_Plist, _List, _Where);	// move element into place

	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T236202[ebp], ecx
	mov	edx, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR $T236203[ebp], edx
	mov	eax, DWORD PTR $T236202[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR $T236203[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::splice

; 858  : 		else

	jmp	SHORT $LN9@Insert@3
$LN10@Insert@3:

; 859  : 			_Where = _List.insert(_Plist, _Val);	// insert new element

	mov	eax, DWORD PTR __Plist$[ebp]
	mov	DWORD PTR $T236204[ebp], eax
	mov	ecx, DWORD PTR $T236204[ebp]
	mov	DWORD PTR $T236588[ebp], ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR $T236588[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Insert
	mov	ecx, DWORD PTR $T236588[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T236588[ebp], edx
	mov	eax, DWORD PTR $T236588[ebp]
	mov	DWORD PTR $T236205[ebp], eax
	mov	ecx, DWORD PTR $T236205[ebp]
	mov	DWORD PTR __Where$[ebp], ecx
$LN9@Insert@3:
	jmp	SHORT $LN8@Insert@3
$LN7@Insert@3:

; 860  : 		for (; _Plist == _Get_iter_from_vec(_Vec[_Bucket]); --_Bucket)

	mov	edx, DWORD PTR __Bucket$[ebp]
	sub	edx, 1
	mov	DWORD PTR __Bucket$[ebp], edx
$LN8@Insert@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T236592[ebp], eax
	mov	ecx, DWORD PTR $T236592[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T236206[ebp], edx
	mov	eax, DWORD PTR __Plist$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T236206[ebp]
	sete	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN6@Insert@3

; 861  : 			{	// update end iterators if new first bucket element
; 862  : 			_Vec[_Bucket] = _Where;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR __Bucket$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax

; 863  : 			if (_Bucket == 0)

	cmp	DWORD PTR __Bucket$[ebp], 0
	jne	SHORT $LN5@Insert@3

; 864  : 				break;

	jmp	SHORT $LN6@Insert@3
$LN5@Insert@3:

; 865  : 			}

	jmp	SHORT $LN7@Insert@3
$LN6@Insert@3:

; 866  : 
; 867  : 		if (max_load_factor() < load_factor())

	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+40]
	movss	DWORD PTR $T236605[ebp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR $T236611[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR $T236619[ebp], edx
	mov	eax, DWORD PTR $T236619[ebp]
	mov	DWORD PTR tv662[ebp], eax
	mov	DWORD PTR tv662[ebp+4], 0
	fild	QWORD PTR tv662[ebp]
	mov	ecx, DWORD PTR $T236611[ebp]
	mov	DWORD PTR tv666[ebp], ecx
	mov	DWORD PTR tv666[ebp+4], 0
	fild	QWORD PTR tv666[ebp]
	fdivrp	ST(1), ST(0)
	fld	DWORD PTR $T236605[ebp]
	fxch	ST(1)
	fcomip	ST(1)
	fstp	ST(0)
	jbe	$LN4@Insert@3

; 868  :  #if _HAS_INCREMENTAL_HASH
; 869  : 			_Grow();	// too dense, need to grow hash table
; 870  : 
; 871  :  #else /* _HAS_INCREMENTAL_HASH */
; 872  : 			{	// rehash to bigger table
; 873  : 			size_type _Maxsize = _Vec.max_size() / 2;

	mov	DWORD PTR __Count$236642[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$236642[ebp], 0
	jbe	SHORT $LN211@Insert@3
	mov	edx, DWORD PTR __Count$236642[ebp]
	mov	DWORD PTR tv381[ebp], edx
	jmp	SHORT $LN212@Insert@3
$LN211@Insert@3:
	mov	DWORD PTR tv381[ebp], 1
$LN212@Insert@3:
	mov	eax, DWORD PTR tv381[ebp]
	shr	eax, 1
	mov	DWORD PTR __Maxsize$221703[ebp], eax

; 874  : 			size_type _Newsize = bucket_count();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR __Newsize$221704[ebp], edx

; 875  : 
; 876  : 			for (int _Idx = 0; _Idx < 3 && _Newsize < _Maxsize; ++_Idx)

	mov	DWORD PTR __Idx$221705[ebp], 0
	jmp	SHORT $LN3@Insert@3
$LN2@Insert@3:
	mov	eax, DWORD PTR __Idx$221705[ebp]
	add	eax, 1
	mov	DWORD PTR __Idx$221705[ebp], eax
$LN3@Insert@3:
	cmp	DWORD PTR __Idx$221705[ebp], 3
	jge	SHORT $LN1@Insert@3
	mov	ecx, DWORD PTR __Newsize$221704[ebp]
	cmp	ecx, DWORD PTR __Maxsize$221703[ebp]
	jae	SHORT $LN1@Insert@3

; 877  : 				_Newsize *= 2;	// multiply safely by 8

	mov	edx, DWORD PTR __Newsize$221704[ebp]
	shl	edx, 1
	mov	DWORD PTR __Newsize$221704[ebp], edx
	jmp	SHORT $LN2@Insert@3
$LN1@Insert@3:

; 878  : 			_Init(_Newsize);

	mov	eax, DWORD PTR __Newsize$221704[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Init

; 879  : 			_Reinsert();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Reinsert
$LN4@Insert@3:

; 880  : 			}
; 881  : #endif /* _HAS_INCREMENTAL_HASH */
; 882  : 
; 883  : 		return (_Pairib(_Where, true));	// return iterator for new element

	mov	BYTE PTR $T236207[ebp], 1
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR $T236207[ebp]
	mov	BYTE PTR [eax+4], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN19@Insert@3:

; 884  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T236992 = -40						; size = 4
$T236969 = -36						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >, COMDAT
; _this$ = ecx

; 520  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 521  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::clear
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T236969[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T236992[ebp], eax
	mov	ecx, DWORD PTR $T236992[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 522  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ
__ehhandler$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -48						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 559  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Tidy

; 560  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ
__ehhandler$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::~vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ PROC ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE@XZ ENDP ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ PROC ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE@XZ ENDP ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ PROC ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::~_List_val<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ PROC ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE@XZ ENDP ; std::_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::~_Vector_val<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
_TEXT	ENDS
PUBLIC	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Assign_n
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -120						; size = 4
$T237219 = -8						; size = 4
$T237208 = -4						; size = 4
__Buckets$ = 8						; size = 4
?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 829  : 		{	// initialize hash table with _Buckets buckets, leave list alone

	push	ebp
	mov	ebp, esp
	sub	esp, 120				; 00000078H
	mov	DWORD PTR _this$[ebp], ecx

; 830  : 		_Vec.assign(_Buckets + 1, end());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T237219[ebp], ecx
	mov	edx, DWORD PTR $T237219[ebp]
	mov	DWORD PTR $T237208[ebp], edx
	lea	eax, DWORD PTR $T237208[ebp]
	push	eax
	mov	ecx, DWORD PTR __Buckets$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Assign_n

; 831  : 		_Mask = _Buckets - 1;

	mov	edx, DWORD PTR __Buckets$[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], edx

; 832  : 		_Maxidx = _Buckets;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Buckets$[ebp]
	mov	DWORD PTR [ecx+36], edx

; 833  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Init
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ
_TEXT	SEGMENT
_this$ = -200						; size = 4
$T237475 = -32						; size = 4
$T237463 = -28						; size = 4
$T237454 = -24						; size = 4
$T237441 = -20						; size = 8
$T237440 = -12						; size = 4
$T237439 = -8						; size = 4
__First$ = -4						; size = 4
?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Reinsert, COMDAT
; _this$ = ecx

; 887  : 		{	// insert elements at beginning of list into table

	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	mov	DWORD PTR _this$[ebp], ecx

; 888  : 		iterator _First;

	mov	DWORD PTR __First$[ebp], 0
$LN2@Reinsert:

; 889  : 		for (; (_First = _List.begin()) != _Get_iter_from_vec(_Vec[0]); )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T237454[ebp], ecx
	mov	edx, DWORD PTR $T237454[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T237463[ebp], eax
	mov	ecx, DWORD PTR $T237463[ebp]
	mov	DWORD PTR $T237439[ebp], ecx
	mov	edx, DWORD PTR $T237439[ebp]
	mov	DWORD PTR __First$[ebp], edx
	xor	eax, eax
	shl	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR $T237475[ebp], eax
	mov	edx, DWORD PTR $T237475[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T237440[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR $T237440[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Reinsert

; 890  : 			_Insert(*_First, _First);

	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR $T237441[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Insert
	jmp	SHORT $LN2@Reinsert
$LN3@Reinsert:

; 891  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> >,0> >::_Reinsert
_TEXT	ENDS
PUBLIC	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z$0
__ehfuncinfo$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z
_TEXT	SEGMENT
tv91 = -68						; size = 4
tv148 = -64						; size = 4
tv173 = -60						; size = 4
tv197 = -56						; size = 4
_this$ = -52						; size = 4
$T238079 = -48						; size = 1
$T238052 = -47						; size = 1
$T238032 = -46						; size = 1
$T238019 = -45						; size = 1
$T238015 = -44						; size = 4
$T238008 = -36						; size = 4
$T238001 = -28						; size = 4
$T237994 = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >, COMDAT
; _this$ = ecx

; 441  : 		{	// construct empty list, allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T238079[ebp]
	mov	DWORD PTR $T237994[ebp], eax
	lea	ecx, DWORD PTR $T238052[ebp]
	mov	DWORD PTR $T238001[ebp], ecx
	lea	edx, DWORD PTR $T238032[ebp]
	mov	DWORD PTR $T238008[ebp], edx
	lea	eax, DWORD PTR $T238019[ebp]
	mov	DWORD PTR $T238015[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv197[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv173[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv148[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv91[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 442  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@1@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >
; Function compile flags: /Odtp
;	COMDAT ?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T238186 = -24						; size = 4
$T238136 = -20						; size = 4
$T238117 = -16						; size = 4
__Tmp$238104 = -12					; size = 4
$T238088 = -8						; size = 4
__Pnode$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase, COMDAT
; _this$ = ecx

; 786  : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 787  : 
; 788  :  #if _HAS_ITERATOR_DEBUGGING
; 789  : 		if (_Where._Mycont != this || _Where._Ptr == _Myhead)
; 790  : 			_DEBUG_ERROR("list erase iterator outside range");
; 791  : 		_Nodeptr _Pnode = (_Where++)._Mynode();
; 792  : 		_Orphan_ptr(*this, _Pnode);
; 793  : 
; 794  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 795  : 		_Nodeptr _Pnode = (_Where++)._Mynode();

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Tmp$238104[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Where$[ebp], edx
	mov	eax, DWORD PTR __Tmp$238104[ebp]
	mov	DWORD PTR $T238088[ebp], eax
	mov	ecx, DWORD PTR $T238088[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 796  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 797  : 
; 798  : 		if (_Pnode != _Myhead)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	je	SHORT $LN1@erase

; 799  : 			{	// not list head, safe to erase
; 800  : 			_Nextnode(_Prevnode(_Pnode)) = _Nextnode(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T238117[ebp], edx
	mov	eax, DWORD PTR $T238117[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 801  : 			_Prevnode(_Nextnode(_Pnode)) = _Prevnode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 802  : 			this->_Alnod.destroy(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	add	ecx, 8
	mov	DWORD PTR $T238136[ebp], ecx
	mov	ecx, DWORD PTR $T238136[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN24@erase
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN24@erase:

; 803  : 			this->_Alnod.deallocate(_Pnode, 1);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 804  : 			--_Mysize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN1@erase:

; 805  : 			}
; 806  : 		return (_Make_iter(_Where));

	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T238186[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR $T238186[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 807  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase
_TEXT	ENDS
PUBLIC	?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Splice
; Function compile flags: /Odtp
;	COMDAT ?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z
_TEXT	SEGMENT
_this$ = -240						; size = 4
$T238199 = -12						; size = 4
$T238189 = -8						; size = 4
__Last$221825 = -4					; size = 4
__Where$ = 8						; size = 4
__Right$ = 12						; size = 4
__First$ = 16						; size = 4
?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::splice, COMDAT
; _this$ = ecx

; 883  : 		{	// splice _Right [_First, _First + 1) at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	mov	DWORD PTR _this$[ebp], ecx

; 884  : 
; 885  :  #if _HAS_ITERATOR_DEBUGGING
; 886  : 		if (_First == _Right.end())
; 887  : 			_DEBUG_ERROR("list splice iterator outside range");
; 888  : 		else
; 889  : 
; 890  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 891  : 		if (_First != _Right.end())

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T238199[ebp], ecx
	mov	edx, DWORD PTR $T238199[ebp]
	mov	DWORD PTR $T238189[ebp], edx
	mov	eax, DWORD PTR __First$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T238189[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN4@splice

; 892  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 893  : 
; 894  : 			{	// element exists, try splice
; 895  : 			const_iterator _Last = _First;

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Last$221825[ebp], ecx

; 896  : 			++_Last;

	mov	edx, DWORD PTR __Last$221825[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Last$221825[ebp], eax

; 897  : 			if (this != &_Right
; 898  : 				|| (_Where != _First && _Where != _Last))

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN1@splice
	mov	edx, DWORD PTR __Where$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __First$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN4@splice
	mov	eax, DWORD PTR __Where$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last$221825[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN4@splice
$LN1@splice:

; 899  : 				_Splice(_Where, _Right, _First, _Last, 1);

	push	0
	push	1
	mov	ecx, DWORD PTR __Last$221825[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Splice
$LN4@splice:

; 900  : 			}
; 901  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::splice
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T238699 = -28						; size = 4
$T238676 = -24						; size = 4
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Tidy, COMDAT
; _this$ = ecx

; 1212 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1213 : 		clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::clear

; 1214 : 		this->_Alptr.destroy(&_Nextnode(_Myhead));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T238676[ebp], ecx

; 1215 : 		this->_Alptr.destroy(&_Prevnode(_Myhead));
; 1216 : 		this->_Alnod.deallocate(_Myhead, 1);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T238699[ebp], eax
	mov	ecx, DWORD PTR $T238699[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1217 : 		_Myhead = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 1218 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Tidy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T238768 = -32						; size = 4
$T238767 = -28						; size = 4
$T238763 = -24						; size = 4
$T238762 = -20						; size = 4
$T238744 = -16						; size = 4
$T238743 = -12						; size = 4
$T238727 = -8						; size = 4
__Cat$238750 = -2					; size = 1
$T238747 = -1						; size = 1
?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tidy

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T238763[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T238762[ebp], ecx
	mov	edx, DWORD PTR $T238763[ebp]
	mov	DWORD PTR $T238744[ebp], edx
	mov	eax, DWORD PTR $T238762[ebp]
	mov	DWORD PTR $T238743[ebp], eax
	mov	cl, BYTE PTR __Cat$238750[ebp]
	mov	BYTE PTR $T238747[ebp], cl
	mov	edx, DWORD PTR $T238743[ebp]
	mov	DWORD PTR $T238727[ebp], edx
	jmp	SHORT $LN12@Tidy
$LN11@Tidy:
	mov	eax, DWORD PTR $T238727[ebp]
	add	eax, 4
	mov	DWORD PTR $T238727[ebp], eax
$LN12@Tidy:
	mov	ecx, DWORD PTR $T238727[ebp]
	cmp	ecx, DWORD PTR $T238744[ebp]
	je	SHORT $LN4@Tidy
	jmp	SHORT $LN11@Tidy
$LN4@Tidy:

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	mov	DWORD PTR $T238768[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T238767[ebp], eax
	mov	ecx, DWORD PTR $T238767[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Tidy:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 1135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Tidy
_TEXT	ENDS
PUBLIC	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Assign_n
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -120						; size = 4
$T238782 = -8						; size = 4
$T238771 = -4						; size = 4
__Buckets$ = 8						; size = 4
?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 829  : 		{	// initialize hash table with _Buckets buckets, leave list alone

	push	ebp
	mov	ebp, esp
	sub	esp, 120				; 00000078H
	mov	DWORD PTR _this$[ebp], ecx

; 830  : 		_Vec.assign(_Buckets + 1, end());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T238782[ebp], ecx
	mov	edx, DWORD PTR $T238782[ebp]
	mov	DWORD PTR $T238771[ebp], edx
	lea	eax, DWORD PTR $T238771[ebp]
	push	eax
	mov	ecx, DWORD PTR __Buckets$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Assign_n

; 831  : 		_Mask = _Buckets - 1;

	mov	edx, DWORD PTR __Buckets$[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], edx

; 832  : 		_Maxidx = _Buckets;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Buckets$[ebp]
	mov	DWORD PTR [ecx+36], edx

; 833  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Init
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ
_TEXT	SEGMENT
_this$ = -200						; size = 4
$T239038 = -32						; size = 4
$T239026 = -28						; size = 4
$T239017 = -24						; size = 4
$T239004 = -20						; size = 8
$T239003 = -12						; size = 4
$T239002 = -8						; size = 4
__First$ = -4						; size = 4
?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Reinsert, COMDAT
; _this$ = ecx

; 887  : 		{	// insert elements at beginning of list into table

	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	mov	DWORD PTR _this$[ebp], ecx

; 888  : 		iterator _First;

	mov	DWORD PTR __First$[ebp], 0
$LN2@Reinsert@2:

; 889  : 		for (; (_First = _List.begin()) != _Get_iter_from_vec(_Vec[0]); )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T239017[ebp], ecx
	mov	edx, DWORD PTR $T239017[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T239026[ebp], eax
	mov	ecx, DWORD PTR $T239026[ebp]
	mov	DWORD PTR $T239002[ebp], ecx
	mov	edx, DWORD PTR $T239002[ebp]
	mov	DWORD PTR __First$[ebp], edx
	xor	eax, eax
	shl	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR $T239038[ebp], eax
	mov	edx, DWORD PTR $T239038[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T239003[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR $T239003[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Reinsert@2

; 890  : 			_Insert(*_First, _First);

	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR $T239004[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Insert
	jmp	SHORT $LN2@Reinsert@2
$LN3@Reinsert@2:

; 891  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> >,0> >::_Reinsert
_TEXT	ENDS
PUBLIC	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z$0
__ehfuncinfo$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z
_TEXT	SEGMENT
tv91 = -68						; size = 4
tv148 = -64						; size = 4
tv173 = -60						; size = 4
tv197 = -56						; size = 4
_this$ = -52						; size = 4
$T239642 = -48						; size = 1
$T239615 = -47						; size = 1
$T239595 = -46						; size = 1
$T239582 = -45						; size = 1
$T239578 = -44						; size = 4
$T239571 = -36						; size = 4
$T239564 = -28						; size = 4
$T239557 = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >, COMDAT
; _this$ = ecx

; 441  : 		{	// construct empty list, allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T239642[ebp]
	mov	DWORD PTR $T239557[ebp], eax
	lea	ecx, DWORD PTR $T239615[ebp]
	mov	DWORD PTR $T239564[ebp], ecx
	lea	edx, DWORD PTR $T239595[ebp]
	mov	DWORD PTR $T239571[ebp], edx
	lea	eax, DWORD PTR $T239582[ebp]
	mov	DWORD PTR $T239578[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv197[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv173[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv148[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv91[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 442  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@1@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >
; Function compile flags: /Odtp
;	COMDAT ?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T239749 = -24						; size = 4
$T239699 = -20						; size = 4
$T239680 = -16						; size = 4
__Tmp$239667 = -12					; size = 4
$T239651 = -8						; size = 4
__Pnode$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase, COMDAT
; _this$ = ecx

; 786  : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 787  : 
; 788  :  #if _HAS_ITERATOR_DEBUGGING
; 789  : 		if (_Where._Mycont != this || _Where._Ptr == _Myhead)
; 790  : 			_DEBUG_ERROR("list erase iterator outside range");
; 791  : 		_Nodeptr _Pnode = (_Where++)._Mynode();
; 792  : 		_Orphan_ptr(*this, _Pnode);
; 793  : 
; 794  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 795  : 		_Nodeptr _Pnode = (_Where++)._Mynode();

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Tmp$239667[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Where$[ebp], edx
	mov	eax, DWORD PTR __Tmp$239667[ebp]
	mov	DWORD PTR $T239651[ebp], eax
	mov	ecx, DWORD PTR $T239651[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 796  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 797  : 
; 798  : 		if (_Pnode != _Myhead)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	je	SHORT $LN1@erase@2

; 799  : 			{	// not list head, safe to erase
; 800  : 			_Nextnode(_Prevnode(_Pnode)) = _Nextnode(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T239680[ebp], edx
	mov	eax, DWORD PTR $T239680[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 801  : 			_Prevnode(_Nextnode(_Pnode)) = _Prevnode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 802  : 			this->_Alnod.destroy(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	add	ecx, 8
	mov	DWORD PTR $T239699[ebp], ecx
	mov	ecx, DWORD PTR $T239699[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN24@erase@2
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN24@erase@2:

; 803  : 			this->_Alnod.deallocate(_Pnode, 1);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 804  : 			--_Mysize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN1@erase@2:

; 805  : 			}
; 806  : 		return (_Make_iter(_Where));

	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T239749[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR $T239749[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 807  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase
_TEXT	ENDS
PUBLIC	?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Splice
; Function compile flags: /Odtp
;	COMDAT ?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z
_TEXT	SEGMENT
_this$ = -240						; size = 4
$T239762 = -12						; size = 4
$T239752 = -8						; size = 4
__Last$221926 = -4					; size = 4
__Where$ = 8						; size = 4
__Right$ = 12						; size = 4
__First$ = 16						; size = 4
?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::splice, COMDAT
; _this$ = ecx

; 883  : 		{	// splice _Right [_First, _First + 1) at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	mov	DWORD PTR _this$[ebp], ecx

; 884  : 
; 885  :  #if _HAS_ITERATOR_DEBUGGING
; 886  : 		if (_First == _Right.end())
; 887  : 			_DEBUG_ERROR("list splice iterator outside range");
; 888  : 		else
; 889  : 
; 890  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 891  : 		if (_First != _Right.end())

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T239762[ebp], ecx
	mov	edx, DWORD PTR $T239762[ebp]
	mov	DWORD PTR $T239752[ebp], edx
	mov	eax, DWORD PTR __First$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T239752[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN4@splice@2

; 892  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 893  : 
; 894  : 			{	// element exists, try splice
; 895  : 			const_iterator _Last = _First;

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Last$221926[ebp], ecx

; 896  : 			++_Last;

	mov	edx, DWORD PTR __Last$221926[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Last$221926[ebp], eax

; 897  : 			if (this != &_Right
; 898  : 				|| (_Where != _First && _Where != _Last))

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN1@splice@2
	mov	edx, DWORD PTR __Where$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __First$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN4@splice@2
	mov	eax, DWORD PTR __Where$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last$221926[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN4@splice@2
$LN1@splice@2:

; 899  : 				_Splice(_Where, _Right, _First, _Last, 1);

	push	0
	push	1
	mov	ecx, DWORD PTR __Last$221926[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Splice
$LN4@splice@2:

; 900  : 			}
; 901  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::splice
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T240262 = -28						; size = 4
$T240239 = -24						; size = 4
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Tidy, COMDAT
; _this$ = ecx

; 1212 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1213 : 		clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::clear

; 1214 : 		this->_Alptr.destroy(&_Nextnode(_Myhead));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T240239[ebp], ecx

; 1215 : 		this->_Alptr.destroy(&_Prevnode(_Myhead));
; 1216 : 		this->_Alnod.deallocate(_Myhead, 1);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T240262[ebp], eax
	mov	ecx, DWORD PTR $T240262[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1217 : 		_Myhead = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 1218 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Tidy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T240331 = -32						; size = 4
$T240330 = -28						; size = 4
$T240326 = -24						; size = 4
$T240325 = -20						; size = 4
$T240307 = -16						; size = 4
$T240306 = -12						; size = 4
$T240290 = -8						; size = 4
__Cat$240314 = -2					; size = 1
$T240312 = -1						; size = 1
?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tidy@2

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T240326[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T240325[ebp], ecx
	mov	edx, DWORD PTR $T240326[ebp]
	mov	DWORD PTR $T240307[ebp], edx
	mov	eax, DWORD PTR $T240325[ebp]
	mov	DWORD PTR $T240306[ebp], eax
	mov	cl, BYTE PTR __Cat$240314[ebp]
	mov	BYTE PTR $T240312[ebp], cl
	mov	edx, DWORD PTR $T240306[ebp]
	mov	DWORD PTR $T240290[ebp], edx
	jmp	SHORT $LN12@Tidy@2
$LN11@Tidy@2:
	mov	eax, DWORD PTR $T240290[ebp]
	add	eax, 4
	mov	DWORD PTR $T240290[ebp], eax
$LN12@Tidy@2:
	mov	ecx, DWORD PTR $T240290[ebp]
	cmp	ecx, DWORD PTR $T240307[ebp]
	je	SHORT $LN4@Tidy@2
	jmp	SHORT $LN11@Tidy@2
$LN4@Tidy@2:

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	mov	DWORD PTR $T240331[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T240330[ebp], eax
	mov	ecx, DWORD PTR $T240330[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Tidy@2:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 1135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Tidy
_TEXT	ENDS
PUBLIC	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Assign_n
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xhash
;	COMDAT ?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -120						; size = 4
$T240345 = -8						; size = 4
$T240334 = -4						; size = 4
__Buckets$ = 8						; size = 4
?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 829  : 		{	// initialize hash table with _Buckets buckets, leave list alone

	push	ebp
	mov	ebp, esp
	sub	esp, 120				; 00000078H
	mov	DWORD PTR _this$[ebp], ecx

; 830  : 		_Vec.assign(_Buckets + 1, end());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T240345[ebp], ecx
	mov	edx, DWORD PTR $T240345[ebp]
	mov	DWORD PTR $T240334[ebp], edx
	lea	eax, DWORD PTR $T240334[ebp]
	push	eax
	mov	ecx, DWORD PTR __Buckets$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Assign_n

; 831  : 		_Mask = _Buckets - 1;

	mov	edx, DWORD PTR __Buckets$[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], edx

; 832  : 		_Maxidx = _Buckets;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Buckets$[ebp]
	mov	DWORD PTR [ecx+36], edx

; 833  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Init@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXI@Z ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Init
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ
_TEXT	SEGMENT
_this$ = -200						; size = 4
$T240601 = -32						; size = 4
$T240589 = -28						; size = 4
$T240580 = -24						; size = 4
$T240567 = -20						; size = 8
$T240566 = -12						; size = 4
$T240565 = -8						; size = 4
__First$ = -4						; size = 4
?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ PROC ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Reinsert, COMDAT
; _this$ = ecx

; 887  : 		{	// insert elements at beginning of list into table

	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	mov	DWORD PTR _this$[ebp], ecx

; 888  : 		iterator _First;

	mov	DWORD PTR __First$[ebp], 0
$LN2@Reinsert@3:

; 889  : 		for (; (_First = _List.begin()) != _Get_iter_from_vec(_Vec[0]); )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T240580[ebp], ecx
	mov	edx, DWORD PTR $T240580[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T240589[ebp], eax
	mov	ecx, DWORD PTR $T240589[ebp]
	mov	DWORD PTR $T240565[ebp], ecx
	mov	edx, DWORD PTR $T240565[ebp]
	mov	DWORD PTR __First$[ebp], edx
	xor	eax, eax
	shl	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR $T240601[ebp], eax
	mov	edx, DWORD PTR $T240601[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T240566[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR $T240566[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Reinsert@3

; 890  : 			_Insert(*_First, _First);

	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR $T240567[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAE?AU?$pair@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@_N@std@@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@4@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@4@@Z ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Insert
	jmp	SHORT $LN2@Reinsert@3
$LN3@Reinsert@3:

; 891  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Reinsert@?$_Hash@V?$_Umap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@V?$_Hash_compare@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@tr1@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@stdext@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@$0A@@tr1@std@@@stdext@@IAEXXZ ENDP ; stdext::_Hash<std::tr1::_Umap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *,stdext::_Hash_compare<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::tr1::hash<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::equal_to<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> >,0> >::_Reinsert
_TEXT	ENDS
PUBLIC	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z$0
__ehfuncinfo$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z
_TEXT	SEGMENT
tv91 = -68						; size = 4
tv148 = -64						; size = 4
tv173 = -60						; size = 4
tv197 = -56						; size = 4
_this$ = -52						; size = 4
$T241205 = -48						; size = 1
$T241178 = -47						; size = 1
$T241158 = -46						; size = 1
$T241145 = -45						; size = 1
$T241141 = -44						; size = 4
$T241134 = -36						; size = 4
$T241127 = -28						; size = 4
$T241120 = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >, COMDAT
; _this$ = ecx

; 441  : 		{	// construct empty list, allocator

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T241205[ebp]
	mov	DWORD PTR $T241120[ebp], eax
	lea	ecx, DWORD PTR $T241178[ebp]
	mov	DWORD PTR $T241127[ebp], ecx
	lea	edx, DWORD PTR $T241158[ebp]
	mov	DWORD PTR $T241134[ebp], edx
	lea	eax, DWORD PTR $T241145[ebp]
	mov	DWORD PTR $T241141[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv197[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv173[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv148[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv91[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 442  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@1@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >
; Function compile flags: /Odtp
;	COMDAT ?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T241312 = -24						; size = 4
$T241262 = -20						; size = 4
$T241243 = -16						; size = 4
__Tmp$241225 = -12					; size = 4
$T241214 = -8						; size = 4
__Pnode$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase, COMDAT
; _this$ = ecx

; 786  : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 787  : 
; 788  :  #if _HAS_ITERATOR_DEBUGGING
; 789  : 		if (_Where._Mycont != this || _Where._Ptr == _Myhead)
; 790  : 			_DEBUG_ERROR("list erase iterator outside range");
; 791  : 		_Nodeptr _Pnode = (_Where++)._Mynode();
; 792  : 		_Orphan_ptr(*this, _Pnode);
; 793  : 
; 794  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 795  : 		_Nodeptr _Pnode = (_Where++)._Mynode();

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Tmp$241225[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Where$[ebp], edx
	mov	eax, DWORD PTR __Tmp$241225[ebp]
	mov	DWORD PTR $T241214[ebp], eax
	mov	ecx, DWORD PTR $T241214[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 796  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 797  : 
; 798  : 		if (_Pnode != _Myhead)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	je	SHORT $LN1@erase@3

; 799  : 			{	// not list head, safe to erase
; 800  : 			_Nextnode(_Prevnode(_Pnode)) = _Nextnode(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T241243[ebp], edx
	mov	eax, DWORD PTR $T241243[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 801  : 			_Prevnode(_Nextnode(_Pnode)) = _Prevnode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 802  : 			this->_Alnod.destroy(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	add	ecx, 8
	mov	DWORD PTR $T241262[ebp], ecx
	mov	ecx, DWORD PTR $T241262[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN24@erase@3
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN24@erase@3:

; 803  : 			this->_Alnod.deallocate(_Pnode, 1);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 804  : 			--_Mysize;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN1@erase@3:

; 805  : 			}
; 806  : 		return (_Make_iter(_Where));

	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T241312[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR $T241312[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 807  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase
_TEXT	ENDS
PUBLIC	?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Splice
; Function compile flags: /Odtp
;	COMDAT ?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z
_TEXT	SEGMENT
_this$ = -240						; size = 4
$T241325 = -12						; size = 4
$T241315 = -8						; size = 4
__Last$222027 = -4					; size = 4
__Where$ = 8						; size = 4
__Right$ = 12						; size = 4
__First$ = 16						; size = 4
?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::splice, COMDAT
; _this$ = ecx

; 883  : 		{	// splice _Right [_First, _First + 1) at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	mov	DWORD PTR _this$[ebp], ecx

; 884  : 
; 885  :  #if _HAS_ITERATOR_DEBUGGING
; 886  : 		if (_First == _Right.end())
; 887  : 			_DEBUG_ERROR("list splice iterator outside range");
; 888  : 		else
; 889  : 
; 890  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 891  : 		if (_First != _Right.end())

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T241325[ebp], ecx
	mov	edx, DWORD PTR $T241325[ebp]
	mov	DWORD PTR $T241315[ebp], edx
	mov	eax, DWORD PTR __First$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T241315[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN4@splice@3

; 892  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 893  : 
; 894  : 			{	// element exists, try splice
; 895  : 			const_iterator _Last = _First;

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Last$222027[ebp], ecx

; 896  : 			++_Last;

	mov	edx, DWORD PTR __Last$222027[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Last$222027[ebp], eax

; 897  : 			if (this != &_Right
; 898  : 				|| (_Where != _First && _Where != _Last))

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN1@splice@3
	mov	edx, DWORD PTR __Where$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __First$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN4@splice@3
	mov	eax, DWORD PTR __Where$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last$222027[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN4@splice@3
$LN1@splice@3:

; 899  : 				_Splice(_Where, _Right, _First, _Last, 1);

	push	0
	push	1
	mov	ecx, DWORD PTR __Last$222027[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Splice
$LN4@splice@3:

; 900  : 			}
; 901  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@0@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::splice
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T241806 = -32						; size = 4
$T241805 = -28						; size = 4
$T241801 = -24						; size = 4
$T241800 = -20						; size = 4
$T241782 = -16						; size = 4
$T241781 = -12						; size = 4
$T241765 = -8						; size = 4
__Cat$241788 = -2					; size = 1
$T241785 = -1						; size = 1
?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tidy@3

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T241801[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T241800[ebp], ecx
	mov	edx, DWORD PTR $T241801[ebp]
	mov	DWORD PTR $T241782[ebp], edx
	mov	eax, DWORD PTR $T241800[ebp]
	mov	DWORD PTR $T241781[ebp], eax
	mov	cl, BYTE PTR __Cat$241788[ebp]
	mov	BYTE PTR $T241785[ebp], cl
	mov	edx, DWORD PTR $T241781[ebp]
	mov	DWORD PTR $T241765[ebp], edx
	jmp	SHORT $LN12@Tidy@3
$LN11@Tidy@3:
	mov	eax, DWORD PTR $T241765[ebp]
	add	eax, 4
	mov	DWORD PTR $T241765[ebp], eax
$LN12@Tidy@3:
	mov	ecx, DWORD PTR $T241765[ebp]
	cmp	ecx, DWORD PTR $T241782[ebp]
	je	SHORT $LN4@Tidy@3
	jmp	SHORT $LN11@Tidy@3
$LN4@Tidy@3:

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	mov	DWORD PTR $T241806[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T241805[ebp], eax
	mov	ecx, DWORD PTR $T241805[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Tidy@3:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 1135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Tidy
_TEXT	ENDS
PUBLIC	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Incsize
PUBLIC	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z
_TEXT	SEGMENT
_this$ = -88						; size = 4
$T241848 = -84						; size = 4
__Pnode$ = -8						; size = 4
__Newnode$ = -4						; size = 4
__Where$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Insert, COMDAT
; _this$ = ecx

; 710  : 		{	// insert _Val at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	mov	DWORD PTR _this$[ebp], ecx

; 711  : 
; 712  :  #if _HAS_ITERATOR_DEBUGGING
; 713  : 		if (_Where._Mycont != this)
; 714  : 			_DEBUG_ERROR("list insert iterator outside range");
; 715  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 716  : 
; 717  : 		_Nodeptr _Pnode = _Where._Mynode();

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax

; 718  : 		_Nodeptr _Newnode = _Buynode(_Pnode, _Prevnode(_Pnode), _Val);

	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode
	mov	DWORD PTR __Newnode$[ebp], eax

; 719  : 		_Incsize(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Incsize

; 720  : 		_Prevnode(_Pnode) = _Newnode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [edx+4], eax

; 721  : 		_Nextnode(_Prevnode(_Newnode)) = _Newnode;

	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T241848[ebp], edx
	mov	eax, DWORD PTR $T241848[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 722  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Insert
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T241874 = -20						; size = 4
$T241858 = -16						; size = 4
$T241854 = -12						; size = 4
__Pnext$ = -8						; size = 4
__Pnode$ = -4						; size = 4
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::clear, COMDAT
; _this$ = ecx

; 825  : 		{	// erase all

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 826  : 
; 827  :  #if _HAS_ITERATOR_DEBUGGING
; 828  : 		this->_Orphan_ptr(*this, 0);
; 829  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 830  : 
; 831  : 		_Nodeptr _Pnext;
; 832  : 		_Nodeptr _Pnode = _Nextnode(_Myhead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T241854[ebp], ecx
	mov	edx, DWORD PTR $T241854[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnode$[ebp], eax

; 833  : 		_Nextnode(_Myhead) = _Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T241858[ebp], edx
	mov	eax, DWORD PTR $T241858[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 834  : 		_Prevnode(_Myhead) = _Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 835  : 		_Mysize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 836  : 
; 837  : 		for (; _Pnode != _Myhead; _Pnode = _Pnext)

	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN3@clear:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN4@clear

; 838  : 			{	// delete an element
; 839  : 			_Pnext = _Nextnode(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnext$[ebp], eax

; 840  : 			this->_Alnod.destroy(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	add	ecx, 8
	mov	DWORD PTR $T241874[ebp], ecx
	mov	ecx, DWORD PTR $T241874[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN14@clear
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN14@clear:

; 841  : 			this->_Alnod.deallocate(_Pnode, 1);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 842  : 			}

	jmp	SHORT $LN2@clear
$LN4@clear:

; 843  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::clear
_TEXT	ENDS
PUBLIC	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase
PUBLIC	??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0> >
; Function compile flags: /Odtp
;	COMDAT ?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z
_TEXT	SEGMENT
_this$ = -228						; size = 4
$T242038 = -156						; size = 4
$T242037 = -152						; size = 4
$T242036 = -148						; size = 4
$T242032 = -142						; size = 1
$T242018 = -140						; size = 4
$T242011 = -136						; size = 4
$T242004 = -132						; size = 4
$T241997 = -128						; size = 4
$T241990 = -124						; size = 4
$T241983 = -120						; size = 4
$T241979 = -116						; size = 4
$T241972 = -112						; size = 4
$T241968 = -108						; size = 4
$T241964 = -104						; size = 4
$T241957 = -100						; size = 4
$T241953 = -96						; size = 4
$T241949 = -92						; size = 4
$T241942 = -88						; size = 4
$T241938 = -84						; size = 4
$T241911 = -8						; size = 4
__Pnode$222102 = -4					; size = 4
__Where$ = 8						; size = 4
__Right$ = 12						; size = 4
__First$ = 16						; size = 4
__Last$ = 20						; size = 4
__Count$ = 24						; size = 4
__Keep$ = 28						; size = 1
?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Splice, COMDAT
; _this$ = ecx

; 1126 : 		{	// splice _Right [_First, _Last) before _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	mov	DWORD PTR _this$[ebp], ecx

; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 		if (_Where._Mycont != this)
; 1129 : 			_DEBUG_ERROR("list splice iterator outside range");
; 1130 : 		if (this->_Alval == _Right._Alval)
; 1131 : 			{	// same allocator, just relink
; 1132 : 			if (!_Keep && this != &_Right)
; 1133 : 				for (const_iterator _Next = _First; _Next != _Last; )
; 1134 : 					_Orphan_ptr(_Right, (_Next++)._Ptr);
; 1135 : 
; 1136 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1137 :         _Keep;                  // unused in this branch
; 1138 : 		if (this->_Alval == _Right._Alval)

	mov	eax, 1
	test	eax, eax
	je	$LN3@Splice

; 1139 : 			{	// same allocator, just relink
; 1140 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1141 : 
; 1142 : 			if (this != &_Right)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@Splice

; 1143 : 				{	// splicing from another list, adjust counts
; 1144 : 				_Incsize(_Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Incsize

; 1145 : 				_Right._Mysize -= _Count;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN2@Splice:

; 1146 : 				}
; 1147 : 			_Nextnode(_Prevnode(_First._Mynode())) = _Last._Mynode();

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T241938[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T241942[ebp], ecx
	mov	edx, DWORD PTR $T241942[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T241949[ebp], eax
	mov	ecx, DWORD PTR $T241949[ebp]
	mov	edx, DWORD PTR $T241938[ebp]
	mov	DWORD PTR [ecx], edx

; 1148 : 			_Nextnode(_Prevnode(_Last._Mynode())) = _Where._Mynode();

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T241953[ebp], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T241957[ebp], ecx
	mov	edx, DWORD PTR $T241957[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T241964[ebp], eax
	mov	ecx, DWORD PTR $T241964[ebp]
	mov	edx, DWORD PTR $T241953[ebp]
	mov	DWORD PTR [ecx], edx

; 1149 : 			_Nextnode(_Prevnode(_Where._Mynode())) = _First._Mynode();

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T241968[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T241972[ebp], ecx
	mov	edx, DWORD PTR $T241972[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T241979[ebp], eax
	mov	ecx, DWORD PTR $T241979[ebp]
	mov	edx, DWORD PTR $T241968[ebp]
	mov	DWORD PTR [ecx], edx

; 1150 : 			_Nodeptr _Pnode = _Prevnode(_Where._Mynode());

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T241983[ebp], eax
	mov	ecx, DWORD PTR $T241983[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Pnode$222102[ebp], edx

; 1151 : 			_Prevnode(_Where._Mynode()) = _Prevnode(_Last._Mynode());

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T241990[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T241997[ebp], ecx
	mov	edx, DWORD PTR $T241997[ebp]
	mov	eax, DWORD PTR $T241990[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 1152 : 			_Prevnode(_Last._Mynode()) = _Prevnode(_First._Mynode());

	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T242004[ebp], edx
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T242011[ebp], eax
	mov	ecx, DWORD PTR $T242011[ebp]
	mov	edx, DWORD PTR $T242004[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 1153 : 			_Prevnode(_First._Mynode()) = _Pnode;

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T242018[ebp], ecx
	mov	edx, DWORD PTR $T242018[ebp]
	mov	eax, DWORD PTR __Pnode$222102[ebp]
	mov	DWORD PTR [edx+4], eax

; 1154 : 			}
; 1155 : 		else

	jmp	SHORT $LN4@Splice
$LN3@Splice:

; 1156 : 			{	// different allocator, copy nodes then erase source
; 1157 : 			insert(_Where, _First, _Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T242038[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T242037[ebp], edx
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T242036[ebp], eax
	movzx	ecx, BYTE PTR $T242032[ebp]
	push	ecx
	mov	edx, DWORD PTR $T242038[ebp]
	push	edx
	mov	eax, DWORD PTR $T242037[ebp]
	push	eax
	mov	ecx, DWORD PTR $T242036[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0> >

; 1158 : 			_Right.erase(_First, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T241911[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase
$LN4@Splice:

; 1159 : 			}
; 1160 :         }

	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Splice
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>::allocate
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ$0
__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ$2
__ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ
_TEXT	SEGMENT
tv157 = -84						; size = 4
tv152 = -80						; size = 4
_this$ = -76						; size = 4
$T242375 = -72						; size = 4
$T242360 = -68						; size = 4
$T242355 = -64						; size = 4
__Vptr$242353 = -60					; size = 4
$T242330 = -56						; size = 4
$T242325 = -52						; size = 4
__Vptr$242323 = -48					; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode, COMDAT
; _this$ = ecx

; 1171 : 		{	// allocate a head node and set links

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1172 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 1173 : 		int _Linkcnt = 0;

	mov	DWORD PTR __Linkcnt$[ebp], 0

; 1174 : 
; 1175 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1176 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR $T242330[ebp], eax
	mov	ecx, DWORD PTR $T242330[ebp]
	mov	DWORD PTR __Vptr$242323[ebp], ecx
	mov	edx, DWORD PTR __Vptr$242323[ebp]
	mov	DWORD PTR $T242325[ebp], edx
	cmp	DWORD PTR $T242325[ebp], 0
	je	SHORT $LN22@Buynode
	mov	eax, DWORD PTR $T242325[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T242325[ebp]
	mov	DWORD PTR tv152[ebp], edx
	jmp	SHORT $LN18@Buynode
$LN22@Buynode:
	mov	DWORD PTR tv152[ebp], 0
$LN18@Buynode:

; 1177 : 		++_Linkcnt;

	mov	eax, DWORD PTR __Linkcnt$[ebp]
	add	eax, 1
	mov	DWORD PTR __Linkcnt$[ebp], eax

; 1178 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	add	ecx, 4
	mov	DWORD PTR $T242360[ebp], ecx
	mov	edx, DWORD PTR $T242360[ebp]
	mov	DWORD PTR __Vptr$242353[ebp], edx
	mov	eax, DWORD PTR __Vptr$242353[ebp]
	mov	DWORD PTR $T242355[ebp], eax
	cmp	DWORD PTR $T242355[ebp], 0
	je	SHORT $LN32@Buynode
	mov	ecx, DWORD PTR $T242355[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T242355[ebp]
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $LN28@Buynode
$LN32@Buynode:
	mov	DWORD PTR tv157[ebp], 0
$LN28@Buynode:
	jmp	SHORT $LN5@Buynode
__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ$0:

; 1179 : 		_CATCH_ALL
; 1180 : 		if (0 < _Linkcnt)
; 1181 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1182 : 		this->_Alnod.deallocate(_Pnode, 1);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR $T242375[ebp], ecx
	mov	edx, DWORD PTR $T242375[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1183 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1184 : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ$1
	ret	0
$LN5@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ$1:

; 1185 : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode:

; 1186 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode
PUBLIC	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
PUBLIC	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Xlen
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAE_NI@Z
_TEXT	SEGMENT
tv94 = -96						; size = 4
_this$ = -92						; size = 4
__Count$242402 = -4					; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAE_NI@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	DWORD PTR _this$[ebp], ecx

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 1104 : 		if (_Capacity == 0)

	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy

; 1105 : 			return (false);

	xor	al, al
	jmp	SHORT $LN5@Buy
	jmp	SHORT $LN3@Buy
$LN4@Buy:

; 1106 : 		else if (max_size() < _Capacity)

	mov	DWORD PTR __Count$242402[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$242402[ebp], 0
	jbe	SHORT $LN11@Buy
	mov	eax, DWORD PTR __Count$242402[ebp]
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN7@Buy
$LN11@Buy:
	mov	DWORD PTR tv94[ebp], 1
$LN7@Buy:
	mov	ecx, DWORD PTR tv94[ebp]
	cmp	ecx, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN23@Buy

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Xlen

; 1108 : 		else

	jmp	SHORT $LN3@Buy

; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

$LN23@Buy:
	push	0
	mov	edx, DWORD PTR __Capacity$[ebp]
	push	edx
	call	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx

; 1112 : 			_Myend = _Myfirst + _Capacity;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Capacity$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
$LN3@Buy:

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
$LN5@Buy:

; 1115 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAE_NI@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Buy
_TEXT	ENDS
PUBLIC	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Incsize
PUBLIC	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z
_TEXT	SEGMENT
_this$ = -88						; size = 4
$T242468 = -84						; size = 4
__Pnode$ = -8						; size = 4
__Newnode$ = -4						; size = 4
__Where$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Insert, COMDAT
; _this$ = ecx

; 710  : 		{	// insert _Val at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	mov	DWORD PTR _this$[ebp], ecx

; 711  : 
; 712  :  #if _HAS_ITERATOR_DEBUGGING
; 713  : 		if (_Where._Mycont != this)
; 714  : 			_DEBUG_ERROR("list insert iterator outside range");
; 715  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 716  : 
; 717  : 		_Nodeptr _Pnode = _Where._Mynode();

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax

; 718  : 		_Nodeptr _Newnode = _Buynode(_Pnode, _Prevnode(_Pnode), _Val);

	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode
	mov	DWORD PTR __Newnode$[ebp], eax

; 719  : 		_Incsize(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Incsize

; 720  : 		_Prevnode(_Pnode) = _Newnode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [edx+4], eax

; 721  : 		_Nextnode(_Prevnode(_Newnode)) = _Newnode;

	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T242468[ebp], edx
	mov	eax, DWORD PTR $T242468[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 722  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Insert
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T242494 = -20						; size = 4
$T242478 = -16						; size = 4
$T242474 = -12						; size = 4
__Pnext$ = -8						; size = 4
__Pnode$ = -4						; size = 4
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::clear, COMDAT
; _this$ = ecx

; 825  : 		{	// erase all

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 826  : 
; 827  :  #if _HAS_ITERATOR_DEBUGGING
; 828  : 		this->_Orphan_ptr(*this, 0);
; 829  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 830  : 
; 831  : 		_Nodeptr _Pnext;
; 832  : 		_Nodeptr _Pnode = _Nextnode(_Myhead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T242474[ebp], ecx
	mov	edx, DWORD PTR $T242474[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnode$[ebp], eax

; 833  : 		_Nextnode(_Myhead) = _Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T242478[ebp], edx
	mov	eax, DWORD PTR $T242478[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 834  : 		_Prevnode(_Myhead) = _Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 835  : 		_Mysize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 836  : 
; 837  : 		for (; _Pnode != _Myhead; _Pnode = _Pnext)

	jmp	SHORT $LN3@clear@2
$LN2@clear@2:
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN3@clear@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN4@clear@2

; 838  : 			{	// delete an element
; 839  : 			_Pnext = _Nextnode(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnext$[ebp], eax

; 840  : 			this->_Alnod.destroy(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	add	ecx, 8
	mov	DWORD PTR $T242494[ebp], ecx
	mov	ecx, DWORD PTR $T242494[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN14@clear@2
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN14@clear@2:

; 841  : 			this->_Alnod.deallocate(_Pnode, 1);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 842  : 			}

	jmp	SHORT $LN2@clear@2
$LN4@clear@2:

; 843  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::clear
_TEXT	ENDS
PUBLIC	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase
PUBLIC	??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0> >
; Function compile flags: /Odtp
;	COMDAT ?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z
_TEXT	SEGMENT
_this$ = -228						; size = 4
$T242658 = -156						; size = 4
$T242657 = -152						; size = 4
$T242656 = -148						; size = 4
$T242652 = -142						; size = 1
$T242638 = -140						; size = 4
$T242631 = -136						; size = 4
$T242624 = -132						; size = 4
$T242617 = -128						; size = 4
$T242610 = -124						; size = 4
$T242603 = -120						; size = 4
$T242599 = -116						; size = 4
$T242592 = -112						; size = 4
$T242588 = -108						; size = 4
$T242584 = -104						; size = 4
$T242577 = -100						; size = 4
$T242573 = -96						; size = 4
$T242569 = -92						; size = 4
$T242562 = -88						; size = 4
$T242558 = -84						; size = 4
$T242531 = -8						; size = 4
__Pnode$222211 = -4					; size = 4
__Where$ = 8						; size = 4
__Right$ = 12						; size = 4
__First$ = 16						; size = 4
__Last$ = 20						; size = 4
__Count$ = 24						; size = 4
__Keep$ = 28						; size = 1
?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Splice, COMDAT
; _this$ = ecx

; 1126 : 		{	// splice _Right [_First, _Last) before _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	mov	DWORD PTR _this$[ebp], ecx

; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 		if (_Where._Mycont != this)
; 1129 : 			_DEBUG_ERROR("list splice iterator outside range");
; 1130 : 		if (this->_Alval == _Right._Alval)
; 1131 : 			{	// same allocator, just relink
; 1132 : 			if (!_Keep && this != &_Right)
; 1133 : 				for (const_iterator _Next = _First; _Next != _Last; )
; 1134 : 					_Orphan_ptr(_Right, (_Next++)._Ptr);
; 1135 : 
; 1136 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1137 :         _Keep;                  // unused in this branch
; 1138 : 		if (this->_Alval == _Right._Alval)

	mov	eax, 1
	test	eax, eax
	je	$LN3@Splice@2

; 1139 : 			{	// same allocator, just relink
; 1140 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1141 : 
; 1142 : 			if (this != &_Right)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@Splice@2

; 1143 : 				{	// splicing from another list, adjust counts
; 1144 : 				_Incsize(_Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Incsize

; 1145 : 				_Right._Mysize -= _Count;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN2@Splice@2:

; 1146 : 				}
; 1147 : 			_Nextnode(_Prevnode(_First._Mynode())) = _Last._Mynode();

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T242558[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T242562[ebp], ecx
	mov	edx, DWORD PTR $T242562[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T242569[ebp], eax
	mov	ecx, DWORD PTR $T242569[ebp]
	mov	edx, DWORD PTR $T242558[ebp]
	mov	DWORD PTR [ecx], edx

; 1148 : 			_Nextnode(_Prevnode(_Last._Mynode())) = _Where._Mynode();

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T242573[ebp], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T242577[ebp], ecx
	mov	edx, DWORD PTR $T242577[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T242584[ebp], eax
	mov	ecx, DWORD PTR $T242584[ebp]
	mov	edx, DWORD PTR $T242573[ebp]
	mov	DWORD PTR [ecx], edx

; 1149 : 			_Nextnode(_Prevnode(_Where._Mynode())) = _First._Mynode();

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T242588[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T242592[ebp], ecx
	mov	edx, DWORD PTR $T242592[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T242599[ebp], eax
	mov	ecx, DWORD PTR $T242599[ebp]
	mov	edx, DWORD PTR $T242588[ebp]
	mov	DWORD PTR [ecx], edx

; 1150 : 			_Nodeptr _Pnode = _Prevnode(_Where._Mynode());

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T242603[ebp], eax
	mov	ecx, DWORD PTR $T242603[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Pnode$222211[ebp], edx

; 1151 : 			_Prevnode(_Where._Mynode()) = _Prevnode(_Last._Mynode());

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T242610[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T242617[ebp], ecx
	mov	edx, DWORD PTR $T242617[ebp]
	mov	eax, DWORD PTR $T242610[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 1152 : 			_Prevnode(_Last._Mynode()) = _Prevnode(_First._Mynode());

	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T242624[ebp], edx
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T242631[ebp], eax
	mov	ecx, DWORD PTR $T242631[ebp]
	mov	edx, DWORD PTR $T242624[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 1153 : 			_Prevnode(_First._Mynode()) = _Pnode;

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T242638[ebp], ecx
	mov	edx, DWORD PTR $T242638[ebp]
	mov	eax, DWORD PTR __Pnode$222211[ebp]
	mov	DWORD PTR [edx+4], eax

; 1154 : 			}
; 1155 : 		else

	jmp	SHORT $LN4@Splice@2
$LN3@Splice@2:

; 1156 : 			{	// different allocator, copy nodes then erase source
; 1157 : 			insert(_Where, _First, _Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T242658[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T242657[ebp], edx
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T242656[ebp], eax
	movzx	ecx, BYTE PTR $T242652[ebp]
	push	ecx
	mov	edx, DWORD PTR $T242658[ebp]
	push	edx
	mov	eax, DWORD PTR $T242657[ebp]
	push	eax
	mov	ecx, DWORD PTR $T242656[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0> >

; 1158 : 			_Right.erase(_First, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T242531[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase
$LN4@Splice@2:

; 1159 : 			}
; 1160 :         }

	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Splice
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>::allocate
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ$0
__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ$2
__ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ
_TEXT	SEGMENT
tv157 = -84						; size = 4
tv152 = -80						; size = 4
_this$ = -76						; size = 4
$T242995 = -72						; size = 4
$T242980 = -68						; size = 4
$T242972 = -64						; size = 4
__Vptr$242978 = -60					; size = 4
$T242950 = -56						; size = 4
$T242942 = -52						; size = 4
__Vptr$242948 = -48					; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode, COMDAT
; _this$ = ecx

; 1171 : 		{	// allocate a head node and set links

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1172 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 1173 : 		int _Linkcnt = 0;

	mov	DWORD PTR __Linkcnt$[ebp], 0

; 1174 : 
; 1175 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1176 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR $T242950[ebp], eax
	mov	ecx, DWORD PTR $T242950[ebp]
	mov	DWORD PTR __Vptr$242948[ebp], ecx
	mov	edx, DWORD PTR __Vptr$242948[ebp]
	mov	DWORD PTR $T242942[ebp], edx
	cmp	DWORD PTR $T242942[ebp], 0
	je	SHORT $LN22@Buynode@2
	mov	eax, DWORD PTR $T242942[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T242942[ebp]
	mov	DWORD PTR tv152[ebp], edx
	jmp	SHORT $LN18@Buynode@2
$LN22@Buynode@2:
	mov	DWORD PTR tv152[ebp], 0
$LN18@Buynode@2:

; 1177 : 		++_Linkcnt;

	mov	eax, DWORD PTR __Linkcnt$[ebp]
	add	eax, 1
	mov	DWORD PTR __Linkcnt$[ebp], eax

; 1178 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	add	ecx, 4
	mov	DWORD PTR $T242980[ebp], ecx
	mov	edx, DWORD PTR $T242980[ebp]
	mov	DWORD PTR __Vptr$242978[ebp], edx
	mov	eax, DWORD PTR __Vptr$242978[ebp]
	mov	DWORD PTR $T242972[ebp], eax
	cmp	DWORD PTR $T242972[ebp], 0
	je	SHORT $LN32@Buynode@2
	mov	ecx, DWORD PTR $T242972[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T242972[ebp]
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $LN28@Buynode@2
$LN32@Buynode@2:
	mov	DWORD PTR tv157[ebp], 0
$LN28@Buynode@2:
	jmp	SHORT $LN5@Buynode@2
__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ$0:

; 1179 : 		_CATCH_ALL
; 1180 : 		if (0 < _Linkcnt)
; 1181 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1182 : 		this->_Alnod.deallocate(_Pnode, 1);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR $T242995[ebp], ecx
	mov	edx, DWORD PTR $T242995[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1183 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1184 : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ$1
	ret	0
$LN5@Buynode@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ$1:

; 1185 : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode@2:

; 1186 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode
PUBLIC	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
PUBLIC	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Xlen
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAE_NI@Z
_TEXT	SEGMENT
tv94 = -96						; size = 4
_this$ = -92						; size = 4
__Count$243018 = -4					; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAE_NI@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	DWORD PTR _this$[ebp], ecx

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 1104 : 		if (_Capacity == 0)

	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy@2

; 1105 : 			return (false);

	xor	al, al
	jmp	SHORT $LN5@Buy@2
	jmp	SHORT $LN3@Buy@2
$LN4@Buy@2:

; 1106 : 		else if (max_size() < _Capacity)

	mov	DWORD PTR __Count$243018[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$243018[ebp], 0
	jbe	SHORT $LN11@Buy@2
	mov	eax, DWORD PTR __Count$243018[ebp]
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN7@Buy@2
$LN11@Buy@2:
	mov	DWORD PTR tv94[ebp], 1
$LN7@Buy@2:
	mov	ecx, DWORD PTR tv94[ebp]
	cmp	ecx, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN23@Buy@2

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Xlen

; 1108 : 		else

	jmp	SHORT $LN3@Buy@2

; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

$LN23@Buy@2:
	push	0
	mov	edx, DWORD PTR __Capacity$[ebp]
	push	edx
	call	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx

; 1112 : 			_Myend = _Myfirst + _Capacity;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Capacity$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
$LN3@Buy@2:

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
$LN5@Buy@2:

; 1115 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAE_NI@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Buy
_TEXT	ENDS
PUBLIC	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Incsize
PUBLIC	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z
_TEXT	SEGMENT
_this$ = -88						; size = 4
$T243088 = -84						; size = 4
__Pnode$ = -8						; size = 4
__Newnode$ = -4						; size = 4
__Where$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Insert, COMDAT
; _this$ = ecx

; 710  : 		{	// insert _Val at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	mov	DWORD PTR _this$[ebp], ecx

; 711  : 
; 712  :  #if _HAS_ITERATOR_DEBUGGING
; 713  : 		if (_Where._Mycont != this)
; 714  : 			_DEBUG_ERROR("list insert iterator outside range");
; 715  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 716  : 
; 717  : 		_Nodeptr _Pnode = _Where._Mynode();

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax

; 718  : 		_Nodeptr _Newnode = _Buynode(_Pnode, _Prevnode(_Pnode), _Val);

	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode
	mov	DWORD PTR __Newnode$[ebp], eax

; 719  : 		_Incsize(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Incsize

; 720  : 		_Prevnode(_Pnode) = _Newnode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [edx+4], eax

; 721  : 		_Nextnode(_Prevnode(_Newnode)) = _Newnode;

	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T243088[ebp], edx
	mov	eax, DWORD PTR $T243088[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 722  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Insert
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T243114 = -20						; size = 4
$T243098 = -16						; size = 4
$T243094 = -12						; size = 4
__Pnext$ = -8						; size = 4
__Pnode$ = -4						; size = 4
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::clear, COMDAT
; _this$ = ecx

; 825  : 		{	// erase all

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 826  : 
; 827  :  #if _HAS_ITERATOR_DEBUGGING
; 828  : 		this->_Orphan_ptr(*this, 0);
; 829  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 830  : 
; 831  : 		_Nodeptr _Pnext;
; 832  : 		_Nodeptr _Pnode = _Nextnode(_Myhead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T243094[ebp], ecx
	mov	edx, DWORD PTR $T243094[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnode$[ebp], eax

; 833  : 		_Nextnode(_Myhead) = _Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T243098[ebp], edx
	mov	eax, DWORD PTR $T243098[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 834  : 		_Prevnode(_Myhead) = _Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 835  : 		_Mysize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 836  : 
; 837  : 		for (; _Pnode != _Myhead; _Pnode = _Pnext)

	jmp	SHORT $LN3@clear@3
$LN2@clear@3:
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN3@clear@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN4@clear@3

; 838  : 			{	// delete an element
; 839  : 			_Pnext = _Nextnode(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnext$[ebp], eax

; 840  : 			this->_Alnod.destroy(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	add	ecx, 8
	mov	DWORD PTR $T243114[ebp], ecx
	mov	ecx, DWORD PTR $T243114[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN14@clear@3
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN14@clear@3:

; 841  : 			this->_Alnod.deallocate(_Pnode, 1);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 842  : 			}

	jmp	SHORT $LN2@clear@3
$LN4@clear@3:

; 843  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::clear
_TEXT	ENDS
PUBLIC	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase
PUBLIC	??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0> >
; Function compile flags: /Odtp
;	COMDAT ?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z
_TEXT	SEGMENT
_this$ = -228						; size = 4
$T243278 = -156						; size = 4
$T243277 = -152						; size = 4
$T243276 = -148						; size = 4
$T243272 = -142						; size = 1
$T243258 = -140						; size = 4
$T243251 = -136						; size = 4
$T243244 = -132						; size = 4
$T243237 = -128						; size = 4
$T243230 = -124						; size = 4
$T243223 = -120						; size = 4
$T243219 = -116						; size = 4
$T243212 = -112						; size = 4
$T243208 = -108						; size = 4
$T243204 = -104						; size = 4
$T243197 = -100						; size = 4
$T243193 = -96						; size = 4
$T243189 = -92						; size = 4
$T243182 = -88						; size = 4
$T243178 = -84						; size = 4
$T243151 = -8						; size = 4
__Pnode$222320 = -4					; size = 4
__Where$ = 8						; size = 4
__Right$ = 12						; size = 4
__First$ = 16						; size = 4
__Last$ = 20						; size = 4
__Count$ = 24						; size = 4
__Keep$ = 28						; size = 1
?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Splice, COMDAT
; _this$ = ecx

; 1126 : 		{	// splice _Right [_First, _Last) before _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	mov	DWORD PTR _this$[ebp], ecx

; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 		if (_Where._Mycont != this)
; 1129 : 			_DEBUG_ERROR("list splice iterator outside range");
; 1130 : 		if (this->_Alval == _Right._Alval)
; 1131 : 			{	// same allocator, just relink
; 1132 : 			if (!_Keep && this != &_Right)
; 1133 : 				for (const_iterator _Next = _First; _Next != _Last; )
; 1134 : 					_Orphan_ptr(_Right, (_Next++)._Ptr);
; 1135 : 
; 1136 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1137 :         _Keep;                  // unused in this branch
; 1138 : 		if (this->_Alval == _Right._Alval)

	mov	eax, 1
	test	eax, eax
	je	$LN3@Splice@3

; 1139 : 			{	// same allocator, just relink
; 1140 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1141 : 
; 1142 : 			if (this != &_Right)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@Splice@3

; 1143 : 				{	// splicing from another list, adjust counts
; 1144 : 				_Incsize(_Count);

	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Incsize

; 1145 : 				_Right._Mysize -= _Count;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN2@Splice@3:

; 1146 : 				}
; 1147 : 			_Nextnode(_Prevnode(_First._Mynode())) = _Last._Mynode();

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T243178[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T243182[ebp], ecx
	mov	edx, DWORD PTR $T243182[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T243189[ebp], eax
	mov	ecx, DWORD PTR $T243189[ebp]
	mov	edx, DWORD PTR $T243178[ebp]
	mov	DWORD PTR [ecx], edx

; 1148 : 			_Nextnode(_Prevnode(_Last._Mynode())) = _Where._Mynode();

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T243193[ebp], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T243197[ebp], ecx
	mov	edx, DWORD PTR $T243197[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T243204[ebp], eax
	mov	ecx, DWORD PTR $T243204[ebp]
	mov	edx, DWORD PTR $T243193[ebp]
	mov	DWORD PTR [ecx], edx

; 1149 : 			_Nextnode(_Prevnode(_Where._Mynode())) = _First._Mynode();

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T243208[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T243212[ebp], ecx
	mov	edx, DWORD PTR $T243212[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T243219[ebp], eax
	mov	ecx, DWORD PTR $T243219[ebp]
	mov	edx, DWORD PTR $T243208[ebp]
	mov	DWORD PTR [ecx], edx

; 1150 : 			_Nodeptr _Pnode = _Prevnode(_Where._Mynode());

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T243223[ebp], eax
	mov	ecx, DWORD PTR $T243223[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Pnode$222320[ebp], edx

; 1151 : 			_Prevnode(_Where._Mynode()) = _Prevnode(_Last._Mynode());

	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T243230[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T243237[ebp], ecx
	mov	edx, DWORD PTR $T243237[ebp]
	mov	eax, DWORD PTR $T243230[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 1152 : 			_Prevnode(_Last._Mynode()) = _Prevnode(_First._Mynode());

	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T243244[ebp], edx
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T243251[ebp], eax
	mov	ecx, DWORD PTR $T243251[ebp]
	mov	edx, DWORD PTR $T243244[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 1153 : 			_Prevnode(_First._Mynode()) = _Pnode;

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T243258[ebp], ecx
	mov	edx, DWORD PTR $T243258[ebp]
	mov	eax, DWORD PTR __Pnode$222320[ebp]
	mov	DWORD PTR [edx+4], eax

; 1154 : 			}
; 1155 : 		else

	jmp	SHORT $LN4@Splice@3
$LN3@Splice@3:

; 1156 : 			{	// different allocator, copy nodes then erase source
; 1157 : 			insert(_Where, _First, _Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T243278[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T243277[ebp], edx
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T243276[ebp], eax
	movzx	ecx, BYTE PTR $T243272[ebp]
	push	ecx
	mov	edx, DWORD PTR $T243278[ebp]
	push	edx
	mov	eax, DWORD PTR $T243277[ebp]
	push	eax
	mov	ecx, DWORD PTR $T243276[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0> >

; 1158 : 			_Right.erase(_First, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T243151[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase
$LN4@Splice@3:

; 1159 : 			}
; 1160 :         }

	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?_Splice@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@AAV12@00I_N@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Splice
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>::allocate
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ$0
__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ$2
__ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ
_TEXT	SEGMENT
tv157 = -84						; size = 4
tv152 = -80						; size = 4
_this$ = -76						; size = 4
$T243615 = -72						; size = 4
$T243600 = -68						; size = 4
$T243595 = -64						; size = 4
__Vptr$243593 = -60					; size = 4
$T243570 = -56						; size = 4
$T243565 = -52						; size = 4
__Vptr$243563 = -48					; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode, COMDAT
; _this$ = ecx

; 1171 : 		{	// allocate a head node and set links

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1172 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 1173 : 		int _Linkcnt = 0;

	mov	DWORD PTR __Linkcnt$[ebp], 0

; 1174 : 
; 1175 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1176 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR $T243570[ebp], eax
	mov	ecx, DWORD PTR $T243570[ebp]
	mov	DWORD PTR __Vptr$243563[ebp], ecx
	mov	edx, DWORD PTR __Vptr$243563[ebp]
	mov	DWORD PTR $T243565[ebp], edx
	cmp	DWORD PTR $T243565[ebp], 0
	je	SHORT $LN22@Buynode@3
	mov	eax, DWORD PTR $T243565[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T243565[ebp]
	mov	DWORD PTR tv152[ebp], edx
	jmp	SHORT $LN18@Buynode@3
$LN22@Buynode@3:
	mov	DWORD PTR tv152[ebp], 0
$LN18@Buynode@3:

; 1177 : 		++_Linkcnt;

	mov	eax, DWORD PTR __Linkcnt$[ebp]
	add	eax, 1
	mov	DWORD PTR __Linkcnt$[ebp], eax

; 1178 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	add	ecx, 4
	mov	DWORD PTR $T243600[ebp], ecx
	mov	edx, DWORD PTR $T243600[ebp]
	mov	DWORD PTR __Vptr$243593[ebp], edx
	mov	eax, DWORD PTR __Vptr$243593[ebp]
	mov	DWORD PTR $T243595[ebp], eax
	cmp	DWORD PTR $T243595[ebp], 0
	je	SHORT $LN32@Buynode@3
	mov	ecx, DWORD PTR $T243595[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T243595[ebp]
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $LN28@Buynode@3
$LN32@Buynode@3:
	mov	DWORD PTR tv157[ebp], 0
$LN28@Buynode@3:
	jmp	SHORT $LN5@Buynode@3
__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ$0:

; 1179 : 		_CATCH_ALL
; 1180 : 		if (0 < _Linkcnt)
; 1181 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1182 : 		this->_Alnod.deallocate(_Pnode, 1);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR $T243615[ebp], ecx
	mov	edx, DWORD PTR $T243615[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1183 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1184 : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ$1
	ret	0
$LN5@Buynode@3:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ$1:

; 1185 : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode@3:

; 1186 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@XZ ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode
PUBLIC	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
PUBLIC	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Xlen
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAE_NI@Z
_TEXT	SEGMENT
tv94 = -96						; size = 4
_this$ = -92						; size = 4
__Count$243639 = -4					; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAE_NI@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	DWORD PTR _this$[ebp], ecx

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 1104 : 		if (_Capacity == 0)

	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy@3

; 1105 : 			return (false);

	xor	al, al
	jmp	SHORT $LN5@Buy@3
	jmp	SHORT $LN3@Buy@3
$LN4@Buy@3:

; 1106 : 		else if (max_size() < _Capacity)

	mov	DWORD PTR __Count$243639[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$243639[ebp], 0
	jbe	SHORT $LN11@Buy@3
	mov	eax, DWORD PTR __Count$243639[ebp]
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN7@Buy@3
$LN11@Buy@3:
	mov	DWORD PTR tv94[ebp], 1
$LN7@Buy@3:
	mov	ecx, DWORD PTR tv94[ebp]
	cmp	ecx, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN23@Buy@3

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Xlen

; 1108 : 		else

	jmp	SHORT $LN3@Buy@3

; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

$LN23@Buy@3:
	push	0
	mov	edx, DWORD PTR __Capacity$[ebp]
	push	edx
	call	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx

; 1112 : 			_Myend = _Myfirst + _Capacity;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Capacity$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
$LN3@Buy@3:

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
$LN5@Buy@3:

; 1115 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAE_NI@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Buy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z
_TEXT	SEGMENT
_this$ = -76						; size = 4
$T243913 = -72						; size = 4
$T243784 = -48						; size = 4
$T243706 = -24						; size = 4
$T243685 = -20						; size = 4
$T243676 = -16						; size = 4
$T243671 = -12						; size = 4
$T243670 = -8						; size = 4
$T243669 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase, COMDAT
; _this$ = ecx

; 810  : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	DWORD PTR _this$[ebp], ecx

; 811  : 		if (_First == begin() && _Last == end())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T243676[ebp], ecx
	mov	edx, DWORD PTR $T243676[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T243685[ebp], eax
	mov	ecx, DWORD PTR $T243685[ebp]
	mov	DWORD PTR $T243669[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T243669[ebp]
	sete	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN59@erase@4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T243706[ebp], eax
	mov	ecx, DWORD PTR $T243706[ebp]
	mov	DWORD PTR $T243670[ebp], ecx
	mov	edx, DWORD PTR __Last$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T243670[ebp]
	sete	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN59@erase@4

; 812  : 			{	// erase all and return fresh iterator
; 813  : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::clear

; 814  : 			return (end());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T243784[ebp], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR $T243784[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@erase@4

; 815  : 			}
; 816  : 		else

	jmp	SHORT $LN5@erase@4

; 817  : 			{	// erase subrange
; 818  : 			while (_First != _Last)

$LN59@erase@4:
	mov	eax, DWORD PTR __First$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last$[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@erase@4

; 819  : 				_First = erase(_First);

	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T243671[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __First$[ebp], eax
	jmp	SHORT $LN59@erase@4
$LN1@erase@4:

; 820  : 			return (_Make_iter(_Last));

	mov	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T243913[ebp], ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR $T243913[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@erase@4:

; 821  : 			}
; 822  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z$0
__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z$4
__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z
_TEXT	SEGMENT
tv170 = -88						; size = 4
tv178 = -84						; size = 4
tv173 = -80						; size = 4
_this$ = -76						; size = 4
$T244020 = -72						; size = 4
$T244019 = -68						; size = 4
__Vptr$244028 = -64					; size = 4
$T243982 = -60						; size = 4
__Vptr$243988 = -56					; size = 4
$T243952 = -52						; size = 4
__Vptr$243959 = -48					; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode, COMDAT
; _this$ = ecx

; 1190 : 		{	// allocate a node and set links and value

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1191 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 1192 : 		int _Linkcnt = 0;

	mov	DWORD PTR __Linkcnt$[ebp], 0

; 1193 : 
; 1194 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1195 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Next);

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Vptr$243959[ebp], eax
	mov	ecx, DWORD PTR __Vptr$243959[ebp]
	mov	DWORD PTR $T243952[ebp], ecx
	cmp	DWORD PTR $T243952[ebp], 0
	je	SHORT $LN23@Buynode@4
	mov	edx, DWORD PTR $T243952[ebp]
	mov	eax, DWORD PTR __Next$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T243952[ebp]
	mov	DWORD PTR tv173[ebp], ecx
	jmp	SHORT $LN19@Buynode@4
$LN23@Buynode@4:
	mov	DWORD PTR tv173[ebp], 0
$LN19@Buynode@4:

; 1196 : 		++_Linkcnt;

	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx

; 1197 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
	mov	DWORD PTR __Vptr$243988[ebp], eax
	mov	ecx, DWORD PTR __Vptr$243988[ebp]
	mov	DWORD PTR $T243982[ebp], ecx
	cmp	DWORD PTR $T243982[ebp], 0
	je	SHORT $LN33@Buynode@4
	mov	edx, DWORD PTR $T243982[ebp]
	mov	eax, DWORD PTR __Prev$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T243982[ebp]
	mov	DWORD PTR tv178[ebp], ecx
	jmp	SHORT $LN29@Buynode@4
$LN33@Buynode@4:
	mov	DWORD PTR tv178[ebp], 0
$LN29@Buynode@4:

; 1198 : 		++_Linkcnt;

	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx

; 1199 : 		this->_Alval.construct(&_Myval(_Pnode), _Val);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
	mov	DWORD PTR __Vptr$244028[ebp], eax
	mov	ecx, DWORD PTR __Vptr$244028[ebp]
	mov	DWORD PTR $T244020[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T244020[ebp], 0
	je	SHORT $LN43@Buynode@4
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T244020[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T244020[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR $T244020[ebp]
	mov	DWORD PTR tv170[ebp], eax
	jmp	SHORT $LN44@Buynode@4
$LN43@Buynode@4:
	mov	DWORD PTR tv170[ebp], 0
$LN44@Buynode@4:
	mov	ecx, DWORD PTR tv170[ebp]
	mov	DWORD PTR $T244019[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN6@Buynode@4
__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z$0:

; 1200 : 		_CATCH_ALL
; 1201 : 		if (1 < _Linkcnt)
; 1202 : 			this->_Alptr.destroy(&_Prevnode(_Pnode));
; 1203 : 		if (0 < _Linkcnt)
; 1204 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1205 : 		this->_Alnod.deallocate(_Pnode, 1);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1206 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1207 : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z$1
	ret	0
$LN6@Buynode@4:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z$1:

; 1208 : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN5@Buynode@4:

; 1209 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z$2:
	mov	eax, DWORD PTR __Vptr$244028[ebp]
	push	eax
	mov	ecx, DWORD PTR $T244020[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Buynode
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 63   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 64   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z$2
__ehfuncinfo$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
tv89 = -92						; size = 4
_this$ = -88						; size = 4
__Count$244085 = -84					; size = 4
$T244069 = -80						; size = 28
$T244068 = -52						; size = 40
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Incsize, COMDAT
; _this$ = ecx

; 1239 : 		{	// alter element count, with checking

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1240 : 		if (max_size() - _Mysize < _Count)

	mov	DWORD PTR __Count$244085[ebp], 134217727 ; 07ffffffH
	cmp	DWORD PTR __Count$244085[ebp], 0
	jbe	SHORT $LN9@Incsize
	mov	eax, DWORD PTR __Count$244085[ebp]
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN5@Incsize
$LN9@Incsize:
	mov	DWORD PTR tv89[ebp], 1
$LN5@Incsize:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv89[ebp]
	sub	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Incsize

; 1241 : 			_THROW(length_error, "list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T244069[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T244068[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T244068[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T244069[ebp]
	push	eax
	lea	ecx, DWORD PTR $T244068[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T244068[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T244068[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T244069[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@Incsize:

; 1242 : 		_Mysize += _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN3@Incsize:

; 1243 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z$0:
	lea	ecx, DWORD PTR $T244069[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z$2:
	lea	ecx, DWORD PTR $T244068[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IAEXI@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Incsize
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx

; 34   : 		{	// return pointer to message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 		return (_Str.c_str());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 36   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 109  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@

; 110  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	edx, DWORD PTR ___flags$[ebp]
	and	edx, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>::allocate, COMDAT
; _this$ = ecx

; 144  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>
	add	esp, 8

; 146  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@I@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Insert_n
PUBLIC	?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@0@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::erase
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
_TEXT	SEGMENT
_this$ = -112						; size = 4
$T244325 = -108						; size = 4
$T244168 = -40						; size = 4
$T244152 = -36						; size = 4
$T244142 = -32						; size = 4
$T244141 = -28						; size = 4
$T244140 = -24						; size = 4
$T244139 = -20						; size = 4
$T244138 = -16						; size = 4
$T244137 = -12						; size = 4
$T244136 = -8						; size = 4
__Tmp$ = -4						; size = 4
__Count$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Assign_n, COMDAT
; _this$ = ecx

; 1095 : 		{	// assign _Count * _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 112				; 00000070H
	mov	DWORD PTR _this$[ebp], ecx

; 1096 : 		_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 1097 : 		erase(begin(), end());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T244152[ebp], eax
	mov	ecx, DWORD PTR $T244152[ebp]
	mov	DWORD PTR $T244137[ebp], ecx
	mov	edx, DWORD PTR $T244137[ebp]
	mov	DWORD PTR $T244136[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T244168[ebp], ecx
	mov	edx, DWORD PTR $T244168[ebp]
	mov	DWORD PTR $T244139[ebp], edx
	mov	eax, DWORD PTR $T244139[ebp]
	mov	DWORD PTR $T244138[ebp], eax
	mov	ecx, DWORD PTR $T244136[ebp]
	push	ecx
	mov	edx, DWORD PTR $T244138[ebp]
	push	edx
	lea	eax, DWORD PTR $T244140[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@0@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::erase

; 1098 : 		insert(begin(), _Count, _Tmp);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T244325[ebp], edx
	mov	eax, DWORD PTR $T244325[ebp]
	mov	DWORD PTR $T244142[ebp], eax
	mov	ecx, DWORD PTR $T244142[ebp]
	mov	DWORD PTR $T244141[ebp], ecx
	lea	edx, DWORD PTR __Tmp$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T244141[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Insert_n

; 1099 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Assign_n
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ
_TEXT	SEGMENT
$T244338 = -80						; size = 28
$T244337 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T244338[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T244337[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T244337[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T244338[ebp]
	push	eax
	lea	ecx, DWORD PTR $T244337[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T244337[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T244337[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T244338[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@Xlen:

; 1261 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T244338[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T244337[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Xlen
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z
_TEXT	SEGMENT
_this$ = -76						; size = 4
$T244603 = -72						; size = 4
$T244474 = -48						; size = 4
$T244396 = -24						; size = 4
$T244375 = -20						; size = 4
$T244366 = -16						; size = 4
$T244361 = -12						; size = 4
$T244360 = -8						; size = 4
$T244359 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase, COMDAT
; _this$ = ecx

; 810  : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	DWORD PTR _this$[ebp], ecx

; 811  : 		if (_First == begin() && _Last == end())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T244366[ebp], ecx
	mov	edx, DWORD PTR $T244366[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T244375[ebp], eax
	mov	ecx, DWORD PTR $T244375[ebp]
	mov	DWORD PTR $T244359[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T244359[ebp]
	sete	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN59@erase@5
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T244396[ebp], eax
	mov	ecx, DWORD PTR $T244396[ebp]
	mov	DWORD PTR $T244360[ebp], ecx
	mov	edx, DWORD PTR __Last$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T244360[ebp]
	sete	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN59@erase@5

; 812  : 			{	// erase all and return fresh iterator
; 813  : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::clear

; 814  : 			return (end());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T244474[ebp], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR $T244474[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@erase@5

; 815  : 			}
; 816  : 		else

	jmp	SHORT $LN5@erase@5

; 817  : 			{	// erase subrange
; 818  : 			while (_First != _Last)

$LN59@erase@5:
	mov	eax, DWORD PTR __First$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last$[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@erase@5

; 819  : 				_First = erase(_First);

	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T244361[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __First$[ebp], eax
	jmp	SHORT $LN59@erase@5
$LN1@erase@5:

; 820  : 			return (_Make_iter(_Last));

	mov	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T244603[ebp], ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR $T244603[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@erase@5:

; 821  : 			}
; 822  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z$0
__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z$4
__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z
_TEXT	SEGMENT
tv170 = -88						; size = 4
tv178 = -84						; size = 4
tv173 = -80						; size = 4
_this$ = -76						; size = 4
$T244713 = -72						; size = 4
$T244712 = -68						; size = 4
__Vptr$244710 = -64					; size = 4
$T244674 = -60						; size = 4
__Vptr$244672 = -56					; size = 4
$T244645 = -52						; size = 4
__Vptr$244643 = -48					; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode, COMDAT
; _this$ = ecx

; 1190 : 		{	// allocate a node and set links and value

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1191 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 1192 : 		int _Linkcnt = 0;

	mov	DWORD PTR __Linkcnt$[ebp], 0

; 1193 : 
; 1194 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1195 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Next);

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Vptr$244643[ebp], eax
	mov	ecx, DWORD PTR __Vptr$244643[ebp]
	mov	DWORD PTR $T244645[ebp], ecx
	cmp	DWORD PTR $T244645[ebp], 0
	je	SHORT $LN23@Buynode@5
	mov	edx, DWORD PTR $T244645[ebp]
	mov	eax, DWORD PTR __Next$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T244645[ebp]
	mov	DWORD PTR tv173[ebp], ecx
	jmp	SHORT $LN19@Buynode@5
$LN23@Buynode@5:
	mov	DWORD PTR tv173[ebp], 0
$LN19@Buynode@5:

; 1196 : 		++_Linkcnt;

	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx

; 1197 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
	mov	DWORD PTR __Vptr$244672[ebp], eax
	mov	ecx, DWORD PTR __Vptr$244672[ebp]
	mov	DWORD PTR $T244674[ebp], ecx
	cmp	DWORD PTR $T244674[ebp], 0
	je	SHORT $LN33@Buynode@5
	mov	edx, DWORD PTR $T244674[ebp]
	mov	eax, DWORD PTR __Prev$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T244674[ebp]
	mov	DWORD PTR tv178[ebp], ecx
	jmp	SHORT $LN29@Buynode@5
$LN33@Buynode@5:
	mov	DWORD PTR tv178[ebp], 0
$LN29@Buynode@5:

; 1198 : 		++_Linkcnt;

	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx

; 1199 : 		this->_Alval.construct(&_Myval(_Pnode), _Val);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
	mov	DWORD PTR __Vptr$244710[ebp], eax
	mov	ecx, DWORD PTR __Vptr$244710[ebp]
	mov	DWORD PTR $T244713[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T244713[ebp], 0
	je	SHORT $LN43@Buynode@5
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T244713[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T244713[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR $T244713[ebp]
	mov	DWORD PTR tv170[ebp], eax
	jmp	SHORT $LN44@Buynode@5
$LN43@Buynode@5:
	mov	DWORD PTR tv170[ebp], 0
$LN44@Buynode@5:
	mov	ecx, DWORD PTR tv170[ebp]
	mov	DWORD PTR $T244712[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN6@Buynode@5
__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z$0:

; 1200 : 		_CATCH_ALL
; 1201 : 		if (1 < _Linkcnt)
; 1202 : 			this->_Alptr.destroy(&_Prevnode(_Pnode));
; 1203 : 		if (0 < _Linkcnt)
; 1204 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1205 : 		this->_Alnod.deallocate(_Pnode, 1);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1206 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1207 : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z$1
	ret	0
$LN6@Buynode@5:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z$1:

; 1208 : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN5@Buynode@5:

; 1209 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z$2:
	mov	eax, DWORD PTR __Vptr$244710[ebp]
	push	eax
	mov	ecx, DWORD PTR $T244713[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Buynode
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z$2
__ehfuncinfo$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
tv89 = -92						; size = 4
_this$ = -88						; size = 4
__Count$244773 = -84					; size = 4
$T244757 = -80						; size = 28
$T244756 = -52						; size = 40
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Incsize, COMDAT
; _this$ = ecx

; 1239 : 		{	// alter element count, with checking

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1240 : 		if (max_size() - _Mysize < _Count)

	mov	DWORD PTR __Count$244773[ebp], 134217727 ; 07ffffffH
	cmp	DWORD PTR __Count$244773[ebp], 0
	jbe	SHORT $LN9@Incsize@2
	mov	eax, DWORD PTR __Count$244773[ebp]
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN5@Incsize@2
$LN9@Incsize@2:
	mov	DWORD PTR tv89[ebp], 1
$LN5@Incsize@2:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv89[ebp]
	sub	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Incsize@2

; 1241 : 			_THROW(length_error, "list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T244757[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T244756[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T244756[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T244757[ebp]
	push	eax
	lea	ecx, DWORD PTR $T244756[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T244756[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T244756[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T244757[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@Incsize@2:

; 1242 : 		_Mysize += _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN3@Incsize@2:

; 1243 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z$0:
	lea	ecx, DWORD PTR $T244757[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z$2:
	lea	ecx, DWORD PTR $T244756[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IAEXI@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Incsize
PUBLIC	??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>::allocate, COMDAT
; _this$ = ecx

; 144  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>
	add	esp, 8

; 146  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@I@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Insert_n
PUBLIC	?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@0@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::erase
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
_TEXT	SEGMENT
_this$ = -112						; size = 4
$T244991 = -108						; size = 4
$T244834 = -40						; size = 4
$T244818 = -36						; size = 4
$T244808 = -32						; size = 4
$T244807 = -28						; size = 4
$T244806 = -24						; size = 4
$T244805 = -20						; size = 4
$T244804 = -16						; size = 4
$T244803 = -12						; size = 4
$T244802 = -8						; size = 4
__Tmp$ = -4						; size = 4
__Count$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Assign_n, COMDAT
; _this$ = ecx

; 1095 : 		{	// assign _Count * _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 112				; 00000070H
	mov	DWORD PTR _this$[ebp], ecx

; 1096 : 		_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 1097 : 		erase(begin(), end());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T244818[ebp], eax
	mov	ecx, DWORD PTR $T244818[ebp]
	mov	DWORD PTR $T244803[ebp], ecx
	mov	edx, DWORD PTR $T244803[ebp]
	mov	DWORD PTR $T244802[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T244834[ebp], ecx
	mov	edx, DWORD PTR $T244834[ebp]
	mov	DWORD PTR $T244805[ebp], edx
	mov	eax, DWORD PTR $T244805[ebp]
	mov	DWORD PTR $T244804[ebp], eax
	mov	ecx, DWORD PTR $T244802[ebp]
	push	ecx
	mov	edx, DWORD PTR $T244804[ebp]
	push	edx
	lea	eax, DWORD PTR $T244806[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@0@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::erase

; 1098 : 		insert(begin(), _Count, _Tmp);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T244991[ebp], edx
	mov	eax, DWORD PTR $T244991[ebp]
	mov	DWORD PTR $T244808[ebp], eax
	mov	ecx, DWORD PTR $T244808[ebp]
	mov	DWORD PTR $T244807[ebp], ecx
	lea	edx, DWORD PTR __Tmp$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T244807[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Insert_n

; 1099 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Assign_n
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ
_TEXT	SEGMENT
$T245004 = -80						; size = 28
$T245003 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T245004[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T245003[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T245003[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T245004[ebp]
	push	eax
	lea	ecx, DWORD PTR $T245003[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T245003[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T245003[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T245004[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@Xlen@2:

; 1261 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T245004[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T245003[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Xlen
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z
_TEXT	SEGMENT
_this$ = -76						; size = 4
$T245269 = -72						; size = 4
$T245140 = -48						; size = 4
$T245062 = -24						; size = 4
$T245041 = -20						; size = 4
$T245032 = -16						; size = 4
$T245027 = -12						; size = 4
$T245026 = -8						; size = 4
$T245025 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase, COMDAT
; _this$ = ecx

; 810  : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	DWORD PTR _this$[ebp], ecx

; 811  : 		if (_First == begin() && _Last == end())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T245032[ebp], ecx
	mov	edx, DWORD PTR $T245032[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T245041[ebp], eax
	mov	ecx, DWORD PTR $T245041[ebp]
	mov	DWORD PTR $T245025[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T245025[ebp]
	sete	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN59@erase@6
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T245062[ebp], eax
	mov	ecx, DWORD PTR $T245062[ebp]
	mov	DWORD PTR $T245026[ebp], ecx
	mov	edx, DWORD PTR __Last$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T245026[ebp]
	sete	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN59@erase@6

; 812  : 			{	// erase all and return fresh iterator
; 813  : 			clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXXZ ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::clear

; 814  : 			return (end());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T245140[ebp], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR $T245140[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@erase@6

; 815  : 			}
; 816  : 		else

	jmp	SHORT $LN5@erase@6

; 817  : 			{	// erase subrange
; 818  : 			while (_First != _Last)

$LN59@erase@6:
	mov	eax, DWORD PTR __First$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last$[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@erase@6

; 819  : 				_First = erase(_First);

	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T245027[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __First$[ebp], eax
	jmp	SHORT $LN59@erase@6
$LN1@erase@6:

; 820  : 			return (_Make_iter(_Last));

	mov	ecx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T245269[ebp], ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR $T245269[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@erase@6:

; 821  : 			}
; 822  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@0@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z$0
__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z$4
__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z
_TEXT	SEGMENT
tv170 = -88						; size = 4
tv178 = -84						; size = 4
tv173 = -80						; size = 4
_this$ = -76						; size = 4
$T245376 = -72						; size = 4
$T245375 = -68						; size = 4
__Vptr$245384 = -64					; size = 4
$T245337 = -60						; size = 4
__Vptr$245343 = -56					; size = 4
$T245308 = -52						; size = 4
__Vptr$245314 = -48					; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode, COMDAT
; _this$ = ecx

; 1190 : 		{	// allocate a node and set links and value

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1191 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 1192 : 		int _Linkcnt = 0;

	mov	DWORD PTR __Linkcnt$[ebp], 0

; 1193 : 
; 1194 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1195 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Next);

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Vptr$245314[ebp], eax
	mov	ecx, DWORD PTR __Vptr$245314[ebp]
	mov	DWORD PTR $T245308[ebp], ecx
	cmp	DWORD PTR $T245308[ebp], 0
	je	SHORT $LN23@Buynode@6
	mov	edx, DWORD PTR $T245308[ebp]
	mov	eax, DWORD PTR __Next$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T245308[ebp]
	mov	DWORD PTR tv173[ebp], ecx
	jmp	SHORT $LN19@Buynode@6
$LN23@Buynode@6:
	mov	DWORD PTR tv173[ebp], 0
$LN19@Buynode@6:

; 1196 : 		++_Linkcnt;

	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx

; 1197 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
	mov	DWORD PTR __Vptr$245343[ebp], eax
	mov	ecx, DWORD PTR __Vptr$245343[ebp]
	mov	DWORD PTR $T245337[ebp], ecx
	cmp	DWORD PTR $T245337[ebp], 0
	je	SHORT $LN33@Buynode@6
	mov	edx, DWORD PTR $T245337[ebp]
	mov	eax, DWORD PTR __Prev$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T245337[ebp]
	mov	DWORD PTR tv178[ebp], ecx
	jmp	SHORT $LN29@Buynode@6
$LN33@Buynode@6:
	mov	DWORD PTR tv178[ebp], 0
$LN29@Buynode@6:

; 1198 : 		++_Linkcnt;

	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx

; 1199 : 		this->_Alval.construct(&_Myval(_Pnode), _Val);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
	mov	DWORD PTR __Vptr$245384[ebp], eax
	mov	ecx, DWORD PTR __Vptr$245384[ebp]
	mov	DWORD PTR $T245376[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T245376[ebp], 0
	je	SHORT $LN43@Buynode@6
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T245376[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T245376[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR $T245376[ebp]
	mov	DWORD PTR tv170[ebp], eax
	jmp	SHORT $LN44@Buynode@6
$LN43@Buynode@6:
	mov	DWORD PTR tv170[ebp], 0
$LN44@Buynode@6:
	mov	ecx, DWORD PTR tv170[ebp]
	mov	DWORD PTR $T245375[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN6@Buynode@6
__catch$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z$0:

; 1200 : 		_CATCH_ALL
; 1201 : 		if (1 < _Linkcnt)
; 1202 : 			this->_Alptr.destroy(&_Prevnode(_Pnode));
; 1203 : 		if (0 < _Linkcnt)
; 1204 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1205 : 		this->_Alnod.deallocate(_Pnode, 1);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1206 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1207 : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z$1
	ret	0
$LN6@Buynode@6:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z$1:

; 1208 : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN5@Buynode@6:

; 1209 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z$2:
	mov	eax, DWORD PTR __Vptr$245384[ebp]
	push	eax
	mov	ecx, DWORD PTR $T245376[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@PAU342@0ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Buynode
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z$2
__ehfuncinfo$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
tv89 = -92						; size = 4
_this$ = -88						; size = 4
__Count$245436 = -84					; size = 4
$T245423 = -80						; size = 28
$T245422 = -52						; size = 40
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Incsize, COMDAT
; _this$ = ecx

; 1239 : 		{	// alter element count, with checking

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1240 : 		if (max_size() - _Mysize < _Count)

	mov	DWORD PTR __Count$245436[ebp], 134217727 ; 07ffffffH
	cmp	DWORD PTR __Count$245436[ebp], 0
	jbe	SHORT $LN9@Incsize@3
	mov	eax, DWORD PTR __Count$245436[ebp]
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN5@Incsize@3
$LN9@Incsize@3:
	mov	DWORD PTR tv89[ebp], 1
$LN5@Incsize@3:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv89[ebp]
	sub	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Incsize@3

; 1241 : 			_THROW(length_error, "list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T245423[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T245422[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T245422[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T245423[ebp]
	push	eax
	lea	ecx, DWORD PTR $T245422[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T245422[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T245422[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T245423[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@Incsize@3:

; 1242 : 		_Mysize += _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN3@Incsize@3:

; 1243 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z$0:
	lea	ecx, DWORD PTR $T245423[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z$2:
	lea	ecx, DWORD PTR $T245422[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Incsize@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IAEXI@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Incsize
PUBLIC	??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z PROC ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>::allocate, COMDAT
; _this$ = ecx

; 144  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>
	add	esp, 8

; 146  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@I@Z ENDP ; std::allocator<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Insert_n
PUBLIC	?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@0@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::erase
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
_TEXT	SEGMENT
_this$ = -112						; size = 4
$T245657 = -108						; size = 4
$T245500 = -40						; size = 4
$T245484 = -36						; size = 4
$T245474 = -32						; size = 4
$T245473 = -28						; size = 4
$T245472 = -24						; size = 4
$T245471 = -20						; size = 4
$T245470 = -16						; size = 4
$T245469 = -12						; size = 4
$T245468 = -8						; size = 4
__Tmp$ = -4						; size = 4
__Count$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Assign_n, COMDAT
; _this$ = ecx

; 1095 : 		{	// assign _Count * _Val

	push	ebp
	mov	ebp, esp
	sub	esp, 112				; 00000070H
	mov	DWORD PTR _this$[ebp], ecx

; 1096 : 		_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 1097 : 		erase(begin(), end());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T245484[ebp], eax
	mov	ecx, DWORD PTR $T245484[ebp]
	mov	DWORD PTR $T245469[ebp], ecx
	mov	edx, DWORD PTR $T245469[ebp]
	mov	DWORD PTR $T245468[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T245500[ebp], ecx
	mov	edx, DWORD PTR $T245500[ebp]
	mov	DWORD PTR $T245471[ebp], edx
	mov	eax, DWORD PTR $T245471[ebp]
	mov	DWORD PTR $T245470[ebp], eax
	mov	ecx, DWORD PTR $T245468[ebp]
	push	ecx
	mov	edx, DWORD PTR $T245470[ebp]
	push	edx
	lea	eax, DWORD PTR $T245472[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@0@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::erase

; 1098 : 		insert(begin(), _Count, _Tmp);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T245657[ebp], edx
	mov	eax, DWORD PTR $T245657[ebp]
	mov	DWORD PTR $T245474[ebp], eax
	mov	ecx, DWORD PTR $T245474[ebp]
	mov	DWORD PTR $T245473[ebp], ecx
	lea	edx, DWORD PTR __Tmp$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T245473[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Insert_n

; 1099 : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Assign_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXIABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Assign_n
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ
_TEXT	SEGMENT
$T245670 = -80						; size = 28
$T245669 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T245670[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T245669[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T245669[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T245670[ebp]
	push	eax
	lea	ecx, DWORD PTR $T245669[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T245669[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T245669[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T245670[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@Xlen@3:

; 1261 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T245670[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T245669[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Xlen
; Function compile flags: /Odtp
;	COMDAT ?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@0@Z
_TEXT	SEGMENT
_this$ = -68						; size = 4
$T245830 = -64						; size = 4
$T245812 = -60						; size = 4
$T245811 = -56						; size = 4
$T245795 = -52						; size = 4
__Cat$245818 = -46					; size = 1
$T245815 = -45						; size = 1
$T245769 = -44						; size = 4
$T245768 = -40						; size = 4
$T245767 = -36						; size = 4
$T245750 = -30						; size = 1
$T245749 = -29						; size = 1
$T245748 = -28						; size = 4
$T245747 = -24						; size = 4
__Cat$245757 = -16					; size = 1
$T245755 = -15						; size = 1
$T245754 = -14						; size = 1
$T245753 = -13						; size = 1
__Ptr$223107 = -12					; size = 4
__Last$ = -8						; size = 4
__First$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@0@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::erase, COMDAT
; _this$ = ecx

; 1028 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	mov	DWORD PTR _this$[ebp], ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	eax, DWORD PTR __First_arg$[ebp]
	mov	DWORD PTR __First$[ebp], eax

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);

	mov	ecx, DWORD PTR __Last_arg$[ebp]
	mov	DWORD PTR __Last$[ebp], ecx

; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __First$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __Last$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	$LN1@erase@7

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T245769[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T245768[ebp], edx
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T245767[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T245753[ebp], cl
	mov	dl, BYTE PTR __Cat$245757[ebp]
	mov	BYTE PTR $T245754[ebp], dl
	mov	al, BYTE PTR $T245753[ebp]
	mov	BYTE PTR $T245750[ebp], al
	mov	cl, BYTE PTR $T245755[ebp]
	mov	BYTE PTR $T245749[ebp], cl
	mov	edx, DWORD PTR $T245769[ebp]
	mov	DWORD PTR $T245748[ebp], edx
	mov	eax, DWORD PTR $T245767[ebp]
	mov	DWORD PTR $T245747[ebp], eax
	jmp	SHORT $LN28@erase@7
$LN27@erase@7:
	mov	ecx, DWORD PTR $T245748[ebp]
	add	ecx, 4
	mov	DWORD PTR $T245748[ebp], ecx
	mov	edx, DWORD PTR $T245747[ebp]
	add	edx, 4
	mov	DWORD PTR $T245747[ebp], edx
$LN28@erase@7:
	mov	eax, DWORD PTR $T245747[ebp]
	cmp	eax, DWORD PTR $T245768[ebp]
	je	SHORT $LN20@erase@7
	mov	ecx, DWORD PTR $T245747[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR $T245748[ebp]
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN27@erase@7
$LN20@erase@7:
	mov	ecx, DWORD PTR $T245748[ebp]
	mov	DWORD PTR __Ptr$223107[ebp], ecx

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T245830[ebp], eax
	mov	ecx, DWORD PTR $T245830[ebp]
	mov	DWORD PTR $T245812[ebp], ecx
	mov	edx, DWORD PTR __Ptr$223107[ebp]
	mov	DWORD PTR $T245811[ebp], edx
	mov	al, BYTE PTR __Cat$245818[ebp]
	mov	BYTE PTR $T245815[ebp], al
	mov	ecx, DWORD PTR $T245811[ebp]
	mov	DWORD PTR $T245795[ebp], ecx
	jmp	SHORT $LN39@erase@7
$LN38@erase@7:
	mov	edx, DWORD PTR $T245795[ebp]
	add	edx, 4
	mov	DWORD PTR $T245795[ebp], edx
$LN39@erase@7:
	mov	eax, DWORD PTR $T245795[ebp]
	cmp	eax, DWORD PTR $T245812[ebp]
	je	SHORT $LN31@erase@7
	jmp	SHORT $LN38@erase@7
$LN31@erase@7:

; 1049 : 			_Mylast = _Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Ptr$223107[ebp]
	mov	DWORD PTR [ecx+8], edx
$LN1@erase@7:

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1055 : #endif
; 1056 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@0@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::erase
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@0@Z
_TEXT	SEGMENT
_this$ = -68						; size = 4
$T245972 = -64						; size = 4
$T245954 = -60						; size = 4
$T245953 = -56						; size = 4
$T245937 = -52						; size = 4
__Cat$245961 = -46					; size = 1
$T245958 = -45						; size = 1
$T245911 = -44						; size = 4
$T245910 = -40						; size = 4
$T245909 = -36						; size = 4
$T245892 = -30						; size = 1
$T245891 = -29						; size = 1
$T245890 = -28						; size = 4
$T245889 = -24						; size = 4
__Cat$245899 = -16					; size = 1
$T245896 = -15						; size = 1
$T245895 = -14						; size = 1
$T245894 = -13						; size = 1
__Ptr$223152 = -12					; size = 4
__Last$ = -8						; size = 4
__First$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@0@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::erase, COMDAT
; _this$ = ecx

; 1028 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	mov	DWORD PTR _this$[ebp], ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	eax, DWORD PTR __First_arg$[ebp]
	mov	DWORD PTR __First$[ebp], eax

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);

	mov	ecx, DWORD PTR __Last_arg$[ebp]
	mov	DWORD PTR __Last$[ebp], ecx

; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __First$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __Last$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	$LN1@erase@8

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T245911[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T245910[ebp], edx
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T245909[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T245894[ebp], cl
	mov	dl, BYTE PTR __Cat$245899[ebp]
	mov	BYTE PTR $T245895[ebp], dl
	mov	al, BYTE PTR $T245894[ebp]
	mov	BYTE PTR $T245892[ebp], al
	mov	cl, BYTE PTR $T245896[ebp]
	mov	BYTE PTR $T245891[ebp], cl
	mov	edx, DWORD PTR $T245911[ebp]
	mov	DWORD PTR $T245890[ebp], edx
	mov	eax, DWORD PTR $T245909[ebp]
	mov	DWORD PTR $T245889[ebp], eax
	jmp	SHORT $LN28@erase@8
$LN27@erase@8:
	mov	ecx, DWORD PTR $T245890[ebp]
	add	ecx, 4
	mov	DWORD PTR $T245890[ebp], ecx
	mov	edx, DWORD PTR $T245889[ebp]
	add	edx, 4
	mov	DWORD PTR $T245889[ebp], edx
$LN28@erase@8:
	mov	eax, DWORD PTR $T245889[ebp]
	cmp	eax, DWORD PTR $T245910[ebp]
	je	SHORT $LN20@erase@8
	mov	ecx, DWORD PTR $T245889[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR $T245890[ebp]
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN27@erase@8
$LN20@erase@8:
	mov	ecx, DWORD PTR $T245890[ebp]
	mov	DWORD PTR __Ptr$223152[ebp], ecx

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T245972[ebp], eax
	mov	ecx, DWORD PTR $T245972[ebp]
	mov	DWORD PTR $T245954[ebp], ecx
	mov	edx, DWORD PTR __Ptr$223152[ebp]
	mov	DWORD PTR $T245953[ebp], edx
	mov	al, BYTE PTR __Cat$245961[ebp]
	mov	BYTE PTR $T245958[ebp], al
	mov	ecx, DWORD PTR $T245953[ebp]
	mov	DWORD PTR $T245937[ebp], ecx
	jmp	SHORT $LN39@erase@8
$LN38@erase@8:
	mov	edx, DWORD PTR $T245937[ebp]
	add	edx, 4
	mov	DWORD PTR $T245937[ebp], edx
$LN39@erase@8:
	mov	eax, DWORD PTR $T245937[ebp]
	cmp	eax, DWORD PTR $T245954[ebp]
	je	SHORT $LN31@erase@8
	jmp	SHORT $LN38@erase@8
$LN31@erase@8:

; 1049 : 			_Mylast = _Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Ptr$223152[ebp]
	mov	DWORD PTR [ecx+8], edx
$LN1@erase@8:

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1055 : #endif
; 1056 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@0@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::erase
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@0@Z
_TEXT	SEGMENT
_this$ = -68						; size = 4
$T246114 = -64						; size = 4
$T246096 = -60						; size = 4
$T246095 = -56						; size = 4
$T246079 = -52						; size = 4
__Cat$246102 = -46					; size = 1
$T246100 = -45						; size = 1
$T246053 = -44						; size = 4
$T246052 = -40						; size = 4
$T246051 = -36						; size = 4
$T246034 = -30						; size = 1
$T246033 = -29						; size = 1
$T246032 = -28						; size = 4
$T246031 = -24						; size = 4
__Cat$246040 = -16					; size = 1
$T246038 = -15						; size = 1
$T246037 = -14						; size = 1
$T246036 = -13						; size = 1
__Ptr$223197 = -12					; size = 4
__Last$ = -8						; size = 4
__First$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@0@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::erase, COMDAT
; _this$ = ecx

; 1028 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	mov	DWORD PTR _this$[ebp], ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	eax, DWORD PTR __First_arg$[ebp]
	mov	DWORD PTR __First$[ebp], eax

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);

	mov	ecx, DWORD PTR __Last_arg$[ebp]
	mov	DWORD PTR __Last$[ebp], ecx

; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __First$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __Last$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	$LN1@erase@9

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T246053[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T246052[ebp], edx
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T246051[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T246036[ebp], cl
	mov	dl, BYTE PTR __Cat$246040[ebp]
	mov	BYTE PTR $T246037[ebp], dl
	mov	al, BYTE PTR $T246036[ebp]
	mov	BYTE PTR $T246034[ebp], al
	mov	cl, BYTE PTR $T246038[ebp]
	mov	BYTE PTR $T246033[ebp], cl
	mov	edx, DWORD PTR $T246053[ebp]
	mov	DWORD PTR $T246032[ebp], edx
	mov	eax, DWORD PTR $T246051[ebp]
	mov	DWORD PTR $T246031[ebp], eax
	jmp	SHORT $LN28@erase@9
$LN27@erase@9:
	mov	ecx, DWORD PTR $T246032[ebp]
	add	ecx, 4
	mov	DWORD PTR $T246032[ebp], ecx
	mov	edx, DWORD PTR $T246031[ebp]
	add	edx, 4
	mov	DWORD PTR $T246031[ebp], edx
$LN28@erase@9:
	mov	eax, DWORD PTR $T246031[ebp]
	cmp	eax, DWORD PTR $T246052[ebp]
	je	SHORT $LN20@erase@9
	mov	ecx, DWORD PTR $T246031[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR $T246032[ebp]
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN27@erase@9
$LN20@erase@9:
	mov	ecx, DWORD PTR $T246032[ebp]
	mov	DWORD PTR __Ptr$223197[ebp], ecx

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T246114[ebp], eax
	mov	ecx, DWORD PTR $T246114[ebp]
	mov	DWORD PTR $T246096[ebp], ecx
	mov	edx, DWORD PTR __Ptr$223197[ebp]
	mov	DWORD PTR $T246095[ebp], edx
	mov	al, BYTE PTR __Cat$246102[ebp]
	mov	BYTE PTR $T246100[ebp], al
	mov	ecx, DWORD PTR $T246095[ebp]
	mov	DWORD PTR $T246079[ebp], ecx
	jmp	SHORT $LN39@erase@9
$LN38@erase@9:
	mov	edx, DWORD PTR $T246079[ebp]
	add	edx, 4
	mov	DWORD PTR $T246079[ebp], edx
$LN39@erase@9:
	mov	eax, DWORD PTR $T246079[ebp]
	cmp	eax, DWORD PTR $T246096[ebp]
	je	SHORT $LN31@erase@9
	jmp	SHORT $LN38@erase@9
$LN31@erase@9:

; 1049 : 			_Mylast = _Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Ptr$223197[ebp]
	mov	DWORD PTR [ecx+8], edx
$LN1@erase@9:

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1055 : #endif
; 1056 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@QAE?AV?$_Vector_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@V?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@0@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::erase
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
PUBLIC	??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
PUBLIC	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$2
__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$0
__unwindtable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$5
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$6
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
_TEXT	SEGMENT
tv84 = -424						; size = 4
tv304 = -420						; size = 4
tv290 = -416						; size = 4
tv282 = -412						; size = 4
_this$ = -408						; size = 4
$T246798 = -404						; size = 4
$T246790 = -400						; size = 4
$T246789 = -396						; size = 4
$T246766 = -390						; size = 1
$T246765 = -389						; size = 1
$T246764 = -388						; size = 4
$T246763 = -384						; size = 4
$T246751 = -377						; size = 1
$T246750 = -376						; size = 4
$T246749 = -372						; size = 4
$T246748 = -368						; size = 4
__Cat$246783 = -364					; size = 1
$T246781 = -363						; size = 1
$T246780 = -362						; size = 1
__Cat$246773 = -360					; size = 1
$T246771 = -359						; size = 1
$T246770 = -358						; size = 1
$T246769 = -357						; size = 1
$T246723 = -356						; size = 4
$T246704 = -352						; size = 4
$T246687 = -345						; size = 1
$T246686 = -344						; size = 4
$T246676 = -340						; size = 4
$T246675 = -336						; size = 4
__Cat$246721 = -330					; size = 1
$T246719 = -329						; size = 1
$T246718 = -328						; size = 1
__Cat$246712 = -327					; size = 1
$T246710 = -326						; size = 1
$T246709 = -325						; size = 1
$T246651 = -324						; size = 4
$T246643 = -320						; size = 4
$T246635 = -316						; size = 4
$T246617 = -312						; size = 4
$T246616 = -308						; size = 4
$T246600 = -304						; size = 4
__Cat$246623 = -298					; size = 1
$T246621 = -297						; size = 1
$T246574 = -296						; size = 4
$T246573 = -292						; size = 4
$T246563 = -288						; size = 4
__Cat$246571 = -283					; size = 1
$T246569 = -282						; size = 1
$T246568 = -281						; size = 1
$T246547 = -280						; size = 4
$T246528 = -276						; size = 4
$T246511 = -269						; size = 1
$T246510 = -268						; size = 4
$T246500 = -264						; size = 4
$T246499 = -260						; size = 4
__Cat$246544 = -254					; size = 1
$T246542 = -253						; size = 1
$T246541 = -252						; size = 1
__Cat$246535 = -251					; size = 1
$T246533 = -250						; size = 1
$T246532 = -249						; size = 1
$T246475 = -248						; size = 4
$T246474 = -244						; size = 4
$T246470 = -240						; size = 4
$T246469 = -236						; size = 4
$T246451 = -232						; size = 4
$T246450 = -228						; size = 4
$T246434 = -224						; size = 4
__Cat$246457 = -218					; size = 1
$T246455 = -217						; size = 1
$T246385 = -216						; size = 4
$T246384 = -212						; size = 4
$T246368 = -208						; size = 4
__Cat$246391 = -202					; size = 1
$T246389 = -201						; size = 1
$T246325 = -200						; size = 4
$T246324 = -196						; size = 4
$T246308 = -192						; size = 4
__Cat$246331 = -186					; size = 1
$T246329 = -185						; size = 1
$T246282 = -184						; size = 4
$T246270 = -180						; size = 4
$T246260 = -173						; size = 1
$T246259 = -172						; size = 4
__Cat$246277 = -167					; size = 1
$T246275 = -166						; size = 1
$T246274 = -165						; size = 1
$T246247 = -164						; size = 4
$T246235 = -160						; size = 4
$T246225 = -153						; size = 1
$T246224 = -152						; size = 4
__Cat$246242 = -147					; size = 1
$T246240 = -146						; size = 1
$T246239 = -145						; size = 1
$T246212 = -144						; size = 4
$T246202 = -140						; size = 4
__Cat$246210 = -135					; size = 1
$T246208 = -134						; size = 1
$T246207 = -133						; size = 1
__Count$246174 = -120					; size = 4
__Count$246148 = -48					; size = 4
__Tmp$223250 = -44					; size = 4
__Oldend$223251 = -40					; size = 4
__Tmp$223240 = -36					; size = 4
__Ncopied$223227 = -32					; size = 4
__Newvec$223225 = -28					; size = 4
__Whereoff$223226 = -24					; size = 4
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 408				; 00000198H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN29@Insert_n
	mov	DWORD PTR tv282[ebp], 0
	jmp	SHORT $LN27@Insert_n
$LN29@Insert_n:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	mov	DWORD PTR tv282[ebp], eax
$LN27@Insert_n:
	mov	ecx, DWORD PTR tv282[ebp]
	mov	DWORD PTR __Capacity$[ebp], ecx

; 1162 : 
; 1163 : 		if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN14@Insert_n
	jmp	$LN16@Insert_n
$LN14@Insert_n:

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	DWORD PTR __Count$246148[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$246148[ebp], 0
	jbe	SHORT $LN35@Insert_n
	mov	edx, DWORD PTR __Count$246148[ebp]
	mov	DWORD PTR tv290[ebp], edx
	jmp	SHORT $LN37@Insert_n
$LN35@Insert_n:
	mov	DWORD PTR tv290[ebp], 1
$LN37@Insert_n:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	eax, DWORD PTR tv290[ebp]
	sub	eax, edx
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN42@Insert_n

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Xlen
	jmp	$LN16@Insert_n

; 1167 : 		else if (_Capacity < size() + _Count)

$LN42@Insert_n:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	add	eax, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], eax
	jae	$LN10@Insert_n

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	DWORD PTR __Count$246174[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$246174[ebp], 0
	jbe	SHORT $LN48@Insert_n
	mov	ecx, DWORD PTR __Count$246174[ebp]
	mov	DWORD PTR tv304[ebp], ecx
	jmp	SHORT $LN44@Insert_n
$LN48@Insert_n:
	mov	DWORD PTR tv304[ebp], 1
$LN44@Insert_n:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	mov	eax, DWORD PTR tv304[ebp]
	sub	eax, edx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN17@Insert_n
	mov	DWORD PTR tv84[ebp], 0
	jmp	SHORT $LN18@Insert_n
$LN17@Insert_n:
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	add	ecx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv84[ebp], ecx
$LN18@Insert_n:
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx

; 1171 : 			if (_Capacity < size() + _Count)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	add	edx, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], edx
	jae	SHORT $LN54@Insert_n

; 1172 : 				_Capacity = size() + _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

$LN54@Insert_n:
	push	0
	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	call	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
	add	esp, 8
	mov	DWORD PTR __Newvec$223225[ebp], eax

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Where$[ebp]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	DWORD PTR __Whereoff$223226[ebp], edx

; 1175 : 			int _Ncopied = 0;

	mov	DWORD PTR __Ncopied$223227[ebp], 0

; 1176 : 
; 1177 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	eax, DWORD PTR __Whereoff$223226[ebp]
	mov	ecx, DWORD PTR __Newvec$223225[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR $T246212[ebp], edx
	mov	eax, DWORD PTR $T246212[ebp]
	mov	DWORD PTR $T246202[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T246207[ebp], cl
	mov	dl, BYTE PTR __Cat$246210[ebp]
	mov	BYTE PTR $T246208[ebp], dl
	movzx	eax, BYTE PTR $T246207[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T246208[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T246202[ebp]
	push	edx
	call	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H

; 1179 : 			++_Ncopied;

	mov	eax, DWORD PTR __Ncopied$223227[ebp]
	add	eax, 1
	mov	DWORD PTR __Ncopied$223227[ebp], eax

; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T246247[ebp], edx
	mov	eax, DWORD PTR __Newvec$223225[ebp]
	mov	DWORD PTR $T246235[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T246239[ebp], cl
	mov	dl, BYTE PTR __Cat$246242[ebp]
	mov	BYTE PTR $T246240[ebp], dl
	mov	al, BYTE PTR $T246239[ebp]
	mov	BYTE PTR $T246225[ebp], al
	mov	ecx, DWORD PTR $T246235[ebp]
	mov	DWORD PTR $T246224[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR $T246224[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T246247[ebp]
	push	edx
	call	??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
	add	esp, 16					; 00000010H

; 1182 : 			++_Ncopied;

	mov	eax, DWORD PTR __Ncopied$223227[ebp]
	add	eax, 1
	mov	DWORD PTR __Ncopied$223227[ebp], eax

; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T246282[ebp], edx
	mov	eax, DWORD PTR __Whereoff$223226[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Newvec$223225[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR $T246270[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T246274[ebp], al
	mov	cl, BYTE PTR __Cat$246277[ebp]
	mov	BYTE PTR $T246275[ebp], cl
	mov	dl, BYTE PTR $T246274[ebp]
	mov	BYTE PTR $T246260[ebp], dl
	mov	eax, DWORD PTR $T246270[ebp]
	mov	DWORD PTR $T246259[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T246259[ebp]
	push	edx
	mov	eax, DWORD PTR $T246282[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	call	??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
	add	esp, 16					; 00000010H
	jmp	$LN19@Insert_n
__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)

	cmp	DWORD PTR __Ncopied$223227[ebp], 1
	jle	SHORT $LN7@Insert_n

; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);

	mov	edx, DWORD PTR __Whereoff$223226[ebp]
	mov	eax, DWORD PTR __Newvec$223225[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T246325[ebp], ecx
	mov	edx, DWORD PTR __Newvec$223225[ebp]
	mov	DWORD PTR $T246324[ebp], edx
	mov	al, BYTE PTR __Cat$246331[ebp]
	mov	BYTE PTR $T246329[ebp], al
	mov	ecx, DWORD PTR $T246324[ebp]
	mov	DWORD PTR $T246308[ebp], ecx
	jmp	SHORT $LN91@Insert_n
$LN90@Insert_n:
	mov	edx, DWORD PTR $T246308[ebp]
	add	edx, 4
	mov	DWORD PTR $T246308[ebp], edx
$LN91@Insert_n:
	mov	eax, DWORD PTR $T246308[ebp]
	cmp	eax, DWORD PTR $T246325[ebp]
	je	SHORT $LN7@Insert_n
	jmp	SHORT $LN90@Insert_n
$LN7@Insert_n:

; 1188 : 			if (0 < _Ncopied)

	cmp	DWORD PTR __Ncopied$223227[ebp], 0
	jle	SHORT $LN6@Insert_n

; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);

	mov	ecx, DWORD PTR __Whereoff$223226[ebp]
	mov	edx, DWORD PTR __Newvec$223225[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR $T246385[ebp], edx
	mov	eax, DWORD PTR __Whereoff$223226[ebp]
	mov	ecx, DWORD PTR __Newvec$223225[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR $T246384[ebp], edx
	mov	al, BYTE PTR __Cat$246391[ebp]
	mov	BYTE PTR $T246389[ebp], al
	mov	ecx, DWORD PTR $T246384[ebp]
	mov	DWORD PTR $T246368[ebp], ecx
	jmp	SHORT $LN106@Insert_n
$LN105@Insert_n:
	mov	edx, DWORD PTR $T246368[ebp]
	add	edx, 4
	mov	DWORD PTR $T246368[ebp], edx
$LN106@Insert_n:
	mov	eax, DWORD PTR $T246368[ebp]
	cmp	eax, DWORD PTR $T246385[ebp]
	je	SHORT $LN6@Insert_n
	jmp	SHORT $LN105@Insert_n
$LN6@Insert_n:

; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	ecx, DWORD PTR __Newvec$223225[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1192 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN115@Insert_n
	ret	0
$LN19@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 1193 : 
; 1194 : 			_Count += size();

$LN115@Insert_n:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	add	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Count$[ebp], ecx

; 1195 : 			if (_Myfirst != 0)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	$LN5@Insert_n

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T246470[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T246469[ebp], eax
	mov	ecx, DWORD PTR $T246470[ebp]
	mov	DWORD PTR $T246451[ebp], ecx
	mov	edx, DWORD PTR $T246469[ebp]
	mov	DWORD PTR $T246450[ebp], edx
	mov	al, BYTE PTR __Cat$246457[ebp]
	mov	BYTE PTR $T246455[ebp], al
	mov	ecx, DWORD PTR $T246450[ebp]
	mov	DWORD PTR $T246434[ebp], ecx
	jmp	SHORT $LN125@Insert_n
$LN124@Insert_n:
	mov	edx, DWORD PTR $T246434[ebp]
	add	edx, 4
	mov	DWORD PTR $T246434[ebp], edx
$LN125@Insert_n:
	mov	eax, DWORD PTR $T246434[ebp]
	cmp	eax, DWORD PTR $T246451[ebp]
	je	SHORT $LN117@Insert_n
	jmp	SHORT $LN124@Insert_n
$LN117@Insert_n:

; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	mov	DWORD PTR $T246475[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T246474[ebp], edx
	mov	eax, DWORD PTR $T246474[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@Insert_n:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	ecx, DWORD PTR __Capacity$[ebp]
	mov	edx, DWORD PTR __Newvec$223225[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 1206 : 			_Mylast = _Newvec + _Count;

	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Newvec$223225[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newvec$223225[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	$LN16@Insert_n
$LN10@Insert_n:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, DWORD PTR __Where$[ebp]
	sar	eax, 2
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN3@Insert_n

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$223240[ebp], edx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T246547[ebp], ecx
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T246528[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T246532[ebp], dl
	mov	al, BYTE PTR __Cat$246535[ebp]
	mov	BYTE PTR $T246533[ebp], al
	mov	cl, BYTE PTR $T246532[ebp]
	mov	BYTE PTR $T246511[ebp], cl
	mov	edx, DWORD PTR $T246528[ebp]
	mov	DWORD PTR $T246510[ebp], edx
	mov	eax, DWORD PTR $T246510[ebp]
	mov	DWORD PTR $T246500[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T246499[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T246541[ebp], dl
	mov	al, BYTE PTR __Cat$246544[ebp]
	mov	BYTE PTR $T246542[ebp], al
	movzx	ecx, BYTE PTR $T246541[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T246542[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T246500[ebp]
	push	ecx
	mov	edx, DWORD PTR $T246547[ebp]
	push	edx
	mov	eax, DWORD PTR $T246499[ebp]
	push	eax
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H

; 1215 : 
; 1216 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 2

; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR __Where$[ebp]
	sar	edx, 2
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, edx
	mov	DWORD PTR $T246574[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T246573[ebp], edx
	mov	eax, DWORD PTR $T246573[ebp]
	mov	DWORD PTR $T246563[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T246568[ebp], cl
	mov	dl, BYTE PTR __Cat$246571[ebp]
	mov	BYTE PTR $T246569[ebp], dl
	movzx	eax, BYTE PTR $T246568[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T246569[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	lea	eax, DWORD PTR __Tmp$223240[ebp]
	push	eax
	mov	ecx, DWORD PTR $T246574[ebp]
	push	ecx
	mov	edx, DWORD PTR $T246563[ebp]
	push	edx
	call	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H
	jmp	SHORT $LN21@Insert_n
__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$2:

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T246635[ebp], eax
	mov	ecx, DWORD PTR $T246635[ebp]
	mov	DWORD PTR $T246617[ebp], ecx
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T246616[ebp], ecx
	mov	dl, BYTE PTR __Cat$246623[ebp]
	mov	BYTE PTR $T246621[ebp], dl
	mov	eax, DWORD PTR $T246616[ebp]
	mov	DWORD PTR $T246600[ebp], eax
	jmp	SHORT $LN160@Insert_n
$LN159@Insert_n:
	mov	ecx, DWORD PTR $T246600[ebp]
	add	ecx, 4
	mov	DWORD PTR $T246600[ebp], ecx
$LN160@Insert_n:
	mov	edx, DWORD PTR $T246600[ebp]
	cmp	edx, DWORD PTR $T246617[ebp]
	je	SHORT $LN152@Insert_n
	jmp	SHORT $LN159@Insert_n
$LN152@Insert_n:

; 1221 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1222 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$3
	ret	0
$LN21@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z$3:

; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, edx
	mov	DWORD PTR $T246651[ebp], ecx
	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T246643[ebp], edx
	jmp	SHORT $LN171@Insert_n
$LN170@Insert_n:
	mov	eax, DWORD PTR $T246643[ebp]
	add	eax, 4
	mov	DWORD PTR $T246643[ebp], eax
$LN171@Insert_n:
	mov	ecx, DWORD PTR $T246643[ebp]
	cmp	ecx, DWORD PTR $T246651[ebp]
	je	SHORT $LN167@Insert_n
	mov	edx, DWORD PTR __Tmp$223240[ebp]
	mov	eax, DWORD PTR $T246643[ebp]
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN170@Insert_n
$LN167@Insert_n:

; 1232 : 			}
; 1233 : 		else

	jmp	$LN16@Insert_n
$LN3@Insert_n:

; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$223250[ebp], edx

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Oldend$223251[ebp], ecx

; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T246723[ebp], eax
	mov	ecx, DWORD PTR $T246723[ebp]
	mov	DWORD PTR $T246704[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T246709[ebp], dl
	mov	al, BYTE PTR __Cat$246712[ebp]
	mov	BYTE PTR $T246710[ebp], al
	mov	cl, BYTE PTR $T246709[ebp]
	mov	BYTE PTR $T246687[ebp], cl
	mov	edx, DWORD PTR $T246704[ebp]
	mov	DWORD PTR $T246686[ebp], edx
	mov	eax, DWORD PTR $T246686[ebp]
	mov	DWORD PTR $T246676[ebp], eax
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	mov	edx, DWORD PTR __Oldend$223251[ebp]
	sub	edx, ecx
	mov	DWORD PTR $T246675[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T246718[ebp], al
	mov	cl, BYTE PTR __Cat$246721[ebp]
	mov	BYTE PTR $T246719[ebp], cl
	movzx	edx, BYTE PTR $T246718[ebp]
	push	edx
	movzx	eax, BYTE PTR $T246719[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T246676[ebp]
	push	edx
	mov	eax, DWORD PTR __Oldend$223251[ebp]
	push	eax
	mov	ecx, DWORD PTR $T246675[ebp]
	push	ecx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	mov	eax, DWORD PTR __Oldend$223251[ebp]
	mov	DWORD PTR $T246790[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T246789[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T246769[ebp], dl
	mov	al, BYTE PTR __Cat$246773[ebp]
	mov	BYTE PTR $T246770[ebp], al
	mov	cl, BYTE PTR $T246769[ebp]
	mov	BYTE PTR $T246766[ebp], cl
	mov	dl, BYTE PTR $T246771[ebp]
	mov	BYTE PTR $T246765[ebp], dl
	mov	eax, DWORD PTR $T246790[ebp]
	mov	DWORD PTR $T246764[ebp], eax
	mov	ecx, DWORD PTR $T246789[ebp]
	mov	DWORD PTR $T246763[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T246780[ebp], dl
	mov	al, BYTE PTR __Cat$246783[ebp]
	mov	BYTE PTR $T246781[ebp], al
	mov	cl, BYTE PTR $T246780[ebp]
	mov	BYTE PTR $T246751[ebp], cl
	mov	edx, DWORD PTR $T246764[ebp]
	mov	DWORD PTR $T246750[ebp], edx
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	mov	ecx, DWORD PTR __Oldend$223251[ebp]
	sub	ecx, eax
	mov	DWORD PTR $T246749[ebp], ecx
	mov	edx, DWORD PTR $T246763[ebp]
	mov	DWORD PTR $T246748[ebp], edx
$LN197@Insert_n:
	mov	eax, DWORD PTR $T246748[ebp]
	cmp	eax, DWORD PTR $T246749[ebp]
	je	SHORT $LN186@Insert_n
	mov	ecx, DWORD PTR $T246749[ebp]
	sub	ecx, 4
	mov	DWORD PTR $T246749[ebp], ecx
	mov	edx, DWORD PTR $T246750[ebp]
	sub	edx, 4
	mov	DWORD PTR $T246750[ebp], edx
	mov	eax, DWORD PTR $T246749[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR $T246750[ebp]
	mov	DWORD PTR [edx], ecx
	jmp	SHORT $LN197@Insert_n
$LN186@Insert_n:

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T246798[ebp], eax
	jmp	SHORT $LN204@Insert_n
$LN203@Insert_n:
	mov	ecx, DWORD PTR $T246798[ebp]
	add	ecx, 4
	mov	DWORD PTR $T246798[ebp], ecx
$LN204@Insert_n:
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	cmp	DWORD PTR $T246798[ebp], ecx
	je	SHORT $LN16@Insert_n
	mov	edx, DWORD PTR __Tmp$223250[ebp]
	mov	eax, DWORD PTR $T246798[ebp]
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN203@Insert_n
$LN16@Insert_n:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-428]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >::_Insert_n
PUBLIC	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
PUBLIC	??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
PUBLIC	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$2
__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$0
__unwindtable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$5
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$6
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
_TEXT	SEGMENT
tv84 = -424						; size = 4
tv304 = -420						; size = 4
tv290 = -416						; size = 4
tv282 = -412						; size = 4
_this$ = -408						; size = 4
$T247500 = -404						; size = 4
$T247492 = -400						; size = 4
$T247491 = -396						; size = 4
$T247468 = -390						; size = 1
$T247467 = -389						; size = 1
$T247466 = -388						; size = 4
$T247465 = -384						; size = 4
$T247453 = -377						; size = 1
$T247452 = -376						; size = 4
$T247451 = -372						; size = 4
$T247450 = -368						; size = 4
__Cat$247484 = -364					; size = 1
$T247482 = -363						; size = 1
$T247481 = -362						; size = 1
__Cat$247474 = -360					; size = 1
$T247472 = -359						; size = 1
$T247471 = -358						; size = 1
$T247470 = -357						; size = 1
$T247425 = -356						; size = 4
$T247406 = -352						; size = 4
$T247389 = -345						; size = 1
$T247388 = -344						; size = 4
$T247378 = -340						; size = 4
$T247377 = -336						; size = 4
__Cat$247421 = -330					; size = 1
$T247419 = -329						; size = 1
$T247418 = -328						; size = 1
__Cat$247413 = -327					; size = 1
$T247411 = -326						; size = 1
$T247410 = -325						; size = 1
$T247353 = -324						; size = 4
$T247345 = -320						; size = 4
$T247337 = -316						; size = 4
$T247319 = -312						; size = 4
$T247318 = -308						; size = 4
$T247302 = -304						; size = 4
__Cat$247326 = -298					; size = 1
$T247324 = -297						; size = 1
$T247276 = -296						; size = 4
$T247275 = -292						; size = 4
$T247265 = -288						; size = 4
__Cat$247273 = -283					; size = 1
$T247271 = -282						; size = 1
$T247270 = -281						; size = 1
$T247249 = -280						; size = 4
$T247230 = -276						; size = 4
$T247213 = -269						; size = 1
$T247212 = -268						; size = 4
$T247202 = -264						; size = 4
$T247201 = -260						; size = 4
__Cat$247244 = -254					; size = 1
$T247242 = -253						; size = 1
$T247241 = -252						; size = 1
__Cat$247237 = -251					; size = 1
$T247235 = -250						; size = 1
$T247234 = -249						; size = 1
$T247177 = -248						; size = 4
$T247176 = -244						; size = 4
$T247172 = -240						; size = 4
$T247171 = -236						; size = 4
$T247153 = -232						; size = 4
$T247152 = -228						; size = 4
$T247136 = -224						; size = 4
__Cat$247159 = -218					; size = 1
$T247157 = -217						; size = 1
$T247087 = -216						; size = 4
$T247086 = -212						; size = 4
$T247070 = -208						; size = 4
__Cat$247093 = -202					; size = 1
$T247091 = -201						; size = 1
$T247027 = -200						; size = 4
$T247026 = -196						; size = 4
$T247010 = -192						; size = 4
__Cat$247034 = -186					; size = 1
$T247031 = -185						; size = 1
$T246984 = -184						; size = 4
$T246972 = -180						; size = 4
$T246962 = -173						; size = 1
$T246961 = -172						; size = 4
__Cat$246979 = -167					; size = 1
$T246976 = -166						; size = 1
$T246975 = -165						; size = 1
$T246949 = -164						; size = 4
$T246937 = -160						; size = 4
$T246927 = -153						; size = 1
$T246926 = -152						; size = 4
__Cat$246944 = -147					; size = 1
$T246941 = -146						; size = 1
$T246940 = -145						; size = 1
$T246914 = -144						; size = 4
$T246904 = -140						; size = 4
__Cat$246912 = -135					; size = 1
$T246909 = -134						; size = 1
$T246908 = -133						; size = 1
__Count$246873 = -120					; size = 4
__Count$246850 = -48					; size = 4
__Tmp$223304 = -44					; size = 4
__Oldend$223305 = -40					; size = 4
__Tmp$223294 = -36					; size = 4
__Ncopied$223281 = -32					; size = 4
__Newvec$223279 = -28					; size = 4
__Whereoff$223280 = -24					; size = 4
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 408				; 00000198H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN29@Insert_n@2
	mov	DWORD PTR tv282[ebp], 0
	jmp	SHORT $LN27@Insert_n@2
$LN29@Insert_n@2:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	mov	DWORD PTR tv282[ebp], eax
$LN27@Insert_n@2:
	mov	ecx, DWORD PTR tv282[ebp]
	mov	DWORD PTR __Capacity$[ebp], ecx

; 1162 : 
; 1163 : 		if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN14@Insert_n@2
	jmp	$LN16@Insert_n@2
$LN14@Insert_n@2:

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	DWORD PTR __Count$246850[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$246850[ebp], 0
	jbe	SHORT $LN35@Insert_n@2
	mov	edx, DWORD PTR __Count$246850[ebp]
	mov	DWORD PTR tv290[ebp], edx
	jmp	SHORT $LN37@Insert_n@2
$LN35@Insert_n@2:
	mov	DWORD PTR tv290[ebp], 1
$LN37@Insert_n@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	eax, DWORD PTR tv290[ebp]
	sub	eax, edx
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN42@Insert_n@2

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Xlen
	jmp	$LN16@Insert_n@2

; 1167 : 		else if (_Capacity < size() + _Count)

$LN42@Insert_n@2:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	add	eax, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], eax
	jae	$LN10@Insert_n@2

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	DWORD PTR __Count$246873[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$246873[ebp], 0
	jbe	SHORT $LN48@Insert_n@2
	mov	ecx, DWORD PTR __Count$246873[ebp]
	mov	DWORD PTR tv304[ebp], ecx
	jmp	SHORT $LN44@Insert_n@2
$LN48@Insert_n@2:
	mov	DWORD PTR tv304[ebp], 1
$LN44@Insert_n@2:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	mov	eax, DWORD PTR tv304[ebp]
	sub	eax, edx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN17@Insert_n@2
	mov	DWORD PTR tv84[ebp], 0
	jmp	SHORT $LN18@Insert_n@2
$LN17@Insert_n@2:
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	add	ecx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv84[ebp], ecx
$LN18@Insert_n@2:
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx

; 1171 : 			if (_Capacity < size() + _Count)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	add	edx, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], edx
	jae	SHORT $LN54@Insert_n@2

; 1172 : 				_Capacity = size() + _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

$LN54@Insert_n@2:
	push	0
	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	call	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
	add	esp, 8
	mov	DWORD PTR __Newvec$223279[ebp], eax

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Where$[ebp]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	DWORD PTR __Whereoff$223280[ebp], edx

; 1175 : 			int _Ncopied = 0;

	mov	DWORD PTR __Ncopied$223281[ebp], 0

; 1176 : 
; 1177 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	eax, DWORD PTR __Whereoff$223280[ebp]
	mov	ecx, DWORD PTR __Newvec$223279[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR $T246914[ebp], edx
	mov	eax, DWORD PTR $T246914[ebp]
	mov	DWORD PTR $T246904[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T246908[ebp], cl
	mov	dl, BYTE PTR __Cat$246912[ebp]
	mov	BYTE PTR $T246909[ebp], dl
	movzx	eax, BYTE PTR $T246908[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T246909[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T246904[ebp]
	push	edx
	call	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H

; 1179 : 			++_Ncopied;

	mov	eax, DWORD PTR __Ncopied$223281[ebp]
	add	eax, 1
	mov	DWORD PTR __Ncopied$223281[ebp], eax

; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T246949[ebp], edx
	mov	eax, DWORD PTR __Newvec$223279[ebp]
	mov	DWORD PTR $T246937[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T246940[ebp], cl
	mov	dl, BYTE PTR __Cat$246944[ebp]
	mov	BYTE PTR $T246941[ebp], dl
	mov	al, BYTE PTR $T246940[ebp]
	mov	BYTE PTR $T246927[ebp], al
	mov	ecx, DWORD PTR $T246937[ebp]
	mov	DWORD PTR $T246926[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR $T246926[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T246949[ebp]
	push	edx
	call	??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
	add	esp, 16					; 00000010H

; 1182 : 			++_Ncopied;

	mov	eax, DWORD PTR __Ncopied$223281[ebp]
	add	eax, 1
	mov	DWORD PTR __Ncopied$223281[ebp], eax

; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T246984[ebp], edx
	mov	eax, DWORD PTR __Whereoff$223280[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Newvec$223279[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR $T246972[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T246975[ebp], al
	mov	cl, BYTE PTR __Cat$246979[ebp]
	mov	BYTE PTR $T246976[ebp], cl
	mov	dl, BYTE PTR $T246975[ebp]
	mov	BYTE PTR $T246962[ebp], dl
	mov	eax, DWORD PTR $T246972[ebp]
	mov	DWORD PTR $T246961[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T246961[ebp]
	push	edx
	mov	eax, DWORD PTR $T246984[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	call	??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
	add	esp, 16					; 00000010H
	jmp	$LN19@Insert_n@2
__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)

	cmp	DWORD PTR __Ncopied$223281[ebp], 1
	jle	SHORT $LN7@Insert_n@2

; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);

	mov	edx, DWORD PTR __Whereoff$223280[ebp]
	mov	eax, DWORD PTR __Newvec$223279[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T247027[ebp], ecx
	mov	edx, DWORD PTR __Newvec$223279[ebp]
	mov	DWORD PTR $T247026[ebp], edx
	mov	al, BYTE PTR __Cat$247034[ebp]
	mov	BYTE PTR $T247031[ebp], al
	mov	ecx, DWORD PTR $T247026[ebp]
	mov	DWORD PTR $T247010[ebp], ecx
	jmp	SHORT $LN91@Insert_n@2
$LN90@Insert_n@2:
	mov	edx, DWORD PTR $T247010[ebp]
	add	edx, 4
	mov	DWORD PTR $T247010[ebp], edx
$LN91@Insert_n@2:
	mov	eax, DWORD PTR $T247010[ebp]
	cmp	eax, DWORD PTR $T247027[ebp]
	je	SHORT $LN7@Insert_n@2
	jmp	SHORT $LN90@Insert_n@2
$LN7@Insert_n@2:

; 1188 : 			if (0 < _Ncopied)

	cmp	DWORD PTR __Ncopied$223281[ebp], 0
	jle	SHORT $LN6@Insert_n@2

; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);

	mov	ecx, DWORD PTR __Whereoff$223280[ebp]
	mov	edx, DWORD PTR __Newvec$223279[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR $T247087[ebp], edx
	mov	eax, DWORD PTR __Whereoff$223280[ebp]
	mov	ecx, DWORD PTR __Newvec$223279[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR $T247086[ebp], edx
	mov	al, BYTE PTR __Cat$247093[ebp]
	mov	BYTE PTR $T247091[ebp], al
	mov	ecx, DWORD PTR $T247086[ebp]
	mov	DWORD PTR $T247070[ebp], ecx
	jmp	SHORT $LN106@Insert_n@2
$LN105@Insert_n@2:
	mov	edx, DWORD PTR $T247070[ebp]
	add	edx, 4
	mov	DWORD PTR $T247070[ebp], edx
$LN106@Insert_n@2:
	mov	eax, DWORD PTR $T247070[ebp]
	cmp	eax, DWORD PTR $T247087[ebp]
	je	SHORT $LN6@Insert_n@2
	jmp	SHORT $LN105@Insert_n@2
$LN6@Insert_n@2:

; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	ecx, DWORD PTR __Newvec$223279[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1192 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN115@Insert_n@2
	ret	0
$LN19@Insert_n@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 1193 : 
; 1194 : 			_Count += size();

$LN115@Insert_n@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	add	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Count$[ebp], ecx

; 1195 : 			if (_Myfirst != 0)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	$LN5@Insert_n@2

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T247172[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T247171[ebp], eax
	mov	ecx, DWORD PTR $T247172[ebp]
	mov	DWORD PTR $T247153[ebp], ecx
	mov	edx, DWORD PTR $T247171[ebp]
	mov	DWORD PTR $T247152[ebp], edx
	mov	al, BYTE PTR __Cat$247159[ebp]
	mov	BYTE PTR $T247157[ebp], al
	mov	ecx, DWORD PTR $T247152[ebp]
	mov	DWORD PTR $T247136[ebp], ecx
	jmp	SHORT $LN125@Insert_n@2
$LN124@Insert_n@2:
	mov	edx, DWORD PTR $T247136[ebp]
	add	edx, 4
	mov	DWORD PTR $T247136[ebp], edx
$LN125@Insert_n@2:
	mov	eax, DWORD PTR $T247136[ebp]
	cmp	eax, DWORD PTR $T247153[ebp]
	je	SHORT $LN117@Insert_n@2
	jmp	SHORT $LN124@Insert_n@2
$LN117@Insert_n@2:

; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	mov	DWORD PTR $T247177[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T247176[ebp], edx
	mov	eax, DWORD PTR $T247176[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@Insert_n@2:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	ecx, DWORD PTR __Capacity$[ebp]
	mov	edx, DWORD PTR __Newvec$223279[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 1206 : 			_Mylast = _Newvec + _Count;

	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Newvec$223279[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newvec$223279[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	$LN16@Insert_n@2
$LN10@Insert_n@2:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, DWORD PTR __Where$[ebp]
	sar	eax, 2
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN3@Insert_n@2

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$223294[ebp], edx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T247249[ebp], ecx
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T247230[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T247234[ebp], dl
	mov	al, BYTE PTR __Cat$247237[ebp]
	mov	BYTE PTR $T247235[ebp], al
	mov	cl, BYTE PTR $T247234[ebp]
	mov	BYTE PTR $T247213[ebp], cl
	mov	edx, DWORD PTR $T247230[ebp]
	mov	DWORD PTR $T247212[ebp], edx
	mov	eax, DWORD PTR $T247212[ebp]
	mov	DWORD PTR $T247202[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T247201[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T247241[ebp], dl
	mov	al, BYTE PTR __Cat$247244[ebp]
	mov	BYTE PTR $T247242[ebp], al
	movzx	ecx, BYTE PTR $T247241[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T247242[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T247202[ebp]
	push	ecx
	mov	edx, DWORD PTR $T247249[ebp]
	push	edx
	mov	eax, DWORD PTR $T247201[ebp]
	push	eax
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H

; 1215 : 
; 1216 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 2

; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR __Where$[ebp]
	sar	edx, 2
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, edx
	mov	DWORD PTR $T247276[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T247275[ebp], edx
	mov	eax, DWORD PTR $T247275[ebp]
	mov	DWORD PTR $T247265[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T247270[ebp], cl
	mov	dl, BYTE PTR __Cat$247273[ebp]
	mov	BYTE PTR $T247271[ebp], dl
	movzx	eax, BYTE PTR $T247270[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T247271[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	lea	eax, DWORD PTR __Tmp$223294[ebp]
	push	eax
	mov	ecx, DWORD PTR $T247276[ebp]
	push	ecx
	mov	edx, DWORD PTR $T247265[ebp]
	push	edx
	call	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H
	jmp	SHORT $LN21@Insert_n@2
__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$2:

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T247337[ebp], eax
	mov	ecx, DWORD PTR $T247337[ebp]
	mov	DWORD PTR $T247319[ebp], ecx
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T247318[ebp], ecx
	mov	dl, BYTE PTR __Cat$247326[ebp]
	mov	BYTE PTR $T247324[ebp], dl
	mov	eax, DWORD PTR $T247318[ebp]
	mov	DWORD PTR $T247302[ebp], eax
	jmp	SHORT $LN160@Insert_n@2
$LN159@Insert_n@2:
	mov	ecx, DWORD PTR $T247302[ebp]
	add	ecx, 4
	mov	DWORD PTR $T247302[ebp], ecx
$LN160@Insert_n@2:
	mov	edx, DWORD PTR $T247302[ebp]
	cmp	edx, DWORD PTR $T247319[ebp]
	je	SHORT $LN152@Insert_n@2
	jmp	SHORT $LN159@Insert_n@2
$LN152@Insert_n@2:

; 1221 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1222 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$3
	ret	0
$LN21@Insert_n@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z$3:

; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, edx
	mov	DWORD PTR $T247353[ebp], ecx
	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T247345[ebp], edx
	jmp	SHORT $LN171@Insert_n@2
$LN170@Insert_n@2:
	mov	eax, DWORD PTR $T247345[ebp]
	add	eax, 4
	mov	DWORD PTR $T247345[ebp], eax
$LN171@Insert_n@2:
	mov	ecx, DWORD PTR $T247345[ebp]
	cmp	ecx, DWORD PTR $T247353[ebp]
	je	SHORT $LN167@Insert_n@2
	mov	edx, DWORD PTR __Tmp$223294[ebp]
	mov	eax, DWORD PTR $T247345[ebp]
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN170@Insert_n@2
$LN167@Insert_n@2:

; 1232 : 			}
; 1233 : 		else

	jmp	$LN16@Insert_n@2
$LN3@Insert_n@2:

; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$223304[ebp], edx

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Oldend$223305[ebp], ecx

; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T247425[ebp], eax
	mov	ecx, DWORD PTR $T247425[ebp]
	mov	DWORD PTR $T247406[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T247410[ebp], dl
	mov	al, BYTE PTR __Cat$247413[ebp]
	mov	BYTE PTR $T247411[ebp], al
	mov	cl, BYTE PTR $T247410[ebp]
	mov	BYTE PTR $T247389[ebp], cl
	mov	edx, DWORD PTR $T247406[ebp]
	mov	DWORD PTR $T247388[ebp], edx
	mov	eax, DWORD PTR $T247388[ebp]
	mov	DWORD PTR $T247378[ebp], eax
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	mov	edx, DWORD PTR __Oldend$223305[ebp]
	sub	edx, ecx
	mov	DWORD PTR $T247377[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T247418[ebp], al
	mov	cl, BYTE PTR __Cat$247421[ebp]
	mov	BYTE PTR $T247419[ebp], cl
	movzx	edx, BYTE PTR $T247418[ebp]
	push	edx
	movzx	eax, BYTE PTR $T247419[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T247378[ebp]
	push	edx
	mov	eax, DWORD PTR __Oldend$223305[ebp]
	push	eax
	mov	ecx, DWORD PTR $T247377[ebp]
	push	ecx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	mov	eax, DWORD PTR __Oldend$223305[ebp]
	mov	DWORD PTR $T247492[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T247491[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T247470[ebp], dl
	mov	al, BYTE PTR __Cat$247474[ebp]
	mov	BYTE PTR $T247471[ebp], al
	mov	cl, BYTE PTR $T247470[ebp]
	mov	BYTE PTR $T247468[ebp], cl
	mov	dl, BYTE PTR $T247472[ebp]
	mov	BYTE PTR $T247467[ebp], dl
	mov	eax, DWORD PTR $T247492[ebp]
	mov	DWORD PTR $T247466[ebp], eax
	mov	ecx, DWORD PTR $T247491[ebp]
	mov	DWORD PTR $T247465[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T247481[ebp], dl
	mov	al, BYTE PTR __Cat$247484[ebp]
	mov	BYTE PTR $T247482[ebp], al
	mov	cl, BYTE PTR $T247481[ebp]
	mov	BYTE PTR $T247453[ebp], cl
	mov	edx, DWORD PTR $T247466[ebp]
	mov	DWORD PTR $T247452[ebp], edx
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	mov	ecx, DWORD PTR __Oldend$223305[ebp]
	sub	ecx, eax
	mov	DWORD PTR $T247451[ebp], ecx
	mov	edx, DWORD PTR $T247465[ebp]
	mov	DWORD PTR $T247450[ebp], edx
$LN197@Insert_n@2:
	mov	eax, DWORD PTR $T247450[ebp]
	cmp	eax, DWORD PTR $T247451[ebp]
	je	SHORT $LN186@Insert_n@2
	mov	ecx, DWORD PTR $T247451[ebp]
	sub	ecx, 4
	mov	DWORD PTR $T247451[ebp], ecx
	mov	edx, DWORD PTR $T247452[ebp]
	sub	edx, 4
	mov	DWORD PTR $T247452[ebp], edx
	mov	eax, DWORD PTR $T247451[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR $T247452[ebp]
	mov	DWORD PTR [edx], ecx
	jmp	SHORT $LN197@Insert_n@2
$LN186@Insert_n@2:

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T247500[ebp], eax
	jmp	SHORT $LN204@Insert_n@2
$LN203@Insert_n@2:
	mov	ecx, DWORD PTR $T247500[ebp]
	add	ecx, 4
	mov	DWORD PTR $T247500[ebp], ecx
$LN204@Insert_n@2:
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	cmp	DWORD PTR $T247500[ebp], ecx
	je	SHORT $LN16@Insert_n@2
	mov	edx, DWORD PTR __Tmp$223304[ebp]
	mov	eax, DWORD PTR $T247500[ebp]
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN203@Insert_n@2
$LN16@Insert_n@2:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-428]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >::_Insert_n
PUBLIC	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
PUBLIC	??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
PUBLIC	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$2
__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$0
__unwindtable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$5
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$6
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
_TEXT	SEGMENT
tv84 = -424						; size = 4
tv304 = -420						; size = 4
tv290 = -416						; size = 4
tv282 = -412						; size = 4
_this$ = -408						; size = 4
$T248202 = -404						; size = 4
$T248194 = -400						; size = 4
$T248193 = -396						; size = 4
$T248170 = -390						; size = 1
$T248169 = -389						; size = 1
$T248168 = -388						; size = 4
$T248167 = -384						; size = 4
$T248155 = -377						; size = 1
$T248154 = -376						; size = 4
$T248153 = -372						; size = 4
$T248152 = -368						; size = 4
__Cat$248186 = -364					; size = 1
$T248184 = -363						; size = 1
$T248183 = -362						; size = 1
__Cat$248178 = -360					; size = 1
$T248175 = -359						; size = 1
$T248174 = -358						; size = 1
$T248173 = -357						; size = 1
$T248127 = -356						; size = 4
$T248108 = -352						; size = 4
$T248091 = -345						; size = 1
$T248090 = -344						; size = 4
$T248080 = -340						; size = 4
$T248079 = -336						; size = 4
__Cat$248121 = -330					; size = 1
$T248119 = -329						; size = 1
$T248118 = -328						; size = 1
__Cat$248115 = -327					; size = 1
$T248112 = -326						; size = 1
$T248111 = -325						; size = 1
$T248055 = -324						; size = 4
$T248047 = -320						; size = 4
$T248039 = -316						; size = 4
$T248021 = -312						; size = 4
$T248020 = -308						; size = 4
$T248004 = -304						; size = 4
__Cat$248028 = -298					; size = 1
$T248025 = -297						; size = 1
$T247978 = -296						; size = 4
$T247977 = -292						; size = 4
$T247967 = -288						; size = 4
__Cat$247975 = -283					; size = 1
$T247972 = -282						; size = 1
$T247971 = -281						; size = 1
$T247951 = -280						; size = 4
$T247932 = -276						; size = 4
$T247915 = -269						; size = 1
$T247914 = -268						; size = 4
$T247904 = -264						; size = 4
$T247903 = -260						; size = 4
__Cat$247946 = -254					; size = 1
$T247943 = -253						; size = 1
$T247942 = -252						; size = 1
__Cat$247939 = -251					; size = 1
$T247936 = -250						; size = 1
$T247935 = -249						; size = 1
$T247879 = -248						; size = 4
$T247878 = -244						; size = 4
$T247874 = -240						; size = 4
$T247873 = -236						; size = 4
$T247855 = -232						; size = 4
$T247854 = -228						; size = 4
$T247838 = -224						; size = 4
__Cat$247861 = -218					; size = 1
$T247858 = -217						; size = 1
$T247789 = -216						; size = 4
$T247788 = -212						; size = 4
$T247772 = -208						; size = 4
__Cat$247796 = -202					; size = 1
$T247794 = -201						; size = 1
$T247729 = -200						; size = 4
$T247728 = -196						; size = 4
$T247712 = -192						; size = 4
__Cat$247736 = -186					; size = 1
$T247734 = -185						; size = 1
$T247686 = -184						; size = 4
$T247674 = -180						; size = 4
$T247664 = -173						; size = 1
$T247663 = -172						; size = 4
__Cat$247681 = -167					; size = 1
$T247679 = -166						; size = 1
$T247678 = -165						; size = 1
$T247651 = -164						; size = 4
$T247639 = -160						; size = 4
$T247629 = -153						; size = 1
$T247628 = -152						; size = 4
__Cat$247646 = -147					; size = 1
$T247644 = -146						; size = 1
$T247643 = -145						; size = 1
$T247616 = -144						; size = 4
$T247606 = -140						; size = 4
__Cat$247614 = -135					; size = 1
$T247612 = -134						; size = 1
$T247611 = -133						; size = 1
__Count$247575 = -120					; size = 4
__Count$247549 = -48					; size = 4
__Tmp$223358 = -44					; size = 4
__Oldend$223359 = -40					; size = 4
__Tmp$223348 = -36					; size = 4
__Ncopied$223335 = -32					; size = 4
__Newvec$223333 = -28					; size = 4
__Whereoff$223334 = -24					; size = 4
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 408				; 00000198H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN29@Insert_n@3
	mov	DWORD PTR tv282[ebp], 0
	jmp	SHORT $LN27@Insert_n@3
$LN29@Insert_n@3:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	mov	DWORD PTR tv282[ebp], eax
$LN27@Insert_n@3:
	mov	ecx, DWORD PTR tv282[ebp]
	mov	DWORD PTR __Capacity$[ebp], ecx

; 1162 : 
; 1163 : 		if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN14@Insert_n@3
	jmp	$LN16@Insert_n@3
$LN14@Insert_n@3:

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	DWORD PTR __Count$247549[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$247549[ebp], 0
	jbe	SHORT $LN35@Insert_n@3
	mov	edx, DWORD PTR __Count$247549[ebp]
	mov	DWORD PTR tv290[ebp], edx
	jmp	SHORT $LN37@Insert_n@3
$LN35@Insert_n@3:
	mov	DWORD PTR tv290[ebp], 1
$LN37@Insert_n@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	eax, DWORD PTR tv290[ebp]
	sub	eax, edx
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN42@Insert_n@3

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@KAXXZ ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Xlen
	jmp	$LN16@Insert_n@3

; 1167 : 		else if (_Capacity < size() + _Count)

$LN42@Insert_n@3:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	add	eax, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], eax
	jae	$LN10@Insert_n@3

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	DWORD PTR __Count$247575[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$247575[ebp], 0
	jbe	SHORT $LN48@Insert_n@3
	mov	ecx, DWORD PTR __Count$247575[ebp]
	mov	DWORD PTR tv304[ebp], ecx
	jmp	SHORT $LN44@Insert_n@3
$LN48@Insert_n@3:
	mov	DWORD PTR tv304[ebp], 1
$LN44@Insert_n@3:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	mov	eax, DWORD PTR tv304[ebp]
	sub	eax, edx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN17@Insert_n@3
	mov	DWORD PTR tv84[ebp], 0
	jmp	SHORT $LN18@Insert_n@3
$LN17@Insert_n@3:
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	add	ecx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv84[ebp], ecx
$LN18@Insert_n@3:
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx

; 1171 : 			if (_Capacity < size() + _Count)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	add	edx, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], edx
	jae	SHORT $LN54@Insert_n@3

; 1172 : 				_Capacity = size() + _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

$LN54@Insert_n@3:
	push	0
	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	call	??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAV120@@Z ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
	add	esp, 8
	mov	DWORD PTR __Newvec$223333[ebp], eax

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Where$[ebp]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	DWORD PTR __Whereoff$223334[ebp], edx

; 1175 : 			int _Ncopied = 0;

	mov	DWORD PTR __Ncopied$223335[ebp], 0

; 1176 : 
; 1177 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	eax, DWORD PTR __Whereoff$223334[ebp]
	mov	ecx, DWORD PTR __Newvec$223333[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR $T247616[ebp], edx
	mov	eax, DWORD PTR $T247616[ebp]
	mov	DWORD PTR $T247606[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T247611[ebp], cl
	mov	dl, BYTE PTR __Cat$247614[ebp]
	mov	BYTE PTR $T247612[ebp], dl
	movzx	eax, BYTE PTR $T247611[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T247612[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T247606[ebp]
	push	edx
	call	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H

; 1179 : 			++_Ncopied;

	mov	eax, DWORD PTR __Ncopied$223335[ebp]
	add	eax, 1
	mov	DWORD PTR __Ncopied$223335[ebp], eax

; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T247651[ebp], edx
	mov	eax, DWORD PTR __Newvec$223333[ebp]
	mov	DWORD PTR $T247639[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T247643[ebp], cl
	mov	dl, BYTE PTR __Cat$247646[ebp]
	mov	BYTE PTR $T247644[ebp], dl
	mov	al, BYTE PTR $T247643[ebp]
	mov	BYTE PTR $T247629[ebp], al
	mov	ecx, DWORD PTR $T247639[ebp]
	mov	DWORD PTR $T247628[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR $T247628[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T247651[ebp]
	push	edx
	call	??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
	add	esp, 16					; 00000010H

; 1182 : 			++_Ncopied;

	mov	eax, DWORD PTR __Ncopied$223335[ebp]
	add	eax, 1
	mov	DWORD PTR __Ncopied$223335[ebp], eax

; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T247686[ebp], edx
	mov	eax, DWORD PTR __Whereoff$223334[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Newvec$223333[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR $T247674[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T247678[ebp], al
	mov	cl, BYTE PTR __Cat$247681[ebp]
	mov	BYTE PTR $T247679[ebp], cl
	mov	dl, BYTE PTR $T247678[ebp]
	mov	BYTE PTR $T247664[ebp], dl
	mov	eax, DWORD PTR $T247674[ebp]
	mov	DWORD PTR $T247663[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T247663[ebp]
	push	edx
	mov	eax, DWORD PTR $T247686[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	call	??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
	add	esp, 16					; 00000010H
	jmp	$LN19@Insert_n@3
__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)

	cmp	DWORD PTR __Ncopied$223335[ebp], 1
	jle	SHORT $LN7@Insert_n@3

; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);

	mov	edx, DWORD PTR __Whereoff$223334[ebp]
	mov	eax, DWORD PTR __Newvec$223333[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T247729[ebp], ecx
	mov	edx, DWORD PTR __Newvec$223333[ebp]
	mov	DWORD PTR $T247728[ebp], edx
	mov	al, BYTE PTR __Cat$247736[ebp]
	mov	BYTE PTR $T247734[ebp], al
	mov	ecx, DWORD PTR $T247728[ebp]
	mov	DWORD PTR $T247712[ebp], ecx
	jmp	SHORT $LN91@Insert_n@3
$LN90@Insert_n@3:
	mov	edx, DWORD PTR $T247712[ebp]
	add	edx, 4
	mov	DWORD PTR $T247712[ebp], edx
$LN91@Insert_n@3:
	mov	eax, DWORD PTR $T247712[ebp]
	cmp	eax, DWORD PTR $T247729[ebp]
	je	SHORT $LN7@Insert_n@3
	jmp	SHORT $LN90@Insert_n@3
$LN7@Insert_n@3:

; 1188 : 			if (0 < _Ncopied)

	cmp	DWORD PTR __Ncopied$223335[ebp], 0
	jle	SHORT $LN6@Insert_n@3

; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);

	mov	ecx, DWORD PTR __Whereoff$223334[ebp]
	mov	edx, DWORD PTR __Newvec$223333[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR $T247789[ebp], edx
	mov	eax, DWORD PTR __Whereoff$223334[ebp]
	mov	ecx, DWORD PTR __Newvec$223333[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR $T247788[ebp], edx
	mov	al, BYTE PTR __Cat$247796[ebp]
	mov	BYTE PTR $T247794[ebp], al
	mov	ecx, DWORD PTR $T247788[ebp]
	mov	DWORD PTR $T247772[ebp], ecx
	jmp	SHORT $LN106@Insert_n@3
$LN105@Insert_n@3:
	mov	edx, DWORD PTR $T247772[ebp]
	add	edx, 4
	mov	DWORD PTR $T247772[ebp], edx
$LN106@Insert_n@3:
	mov	eax, DWORD PTR $T247772[ebp]
	cmp	eax, DWORD PTR $T247789[ebp]
	je	SHORT $LN6@Insert_n@3
	jmp	SHORT $LN105@Insert_n@3
$LN6@Insert_n@3:

; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	ecx, DWORD PTR __Newvec$223333[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1192 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN115@Insert_n@3
	ret	0
$LN19@Insert_n@3:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 1193 : 
; 1194 : 			_Count += size();

$LN115@Insert_n@3:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	add	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Count$[ebp], ecx

; 1195 : 			if (_Myfirst != 0)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	$LN5@Insert_n@3

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T247874[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T247873[ebp], eax
	mov	ecx, DWORD PTR $T247874[ebp]
	mov	DWORD PTR $T247855[ebp], ecx
	mov	edx, DWORD PTR $T247873[ebp]
	mov	DWORD PTR $T247854[ebp], edx
	mov	al, BYTE PTR __Cat$247861[ebp]
	mov	BYTE PTR $T247858[ebp], al
	mov	ecx, DWORD PTR $T247854[ebp]
	mov	DWORD PTR $T247838[ebp], ecx
	jmp	SHORT $LN125@Insert_n@3
$LN124@Insert_n@3:
	mov	edx, DWORD PTR $T247838[ebp]
	add	edx, 4
	mov	DWORD PTR $T247838[ebp], edx
$LN125@Insert_n@3:
	mov	eax, DWORD PTR $T247838[ebp]
	cmp	eax, DWORD PTR $T247855[ebp]
	je	SHORT $LN117@Insert_n@3
	jmp	SHORT $LN124@Insert_n@3
$LN117@Insert_n@3:

; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	mov	DWORD PTR $T247879[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T247878[ebp], edx
	mov	eax, DWORD PTR $T247878[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@Insert_n@3:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	ecx, DWORD PTR __Capacity$[ebp]
	mov	edx, DWORD PTR __Newvec$223333[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 1206 : 			_Mylast = _Newvec + _Count;

	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Newvec$223333[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newvec$223333[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	$LN16@Insert_n@3
$LN10@Insert_n@3:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, DWORD PTR __Where$[ebp]
	sar	eax, 2
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN3@Insert_n@3

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$223348[ebp], edx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T247951[ebp], ecx
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T247932[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T247935[ebp], dl
	mov	al, BYTE PTR __Cat$247939[ebp]
	mov	BYTE PTR $T247936[ebp], al
	mov	cl, BYTE PTR $T247935[ebp]
	mov	BYTE PTR $T247915[ebp], cl
	mov	edx, DWORD PTR $T247932[ebp]
	mov	DWORD PTR $T247914[ebp], edx
	mov	eax, DWORD PTR $T247914[ebp]
	mov	DWORD PTR $T247904[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T247903[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T247942[ebp], dl
	mov	al, BYTE PTR __Cat$247946[ebp]
	mov	BYTE PTR $T247943[ebp], al
	movzx	ecx, BYTE PTR $T247942[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T247943[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T247904[ebp]
	push	ecx
	mov	edx, DWORD PTR $T247951[ebp]
	push	edx
	mov	eax, DWORD PTR $T247903[ebp]
	push	eax
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H

; 1215 : 
; 1216 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 2

; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR __Where$[ebp]
	sar	edx, 2
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, edx
	mov	DWORD PTR $T247978[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T247977[ebp], edx
	mov	eax, DWORD PTR $T247977[ebp]
	mov	DWORD PTR $T247967[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T247971[ebp], cl
	mov	dl, BYTE PTR __Cat$247975[ebp]
	mov	BYTE PTR $T247972[ebp], dl
	movzx	eax, BYTE PTR $T247971[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T247972[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	lea	eax, DWORD PTR __Tmp$223348[ebp]
	push	eax
	mov	ecx, DWORD PTR $T247978[ebp]
	push	ecx
	mov	edx, DWORD PTR $T247967[ebp]
	push	edx
	call	??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H
	jmp	SHORT $LN21@Insert_n@3
__catch$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$2:

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T248039[ebp], eax
	mov	ecx, DWORD PTR $T248039[ebp]
	mov	DWORD PTR $T248021[ebp], ecx
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T248020[ebp], ecx
	mov	dl, BYTE PTR __Cat$248028[ebp]
	mov	BYTE PTR $T248025[ebp], dl
	mov	eax, DWORD PTR $T248020[ebp]
	mov	DWORD PTR $T248004[ebp], eax
	jmp	SHORT $LN160@Insert_n@3
$LN159@Insert_n@3:
	mov	ecx, DWORD PTR $T248004[ebp]
	add	ecx, 4
	mov	DWORD PTR $T248004[ebp], ecx
$LN160@Insert_n@3:
	mov	edx, DWORD PTR $T248004[ebp]
	cmp	edx, DWORD PTR $T248021[ebp]
	je	SHORT $LN152@Insert_n@3
	jmp	SHORT $LN159@Insert_n@3
$LN152@Insert_n@3:

; 1221 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1222 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$3
	ret	0
$LN21@Insert_n@3:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z$3:

; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, edx
	mov	DWORD PTR $T248055[ebp], ecx
	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T248047[ebp], edx
	jmp	SHORT $LN171@Insert_n@3
$LN170@Insert_n@3:
	mov	eax, DWORD PTR $T248047[ebp]
	add	eax, 4
	mov	DWORD PTR $T248047[ebp], eax
$LN171@Insert_n@3:
	mov	ecx, DWORD PTR $T248047[ebp]
	cmp	ecx, DWORD PTR $T248055[ebp]
	je	SHORT $LN167@Insert_n@3
	mov	edx, DWORD PTR __Tmp$223348[ebp]
	mov	eax, DWORD PTR $T248047[ebp]
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN170@Insert_n@3
$LN167@Insert_n@3:

; 1232 : 			}
; 1233 : 		else

	jmp	$LN16@Insert_n@3
$LN3@Insert_n@3:

; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$223358[ebp], edx

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Oldend$223359[ebp], ecx

; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T248127[ebp], eax
	mov	ecx, DWORD PTR $T248127[ebp]
	mov	DWORD PTR $T248108[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T248111[ebp], dl
	mov	al, BYTE PTR __Cat$248115[ebp]
	mov	BYTE PTR $T248112[ebp], al
	mov	cl, BYTE PTR $T248111[ebp]
	mov	BYTE PTR $T248091[ebp], cl
	mov	edx, DWORD PTR $T248108[ebp]
	mov	DWORD PTR $T248090[ebp], edx
	mov	eax, DWORD PTR $T248090[ebp]
	mov	DWORD PTR $T248080[ebp], eax
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	mov	edx, DWORD PTR __Oldend$223359[ebp]
	sub	edx, ecx
	mov	DWORD PTR $T248079[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T248118[ebp], al
	mov	cl, BYTE PTR __Cat$248121[ebp]
	mov	BYTE PTR $T248119[ebp], cl
	movzx	edx, BYTE PTR $T248118[ebp]
	push	edx
	movzx	eax, BYTE PTR $T248119[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T248080[ebp]
	push	edx
	mov	eax, DWORD PTR __Oldend$223359[ebp]
	push	eax
	mov	ecx, DWORD PTR $T248079[ebp]
	push	ecx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	mov	eax, DWORD PTR __Oldend$223359[ebp]
	mov	DWORD PTR $T248194[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T248193[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T248173[ebp], dl
	mov	al, BYTE PTR __Cat$248178[ebp]
	mov	BYTE PTR $T248174[ebp], al
	mov	cl, BYTE PTR $T248173[ebp]
	mov	BYTE PTR $T248170[ebp], cl
	mov	dl, BYTE PTR $T248175[ebp]
	mov	BYTE PTR $T248169[ebp], dl
	mov	eax, DWORD PTR $T248194[ebp]
	mov	DWORD PTR $T248168[ebp], eax
	mov	ecx, DWORD PTR $T248193[ebp]
	mov	DWORD PTR $T248167[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T248183[ebp], dl
	mov	al, BYTE PTR __Cat$248186[ebp]
	mov	BYTE PTR $T248184[ebp], al
	mov	cl, BYTE PTR $T248183[ebp]
	mov	BYTE PTR $T248155[ebp], cl
	mov	edx, DWORD PTR $T248168[ebp]
	mov	DWORD PTR $T248154[ebp], edx
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	mov	ecx, DWORD PTR __Oldend$223359[ebp]
	sub	ecx, eax
	mov	DWORD PTR $T248153[ebp], ecx
	mov	edx, DWORD PTR $T248167[ebp]
	mov	DWORD PTR $T248152[ebp], edx
$LN197@Insert_n@3:
	mov	eax, DWORD PTR $T248152[ebp]
	cmp	eax, DWORD PTR $T248153[ebp]
	je	SHORT $LN186@Insert_n@3
	mov	ecx, DWORD PTR $T248153[ebp]
	sub	ecx, 4
	mov	DWORD PTR $T248153[ebp], ecx
	mov	edx, DWORD PTR $T248154[ebp]
	sub	edx, 4
	mov	DWORD PTR $T248154[ebp], edx
	mov	eax, DWORD PTR $T248153[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR $T248154[ebp]
	mov	DWORD PTR [edx], ecx
	jmp	SHORT $LN197@Insert_n@3
$LN186@Insert_n@3:

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T248202[ebp], eax
	jmp	SHORT $LN204@Insert_n@3
$LN203@Insert_n@3:
	mov	ecx, DWORD PTR $T248202[ebp]
	add	ecx, 4
	mov	DWORD PTR $T248202[ebp], ecx
$LN204@Insert_n@3:
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	cmp	DWORD PTR $T248202[ebp], ecx
	je	SHORT $LN16@Insert_n@3
	mov	edx, DWORD PTR __Tmp$223358[ebp]
	mov	eax, DWORD PTR $T248202[ebp]
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN203@Insert_n@3
$LN16@Insert_n@3:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-428]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@IAEXV?$_Vector_const_iterator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@2@IABV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >::_Insert_n
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z$0
__ehfuncinfo$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z
_TEXT	SEGMENT
$T248226 = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 28
__Val2$ = 40						; size = 4
??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z PROC ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>, COMDAT

; 133  : 	{	// return pair composed from arguments

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T248226[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 134  : 	return (pair<_Ty1, _Ty2>(_Val1, _Val2));

	lea	eax, DWORD PTR __Val1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __Val2$[ebp]
	mov	DWORD PTR [ecx+28], edx
	mov	eax, DWORD PTR $T248226[ebp]
	or	eax, 1
	mov	DWORD PTR $T248226[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Val1$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 135  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z$0:
	lea	ecx, DWORD PTR __Val1$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z$1:
	mov	eax, DWORD PTR $T248226[ebp]
	and	eax, 1
	je	$LN5@make_pair
	and	DWORD PTR $T248226[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@QAE@XZ
$LN5@make_pair:
	ret	0
__ehhandler$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkArtifactClass@@@Z ENDP ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkArtifactClass *>
EXTRN	__imp__vsprintf_s:PROC
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdio.h
;	COMDAT ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Dest$ = 8						; size = 4
__Format$ = 12						; size = 4
??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ PROC		; sprintf_s<256>, COMDAT

; 322  : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(int, sprintf_s, vsprintf_s, char, _Dest, _In_z_ _Printf_format_string_ const char *, _Format)

	push	ebp
	mov	ebp, esp
	push	ecx
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	256					; 00000100H
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	DWORD PTR __imp__vsprintf_s
	add	esp, 16					; 00000010H
	mov	esp, ebp
	pop	ebp
	ret	0
??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ENDP		; sprintf_s<256>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z$0
__ehfuncinfo$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z
_TEXT	SEGMENT
$T248245 = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 28
__Val2$ = 40						; size = 4
??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z PROC ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>, COMDAT

; 133  : 	{	// return pair composed from arguments

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T248245[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 134  : 	return (pair<_Ty1, _Ty2>(_Val1, _Val2));

	lea	eax, DWORD PTR __Val1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __Val2$[ebp]
	mov	DWORD PTR [ecx+28], edx
	mov	eax, DWORD PTR $T248245[ebp]
	or	eax, 1
	mov	DWORD PTR $T248245[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Val1$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 135  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z$0:
	lea	ecx, DWORD PTR __Val1$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z$1:
	mov	eax, DWORD PTR $T248245[ebp]
	and	eax, 1
	je	$LN5@make_pair@2
	and	DWORD PTR $T248245[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@QAE@XZ
$LN5@make_pair@2:
	ret	0
__ehhandler$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4GreatWorkSlotType@@@Z ENDP ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum GreatWorkSlotType *>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z$0
__ehfuncinfo$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z
_TEXT	SEGMENT
$T248262 = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 28
__Val2$ = 40						; size = 4
??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z PROC ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>, COMDAT

; 133  : 	{	// return pair composed from arguments

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T248262[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 134  : 	return (pair<_Ty1, _Ty2>(_Val1, _Val2));

	lea	eax, DWORD PTR __Val1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __Val2$[ebp]
	mov	DWORD PTR [ecx+28], edx
	mov	eax, DWORD PTR $T248262[ebp]
	or	eax, 1
	mov	DWORD PTR $T248262[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Val1$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 135  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z$0:
	lea	ecx, DWORD PTR __Val1$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z$1:
	mov	eax, DWORD PTR $T248262[ebp]
	and	eax, 1
	je	$LN5@make_pair@3
	and	DWORD PTR $T248262[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@QAE@XZ
$LN5@make_pair@3:
	ret	0
__ehhandler$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$make_pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@YA?AU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@0@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAW4MissionTypes@@@Z ENDP ; std::make_pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,enum MissionTypes *>
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R0?AVbad_alloc@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
xdata$x	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_Ebad_alloc@std@@UAEPAXI@Z ; std::bad_alloc::`vftable'
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
CONST	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAU120@@Z
_TEXT	SEGMENT
$T248280 = -16						; size = 4
$T248276 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate
$LN3@Allocate:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 40					; 00000028H
	jae	SHORT $LN2@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T248280[ebp], 0
	lea	eax, DWORD PTR $T248280[ebp]
	push	eax
	lea	ecx, DWORD PTR $T248276[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T248276[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T248276[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 40					; 00000028H
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Node>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar@3
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAV120@@Z
_TEXT	SEGMENT
$T248294 = -16						; size = 4
$T248290 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAV120@@Z PROC ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@2

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@2
$LN3@Allocate@2:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 4
	jae	SHORT $LN2@Allocate@2

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T248294[ebp], 0
	lea	eax, DWORD PTR $T248294[ebp]
	push	eax
	lea	ecx, DWORD PTR $T248290[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T248290[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T248290[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate@2:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@2:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IPAV120@@Z ENDP ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAU120@@Z
_TEXT	SEGMENT
$T248301 = -16						; size = 4
$T248297 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@3

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@3
$LN3@Allocate@3:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 40					; 00000028H
	jae	SHORT $LN2@Allocate@3

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T248301[ebp], 0
	lea	eax, DWORD PTR $T248301[ebp]
	push	eax
	lea	ecx, DWORD PTR $T248297[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T248297[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T248297[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate@3:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 40					; 00000028H
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@3:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Node>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAV120@@Z
_TEXT	SEGMENT
$T248308 = -16						; size = 4
$T248304 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAV120@@Z PROC ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@4

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@4
$LN3@Allocate@4:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 4
	jae	SHORT $LN2@Allocate@4

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T248308[ebp], 0
	lea	eax, DWORD PTR $T248308[ebp]
	push	eax
	lea	ecx, DWORD PTR $T248304[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T248304[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T248304[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate@4:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@4:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IPAV120@@Z ENDP ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAU120@@Z
_TEXT	SEGMENT
$T248315 = -16						; size = 4
$T248311 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@5

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@5
$LN3@Allocate@5:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 40					; 00000028H
	jae	SHORT $LN2@Allocate@5

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T248315[ebp], 0
	lea	eax, DWORD PTR $T248315[ebp]
	push	eax
	lea	ecx, DWORD PTR $T248311[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T248311[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T248311[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate@5:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 40					; 00000028H
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@5:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Node>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAV120@@Z
_TEXT	SEGMENT
$T248322 = -16						; size = 4
$T248318 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAV120@@Z PROC ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@6

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@6
$LN3@Allocate@6:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 4
	jae	SHORT $LN2@Allocate@6

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T248322[ebp], 0
	lea	eax, DWORD PTR $T248322[ebp]
	push	eax
	lea	ecx, DWORD PTR $T248318[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T248318[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T248318[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate@6:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@6:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IPAV120@@Z ENDP ; std::_Allocate<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__catchsym$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$0
__unwindtable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$5
__ehfuncinfo$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_this$ = -136						; size = 4
$T248325 = -28						; size = 4
__Before$224434 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0> >, COMDAT
; _this$ = ecx

; 762  : 		void _Insert(const_iterator _Where,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 120				; 00000078H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 763  : 			_Iter _First, _Iter _Last, forward_iterator_tag)
; 764  : 		{	// insert [_First, _Last) at _Where, forward iterators
; 765  : 
; 766  :  #if _HAS_ITERATOR_DEBUGGING
; 767  : 		_DEBUG_RANGE(_First, _Last);
; 768  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 769  : 
; 770  : 		_Iter _Next = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 771  : 
; 772  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 773  : 		for (; _First != _Last; ++_First)

	jmp	SHORT $LN18@Insert@4
$LN16@Insert@4:
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __First$[ebp], edx
$LN18@Insert@4:
	mov	eax, DWORD PTR __First$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last$[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN4@Insert@4

; 774  : 			_Insert(_Where, *_First);

	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Insert
	jmp	SHORT $LN16@Insert@4
$LN4@Insert@4:
	jmp	SHORT $LN10@Insert@4
__catch$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$0:

; 775  : 		_CATCH_ALL
; 776  : 		for (; _Next != _First; ++_Next)

	jmp	SHORT $LN52@Insert@4
$LN50@Insert@4:
	mov	eax, DWORD PTR __Next$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Next$[ebp], ecx
$LN52@Insert@4:
	mov	edx, DWORD PTR __Next$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __First$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN1@Insert@4

; 777  : 			{	// undo inserts
; 778  : 			const_iterator _Before = _Where;

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Before$224434[ebp], eax

; 779  : 			erase(--_Before);

	mov	ecx, DWORD PTR __Before$224434[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Before$224434[ebp], edx
	mov	eax, DWORD PTR __Before$224434[ebp]
	push	eax
	lea	ecx, DWORD PTR $T248325[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::erase

; 780  : 			}

	jmp	SHORT $LN50@Insert@4
$LN1@Insert@4:

; 781  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 782  : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@Insert@4
	ret	0
$LN10@Insert@4:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@Insert@4:

; 783  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-140]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Const_iterator<0> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$0
__unwindtable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$5
__ehfuncinfo$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_this$ = -136						; size = 4
$T248525 = -28						; size = 4
__Before$224458 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0> >, COMDAT
; _this$ = ecx

; 762  : 		void _Insert(const_iterator _Where,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 120				; 00000078H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 763  : 			_Iter _First, _Iter _Last, forward_iterator_tag)
; 764  : 		{	// insert [_First, _Last) at _Where, forward iterators
; 765  : 
; 766  :  #if _HAS_ITERATOR_DEBUGGING
; 767  : 		_DEBUG_RANGE(_First, _Last);
; 768  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 769  : 
; 770  : 		_Iter _Next = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 771  : 
; 772  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 773  : 		for (; _First != _Last; ++_First)

	jmp	SHORT $LN18@Insert@5
$LN16@Insert@5:
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __First$[ebp], edx
$LN18@Insert@5:
	mov	eax, DWORD PTR __First$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last$[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN4@Insert@5

; 774  : 			_Insert(_Where, *_First);

	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Insert
	jmp	SHORT $LN16@Insert@5
$LN4@Insert@5:
	jmp	SHORT $LN10@Insert@5
__catch$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$0:

; 775  : 		_CATCH_ALL
; 776  : 		for (; _Next != _First; ++_Next)

	jmp	SHORT $LN52@Insert@5
$LN50@Insert@5:
	mov	eax, DWORD PTR __Next$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Next$[ebp], ecx
$LN52@Insert@5:
	mov	edx, DWORD PTR __Next$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __First$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN1@Insert@5

; 777  : 			{	// undo inserts
; 778  : 			const_iterator _Before = _Where;

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Before$224458[ebp], eax

; 779  : 			erase(--_Before);

	mov	ecx, DWORD PTR __Before$224458[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Before$224458[ebp], edx
	mov	eax, DWORD PTR __Before$224458[ebp]
	push	eax
	lea	ecx, DWORD PTR $T248525[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::erase

; 780  : 			}

	jmp	SHORT $LN50@Insert@5
$LN1@Insert@5:

; 781  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 782  : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@Insert@5
	ret	0
$LN10@Insert@5:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@Insert@5:

; 783  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-140]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Const_iterator<0> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$0
__unwindtable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$5
__ehfuncinfo$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_this$ = -136						; size = 4
$T248725 = -28						; size = 4
__Before$224482 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z PROC ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0> >, COMDAT
; _this$ = ecx

; 762  : 		void _Insert(const_iterator _Where,

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 120				; 00000078H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 763  : 			_Iter _First, _Iter _Last, forward_iterator_tag)
; 764  : 		{	// insert [_First, _Last) at _Where, forward iterators
; 765  : 
; 766  :  #if _HAS_ITERATOR_DEBUGGING
; 767  : 		_DEBUG_RANGE(_First, _Last);
; 768  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 769  : 
; 770  : 		_Iter _Next = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 771  : 
; 772  : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 773  : 		for (; _First != _Last; ++_First)

	jmp	SHORT $LN18@Insert@6
$LN16@Insert@6:
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __First$[ebp], edx
$LN18@Insert@6:
	mov	eax, DWORD PTR __First$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last$[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN4@Insert@6

; 774  : 			_Insert(_Where, *_First);

	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@2@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Insert
	jmp	SHORT $LN16@Insert@6
$LN4@Insert@6:
	jmp	SHORT $LN10@Insert@6
__catch$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z$0:

; 775  : 		_CATCH_ALL
; 776  : 		for (; _Next != _First; ++_Next)

	jmp	SHORT $LN52@Insert@6
$LN50@Insert@6:
	mov	eax, DWORD PTR __Next$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Next$[ebp], ecx
$LN52@Insert@6:
	mov	edx, DWORD PTR __Next$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __First$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN1@Insert@6

; 777  : 			{	// undo inserts
; 778  : 			const_iterator _Before = _Where;

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Before$224482[ebp], eax

; 779  : 			erase(--_Before);

	mov	ecx, DWORD PTR __Before$224482[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Before$224482[ebp], edx
	mov	eax, DWORD PTR __Before$224482[ebp]
	push	eax
	lea	ecx, DWORD PTR $T248725[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::erase

; 780  : 			}

	jmp	SHORT $LN50@Insert@6
$LN1@Insert@6:

; 781  : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 782  : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@Insert@6
	ret	0
$LN10@Insert@6:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@Insert@6:

; 783  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-140]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert@V?$_Const_iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@QAEXV?$_Const_iterator@$0A@@01@00Uforward_iterator_tag@1@@Z ENDP ; std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Insert<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Const_iterator<0> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv84 = -32						; size = 4
$T248947 = -28						; size = 4
__Vptr$248953 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT

; 393  : 	{	// copy _Count *_Val to raw _First, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 401  : 
; 402  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	jmp	SHORT $LN6@Uninit_fil
$LN5@Uninit_fil:
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Count$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_fil:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN4@Uninit_fil

; 404  : 		_Al.construct(_First, _Val);

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Vptr$248953[ebp], eax
	mov	ecx, DWORD PTR __Vptr$248953[ebp]
	mov	DWORD PTR $T248947[ebp], ecx
	cmp	DWORD PTR $T248947[ebp], 0
	je	SHORT $LN18@Uninit_fil
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T248947[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR $T248947[ebp]
	mov	DWORD PTR tv84[ebp], edx
	jmp	SHORT $LN14@Uninit_fil
$LN18@Uninit_fil:
	mov	DWORD PTR tv84[ebp], 0
$LN14@Uninit_fil:
	jmp	SHORT $LN5@Uninit_fil
$LN4@Uninit_fil:
	jmp	SHORT $LN10@Uninit_fil
__catch$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)

	jmp	SHORT $LN3@Uninit_fil
$LN2@Uninit_fil:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 4
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_fil:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	je	SHORT $LN1@Uninit_fil

; 407  : 		_Al.destroy(_Next);

	jmp	SHORT $LN2@Uninit_fil
$LN1@Uninit_fil:

; 408  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 409  : 	_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@Uninit_fil
	ret	0
$LN10@Uninit_fil:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@Uninit_fil:

; 410  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv84 = -32						; size = 4
$T248996 = -28						; size = 4
__Vptr$249002 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT

; 393  : 	{	// copy _Count *_Val to raw _First, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 401  : 
; 402  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	jmp	SHORT $LN6@Uninit_fil@2
$LN5@Uninit_fil@2:
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Count$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_fil@2:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN4@Uninit_fil@2

; 404  : 		_Al.construct(_First, _Val);

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Vptr$249002[ebp], eax
	mov	ecx, DWORD PTR __Vptr$249002[ebp]
	mov	DWORD PTR $T248996[ebp], ecx
	cmp	DWORD PTR $T248996[ebp], 0
	je	SHORT $LN18@Uninit_fil@2
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T248996[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR $T248996[ebp]
	mov	DWORD PTR tv84[ebp], edx
	jmp	SHORT $LN14@Uninit_fil@2
$LN18@Uninit_fil@2:
	mov	DWORD PTR tv84[ebp], 0
$LN14@Uninit_fil@2:
	jmp	SHORT $LN5@Uninit_fil@2
$LN4@Uninit_fil@2:
	jmp	SHORT $LN10@Uninit_fil@2
__catch$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)

	jmp	SHORT $LN3@Uninit_fil@2
$LN2@Uninit_fil@2:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 4
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_fil@2:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	je	SHORT $LN1@Uninit_fil@2

; 407  : 		_Al.destroy(_Next);

	jmp	SHORT $LN2@Uninit_fil@2
$LN1@Uninit_fil@2:

; 408  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 409  : 	_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@Uninit_fil@2
	ret	0
$LN10@Uninit_fil@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@Uninit_fil@2:

; 410  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv84 = -32						; size = 4
$T249045 = -28						; size = 4
__Vptr$249051 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT

; 393  : 	{	// copy _Count *_Val to raw _First, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 401  : 
; 402  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	jmp	SHORT $LN6@Uninit_fil@3
$LN5@Uninit_fil@3:
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Count$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_fil@3:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN4@Uninit_fil@3

; 404  : 		_Al.construct(_First, _Val);

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Vptr$249051[ebp], eax
	mov	ecx, DWORD PTR __Vptr$249051[ebp]
	mov	DWORD PTR $T249045[ebp], ecx
	cmp	DWORD PTR $T249045[ebp], 0
	je	SHORT $LN18@Uninit_fil@3
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T249045[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR $T249045[ebp]
	mov	DWORD PTR tv84[ebp], edx
	jmp	SHORT $LN14@Uninit_fil@3
$LN18@Uninit_fil@3:
	mov	DWORD PTR tv84[ebp], 0
$LN14@Uninit_fil@3:
	jmp	SHORT $LN5@Uninit_fil@3
$LN4@Uninit_fil@3:
	jmp	SHORT $LN10@Uninit_fil@3
__catch$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)

	jmp	SHORT $LN3@Uninit_fil@3
$LN2@Uninit_fil@3:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 4
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_fil@3:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	je	SHORT $LN1@Uninit_fil@3

; 407  : 		_Al.destroy(_Next);

	jmp	SHORT $LN2@Uninit_fil@3
$LN1@Uninit_fil@3:

; 408  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 409  : 	_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@Uninit_fil@3
	ret	0
$LN10@Uninit_fil@3:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@Uninit_fil@3:

; 410  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_fill_n@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@IV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAXPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@IABV120@AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,unsigned int,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0>,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
; Function compile flags: /Odtp
;	COMDAT ??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z
_TEXT	SEGMENT
__Cat$249076 = -3					; size = 1
$T249073 = -2						; size = 1
$T249072 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z PROC ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	xor	eax, eax
	mov	BYTE PTR $T249072[ebp], al
	mov	cl, BYTE PTR __Cat$249076[ebp]
	mov	BYTE PTR $T249073[ebp], cl
	movzx	edx, BYTE PTR $T249072[ebp]
	push	edx
	movzx	eax, BYTE PTR $T249073[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H

; 823  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z
_TEXT	SEGMENT
__Cat$249084 = -3					; size = 1
$T249081 = -2						; size = 1
$T249080 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z PROC ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	xor	eax, eax
	mov	BYTE PTR $T249080[ebp], al
	mov	cl, BYTE PTR __Cat$249084[ebp]
	mov	BYTE PTR $T249081[ebp], cl
	movzx	edx, BYTE PTR $T249080[ebp]
	push	edx
	movzx	eax, BYTE PTR $T249081[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H

; 823  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z
_TEXT	SEGMENT
__Cat$249092 = -3					; size = 1
$T249089 = -2						; size = 1
$T249088 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z PROC ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	xor	eax, eax
	mov	BYTE PTR $T249088[ebp], al
	mov	cl, BYTE PTR __Cat$249092[ebp]
	mov	BYTE PTR $T249089[ebp], cl
	movzx	edx, BYTE PTR $T249088[ebp]
	push	edx
	movzx	eax, BYTE PTR $T249089[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
	add	esp, 24					; 00000018H

; 823  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_uninitialized_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@stdext@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv84 = -32						; size = 4
$T249118 = -28						; size = 4
__Vptr$249124 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 128  : 
; 129  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN6@Uninit_cop
$LN5@Uninit_cop:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_cop:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop

; 131  : 		_Al.construct(_Dest, *_First);

	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Vptr$249124[ebp], ecx
	mov	edx, DWORD PTR __Vptr$249124[ebp]
	mov	DWORD PTR $T249118[ebp], edx
	cmp	DWORD PTR $T249118[ebp], 0
	je	SHORT $LN18@Uninit_cop
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR $T249118[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR $T249118[ebp]
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN14@Uninit_cop
$LN18@Uninit_cop:
	mov	DWORD PTR tv84[ebp], 0
$LN14@Uninit_cop:
	jmp	SHORT $LN5@Uninit_cop
$LN4@Uninit_cop:
	jmp	SHORT $LN10@Uninit_cop
__catch$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	jmp	SHORT $LN3@Uninit_cop
$LN2@Uninit_cop:
	mov	ecx, DWORD PTR __Next$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Next$[ebp], ecx
$LN3@Uninit_cop:
	mov	edx, DWORD PTR __Next$[ebp]
	cmp	edx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_cop

; 134  : 		_Al.destroy(_Next);

	jmp	SHORT $LN2@Uninit_cop
$LN1@Uninit_cop:

; 135  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 136  : 	_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_cop:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1:

; 137  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_cop:

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkArtifactClass@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkArtifactClass *> > >::_Iterator<0> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv84 = -32						; size = 4
$T249167 = -28						; size = 4
__Vptr$249173 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 128  : 
; 129  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN6@Uninit_cop@2
$LN5@Uninit_cop@2:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_cop@2:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop@2

; 131  : 		_Al.construct(_Dest, *_First);

	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Vptr$249173[ebp], ecx
	mov	edx, DWORD PTR __Vptr$249173[ebp]
	mov	DWORD PTR $T249167[ebp], edx
	cmp	DWORD PTR $T249167[ebp], 0
	je	SHORT $LN18@Uninit_cop@2
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR $T249167[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR $T249167[ebp]
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN14@Uninit_cop@2
$LN18@Uninit_cop@2:
	mov	DWORD PTR tv84[ebp], 0
$LN14@Uninit_cop@2:
	jmp	SHORT $LN5@Uninit_cop@2
$LN4@Uninit_cop@2:
	jmp	SHORT $LN10@Uninit_cop@2
__catch$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	jmp	SHORT $LN3@Uninit_cop@2
$LN2@Uninit_cop@2:
	mov	ecx, DWORD PTR __Next$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Next$[ebp], ecx
$LN3@Uninit_cop@2:
	mov	edx, DWORD PTR __Next$[ebp]
	cmp	edx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_cop@2

; 134  : 		_Al.destroy(_Next);

	jmp	SHORT $LN2@Uninit_cop@2
$LN1@Uninit_cop@2:

; 135  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 136  : 	_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_cop@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1:

; 137  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_cop@2:

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4GreatWorkSlotType@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum GreatWorkSlotType *> > >::_Iterator<0> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv84 = -32						; size = 4
$T249216 = -28						; size = 4
__Vptr$249222 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 128  : 
; 129  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN6@Uninit_cop@3
$LN5@Uninit_cop@3:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_cop@3:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop@3

; 131  : 		_Al.construct(_Dest, *_First);

	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Vptr$249222[ebp], ecx
	mov	edx, DWORD PTR __Vptr$249222[ebp]
	mov	DWORD PTR $T249216[ebp], edx
	cmp	DWORD PTR $T249216[ebp], 0
	je	SHORT $LN18@Uninit_cop@3
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR $T249216[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR $T249216[ebp]
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN14@Uninit_cop@3
$LN18@Uninit_cop@3:
	mov	DWORD PTR tv84[ebp], 0
$LN14@Uninit_cop@3:
	jmp	SHORT $LN5@Uninit_cop@3
$LN4@Uninit_cop@3:
	jmp	SHORT $LN10@Uninit_cop@3
__catch$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	jmp	SHORT $LN3@Uninit_cop@3
$LN2@Uninit_cop@3:
	mov	ecx, DWORD PTR __Next$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Next$[ebp], ecx
$LN3@Uninit_cop@3:
	mov	edx, DWORD PTR __Next$[ebp]
	cmp	edx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_cop@3

; 134  : 		_Al.destroy(_Next);

	jmp	SHORT $LN2@Uninit_cop@3
$LN1@Uninit_cop@3:

; 135  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 136  : 	_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_cop@3:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1:

; 137  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_cop@3:

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@PAV123@V?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@3@@std@@YAPAV?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@0@PAV120@00AAV?$allocator@V?$_Iterator@$0A@@?$list@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAW4MissionTypes@@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> *,std::allocator<std::list<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,enum MissionTypes *> > >::_Iterator<0> > >
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0length_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0length_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0length_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0length_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
; Function compile flags: /Odtp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
END
