; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvCityCitizens.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?NO_QUEST_DATA@CvMinorCivQuest@@2HB		; CvMinorCivQuest::NO_QUEST_DATA
PUBLIC	?NO_TURN@CvMinorCivQuest@@2HB			; CvMinorCivQuest::NO_TURN
;	COMDAT ?NO_TURN@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_TURN@CvMinorCivQuest@@2HB DD 0ffffffffH		; CvMinorCivQuest::NO_TURN
CONST	ENDS
;	COMDAT ?NO_QUEST_DATA@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_QUEST_DATA@CvMinorCivQuest@@2HB DD 0ffffffffH	; CvMinorCivQuest::NO_QUEST_DATA
CONST	ENDS
PUBLIC	??0CvCityCitizens@@QAE@XZ			; CvCityCitizens::CvCityCitizens
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvcitycitizens.cpp
;	COMDAT ??0CvCityCitizens@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CvCityCitizens@@QAE@XZ PROC				; CvCityCitizens::CvCityCitizens, COMDAT
; _this$ = ecx

; 33   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 34   : #endif
; 35   : 	m_aiSpecialistCounts = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 0

; 36   : 	m_aiSpecialistGreatPersonProgressTimes100 = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+112], 0

; 37   : 	m_aiNumSpecialistsInBuilding = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], 0

; 38   : 	m_aiNumForcedSpecialistsInBuilding = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 0

; 39   : 	m_piBuildingGreatPeopleRateChanges = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+124], 0

; 40   : #ifdef AUI_YIELDS_APPLIED_AFTER_TURN_NOT_BEFORE
; 41   : 	m_aiCachedGPChangeT100ForThisTurn = NULL;
; 42   : #endif
; 43   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CvCityCitizens@@QAE@XZ ENDP				; CvCityCitizens::CvCityCitizens
_TEXT	ENDS
PUBLIC	?Uninit@CvCityCitizens@@QAEXXZ			; CvCityCitizens::Uninit
PUBLIC	??1CvCityCitizens@@QAE@XZ			; CvCityCitizens::~CvCityCitizens
; Function compile flags: /Odtp
;	COMDAT ??1CvCityCitizens@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvCityCitizens@@QAE@XZ PROC				; CvCityCitizens::~CvCityCitizens, COMDAT
; _this$ = ecx

; 47   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 48   : 	Uninit();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Uninit@CvCityCitizens@@QAEXXZ		; CvCityCitizens::Uninit

; 49   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1CvCityCitizens@@QAE@XZ ENDP				; CvCityCitizens::~CvCityCitizens
_TEXT	ENDS
PUBLIC	?Reset@CvCityCitizens@@QAEXXZ			; CvCityCitizens::Reset
PUBLIC	?Init@CvCityCitizens@@QAEXPAVCvCity@@@Z		; CvCityCitizens::Init
; Function compile flags: /Odtp
;	COMDAT ?Init@CvCityCitizens@@QAEXPAVCvCity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pCity$ = 8						; size = 4
?Init@CvCityCitizens@@QAEXPAVCvCity@@@Z PROC		; CvCityCitizens::Init, COMDAT
; _this$ = ecx

; 53   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 54   : 	m_pCity = pCity;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pCity$[ebp]
	mov	DWORD PTR [eax], ecx

; 55   : 
; 56   : 	// Clear variables
; 57   : 	Reset();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@CvCityCitizens@@QAEXXZ		; CvCityCitizens::Reset

; 58   : 
; 59   : 	m_bInited = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+128], 1

; 60   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Init@CvCityCitizens@@QAEXPAVCvCity@@@Z ENDP		; CvCityCitizens::Init
_TEXT	ENDS
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
; Function compile flags: /Odtp
;	COMDAT ?Uninit@CvCityCitizens@@QAEXXZ
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T225776 = -40						; size = 4
$T225775 = -36						; size = 4
$T225770 = -32						; size = 4
$T225769 = -28						; size = 4
$T225764 = -24						; size = 4
$T225763 = -20						; size = 4
$T225758 = -16						; size = 4
$T225757 = -12						; size = 4
$T225752 = -8						; size = 4
$T225751 = -4						; size = 4
?Uninit@CvCityCitizens@@QAEXXZ PROC			; CvCityCitizens::Uninit, COMDAT
; _this$ = ecx

; 64   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 65   : 	if(m_bInited)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+128]
	test	ecx, ecx
	je	$LN1@Uninit

; 66   : 	{
; 67   : 		SAFE_DELETE_ARRAY(m_aiSpecialistCounts);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 108				; 0000006cH
	mov	DWORD PTR $T225752[ebp], edx
	mov	eax, DWORD PTR $T225752[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T225751[ebp], ecx
	mov	edx, DWORD PTR $T225751[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
	mov	eax, DWORD PTR $T225752[ebp]
	mov	DWORD PTR [eax], 0

; 68   : 		SAFE_DELETE_ARRAY(m_aiSpecialistGreatPersonProgressTimes100);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	mov	DWORD PTR $T225758[ebp], ecx
	mov	edx, DWORD PTR $T225758[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T225757[ebp], eax
	mov	ecx, DWORD PTR $T225757[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
	mov	edx, DWORD PTR $T225758[ebp]
	mov	DWORD PTR [edx], 0

; 69   : 		SAFE_DELETE_ARRAY(m_aiNumSpecialistsInBuilding);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 116				; 00000074H
	mov	DWORD PTR $T225764[ebp], eax
	mov	ecx, DWORD PTR $T225764[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T225763[ebp], edx
	mov	eax, DWORD PTR $T225763[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
	mov	ecx, DWORD PTR $T225764[ebp]
	mov	DWORD PTR [ecx], 0

; 70   : 		SAFE_DELETE_ARRAY(m_aiNumForcedSpecialistsInBuilding);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 120				; 00000078H
	mov	DWORD PTR $T225770[ebp], edx
	mov	eax, DWORD PTR $T225770[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T225769[ebp], ecx
	mov	edx, DWORD PTR $T225769[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
	mov	eax, DWORD PTR $T225770[ebp]
	mov	DWORD PTR [eax], 0

; 71   : 		SAFE_DELETE_ARRAY(m_piBuildingGreatPeopleRateChanges);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	mov	DWORD PTR $T225776[ebp], ecx
	mov	edx, DWORD PTR $T225776[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T225775[ebp], eax
	mov	ecx, DWORD PTR $T225775[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
	mov	edx, DWORD PTR $T225776[ebp]
	mov	DWORD PTR [edx], 0
$LN1@Uninit:

; 72   : #ifdef AUI_YIELDS_APPLIED_AFTER_TURN_NOT_BEFORE
; 73   : 		SAFE_DELETE_ARRAY(m_aiCachedGPChangeT100ForThisTurn);
; 74   : #endif
; 75   : 	}
; 76   : 	m_bInited = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+128], 0

; 77   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Uninit@CvCityCitizens@@QAEXXZ ENDP			; CvCityCitizens::Uninit
_TEXT	ENDS
EXTRN	?getNumBuildingInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumBuildingInfos
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?getNumSpecialistInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumSpecialistInfos
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
; Function compile flags: /Odtp
;	COMDAT ?Reset@CvCityCitizens@@QAEXXZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T225783 = -24						; size = 4
$T225782 = -20						; size = 4
$T225781 = -16						; size = 4
$T225780 = -12						; size = 4
$T225779 = -8						; size = 4
_iI$ = -4						; size = 4
?Reset@CvCityCitizens@@QAEXXZ PROC			; CvCityCitizens::Reset, COMDAT
; _this$ = ecx

; 81   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 82   : 	m_bAutomated = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0

; 83   : 	m_bNoAutoAssignSpecialists = false;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+5], 0

; 84   : 	m_iNumUnassignedCitizens = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 85   : 	m_iNumCitizensWorkingPlots = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 86   : 	m_iNumForcedWorkingPlots = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0

; 87   : 
; 88   : 	m_eCityAIFocusTypes = NO_CITY_AI_FOCUS_TYPE;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], -1

; 89   : 
; 90   : #ifdef AUI_WARNING_FIXES
; 91   : 	uint iI;
; 92   : #else
; 93   : 	int iI;
; 94   : #endif
; 95   : 
; 96   : 	CvAssertMsg((0 < NUM_CITY_PLOTS),  "NUM_CITY_PLOTS is not greater than zero but an array is being allocated in CvCityCitizens::reset");
; 97   : 	for(iI = 0; iI < NUM_CITY_PLOTS; iI++)

	mov	DWORD PTR _iI$[ebp], 0
	jmp	SHORT $LN18@Reset
$LN17@Reset:
	mov	eax, DWORD PTR _iI$[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$[ebp], eax
$LN18@Reset:
	cmp	DWORD PTR _iI$[ebp], 37			; 00000025H
	jge	SHORT $LN16@Reset

; 98   : 	{
; 99   : 		m_pabWorkingPlot[iI] = false;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _iI$[ebp]
	mov	BYTE PTR [ecx+25], 0

; 100  : 		m_pabForcedWorkingPlot[iI] = false;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _iI$[ebp]
	mov	BYTE PTR [edx+62], 0

; 101  : 	}

	jmp	SHORT $LN17@Reset
$LN16@Reset:

; 102  : 
; 103  : 	m_iNumDefaultSpecialists = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+100], 0

; 104  : 	m_iNumForcedDefaultSpecialists = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+104], 0

; 105  : 
; 106  : 	CvAssertMsg(m_aiSpecialistCounts==NULL, "about to leak memory, CvCityCitizens::m_aiSpecialistCounts");
; 107  : #ifdef AUI_WARNING_FIXES
; 108  : 	SAFE_DELETE_ARRAY(m_aiSpecialistCounts);
; 109  : #endif
; 110  : 	m_aiSpecialistCounts = FNEW(int[GC.getNumSpecialistInfos()], c_eCiv5GameplayDLL, 0);

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	xor	ecx, ecx
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T225779[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T225779[ebp]
	mov	DWORD PTR [eax+108], ecx

; 111  : 	for(iI = 0; iI < GC.getNumSpecialistInfos(); iI++)

	mov	DWORD PTR _iI$[ebp], 0
	jmp	SHORT $LN15@Reset
$LN14@Reset:
	mov	edx, DWORD PTR _iI$[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$[ebp], edx
$LN15@Reset:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	cmp	DWORD PTR _iI$[ebp], eax
	jge	SHORT $LN13@Reset

; 112  : 	{
; 113  : 		m_aiSpecialistCounts[iI] = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR _iI$[ebp]
	mov	DWORD PTR [ecx+edx*4], 0

; 114  : 	}

	jmp	SHORT $LN14@Reset
$LN13@Reset:

; 115  : 
; 116  : 	CvAssertMsg(m_aiSpecialistGreatPersonProgressTimes100==NULL, "about to leak memory, CvCityCitizens::m_aiSpecialistGreatPersonProgressTimes100");
; 117  : #ifdef AUI_WARNING_FIXES
; 118  : 	SAFE_DELETE_ARRAY(m_aiSpecialistGreatPersonProgressTimes100);
; 119  : #endif
; 120  : 	m_aiSpecialistGreatPersonProgressTimes100 = FNEW(int[GC.getNumSpecialistInfos()], c_eCiv5GameplayDLL, 0);

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	xor	ecx, ecx
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T225780[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T225780[ebp]
	mov	DWORD PTR [eax+112], ecx

; 121  : 	for(iI = 0; iI < GC.getNumSpecialistInfos(); iI++)

	mov	DWORD PTR _iI$[ebp], 0
	jmp	SHORT $LN12@Reset
$LN11@Reset:
	mov	edx, DWORD PTR _iI$[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$[ebp], edx
$LN12@Reset:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	cmp	DWORD PTR _iI$[ebp], eax
	jge	SHORT $LN10@Reset

; 122  : 	{
; 123  : 		m_aiSpecialistGreatPersonProgressTimes100[iI] = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	edx, DWORD PTR _iI$[ebp]
	mov	DWORD PTR [ecx+edx*4], 0

; 124  : 	}

	jmp	SHORT $LN11@Reset
$LN10@Reset:

; 125  : 
; 126  : 	CvAssertMsg(m_aiNumSpecialistsInBuilding==NULL, "about to leak memory, CvCityCitizens::m_aiNumSpecialistsInBuilding");
; 127  : #ifdef AUI_WARNING_FIXES
; 128  : 	SAFE_DELETE_ARRAY(m_aiNumSpecialistsInBuilding);
; 129  : #endif
; 130  : 	m_aiNumSpecialistsInBuilding = FNEW(int[GC.getNumBuildingInfos()], c_eCiv5GameplayDLL, 0);

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	xor	ecx, ecx
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T225781[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T225781[ebp]
	mov	DWORD PTR [eax+116], ecx

; 131  : 	for(iI = 0; iI < GC.getNumBuildingInfos(); iI++)

	mov	DWORD PTR _iI$[ebp], 0
	jmp	SHORT $LN9@Reset
$LN8@Reset:
	mov	edx, DWORD PTR _iI$[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$[ebp], edx
$LN9@Reset:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iI$[ebp], eax
	jge	SHORT $LN7@Reset

; 132  : 	{
; 133  : 		m_aiNumSpecialistsInBuilding[iI] = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR _iI$[ebp]
	mov	DWORD PTR [ecx+edx*4], 0

; 134  : 	}

	jmp	SHORT $LN8@Reset
$LN7@Reset:

; 135  : 
; 136  : 	CvAssertMsg(m_aiNumForcedSpecialistsInBuilding==NULL, "about to leak memory, CvCityCitizens::m_aiNumForcedSpecialistsInBuilding");
; 137  : #ifdef AUI_WARNING_FIXES
; 138  : 	SAFE_DELETE_ARRAY(m_aiNumForcedSpecialistsInBuilding);
; 139  : #endif
; 140  : 	m_aiNumForcedSpecialistsInBuilding = FNEW(int[GC.getNumBuildingInfos()], c_eCiv5GameplayDLL, 0);

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	xor	ecx, ecx
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T225782[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T225782[ebp]
	mov	DWORD PTR [eax+120], ecx

; 141  : 	for(iI = 0; iI < GC.getNumBuildingInfos(); iI++)

	mov	DWORD PTR _iI$[ebp], 0
	jmp	SHORT $LN6@Reset
$LN5@Reset:
	mov	edx, DWORD PTR _iI$[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$[ebp], edx
$LN6@Reset:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iI$[ebp], eax
	jge	SHORT $LN4@Reset

; 142  : 	{
; 143  : 		m_aiNumForcedSpecialistsInBuilding[iI] = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	edx, DWORD PTR _iI$[ebp]
	mov	DWORD PTR [ecx+edx*4], 0

; 144  : 	}

	jmp	SHORT $LN5@Reset
$LN4@Reset:

; 145  : 
; 146  : 	CvAssertMsg(m_piBuildingGreatPeopleRateChanges==NULL, "about to leak memory, CvCityCitizens::m_piBuildingGreatPeopleRateChanges");
; 147  : #ifdef AUI_WARNING_FIXES
; 148  : 	SAFE_DELETE_ARRAY(m_piBuildingGreatPeopleRateChanges);
; 149  : #endif
; 150  : 	m_piBuildingGreatPeopleRateChanges = FNEW(int[GC.getNumSpecialistInfos()], c_eCiv5GameplayDLL, 0);

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	xor	ecx, ecx
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T225783[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T225783[ebp]
	mov	DWORD PTR [eax+124], ecx

; 151  : 	for(iI = 0; iI < GC.getNumSpecialistInfos(); iI++)

	mov	DWORD PTR _iI$[ebp], 0
	jmp	SHORT $LN3@Reset
$LN2@Reset:
	mov	edx, DWORD PTR _iI$[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$[ebp], edx
$LN3@Reset:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	cmp	DWORD PTR _iI$[ebp], eax
	jge	SHORT $LN1@Reset

; 152  : 	{
; 153  : 		m_piBuildingGreatPeopleRateChanges[iI] = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	edx, DWORD PTR _iI$[ebp]
	mov	DWORD PTR [ecx+edx*4], 0

; 154  : 	}

	jmp	SHORT $LN2@Reset
$LN1@Reset:

; 155  : 
; 156  : #ifdef AUI_YIELDS_APPLIED_AFTER_TURN_NOT_BEFORE
; 157  : 	SAFE_DELETE_ARRAY(m_aiCachedGPChangeT100ForThisTurn);
; 158  : 	m_aiCachedGPChangeT100ForThisTurn = FNEW(int[GC.getNumSpecialistInfos()], c_eCiv5GameplayDLL, 0);
; 159  : 	for (iI = 0; iI < GC.getNumSpecialistInfos(); iI++)
; 160  : 	{
; 161  : 		m_aiCachedGPChangeT100ForThisTurn[iI] = 0;
; 162  : 	}
; 163  : #endif
; 164  : 
; 165  : 	m_bForceAvoidGrowth = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0

; 166  : #ifdef AUI_CITIZENS_FOOD_PRODUCTION_TRIAL_RUN_THEN_SELF_CONSISTENCY
; 167  : 	m_bIgnoreFoodProduction = true;
; 168  : #endif
; 169  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@CvCityCitizens@@QAEXXZ ENDP			; CvCityCitizens::Reset
_TEXT	ENDS
PUBLIC	??$ReadHashedDataArray@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHH@Z ; CvInfosSerializationHelper::ReadHashedDataArray<int>
PUBLIC	??$?5_N$0CF@@@YAAAVFDataStream@@AAV0@AAY0CF@_N@Z ; operator>><bool,37>
PUBLIC	?Read@CvCityCitizens@@QAEXAAVFDataStream@@@Z	; CvCityCitizens::Read
EXTRN	?Read@BuildingArrayHelpers@@YAXAAVFDataStream@@PAH@Z:PROC ; BuildingArrayHelpers::Read
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4CityAIFocusTypes@@@Z:PROC ; operator>>
EXTRN	?Read@FDataStream@@IAEXAAH@Z:PROC		; FDataStream::Read
EXTRN	?Read@FDataStream@@IAEXAA_N@Z:PROC		; FDataStream::Read
EXTRN	?Read@FDataStream@@IAEXAAI@Z:PROC		; FDataStream::Read
; Function compile flags: /Odtp
;	COMDAT ?Read@CvCityCitizens@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_uiVersion$ = -4					; size = 4
_kStream$ = 8						; size = 4
?Read@CvCityCitizens@@QAEXAAVFDataStream@@@Z PROC	; CvCityCitizens::Read, COMDAT
; _this$ = ecx

; 173  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 174  : 	// Version number to maintain backwards compatibility
; 175  : 	uint uiVersion;
; 176  : 	kStream >> uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 177  : 
; 178  : 	kStream >> m_bAutomated;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 179  : 	kStream >> m_bNoAutoAssignSpecialists;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 5
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 180  : 	kStream >> m_iNumUnassignedCitizens;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 181  : 	kStream >> m_iNumCitizensWorkingPlots;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 182  : 	kStream >> m_iNumForcedWorkingPlots;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 183  : 
; 184  : 	kStream >> m_eCityAIFocusTypes;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??5@YAAAVFDataStream@@AAV0@AAW4CityAIFocusTypes@@@Z ; operator>>
	add	esp, 8

; 185  : 
; 186  : 	kStream >> 	m_bForceAvoidGrowth;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 187  : 
; 188  : 	kStream >> m_pabWorkingPlot;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 25					; 00000019H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??$?5_N$0CF@@@YAAAVFDataStream@@AAV0@AAY0CF@_N@Z ; operator>><bool,37>
	add	esp, 8

; 189  : 	kStream >> m_pabForcedWorkingPlot;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 62					; 0000003eH
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??$?5_N$0CF@@@YAAAVFDataStream@@AAV0@AAY0CF@_N@Z ; operator>><bool,37>
	add	esp, 8

; 190  : 
; 191  : 	kStream >> m_iNumDefaultSpecialists;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 192  : 	kStream >> m_iNumForcedDefaultSpecialists;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 104				; 00000068H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 193  : 
; 194  : 	CvInfosSerializationHelper::ReadHashedDataArray(kStream, m_aiSpecialistCounts, GC.getNumSpecialistInfos());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$ReadHashedDataArray@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHH@Z ; CvInfosSerializationHelper::ReadHashedDataArray<int>
	add	esp, 12					; 0000000cH

; 195  : 	CvInfosSerializationHelper::ReadHashedDataArray(kStream, m_aiSpecialistGreatPersonProgressTimes100, GC.getNumSpecialistInfos());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$ReadHashedDataArray@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHH@Z ; CvInfosSerializationHelper::ReadHashedDataArray<int>
	add	esp, 12					; 0000000cH

; 196  : 
; 197  : 	BuildingArrayHelpers::Read(kStream, m_aiNumSpecialistsInBuilding);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	?Read@BuildingArrayHelpers@@YAXAAVFDataStream@@PAH@Z ; BuildingArrayHelpers::Read
	add	esp, 8

; 198  : 	BuildingArrayHelpers::Read(kStream, m_aiNumForcedSpecialistsInBuilding);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	?Read@BuildingArrayHelpers@@YAXAAVFDataStream@@PAH@Z ; BuildingArrayHelpers::Read
	add	esp, 8

; 199  : 
; 200  : 	CvInfosSerializationHelper::ReadHashedDataArray(kStream, m_piBuildingGreatPeopleRateChanges, GC.getNumSpecialistInfos());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$ReadHashedDataArray@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHH@Z ; CvInfosSerializationHelper::ReadHashedDataArray<int>
	add	esp, 12					; 0000000cH

; 201  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Read@CvCityCitizens@@QAEXAAVFDataStream@@@Z ENDP	; CvCityCitizens::Read
_TEXT	ENDS
PUBLIC	??$WriteHashedDataArray@W4SpecialistTypes@@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHI@Z ; CvInfosSerializationHelper::WriteHashedDataArray<enum SpecialistTypes,int>
PUBLIC	??$?6_N$0CF@@@YAAAVFDataStream@@AAV0@AAY0CF@$$CB_N@Z ; operator<<<bool,37>
PUBLIC	?Write@CvCityCitizens@@QAEXAAVFDataStream@@@Z	; CvCityCitizens::Write
EXTRN	?Write@BuildingArrayHelpers@@YAXAAVFDataStream@@PAHH@Z:PROC ; BuildingArrayHelpers::Write
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4CityAIFocusTypes@@@Z:PROC ; operator<<
EXTRN	?Write@FDataStream@@IAEXABH@Z:PROC		; FDataStream::Write
EXTRN	?Write@FDataStream@@IAEXAB_N@Z:PROC		; FDataStream::Write
EXTRN	?Write@FDataStream@@IAEXABI@Z:PROC		; FDataStream::Write
; Function compile flags: /Odtp
;	COMDAT ?Write@CvCityCitizens@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_uiVersion$ = -4					; size = 4
_kStream$ = 8						; size = 4
?Write@CvCityCitizens@@QAEXAAVFDataStream@@@Z PROC	; CvCityCitizens::Write, COMDAT
; _this$ = ecx

; 205  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 206  : 	// Current version number
; 207  : 	uint uiVersion = 1;

	mov	DWORD PTR _uiVersion$[ebp], 1

; 208  : 	kStream << uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 209  : 
; 210  : 	kStream << m_bAutomated;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 211  : 	kStream << m_bNoAutoAssignSpecialists;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 5
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 212  : 	kStream << m_iNumUnassignedCitizens;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 213  : 	kStream << m_iNumCitizensWorkingPlots;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 214  : 	kStream << m_iNumForcedWorkingPlots;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 215  : 
; 216  : 	kStream << m_eCityAIFocusTypes;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??6@YAAAVFDataStream@@AAV0@ABW4CityAIFocusTypes@@@Z ; operator<<
	add	esp, 8

; 217  : 
; 218  : 	kStream << 	m_bForceAvoidGrowth;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 219  : 
; 220  : 	kStream << m_pabWorkingPlot;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 25					; 00000019H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??$?6_N$0CF@@@YAAAVFDataStream@@AAV0@AAY0CF@$$CB_N@Z ; operator<<<bool,37>
	add	esp, 8

; 221  : 	kStream << m_pabForcedWorkingPlot;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 62					; 0000003eH
	push	edx
	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	call	??$?6_N$0CF@@@YAAAVFDataStream@@AAV0@AAY0CF@$$CB_N@Z ; operator<<<bool,37>
	add	esp, 8

; 222  : 
; 223  : 	kStream << m_iNumDefaultSpecialists;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 224  : 	kStream << m_iNumForcedDefaultSpecialists;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 104				; 00000068H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 225  : 
; 226  : 	CvInfosSerializationHelper::WriteHashedDataArray<SpecialistTypes, int>(kStream, m_aiSpecialistCounts, GC.getNumSpecialistInfos());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$WriteHashedDataArray@W4SpecialistTypes@@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHI@Z ; CvInfosSerializationHelper::WriteHashedDataArray<enum SpecialistTypes,int>
	add	esp, 12					; 0000000cH

; 227  : 	CvInfosSerializationHelper::WriteHashedDataArray<SpecialistTypes, int>(kStream, m_aiSpecialistGreatPersonProgressTimes100, GC.getNumSpecialistInfos());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$WriteHashedDataArray@W4SpecialistTypes@@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHI@Z ; CvInfosSerializationHelper::WriteHashedDataArray<enum SpecialistTypes,int>
	add	esp, 12					; 0000000cH

; 228  : 
; 229  : 	BuildingArrayHelpers::Write(kStream, m_aiNumSpecialistsInBuilding, GC.getNumBuildingInfos());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	?Write@BuildingArrayHelpers@@YAXAAVFDataStream@@PAHH@Z ; BuildingArrayHelpers::Write
	add	esp, 12					; 0000000cH

; 230  : 	BuildingArrayHelpers::Write(kStream, m_aiNumForcedSpecialistsInBuilding, GC.getNumBuildingInfos());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	?Write@BuildingArrayHelpers@@YAXAAVFDataStream@@PAHH@Z ; BuildingArrayHelpers::Write
	add	esp, 12					; 0000000cH

; 231  : 
; 232  : 	CvInfosSerializationHelper::WriteHashedDataArray<SpecialistTypes, int>(kStream, m_piBuildingGreatPeopleRateChanges, GC.getNumSpecialistInfos());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??$WriteHashedDataArray@W4SpecialistTypes@@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHI@Z ; CvInfosSerializationHelper::WriteHashedDataArray<enum SpecialistTypes,int>
	add	esp, 12					; 0000000cH

; 233  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Write@CvCityCitizens@@QAEXAAVFDataStream@@@Z ENDP	; CvCityCitizens::Write
_TEXT	ENDS
PUBLIC	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ	; CvCityCitizens::GetCity
; Function compile flags: /Odtp
;	COMDAT ?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ PROC		; CvCityCitizens::GetCity, COMDAT
; _this$ = ecx

; 241  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 242  : 	return m_pCity;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]

; 243  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ENDP		; CvCityCitizens::GetCity
_TEXT	ENDS
PUBLIC	?GetOwner@CvCityCitizens@@QBE?AW4PlayerTypes@@XZ ; CvCityCitizens::GetOwner
PUBLIC	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ	; CvCityCitizens::GetPlayer
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
; Function compile flags: /Odtp
;	COMDAT ?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T225849 = -4						; size = 4
?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ PROC	; CvCityCitizens::GetPlayer, COMDAT
; _this$ = ecx

; 251  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 252  : 	return &GET_PLAYER(GetOwner());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetOwner@CvCityCitizens@@QBE?AW4PlayerTypes@@XZ ; CvCityCitizens::GetOwner
	mov	DWORD PTR $T225849[ebp], eax
	mov	eax, DWORD PTR $T225849[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 253  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ENDP	; CvCityCitizens::GetPlayer
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetOwner@CvCityCitizens@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T225860 = -4						; size = 4
?GetOwner@CvCityCitizens@@QBE?AW4PlayerTypes@@XZ PROC	; CvCityCitizens::GetOwner, COMDAT
; _this$ = ecx

; 257  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 258  : 	return m_pCity->getOwner();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T225860[ebp], edx
	mov	eax, DWORD PTR $T225860[ebp]

; 259  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetOwner@CvCityCitizens@@QBE?AW4PlayerTypes@@XZ ENDP	; CvCityCitizens::GetOwner
_TEXT	ENDS
PUBLIC	?GetTeam@CvCityCitizens@@QBE?AW4TeamTypes@@XZ	; CvCityCitizens::GetTeam
EXTRN	?getTeam@CvCity@@QBE?AW4TeamTypes@@XZ:PROC	; CvCity::getTeam
; Function compile flags: /Odtp
;	COMDAT ?GetTeam@CvCityCitizens@@QBE?AW4TeamTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTeam@CvCityCitizens@@QBE?AW4TeamTypes@@XZ PROC	; CvCityCitizens::GetTeam, COMDAT
; _this$ = ecx

; 263  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 264  : 	return m_pCity->getTeam();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getTeam@CvCity@@QBE?AW4TeamTypes@@XZ	; CvCity::getTeam

; 265  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetTeam@CvCityCitizens@@QBE?AW4TeamTypes@@XZ ENDP	; CvCityCitizens::GetTeam
_TEXT	ENDS
PUBLIC	?SetWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N1@Z ; CvCityCitizens::SetWorkingPlot
PUBLIC	?IsCanWork@CvCityCitizens@@QBE_NPAVCvPlot@@@Z	; CvCityCitizens::IsCanWork
PUBLIC	?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z ; CvCityCitizens::GetCityPlotFromIndex
PUBLIC	?DoFoundCity@CvCityCitizens@@QAEXXZ		; CvCityCitizens::DoFoundCity
; Function compile flags: /Odtp
;	COMDAT ?DoFoundCity@CvCityCitizens@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_bWorkPlot$224390 = -5					; size = 1
_pHomePlot$ = -4					; size = 4
?DoFoundCity@CvCityCitizens@@QAEXXZ PROC		; CvCityCitizens::DoFoundCity, COMDAT
; _this$ = ecx

; 269  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 270  : 	// always work the home plot (center)
; 271  : 	CvPlot* pHomePlot = GetCityPlotFromIndex(CITY_HOME_PLOT);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z ; CvCityCitizens::GetCityPlotFromIndex
	mov	DWORD PTR _pHomePlot$[ebp], eax

; 272  : 	if(pHomePlot != NULL)

	cmp	DWORD PTR _pHomePlot$[ebp], 0
	je	SHORT $LN2@DoFoundCit

; 273  : 	{
; 274  : 		bool bWorkPlot = IsCanWork(pHomePlot);

	mov	eax, DWORD PTR _pHomePlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCanWork@CvCityCitizens@@QBE_NPAVCvPlot@@@Z ; CvCityCitizens::IsCanWork
	mov	BYTE PTR _bWorkPlot$224390[ebp], al

; 275  : 		SetWorkingPlot(pHomePlot, bWorkPlot, /*bUseUnassignedPool*/ false);

	push	0
	movzx	ecx, BYTE PTR _bWorkPlot$224390[ebp]
	push	ecx
	mov	edx, DWORD PTR _pHomePlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N1@Z ; CvCityCitizens::SetWorkingPlot
$LN2@DoFoundCit:

; 276  : 	}
; 277  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoFoundCity@CvCityCitizens@@QAEXXZ ENDP		; CvCityCitizens::DoFoundCity
_TEXT	ENDS
PUBLIC	?DoSpecialists@CvCityCitizens@@QAEXXZ		; CvCityCitizens::DoSpecialists
PUBLIC	?DoReallocateCitizens@CvCityCitizens@@QAEXXZ	; CvCityCitizens::DoReallocateCitizens
PUBLIC	??_C@_0BI@FNGLFDGI@AIGRANDSTRATEGY_CULTURE?$AA@	; `string'
PUBLIC	??_C@_0CA@OBBOJGK@ECONOMICAISTRATEGY_LOSING_MONEY?$AA@ ; `string'
PUBLIC	?SetForcedAvoidGrowth@CvCityCitizens@@QAEX_N@Z	; CvCityCitizens::SetForcedAvoidGrowth
PUBLIC	?SetNoAutoAssignSpecialists@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetNoAutoAssignSpecialists
PUBLIC	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType
PUBLIC	?DoVerifyWorkingPlots@CvCityCitizens@@QAEXXZ	; CvCityCitizens::DoVerifyWorkingPlots
PUBLIC	?DoTurn@CvCityCitizens@@QAEXXZ			; CvCityCitizens::DoTurn
EXTRN	?GetYieldType@CvCitySpecializationXMLEntry@@QBE?AW4YieldTypes@@XZ:PROC ; CvCitySpecializationXMLEntry::GetYieldType
EXTRN	?getCitySpecializationInfo@CvGlobals@@QAEPAVCvCitySpecializationXMLEntry@@W4CitySpecializationTypes@@@Z:PROC ; CvGlobals::getCitySpecializationInfo
EXTRN	?GetActiveGrandStrategy@CvGrandStrategyAI@@QBE?AW4AIGrandStrategyTypes@@XZ:PROC ; CvGrandStrategyAI::GetActiveGrandStrategy
EXTRN	?GetGrandStrategyAI@CvPlayer@@QBEPAVCvGrandStrategyAI@@XZ:PROC ; CvPlayer::GetGrandStrategyAI
EXTRN	?IsUsingStrategy@CvEconomicAI@@QAE_NW4EconomicAIStrategyTypes@@@Z:PROC ; CvEconomicAI::IsUsingStrategy
EXTRN	?GetEconomicAI@CvPlayer@@QBEPAVCvEconomicAI@@XZ:PROC ; CvPlayer::GetEconomicAI
EXTRN	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z:PROC ; CvGlobals::getInfoTypeForString
EXTRN	?getPopulation@CvCity@@QBEHXZ:PROC		; CvCity::getPopulation
EXTRN	?GetCityStrategyAI@CvCity@@QBEPAVCvCityStrategyAI@@XZ:PROC ; CvCity::GetCityStrategyAI
EXTRN	?isMinorCiv@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isMinorCiv
EXTRN	?isCapital@CvCity@@QBE_NXZ:PROC			; CvCity::isCapital
EXTRN	?getGameTurn@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurn
EXTRN	?GetWonderSpecialization@CvCitySpecializationAI@@QBE?AW4CitySpecializationTypes@@XZ:PROC ; CvCitySpecializationAI::GetWonderSpecialization
EXTRN	?GetCitySpecializationAI@CvPlayer@@QBEPAVCvCitySpecializationAI@@XZ:PROC ; CvPlayer::GetCitySpecializationAI
EXTRN	?isHuman@CvPlayer@@QBE_NXZ:PROC			; CvPlayer::isHuman
EXTRN	?foodConsumption@CvCity@@QBEH_NH@Z:PROC		; CvCity::foodConsumption
EXTRN	?getYieldRateTimes100@CvCity@@QBEHW4YieldTypes@@_N@Z:PROC ; CvCity::getYieldRateTimes100
EXTRN	?IsPuppet@CvCity@@QBE_NXZ:PROC			; CvCity::IsPuppet
;	COMDAT ??_C@_0BI@FNGLFDGI@AIGRANDSTRATEGY_CULTURE?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvcitystrategyai.h
CONST	SEGMENT
??_C@_0BI@FNGLFDGI@AIGRANDSTRATEGY_CULTURE?$AA@ DB 'AIGRANDSTRATEGY_CULTU'
	DB	'RE', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@OBBOJGK@ECONOMICAISTRATEGY_LOSING_MONEY?$AA@
CONST	SEGMENT
??_C@_0CA@OBBOJGK@ECONOMICAISTRATEGY_LOSING_MONEY?$AA@ DB 'ECONOMICAISTRA'
	DB	'TEGY_LOSING_MONEY', 00H			; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvcitycitizens.cpp
CONST	ENDS
;	COMDAT ?DoTurn@CvCityCitizens@@QAEXXZ
_TEXT	SEGMENT
_this$ = -88						; size = 4
$T225892 = -84						; size = 4
$T225888 = -80						; size = 4
$T225884 = -76						; size = 4
$T225883 = -72						; size = 4
$T225879 = -68						; size = 4
$T225878 = -64						; size = 4
$T225874 = -60						; size = 4
$T225870 = -56						; size = 4
_eYield$224435 = -52					; size = 4
_pCitySpecializationEntry$224433 = -48			; size = 4
_eSpecialization$224431 = -44				; size = 4
_iExcessFoodTimes100$224428 = -40			; size = 4
_iExcessFoodTimes100$224422 = -36			; size = 4
_bInDeficit$224419 = -29				; size = 1
_eStrategyLosingMoney$224416 = -28			; size = 4
_iExcessFoodTimes100$224410 = -24			; size = 4
_iExcessFoodTimes100$224406 = -20			; size = 4
_iExcessFoodTimes100$224403 = -16			; size = 4
_eWonderSpecializationType$224401 = -12			; size = 4
_iExcessFoodTimes100$224397 = -8			; size = 4
_thisPlayer$ = -4					; size = 4
?DoTurn@CvCityCitizens@@QAEXXZ PROC			; CvCityCitizens::DoTurn, COMDAT
; _this$ = ecx

; 281  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 282  : 	AI_PERF_FORMAT("City-AI-perf.csv", ("CvCityCitizens::DoTurn, Turn %03d, %s, %s", GC.getGame().getElapsedGameTurns(), m_pCity->GetPlayer()->getCivilizationShortDescription(), m_pCity->getName().c_str()) );
; 283  : 	DoVerifyWorkingPlots();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoVerifyWorkingPlots@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoVerifyWorkingPlots

; 284  : 
; 285  : 	CvPlayerAI& thisPlayer = GET_PLAYER(GetOwner());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetOwner@CvCityCitizens@@QBE?AW4PlayerTypes@@XZ ; CvCityCitizens::GetOwner
	mov	DWORD PTR $T225870[ebp], eax
	mov	eax, DWORD PTR $T225870[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _thisPlayer$[ebp], eax

; 286  : 
; 287  : 	if(m_pCity->IsPuppet())

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?IsPuppet@CvCity@@QBE_NXZ		; CvCity::IsPuppet
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN34@DoTurn

; 288  : 	{
; 289  : 		SetFocusType(CITY_AI_FOCUS_TYPE_GOLD);

	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType

; 290  : 		SetNoAutoAssignSpecialists(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNoAutoAssignSpecialists@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetNoAutoAssignSpecialists

; 291  : 		SetForcedAvoidGrowth(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetForcedAvoidGrowth@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetForcedAvoidGrowth

; 292  : #ifndef AUI_CITIZENS_PUPPET_STILL_WANTS_GROWTH
; 293  : 		int iExcessFoodTimes100 = m_pCity->getYieldRateTimes100(YIELD_FOOD, false) - (m_pCity->foodConsumption() * 100);

	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getYieldRateTimes100@CvCity@@QBEHW4YieldTypes@@_N@Z ; CvCity::getYieldRateTimes100
	mov	esi, eax
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?foodConsumption@CvCity@@QBEH_NH@Z	; CvCity::foodConsumption
	imul	eax, 100				; 00000064H
	sub	esi, eax
	mov	DWORD PTR _iExcessFoodTimes100$224397[ebp], esi

; 294  : 		if(iExcessFoodTimes100 < 0)

	jns	SHORT $LN33@DoTurn

; 295  : 		{
; 296  : 			SetFocusType(NO_CITY_AI_FOCUS_TYPE);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType

; 297  : 			//SetNoAutoAssignSpecialists(true);
; 298  : 			SetForcedAvoidGrowth(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetForcedAvoidGrowth@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetForcedAvoidGrowth
$LN33@DoTurn:

; 299  : 		}
; 300  : #endif
; 301  : 	}

	jmp	$LN32@DoTurn
$LN34@DoTurn:

; 302  : 	else if(!thisPlayer.isHuman())

	mov	ecx, DWORD PTR _thisPlayer$[ebp]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	edx, al
	test	edx, edx
	jne	$LN32@DoTurn

; 303  : 	{
; 304  : 		CitySpecializationTypes eWonderSpecializationType = thisPlayer.GetCitySpecializationAI()->GetWonderSpecialization();

	mov	ecx, DWORD PTR _thisPlayer$[ebp]
	call	?GetCitySpecializationAI@CvPlayer@@QBEPAVCvCitySpecializationAI@@XZ ; CvPlayer::GetCitySpecializationAI
	mov	ecx, eax
	call	?GetWonderSpecialization@CvCitySpecializationAI@@QBE?AW4CitySpecializationTypes@@XZ ; CvCitySpecializationAI::GetWonderSpecialization
	mov	DWORD PTR _eWonderSpecializationType$224401[ebp], eax

; 305  : 
; 306  : 		if(GC.getGame().getGameTurn() % 8 == 0)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T225874[ebp], eax
	mov	ecx, DWORD PTR $T225874[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	and	eax, -2147483641			; 80000007H
	jns	SHORT $LN49@DoTurn
	dec	eax
	or	eax, -8					; fffffff8H
	inc	eax
$LN49@DoTurn:
	test	eax, eax
	jne	SHORT $LN30@DoTurn

; 307  : 		{
; 308  : 			SetFocusType(CITY_AI_FOCUS_TYPE_GOLD_GROWTH);

	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType

; 309  : 			SetNoAutoAssignSpecialists(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNoAutoAssignSpecialists@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetNoAutoAssignSpecialists

; 310  : 			SetForcedAvoidGrowth(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetForcedAvoidGrowth@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetForcedAvoidGrowth

; 311  : 			int iExcessFoodTimes100 = m_pCity->getYieldRateTimes100(YIELD_FOOD, false) - (m_pCity->foodConsumption() * 100);

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getYieldRateTimes100@CvCity@@QBEHW4YieldTypes@@_N@Z ; CvCity::getYieldRateTimes100
	mov	esi, eax
	push	0
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?foodConsumption@CvCity@@QBEH_NH@Z	; CvCity::foodConsumption
	imul	eax, 100				; 00000064H
	sub	esi, eax
	mov	DWORD PTR _iExcessFoodTimes100$224403[ebp], esi

; 312  : 			if(iExcessFoodTimes100 < 200)

	cmp	DWORD PTR _iExcessFoodTimes100$224403[ebp], 200 ; 000000c8H
	jge	SHORT $LN30@DoTurn

; 313  : 			{
; 314  : 				SetFocusType(NO_CITY_AI_FOCUS_TYPE);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType
$LN30@DoTurn:

; 315  : 				//SetNoAutoAssignSpecialists(true);
; 316  : 			}
; 317  : 		}
; 318  : 		if(m_pCity->isCapital() && !thisPlayer.isMinorCiv() && m_pCity->GetCityStrategyAI()->GetSpecialization() != eWonderSpecializationType)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?isCapital@CvCity@@QBE_NXZ		; CvCity::isCapital
	movzx	ecx, al
	test	ecx, ecx
	je	$LN28@DoTurn
	mov	ecx, DWORD PTR _thisPlayer$[ebp]
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN28@DoTurn
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetCityStrategyAI@CvCity@@QBEPAVCvCityStrategyAI@@XZ ; CvCity::GetCityStrategyAI
	mov	DWORD PTR $T225878[ebp], eax
	mov	ecx, DWORD PTR $T225878[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR $T225879[ebp], edx
	mov	eax, DWORD PTR $T225879[ebp]
	cmp	eax, DWORD PTR _eWonderSpecializationType$224401[ebp]
	je	SHORT $LN28@DoTurn

; 319  : 		{
; 320  : 			SetFocusType(NO_CITY_AI_FOCUS_TYPE);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType

; 321  : 			SetNoAutoAssignSpecialists(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNoAutoAssignSpecialists@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetNoAutoAssignSpecialists

; 322  : 			SetForcedAvoidGrowth(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetForcedAvoidGrowth@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetForcedAvoidGrowth

; 323  : 			int iExcessFoodTimes100 = m_pCity->getYieldRateTimes100(YIELD_FOOD, false) - (m_pCity->foodConsumption() * 100);

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getYieldRateTimes100@CvCity@@QBEHW4YieldTypes@@_N@Z ; CvCity::getYieldRateTimes100
	mov	esi, eax
	push	0
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?foodConsumption@CvCity@@QBEH_NH@Z	; CvCity::foodConsumption
	imul	eax, 100				; 00000064H
	sub	esi, eax
	mov	DWORD PTR _iExcessFoodTimes100$224406[ebp], esi

; 324  : 			if(iExcessFoodTimes100 < 400)

	cmp	DWORD PTR _iExcessFoodTimes100$224406[ebp], 400 ; 00000190H
	jge	SHORT $LN27@DoTurn

; 325  : 			{
; 326  : 				SetFocusType(CITY_AI_FOCUS_TYPE_FOOD);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType
$LN27@DoTurn:

; 327  : 				//SetNoAutoAssignSpecialists(true);
; 328  : 			}
; 329  : 		}

	jmp	$LN32@DoTurn
$LN28@DoTurn:

; 330  : 		else if(m_pCity->GetCityStrategyAI()->GetSpecialization() == eWonderSpecializationType)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetCityStrategyAI@CvCity@@QBEPAVCvCityStrategyAI@@XZ ; CvCity::GetCityStrategyAI
	mov	DWORD PTR $T225883[ebp], eax
	mov	ecx, DWORD PTR $T225883[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR $T225884[ebp], edx
	mov	eax, DWORD PTR $T225884[ebp]
	cmp	eax, DWORD PTR _eWonderSpecializationType$224401[ebp]
	jne	$LN25@DoTurn

; 331  : 		{
; 332  : 			SetFocusType(CITY_AI_FOCUS_TYPE_PRODUCTION);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType

; 333  : 			SetNoAutoAssignSpecialists(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNoAutoAssignSpecialists@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetNoAutoAssignSpecialists

; 334  : 			//SetForcedAvoidGrowth(true);
; 335  : 			int iExcessFoodTimes100;// = m_pCity->getYieldRateTimes100(YIELD_FOOD) - (m_pCity->foodConsumption() * 100);
; 336  : 			//if (iExcessFoodTimes100 < 200)
; 337  : 			//{
; 338  : 			SetForcedAvoidGrowth(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetForcedAvoidGrowth@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetForcedAvoidGrowth

; 339  : 			//}
; 340  : 			iExcessFoodTimes100 = m_pCity->getYieldRateTimes100(YIELD_FOOD, false) - (m_pCity->foodConsumption() * 100);

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getYieldRateTimes100@CvCity@@QBEHW4YieldTypes@@_N@Z ; CvCity::getYieldRateTimes100
	mov	esi, eax
	push	0
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?foodConsumption@CvCity@@QBEH_NH@Z	; CvCity::foodConsumption
	imul	eax, 100				; 00000064H
	sub	esi, eax
	mov	DWORD PTR _iExcessFoodTimes100$224410[ebp], esi

; 341  : 			if(iExcessFoodTimes100 < 200)

	cmp	DWORD PTR _iExcessFoodTimes100$224410[ebp], 200 ; 000000c8H
	jge	SHORT $LN24@DoTurn

; 342  : 			{
; 343  : 				SetFocusType(CITY_AI_FOCUS_TYPE_PROD_GROWTH);

	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType

; 344  : 				//SetNoAutoAssignSpecialists(true);
; 345  : 				SetForcedAvoidGrowth(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetForcedAvoidGrowth@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetForcedAvoidGrowth
$LN24@DoTurn:

; 346  : 			}
; 347  : 			iExcessFoodTimes100 = m_pCity->getYieldRateTimes100(YIELD_FOOD, false) - (m_pCity->foodConsumption() * 100);

	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getYieldRateTimes100@CvCity@@QBEHW4YieldTypes@@_N@Z ; CvCity::getYieldRateTimes100
	mov	esi, eax
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?foodConsumption@CvCity@@QBEH_NH@Z	; CvCity::foodConsumption
	imul	eax, 100				; 00000064H
	sub	esi, eax
	mov	DWORD PTR _iExcessFoodTimes100$224410[ebp], esi

; 348  : 			if(iExcessFoodTimes100 < 200)

	cmp	DWORD PTR _iExcessFoodTimes100$224410[ebp], 200 ; 000000c8H
	jge	SHORT $LN23@DoTurn

; 349  : 			{
; 350  : 				SetFocusType(NO_CITY_AI_FOCUS_TYPE);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType

; 351  : 				//SetNoAutoAssignSpecialists(true);
; 352  : 				SetForcedAvoidGrowth(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetForcedAvoidGrowth@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetForcedAvoidGrowth
$LN23@DoTurn:

; 353  : 			}
; 354  : 		}

	jmp	$LN32@DoTurn
$LN25@DoTurn:

; 355  : 		else if(m_pCity->getPopulation() < 5)  // we want a balanced growth

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, 5
	jge	SHORT $LN21@DoTurn

; 356  : 		{
; 357  : 			SetFocusType(NO_CITY_AI_FOCUS_TYPE);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType

; 358  : 			//SetNoAutoAssignSpecialists(true);
; 359  : 			SetForcedAvoidGrowth(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetForcedAvoidGrowth@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetForcedAvoidGrowth

; 360  : 		}
; 361  : 		else

	jmp	$LN32@DoTurn
$LN21@DoTurn:

; 362  : 		{
; 363  : 			// Are we running at a deficit?
; 364  : 			EconomicAIStrategyTypes eStrategyLosingMoney = (EconomicAIStrategyTypes) GC.getInfoTypeForString("ECONOMICAISTRATEGY_LOSING_MONEY", true);

	push	1
	push	OFFSET ??_C@_0CA@OBBOJGK@ECONOMICAISTRATEGY_LOSING_MONEY?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eStrategyLosingMoney$224416[ebp], eax

; 365  : 			bool bInDeficit = false;

	mov	BYTE PTR _bInDeficit$224419[ebp], 0

; 366  : 			if (eStrategyLosingMoney != NO_ECONOMICAISTRATEGY)

	cmp	DWORD PTR _eStrategyLosingMoney$224416[ebp], -1
	je	SHORT $LN19@DoTurn

; 367  : 			{
; 368  : 				bInDeficit = thisPlayer.GetEconomicAI()->IsUsingStrategy(eStrategyLosingMoney);

	mov	eax, DWORD PTR _eStrategyLosingMoney$224416[ebp]
	push	eax
	mov	ecx, DWORD PTR _thisPlayer$[ebp]
	call	?GetEconomicAI@CvPlayer@@QBEPAVCvEconomicAI@@XZ ; CvPlayer::GetEconomicAI
	mov	ecx, eax
	call	?IsUsingStrategy@CvEconomicAI@@QAE_NW4EconomicAIStrategyTypes@@@Z ; CvEconomicAI::IsUsingStrategy
	mov	BYTE PTR _bInDeficit$224419[ebp], al
$LN19@DoTurn:

; 369  : 			}
; 370  : 
; 371  : 			if(bInDeficit)

	movzx	ecx, BYTE PTR _bInDeficit$224419[ebp]
	test	ecx, ecx
	je	SHORT $LN18@DoTurn

; 372  : 			{
; 373  : 				SetFocusType(CITY_AI_FOCUS_TYPE_GOLD_GROWTH);

	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType

; 374  : 				SetNoAutoAssignSpecialists(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNoAutoAssignSpecialists@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetNoAutoAssignSpecialists

; 375  : 				SetForcedAvoidGrowth(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetForcedAvoidGrowth@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetForcedAvoidGrowth

; 376  : 				int iExcessFoodTimes100 = m_pCity->getYieldRateTimes100(YIELD_FOOD, false) - (m_pCity->foodConsumption() * 100);

	push	0
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getYieldRateTimes100@CvCity@@QBEHW4YieldTypes@@_N@Z ; CvCity::getYieldRateTimes100
	mov	esi, eax
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?foodConsumption@CvCity@@QBEH_NH@Z	; CvCity::foodConsumption
	imul	eax, 100				; 00000064H
	sub	esi, eax
	mov	DWORD PTR _iExcessFoodTimes100$224422[ebp], esi

; 377  : 				if(iExcessFoodTimes100 < 200)

	cmp	DWORD PTR _iExcessFoodTimes100$224422[ebp], 200 ; 000000c8H
	jge	SHORT $LN17@DoTurn

; 378  : 				{
; 379  : 					SetFocusType(NO_CITY_AI_FOCUS_TYPE);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType
$LN17@DoTurn:

; 380  : 					//SetNoAutoAssignSpecialists(true);
; 381  : 				}
; 382  : 			}

	jmp	$LN32@DoTurn
$LN18@DoTurn:

; 383  : 			else if(GC.getGame().getGameTurn() % 3 == 0 && thisPlayer.GetGrandStrategyAI()->GetActiveGrandStrategy() == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_CULTURE"))

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T225888[ebp], ecx
	mov	ecx, DWORD PTR $T225888[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	cdq
	mov	ecx, 3
	idiv	ecx
	test	edx, edx
	jne	$LN15@DoTurn
	mov	ecx, DWORD PTR _thisPlayer$[ebp]
	call	?GetGrandStrategyAI@CvPlayer@@QBEPAVCvGrandStrategyAI@@XZ ; CvPlayer::GetGrandStrategyAI
	mov	ecx, eax
	call	?GetActiveGrandStrategy@CvGrandStrategyAI@@QBE?AW4AIGrandStrategyTypes@@XZ ; CvGrandStrategyAI::GetActiveGrandStrategy
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0BI@FNGLFDGI@AIGRANDSTRATEGY_CULTURE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jne	SHORT $LN15@DoTurn

; 384  : 			{
; 385  : 				SetFocusType(CITY_AI_FOCUS_TYPE_CULTURE);

	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType

; 386  : 				SetNoAutoAssignSpecialists(true);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNoAutoAssignSpecialists@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetNoAutoAssignSpecialists

; 387  : 				SetForcedAvoidGrowth(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetForcedAvoidGrowth@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetForcedAvoidGrowth

; 388  : 				int iExcessFoodTimes100 = m_pCity->getYieldRateTimes100(YIELD_FOOD, false) - (m_pCity->foodConsumption() * 100);

	push	0
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getYieldRateTimes100@CvCity@@QBEHW4YieldTypes@@_N@Z ; CvCity::getYieldRateTimes100
	mov	esi, eax
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?foodConsumption@CvCity@@QBEH_NH@Z	; CvCity::foodConsumption
	imul	eax, 100				; 00000064H
	sub	esi, eax
	mov	DWORD PTR _iExcessFoodTimes100$224428[ebp], esi

; 389  : 				if(iExcessFoodTimes100 < 200)

	cmp	DWORD PTR _iExcessFoodTimes100$224428[ebp], 200 ; 000000c8H
	jge	SHORT $LN14@DoTurn

; 390  : 				{
; 391  : 					SetFocusType(NO_CITY_AI_FOCUS_TYPE);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType
$LN14@DoTurn:

; 392  : 					//SetNoAutoAssignSpecialists(true);
; 393  : 				}
; 394  : 			}
; 395  : 			else // we aren't a small city, building a wonder, or going broke

	jmp	$LN32@DoTurn
$LN15@DoTurn:

; 396  : 			{
; 397  : 				SetNoAutoAssignSpecialists(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNoAutoAssignSpecialists@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetNoAutoAssignSpecialists

; 398  : 				SetForcedAvoidGrowth(false);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetForcedAvoidGrowth@CvCityCitizens@@QAEX_N@Z ; CvCityCitizens::SetForcedAvoidGrowth

; 399  : 				CitySpecializationTypes eSpecialization = m_pCity->GetCityStrategyAI()->GetSpecialization();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetCityStrategyAI@CvCity@@QBEPAVCvCityStrategyAI@@XZ ; CvCity::GetCityStrategyAI
	mov	DWORD PTR $T225892[ebp], eax
	mov	edx, DWORD PTR $T225892[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _eSpecialization$224431[ebp], eax

; 400  : 				if(eSpecialization != -1)

	cmp	DWORD PTR _eSpecialization$224431[ebp], -1
	je	$LN12@DoTurn

; 401  : 				{
; 402  : 					CvCitySpecializationXMLEntry* pCitySpecializationEntry =  GC.getCitySpecializationInfo(eSpecialization);

	mov	ecx, DWORD PTR _eSpecialization$224431[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getCitySpecializationInfo@CvGlobals@@QAEPAVCvCitySpecializationXMLEntry@@W4CitySpecializationTypes@@@Z ; CvGlobals::getCitySpecializationInfo
	mov	DWORD PTR _pCitySpecializationEntry$224433[ebp], eax

; 403  : 					if(pCitySpecializationEntry)

	cmp	DWORD PTR _pCitySpecializationEntry$224433[ebp], 0
	je	SHORT $LN11@DoTurn

; 404  : 					{
; 405  : 						YieldTypes eYield = pCitySpecializationEntry->GetYieldType();

	mov	ecx, DWORD PTR _pCitySpecializationEntry$224433[ebp]
	call	?GetYieldType@CvCitySpecializationXMLEntry@@QBE?AW4YieldTypes@@XZ ; CvCitySpecializationXMLEntry::GetYieldType
	mov	DWORD PTR _eYield$224435[ebp], eax

; 406  : 						if(eYield == YIELD_FOOD)

	cmp	DWORD PTR _eYield$224435[ebp], 0
	jne	SHORT $LN10@DoTurn

; 407  : 						{
; 408  : 							SetFocusType(CITY_AI_FOCUS_TYPE_FOOD);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType
	jmp	SHORT $LN9@DoTurn
$LN10@DoTurn:

; 409  : 						}
; 410  : 						else if(eYield == YIELD_PRODUCTION)

	cmp	DWORD PTR _eYield$224435[ebp], 1
	jne	SHORT $LN8@DoTurn

; 411  : 						{
; 412  : 							SetFocusType(CITY_AI_FOCUS_TYPE_PROD_GROWTH);

	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType
	jmp	SHORT $LN9@DoTurn
$LN8@DoTurn:

; 413  : 						}
; 414  : 						else if(eYield == YIELD_GOLD)

	cmp	DWORD PTR _eYield$224435[ebp], 2
	jne	SHORT $LN6@DoTurn

; 415  : 						{
; 416  : 							SetFocusType(CITY_AI_FOCUS_TYPE_GOLD);

	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType
	jmp	SHORT $LN9@DoTurn
$LN6@DoTurn:

; 417  : 						}
; 418  : 						else if(eYield == YIELD_SCIENCE)

	cmp	DWORD PTR _eYield$224435[ebp], 3
	jne	SHORT $LN4@DoTurn

; 419  : 						{
; 420  : 							SetFocusType(CITY_AI_FOCUS_TYPE_SCIENCE);

	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType

; 421  : 						}
; 422  : 						else

	jmp	SHORT $LN9@DoTurn
$LN4@DoTurn:

; 423  : 						{
; 424  : 							SetFocusType(NO_CITY_AI_FOCUS_TYPE);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType
$LN9@DoTurn:

; 425  : 						}
; 426  : 					}
; 427  : 					else

	jmp	SHORT $LN2@DoTurn
$LN11@DoTurn:

; 428  : 					{
; 429  : 						SetFocusType(NO_CITY_AI_FOCUS_TYPE);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType
$LN2@DoTurn:

; 430  : 					}
; 431  : 				}
; 432  : 				else

	jmp	SHORT $LN32@DoTurn
$LN12@DoTurn:

; 433  : 				{
; 434  : 					SetFocusType(NO_CITY_AI_FOCUS_TYPE);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ; CvCityCitizens::SetFocusType
$LN32@DoTurn:

; 435  : 				}
; 436  : 			}
; 437  : 		}
; 438  : 	}
; 439  : 
; 440  : 	CvAssertMsg((GetNumCitizensWorkingPlots() + GetTotalSpecialistCount() + GetNumUnassignedCitizens()) <= GetCity()->getPopulation(), "Gameplay: More workers than population in the city.");
; 441  : 	DoReallocateCitizens();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoReallocateCitizens@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoReallocateCitizens

; 442  : 	CvAssertMsg((GetNumCitizensWorkingPlots() + GetTotalSpecialistCount() + GetNumUnassignedCitizens()) <= GetCity()->getPopulation(), "Gameplay: More workers than population in the city.");
; 443  : 	DoSpecialists();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoSpecialists@CvCityCitizens@@QAEXXZ	; CvCityCitizens::DoSpecialists

; 444  : 
; 445  : 	CvAssertMsg((GetNumCitizensWorkingPlots() + GetTotalSpecialistCount() + GetNumUnassignedCitizens()) <= GetCity()->getPopulation(), "Gameplay: More workers than population in the city.");
; 446  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?DoTurn@CvCityCitizens@@QAEXXZ ENDP			; CvCityCitizens::DoTurn
_TEXT	ENDS
PUBLIC	?GetFocusType@CvCityCitizens@@QBE?AW4CityAIFocusTypes@@XZ ; CvCityCitizens::GetFocusType
PUBLIC	?IsAvoidGrowth@CvCityCitizens@@QAE_NXZ		; CvCityCitizens::IsAvoidGrowth
PUBLIC	?GetPlotValue@CvCityCitizens@@QAEHPAVCvPlot@@_N@Z ; CvCityCitizens::GetPlotValue
EXTRN	?getYield@CvPlot@@QBEHW4YieldTypes@@@Z:PROC	; CvPlot::getYield
; Function compile flags: /Odtp
;	COMDAT ?GetPlotValue@CvCityCitizens@@QAEHPAVCvPlot@@_N@Z
_TEXT	SEGMENT
_this$ = -76						; size = 4
$T225919 = -72						; size = 4
$T225915 = -68						; size = 4
$T225911 = -64						; size = 4
$T225907 = -60						; size = 4
$T225903 = -56						; size = 4
$T225899 = -52						; size = 4
_iFoodT100NeededFor2$224484 = -48			; size = 4
_iFoodT100NeededFor0$224479 = -44			; size = 4
_iFaithYieldValue$ = -40				; size = 4
_iProductionYieldValue$ = -36				; size = 4
_bAvoidGrowth$ = -29					; size = 1
_iGoldYieldValue$ = -28					; size = 4
_iCultureYieldValue$ = -24				; size = 4
_iExcessFoodTimes100$ = -20				; size = 4
_iScienceYieldValue$ = -16				; size = 4
_iFoodYieldValue$ = -12					; size = 4
_iValue$ = -8						; size = 4
_eFocus$ = -4						; size = 4
_pPlot$ = 8						; size = 4
_bUseAllowGrowthFlag$ = 12				; size = 1
?GetPlotValue@CvCityCitizens@@QAEHPAVCvPlot@@_N@Z PROC	; CvCityCitizens::GetPlotValue, COMDAT
; _this$ = ecx

; 450  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 451  : 	int iValue = 0;

	mov	DWORD PTR _iValue$[ebp], 0

; 452  : 
; 453  : 	// Yield Values
; 454  : #ifdef AUI_CITIZENS_GET_VALUE_SPLIT_EXCESS_FOOD_MUTLIPLIER
; 455  : 	int iFoodYieldValue = /*12*/ GC.getAI_CITIZEN_VALUE_FOOD();
; 456  : #else
; 457  : 	int iFoodYieldValue = (/*12*/ GC.getAI_CITIZEN_VALUE_FOOD() * pPlot->getYield(YIELD_FOOD));

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2376
	mov	DWORD PTR $T225899[ebp], eax
	push	0
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?getYield@CvPlot@@QBEHW4YieldTypes@@@Z	; CvPlot::getYield
	imul	eax, DWORD PTR $T225899[ebp]
	mov	DWORD PTR _iFoodYieldValue$[ebp], eax

; 458  : #endif
; 459  : 	int iProductionYieldValue = (/*8*/ GC.getAI_CITIZEN_VALUE_PRODUCTION() * pPlot->getYield(YIELD_PRODUCTION));

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2380
	mov	DWORD PTR $T225903[ebp], ecx
	push	1
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?getYield@CvPlot@@QBEHW4YieldTypes@@@Z	; CvPlot::getYield
	imul	eax, DWORD PTR $T225903[ebp]
	mov	DWORD PTR _iProductionYieldValue$[ebp], eax

; 460  : #ifdef AUI_CITIZENS_GOLD_YIELD_COUNTS_AS_SCIENCE_WHEN_IN_DEFICIT
; 461  : 	int iGoldYieldValue = (pPlot->getYield(YIELD_GOLD));
; 462  : 	int iScienceYieldValue = (pPlot->getYield(YIELD_SCIENCE));
; 463  : #else
; 464  : 	int iGoldYieldValue = (/*10*/ GC.getAI_CITIZEN_VALUE_GOLD() * pPlot->getYield(YIELD_GOLD));

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2384
	mov	DWORD PTR $T225907[ebp], edx
	push	2
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?getYield@CvPlot@@QBEHW4YieldTypes@@@Z	; CvPlot::getYield
	imul	eax, DWORD PTR $T225907[ebp]
	mov	DWORD PTR _iGoldYieldValue$[ebp], eax

; 465  : 	int iScienceYieldValue = (/*6*/ GC.getAI_CITIZEN_VALUE_SCIENCE() * pPlot->getYield(YIELD_SCIENCE));

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2388
	mov	DWORD PTR $T225911[ebp], eax
	push	3
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?getYield@CvPlot@@QBEHW4YieldTypes@@@Z	; CvPlot::getYield
	imul	eax, DWORD PTR $T225911[ebp]
	mov	DWORD PTR _iScienceYieldValue$[ebp], eax

; 466  : #endif
; 467  : 	int iCultureYieldValue = (GC.getAI_CITIZEN_VALUE_CULTURE() * pPlot->getYield(YIELD_CULTURE));

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2392
	mov	DWORD PTR $T225915[ebp], ecx
	push	4
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?getYield@CvPlot@@QBEHW4YieldTypes@@@Z	; CvPlot::getYield
	imul	eax, DWORD PTR $T225915[ebp]
	mov	DWORD PTR _iCultureYieldValue$[ebp], eax

; 468  : 	int iFaithYieldValue = (GC.getAI_CITIZEN_VALUE_FAITH() * pPlot->getYield(YIELD_FAITH));

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2396
	mov	DWORD PTR $T225919[ebp], edx
	push	5
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?getYield@CvPlot@@QBEHW4YieldTypes@@@Z	; CvPlot::getYield
	imul	eax, DWORD PTR $T225919[ebp]
	mov	DWORD PTR _iFaithYieldValue$[ebp], eax

; 469  : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_YIELD_RATE_MODIFIERS
; 470  : #ifndef AUI_CITIZENS_GET_VALUE_SPLIT_EXCESS_FOOD_MUTLIPLIER
; 471  : 	iFoodYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_FOOD);
; 472  : #endif
; 473  : 	iProductionYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_PRODUCTION);
; 474  : 	iGoldYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_GOLD);
; 475  : 	iScienceYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_SCIENCE);
; 476  : 	iCultureYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_CULTURE);
; 477  : 	iFaithYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_FAITH);
; 478  : #endif
; 479  : #ifdef AUI_CITIZENS_GOLD_YIELD_COUNTS_AS_SCIENCE_WHEN_IN_DEFICIT
; 480  : 	int iCurrentScienceLoss = -GetPlayer()->calculateGoldRateTimes100() - GetPlayer()->GetTreasury()->GetGoldTimes100();
; 481  : 	if (IsWorkingPlot(pPlot))
; 482  : 		iCurrentScienceLoss += iGoldYieldValue;
; 483  : 	if (iCurrentScienceLoss > 0)
; 484  : 	{
; 485  : 		int iGoldToScienceT100 = MIN(iGoldYieldValue, iCurrentScienceLoss);
; 486  : 		iGoldYieldValue -= iGoldToScienceT100;
; 487  : 		iScienceYieldValue += iGoldToScienceT100;
; 488  : 	}
; 489  : 	iGoldYieldValue *= GC.getAI_CITIZEN_VALUE_GOLD();
; 490  : 	iScienceYieldValue *= GC.getAI_CITIZEN_VALUE_SCIENCE();
; 491  : #endif
; 492  : 
; 493  : 	// How much surplus food are we making?
; 494  : 	int iExcessFoodTimes100 = m_pCity->getYieldRateTimes100(YIELD_FOOD, false) - (m_pCity->foodConsumption() * 100);

	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getYieldRateTimes100@CvCity@@QBEHW4YieldTypes@@_N@Z ; CvCity::getYieldRateTimes100
	mov	esi, eax
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?foodConsumption@CvCity@@QBEH_NH@Z	; CvCity::foodConsumption
	imul	eax, 100				; 00000064H
	sub	esi, eax
	mov	DWORD PTR _iExcessFoodTimes100$[ebp], esi

; 495  : #if defined(AUI_CITIZENS_GET_VALUE_SPLIT_EXCESS_FOOD_MUTLIPLIER) || defined(AUI_CITIZENS_GET_VALUE_ALTER_FOOD_VALUE_IF_FOOD_PRODUCTION) || defined(AUI_CITIZENS_GET_VALUE_CONSIDER_GROWTH_MODIFIERS)
; 496  : 	int iExcessFoodWithPlotTimes100 = iExcessFoodTimes100;
; 497  : 	if (IsWorkingPlot(pPlot))
; 498  : 		iExcessFoodTimes100 -= pPlot->getYield(YIELD_FOOD) * m_pCity->getBaseYieldRateModifier(YIELD_FOOD);
; 499  : 	else
; 500  : 		iExcessFoodWithPlotTimes100 += pPlot->getYield(YIELD_FOOD) * m_pCity->getBaseYieldRateModifier(YIELD_FOOD);
; 501  : #endif
; 502  : 
; 503  : 	bool bAvoidGrowth = IsAvoidGrowth();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAvoidGrowth@CvCityCitizens@@QAE_NXZ	; CvCityCitizens::IsAvoidGrowth
	mov	BYTE PTR _bAvoidGrowth$[ebp], al

; 504  : 
; 505  : 	// City Focus
; 506  : 	CityAIFocusTypes eFocus = GetFocusType();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFocusType@CvCityCitizens@@QBE?AW4CityAIFocusTypes@@XZ ; CvCityCitizens::GetFocusType
	mov	DWORD PTR _eFocus$[ebp], eax

; 507  : 	if(eFocus == CITY_AI_FOCUS_TYPE_FOOD)

	cmp	DWORD PTR _eFocus$[ebp], 0
	jne	SHORT $LN27@GetPlotVal

; 508  : 		iFoodYieldValue *= 3;

	mov	edx, DWORD PTR _iFoodYieldValue$[ebp]
	imul	edx, 3
	mov	DWORD PTR _iFoodYieldValue$[ebp], edx
	jmp	$LN26@GetPlotVal
$LN27@GetPlotVal:

; 509  : 	else if(eFocus == CITY_AI_FOCUS_TYPE_PRODUCTION)

	cmp	DWORD PTR _eFocus$[ebp], 1
	jne	SHORT $LN25@GetPlotVal

; 510  : 		iProductionYieldValue *= 3;

	mov	eax, DWORD PTR _iProductionYieldValue$[ebp]
	imul	eax, 3
	mov	DWORD PTR _iProductionYieldValue$[ebp], eax
	jmp	SHORT $LN26@GetPlotVal
$LN25@GetPlotVal:

; 511  : 	else if(eFocus == CITY_AI_FOCUS_TYPE_GOLD)

	cmp	DWORD PTR _eFocus$[ebp], 2
	jne	SHORT $LN23@GetPlotVal

; 512  : 		iGoldYieldValue *= 3;

	mov	ecx, DWORD PTR _iGoldYieldValue$[ebp]
	imul	ecx, 3
	mov	DWORD PTR _iGoldYieldValue$[ebp], ecx
	jmp	SHORT $LN26@GetPlotVal
$LN23@GetPlotVal:

; 513  : 	else if(eFocus == CITY_AI_FOCUS_TYPE_SCIENCE)

	cmp	DWORD PTR _eFocus$[ebp], 4
	jne	SHORT $LN21@GetPlotVal

; 514  : 		iScienceYieldValue *= 3;

	mov	edx, DWORD PTR _iScienceYieldValue$[ebp]
	imul	edx, 3
	mov	DWORD PTR _iScienceYieldValue$[ebp], edx
	jmp	SHORT $LN26@GetPlotVal
$LN21@GetPlotVal:

; 515  : 	else if(eFocus == CITY_AI_FOCUS_TYPE_CULTURE)

	cmp	DWORD PTR _eFocus$[ebp], 5
	jne	SHORT $LN19@GetPlotVal

; 516  : 		iCultureYieldValue *= 3;

	mov	eax, DWORD PTR _iCultureYieldValue$[ebp]
	imul	eax, 3
	mov	DWORD PTR _iCultureYieldValue$[ebp], eax
	jmp	SHORT $LN26@GetPlotVal
$LN19@GetPlotVal:

; 517  : 	else if(eFocus == CITY_AI_FOCUS_TYPE_GOLD_GROWTH)

	cmp	DWORD PTR _eFocus$[ebp], 7
	jne	SHORT $LN17@GetPlotVal

; 518  : 	{
; 519  : 		iFoodYieldValue *= 2;

	mov	ecx, DWORD PTR _iFoodYieldValue$[ebp]
	shl	ecx, 1
	mov	DWORD PTR _iFoodYieldValue$[ebp], ecx

; 520  : 		iGoldYieldValue *= 2;

	mov	edx, DWORD PTR _iGoldYieldValue$[ebp]
	shl	edx, 1
	mov	DWORD PTR _iGoldYieldValue$[ebp], edx
	jmp	SHORT $LN26@GetPlotVal
$LN17@GetPlotVal:

; 521  : 	}
; 522  : 	else if(eFocus == CITY_AI_FOCUS_TYPE_PROD_GROWTH)

	cmp	DWORD PTR _eFocus$[ebp], 6
	jne	SHORT $LN15@GetPlotVal

; 523  : 	{
; 524  : 		iFoodYieldValue *= 2;

	mov	eax, DWORD PTR _iFoodYieldValue$[ebp]
	shl	eax, 1
	mov	DWORD PTR _iFoodYieldValue$[ebp], eax

; 525  : 		iProductionYieldValue *= 2;

	mov	ecx, DWORD PTR _iProductionYieldValue$[ebp]
	shl	ecx, 1
	mov	DWORD PTR _iProductionYieldValue$[ebp], ecx
	jmp	SHORT $LN26@GetPlotVal
$LN15@GetPlotVal:

; 526  : 	}
; 527  : 	else if(eFocus == CITY_AI_FOCUS_TYPE_FAITH)

	cmp	DWORD PTR _eFocus$[ebp], 8
	jne	SHORT $LN26@GetPlotVal

; 528  : 	{
; 529  : 		iFaithYieldValue *= 3;

	mov	edx, DWORD PTR _iFaithYieldValue$[ebp]
	imul	edx, 3
	mov	DWORD PTR _iFaithYieldValue$[ebp], edx
$LN26@GetPlotVal:

; 530  : 	}
; 531  : 
; 532  : #ifdef AUI_CITIZENS_GET_VALUE_ALTER_FOOD_VALUE_IF_FOOD_PRODUCTION
; 533  : #ifdef AUI_CITIZENS_FOOD_PRODUCTION_TRIAL_RUN_THEN_SELF_CONSISTENCY
; 534  : 	if (!getIgnoreFoodProduction() && m_pCity->isFoodProduction())
; 535  : #else
; 536  : 	if (m_pCity->isFoodProduction())
; 537  : #endif
; 538  : 	{
; 539  : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_GROWTH_MODIFIERS
; 540  : 		iFoodYieldValue = m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodWithPlotTimes100) - m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodTimes100);
; 541  : 		int iDummy = m_pCity->GetFoodProduction(iExcessFoodTimes100 / 100);
; 542  : 		int iCurrProdFromFood = m_pCity->foodDifference(true, &iDummy);
; 543  : 		iDummy = m_pCity->GetFoodProduction(iExcessFoodWithPlotTimes100 / 100);
; 544  : 		int iProdFromFoodWithTile = m_pCity->foodDifference(true, &iDummy);
; 545  : #ifndef AUI_CITIZENS_GET_VALUE_CONSIDER_YIELD_RATE_MODIFIERS
; 546  : 		iFoodYieldValue /= 100;
; 547  : #endif
; 548  : #else
; 549  : 		iFoodYieldValue = iExcessFoodWithPlotTimes100 - iExcessFoodTimes100;
; 550  : 		int iCurrProdFromFood = m_pCity->GetFoodProduction(iExcessFoodTimes100 / 100);
; 551  : 		int iProdFromFoodWithTile = m_pCity->GetFoodProduction(iExcessFoodWithPlotTimes100 / 100);
; 552  : #endif
; 553  : 		iProductionYieldValue += (iProdFromFoodWithTile - iCurrProdFromFood) * GC.getAI_CITIZEN_VALUE_PRODUCTION() * (eFocus == CITY_AI_FOCUS_TYPE_PRODUCTION ? 3 : 1);
; 554  : 	}
; 555  : 	else
; 556  : #endif
; 557  : 	// Food can be worth less if we don't want to grow
; 558  : 	if(bUseAllowGrowthFlag && iExcessFoodTimes100 >= 0 && bAvoidGrowth)

	movzx	eax, BYTE PTR _bUseAllowGrowthFlag$[ebp]
	test	eax, eax
	je	SHORT $LN12@GetPlotVal
	cmp	DWORD PTR _iExcessFoodTimes100$[ebp], 0
	jl	SHORT $LN12@GetPlotVal
	movzx	ecx, BYTE PTR _bAvoidGrowth$[ebp]
	test	ecx, ecx
	je	SHORT $LN12@GetPlotVal

; 559  : 	{
; 560  : 		// If we at least have enough Food to feed everyone, zero out the value of additional food
; 561  : #ifdef AUI_CITIZENS_AVOID_GROWTH_STILL_VALUES_EXCESS_FOOD
; 562  : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_GROWTH_MODIFIERS
; 563  : 		iExcessFoodTimes100 = m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodTimes100);
; 564  : 		iExcessFoodWithPlotTimes100 = m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodWithPlotTimes100);
; 565  : #endif
; 566  : 		iFoodYieldValue = iExcessFoodWithPlotTimes100 - iExcessFoodTimes100;
; 567  : #ifndef AUI_CITIZENS_GET_VALUE_CONSIDER_YIELD_RATE_MODIFIERS
; 568  : 		iFoodYieldValue /= 100;
; 569  : #endif
; 570  : #else
; 571  : 		iFoodYieldValue = 0;

	mov	DWORD PTR _iFoodYieldValue$[ebp], 0

; 572  : #endif
; 573  : 	}
; 574  : 	// We want to grow here
; 575  : 	else

	jmp	SHORT $LN11@GetPlotVal
$LN12@GetPlotVal:

; 576  : 	{
; 577  : #ifdef AUI_CITIZENS_GET_VALUE_SPLIT_EXCESS_FOOD_MUTLIPLIER
; 578  : 		iFoodYieldValue *= 8;
; 579  : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_GROWTH_MODIFIERS
; 580  : 		iExcessFoodTimes100 = m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodTimes100);
; 581  : 		iExcessFoodWithPlotTimes100 = m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodWithPlotTimes100);
; 582  : #endif
; 583  : #ifdef AUI_CITIZENS_AVOID_GROWTH_STILL_VALUES_EXCESS_FOOD
; 584  : 		int iExcessFoodYieldValue = 1;
; 585  : #else
; 586  : 		int iExcessFoodYieldValue = 0;
; 587  : #endif
; 588  : 		int iTargetFoodT100 = 0;
; 589  : 		if (!bUseAllowGrowthFlag || !bAvoidGrowth)
; 590  : 		{
; 591  : 			iExcessFoodYieldValue = iFoodYieldValue / 16;
; 592  : #ifdef AUI_CITIZENS_LOW_POPULATION_CITIES_USE_2MIN_NOT_4X_FOOD
; 593  : 			if (eFocus == NO_CITY_AI_FOCUS_TYPE || eFocus == CITY_AI_FOCUS_TYPE_FOOD || eFocus == CITY_AI_FOCUS_TYPE_PROD_GROWTH
; 594  : 				|| eFocus == CITY_AI_FOCUS_TYPE_GOLD_GROWTH || m_pCity->getPopulation() < 2)
; 595  : #else
; 596  : 			if (eFocus == NO_CITY_AI_FOCUS_TYPE || eFocus == CITY_AI_FOCUS_TYPE_FOOD || eFocus == CITY_AI_FOCUS_TYPE_PROD_GROWTH || eFocus == CITY_AI_FOCUS_TYPE_GOLD_GROWTH)
; 597  : #endif
; 598  : 			{
; 599  : 				iTargetFoodT100 = 100 * GC.getFOOD_CONSUMPTION_PER_POPULATION();
; 600  : 			}
; 601  : #ifdef AUI_CITIZENS_PUPPET_STILL_WANTS_GROWTH
; 602  : 			else if (m_pCity->IsPuppet())
; 603  : 				iTargetFoodT100 = 50 * GC.getFOOD_CONSUMPTION_PER_POPULATION();
; 604  : #endif
; 605  : 		}
; 606  : 
; 607  : 		int iNonExcessFoodPlotYieldT100 = iExcessFoodWithPlotTimes100 - iExcessFoodTimes100;
; 608  : 		int iExcessFoodPlotYieldT100 = iNonExcessFoodPlotYieldT100;
; 609  : 		if (iExcessFoodWithPlotTimes100 <= iTargetFoodT100)
; 610  : 		{
; 611  : 			iExcessFoodPlotYieldT100 = 0;
; 612  : 		}
; 613  : 		else if (iExcessFoodTimes100 >= iTargetFoodT100)
; 614  : 		{
; 615  : 			iNonExcessFoodPlotYieldT100 = 0;
; 616  : 		}
; 617  : 		else
; 618  : 		{
; 619  : 			iNonExcessFoodPlotYieldT100 = iTargetFoodT100 - iExcessFoodTimes100;
; 620  : 			iExcessFoodPlotYieldT100 = iExcessFoodWithPlotTimes100 - iTargetFoodT100;
; 621  : 		}
; 622  : 
; 623  : 		iFoodYieldValue *= iNonExcessFoodPlotYieldT100;
; 624  : 		iFoodYieldValue += (iExcessFoodPlotYieldT100 * iExcessFoodYieldValue);
; 625  : #ifndef AUI_CITIZENS_GET_VALUE_CONSIDER_YIELD_RATE_MODIFIERS
; 626  : 		iFoodYieldValue /= 100;
; 627  : #endif
; 628  : #else
; 629  : 		// If we have a non-default and non-food focus, only worry about getting to 0 food
; 630  : #ifdef AUI_CITIZENS_LOW_POPULATION_CITIES_USE_2MIN_NOT_4X_FOOD
; 631  : 		if (eFocus != NO_CITY_AI_FOCUS_TYPE && eFocus != CITY_AI_FOCUS_TYPE_FOOD && eFocus != CITY_AI_FOCUS_TYPE_PROD_GROWTH && eFocus != CITY_AI_FOCUS_TYPE_GOLD_GROWTH && m_pCity->getPopulation() >= 5)
; 632  : #else
; 633  : 		if(eFocus != NO_CITY_AI_FOCUS_TYPE && eFocus != CITY_AI_FOCUS_TYPE_FOOD && eFocus != CITY_AI_FOCUS_TYPE_PROD_GROWTH && eFocus != CITY_AI_FOCUS_TYPE_GOLD_GROWTH)

	cmp	DWORD PTR _eFocus$[ebp], -1
	je	SHORT $LN10@GetPlotVal
	cmp	DWORD PTR _eFocus$[ebp], 0
	je	SHORT $LN10@GetPlotVal
	cmp	DWORD PTR _eFocus$[ebp], 6
	je	SHORT $LN10@GetPlotVal
	cmp	DWORD PTR _eFocus$[ebp], 7
	je	SHORT $LN10@GetPlotVal

; 634  : #endif
; 635  : 		{
; 636  : 			int iFoodT100NeededFor0 = -iExcessFoodTimes100;

	mov	edx, DWORD PTR _iExcessFoodTimes100$[ebp]
	neg	edx
	mov	DWORD PTR _iFoodT100NeededFor0$224479[ebp], edx

; 637  : 
; 638  : 			if(iFoodT100NeededFor0 > 0)

	cmp	DWORD PTR _iFoodT100NeededFor0$224479[ebp], 0
	jle	SHORT $LN9@GetPlotVal

; 639  : 			{
; 640  : 				iFoodYieldValue *= 8;

	mov	eax, DWORD PTR _iFoodYieldValue$[ebp]
	shl	eax, 3
	mov	DWORD PTR _iFoodYieldValue$[ebp], eax

; 641  : 			}
; 642  : 			else

	jmp	SHORT $LN8@GetPlotVal
$LN9@GetPlotVal:

; 643  : 			{
; 644  : 				iFoodYieldValue /= 2;

	mov	eax, DWORD PTR _iFoodYieldValue$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _iFoodYieldValue$[ebp], eax
$LN8@GetPlotVal:

; 645  : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_GROWTH_MODIFIERS
; 646  : 				int iExtraFoodValueT100 = (m_pCity->foodDifferenceTimes100(true, NULL, true, iExcessFoodWithPlotTimes100 - iExcessFoodTimes100) -
; 647  : 					(iExcessFoodWithPlotTimes100 - iExcessFoodTimes100)) * /*12*/ GC.getAI_CITIZEN_VALUE_FOOD();
; 648  : 				if (eFocus == CITY_AI_FOCUS_TYPE_FOOD)
; 649  : 					iExtraFoodValueT100 *= 3;
; 650  : 				else if (eFocus == CITY_AI_FOCUS_TYPE_GOLD_GROWTH || eFocus == CITY_AI_FOCUS_TYPE_PROD_GROWTH)
; 651  : 					iExtraFoodValueT100 *= 2;
; 652  : 				iFoodYieldValue += iExtraFoodValueT100 / 200;
; 653  : #endif
; 654  : 			}

	jmp	SHORT $LN11@GetPlotVal
$LN10@GetPlotVal:

; 655  : 		}
; 656  : 		// If our surplus is not at least 2, really emphasize food plots
; 657  : 		else if(!bAvoidGrowth)

	movzx	ecx, BYTE PTR _bAvoidGrowth$[ebp]
	test	ecx, ecx
	jne	SHORT $LN11@GetPlotVal

; 658  : 		{
; 659  : #ifdef AUI_CITIZENS_GET_VALUE_SPLIT_EXCESS_FOOD_MUTLIPLIER
; 660  : 			int iFoodT100NeededFor2 = 100 * GC.getFOOD_CONSUMPTION_PER_POPULATION() - iExcessFoodTimes100;
; 661  : #else
; 662  : 			int iFoodT100NeededFor2 = 200 - iExcessFoodTimes100;

	mov	edx, 200				; 000000c8H
	sub	edx, DWORD PTR _iExcessFoodTimes100$[ebp]
	mov	DWORD PTR _iFoodT100NeededFor2$224484[ebp], edx

; 663  : #endif
; 664  : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_GROWTH_MODIFIERS
; 665  : 			int iExtraFoodValueT100 = (m_pCity->foodDifferenceTimes100(true, NULL, true, iExcessFoodWithPlotTimes100 - iExcessFoodTimes100) -
; 666  : 				(iExcessFoodWithPlotTimes100 - iExcessFoodTimes100)) * /*12*/ GC.getAI_CITIZEN_VALUE_FOOD();
; 667  : 			if (eFocus == CITY_AI_FOCUS_TYPE_FOOD)
; 668  : 				iExtraFoodValueT100 *= 3;
; 669  : 			else if (eFocus == CITY_AI_FOCUS_TYPE_GOLD_GROWTH || eFocus == CITY_AI_FOCUS_TYPE_PROD_GROWTH)
; 670  : 				iExtraFoodValueT100 *= 2;
; 671  : #endif
; 672  : 
; 673  : 			if(iFoodT100NeededFor2 > 0)

	cmp	DWORD PTR _iFoodT100NeededFor2$224484[ebp], 0
	jle	SHORT $LN5@GetPlotVal

; 674  : 			{
; 675  : 				iFoodYieldValue *= 8;

	mov	eax, DWORD PTR _iFoodYieldValue$[ebp]
	shl	eax, 3
	mov	DWORD PTR _iFoodYieldValue$[ebp], eax
	jmp	SHORT $LN11@GetPlotVal
$LN5@GetPlotVal:

; 676  : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_GROWTH_MODIFIERS
; 677  : 				iExtraFoodValueT100 = (m_pCity->foodDifferenceTimes100(true, NULL, true, MIN(iExcessFoodWithPlotTimes100, 100 * GC.getFOOD_CONSUMPTION_PER_POPULATION())) -
; 678  : 					MIN(iExcessFoodWithPlotTimes100, 100 * GC.getFOOD_CONSUMPTION_PER_POPULATION())) * 8 * /*12*/ GC.getAI_CITIZEN_VALUE_FOOD();
; 679  : 				if (eFocus == CITY_AI_FOCUS_TYPE_FOOD)
; 680  : 					iExtraFoodValueT100 *= 3;
; 681  : 				else if (eFocus == CITY_AI_FOCUS_TYPE_GOLD_GROWTH || eFocus == CITY_AI_FOCUS_TYPE_PROD_GROWTH)
; 682  : 					iExtraFoodValueT100 *= 2;
; 683  : 				iFoodYieldValue += iExtraFoodValueT100 / 100;
; 684  : #endif
; 685  : 			}
; 686  : 			else if (eFocus != CITY_AI_FOCUS_TYPE_FOOD)

	cmp	DWORD PTR _eFocus$[ebp], 0
	je	SHORT $LN11@GetPlotVal

; 687  : 			{
; 688  : 				iFoodYieldValue /= 2;

	mov	eax, DWORD PTR _iFoodYieldValue$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _iFoodYieldValue$[ebp], eax
$LN11@GetPlotVal:

; 689  : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_GROWTH_MODIFIERS
; 690  : 				iFoodYieldValue += iExtraFoodValueT100 / 200;
; 691  : 			}
; 692  : 			else
; 693  : 			{
; 694  : 				iFoodYieldValue += iExtraFoodValueT100 / 100;
; 695  : #endif
; 696  : 			}
; 697  : 		}
; 698  : #ifdef AUI_CITIZENS_FIX_GET_VALUE_FOOD_YIELD_VALUE_WHEN_STARVATION_WITH_AVOID_GROWTH
; 699  : 		// Food focus and negative food, but with avoid growth enabled for some reason
; 700  : 		else
; 701  : 		{
; 702  : 			iFoodYieldValue *= 8;
; 703  : 		}
; 704  : #endif
; 705  : #endif
; 706  : 	}
; 707  : 
; 708  : #ifndef AUI_CITIZENS_LOW_POPULATION_CITIES_USE_2MIN_NOT_4X_FOOD
; 709  : 	if((eFocus == NO_CITY_AI_FOCUS_TYPE || eFocus == CITY_AI_FOCUS_TYPE_PROD_GROWTH || eFocus == CITY_AI_FOCUS_TYPE_GOLD_GROWTH) && !bAvoidGrowth && m_pCity->getPopulation() < 5)

	cmp	DWORD PTR _eFocus$[ebp], -1
	je	SHORT $LN1@GetPlotVal
	cmp	DWORD PTR _eFocus$[ebp], 6
	je	SHORT $LN1@GetPlotVal
	cmp	DWORD PTR _eFocus$[ebp], 7
	jne	SHORT $LN2@GetPlotVal
$LN1@GetPlotVal:
	movzx	ecx, BYTE PTR _bAvoidGrowth$[ebp]
	test	ecx, ecx
	jne	SHORT $LN2@GetPlotVal
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, 5
	jge	SHORT $LN2@GetPlotVal

; 710  : 	{
; 711  : 		iFoodYieldValue *= 4;

	mov	eax, DWORD PTR _iFoodYieldValue$[ebp]
	shl	eax, 2
	mov	DWORD PTR _iFoodYieldValue$[ebp], eax
$LN2@GetPlotVal:

; 712  : 	}
; 713  : #endif
; 714  : 
; 715  : 	iValue += iFoodYieldValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	add	ecx, DWORD PTR _iFoodYieldValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], ecx

; 716  : 	iValue += iProductionYieldValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	add	edx, DWORD PTR _iProductionYieldValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], edx

; 717  : 	iValue += iGoldYieldValue;

	mov	eax, DWORD PTR _iValue$[ebp]
	add	eax, DWORD PTR _iGoldYieldValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 718  : 	iValue += iScienceYieldValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	add	ecx, DWORD PTR _iScienceYieldValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], ecx

; 719  : 	iValue += iCultureYieldValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	add	edx, DWORD PTR _iCultureYieldValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], edx

; 720  : 	iValue += iFaithYieldValue;

	mov	eax, DWORD PTR _iValue$[ebp]
	add	eax, DWORD PTR _iFaithYieldValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 721  : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_YIELD_RATE_MODIFIERS
; 722  : 	iValue /= 100;
; 723  : #endif
; 724  : 
; 725  : 	return iValue;

	mov	eax, DWORD PTR _iValue$[ebp]

; 726  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?GetPlotValue@CvCityCitizens@@QAEHPAVCvPlot@@_N@Z ENDP	; CvCityCitizens::GetPlotValue
_TEXT	ENDS
PUBLIC	?IsAutomated@CvCityCitizens@@QBE_NXZ		; CvCityCitizens::IsAutomated
; Function compile flags: /Odtp
;	COMDAT ?IsAutomated@CvCityCitizens@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsAutomated@CvCityCitizens@@QBE_NXZ PROC		; CvCityCitizens::IsAutomated, COMDAT
; _this$ = ecx

; 730  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 731  : 	return m_bAutomated;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+4]

; 732  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsAutomated@CvCityCitizens@@QBE_NXZ ENDP		; CvCityCitizens::IsAutomated
_TEXT	ENDS
PUBLIC	?SetAutomated@CvCityCitizens@@QAEX_N@Z		; CvCityCitizens::SetAutomated
; Function compile flags: /Odtp
;	COMDAT ?SetAutomated@CvCityCitizens@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bValue$ = 8						; size = 1
?SetAutomated@CvCityCitizens@@QAEX_N@Z PROC		; CvCityCitizens::SetAutomated, COMDAT
; _this$ = ecx

; 736  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 737  : 	m_bAutomated = bValue;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _bValue$[ebp]
	mov	BYTE PTR [eax+4], cl

; 738  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetAutomated@CvCityCitizens@@QAEX_N@Z ENDP		; CvCityCitizens::SetAutomated
_TEXT	ENDS
PUBLIC	?IsNoAutoAssignSpecialists@CvCityCitizens@@QBE_NXZ ; CvCityCitizens::IsNoAutoAssignSpecialists
; Function compile flags: /Odtp
;	COMDAT ?IsNoAutoAssignSpecialists@CvCityCitizens@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsNoAutoAssignSpecialists@CvCityCitizens@@QBE_NXZ PROC	; CvCityCitizens::IsNoAutoAssignSpecialists, COMDAT
; _this$ = ecx

; 742  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 743  : 	return m_bNoAutoAssignSpecialists;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+5]

; 744  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsNoAutoAssignSpecialists@CvCityCitizens@@QBE_NXZ ENDP	; CvCityCitizens::IsNoAutoAssignSpecialists
_TEXT	ENDS
PUBLIC	?DoClearForcedSpecialists@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoClearForcedSpecialists
; Function compile flags: /Odtp
;	COMDAT ?SetNoAutoAssignSpecialists@CvCityCitizens@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bValue$ = 8						; size = 1
?SetNoAutoAssignSpecialists@CvCityCitizens@@QAEX_N@Z PROC ; CvCityCitizens::SetNoAutoAssignSpecialists, COMDAT
; _this$ = ecx

; 748  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 749  : 	if(m_bNoAutoAssignSpecialists != bValue)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+5]
	movzx	edx, BYTE PTR _bValue$[ebp]
	cmp	ecx, edx
	je	SHORT $LN3@SetNoAutoA

; 750  : 	{
; 751  : 		m_bNoAutoAssignSpecialists = bValue;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _bValue$[ebp]
	mov	BYTE PTR [eax+5], cl

; 752  : 
; 753  : 		// If we're giving the AI control clear all manually assigned Specialists
; 754  : 		if(!bValue)

	movzx	edx, BYTE PTR _bValue$[ebp]
	test	edx, edx
	jne	SHORT $LN1@SetNoAutoA

; 755  : 		{
; 756  : 			DoClearForcedSpecialists();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoClearForcedSpecialists@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoClearForcedSpecialists
$LN1@SetNoAutoA:

; 757  : 		}
; 758  : 
; 759  : 		DoReallocateCitizens();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoReallocateCitizens@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoReallocateCitizens
$LN3@SetNoAutoA:

; 760  : 	}
; 761  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetNoAutoAssignSpecialists@CvCityCitizens@@QAEX_N@Z ENDP ; CvCityCitizens::SetNoAutoAssignSpecialists
_TEXT	ENDS
PUBLIC	?IsForcedAvoidGrowth@CvCityCitizens@@QAE_NXZ	; CvCityCitizens::IsForcedAvoidGrowth
EXTRN	?GetExcessHappiness@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetExcessHappiness
EXTRN	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z:PROC ; CvGame::isOption
; Function compile flags: /Odtp
;	COMDAT ?IsAvoidGrowth@CvCityCitizens@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T225933 = -4						; size = 4
?IsAvoidGrowth@CvCityCitizens@@QAE_NXZ PROC		; CvCityCitizens::IsAvoidGrowth, COMDAT
; _this$ = ecx

; 769  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 770  : #ifndef AUI_CITIZENS_FIX_AVOID_GROWTH_FLAG_NOT_IGNORED_IF_NO_HAPPINESS
; 771  : 	if(GC.getGame().isOption(GAMEOPTION_NO_HAPPINESS))

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T225933[ebp], eax
	push	19					; 00000013H
	mov	ecx, DWORD PTR $T225933[ebp]
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@IsAvoidGro

; 772  : 	{
; 773  : 		return false;

	xor	al, al
	jmp	SHORT $LN3@IsAvoidGro
$LN2@IsAvoidGro:

; 774  : 	}
; 775  : #endif
; 776  : 
; 777  : #ifdef AUI_CITIZENS_FIX_FORCED_AVOID_GROWTH_ONLY_WHEN_GROWING_LOWERS_HAPPINESS
; 778  : 	if (GetPlayer()->GetExcessHappiness() <= 0)
; 779  : 	{
; 780  : 		int iPopulation = m_pCity->getPopulation();
; 781  : 		int iLocalHappinessCap = iPopulation;
; 782  : 
; 783  : 		// India has unique way to compute local happiness cap
; 784  : 		if (GetPlayer()->GetPlayerTraits()->GetCityUnhappinessModifier() != 0)
; 785  : 		{
; 786  : 			// 0.67 per population, rounded up
; 787  : 			iLocalHappinessCap = (iLocalHappinessCap * 20) + 15;
; 788  : 			iLocalHappinessCap /= 30;
; 789  : 		}
; 790  : 		// Growing would not be covered by local happiness
; 791  : 		if (m_pCity->GetLocalHappiness() < iLocalHappinessCap)
; 792  : 		{
; 793  : 			int iHappinessPerXPopulation = GetPlayer()->GetHappinessPerXPopulation();
; 794  : 			// Growing would not be covered by happiness per X population
; 795  : 			if (iHappinessPerXPopulation == 0 || m_pCity->IsPuppet() || (iPopulation + 1) / iHappinessPerXPopulation <= iPopulation / iHappinessPerXPopulation)
; 796  : 			{
; 797  : 				// Growing would not be covered by reduced unhappiness from population
; 798  : 				bool bHasSpecialistSlot = false;
; 799  : #ifdef AUI_WARNING_FIXES
; 800  : 				for (uint iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)
; 801  : #else
; 802  : 				for (int iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)
; 803  : #endif
; 804  : 				{
; 805  : 					const BuildingTypes eBuilding = static_cast<BuildingTypes>(iBuildingLoop);
; 806  : 					CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);
; 807  : 					if (pkBuildingInfo)
; 808  : 					{
; 809  : 						if (GetCity()->GetCityBuildings()->GetNumBuilding(eBuilding) > 0 && IsCanAddSpecialistToBuilding(eBuilding))
; 810  : 						{
; 811  : 							bHasSpecialistSlot = true;
; 812  : 							break;
; 813  : 						}
; 814  : 					}
; 815  : 				}
; 816  : 				if ((GetPlayer()->GetUnhappinessFromCityPopulation() + GetPlayer()->GetUnhappinessFromOccupiedCities()) / 100 <
; 817  : 					(GetPlayer()->GetUnhappinessFromCityPopulation(NULL, NULL, m_pCity, (bHasSpecialistSlot ? m_pCity : NULL))
; 818  : 						+ GetPlayer()->GetUnhappinessFromOccupiedCities(NULL, NULL, m_pCity, (bHasSpecialistSlot ? m_pCity : NULL))) / 100)
; 819  : 					return true;
; 820  : 			}
; 821  : 		}
; 822  : 	}
; 823  : #elif !defined(AUI_CITIZENS_GET_VALUE_CONSIDER_GROWTH_MODIFIERS)
; 824  : 	if(GetPlayer()->GetExcessHappiness() < 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?GetExcessHappiness@CvPlayer@@QBEHXZ	; CvPlayer::GetExcessHappiness
	test	eax, eax
	jge	SHORT $LN1@IsAvoidGro

; 825  : 	{
; 826  : 		return true;

	mov	al, 1
	jmp	SHORT $LN3@IsAvoidGro
$LN1@IsAvoidGro:

; 827  : 	}
; 828  : #endif
; 829  : 
; 830  : 	return IsForcedAvoidGrowth();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsForcedAvoidGrowth@CvCityCitizens@@QAE_NXZ ; CvCityCitizens::IsForcedAvoidGrowth
$LN3@IsAvoidGro:

; 831  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsAvoidGrowth@CvCityCitizens@@QAE_NXZ ENDP		; CvCityCitizens::IsAvoidGrowth
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsForcedAvoidGrowth@CvCityCitizens@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsForcedAvoidGrowth@CvCityCitizens@@QAE_NXZ PROC	; CvCityCitizens::IsForcedAvoidGrowth, COMDAT
; _this$ = ecx

; 838  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 839  : 	return m_bForceAvoidGrowth;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+24]

; 840  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsForcedAvoidGrowth@CvCityCitizens@@QAE_NXZ ENDP	; CvCityCitizens::IsForcedAvoidGrowth
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?SetForcedAvoidGrowth@CvCityCitizens@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bAvoidGrowth$ = 8					; size = 1
?SetForcedAvoidGrowth@CvCityCitizens@@QAEX_N@Z PROC	; CvCityCitizens::SetForcedAvoidGrowth, COMDAT
; _this$ = ecx

; 843  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 844  : 	if(m_bForceAvoidGrowth != bAvoidGrowth)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+24]
	movzx	edx, BYTE PTR _bAvoidGrowth$[ebp]
	cmp	ecx, edx
	je	SHORT $LN2@SetForcedA

; 845  : 	{
; 846  : 		m_bForceAvoidGrowth = bAvoidGrowth;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _bAvoidGrowth$[ebp]
	mov	BYTE PTR [eax+24], cl

; 847  : 		DoReallocateCitizens();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoReallocateCitizens@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoReallocateCitizens
$LN2@SetForcedA:

; 848  : 	}
; 849  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetForcedAvoidGrowth@CvCityCitizens@@QAEX_N@Z ENDP	; CvCityCitizens::SetForcedAvoidGrowth
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetFocusType@CvCityCitizens@@QBE?AW4CityAIFocusTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFocusType@CvCityCitizens@@QBE?AW4CityAIFocusTypes@@XZ PROC ; CvCityCitizens::GetFocusType, COMDAT
; _this$ = ecx

; 853  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 854  : 	return m_eCityAIFocusTypes;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]

; 855  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetFocusType@CvCityCitizens@@QBE?AW4CityAIFocusTypes@@XZ ENDP ; CvCityCitizens::GetFocusType
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eFocus$ = 8						; size = 4
?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z PROC ; CvCityCitizens::SetFocusType, COMDAT
; _this$ = ecx

; 859  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 860  : 	FAssert(eFocus >= NO_CITY_AI_FOCUS_TYPE);
; 861  : 	FAssert(eFocus < NUM_CITY_AI_FOCUS_TYPES);
; 862  : 
; 863  : 	if(eFocus != m_eCityAIFocusTypes)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _eFocus$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	je	SHORT $LN2@SetFocusTy

; 864  : 	{
; 865  : 		m_eCityAIFocusTypes = eFocus;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _eFocus$[ebp]
	mov	DWORD PTR [edx+20], eax

; 866  : 		// Reallocate with our new focus
; 867  : 		DoReallocateCitizens();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoReallocateCitizens@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoReallocateCitizens
$LN2@SetFocusTy:

; 868  : 	}
; 869  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetFocusType@CvCityCitizens@@QAEXW4CityAIFocusTypes@@@Z ENDP ; CvCityCitizens::SetFocusType
_TEXT	ENDS
PUBLIC	?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z ; CvCityCitizens::IsCanAddSpecialistToBuilding
PUBLIC	?GetNumDefaultSpecialists@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumDefaultSpecialists
PUBLIC	?IsAIWantSpecialistRightNow@CvCityCitizens@@QAE_NXZ ; CvCityCitizens::IsAIWantSpecialistRightNow
EXTRN	?isHalfSpecialistFood@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::isHalfSpecialistFood
EXTRN	?isHalfSpecialistUnhappiness@CvPlayer@@QBE_NXZ:PROC ; CvPlayer::isHalfSpecialistUnhappiness
EXTRN	?GetPlayer@CvCity@@QAEPAVCvPlayer@@XZ:PROC	; CvCity::GetPlayer
EXTRN	?GetSpecialistYieldChange@CvPlayerTraits@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z:PROC ; CvPlayerTraits::GetSpecialistYieldChange
EXTRN	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ:PROC ; CvPlayer::GetPlayerTraits
EXTRN	?getSpecialistExtraYield@CvPlayer@@QBEHW4YieldTypes@@@Z:PROC ; CvPlayer::getSpecialistExtraYield
EXTRN	?getYieldChange@CvSpecialistInfo@@QBEHH@Z:PROC	; CvSpecialistInfo::getYieldChange
EXTRN	?getCulturePerTurn@CvSpecialistInfo@@QBEHXZ:PROC ; CvSpecialistInfo::getCulturePerTurn
EXTRN	?getSpecialistInfo@CvGlobals@@QAEPAVCvSpecialistInfo@@W4SpecialistTypes@@@Z:PROC ; CvGlobals::getSpecialistInfo
EXTRN	?GetSpecialistType@CvBuildingEntry@@QBEHXZ:PROC	; CvBuildingEntry::GetSpecialistType
EXTRN	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z:PROC ; CvGlobals::getBuildingInfo
EXTRN	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetNumBuilding
EXTRN	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ:PROC ; CvCity::GetCityBuildings
EXTRN	?IsYieldDeficient@CvCityStrategyAI@@QAE_NW4YieldTypes@@@Z:PROC ; CvCityStrategyAI::IsYieldDeficient
EXTRN	?getYieldRate@CvCity@@QBEHW4YieldTypes@@_N@Z:PROC ; CvCity::getYieldRate
; Function compile flags: /Odtp
;	COMDAT ?IsAIWantSpecialistRightNow@CvCityCitizens@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -164						; size = 4
_eSpecialist$224670 = -160				; size = 4
_pSpecialistInfo$224672 = -156				; size = 4
_eBuilding$224664 = -152				; size = 4
_pkBuildingInfo$224666 = -148				; size = 4
_iBuildingLoop$224660 = -144				; size = 4
_eSpecialist$224652 = -140				; size = 4
_pSpecialistInfo$224654 = -136				; size = 4
_eBuilding$224646 = -132				; size = 4
_pkBuildingInfo$224648 = -128				; size = 4
_iBuildingLoop$224642 = -124				; size = 4
_eSpecialist$224636 = -120				; size = 4
_pSpecialistInfo$224638 = -116				; size = 4
_eBuilding$224630 = -112				; size = 4
_pkBuildingInfo$224632 = -108				; size = 4
_iBuildingLoop$224626 = -104				; size = 4
_eSpecialist$224618 = -100				; size = 4
_pSpecialistInfo$224620 = -96				; size = 4
_iBuildingLoop$224611 = -92				; size = 4
_eBuilding$224610 = -88					; size = 4
_eSpecialist$224602 = -84				; size = 4
_pSpecialistInfo$224604 = -80				; size = 4
_eBuilding$224596 = -76					; size = 4
_pkBuildingInfo$224598 = -72				; size = 4
_iBuildingLoop$224592 = -68				; size = 4
_eSpecialist$224584 = -64				; size = 4
_pSpecialistInfo$224586 = -60				; size = 4
_iBuildingLoop$224577 = -56				; size = 4
_eBuilding$224576 = -52					; size = 4
_eSpecialist$224570 = -48				; size = 4
_pSpecialistInfo$224572 = -44				; size = 4
_eBuilding$224564 = -40					; size = 4
_pkBuildingInfo$224566 = -36				; size = 4
_iBuildingLoop$224560 = -32				; size = 4
_iBuildingLoop$224551 = -28				; size = 4
_eBuilding$224550 = -24					; size = 4
_eFocusType$ = -20					; size = 4
_iWeight$ = -16						; size = 4
_iFoodPerTurn$ = -12					; size = 4
_iFoodEatenPerTurn$ = -8				; size = 4
_iSurplusFood$ = -4					; size = 4
?IsAIWantSpecialistRightNow@CvCityCitizens@@QAE_NXZ PROC ; CvCityCitizens::IsAIWantSpecialistRightNow, COMDAT
; _this$ = ecx

; 874  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 164				; 000000a4H
	mov	DWORD PTR _this$[ebp], ecx

; 875  : 	int iWeight = 100;

	mov	DWORD PTR _iWeight$[ebp], 100		; 00000064H

; 876  : 
; 877  : 	// If the City is Size 1 or 2 then we probably don't want Specialists
; 878  : 	if(m_pCity->getPopulation() < 3)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, 3
	jge	SHORT $LN92@IsAIWantSp

; 879  : 	{
; 880  : 		iWeight /= 2;

	mov	eax, DWORD PTR _iWeight$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _iWeight$[ebp], eax
$LN92@IsAIWantSp:

; 881  : 	}
; 882  : 
; 883  : 	int iFoodPerTurn = m_pCity->getYieldRate(YIELD_FOOD, false);

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getYieldRate@CvCity@@QBEHW4YieldTypes@@_N@Z ; CvCity::getYieldRate
	mov	DWORD PTR _iFoodPerTurn$[ebp], eax

; 884  : 	int iFoodEatenPerTurn = m_pCity->foodConsumption();

	push	0
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?foodConsumption@CvCity@@QBEH_NH@Z	; CvCity::foodConsumption
	mov	DWORD PTR _iFoodEatenPerTurn$[ebp], eax

; 885  : 	int iSurplusFood = iFoodPerTurn - iFoodEatenPerTurn;

	mov	eax, DWORD PTR _iFoodPerTurn$[ebp]
	sub	eax, DWORD PTR _iFoodEatenPerTurn$[ebp]
	mov	DWORD PTR _iSurplusFood$[ebp], eax

; 886  : 
; 887  : 	CityAIFocusTypes eFocusType = GetFocusType();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFocusType@CvCityCitizens@@QBE?AW4CityAIFocusTypes@@XZ ; CvCityCitizens::GetFocusType
	mov	DWORD PTR _eFocusType$[ebp], eax

; 888  : 
; 889  : 	// Don't want specialists until we've met our food needs
; 890  : 	if(iSurplusFood < 0)

	cmp	DWORD PTR _iSurplusFood$[ebp], 0
	jge	SHORT $LN91@IsAIWantSp

; 891  : 	{
; 892  : 		return false;

	xor	al, al
	jmp	$LN93@IsAIWantSp
	jmp	SHORT $LN90@IsAIWantSp
$LN91@IsAIWantSp:

; 893  : 	}
; 894  : 	else if(IsAvoidGrowth() && (eFocusType == NO_CITY_AI_FOCUS_TYPE || eFocusType == CITY_AI_FOCUS_TYPE_GREAT_PEOPLE))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAvoidGrowth@CvCityCitizens@@QAE_NXZ	; CvCityCitizens::IsAvoidGrowth
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN89@IsAIWantSp
	cmp	DWORD PTR _eFocusType$[ebp], -1
	je	SHORT $LN88@IsAIWantSp
	cmp	DWORD PTR _eFocusType$[ebp], 3
	jne	SHORT $LN89@IsAIWantSp
$LN88@IsAIWantSp:

; 895  : 	{
; 896  : 		iWeight *= 2;

	mov	edx, DWORD PTR _iWeight$[ebp]
	shl	edx, 1
	mov	DWORD PTR _iWeight$[ebp], edx
	jmp	SHORT $LN90@IsAIWantSp
$LN89@IsAIWantSp:

; 897  : 	}
; 898  : 	else if(iSurplusFood <= 2)

	cmp	DWORD PTR _iSurplusFood$[ebp], 2
	jg	SHORT $LN86@IsAIWantSp

; 899  : 	{
; 900  : 		iWeight /= 2;

	mov	eax, DWORD PTR _iWeight$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _iWeight$[ebp], eax
	jmp	SHORT $LN90@IsAIWantSp
$LN86@IsAIWantSp:

; 901  : 	}
; 902  : 	else if(iSurplusFood > 2)

	cmp	DWORD PTR _iSurplusFood$[ebp], 2
	jle	SHORT $LN90@IsAIWantSp

; 903  : 	{
; 904  : 		if(eFocusType == NO_CITY_AI_FOCUS_TYPE || eFocusType == CITY_AI_FOCUS_TYPE_GREAT_PEOPLE || eFocusType == CITY_AI_FOCUS_TYPE_PROD_GROWTH)

	cmp	DWORD PTR _eFocusType$[ebp], -1
	je	SHORT $LN82@IsAIWantSp
	cmp	DWORD PTR _eFocusType$[ebp], 3
	je	SHORT $LN82@IsAIWantSp
	cmp	DWORD PTR _eFocusType$[ebp], 6
	jne	SHORT $LN90@IsAIWantSp
$LN82@IsAIWantSp:

; 905  : 		{
; 906  : 			iWeight *= 100 + (20 * (iSurplusFood - 4));

	mov	eax, DWORD PTR _iSurplusFood$[ebp]
	sub	eax, 4
	imul	eax, 20					; 00000014H
	add	eax, 100				; 00000064H
	imul	eax, DWORD PTR _iWeight$[ebp]
	mov	DWORD PTR _iWeight$[ebp], eax

; 907  : 			iWeight /= 100;

	mov	eax, DWORD PTR _iWeight$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iWeight$[ebp], eax
$LN90@IsAIWantSp:

; 908  : 		}
; 909  : 	}
; 910  : 
; 911  : 	// If we're deficient in Production then we're less likely to want Specialists
; 912  : 	if(m_pCity->GetCityStrategyAI()->IsYieldDeficient(YIELD_PRODUCTION))

	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?GetCityStrategyAI@CvCity@@QBEPAVCvCityStrategyAI@@XZ ; CvCity::GetCityStrategyAI
	mov	ecx, eax
	call	?IsYieldDeficient@CvCityStrategyAI@@QAE_NW4YieldTypes@@@Z ; CvCityStrategyAI::IsYieldDeficient
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN81@IsAIWantSp

; 913  : 	{
; 914  : 		iWeight *= 50;

	mov	ecx, DWORD PTR _iWeight$[ebp]
	imul	ecx, 50					; 00000032H
	mov	DWORD PTR _iWeight$[ebp], ecx

; 915  : 		iWeight /= 100;

	mov	eax, DWORD PTR _iWeight$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iWeight$[ebp], eax
	jmp	SHORT $LN80@IsAIWantSp
$LN81@IsAIWantSp:

; 916  : 	}
; 917  : 	// if we've got some slackers in town (since they provide Production)
; 918  : 	else if(GetNumDefaultSpecialists() > 0 && eFocusType != CITY_AI_FOCUS_TYPE_PRODUCTION && eFocusType != CITY_AI_FOCUS_TYPE_PROD_GROWTH)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumDefaultSpecialists@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumDefaultSpecialists
	test	eax, eax
	jle	SHORT $LN80@IsAIWantSp
	cmp	DWORD PTR _eFocusType$[ebp], 1
	je	SHORT $LN80@IsAIWantSp
	cmp	DWORD PTR _eFocusType$[ebp], 6
	je	SHORT $LN80@IsAIWantSp

; 919  : 	{
; 920  : 		iWeight *= 150;

	mov	edx, DWORD PTR _iWeight$[ebp]
	imul	edx, 150				; 00000096H
	mov	DWORD PTR _iWeight$[ebp], edx

; 921  : 		iWeight /= 100;

	mov	eax, DWORD PTR _iWeight$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iWeight$[ebp], eax
$LN80@IsAIWantSp:

; 922  : 	}
; 923  : 
; 924  : 	// Someone told this AI it should be focused on something that is usually gotten from specialists
; 925  : 	if(eFocusType == CITY_AI_FOCUS_TYPE_GREAT_PEOPLE)

	cmp	DWORD PTR _eFocusType$[ebp], 3
	jne	SHORT $LN78@IsAIWantSp

; 926  : 	{
; 927  : 		// Loop through all Buildings
; 928  : 		BuildingTypes eBuilding;
; 929  : 		for(int iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)

	mov	DWORD PTR _iBuildingLoop$224551[ebp], 0
	jmp	SHORT $LN77@IsAIWantSp
$LN76@IsAIWantSp:
	mov	edx, DWORD PTR _iBuildingLoop$224551[ebp]
	add	edx, 1
	mov	DWORD PTR _iBuildingLoop$224551[ebp], edx
$LN77@IsAIWantSp:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iBuildingLoop$224551[ebp], eax
	jge	SHORT $LN75@IsAIWantSp

; 930  : 		{
; 931  : 			eBuilding = (BuildingTypes) iBuildingLoop;

	mov	eax, DWORD PTR _iBuildingLoop$224551[ebp]
	mov	DWORD PTR _eBuilding$224550[ebp], eax

; 932  : 
; 933  : 			// Have this Building in the City?
; 934  : 			if(m_pCity->GetCityBuildings()->GetNumBuilding(eBuilding) > 0)

	mov	ecx, DWORD PTR _eBuilding$224550[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN74@IsAIWantSp

; 935  : 			{
; 936  : 				// Can't add more than the max
; 937  : 				if(IsCanAddSpecialistToBuilding(eBuilding))

	mov	eax, DWORD PTR _eBuilding$224550[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z ; CvCityCitizens::IsCanAddSpecialistToBuilding
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN74@IsAIWantSp

; 938  : 				{
; 939  : 					iWeight *= 3;

	mov	edx, DWORD PTR _iWeight$[ebp]
	imul	edx, 3
	mov	DWORD PTR _iWeight$[ebp], edx

; 940  : 					break;

	jmp	SHORT $LN75@IsAIWantSp
$LN74@IsAIWantSp:

; 941  : 				}
; 942  : 			}
; 943  : 		}

	jmp	SHORT $LN76@IsAIWantSp
$LN75@IsAIWantSp:

; 944  : 	}
; 945  : 	else if(eFocusType == CITY_AI_FOCUS_TYPE_CULTURE)

	jmp	$LN72@IsAIWantSp
$LN78@IsAIWantSp:
	cmp	DWORD PTR _eFocusType$[ebp], 5
	jne	$LN71@IsAIWantSp

; 946  : 	{
; 947  : 		// Loop through all Buildings
; 948  : 		for(int iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)

	mov	DWORD PTR _iBuildingLoop$224560[ebp], 0
	jmp	SHORT $LN70@IsAIWantSp
$LN69@IsAIWantSp:
	mov	eax, DWORD PTR _iBuildingLoop$224560[ebp]
	add	eax, 1
	mov	DWORD PTR _iBuildingLoop$224560[ebp], eax
$LN70@IsAIWantSp:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iBuildingLoop$224560[ebp], eax
	jge	$LN68@IsAIWantSp

; 949  : 		{
; 950  : 			const BuildingTypes eBuilding = static_cast<BuildingTypes>(iBuildingLoop);

	mov	ecx, DWORD PTR _iBuildingLoop$224560[ebp]
	mov	DWORD PTR _eBuilding$224564[ebp], ecx

; 951  : 			CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	edx, DWORD PTR _eBuilding$224564[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$224566[ebp], eax

; 952  : 			if(pkBuildingInfo)

	cmp	DWORD PTR _pkBuildingInfo$224566[ebp], 0
	je	SHORT $LN67@IsAIWantSp

; 953  : 			{
; 954  : 				// Have this Building in the City?
; 955  : 				if(m_pCity->GetCityBuildings()->GetNumBuilding(eBuilding) > 0)

	mov	eax, DWORD PTR _eBuilding$224564[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN67@IsAIWantSp

; 956  : 				{
; 957  : 					// Can't add more than the max
; 958  : 					if(IsCanAddSpecialistToBuilding(eBuilding))

	mov	edx, DWORD PTR _eBuilding$224564[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z ; CvCityCitizens::IsCanAddSpecialistToBuilding
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN67@IsAIWantSp

; 959  : 					{
; 960  : 						const SpecialistTypes eSpecialist = (SpecialistTypes) pkBuildingInfo->GetSpecialistType();

	mov	ecx, DWORD PTR _pkBuildingInfo$224566[ebp]
	call	?GetSpecialistType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetSpecialistType
	mov	DWORD PTR _eSpecialist$224570[ebp], eax

; 961  : 						CvSpecialistInfo* pSpecialistInfo = GC.getSpecialistInfo(eSpecialist);

	mov	ecx, DWORD PTR _eSpecialist$224570[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getSpecialistInfo@CvGlobals@@QAEPAVCvSpecialistInfo@@W4SpecialistTypes@@@Z ; CvGlobals::getSpecialistInfo
	mov	DWORD PTR _pSpecialistInfo$224572[ebp], eax

; 962  : 						if(pSpecialistInfo && pSpecialistInfo->getCulturePerTurn() > 0)

	cmp	DWORD PTR _pSpecialistInfo$224572[ebp], 0
	je	SHORT $LN67@IsAIWantSp
	mov	ecx, DWORD PTR _pSpecialistInfo$224572[ebp]
	call	?getCulturePerTurn@CvSpecialistInfo@@QBEHXZ ; CvSpecialistInfo::getCulturePerTurn
	test	eax, eax
	jle	SHORT $LN67@IsAIWantSp

; 963  : 						{
; 964  : 							iWeight *= 3;

	mov	edx, DWORD PTR _iWeight$[ebp]
	imul	edx, 3
	mov	DWORD PTR _iWeight$[ebp], edx

; 965  : 							break;

	jmp	SHORT $LN68@IsAIWantSp
$LN67@IsAIWantSp:

; 966  : 						}
; 967  : 					}
; 968  : 				}
; 969  : 			}
; 970  : 		}

	jmp	$LN69@IsAIWantSp
$LN68@IsAIWantSp:

; 971  : 	}
; 972  : 	else if(eFocusType == CITY_AI_FOCUS_TYPE_SCIENCE)

	jmp	$LN72@IsAIWantSp
$LN71@IsAIWantSp:
	cmp	DWORD PTR _eFocusType$[ebp], 4
	jne	$LN62@IsAIWantSp

; 973  : 	{
; 974  : 		// Loop through all Buildings
; 975  : 		BuildingTypes eBuilding;
; 976  : 		for(int iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)

	mov	DWORD PTR _iBuildingLoop$224577[ebp], 0
	jmp	SHORT $LN61@IsAIWantSp
$LN60@IsAIWantSp:
	mov	eax, DWORD PTR _iBuildingLoop$224577[ebp]
	add	eax, 1
	mov	DWORD PTR _iBuildingLoop$224577[ebp], eax
$LN61@IsAIWantSp:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iBuildingLoop$224577[ebp], eax
	jge	$LN59@IsAIWantSp

; 977  : 		{
; 978  : 			eBuilding = (BuildingTypes) iBuildingLoop;

	mov	ecx, DWORD PTR _iBuildingLoop$224577[ebp]
	mov	DWORD PTR _eBuilding$224576[ebp], ecx

; 979  : 
; 980  : 			// Have this Building in the City?
; 981  : 			if(m_pCity->GetCityBuildings()->GetNumBuilding(eBuilding) > 0)

	mov	edx, DWORD PTR _eBuilding$224576[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	$LN58@IsAIWantSp

; 982  : 			{
; 983  : 				// Can't add more than the max
; 984  : 				if(IsCanAddSpecialistToBuilding(eBuilding))

	mov	ecx, DWORD PTR _eBuilding$224576[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z ; CvCityCitizens::IsCanAddSpecialistToBuilding
	movzx	edx, al
	test	edx, edx
	je	$LN58@IsAIWantSp

; 985  : 				{
; 986  : 					SpecialistTypes eSpecialist = (SpecialistTypes) GC.getBuildingInfo(eBuilding)->GetSpecialistType();

	mov	eax, DWORD PTR _eBuilding$224576[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	ecx, eax
	call	?GetSpecialistType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetSpecialistType
	mov	DWORD PTR _eSpecialist$224584[ebp], eax

; 987  : 					CvSpecialistInfo* pSpecialistInfo = GC.getSpecialistInfo(eSpecialist);

	mov	ecx, DWORD PTR _eSpecialist$224584[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getSpecialistInfo@CvGlobals@@QAEPAVCvSpecialistInfo@@W4SpecialistTypes@@@Z ; CvGlobals::getSpecialistInfo
	mov	DWORD PTR _pSpecialistInfo$224586[ebp], eax

; 988  : 					if(pSpecialistInfo && pSpecialistInfo->getYieldChange(YIELD_SCIENCE) > 0)

	cmp	DWORD PTR _pSpecialistInfo$224586[ebp], 0
	je	SHORT $LN56@IsAIWantSp
	push	3
	mov	ecx, DWORD PTR _pSpecialistInfo$224586[ebp]
	call	?getYieldChange@CvSpecialistInfo@@QBEHH@Z ; CvSpecialistInfo::getYieldChange
	test	eax, eax
	jle	SHORT $LN56@IsAIWantSp

; 989  : 					{
; 990  : 						iWeight *= 3;

	mov	edx, DWORD PTR _iWeight$[ebp]
	imul	edx, 3
	mov	DWORD PTR _iWeight$[ebp], edx
$LN56@IsAIWantSp:

; 991  : 					}
; 992  : 
; 993  : 					if(GetPlayer()->getSpecialistExtraYield(YIELD_SCIENCE) > 0)

	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?getSpecialistExtraYield@CvPlayer@@QBEHW4YieldTypes@@@Z ; CvPlayer::getSpecialistExtraYield
	test	eax, eax
	jle	SHORT $LN55@IsAIWantSp

; 994  : 					{
; 995  : 						iWeight *= 3;

	mov	eax, DWORD PTR _iWeight$[ebp]
	imul	eax, 3
	mov	DWORD PTR _iWeight$[ebp], eax
$LN55@IsAIWantSp:

; 996  : 					}
; 997  : 
; 998  : 					if(GetPlayer()->GetPlayerTraits()->GetSpecialistYieldChange(eSpecialist, YIELD_SCIENCE) > 0)

	push	3
	mov	ecx, DWORD PTR _eSpecialist$224584[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	ecx, eax
	call	?GetSpecialistYieldChange@CvPlayerTraits@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvPlayerTraits::GetSpecialistYieldChange
	test	eax, eax
	jle	SHORT $LN58@IsAIWantSp

; 999  : 					{
; 1000 : 						iWeight *= 3;

	mov	edx, DWORD PTR _iWeight$[ebp]
	imul	edx, 3
	mov	DWORD PTR _iWeight$[ebp], edx
$LN58@IsAIWantSp:

; 1001 : 					}
; 1002 : #ifdef LEK_TRAIT_SPECIALIST_YIELD_MAX_ONE
; 1003 : 					if(GetPlayer()->GetPlayerTraits()->GetAnySpecificSpecialistYieldChange(eSpecialist, YIELD_SCIENCE) > 0)
; 1004 : 					{
; 1005 : 						iWeight *= 3;
; 1006 : 					}
; 1007 : #endif
; 1008 : 				}
; 1009 : 			}
; 1010 : 		}

	jmp	$LN60@IsAIWantSp
$LN59@IsAIWantSp:

; 1011 : 	}
; 1012 : 	else if(eFocusType == CITY_AI_FOCUS_TYPE_PRODUCTION)

	jmp	$LN72@IsAIWantSp
$LN62@IsAIWantSp:
	cmp	DWORD PTR _eFocusType$[ebp], 1
	jne	$LN52@IsAIWantSp

; 1013 : 	{
; 1014 : 		// Loop through all Buildings
; 1015 : 		for(int iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)

	mov	DWORD PTR _iBuildingLoop$224592[ebp], 0
	jmp	SHORT $LN51@IsAIWantSp
$LN50@IsAIWantSp:
	mov	eax, DWORD PTR _iBuildingLoop$224592[ebp]
	add	eax, 1
	mov	DWORD PTR _iBuildingLoop$224592[ebp], eax
$LN51@IsAIWantSp:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iBuildingLoop$224592[ebp], eax
	jge	$LN49@IsAIWantSp

; 1016 : 		{
; 1017 : 			const BuildingTypes eBuilding = static_cast<BuildingTypes>(iBuildingLoop);

	mov	ecx, DWORD PTR _iBuildingLoop$224592[ebp]
	mov	DWORD PTR _eBuilding$224596[ebp], ecx

; 1018 : 			CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	edx, DWORD PTR _eBuilding$224596[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$224598[ebp], eax

; 1019 : 			if(pkBuildingInfo)

	cmp	DWORD PTR _pkBuildingInfo$224598[ebp], 0
	je	$LN48@IsAIWantSp

; 1020 : 			{
; 1021 : 				// Have this Building in the City?
; 1022 : 				if(m_pCity->GetCityBuildings()->GetNumBuilding(eBuilding) > 0)

	mov	eax, DWORD PTR _eBuilding$224596[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	$LN48@IsAIWantSp

; 1023 : 				{
; 1024 : 					// Can't add more than the max
; 1025 : 					if(IsCanAddSpecialistToBuilding(eBuilding))

	mov	edx, DWORD PTR _eBuilding$224596[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z ; CvCityCitizens::IsCanAddSpecialistToBuilding
	movzx	eax, al
	test	eax, eax
	je	$LN48@IsAIWantSp

; 1026 : 					{
; 1027 : 						SpecialistTypes eSpecialist = (SpecialistTypes) pkBuildingInfo->GetSpecialistType();

	mov	ecx, DWORD PTR _pkBuildingInfo$224598[ebp]
	call	?GetSpecialistType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetSpecialistType
	mov	DWORD PTR _eSpecialist$224602[ebp], eax

; 1028 : 						CvSpecialistInfo* pSpecialistInfo = GC.getSpecialistInfo(eSpecialist);

	mov	ecx, DWORD PTR _eSpecialist$224602[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getSpecialistInfo@CvGlobals@@QAEPAVCvSpecialistInfo@@W4SpecialistTypes@@@Z ; CvGlobals::getSpecialistInfo
	mov	DWORD PTR _pSpecialistInfo$224604[ebp], eax

; 1029 : 						if(NULL != pSpecialistInfo && pSpecialistInfo->getYieldChange(YIELD_PRODUCTION) > 0)

	cmp	DWORD PTR _pSpecialistInfo$224604[ebp], 0
	je	SHORT $LN45@IsAIWantSp
	push	1
	mov	ecx, DWORD PTR _pSpecialistInfo$224604[ebp]
	call	?getYieldChange@CvSpecialistInfo@@QBEHH@Z ; CvSpecialistInfo::getYieldChange
	test	eax, eax
	jle	SHORT $LN45@IsAIWantSp

; 1030 : 						{
; 1031 : 							iWeight *= 150;

	mov	edx, DWORD PTR _iWeight$[ebp]
	imul	edx, 150				; 00000096H
	mov	DWORD PTR _iWeight$[ebp], edx

; 1032 : 							iWeight /= 100;

	mov	eax, DWORD PTR _iWeight$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iWeight$[ebp], eax
$LN45@IsAIWantSp:

; 1033 : 						}
; 1034 : 
; 1035 : 						if(GetPlayer()->getSpecialistExtraYield(YIELD_PRODUCTION) > 0)

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?getSpecialistExtraYield@CvPlayer@@QBEHW4YieldTypes@@@Z ; CvPlayer::getSpecialistExtraYield
	test	eax, eax
	jle	SHORT $LN44@IsAIWantSp

; 1036 : 						{
; 1037 : 							iWeight *= 2;

	mov	edx, DWORD PTR _iWeight$[ebp]
	shl	edx, 1
	mov	DWORD PTR _iWeight$[ebp], edx
$LN44@IsAIWantSp:

; 1038 : 						}
; 1039 : 
; 1040 : 						if(GetPlayer()->GetPlayerTraits()->GetSpecialistYieldChange(eSpecialist, YIELD_PRODUCTION) > 0)

	push	1
	mov	eax, DWORD PTR _eSpecialist$224602[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	ecx, eax
	call	?GetSpecialistYieldChange@CvPlayerTraits@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvPlayerTraits::GetSpecialistYieldChange
	test	eax, eax
	jle	SHORT $LN48@IsAIWantSp

; 1041 : 						{
; 1042 : 							iWeight *= 2;

	mov	ecx, DWORD PTR _iWeight$[ebp]
	shl	ecx, 1
	mov	DWORD PTR _iWeight$[ebp], ecx
$LN48@IsAIWantSp:

; 1043 : 						}
; 1044 : #ifdef LEK_TRAIT_SPECIALIST_YIELD_MAX_ONE
; 1045 : 						if(GetPlayer()->GetPlayerTraits()->GetAnySpecificSpecialistYieldChange(eSpecialist, YIELD_PRODUCTION) > 0)
; 1046 : 						{
; 1047 : 							iWeight *= 2;
; 1048 : 						}
; 1049 : #endif
; 1050 : 					}
; 1051 : 				}
; 1052 : 			}
; 1053 : 		}

	jmp	$LN50@IsAIWantSp
$LN49@IsAIWantSp:

; 1054 : 	}
; 1055 : 	else if(eFocusType == CITY_AI_FOCUS_TYPE_GOLD)

	jmp	$LN72@IsAIWantSp
$LN52@IsAIWantSp:
	cmp	DWORD PTR _eFocusType$[ebp], 2
	jne	$LN41@IsAIWantSp

; 1056 : 	{
; 1057 : 		// Loop through all Buildings
; 1058 : 		BuildingTypes eBuilding;
; 1059 : 		for(int iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)

	mov	DWORD PTR _iBuildingLoop$224611[ebp], 0
	jmp	SHORT $LN40@IsAIWantSp
$LN39@IsAIWantSp:
	mov	edx, DWORD PTR _iBuildingLoop$224611[ebp]
	add	edx, 1
	mov	DWORD PTR _iBuildingLoop$224611[ebp], edx
$LN40@IsAIWantSp:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iBuildingLoop$224611[ebp], eax
	jge	$LN38@IsAIWantSp

; 1060 : 		{
; 1061 : 			eBuilding = (BuildingTypes) iBuildingLoop;

	mov	eax, DWORD PTR _iBuildingLoop$224611[ebp]
	mov	DWORD PTR _eBuilding$224610[ebp], eax

; 1062 : 
; 1063 : 			// Have this Building in the City?
; 1064 : 			if(m_pCity->GetCityBuildings()->GetNumBuilding(eBuilding) > 0)

	mov	ecx, DWORD PTR _eBuilding$224610[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN37@IsAIWantSp

; 1065 : 			{
; 1066 : 				// Can't add more than the max
; 1067 : 				if(IsCanAddSpecialistToBuilding(eBuilding))

	mov	eax, DWORD PTR _eBuilding$224610[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z ; CvCityCitizens::IsCanAddSpecialistToBuilding
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN37@IsAIWantSp

; 1068 : 				{
; 1069 : 					SpecialistTypes eSpecialist = (SpecialistTypes) GC.getBuildingInfo(eBuilding)->GetSpecialistType();

	mov	edx, DWORD PTR _eBuilding$224610[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	ecx, eax
	call	?GetSpecialistType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetSpecialistType
	mov	DWORD PTR _eSpecialist$224618[ebp], eax

; 1070 : 					CvSpecialistInfo* pSpecialistInfo = GC.getSpecialistInfo(eSpecialist);

	mov	eax, DWORD PTR _eSpecialist$224618[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getSpecialistInfo@CvGlobals@@QAEPAVCvSpecialistInfo@@W4SpecialistTypes@@@Z ; CvGlobals::getSpecialistInfo
	mov	DWORD PTR _pSpecialistInfo$224620[ebp], eax

; 1071 : 					if(pSpecialistInfo && pSpecialistInfo->getYieldChange(YIELD_GOLD) > 0)

	cmp	DWORD PTR _pSpecialistInfo$224620[ebp], 0
	je	SHORT $LN37@IsAIWantSp
	push	2
	mov	ecx, DWORD PTR _pSpecialistInfo$224620[ebp]
	call	?getYieldChange@CvSpecialistInfo@@QBEHH@Z ; CvSpecialistInfo::getYieldChange
	test	eax, eax
	jle	SHORT $LN37@IsAIWantSp

; 1072 : 					{
; 1073 : 						iWeight *= 150;

	mov	ecx, DWORD PTR _iWeight$[ebp]
	imul	ecx, 150				; 00000096H
	mov	DWORD PTR _iWeight$[ebp], ecx

; 1074 : 						iWeight /= 100;

	mov	eax, DWORD PTR _iWeight$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iWeight$[ebp], eax

; 1075 : 						break;

	jmp	SHORT $LN38@IsAIWantSp
$LN37@IsAIWantSp:

; 1076 : 					}
; 1077 : 				}
; 1078 : 			}
; 1079 : 		}

	jmp	$LN39@IsAIWantSp
$LN38@IsAIWantSp:

; 1080 : 	}
; 1081 : 	else if(eFocusType == CITY_AI_FOCUS_TYPE_FOOD)

	jmp	$LN72@IsAIWantSp
$LN41@IsAIWantSp:
	cmp	DWORD PTR _eFocusType$[ebp], 0
	jne	SHORT $LN33@IsAIWantSp

; 1082 : 	{
; 1083 : 		iWeight *= 50;

	mov	edx, DWORD PTR _iWeight$[ebp]
	imul	edx, 50					; 00000032H
	mov	DWORD PTR _iWeight$[ebp], edx

; 1084 : 		iWeight /= 100;

	mov	eax, DWORD PTR _iWeight$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iWeight$[ebp], eax
	jmp	$LN72@IsAIWantSp
$LN33@IsAIWantSp:

; 1085 : 	}
; 1086 : 	else if(eFocusType == CITY_AI_FOCUS_TYPE_PROD_GROWTH)

	cmp	DWORD PTR _eFocusType$[ebp], 6
	jne	$LN31@IsAIWantSp

; 1087 : 	{
; 1088 : 		// Loop through all Buildings
; 1089 : 		for(int iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)

	mov	DWORD PTR _iBuildingLoop$224626[ebp], 0
	jmp	SHORT $LN30@IsAIWantSp
$LN29@IsAIWantSp:
	mov	edx, DWORD PTR _iBuildingLoop$224626[ebp]
	add	edx, 1
	mov	DWORD PTR _iBuildingLoop$224626[ebp], edx
$LN30@IsAIWantSp:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iBuildingLoop$224626[ebp], eax
	jge	$LN28@IsAIWantSp

; 1090 : 		{
; 1091 : 			const BuildingTypes eBuilding = static_cast<BuildingTypes>(iBuildingLoop);

	mov	eax, DWORD PTR _iBuildingLoop$224626[ebp]
	mov	DWORD PTR _eBuilding$224630[ebp], eax

; 1092 : 			CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	ecx, DWORD PTR _eBuilding$224630[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$224632[ebp], eax

; 1093 : 			if(pkBuildingInfo)

	cmp	DWORD PTR _pkBuildingInfo$224632[ebp], 0
	je	SHORT $LN27@IsAIWantSp

; 1094 : 			{
; 1095 : 				// Have this Building in the City?
; 1096 : 				if(m_pCity->GetCityBuildings()->GetNumBuilding(eBuilding) > 0)

	mov	edx, DWORD PTR _eBuilding$224630[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN27@IsAIWantSp

; 1097 : 				{
; 1098 : 					// Can't add more than the max
; 1099 : 					if(IsCanAddSpecialistToBuilding(eBuilding))

	mov	ecx, DWORD PTR _eBuilding$224630[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z ; CvCityCitizens::IsCanAddSpecialistToBuilding
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN27@IsAIWantSp

; 1100 : 					{
; 1101 : 						SpecialistTypes eSpecialist = (SpecialistTypes) pkBuildingInfo->GetSpecialistType();

	mov	ecx, DWORD PTR _pkBuildingInfo$224632[ebp]
	call	?GetSpecialistType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetSpecialistType
	mov	DWORD PTR _eSpecialist$224636[ebp], eax

; 1102 : 						CvSpecialistInfo* pSpecialistInfo = GC.getSpecialistInfo(eSpecialist);

	mov	eax, DWORD PTR _eSpecialist$224636[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getSpecialistInfo@CvGlobals@@QAEPAVCvSpecialistInfo@@W4SpecialistTypes@@@Z ; CvGlobals::getSpecialistInfo
	mov	DWORD PTR _pSpecialistInfo$224638[ebp], eax

; 1103 : 						if(pSpecialistInfo && pSpecialistInfo->getYieldChange(YIELD_PRODUCTION) > 0)

	cmp	DWORD PTR _pSpecialistInfo$224638[ebp], 0
	je	SHORT $LN27@IsAIWantSp
	push	1
	mov	ecx, DWORD PTR _pSpecialistInfo$224638[ebp]
	call	?getYieldChange@CvSpecialistInfo@@QBEHH@Z ; CvSpecialistInfo::getYieldChange
	test	eax, eax
	jle	SHORT $LN27@IsAIWantSp

; 1104 : 						{
; 1105 : 							iWeight *= 150;

	mov	ecx, DWORD PTR _iWeight$[ebp]
	imul	ecx, 150				; 00000096H
	mov	DWORD PTR _iWeight$[ebp], ecx

; 1106 : 							iWeight /= 100;

	mov	eax, DWORD PTR _iWeight$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iWeight$[ebp], eax

; 1107 : 							break;

	jmp	SHORT $LN28@IsAIWantSp
$LN27@IsAIWantSp:

; 1108 : 						}
; 1109 : 					}
; 1110 : 				}
; 1111 : 			}
; 1112 : 		}

	jmp	$LN29@IsAIWantSp
$LN28@IsAIWantSp:

; 1113 : 	}
; 1114 : 	else if(eFocusType == CITY_AI_FOCUS_TYPE_GOLD_GROWTH)

	jmp	$LN72@IsAIWantSp
$LN31@IsAIWantSp:
	cmp	DWORD PTR _eFocusType$[ebp], 7
	jne	$LN22@IsAIWantSp

; 1115 : 	{
; 1116 : 		// Loop through all Buildings
; 1117 : 		for(int iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)

	mov	DWORD PTR _iBuildingLoop$224642[ebp], 0
	jmp	SHORT $LN21@IsAIWantSp
$LN20@IsAIWantSp:
	mov	edx, DWORD PTR _iBuildingLoop$224642[ebp]
	add	edx, 1
	mov	DWORD PTR _iBuildingLoop$224642[ebp], edx
$LN21@IsAIWantSp:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iBuildingLoop$224642[ebp], eax
	jge	$LN19@IsAIWantSp

; 1118 : 		{
; 1119 : 			const BuildingTypes eBuilding = static_cast<BuildingTypes>(iBuildingLoop);

	mov	eax, DWORD PTR _iBuildingLoop$224642[ebp]
	mov	DWORD PTR _eBuilding$224646[ebp], eax

; 1120 : 			CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	ecx, DWORD PTR _eBuilding$224646[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$224648[ebp], eax

; 1121 : 			if(pkBuildingInfo)

	cmp	DWORD PTR _pkBuildingInfo$224648[ebp], 0
	je	$LN18@IsAIWantSp

; 1122 : 			{
; 1123 : 				// Have this Building in the City?
; 1124 : 				if(m_pCity->GetCityBuildings()->GetNumBuilding(eBuilding) > 0)

	mov	edx, DWORD PTR _eBuilding$224646[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	$LN18@IsAIWantSp

; 1125 : 				{
; 1126 : 					// Can't add more than the max
; 1127 : 					if(IsCanAddSpecialistToBuilding(eBuilding))

	mov	ecx, DWORD PTR _eBuilding$224646[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z ; CvCityCitizens::IsCanAddSpecialistToBuilding
	movzx	edx, al
	test	edx, edx
	je	$LN18@IsAIWantSp

; 1128 : 					{
; 1129 : 						SpecialistTypes eSpecialist = (SpecialistTypes) pkBuildingInfo->GetSpecialistType();

	mov	ecx, DWORD PTR _pkBuildingInfo$224648[ebp]
	call	?GetSpecialistType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetSpecialistType
	mov	DWORD PTR _eSpecialist$224652[ebp], eax

; 1130 : 						CvSpecialistInfo* pSpecialistInfo = GC.getSpecialistInfo(eSpecialist);

	mov	eax, DWORD PTR _eSpecialist$224652[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getSpecialistInfo@CvGlobals@@QAEPAVCvSpecialistInfo@@W4SpecialistTypes@@@Z ; CvGlobals::getSpecialistInfo
	mov	DWORD PTR _pSpecialistInfo$224654[ebp], eax

; 1131 : 						if(pSpecialistInfo && pSpecialistInfo->getYieldChange(YIELD_GOLD) > 0)

	cmp	DWORD PTR _pSpecialistInfo$224654[ebp], 0
	je	SHORT $LN15@IsAIWantSp
	push	2
	mov	ecx, DWORD PTR _pSpecialistInfo$224654[ebp]
	call	?getYieldChange@CvSpecialistInfo@@QBEHH@Z ; CvSpecialistInfo::getYieldChange
	test	eax, eax
	jle	SHORT $LN15@IsAIWantSp

; 1132 : 						{
; 1133 : 							iWeight *= 150;

	mov	ecx, DWORD PTR _iWeight$[ebp]
	imul	ecx, 150				; 00000096H
	mov	DWORD PTR _iWeight$[ebp], ecx

; 1134 : 							iWeight /= 100;

	mov	eax, DWORD PTR _iWeight$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iWeight$[ebp], eax
$LN15@IsAIWantSp:

; 1135 : 						}
; 1136 : 
; 1137 : 						if(GetPlayer()->getSpecialistExtraYield(YIELD_GOLD) > 0)

	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?getSpecialistExtraYield@CvPlayer@@QBEHW4YieldTypes@@@Z ; CvPlayer::getSpecialistExtraYield
	test	eax, eax
	jle	SHORT $LN14@IsAIWantSp

; 1138 : 						{
; 1139 : 							iWeight *= 2;

	mov	edx, DWORD PTR _iWeight$[ebp]
	shl	edx, 1
	mov	DWORD PTR _iWeight$[ebp], edx
$LN14@IsAIWantSp:

; 1140 : 						}
; 1141 : 
; 1142 : 						if(GetPlayer()->GetPlayerTraits()->GetSpecialistYieldChange(eSpecialist, YIELD_GOLD) > 0)

	push	2
	mov	eax, DWORD PTR _eSpecialist$224652[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	ecx, eax
	call	?GetSpecialistYieldChange@CvPlayerTraits@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvPlayerTraits::GetSpecialistYieldChange
	test	eax, eax
	jle	SHORT $LN18@IsAIWantSp

; 1143 : 						{
; 1144 : 							iWeight *= 2;

	mov	ecx, DWORD PTR _iWeight$[ebp]
	shl	ecx, 1
	mov	DWORD PTR _iWeight$[ebp], ecx
$LN18@IsAIWantSp:

; 1145 : 						}
; 1146 : #ifdef LEK_TRAIT_SPECIALIST_YIELD_MAX_ONE
; 1147 : 						if(GetPlayer()->GetPlayerTraits()->GetAnySpecificSpecialistYieldChange(eSpecialist, YIELD_GOLD) > 0)
; 1148 : 						{
; 1149 : 							iWeight *= 2;
; 1150 : 						}
; 1151 : #endif
; 1152 : 					}
; 1153 : 				}
; 1154 : 			}
; 1155 : 		}

	jmp	$LN20@IsAIWantSp
$LN19@IsAIWantSp:

; 1156 : 	}
; 1157 : 	else if(eFocusType == CITY_AI_FOCUS_TYPE_FAITH)

	jmp	$LN72@IsAIWantSp
$LN22@IsAIWantSp:
	cmp	DWORD PTR _eFocusType$[ebp], 8
	jne	$LN72@IsAIWantSp

; 1158 : 	{
; 1159 : 		// Loop through all Buildings
; 1160 : 		for(int iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)

	mov	DWORD PTR _iBuildingLoop$224660[ebp], 0
	jmp	SHORT $LN10@IsAIWantSp
$LN9@IsAIWantSp:
	mov	edx, DWORD PTR _iBuildingLoop$224660[ebp]
	add	edx, 1
	mov	DWORD PTR _iBuildingLoop$224660[ebp], edx
$LN10@IsAIWantSp:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iBuildingLoop$224660[ebp], eax
	jge	$LN72@IsAIWantSp

; 1161 : 		{
; 1162 : 			const BuildingTypes eBuilding = (BuildingTypes) iBuildingLoop;

	mov	eax, DWORD PTR _iBuildingLoop$224660[ebp]
	mov	DWORD PTR _eBuilding$224664[ebp], eax

; 1163 : 			CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	ecx, DWORD PTR _eBuilding$224664[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$224666[ebp], eax

; 1164 : 			if(pkBuildingInfo)

	cmp	DWORD PTR _pkBuildingInfo$224666[ebp], 0
	je	$LN7@IsAIWantSp

; 1165 : 			{
; 1166 : 				// Have this Building in the City?
; 1167 : 				if(m_pCity->GetCityBuildings()->GetNumBuilding(eBuilding) > 0)

	mov	edx, DWORD PTR _eBuilding$224664[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN7@IsAIWantSp

; 1168 : 				{
; 1169 : 					// Can't add more than the max
; 1170 : 					if(IsCanAddSpecialistToBuilding(eBuilding))

	mov	ecx, DWORD PTR _eBuilding$224664[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z ; CvCityCitizens::IsCanAddSpecialistToBuilding
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN7@IsAIWantSp

; 1171 : 					{
; 1172 : 						const SpecialistTypes eSpecialist = (SpecialistTypes) pkBuildingInfo->GetSpecialistType();

	mov	ecx, DWORD PTR _pkBuildingInfo$224666[ebp]
	call	?GetSpecialistType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetSpecialistType
	mov	DWORD PTR _eSpecialist$224670[ebp], eax

; 1173 : 						CvSpecialistInfo* pSpecialistInfo = GC.getSpecialistInfo(eSpecialist);

	mov	eax, DWORD PTR _eSpecialist$224670[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getSpecialistInfo@CvGlobals@@QAEPAVCvSpecialistInfo@@W4SpecialistTypes@@@Z ; CvGlobals::getSpecialistInfo
	mov	DWORD PTR _pSpecialistInfo$224672[ebp], eax

; 1174 : 						if(pSpecialistInfo && pSpecialistInfo->getYieldChange(YIELD_FAITH) > 0)

	cmp	DWORD PTR _pSpecialistInfo$224672[ebp], 0
	je	SHORT $LN7@IsAIWantSp
	push	5
	mov	ecx, DWORD PTR _pSpecialistInfo$224672[ebp]
	call	?getYieldChange@CvSpecialistInfo@@QBEHH@Z ; CvSpecialistInfo::getYieldChange
	test	eax, eax
	jle	SHORT $LN7@IsAIWantSp

; 1175 : 						{
; 1176 : 							iWeight *= 3;

	mov	ecx, DWORD PTR _iWeight$[ebp]
	imul	ecx, 3
	mov	DWORD PTR _iWeight$[ebp], ecx

; 1177 : 							break;

	jmp	SHORT $LN72@IsAIWantSp
$LN7@IsAIWantSp:

; 1178 : 						}
; 1179 : 					}
; 1180 : 				}
; 1181 : 			}
; 1182 : 		}

	jmp	$LN9@IsAIWantSp
$LN72@IsAIWantSp:

; 1183 : 	}
; 1184 : 
; 1185 : 	// specialists are cheaper somehow
; 1186 : 	if (m_pCity->GetPlayer()->isHalfSpecialistUnhappiness() || m_pCity->GetPlayer()->isHalfSpecialistFood())

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?GetPlayer@CvCity@@QAEPAVCvPlayer@@XZ	; CvCity::GetPlayer
	mov	ecx, eax
	call	?isHalfSpecialistUnhappiness@CvPlayer@@QBE_NXZ ; CvPlayer::isHalfSpecialistUnhappiness
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@IsAIWantSp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetPlayer@CvCity@@QAEPAVCvPlayer@@XZ	; CvCity::GetPlayer
	mov	ecx, eax
	call	?isHalfSpecialistFood@CvPlayer@@QBE_NXZ	; CvPlayer::isHalfSpecialistFood
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@IsAIWantSp
$LN2@IsAIWantSp:

; 1187 : 	{
; 1188 : 		iWeight *= 150;

	mov	eax, DWORD PTR _iWeight$[ebp]
	imul	eax, 150				; 00000096H
	mov	DWORD PTR _iWeight$[ebp], eax

; 1189 : 		iWeight /= 100;

	mov	eax, DWORD PTR _iWeight$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iWeight$[ebp], eax
$LN3@IsAIWantSp:

; 1190 : 	}
; 1191 : 
; 1192 : 	// Does the AI want it enough?
; 1193 : 	if(iWeight >= 150)

	cmp	DWORD PTR _iWeight$[ebp], 150		; 00000096H
	jl	SHORT $LN1@IsAIWantSp

; 1194 : 	{
; 1195 : 		return true;

	mov	al, 1
	jmp	SHORT $LN93@IsAIWantSp
$LN1@IsAIWantSp:

; 1196 : 	}
; 1197 : 
; 1198 : 	return false;

	xor	al, al
$LN93@IsAIWantSp:

; 1199 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsAIWantSpecialistRightNow@CvCityCitizens@@QAE_NXZ ENDP ; CvCityCitizens::IsAIWantSpecialistRightNow
_TEXT	ENDS
PUBLIC	?GetNumSpecialistsAllowedByBuilding@CvCityCitizens@@QAEHABVCvBuildingEntry@@@Z ; CvCityCitizens::GetNumSpecialistsAllowedByBuilding
PUBLIC	?GetSpecialistValue@CvCityCitizens@@QAEHW4SpecialistTypes@@@Z ; CvCityCitizens::GetSpecialistValue
PUBLIC	?GetAIBestSpecialistBuilding@CvCityCitizens@@QAE?AW4BuildingTypes@@AAH@Z ; CvCityCitizens::GetAIBestSpecialistBuilding
; Function compile flags: /Odtp
;	COMDAT ?GetAIBestSpecialistBuilding@CvCityCitizens@@QAE?AW4BuildingTypes@@AAH@Z
_TEXT	SEGMENT
_this$ = -40						; size = 4
_iTemp$224697 = -36					; size = 4
_eBuilding$224690 = -32					; size = 4
_pkBuildingInfo$224692 = -28				; size = 4
_iBuildingLoop$224686 = -24				; size = 4
_eSpecialist$ = -20					; size = 4
_eBestBuilding$ = -16					; size = 4
_iBestSpecialistValue$ = -12				; size = 4
_iBestUnmodifiedSpecialistValue$ = -8			; size = 4
_iValue$ = -4						; size = 4
_iSpecialistValue$ = 8					; size = 4
?GetAIBestSpecialistBuilding@CvCityCitizens@@QAE?AW4BuildingTypes@@AAH@Z PROC ; CvCityCitizens::GetAIBestSpecialistBuilding, COMDAT
; _this$ = ecx

; 1210 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 1211 : 	BuildingTypes eBestBuilding = NO_BUILDING;

	mov	DWORD PTR _eBestBuilding$[ebp], -1

; 1212 : 	int iBestSpecialistValue = -1;

	mov	DWORD PTR _iBestSpecialistValue$[ebp], -1

; 1213 : #ifdef AUI_CITIZENS_FIX_REMOVE_WORST_SPECIALIST_ACTUALLY_REMOVES_WORST
; 1214 : 	if (bGetWorst)
; 1215 : 		iBestSpecialistValue = MAX_INT;
; 1216 : #endif
; 1217 : #ifndef NQM_PRUNING
; 1218 : 	int iBestUnmodifiedSpecialistValue = -1;

	mov	DWORD PTR _iBestUnmodifiedSpecialistValue$[ebp], -1

; 1219 : #endif
; 1220 : 
; 1221 : 	SpecialistTypes eSpecialist;
; 1222 : 	int iValue;
; 1223 : 
; 1224 : 	// Loop through all Buildings
; 1225 : #ifdef AUI_WARNING_FIXES
; 1226 : 	for (uint iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)
; 1227 : #else
; 1228 : 	for(int iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)

	mov	DWORD PTR _iBuildingLoop$224686[ebp], 0
	jmp	SHORT $LN7@GetAIBestS
$LN6@GetAIBestS:
	mov	eax, DWORD PTR _iBuildingLoop$224686[ebp]
	add	eax, 1
	mov	DWORD PTR _iBuildingLoop$224686[ebp], eax
$LN7@GetAIBestS:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iBuildingLoop$224686[ebp], eax
	jge	$LN5@GetAIBestS

; 1229 : #endif
; 1230 : 	{
; 1231 : 		const BuildingTypes eBuilding = static_cast<BuildingTypes>(iBuildingLoop);

	mov	ecx, DWORD PTR _iBuildingLoop$224686[ebp]
	mov	DWORD PTR _eBuilding$224690[ebp], ecx

; 1232 : 		CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	edx, DWORD PTR _eBuilding$224690[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$224692[ebp], eax

; 1233 : 
; 1234 : 		if(pkBuildingInfo)

	cmp	DWORD PTR _pkBuildingInfo$224692[ebp], 0
	je	$LN4@GetAIBestS

; 1235 : 		{
; 1236 : 			// Have this Building in the City?
; 1237 : 			if(GetCity()->GetCityBuildings()->GetNumBuilding(eBuilding) > 0)

	mov	eax, DWORD PTR _eBuilding$224690[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN4@GetAIBestS

; 1238 : 			{
; 1239 : 				// Can't add more than the max
; 1240 : #ifdef AUI_CITIZENS_FIX_REMOVE_WORST_SPECIALIST_ACTUALLY_REMOVES_WORST
; 1241 : 				if ((!bIsWorked && IsCanAddSpecialistToBuilding(eBuilding)) || (bIsWorked &&  GetNumSpecialistsInBuilding(eBuilding) > 0))
; 1242 : #else
; 1243 : 				if(IsCanAddSpecialistToBuilding(eBuilding))

	mov	ecx, DWORD PTR _eBuilding$224690[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z ; CvCityCitizens::IsCanAddSpecialistToBuilding
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@GetAIBestS

; 1244 : #endif
; 1245 : 				{
; 1246 : 					eSpecialist = (SpecialistTypes) pkBuildingInfo->GetSpecialistType();

	mov	ecx, DWORD PTR _pkBuildingInfo$224692[ebp]
	call	?GetSpecialistType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetSpecialistType
	mov	DWORD PTR _eSpecialist$[ebp], eax

; 1247 : #ifdef AUI_CITIZENS_FIX_REMOVE_WORST_SPECIALIST_ACTUALLY_REMOVES_WORST
; 1248 : 					if (eSpecialist == eIgnoreSpecialist)
; 1249 : 						continue;
; 1250 : #endif
; 1251 : 
; 1252 : #ifdef AUI_CITIZENS_UNHARDCODE_SPECIALIST_VALUE_HAPPINESS
; 1253 : 					iValue = GetSpecialistValue(eSpecialist, bIsWorked);
; 1254 : #else
; 1255 : 					iValue = GetSpecialistValue(eSpecialist);

	mov	eax, DWORD PTR _eSpecialist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSpecialistValue@CvCityCitizens@@QAEHW4SpecialistTypes@@@Z ; CvCityCitizens::GetSpecialistValue
	mov	DWORD PTR _iValue$[ebp], eax

; 1256 : #endif
; 1257 : 
; 1258 : #ifndef NQM_PRUNING
; 1259 : 					// Add a bit more weight to a Building if it has more slots (10% per).  This will bias the AI to fill a single building over spreading Specialists out
; 1260 : 					int iTemp = ((GetNumSpecialistsAllowedByBuilding(*pkBuildingInfo) - 1) * iValue * 10);

	mov	ecx, DWORD PTR _pkBuildingInfo$224692[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumSpecialistsAllowedByBuilding@CvCityCitizens@@QAEHABVCvBuildingEntry@@@Z ; CvCityCitizens::GetNumSpecialistsAllowedByBuilding
	sub	eax, 1
	imul	eax, DWORD PTR _iValue$[ebp]
	imul	eax, 10					; 0000000aH
	mov	DWORD PTR _iTemp$224697[ebp], eax

; 1261 : 					iTemp /= 100;

	mov	eax, DWORD PTR _iTemp$224697[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iTemp$224697[ebp], eax

; 1262 : 					iValue += iTemp;

	mov	edx, DWORD PTR _iValue$[ebp]
	add	edx, DWORD PTR _iTemp$224697[ebp]
	mov	DWORD PTR _iValue$[ebp], edx

; 1263 : #endif
; 1264 : 
; 1265 : #ifdef AUI_CITIZENS_FIX_REMOVE_WORST_SPECIALIST_ACTUALLY_REMOVES_WORST
; 1266 : 					if (((iValue > iBestSpecialistValue) && !bGetWorst) || ((iValue < iBestSpecialistValue) && bGetWorst))
; 1267 : #else
; 1268 : 					if(iValue > iBestSpecialistValue)

	mov	eax, DWORD PTR _iValue$[ebp]
	cmp	eax, DWORD PTR _iBestSpecialistValue$[ebp]
	jle	SHORT $LN4@GetAIBestS

; 1269 : #endif
; 1270 : 					{
; 1271 : 						eBestBuilding = eBuilding;

	mov	ecx, DWORD PTR _eBuilding$224690[ebp]
	mov	DWORD PTR _eBestBuilding$[ebp], ecx

; 1272 : 						iBestSpecialistValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _iBestSpecialistValue$[ebp], edx

; 1273 : #ifndef NQM_PRUNING
; 1274 : 						iBestUnmodifiedSpecialistValue = iValue - iTemp;

	mov	eax, DWORD PTR _iValue$[ebp]
	sub	eax, DWORD PTR _iTemp$224697[ebp]
	mov	DWORD PTR _iBestUnmodifiedSpecialistValue$[ebp], eax
$LN4@GetAIBestS:

; 1275 : #endif
; 1276 : 					}
; 1277 : 				}
; 1278 : 			}
; 1279 : 		}
; 1280 : 	}

	jmp	$LN6@GetAIBestS
$LN5@GetAIBestS:

; 1281 : 
; 1282 : #if defined(NQM_PRUNING) && defined(AUI_CITIZENS_FIX_REMOVE_WORST_SPECIALIST_ACTUALLY_REMOVES_WORST)
; 1283 : 	if (iSpecialistValue)
; 1284 : 		*iSpecialistValue = iBestSpecialistValue;
; 1285 : #elif defined(AUI_CITIZENS_FIX_REMOVE_WORST_SPECIALIST_ACTUALLY_REMOVES_WORST)
; 1286 : 	if (iSpecialistValue)
; 1287 : 		*iSpecialistValue = iBestUnmodifiedSpecialistValue;
; 1288 : #elif defined(NQM_PRUNING)
; 1289 : 	iSpecialistValue = iBestSpecialistValue;
; 1290 : #else
; 1291 : 	iSpecialistValue = iBestUnmodifiedSpecialistValue;

	mov	ecx, DWORD PTR _iSpecialistValue$[ebp]
	mov	edx, DWORD PTR _iBestUnmodifiedSpecialistValue$[ebp]
	mov	DWORD PTR [ecx], edx

; 1292 : #endif
; 1293 : 	return eBestBuilding;

	mov	eax, DWORD PTR _eBestBuilding$[ebp]

; 1294 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetAIBestSpecialistBuilding@CvCityCitizens@@QAE?AW4BuildingTypes@@AAH@Z ENDP ; CvCityCitizens::GetAIBestSpecialistBuilding
_TEXT	ENDS
EXTRN	?IsEmpireUnhappy@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::IsEmpireUnhappy
EXTRN	?getGreatPeopleRateChange@CvSpecialistInfo@@QBEHXZ:PROC ; CvSpecialistInfo::getGreatPeopleRateChange
EXTRN	?GetCultureFromSpecialist@CvCity@@QBEHW4SpecialistTypes@@@Z:PROC ; CvCity::GetCultureFromSpecialist
EXTRN	?specialistYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z:PROC ; CvPlayer::specialistYield
; Function compile flags: /Odtp
;	COMDAT ?GetSpecialistValue@CvCityCitizens@@QAEHW4SpecialistTypes@@@Z
_TEXT	SEGMENT
tv166 = -100						; size = 4
_this$ = -96						; size = 4
$T225973 = -92						; size = 4
$T225969 = -88						; size = 4
$T225965 = -84						; size = 4
$T225961 = -80						; size = 4
$T225957 = -76						; size = 4
$T225953 = -72						; size = 4
_iFoodT100NeededFor2$224744 = -68			; size = 4
_iFoodT100NeededFor0$224739 = -64			; size = 4
_iFaithYieldValue$ = -60				; size = 4
_iProductionYieldValue$ = -56				; size = 4
_bAvoidGrowth$ = -49					; size = 1
_iGoldYieldValue$ = -48					; size = 4
_iCultureYieldValue$ = -44				; size = 4
_iExcessFoodTimes100$ = -40				; size = 4
_iGPPYieldValue$ = -36					; size = 4
_iHappinessYieldValue$ = -32				; size = 4
_iScienceYieldValue$ = -28				; size = 4
_pPlayer$ = -24						; size = 4
_iFoodYieldValue$ = -20					; size = 4
_iFoodConsumptionBonus$ = -16				; size = 4
_pSpecialistInfo$ = -12					; size = 4
_iValue$ = -8						; size = 4
_eFocus$ = -4						; size = 4
_eSpecialist$ = 8					; size = 4
?GetSpecialistValue@CvCityCitizens@@QAEHW4SpecialistTypes@@@Z PROC ; CvCityCitizens::GetSpecialistValue, COMDAT
; _this$ = ecx

; 1304 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 100				; 00000064H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1305 : 
; 1306 : 	CvSpecialistInfo* pSpecialistInfo = GC.getSpecialistInfo(eSpecialist);

	mov	eax, DWORD PTR _eSpecialist$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getSpecialistInfo@CvGlobals@@QAEPAVCvSpecialistInfo@@W4SpecialistTypes@@@Z ; CvGlobals::getSpecialistInfo
	mov	DWORD PTR _pSpecialistInfo$[ebp], eax

; 1307 : 	if (pSpecialistInfo == NULL)

	cmp	DWORD PTR _pSpecialistInfo$[ebp], 0
	jne	SHORT $LN30@GetSpecial

; 1308 : 	{
; 1309 : 		//This function should NEVER be called with an invalid specialist info type.
; 1310 : 		CvAssert(pSpecialistInfo);
; 1311 : 		return 0;

	xor	eax, eax
	jmp	$LN31@GetSpecial
$LN30@GetSpecial:

; 1312 : 	}
; 1313 : 
; 1314 : 	int iValue = 0;

	mov	DWORD PTR _iValue$[ebp], 0

; 1315 : 
; 1316 : 	CvPlayer* pPlayer = m_pCity->GetPlayer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetPlayer@CvCity@@QAEPAVCvPlayer@@XZ	; CvCity::GetPlayer
	mov	DWORD PTR _pPlayer$[ebp], eax

; 1317 : 
; 1318 : 	// factor in the fact that specialists may need less food
; 1319 : #ifdef AUI_CITIZENS_FIX_SPECIALIST_VALUE_HALF_FOOD_CONSUMPTION
; 1320 : 	int iFoodConsumptionBonus = (pPlayer->isHalfSpecialistFood() && eSpecialist != (SpecialistTypes)GC.getDEFAULT_SPECIALIST()) ? GC.getFOOD_CONSUMPTION_PER_POPULATION() / 2 : 0;
; 1321 : #else
; 1322 : 	int iFoodConsumptionBonus = (pPlayer->isHalfSpecialistFood()) ? 1 : 0;

	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?isHalfSpecialistFood@CvPlayer@@QBE_NXZ	; CvPlayer::isHalfSpecialistFood
	movzx	edx, al
	neg	edx
	sbb	edx, edx
	neg	edx
	mov	DWORD PTR _iFoodConsumptionBonus$[ebp], edx

; 1323 : #endif
; 1324 : 
; 1325 : #ifdef AUI_CITIZENS_GET_SPECIALIST_VALUE_ACCOUNT_FOR_GURUSHIP
; 1326 : 	const CvReligion* pReligion = NULL;
; 1327 : 	const CvBeliefEntry* pSecondaryBelief = NULL;
; 1328 : 	ReligionTypes eMajority = m_pCity->GetCityReligions()->GetReligiousMajority();
; 1329 : 	if (eMajority != NO_RELIGION && GetTotalSpecialistCount() == (bForRemoval ? 1 : 0))
; 1330 : 	{
; 1331 : 		pReligion = GC.getGame().GetGameReligions()->GetReligion(eMajority, GetPlayer()->GetID());
; 1332 : 		BeliefTypes eSecondaryPantheon = m_pCity->GetCityReligions()->GetSecondaryReligionPantheonBelief();
; 1333 : 		if (eSecondaryPantheon != NO_BELIEF)
; 1334 : 			pSecondaryBelief = GC.GetGameBeliefs()->GetEntry(eSecondaryPantheon);
; 1335 : 	}
; 1336 : #endif
; 1337 : 
; 1338 : 	// Yield Values
; 1339 : #ifdef AUI_CITIZENS_GET_VALUE_SPLIT_EXCESS_FOOD_MUTLIPLIER
; 1340 : 	int iFoodYieldValue = /*12*/ GC.getAI_CITIZEN_VALUE_FOOD();
; 1341 : #else
; 1342 : 	int iFoodYieldValue = (GC.getAI_CITIZEN_VALUE_FOOD() * (pPlayer->specialistYield(eSpecialist, YIELD_FOOD) + iFoodConsumptionBonus));

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2376
	mov	DWORD PTR $T225953[ebp], eax
	push	0
	mov	ecx, DWORD PTR _eSpecialist$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?specialistYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvPlayer::specialistYield
	add	eax, DWORD PTR _iFoodConsumptionBonus$[ebp]
	imul	eax, DWORD PTR $T225953[ebp]
	mov	DWORD PTR _iFoodYieldValue$[ebp], eax

; 1343 : #endif
; 1344 : 	int iProductionYieldValue = (GC.getAI_CITIZEN_VALUE_PRODUCTION() * pPlayer->specialistYield(eSpecialist, YIELD_PRODUCTION));

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2380
	mov	DWORD PTR $T225957[ebp], edx
	push	1
	mov	eax, DWORD PTR _eSpecialist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?specialistYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvPlayer::specialistYield
	imul	eax, DWORD PTR $T225957[ebp]
	mov	DWORD PTR _iProductionYieldValue$[ebp], eax

; 1345 : #ifdef AUI_CITIZENS_GOLD_YIELD_COUNTS_AS_SCIENCE_WHEN_IN_DEFICIT
; 1346 : 	int iGoldYieldValue = (pPlayer->specialistYield(eSpecialist, YIELD_GOLD));
; 1347 : 	int iScienceYieldValue = (pPlayer->specialistYield(eSpecialist, YIELD_SCIENCE));
; 1348 : #else
; 1349 : 	int iGoldYieldValue = (GC.getAI_CITIZEN_VALUE_GOLD() * pPlayer->specialistYield(eSpecialist, YIELD_GOLD));

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2384
	mov	DWORD PTR $T225961[ebp], ecx
	push	2
	mov	edx, DWORD PTR _eSpecialist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?specialistYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvPlayer::specialistYield
	imul	eax, DWORD PTR $T225961[ebp]
	mov	DWORD PTR _iGoldYieldValue$[ebp], eax

; 1350 : 	int iScienceYieldValue = (GC.getAI_CITIZEN_VALUE_SCIENCE() * pPlayer->specialistYield(eSpecialist, YIELD_SCIENCE));

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2388
	mov	DWORD PTR $T225965[ebp], eax
	push	3
	mov	ecx, DWORD PTR _eSpecialist$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?specialistYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvPlayer::specialistYield
	imul	eax, DWORD PTR $T225965[ebp]
	mov	DWORD PTR _iScienceYieldValue$[ebp], eax

; 1351 : #endif
; 1352 : 	int iCultureYieldValue = (GC.getAI_CITIZEN_VALUE_CULTURE() * m_pCity->GetCultureFromSpecialist(eSpecialist)); 

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2392
	mov	DWORD PTR $T225969[ebp], edx
	mov	eax, DWORD PTR _eSpecialist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetCultureFromSpecialist@CvCity@@QBEHW4SpecialistTypes@@@Z ; CvCity::GetCultureFromSpecialist
	imul	eax, DWORD PTR $T225969[ebp]
	mov	DWORD PTR _iCultureYieldValue$[ebp], eax

; 1353 : 	int iFaithYieldValue = (GC.getAI_CITIZEN_VALUE_FAITH() * pPlayer->specialistYield(eSpecialist, YIELD_FAITH));

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+2396
	mov	DWORD PTR $T225973[ebp], edx
	push	5
	mov	eax, DWORD PTR _eSpecialist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?specialistYield@CvPlayer@@QBEHW4SpecialistTypes@@W4YieldTypes@@@Z ; CvPlayer::specialistYield
	imul	eax, DWORD PTR $T225973[ebp]
	mov	DWORD PTR _iFaithYieldValue$[ebp], eax

; 1354 : #ifdef AUI_CITIZENS_GET_SPECIALIST_VALUE_ACCOUNT_FOR_GURUSHIP
; 1355 : 	if (pReligion)
; 1356 : 	{
; 1357 : 		iProductionYieldValue += GC.getAI_CITIZEN_VALUE_PRODUCTION() * pReligion->m_Beliefs.GetYieldChangeAnySpecialist(YIELD_PRODUCTION);
; 1358 : #ifdef AUI_CITIZENS_GOLD_YIELD_COUNTS_AS_SCIENCE_WHEN_IN_DEFICIT
; 1359 : 		iGoldYieldValue += pReligion->m_Beliefs.GetYieldChangeAnySpecialist(YIELD_GOLD);
; 1360 : 		iScienceYieldValue += pReligion->m_Beliefs.GetYieldChangeAnySpecialist(YIELD_SCIENCE);
; 1361 : #else
; 1362 : 		iGoldYieldValue += GC.getAI_CITIZEN_VALUE_GOLD() * pReligion->m_Beliefs.GetYieldChangeAnySpecialist(YIELD_GOLD);
; 1363 : 		iScienceYieldValue += GC.getAI_CITIZEN_VALUE_SCIENCE() * pReligion->m_Beliefs.GetYieldChangeAnySpecialist(YIELD_SCIENCE);
; 1364 : #endif
; 1365 : 		iCultureYieldValue += GC.getAI_CITIZEN_VALUE_CULTURE() * pReligion->m_Beliefs.GetYieldChangeAnySpecialist(YIELD_CULTURE);
; 1366 : 		iFaithYieldValue += GC.getAI_CITIZEN_VALUE_FAITH() * pReligion->m_Beliefs.GetYieldChangeAnySpecialist(YIELD_FAITH);
; 1367 : 	}
; 1368 : 	if (pSecondaryBelief)
; 1369 : 	{
; 1370 : 		iProductionYieldValue += GC.getAI_CITIZEN_VALUE_PRODUCTION() * pSecondaryBelief->GetYieldChangeAnySpecialist(YIELD_PRODUCTION);
; 1371 : #ifdef AUI_CITIZENS_GOLD_YIELD_COUNTS_AS_SCIENCE_WHEN_IN_DEFICIT
; 1372 : 		iGoldYieldValue += pSecondaryBelief->GetYieldChangeAnySpecialist(YIELD_GOLD);
; 1373 : 		iScienceYieldValue += pSecondaryBelief->GetYieldChangeAnySpecialist(YIELD_SCIENCE);
; 1374 : #else
; 1375 : 		iGoldYieldValue += GC.getAI_CITIZEN_VALUE_GOLD() * pSecondaryBelief->GetYieldChangeAnySpecialist(YIELD_GOLD);
; 1376 : 		iScienceYieldValue += GC.getAI_CITIZEN_VALUE_SCIENCE() * pSecondaryBelief->GetYieldChangeAnySpecialist(YIELD_SCIENCE);
; 1377 : #endif
; 1378 : 		iCultureYieldValue += GC.getAI_CITIZEN_VALUE_CULTURE() * pSecondaryBelief->GetYieldChangeAnySpecialist(YIELD_CULTURE);
; 1379 : 		iFaithYieldValue += GC.getAI_CITIZEN_VALUE_FAITH() * pSecondaryBelief->GetYieldChangeAnySpecialist(YIELD_FAITH);
; 1380 : 	}
; 1381 : #endif
; 1382 : 	int iGPPYieldValue = pSpecialistInfo->getGreatPeopleRateChange() * 3; // TODO: un-hardcode this

	mov	ecx, DWORD PTR _pSpecialistInfo$[ebp]
	call	?getGreatPeopleRateChange@CvSpecialistInfo@@QBEHXZ ; CvSpecialistInfo::getGreatPeopleRateChange
	imul	eax, 3
	mov	DWORD PTR _iGPPYieldValue$[ebp], eax

; 1383 : #ifdef AUI_CITIZENS_UNHARDCODE_SPECIALIST_VALUE_HAPPINESS
; 1384 : 	int iHappinessYieldValue = 0;
; 1385 : 	int iExtraUnhappinessT100 = 0;
; 1386 : 	if (pPlayer->isHalfSpecialistUnhappiness() && eSpecialist != (SpecialistTypes)GC.getDEFAULT_SPECIALIST())
; 1387 : 	{
; 1388 : 		iExtraUnhappinessT100 = -GC.getUNHAPPINESS_PER_POPULATION() * 50;
; 1389 : 		// To account for rounding up of halved unhappiness
; 1390 : 		if ((GetTotalSpecialistCount() % 2 == 0) != bForRemoval)
; 1391 : 			iExtraUnhappinessT100 *= 2;
; 1392 : 		if (pPlayer->GetCapitalUnhappinessMod() != 0 && m_pCity->isCapital())
; 1393 : 		{
; 1394 : 			iExtraUnhappinessT100 *= (100 + pPlayer->GetCapitalUnhappinessMod());
; 1395 : 			iExtraUnhappinessT100 /= 100;
; 1396 : 		}
; 1397 : 		iExtraUnhappinessT100 *= (100 + pPlayer->GetUnhappinessMod());
; 1398 : 		iExtraUnhappinessT100 /= 100;
; 1399 : 		iExtraUnhappinessT100 *= (100 + pPlayer->GetPlayerTraits()->GetPopulationUnhappinessModifier());
; 1400 : 		iExtraUnhappinessT100 /= 100;
; 1401 : 		// Handicap mod
; 1402 : 		iExtraUnhappinessT100 *= pPlayer->getHandicapInfo().getPopulationUnhappinessMod();
; 1403 : 		iExtraUnhappinessT100 /= 100;
; 1404 : 
; 1405 : 		// The more happiness we have, the less it's worth
; 1406 : 		// Numbers below are based on Primitive function of f = 2^(1-(Empire Happiness)/10) -> F = -20/ln(2) * 2^(-(Empire Happiness)/10)
; 1407 : 		double dHappinessPre = double(pPlayer->GetExcessHappiness());
; 1408 : 		if (bForRemoval)
; 1409 : 			dHappinessPre += double(iExtraUnhappinessT100) / 100.0;
; 1410 : 		double dHappinessPost = dHappinessPre - double(iExtraUnhappinessT100) / 100.0;
; 1411 : 		double dHappinessYieldValuePre = pow(2.0, dHappinessPre / -10.0) * -20 / M_LN2;
; 1412 : 		double dHappinessYieldValuePost = pow(2.0, dHappinessPost / -10.0) * -20 / M_LN2;
; 1413 : 		iHappinessYieldValue = int(AUI_CITIZENS_UNHARDCODE_SPECIALIST_VALUE_HAPPINESS * (dHappinessYieldValuePost - dHappinessYieldValuePre) + 0.5);
; 1414 : 
; 1415 : 		iHappinessYieldValue *= -iExtraUnhappinessT100;
; 1416 : 		iHappinessYieldValue /= 100;
; 1417 : 		if (bForRemoval)
; 1418 : 			iExtraUnhappinessT100 *= -1;
; 1419 : 	}
; 1420 : #else
; 1421 : 	int iHappinessYieldValue = (m_pCity->GetPlayer()->isHalfSpecialistUnhappiness()) ? 5 : 0; // TODO: un-hardcode this

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetPlayer@CvCity@@QAEPAVCvPlayer@@XZ	; CvCity::GetPlayer
	mov	ecx, eax
	call	?isHalfSpecialistUnhappiness@CvPlayer@@QBE_NXZ ; CvPlayer::isHalfSpecialistUnhappiness
	movzx	edx, al
	neg	edx
	sbb	edx, edx
	and	edx, 5
	mov	DWORD PTR _iHappinessYieldValue$[ebp], edx

; 1422 : 	iHappinessYieldValue = m_pCity->GetPlayer()->IsEmpireUnhappy() ? iHappinessYieldValue * 2 : iHappinessYieldValue; // TODO: un-hardcode this

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetPlayer@CvCity@@QAEPAVCvPlayer@@XZ	; CvCity::GetPlayer
	mov	ecx, eax
	call	?IsEmpireUnhappy@CvPlayer@@QBE_NXZ	; CvPlayer::IsEmpireUnhappy
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN33@GetSpecial
	mov	edx, DWORD PTR _iHappinessYieldValue$[ebp]
	shl	edx, 1
	mov	DWORD PTR tv166[ebp], edx
	jmp	SHORT $LN34@GetSpecial
$LN33@GetSpecial:
	mov	eax, DWORD PTR _iHappinessYieldValue$[ebp]
	mov	DWORD PTR tv166[ebp], eax
$LN34@GetSpecial:
	mov	ecx, DWORD PTR tv166[ebp]
	mov	DWORD PTR _iHappinessYieldValue$[ebp], ecx

; 1423 : #endif
; 1424 : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_YIELD_RATE_MODIFIERS
; 1425 : #ifdef AUI_CITIZENS_CONSIDER_HAPPINESS_VALUE_ON_OTHER_YIELDS
; 1426 : #ifndef AUI_CITIZENS_GET_VALUE_SPLIT_EXCESS_FOOD_MUTLIPLIER
; 1427 : 	iFoodYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_FOOD, 0, NULL, -iExtraUnhappinessT100 / 100);
; 1428 : #endif
; 1429 : 	iProductionYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_PRODUCTION, 0, NULL, -iExtraUnhappinessT100 / 100);
; 1430 : 	iGoldYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_GOLD, 0, NULL, -iExtraUnhappinessT100 / 100);
; 1431 : 	iScienceYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_SCIENCE, 0, NULL, -iExtraUnhappinessT100 / 100);
; 1432 : 	iCultureYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_CULTURE, 0, NULL, -iExtraUnhappinessT100 / 100);
; 1433 : 	iFaithYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_FAITH, 0, NULL, -iExtraUnhappinessT100 / 100);
; 1434 : #else
; 1435 : #ifndef AUI_CITIZENS_GET_VALUE_SPLIT_EXCESS_FOOD_MUTLIPLIER
; 1436 : 	iFoodYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_FOOD);
; 1437 : #endif
; 1438 : 	iProductionYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_PRODUCTION);
; 1439 : 	iGoldYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_GOLD);
; 1440 : 	iScienceYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_SCIENCE);
; 1441 : 	iCultureYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_CULTURE);
; 1442 : 	iFaithYieldValue *= m_pCity->getBaseYieldRateModifier(YIELD_FAITH);
; 1443 : #endif
; 1444 : 
; 1445 : #ifndef AUI_CITIZENS_UNHARDCODE_SPECIALIST_VALUE_GREAT_PERSON_POINTS
; 1446 : 	int iGPPModifier = 100 + pPlayer->getGreatPeopleRateModifier() + GetCity()->getGreatPeopleRateModifier();
; 1447 : 	UnitClassTypes eGPUnitClass = (UnitClassTypes)pSpecialistInfo->getGreatPeopleUnitClass();
; 1448 : 	if (eGPUnitClass != NO_UNITCLASS)
; 1449 : 	{
; 1450 : 		if (eGPUnitClass == (UnitClassTypes)GC.getInfoTypeForString("UNITCLASS_WRITER", true))
; 1451 : 		{
; 1452 : 			iGPPModifier += pPlayer->getGreatWriterRateModifier();
; 1453 : 		}
; 1454 : 		else if (eGPUnitClass == (UnitClassTypes)GC.getInfoTypeForString("UNITCLASS_ARTIST", true))
; 1455 : 		{
; 1456 : 			iGPPModifier += pPlayer->getGreatArtistRateModifier();
; 1457 : 		}
; 1458 : 		else if (eGPUnitClass == (UnitClassTypes)GC.getInfoTypeForString("UNITCLASS_MUSICIAN", true))
; 1459 : 		{
; 1460 : 			iGPPModifier += pPlayer->getGreatMusicianRateModifier();
; 1461 : 		}
; 1462 : 		else if (eGPUnitClass == (UnitClassTypes)GC.getInfoTypeForString("UNITCLASS_SCIENTIST", true))
; 1463 : 		{
; 1464 : 			iGPPModifier += pPlayer->getGreatScientistRateModifier();
; 1465 : 		}
; 1466 : 		else if (eGPUnitClass == (UnitClassTypes)GC.getInfoTypeForString("UNITCLASS_MERCHANT", true))
; 1467 : 		{
; 1468 : 			iGPPModifier += pPlayer->getGreatMerchantRateModifier();
; 1469 : 		}
; 1470 : 		else if (eGPUnitClass == (UnitClassTypes)GC.getInfoTypeForString("UNITCLASS_ENGINEER", true))
; 1471 : 		{
; 1472 : 			iGPPModifier += pPlayer->getGreatEngineerRateModifier();
; 1473 : 		}
; 1474 : 		else if (eGPUnitClass == (UnitClassTypes)GC.getInfoTypeForString("UNITCLASS_GREAT_GENERAL", true))
; 1475 : 		{
; 1476 : 			iGPPModifier += pPlayer->getGreatGeneralRateModifier();
; 1477 : 		}
; 1478 : 		else if (eGPUnitClass == (UnitClassTypes)GC.getInfoTypeForString("UNITCLASS_GREAT_ADMIRAL", true))
; 1479 : 		{
; 1480 : 			iGPPModifier += pPlayer->getGreatAdmiralRateModifier();
; 1481 : 		}
; 1482 : 	}
; 1483 : 	iGPPYieldValue *= iGPPModifier;
; 1484 : #endif
; 1485 : #endif
; 1486 : #ifdef AUI_CITIZENS_GOLD_YIELD_COUNTS_AS_SCIENCE_WHEN_IN_DEFICIT
; 1487 : 	int iCurrentScienceLoss = -GetPlayer()->calculateGoldRateTimes100() - GetPlayer()->GetTreasury()->GetGoldTimes100();
; 1488 : 	if (bForRemoval)
; 1489 : 		iCurrentScienceLoss += iGoldYieldValue;
; 1490 : 	if (iCurrentScienceLoss > 0)
; 1491 : 	{
; 1492 : 		int iGoldToScienceT100 = MIN(iGoldYieldValue, iCurrentScienceLoss);
; 1493 : 		iGoldYieldValue -= iGoldToScienceT100;
; 1494 : 		iScienceYieldValue += iGoldToScienceT100;
; 1495 : 	}
; 1496 : 	iGoldYieldValue *= GC.getAI_CITIZEN_VALUE_GOLD();
; 1497 : 	iScienceYieldValue *= GC.getAI_CITIZEN_VALUE_SCIENCE();
; 1498 : #endif
; 1499 : 
; 1500 : 	// How much surplus food are we making?
; 1501 : 	int iExcessFoodTimes100 = m_pCity->getYieldRateTimes100(YIELD_FOOD, false) - (m_pCity->foodConsumption() * 100);

	push	0
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getYieldRateTimes100@CvCity@@QBEHW4YieldTypes@@_N@Z ; CvCity::getYieldRateTimes100
	mov	esi, eax
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?foodConsumption@CvCity@@QBEH_NH@Z	; CvCity::foodConsumption
	imul	eax, 100				; 00000064H
	sub	esi, eax
	mov	DWORD PTR _iExcessFoodTimes100$[ebp], esi

; 1502 : #if defined(AUI_CITIZENS_GET_VALUE_SPLIT_EXCESS_FOOD_MUTLIPLIER) || defined(AUI_CITIZENS_GET_VALUE_ALTER_FOOD_VALUE_IF_FOOD_PRODUCTION) || defined(AUI_CITIZENS_GET_VALUE_CONSIDER_GROWTH_MODIFIERS)
; 1503 : 	int iSpecialistBaseFoodYield = pPlayer->specialistYield(eSpecialist, YIELD_FOOD);
; 1504 : #ifdef AUI_CITIZENS_GET_SPECIALIST_VALUE_ACCOUNT_FOR_GURUSHIP
; 1505 : 	if (pReligion)
; 1506 : 		iSpecialistBaseFoodYield += pReligion->m_Beliefs.GetYieldChangeAnySpecialist(YIELD_FOOD) * 100;
; 1507 : 	if (pSecondaryBelief)
; 1508 : 		iSpecialistBaseFoodYield += pSecondaryBelief->GetYieldChangeAnySpecialist(YIELD_FOOD) * 100;
; 1509 : #endif
; 1510 : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_YIELD_RATE_MODIFIERS
; 1511 : #ifdef AUI_CITIZENS_CONSIDER_HAPPINESS_VALUE_ON_OTHER_YIELDS
; 1512 : 	iSpecialistBaseFoodYield *= m_pCity->getBaseYieldRateModifier(YIELD_FOOD, 0, NULL, -iExtraUnhappinessT100 / 100);
; 1513 : #else
; 1514 : 	iSpecialistBaseFoodYield *= m_pCity->getBaseYieldRateModifier(YIELD_FOOD);
; 1515 : #endif
; 1516 : #endif
; 1517 : 	if (bForRemoval)
; 1518 : 		iExcessFoodTimes100 -= iSpecialistBaseFoodYield + iFoodConsumptionBonus;
; 1519 : 	int iExcessFoodWithPlotTimes100 = iSpecialistBaseFoodYield + iExcessFoodTimes100 + iFoodConsumptionBonus;
; 1520 : #endif
; 1521 : #ifdef AUI_CITIZENS_CONSIDER_HAPPINESS_VALUE_ON_OTHER_YIELDS
; 1522 : 	// Excess Food bit is to make sure we don't starve to death trying to allocate specialists when we're unhappy
; 1523 : 	if (iExcessFoodWithPlotTimes100 >= 0 && (pPlayer->GetExcessHappiness() - iExtraUnhappinessT100 / 100 >= 0) != (pPlayer->GetExcessHappiness() >= 0))
; 1524 : 	{
; 1525 : 		int iBonusScience = GetPlayer()->GetScienceFromHappinessTimes100(true);
; 1526 : 		if (pPlayer->GetExcessHappiness() >= 0)
; 1527 : 			iBonusScience *= -1;
; 1528 : 		iScienceYieldValue += GC.getAI_CITIZEN_VALUE_SCIENCE() * iBonusScience / GetPlayer()->getNumCities();
; 1529 : 	}
; 1530 : 	// Happiness to culture already multiplied by 100
; 1531 : 	if (pPlayer->GetExcessHappiness() + -iExtraUnhappinessT100 / 100 >= 0)
; 1532 : 		iCultureYieldValue += GC.getAI_CITIZEN_VALUE_CULTURE() * (-iExtraUnhappinessT100 / 100) * GetPlayer()->getHappinessToCulture();
; 1533 : #endif
; 1534 : 
; 1535 : 	bool bAvoidGrowth = IsAvoidGrowth();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsAvoidGrowth@CvCityCitizens@@QAE_NXZ	; CvCityCitizens::IsAvoidGrowth
	mov	BYTE PTR _bAvoidGrowth$[ebp], al

; 1536 : 
; 1537 : 	// City Focus
; 1538 : 	CityAIFocusTypes eFocus = GetFocusType();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFocusType@CvCityCitizens@@QBE?AW4CityAIFocusTypes@@XZ ; CvCityCitizens::GetFocusType
	mov	DWORD PTR _eFocus$[ebp], eax

; 1539 : 	if(eFocus == CITY_AI_FOCUS_TYPE_FOOD)

	cmp	DWORD PTR _eFocus$[ebp], 0
	jne	SHORT $LN29@GetSpecial

; 1540 : 		iFoodYieldValue *= 3;

	mov	ecx, DWORD PTR _iFoodYieldValue$[ebp]
	imul	ecx, 3
	mov	DWORD PTR _iFoodYieldValue$[ebp], ecx
	jmp	$LN28@GetSpecial
$LN29@GetSpecial:

; 1541 : 	else if(eFocus == CITY_AI_FOCUS_TYPE_PRODUCTION)

	cmp	DWORD PTR _eFocus$[ebp], 1
	jne	SHORT $LN27@GetSpecial

; 1542 : 		iProductionYieldValue *= 3;

	mov	edx, DWORD PTR _iProductionYieldValue$[ebp]
	imul	edx, 3
	mov	DWORD PTR _iProductionYieldValue$[ebp], edx
	jmp	$LN28@GetSpecial
$LN27@GetSpecial:

; 1543 : 	else if(eFocus == CITY_AI_FOCUS_TYPE_GOLD)

	cmp	DWORD PTR _eFocus$[ebp], 2
	jne	SHORT $LN25@GetSpecial

; 1544 : 		iGoldYieldValue *= 3;

	mov	eax, DWORD PTR _iGoldYieldValue$[ebp]
	imul	eax, 3
	mov	DWORD PTR _iGoldYieldValue$[ebp], eax
	jmp	SHORT $LN28@GetSpecial
$LN25@GetSpecial:

; 1545 : 	else if(eFocus == CITY_AI_FOCUS_TYPE_SCIENCE)

	cmp	DWORD PTR _eFocus$[ebp], 4
	jne	SHORT $LN23@GetSpecial

; 1546 : 		iScienceYieldValue *= 3;

	mov	ecx, DWORD PTR _iScienceYieldValue$[ebp]
	imul	ecx, 3
	mov	DWORD PTR _iScienceYieldValue$[ebp], ecx
	jmp	SHORT $LN28@GetSpecial
$LN23@GetSpecial:

; 1547 : 	else if(eFocus == CITY_AI_FOCUS_TYPE_CULTURE)

	cmp	DWORD PTR _eFocus$[ebp], 5
	jne	SHORT $LN21@GetSpecial

; 1548 : 		iCultureYieldValue *= 3;

	mov	edx, DWORD PTR _iCultureYieldValue$[ebp]
	imul	edx, 3
	mov	DWORD PTR _iCultureYieldValue$[ebp], edx
	jmp	SHORT $LN28@GetSpecial
$LN21@GetSpecial:

; 1549 : 	else if(eFocus == CITY_AI_FOCUS_TYPE_GOLD_GROWTH)

	cmp	DWORD PTR _eFocus$[ebp], 7
	jne	SHORT $LN19@GetSpecial

; 1550 : 	{
; 1551 : 		iFoodYieldValue *= 2;

	mov	eax, DWORD PTR _iFoodYieldValue$[ebp]
	shl	eax, 1
	mov	DWORD PTR _iFoodYieldValue$[ebp], eax

; 1552 : 		iGoldYieldValue *= 2;

	mov	ecx, DWORD PTR _iGoldYieldValue$[ebp]
	shl	ecx, 1
	mov	DWORD PTR _iGoldYieldValue$[ebp], ecx
	jmp	SHORT $LN28@GetSpecial
$LN19@GetSpecial:

; 1553 : 	}
; 1554 : 	else if(eFocus == CITY_AI_FOCUS_TYPE_PROD_GROWTH)

	cmp	DWORD PTR _eFocus$[ebp], 6
	jne	SHORT $LN17@GetSpecial

; 1555 : 	{
; 1556 : 		iFoodYieldValue *= 2;

	mov	edx, DWORD PTR _iFoodYieldValue$[ebp]
	shl	edx, 1
	mov	DWORD PTR _iFoodYieldValue$[ebp], edx

; 1557 : 		iProductionYieldValue *= 2;

	mov	eax, DWORD PTR _iProductionYieldValue$[ebp]
	shl	eax, 1
	mov	DWORD PTR _iProductionYieldValue$[ebp], eax
	jmp	SHORT $LN28@GetSpecial
$LN17@GetSpecial:

; 1558 : 	}
; 1559 : 	else if(eFocus == CITY_AI_FOCUS_TYPE_FAITH)

	cmp	DWORD PTR _eFocus$[ebp], 8
	jne	SHORT $LN15@GetSpecial

; 1560 : 	{
; 1561 : 		iFaithYieldValue *= 3;

	mov	ecx, DWORD PTR _iFaithYieldValue$[ebp]
	imul	ecx, 3
	mov	DWORD PTR _iFaithYieldValue$[ebp], ecx
	jmp	SHORT $LN28@GetSpecial
$LN15@GetSpecial:

; 1562 : 	}
; 1563 : 	else if(eFocus == CITY_AI_FOCUS_TYPE_GREAT_PEOPLE)

	cmp	DWORD PTR _eFocus$[ebp], 3
	jne	SHORT $LN28@GetSpecial

; 1564 : 	{
; 1565 : 		iGPPYieldValue *= 3;

	mov	edx, DWORD PTR _iGPPYieldValue$[ebp]
	imul	edx, 3
	mov	DWORD PTR _iGPPYieldValue$[ebp], edx
$LN28@GetSpecial:

; 1566 : 	}
; 1567 : 
; 1568 : #ifdef AUI_CITIZENS_GET_VALUE_ALTER_FOOD_VALUE_IF_FOOD_PRODUCTION
; 1569 : #ifdef AUI_CITIZENS_FOOD_PRODUCTION_TRIAL_RUN_THEN_SELF_CONSISTENCY
; 1570 : 	if (!getIgnoreFoodProduction() && m_pCity->isFoodProduction())
; 1571 : #else
; 1572 : 	if (m_pCity->isFoodProduction())
; 1573 : #endif
; 1574 : 	{
; 1575 : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_GROWTH_MODIFIERS
; 1576 : #ifdef AUI_CITIZENS_CONSIDER_HAPPINESS_VALUE_ON_OTHER_YIELDS
; 1577 : 		iFoodYieldValue = m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodWithPlotTimes100, -iExtraUnhappinessT100 / 100) - m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodTimes100, -iExtraUnhappinessT100 / 100);
; 1578 : 		int iDummy = m_pCity->GetFoodProduction(iExcessFoodTimes100 / 100);
; 1579 : 		int iCurrProdFromFood = m_pCity->foodDifference(true, &iDummy, -iExtraUnhappinessT100 / 100);
; 1580 : 		iDummy = m_pCity->GetFoodProduction(iExcessFoodWithPlotTimes100 / 100);
; 1581 : 		int iProdFromFoodWithTile = m_pCity->foodDifference(true, &iDummy, -iExtraUnhappinessT100 / 100);
; 1582 : #else
; 1583 : 		iFoodYieldValue = m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodWithPlotTimes100) - m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodTimes100);
; 1584 : 		int iDummy = m_pCity->GetFoodProduction(iExcessFoodTimes100 / 100);
; 1585 : 		int iCurrProdFromFood = m_pCity->foodDifference(true, &iDummy);
; 1586 : 		iDummy = m_pCity->GetFoodProduction(iExcessFoodWithPlotTimes100 / 100);
; 1587 : 		int iProdFromFoodWithTile = m_pCity->foodDifference(true, &iDummy);
; 1588 : #endif
; 1589 : #ifndef AUI_CITIZENS_GET_VALUE_CONSIDER_YIELD_RATE_MODIFIERS
; 1590 : 		iFoodYieldValue /= 100;
; 1591 : #endif
; 1592 : #else
; 1593 : 		iFoodYieldValue = iExcessFoodWithPlotTimes100 - iExcessFoodTimes100;
; 1594 : 		int iCurrProdFromFood = m_pCity->GetFoodProduction(iExcessFoodTimes100 / 100);
; 1595 : 		int iProdFromFoodWithTile = m_pCity->GetFoodProduction(iExcessFoodWithPlotTimes100 / 100);
; 1596 : #endif
; 1597 : 		iProductionYieldValue += (iProdFromFoodWithTile - iCurrProdFromFood) * GC.getAI_CITIZEN_VALUE_PRODUCTION() * (eFocus == CITY_AI_FOCUS_TYPE_PRODUCTION ? 3 : 1);
; 1598 : 	}
; 1599 : 	else
; 1600 : #endif
; 1601 : 	// Food can be worth less if we don't want to grow
; 1602 : 	if(iExcessFoodTimes100 >= 0 && bAvoidGrowth)

	cmp	DWORD PTR _iExcessFoodTimes100$[ebp], 0
	jl	SHORT $LN12@GetSpecial
	movzx	eax, BYTE PTR _bAvoidGrowth$[ebp]
	test	eax, eax
	je	SHORT $LN12@GetSpecial

; 1603 : 	{
; 1604 : #ifdef AUI_CITIZENS_AVOID_GROWTH_STILL_VALUES_EXCESS_FOOD
; 1605 : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_GROWTH_MODIFIERS
; 1606 : #ifdef AUI_CITIZENS_CONSIDER_HAPPINESS_VALUE_ON_OTHER_YIELDS
; 1607 : 		iExcessFoodTimes100 = m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodTimes100, -iExtraUnhappinessT100 / 100);
; 1608 : 		iExcessFoodWithPlotTimes100 = m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodWithPlotTimes100, -iExtraUnhappinessT100 / 100);
; 1609 : #else
; 1610 : 		iExcessFoodTimes100 = m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodTimes100);
; 1611 : 		iExcessFoodWithPlotTimes100 = m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodWithPlotTimes100);
; 1612 : #endif
; 1613 : #endif
; 1614 : 		iFoodYieldValue = iExcessFoodWithPlotTimes100 - iExcessFoodTimes100;
; 1615 : #ifndef AUI_CITIZENS_GET_VALUE_CONSIDER_YIELD_RATE_MODIFIERS
; 1616 : 		iFoodYieldValue /= 100;
; 1617 : #endif
; 1618 : #else
; 1619 : 		// If we at least have enough Food to feed everyone, zero out the value of additional food
; 1620 : 		iFoodYieldValue = 0;

	mov	DWORD PTR _iFoodYieldValue$[ebp], 0

; 1621 : #endif
; 1622 : 	}
; 1623 : 	// We want to grow here
; 1624 : 	else

	jmp	SHORT $LN11@GetSpecial
$LN12@GetSpecial:

; 1625 : 	{
; 1626 : #ifdef AUI_CITIZENS_GET_VALUE_SPLIT_EXCESS_FOOD_MUTLIPLIER
; 1627 : 		iFoodYieldValue *= 8;
; 1628 : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_GROWTH_MODIFIERS
; 1629 : #ifdef AUI_CITIZENS_CONSIDER_HAPPINESS_VALUE_ON_OTHER_YIELDS
; 1630 : 		iExcessFoodTimes100 = m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodTimes100, -iExtraUnhappinessT100 / 100);
; 1631 : 		iExcessFoodWithPlotTimes100 = m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodWithPlotTimes100, -iExtraUnhappinessT100 / 100);
; 1632 : #else
; 1633 : 		iExcessFoodTimes100 = m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodTimes100);
; 1634 : 		iExcessFoodWithPlotTimes100 = m_pCity->foodDifferenceTimes100(true, NULL, &iExcessFoodWithPlotTimes100);
; 1635 : #endif
; 1636 : #endif
; 1637 : #ifdef AUI_CITIZENS_AVOID_GROWTH_STILL_VALUES_EXCESS_FOOD
; 1638 : 		int iExcessFoodYieldValue = 1;
; 1639 : #else
; 1640 : 		int iExcessFoodYieldValue = 0;
; 1641 : #endif
; 1642 : 		int iTargetFoodT100 = 0;
; 1643 : 		if (!bAvoidGrowth)
; 1644 : 		{
; 1645 : 			iExcessFoodYieldValue = iFoodYieldValue / 16;
; 1646 : #ifdef AUI_CITIZENS_LOW_POPULATION_CITIES_USE_2MIN_NOT_4X_FOOD
; 1647 : 			if (eFocus == NO_CITY_AI_FOCUS_TYPE || eFocus == CITY_AI_FOCUS_TYPE_FOOD || eFocus == CITY_AI_FOCUS_TYPE_PROD_GROWTH
; 1648 : 				|| eFocus == CITY_AI_FOCUS_TYPE_GOLD_GROWTH || m_pCity->getPopulation() < 2)
; 1649 : #else
; 1650 : 			if (eFocus == NO_CITY_AI_FOCUS_TYPE || eFocus == CITY_AI_FOCUS_TYPE_FOOD || eFocus == CITY_AI_FOCUS_TYPE_PROD_GROWTH || eFocus == CITY_AI_FOCUS_TYPE_GOLD_GROWTH)
; 1651 : #endif
; 1652 : 			{
; 1653 : 				iTargetFoodT100 = 100 * GC.getFOOD_CONSUMPTION_PER_POPULATION();
; 1654 : 			}
; 1655 : #ifdef AUI_CITIZENS_PUPPET_STILL_WANTS_GROWTH
; 1656 : 			else if (m_pCity->IsPuppet())
; 1657 : 				iTargetFoodT100 = 50 * GC.getFOOD_CONSUMPTION_PER_POPULATION();
; 1658 : #endif
; 1659 : 		}
; 1660 : 
; 1661 : 		int iNonExcessFoodPlotYieldT100 = iExcessFoodWithPlotTimes100 - iExcessFoodTimes100;
; 1662 : 		int iExcessFoodPlotYieldT100 = iNonExcessFoodPlotYieldT100;
; 1663 : 		if (iExcessFoodWithPlotTimes100 <= iTargetFoodT100)
; 1664 : 		{
; 1665 : 			iExcessFoodPlotYieldT100 = 0;
; 1666 : 		}
; 1667 : 		else if (iExcessFoodTimes100 >= iTargetFoodT100)
; 1668 : 		{
; 1669 : 			iNonExcessFoodPlotYieldT100 = 0;
; 1670 : 		}
; 1671 : 		else
; 1672 : 		{
; 1673 : 			iNonExcessFoodPlotYieldT100 = iTargetFoodT100 - iExcessFoodTimes100;
; 1674 : 			iExcessFoodPlotYieldT100 = iExcessFoodWithPlotTimes100 - iTargetFoodT100;
; 1675 : 		}
; 1676 : 
; 1677 : 		iFoodYieldValue *= iNonExcessFoodPlotYieldT100;
; 1678 : 		iFoodYieldValue += (iExcessFoodPlotYieldT100 * iExcessFoodYieldValue);
; 1679 : #ifndef AUI_CITIZENS_GET_VALUE_CONSIDER_YIELD_RATE_MODIFIERS
; 1680 : 		iFoodYieldValue /= 100;
; 1681 : #endif
; 1682 : #else
; 1683 : 		// If we have a non-default and non-food focus, only worry about getting to 0 food
; 1684 : #ifdef AUI_CITIZENS_LOW_POPULATION_CITIES_USE_2MIN_NOT_4X_FOOD
; 1685 : 		if (eFocus != NO_CITY_AI_FOCUS_TYPE && eFocus != CITY_AI_FOCUS_TYPE_FOOD && eFocus != CITY_AI_FOCUS_TYPE_PROD_GROWTH && eFocus != CITY_AI_FOCUS_TYPE_GOLD_GROWTH && m_pCity->getPopulation() >= 5)
; 1686 : #else
; 1687 : 		if(eFocus != NO_CITY_AI_FOCUS_TYPE && eFocus != CITY_AI_FOCUS_TYPE_FOOD && eFocus != CITY_AI_FOCUS_TYPE_PROD_GROWTH && eFocus != CITY_AI_FOCUS_TYPE_GOLD_GROWTH)

	cmp	DWORD PTR _eFocus$[ebp], -1
	je	SHORT $LN10@GetSpecial
	cmp	DWORD PTR _eFocus$[ebp], 0
	je	SHORT $LN10@GetSpecial
	cmp	DWORD PTR _eFocus$[ebp], 6
	je	SHORT $LN10@GetSpecial
	cmp	DWORD PTR _eFocus$[ebp], 7
	je	SHORT $LN10@GetSpecial

; 1688 : #endif
; 1689 : 		{
; 1690 : 			int iFoodT100NeededFor0 = -iExcessFoodTimes100;

	mov	ecx, DWORD PTR _iExcessFoodTimes100$[ebp]
	neg	ecx
	mov	DWORD PTR _iFoodT100NeededFor0$224739[ebp], ecx

; 1691 : 
; 1692 : 			if(iFoodT100NeededFor0 > 0)

	cmp	DWORD PTR _iFoodT100NeededFor0$224739[ebp], 0
	jle	SHORT $LN9@GetSpecial

; 1693 : 			{
; 1694 : 				iFoodYieldValue *= 8;

	mov	edx, DWORD PTR _iFoodYieldValue$[ebp]
	shl	edx, 3
	mov	DWORD PTR _iFoodYieldValue$[ebp], edx

; 1695 : 			}
; 1696 : 			else

	jmp	SHORT $LN8@GetSpecial
$LN9@GetSpecial:

; 1697 : 			{
; 1698 : 				iFoodYieldValue /= 2;

	mov	eax, DWORD PTR _iFoodYieldValue$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _iFoodYieldValue$[ebp], eax
$LN8@GetSpecial:

; 1699 : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_GROWTH_MODIFIERS
; 1700 : 				int iExtraFoodValueT100 = (m_pCity->foodDifferenceTimes100(true, NULL, true, iExcessFoodWithPlotTimes100 - iExcessFoodTimes100) -
; 1701 : 					(iExcessFoodWithPlotTimes100 - iExcessFoodTimes100)) * /*12*/ GC.getAI_CITIZEN_VALUE_FOOD();
; 1702 : 				if (eFocus == CITY_AI_FOCUS_TYPE_FOOD)
; 1703 : 					iExtraFoodValueT100 *= 3;
; 1704 : 				else if (eFocus == CITY_AI_FOCUS_TYPE_GOLD_GROWTH || eFocus == CITY_AI_FOCUS_TYPE_PROD_GROWTH)
; 1705 : 					iExtraFoodValueT100 *= 2;
; 1706 : 				iFoodYieldValue += iExtraFoodValueT100 / 200;
; 1707 : #endif
; 1708 : 			}

	jmp	SHORT $LN11@GetSpecial
$LN10@GetSpecial:

; 1709 : 		}
; 1710 : 		// If our surplus is not at least 2, really emphasize food plots
; 1711 : 		else if(!bAvoidGrowth)

	movzx	eax, BYTE PTR _bAvoidGrowth$[ebp]
	test	eax, eax
	jne	SHORT $LN11@GetSpecial

; 1712 : 		{
; 1713 : #ifdef AUI_CITIZENS_FIX_SPECIALIST_VALUE_HALF_FOOD_CONSUMPTION
; 1714 : 			int iFoodT100NeededFor2 = 100 * GC.getFOOD_CONSUMPTION_PER_POPULATION() - iExcessFoodTimes100;
; 1715 : #else
; 1716 : 			int iFoodT100NeededFor2 = 200 - iExcessFoodTimes100;

	mov	ecx, 200				; 000000c8H
	sub	ecx, DWORD PTR _iExcessFoodTimes100$[ebp]
	mov	DWORD PTR _iFoodT100NeededFor2$224744[ebp], ecx

; 1717 : #endif
; 1718 : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_GROWTH_MODIFIERS
; 1719 : 			int iExtraFoodValueT100 = (m_pCity->foodDifferenceTimes100(true, NULL, true, iExcessFoodWithPlotTimes100 - iExcessFoodTimes100) -
; 1720 : 				(iExcessFoodWithPlotTimes100 - iExcessFoodTimes100)) * /*12*/ GC.getAI_CITIZEN_VALUE_FOOD();
; 1721 : 			if (eFocus == CITY_AI_FOCUS_TYPE_FOOD)
; 1722 : 				iExtraFoodValueT100 *= 3;
; 1723 : 			else if (eFocus == CITY_AI_FOCUS_TYPE_GOLD_GROWTH || eFocus == CITY_AI_FOCUS_TYPE_PROD_GROWTH)
; 1724 : 				iExtraFoodValueT100 *= 2;
; 1725 : #endif
; 1726 : 
; 1727 : 			if(iFoodT100NeededFor2 > 0)

	cmp	DWORD PTR _iFoodT100NeededFor2$224744[ebp], 0
	jle	SHORT $LN5@GetSpecial

; 1728 : 			{
; 1729 : 				iFoodYieldValue *= 8;

	mov	edx, DWORD PTR _iFoodYieldValue$[ebp]
	shl	edx, 3
	mov	DWORD PTR _iFoodYieldValue$[ebp], edx
	jmp	SHORT $LN11@GetSpecial
$LN5@GetSpecial:

; 1730 : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_GROWTH_MODIFIERS
; 1731 : 				iExtraFoodValueT100 = 0;
; 1732 : 				iExtraFoodValueT100 += (m_pCity->foodDifferenceTimes100(true, NULL, true, MIN(iExcessFoodWithPlotTimes100, 100 * GC.getFOOD_CONSUMPTION_PER_POPULATION())) -
; 1733 : 					MIN(iExcessFoodWithPlotTimes100, 100 * GC.getFOOD_CONSUMPTION_PER_POPULATION())) * 8 * /*12*/ GC.getAI_CITIZEN_VALUE_FOOD();
; 1734 : 				if (eFocus == CITY_AI_FOCUS_TYPE_FOOD)
; 1735 : 					iExtraFoodValueT100 *= 3;
; 1736 : 				else if (eFocus == CITY_AI_FOCUS_TYPE_GOLD_GROWTH || eFocus == CITY_AI_FOCUS_TYPE_PROD_GROWTH)
; 1737 : 					iExtraFoodValueT100 *= 2;
; 1738 : 				iFoodYieldValue += iExtraFoodValueT100 / 100;
; 1739 : #endif
; 1740 : 			}
; 1741 : 			else if (eFocus != CITY_AI_FOCUS_TYPE_FOOD)

	cmp	DWORD PTR _eFocus$[ebp], 0
	je	SHORT $LN11@GetSpecial

; 1742 : 			{
; 1743 : 				iFoodYieldValue /= 2;

	mov	eax, DWORD PTR _iFoodYieldValue$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _iFoodYieldValue$[ebp], eax
$LN11@GetSpecial:

; 1744 : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_GROWTH_MODIFIERS
; 1745 : 				iFoodYieldValue += iExtraFoodValueT100 / 200;
; 1746 : 			}
; 1747 : 			else
; 1748 : 			{
; 1749 : 				iFoodYieldValue += iExtraFoodValueT100 / 100;
; 1750 : #endif
; 1751 : 			}
; 1752 : 		}
; 1753 : #ifdef AUI_CITIZENS_FIX_GET_VALUE_FOOD_YIELD_VALUE_WHEN_STARVATION_WITH_AVOID_GROWTH
; 1754 : 		// Food focus and negative food, but with avoid growth enabled for some reason
; 1755 : 		else
; 1756 : 		{
; 1757 : 			iFoodYieldValue *= 8;
; 1758 : 		}
; 1759 : #endif
; 1760 : #endif
; 1761 : 	}
; 1762 : 
; 1763 : #ifndef AUI_CITIZENS_LOW_POPULATION_CITIES_USE_2MIN_NOT_4X_FOOD
; 1764 : 	if((eFocus == NO_CITY_AI_FOCUS_TYPE || eFocus == CITY_AI_FOCUS_TYPE_PROD_GROWTH || eFocus == CITY_AI_FOCUS_TYPE_GOLD_GROWTH) && !bAvoidGrowth && m_pCity->getPopulation() < 5)

	cmp	DWORD PTR _eFocus$[ebp], -1
	je	SHORT $LN1@GetSpecial
	cmp	DWORD PTR _eFocus$[ebp], 6
	je	SHORT $LN1@GetSpecial
	cmp	DWORD PTR _eFocus$[ebp], 7
	jne	SHORT $LN2@GetSpecial
$LN1@GetSpecial:
	movzx	eax, BYTE PTR _bAvoidGrowth$[ebp]
	test	eax, eax
	jne	SHORT $LN2@GetSpecial
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, 5
	jge	SHORT $LN2@GetSpecial

; 1765 : 	{
; 1766 : 		iFoodYieldValue *= 4;

	mov	edx, DWORD PTR _iFoodYieldValue$[ebp]
	shl	edx, 2
	mov	DWORD PTR _iFoodYieldValue$[ebp], edx
$LN2@GetSpecial:

; 1767 : 	}
; 1768 : #endif
; 1769 : 
; 1770 : 	iValue += iFoodYieldValue;

	mov	eax, DWORD PTR _iValue$[ebp]
	add	eax, DWORD PTR _iFoodYieldValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 1771 : 	iValue += iProductionYieldValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	add	ecx, DWORD PTR _iProductionYieldValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], ecx

; 1772 : 	iValue += iGoldYieldValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	add	edx, DWORD PTR _iGoldYieldValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], edx

; 1773 : 	iValue += iScienceYieldValue;

	mov	eax, DWORD PTR _iValue$[ebp]
	add	eax, DWORD PTR _iScienceYieldValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 1774 : 	iValue += iCultureYieldValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	add	ecx, DWORD PTR _iCultureYieldValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], ecx

; 1775 : 	iValue += iFaithYieldValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	add	edx, DWORD PTR _iFaithYieldValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], edx

; 1776 : #ifndef AUI_CITIZENS_UNHARDCODE_SPECIALIST_VALUE_GREAT_PERSON_POINTS
; 1777 : 	iValue += iGPPYieldValue;

	mov	eax, DWORD PTR _iValue$[ebp]
	add	eax, DWORD PTR _iGPPYieldValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], eax

; 1778 : #endif
; 1779 : #ifdef AUI_CITIZENS_GET_VALUE_CONSIDER_YIELD_RATE_MODIFIERS
; 1780 : 	iValue /= 100;
; 1781 : #endif
; 1782 : #ifdef AUI_CITIZENS_UNHARDCODE_SPECIALIST_VALUE_GREAT_PERSON_POINTS
; 1783 : 	iValue += iGPPYieldValue;
; 1784 : #endif
; 1785 : 	iValue += iHappinessYieldValue;

	mov	ecx, DWORD PTR _iValue$[ebp]
	add	ecx, DWORD PTR _iHappinessYieldValue$[ebp]
	mov	DWORD PTR _iValue$[ebp], ecx

; 1786 : 
; 1787 : 	return iValue;

	mov	eax, DWORD PTR _iValue$[ebp]
$LN31@GetSpecial:

; 1788 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?GetSpecialistValue@CvCityCitizens@@QAEHW4SpecialistTypes@@@Z ENDP ; CvCityCitizens::GetSpecialistValue
_TEXT	ENDS
PUBLIC	?IsBetterThanDefaultSpecialist@CvCityCitizens@@QAE_NW4SpecialistTypes@@@Z ; CvCityCitizens::IsBetterThanDefaultSpecialist
; Function compile flags: /Odtp
;	COMDAT ?IsBetterThanDefaultSpecialist@CvCityCitizens@@QAE_NW4SpecialistTypes@@@Z
_TEXT	SEGMENT
tv76 = -36						; size = 4
_this$ = -32						; size = 4
_eYield$ = -28						; size = 4
_iSpecialistYield$ = -24				; size = 4
_eDefaultSpecialist$ = -20				; size = 4
_iDefaultSpecialistYield$ = -16				; size = 4
_pDefaultSpecialistInfo$ = -12				; size = 4
_pSpecialistInfo$ = -8					; size = 4
_eFocus$ = -4						; size = 4
_eSpecialist$ = 8					; size = 4
?IsBetterThanDefaultSpecialist@CvCityCitizens@@QAE_NW4SpecialistTypes@@@Z PROC ; CvCityCitizens::IsBetterThanDefaultSpecialist, COMDAT
; _this$ = ecx

; 1797 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 1798 : 	CvSpecialistInfo* pSpecialistInfo = GC.getSpecialistInfo(eSpecialist);

	mov	eax, DWORD PTR _eSpecialist$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getSpecialistInfo@CvGlobals@@QAEPAVCvSpecialistInfo@@W4SpecialistTypes@@@Z ; CvGlobals::getSpecialistInfo
	mov	DWORD PTR _pSpecialistInfo$[ebp], eax

; 1799 : 	CvAssertMsg(pSpecialistInfo, "Invalid specialist type when assigning citizens. Please send Anton your save file and version.");
; 1800 : 	if(!pSpecialistInfo) return false; // Assumes that default specialist will work out

	cmp	DWORD PTR _pSpecialistInfo$[ebp], 0
	jne	SHORT $LN16@IsBetterTh
	xor	al, al
	jmp	$LN17@IsBetterTh
$LN16@IsBetterTh:

; 1801 : 
; 1802 : 	SpecialistTypes eDefaultSpecialist = (SpecialistTypes) GC.getDEFAULT_SPECIALIST();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8420
	mov	DWORD PTR _eDefaultSpecialist$[ebp], ecx

; 1803 : 	CvSpecialistInfo* pDefaultSpecialistInfo = GC.getSpecialistInfo(eDefaultSpecialist);

	mov	edx, DWORD PTR _eDefaultSpecialist$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getSpecialistInfo@CvGlobals@@QAEPAVCvSpecialistInfo@@W4SpecialistTypes@@@Z ; CvGlobals::getSpecialistInfo
	mov	DWORD PTR _pDefaultSpecialistInfo$[ebp], eax

; 1804 : 	CvAssertMsg(pDefaultSpecialistInfo, "Invalid default specialist type when assigning citizens. Please send Anton your save file and version.");
; 1805 : 	if(!pDefaultSpecialistInfo) return false;

	cmp	DWORD PTR _pDefaultSpecialistInfo$[ebp], 0
	jne	SHORT $LN15@IsBetterTh
	xor	al, al
	jmp	$LN17@IsBetterTh
$LN15@IsBetterTh:

; 1806 : 
; 1807 : 	//antonjs: consider: deficient yield
; 1808 : 
; 1809 : 	CityAIFocusTypes eFocus = GetFocusType();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFocusType@CvCityCitizens@@QBE?AW4CityAIFocusTypes@@XZ ; CvCityCitizens::GetFocusType
	mov	DWORD PTR _eFocus$[ebp], eax

; 1810 : 	YieldTypes eYield = NO_YIELD;

	mov	DWORD PTR _eYield$[ebp], -1

; 1811 : 	switch (eFocus)

	mov	eax, DWORD PTR _eFocus$[ebp]
	mov	DWORD PTR tv76[ebp], eax
	cmp	DWORD PTR tv76[ebp], 8
	ja	SHORT $LN4@IsBetterTh
	mov	ecx, DWORD PTR tv76[ebp]
	jmp	DWORD PTR $LN21@IsBetterTh[ecx*4]
$LN12@IsBetterTh:

; 1812 : 	{
; 1813 : 	case CITY_AI_FOCUS_TYPE_FOOD:
; 1814 : 		eYield = YIELD_FOOD;

	mov	DWORD PTR _eYield$[ebp], 0

; 1815 : 		break;

	jmp	SHORT $LN13@IsBetterTh
$LN11@IsBetterTh:

; 1816 : 	case CITY_AI_FOCUS_TYPE_PRODUCTION:
; 1817 : 		eYield = YIELD_PRODUCTION;

	mov	DWORD PTR _eYield$[ebp], 1

; 1818 : 		break;

	jmp	SHORT $LN13@IsBetterTh
$LN10@IsBetterTh:

; 1819 : 	case CITY_AI_FOCUS_TYPE_GOLD:
; 1820 : 		eYield = YIELD_GOLD;

	mov	DWORD PTR _eYield$[ebp], 2

; 1821 : 		break;

	jmp	SHORT $LN13@IsBetterTh
$LN9@IsBetterTh:

; 1822 : 	case CITY_AI_FOCUS_TYPE_GREAT_PEOPLE:
; 1823 : 		eYield = NO_YIELD;

	mov	DWORD PTR _eYield$[ebp], -1

; 1824 : 		break;

	jmp	SHORT $LN13@IsBetterTh
$LN8@IsBetterTh:

; 1825 : 	case CITY_AI_FOCUS_TYPE_SCIENCE:
; 1826 : 		eYield = YIELD_SCIENCE;

	mov	DWORD PTR _eYield$[ebp], 3

; 1827 : 		break;

	jmp	SHORT $LN13@IsBetterTh
$LN7@IsBetterTh:

; 1828 : 	case CITY_AI_FOCUS_TYPE_CULTURE:
; 1829 : 		eYield = YIELD_CULTURE;

	mov	DWORD PTR _eYield$[ebp], 4

; 1830 : 		break;

	jmp	SHORT $LN13@IsBetterTh
$LN6@IsBetterTh:

; 1831 : 	case CITY_AI_FOCUS_TYPE_PROD_GROWTH:
; 1832 : 	case CITY_AI_FOCUS_TYPE_GOLD_GROWTH:
; 1833 : 		eYield = YIELD_FOOD;

	mov	DWORD PTR _eYield$[ebp], 0

; 1834 : 		break;

	jmp	SHORT $LN13@IsBetterTh
$LN5@IsBetterTh:

; 1835 : 	case CITY_AI_FOCUS_TYPE_FAITH:
; 1836 : 		eYield = YIELD_FAITH;

	mov	DWORD PTR _eYield$[ebp], 5

; 1837 : 		break;

	jmp	SHORT $LN13@IsBetterTh
$LN4@IsBetterTh:

; 1838 : 	default:
; 1839 : 		eYield = NO_YIELD;

	mov	DWORD PTR _eYield$[ebp], -1
$LN13@IsBetterTh:

; 1840 : 		break;
; 1841 : 	}
; 1842 : 
; 1843 : 	if (eYield == NO_YIELD)

	cmp	DWORD PTR _eYield$[ebp], -1
	jne	SHORT $LN3@IsBetterTh

; 1844 : 		return true;

	mov	al, 1
	jmp	SHORT $LN17@IsBetterTh
$LN3@IsBetterTh:

; 1845 : 
; 1846 : 	int iSpecialistYield = pSpecialistInfo->getYieldChange(eYield);

	mov	edx, DWORD PTR _eYield$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pSpecialistInfo$[ebp]
	call	?getYieldChange@CvSpecialistInfo@@QBEHH@Z ; CvSpecialistInfo::getYieldChange
	mov	DWORD PTR _iSpecialistYield$[ebp], eax

; 1847 : 	int iDefaultSpecialistYield = pDefaultSpecialistInfo->getYieldChange(eYield);

	mov	eax, DWORD PTR _eYield$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDefaultSpecialistInfo$[ebp]
	call	?getYieldChange@CvSpecialistInfo@@QBEHH@Z ; CvSpecialistInfo::getYieldChange
	mov	DWORD PTR _iDefaultSpecialistYield$[ebp], eax

; 1848 : 
; 1849 : 	if (m_pCity->GetPlayer()->isHalfSpecialistUnhappiness() || m_pCity->GetPlayer()->isHalfSpecialistFood())

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetPlayer@CvCity@@QAEPAVCvPlayer@@XZ	; CvCity::GetPlayer
	mov	ecx, eax
	call	?isHalfSpecialistUnhappiness@CvPlayer@@QBE_NXZ ; CvPlayer::isHalfSpecialistUnhappiness
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@IsBetterTh
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetPlayer@CvCity@@QAEPAVCvPlayer@@XZ	; CvCity::GetPlayer
	mov	ecx, eax
	call	?isHalfSpecialistFood@CvPlayer@@QBE_NXZ	; CvPlayer::isHalfSpecialistFood
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@IsBetterTh
$LN1@IsBetterTh:

; 1850 : 	{
; 1851 : 		iSpecialistYield *= 2;

	mov	edx, DWORD PTR _iSpecialistYield$[ebp]
	shl	edx, 1
	mov	DWORD PTR _iSpecialistYield$[ebp], edx
$LN2@IsBetterTh:

; 1852 : 	}
; 1853 : 
; 1854 : 	return (iSpecialistYield >= iDefaultSpecialistYield); // Unless default Specialist has strictly more, this Specialist is better

	mov	eax, DWORD PTR _iSpecialistYield$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR _iDefaultSpecialistYield$[ebp]
	setge	cl
	mov	al, cl
$LN17@IsBetterTh:

; 1855 : }

	mov	esp, ebp
	pop	ebp
	ret	4
$LN21@IsBetterTh:
	DD	$LN12@IsBetterTh
	DD	$LN11@IsBetterTh
	DD	$LN10@IsBetterTh
	DD	$LN9@IsBetterTh
	DD	$LN8@IsBetterTh
	DD	$LN7@IsBetterTh
	DD	$LN6@IsBetterTh
	DD	$LN6@IsBetterTh
	DD	$LN5@IsBetterTh
?IsBetterThanDefaultSpecialist@CvCityCitizens@@QAE_NW4SpecialistTypes@@@Z ENDP ; CvCityCitizens::IsBetterThanDefaultSpecialist
_TEXT	ENDS
PUBLIC	?GetNumUnassignedCitizens@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumUnassignedCitizens
; Function compile flags: /Odtp
;	COMDAT ?GetNumUnassignedCitizens@CvCityCitizens@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumUnassignedCitizens@CvCityCitizens@@QBEHXZ PROC	; CvCityCitizens::GetNumUnassignedCitizens, COMDAT
; _this$ = ecx

; 1860 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1861 : 	return m_iNumUnassignedCitizens;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 1862 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumUnassignedCitizens@CvCityCitizens@@QBEHXZ ENDP	; CvCityCitizens::GetNumUnassignedCitizens
_TEXT	ENDS
PUBLIC	?ChangeNumUnassignedCitizens@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumUnassignedCitizens
; Function compile flags: /Odtp
;	COMDAT ?ChangeNumUnassignedCitizens@CvCityCitizens@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iChange$ = 8						; size = 4
?ChangeNumUnassignedCitizens@CvCityCitizens@@QAEXH@Z PROC ; CvCityCitizens::ChangeNumUnassignedCitizens, COMDAT
; _this$ = ecx

; 1866 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1867 : 	m_iNumUnassignedCitizens += iChange;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, DWORD PTR _iChange$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1868 : 	CvAssert(m_iNumUnassignedCitizens >= 0);
; 1869 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ChangeNumUnassignedCitizens@CvCityCitizens@@QAEXH@Z ENDP ; CvCityCitizens::ChangeNumUnassignedCitizens
_TEXT	ENDS
PUBLIC	?GetNumCitizensWorkingPlots@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumCitizensWorkingPlots
; Function compile flags: /Odtp
;	COMDAT ?GetNumCitizensWorkingPlots@CvCityCitizens@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumCitizensWorkingPlots@CvCityCitizens@@QBEHXZ PROC	; CvCityCitizens::GetNumCitizensWorkingPlots, COMDAT
; _this$ = ecx

; 1873 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1874 : 	return m_iNumCitizensWorkingPlots;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]

; 1875 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumCitizensWorkingPlots@CvCityCitizens@@QBEHXZ ENDP	; CvCityCitizens::GetNumCitizensWorkingPlots
_TEXT	ENDS
PUBLIC	?ChangeNumCitizensWorkingPlots@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumCitizensWorkingPlots
; Function compile flags: /Odtp
;	COMDAT ?ChangeNumCitizensWorkingPlots@CvCityCitizens@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iChange$ = 8						; size = 4
?ChangeNumCitizensWorkingPlots@CvCityCitizens@@QAEXH@Z PROC ; CvCityCitizens::ChangeNumCitizensWorkingPlots, COMDAT
; _this$ = ecx

; 1879 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1880 : 	m_iNumCitizensWorkingPlots += iChange;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, DWORD PTR _iChange$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx

; 1881 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ChangeNumCitizensWorkingPlots@CvCityCitizens@@QAEXH@Z ENDP ; CvCityCitizens::ChangeNumCitizensWorkingPlots
_TEXT	ENDS
PUBLIC	?ChangeNumDefaultSpecialists@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumDefaultSpecialists
PUBLIC	?DoAddSpecialistToBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z ; CvCityCitizens::DoAddSpecialistToBuilding
PUBLIC	?GetBestCityPlotWithValue@CvCityCitizens@@QAEPAVCvPlot@@AAH_N1@Z ; CvCityCitizens::GetBestCityPlotWithValue
PUBLIC	?DoAddBestCitizenFromUnassigned@CvCityCitizens@@QAE_NXZ ; CvCityCitizens::DoAddBestCitizenFromUnassigned
; Function compile flags: /Odtp
;	COMDAT ?DoAddBestCitizenFromUnassigned@CvCityCitizens@@QAE_NXZ
_TEXT	SEGMENT
tv93 = -64						; size = 4
_this$ = -60						; size = 4
$T226000 = -56						; size = 4
$T225999 = -52						; size = 4
$T225995 = -48						; size = 4
_eSpecialist$224823 = -44				; size = 4
_pkBuildingInfo$224821 = -40				; size = 4
_eBestBuilding$224819 = -36				; size = 4
_pOwner$224815 = -32					; size = 4
_eSpecialist$224805 = -28				; size = 4
_pkBuildingInfo$224803 = -24				; size = 4
_eBestSpecialistBuilding$ = -20				; size = 4
_pBestPlot$ = -16					; size = 4
_bBetterThanSlacker$ = -10				; size = 1
_bSpecialistBetterThanPlot$ = -9			; size = 1
_iBestPlotValue$ = -8					; size = 4
_iSpecialistValue$ = -4					; size = 4
?DoAddBestCitizenFromUnassigned@CvCityCitizens@@QAE_NXZ PROC ; CvCityCitizens::DoAddBestCitizenFromUnassigned, COMDAT
; _this$ = ecx

; 1889 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	DWORD PTR _this$[ebp], ecx

; 1890 : 	// We only assign the unassigned here, folks
; 1891 : 	if (GetNumUnassignedCitizens() == 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumUnassignedCitizens@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumUnassignedCitizens
	test	eax, eax
	jne	SHORT $LN15@DoAddBestC

; 1892 : 	{
; 1893 : 		return false;

	xor	al, al
	jmp	$LN16@DoAddBestC
$LN15@DoAddBestC:

; 1894 : 	}
; 1895 : 
; 1896 : 	// First Specialist Pass
; 1897 : 	int iSpecialistValue = 0;

	mov	DWORD PTR _iSpecialistValue$[ebp], 0

; 1898 : 	BuildingTypes eBestSpecialistBuilding = NO_BUILDING;

	mov	DWORD PTR _eBestSpecialistBuilding$[ebp], -1

; 1899 : 	if (!IsNoAutoAssignSpecialists())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsNoAutoAssignSpecialists@CvCityCitizens@@QBE_NXZ ; CvCityCitizens::IsNoAutoAssignSpecialists
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN14@DoAddBestC

; 1900 : 	{
; 1901 : #ifdef AUI_CITIZENS_FIX_REMOVE_WORST_SPECIALIST_ACTUALLY_REMOVES_WORST
; 1902 : 		eBestSpecialistBuilding = GetAIBestSpecialistBuilding(&iSpecialistValue);
; 1903 : #else
; 1904 : 		eBestSpecialistBuilding = GetAIBestSpecialistBuilding(iSpecialistValue);

	lea	ecx, DWORD PTR _iSpecialistValue$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAIBestSpecialistBuilding@CvCityCitizens@@QAE?AW4BuildingTypes@@AAH@Z ; CvCityCitizens::GetAIBestSpecialistBuilding
	mov	DWORD PTR _eBestSpecialistBuilding$[ebp], eax
$LN14@DoAddBestC:

; 1905 : #endif
; 1906 : 	}
; 1907 : 
; 1908 : #if defined(AUI_CITIZENS_IS_PLOT_BETTER_THAN_DEFAULT_SPECIALIST) || defined(AUI_CITIZENS_SELF_CONSISTENCY_CHECK)
; 1909 : 	int iDefaultSpecialistValue = GetSpecialistValue((SpecialistTypes)GC.getDEFAULT_SPECIALIST());
; 1910 : #endif
; 1911 : 
; 1912 : #ifdef AUI_CITIZENS_IS_BETTER_THAN_DEFAULT_SPECIALIST_USE_REGULAR_VALUES
; 1913 : 	bool bBetterThanSlacker = eBestSpecialistBuilding != NO_BUILDING && iSpecialistValue >= iDefaultSpecialistValue;
; 1914 : #else
; 1915 : 	bool bBetterThanSlacker = false;

	mov	BYTE PTR _bBetterThanSlacker$[ebp], 0

; 1916 : 	if (eBestSpecialistBuilding != NO_BUILDING)

	cmp	DWORD PTR _eBestSpecialistBuilding$[ebp], -1
	je	SHORT $LN13@DoAddBestC

; 1917 : 	{
; 1918 : 		CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBestSpecialistBuilding);

	mov	edx, DWORD PTR _eBestSpecialistBuilding$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$224803[ebp], eax

; 1919 : 		if(pkBuildingInfo)

	cmp	DWORD PTR _pkBuildingInfo$224803[ebp], 0
	je	SHORT $LN13@DoAddBestC

; 1920 : 		{
; 1921 : 			SpecialistTypes eSpecialist = (SpecialistTypes) pkBuildingInfo->GetSpecialistType();

	mov	ecx, DWORD PTR _pkBuildingInfo$224803[ebp]
	call	?GetSpecialistType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetSpecialistType
	mov	DWORD PTR _eSpecialist$224805[ebp], eax

; 1922 : 			// Must not be worse than a default Specialist for our focus!
; 1923 : 			if (IsBetterThanDefaultSpecialist(eSpecialist))

	mov	eax, DWORD PTR _eSpecialist$224805[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsBetterThanDefaultSpecialist@CvCityCitizens@@QAE_NW4SpecialistTypes@@@Z ; CvCityCitizens::IsBetterThanDefaultSpecialist
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN13@DoAddBestC

; 1924 : 			{
; 1925 : 				bBetterThanSlacker = true;

	mov	BYTE PTR _bBetterThanSlacker$[ebp], 1
$LN13@DoAddBestC:

; 1926 : 			}
; 1927 : 		}
; 1928 : 	}
; 1929 : #endif
; 1930 : 
; 1931 : 	int iBestPlotValue = 0;

	mov	DWORD PTR _iBestPlotValue$[ebp], 0

; 1932 : 	CvPlot* pBestPlot = GetBestCityPlotWithValue(iBestPlotValue, /*bBest*/ true, /*bWorked*/ false);

	push	0
	push	1
	lea	edx, DWORD PTR _iBestPlotValue$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBestCityPlotWithValue@CvCityCitizens@@QAEPAVCvPlot@@AAH_N1@Z ; CvCityCitizens::GetBestCityPlotWithValue
	mov	DWORD PTR _pBestPlot$[ebp], eax

; 1933 : 
; 1934 : 	bool bSpecialistBetterThanPlot = (eBestSpecialistBuilding != NO_BUILDING && iSpecialistValue >= iBestPlotValue);

	cmp	DWORD PTR _eBestSpecialistBuilding$[ebp], -1
	je	SHORT $LN18@DoAddBestC
	mov	eax, DWORD PTR _iSpecialistValue$[ebp]
	cmp	eax, DWORD PTR _iBestPlotValue$[ebp]
	jl	SHORT $LN18@DoAddBestC
	mov	DWORD PTR tv93[ebp], 1
	jmp	SHORT $LN19@DoAddBestC
$LN18@DoAddBestC:
	mov	DWORD PTR tv93[ebp], 0
$LN19@DoAddBestC:
	mov	cl, BYTE PTR tv93[ebp]
	mov	BYTE PTR _bSpecialistBetterThanPlot$[ebp], cl

; 1935 : 
; 1936 : 	// Is there a Specialist we can assign?
; 1937 : 	if (bSpecialistBetterThanPlot && bBetterThanSlacker)

	movzx	edx, BYTE PTR _bSpecialistBetterThanPlot$[ebp]
	test	edx, edx
	je	SHORT $LN10@DoAddBestC
	movzx	eax, BYTE PTR _bBetterThanSlacker$[ebp]
	test	eax, eax
	je	SHORT $LN10@DoAddBestC

; 1938 : 	{
; 1939 : 		DoAddSpecialistToBuilding(eBestSpecialistBuilding, /*bForced*/ false);

	push	0
	mov	ecx, DWORD PTR _eBestSpecialistBuilding$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoAddSpecialistToBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z ; CvCityCitizens::DoAddSpecialistToBuilding

; 1940 : #ifdef AUI_CITIZENS_SELF_CONSISTENCY_CHECK
; 1941 : 		if (piBestScore)
; 1942 : 			*piBestScore = iSpecialistValue;
; 1943 : #endif
; 1944 : 		return true;

	mov	al, 1
	jmp	$LN16@DoAddBestC
	jmp	$LN9@DoAddBestC
$LN10@DoAddBestC:

; 1945 : 	}
; 1946 : 	// Found a Valid Plot to place a guy?
; 1947 : #ifdef AUI_CITIZENS_IS_PLOT_BETTER_THAN_DEFAULT_SPECIALIST
; 1948 : 	else if (pBestPlot != NULL && iBestPlotValue >= iDefaultSpecialistValue)
; 1949 : #else
; 1950 : 	else if (!bSpecialistBetterThanPlot && pBestPlot != NULL)

	movzx	edx, BYTE PTR _bSpecialistBetterThanPlot$[ebp]
	test	edx, edx
	jne	SHORT $LN8@DoAddBestC
	cmp	DWORD PTR _pBestPlot$[ebp], 0
	je	SHORT $LN8@DoAddBestC

; 1951 : #endif
; 1952 : 	{
; 1953 : 		// Now assign the guy to the best possible Plot
; 1954 : 		SetWorkingPlot(pBestPlot, true);

	push	1
	push	1
	mov	eax, DWORD PTR _pBestPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N1@Z ; CvCityCitizens::SetWorkingPlot

; 1955 : #ifdef AUI_CITIZENS_SELF_CONSISTENCY_CHECK
; 1956 : 		if (piBestScore)
; 1957 : 			*piBestScore = iBestPlotValue;
; 1958 : #endif
; 1959 : 		return true;

	mov	al, 1
	jmp	$LN16@DoAddBestC

; 1960 : 	}
; 1961 : 	// No Valid Plots left - and no good specialists
; 1962 : 	else

	jmp	$LN9@DoAddBestC
$LN8@DoAddBestC:

; 1963 : 	{
; 1964 : #ifdef AUI_CITIZENS_SELF_CONSISTENCY_CHECK
; 1965 : 		if (piBestScore)
; 1966 : 			*piBestScore = iDefaultSpecialistValue;
; 1967 : #else
; 1968 : 		CvPlayer* pOwner = &GET_PLAYER(GetOwner());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetOwner@CvCityCitizens@@QBE?AW4PlayerTypes@@XZ ; CvCityCitizens::GetOwner
	mov	DWORD PTR $T225995[ebp], eax
	mov	ecx, DWORD PTR $T225995[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pOwner$224815[ebp], ecx

; 1969 : 		CvAssertMsg(pOwner, "Could not find owner of city when assigning citizens. Please send Anton your save file and version.");
; 1970 : 
; 1971 : 		// Assign a cool Specialist! Only do this for AI players, or humans who do not have manual specialist control set
; 1972 : 		if (pOwner)

	je	$LN6@DoAddBestC

; 1973 : 		{
; 1974 : 			if (!GET_PLAYER(GetOwner()).isHuman() || !IsNoAutoAssignSpecialists())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetOwner@CvCityCitizens@@QBE?AW4PlayerTypes@@XZ ; CvCityCitizens::GetOwner
	mov	DWORD PTR $T225999[ebp], eax
	mov	edx, DWORD PTR $T225999[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T226000[ebp], edx
	mov	ecx, DWORD PTR $T226000[ebp]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@DoAddBestC
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsNoAutoAssignSpecialists@CvCityCitizens@@QBE_NXZ ; CvCityCitizens::IsNoAutoAssignSpecialists
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN6@DoAddBestC
$LN4@DoAddBestC:

; 1975 : 			{
; 1976 : 				BuildingTypes eBestBuilding = GetAIBestSpecialistBuilding(iSpecialistValue);

	lea	edx, DWORD PTR _iSpecialistValue$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAIBestSpecialistBuilding@CvCityCitizens@@QAE?AW4BuildingTypes@@AAH@Z ; CvCityCitizens::GetAIBestSpecialistBuilding
	mov	DWORD PTR _eBestBuilding$224819[ebp], eax

; 1977 : 				if(eBestBuilding != NO_BUILDING)

	cmp	DWORD PTR _eBestBuilding$224819[ebp], -1
	je	SHORT $LN6@DoAddBestC

; 1978 : 				{
; 1979 : 					CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBestBuilding);

	mov	eax, DWORD PTR _eBestBuilding$224819[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$224821[ebp], eax

; 1980 : 					if(pkBuildingInfo)

	cmp	DWORD PTR _pkBuildingInfo$224821[ebp], 0
	je	SHORT $LN6@DoAddBestC

; 1981 : 					{
; 1982 : 						SpecialistTypes eSpecialist = (SpecialistTypes) pkBuildingInfo->GetSpecialistType();

	mov	ecx, DWORD PTR _pkBuildingInfo$224821[ebp]
	call	?GetSpecialistType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetSpecialistType
	mov	DWORD PTR _eSpecialist$224823[ebp], eax

; 1983 : 						// Must not be worse than a default Specialist for our focus!
; 1984 : 						if (IsBetterThanDefaultSpecialist(eSpecialist))

	mov	ecx, DWORD PTR _eSpecialist$224823[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsBetterThanDefaultSpecialist@CvCityCitizens@@QAE_NW4SpecialistTypes@@@Z ; CvCityCitizens::IsBetterThanDefaultSpecialist
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@DoAddBestC

; 1985 : 						{
; 1986 : 							DoAddSpecialistToBuilding(eBestBuilding, false);

	push	0
	mov	eax, DWORD PTR _eBestBuilding$224819[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoAddSpecialistToBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z ; CvCityCitizens::DoAddSpecialistToBuilding

; 1987 : 							return true;

	mov	al, 1
	jmp	SHORT $LN16@DoAddBestC
$LN6@DoAddBestC:

; 1988 : 						}
; 1989 : 					}
; 1990 : 				}
; 1991 : 			}
; 1992 : 		}
; 1993 : #endif
; 1994 : 
; 1995 : 		// Default Specialist if we can't do anything else
; 1996 : 		ChangeNumDefaultSpecialists(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumDefaultSpecialists@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumDefaultSpecialists
$LN9@DoAddBestC:

; 1997 : 	}
; 1998 : 
; 1999 : 	return false;

	xor	al, al
$LN16@DoAddBestC:

; 2000 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoAddBestCitizenFromUnassigned@CvCityCitizens@@QAE_NXZ ENDP ; CvCityCitizens::DoAddBestCitizenFromUnassigned
_TEXT	ENDS
PUBLIC	?DoRemoveWorstSpecialist@CvCityCitizens@@QAE_NW4SpecialistTypes@@W4BuildingTypes@@@Z ; CvCityCitizens::DoRemoveWorstSpecialist
PUBLIC	?SetForcedWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N@Z ; CvCityCitizens::SetForcedWorkingPlot
PUBLIC	?IsForcedWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsForcedWorkingPlot
PUBLIC	?ChangeNumForcedDefaultSpecialists@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumForcedDefaultSpecialists
PUBLIC	?GetNumForcedDefaultSpecialists@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumForcedDefaultSpecialists
PUBLIC	?DoRemoveWorstCitizen@CvCityCitizens@@QAE_N_NW4SpecialistTypes@@H@Z ; CvCityCitizens::DoRemoveWorstCitizen
; Function compile flags: /Odtp
;	COMDAT ?DoRemoveWorstCitizen@CvCityCitizens@@QAE_N_NW4SpecialistTypes@@H@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
_iWorstPlotValue$ = -8					; size = 4
_pWorstPlot$ = -4					; size = 4
_bRemoveForcedStatus$ = 8				; size = 1
_eDontChangeSpecialist$ = 12				; size = 4
_iCurrentCityPopulation$ = 16				; size = 4
?DoRemoveWorstCitizen@CvCityCitizens@@QAE_N_NW4SpecialistTypes@@H@Z PROC ; CvCityCitizens::DoRemoveWorstCitizen, COMDAT
; _this$ = ecx

; 2004 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 2005 : 	if (iCurrentCityPopulation == -1)

	cmp	DWORD PTR _iCurrentCityPopulation$[ebp], -1
	jne	SHORT $LN10@DoRemoveWo

; 2006 : 	{
; 2007 : 		iCurrentCityPopulation = GetCity()->getPopulation();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	mov	DWORD PTR _iCurrentCityPopulation$[ebp], eax
$LN10@DoRemoveWo:

; 2008 : 	}
; 2009 : 
; 2010 : 	// Are all of our guys already not working Plots?
; 2011 : 	if(GetNumUnassignedCitizens() == GetCity()->getPopulation())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumUnassignedCitizens@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumUnassignedCitizens
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	esi, eax
	jne	SHORT $LN9@DoRemoveWo

; 2012 : 	{
; 2013 : 		return false;

	xor	al, al
	jmp	$LN11@DoRemoveWo
$LN9@DoRemoveWo:

; 2014 : 	}
; 2015 : 
; 2016 : #ifndef AUI_CITIZENS_FIX_REMOVE_WORST_SPECIALIST_ACTUALLY_REMOVES_WORST
; 2017 : 	// Find default Specialist to pull off, if there is one
; 2018 : 	if(GetNumDefaultSpecialists() > 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumDefaultSpecialists@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumDefaultSpecialists
	test	eax, eax
	jle	SHORT $LN8@DoRemoveWo

; 2019 : 	{
; 2020 : 		// Do we either have unforced default specialists we can remove?
; 2021 : 		if(GetNumDefaultSpecialists() > GetNumForcedDefaultSpecialists())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumDefaultSpecialists@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumDefaultSpecialists
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumForcedDefaultSpecialists@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumForcedDefaultSpecialists
	cmp	esi, eax
	jle	SHORT $LN7@DoRemoveWo

; 2022 : 		{
; 2023 : 			ChangeNumDefaultSpecialists(-1);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumDefaultSpecialists@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumDefaultSpecialists

; 2024 : 			return true;

	mov	al, 1
	jmp	$LN11@DoRemoveWo
$LN7@DoRemoveWo:

; 2025 : 		}
; 2026 : 		if(GetNumDefaultSpecialists() > iCurrentCityPopulation)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumDefaultSpecialists@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumDefaultSpecialists
	cmp	eax, DWORD PTR _iCurrentCityPopulation$[ebp]
	jle	SHORT $LN8@DoRemoveWo

; 2027 : 		{
; 2028 : 			ChangeNumForcedDefaultSpecialists(-1);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumForcedDefaultSpecialists@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumForcedDefaultSpecialists

; 2029 : 			ChangeNumDefaultSpecialists(-1);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumDefaultSpecialists@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumDefaultSpecialists

; 2030 : 			return true;

	mov	al, 1
	jmp	SHORT $LN11@DoRemoveWo
$LN8@DoRemoveWo:

; 2031 : 		}
; 2032 : 	}
; 2033 : #endif
; 2034 : 
; 2035 : 	// No Default Specialists, remove a working Pop, if there is one
; 2036 : 	int iWorstPlotValue = 0;

	mov	DWORD PTR _iWorstPlotValue$[ebp], 0

; 2037 : 	CvPlot* pWorstPlot = GetBestCityPlotWithValue(iWorstPlotValue, /*bBest*/ false, /*bWorked*/ true);

	push	1
	push	0
	lea	eax, DWORD PTR _iWorstPlotValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBestCityPlotWithValue@CvCityCitizens@@QAEPAVCvPlot@@AAH_N1@Z ; CvCityCitizens::GetBestCityPlotWithValue
	mov	DWORD PTR _pWorstPlot$[ebp], eax

; 2038 : 
; 2039 : #ifdef AUI_CITIZENS_FIX_REMOVE_WORST_SPECIALIST_ACTUALLY_REMOVES_WORST
; 2040 : 	int iWorstSpecialistValue = 0;
; 2041 : 	BuildingTypes eWorstSpecialistBuilding = NO_BUILDING;
; 2042 : 	if (!IsNoAutoAssignSpecialists())
; 2043 : 	{
; 2044 : 		eWorstSpecialistBuilding = GetAIBestSpecialistBuilding(&iWorstSpecialistValue, true, true, eDontChangeSpecialist);
; 2045 : 	}
; 2046 : 
; 2047 : 	// Find default Specialist to pull off, if there is one
; 2048 : 	if (GetNumDefaultSpecialists() > 0)
; 2049 : 	{
; 2050 : 		int iDefaultSpecialistScore = GetSpecialistValue((SpecialistTypes)GC.getDEFAULT_SPECIALIST());
; 2051 : 		// Do we either have unforced default specialists we can remove?
; 2052 : 		if (GetNumDefaultSpecialists() > GetNumForcedDefaultSpecialists() && (eWorstSpecialistBuilding == NO_BUILDING || iDefaultSpecialistScore <= iWorstSpecialistValue) 
; 2053 : 			&& (pWorstPlot == NULL || iDefaultSpecialistScore <= iWorstPlotValue))
; 2054 : 		{
; 2055 : 			ChangeNumDefaultSpecialists(-1);
; 2056 : 			return true;
; 2057 : 		}
; 2058 : 		if (GetNumDefaultSpecialists() > iCurrentCityPopulation && (eWorstSpecialistBuilding == NO_BUILDING || iDefaultSpecialistScore <= iWorstSpecialistValue)
; 2059 : 			&& (pWorstPlot == NULL || iDefaultSpecialistScore <= iWorstPlotValue))
; 2060 : 		{
; 2061 : 			ChangeNumForcedDefaultSpecialists(-1);
; 2062 : 			ChangeNumDefaultSpecialists(-1);
; 2063 : 			return true;
; 2064 : 		}
; 2065 : 	}
; 2066 : 
; 2067 : 	if (pWorstPlot != NULL && (eWorstSpecialistBuilding == NO_BUILDING || iWorstPlotValue < iWorstSpecialistValue))
; 2068 : #else
; 2069 : 	if(pWorstPlot != NULL)

	cmp	DWORD PTR _pWorstPlot$[ebp], 0
	je	SHORT $LN5@DoRemoveWo

; 2070 : #endif
; 2071 : 	{
; 2072 : 		SetWorkingPlot(pWorstPlot, false);

	push	1
	push	0
	mov	ecx, DWORD PTR _pWorstPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N1@Z ; CvCityCitizens::SetWorkingPlot

; 2073 : 
; 2074 : 		// If we were force-working this Plot, turn it off
; 2075 : 		if(bRemoveForcedStatus)

	movzx	edx, BYTE PTR _bRemoveForcedStatus$[ebp]
	test	edx, edx
	je	SHORT $LN4@DoRemoveWo

; 2076 : 		{
; 2077 : 			if(IsForcedWorkingPlot(pWorstPlot))

	mov	eax, DWORD PTR _pWorstPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsForcedWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsForcedWorkingPlot
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@DoRemoveWo

; 2078 : 			{
; 2079 : 				SetForcedWorkingPlot(pWorstPlot, false);

	push	0
	mov	edx, DWORD PTR _pWorstPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetForcedWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N@Z ; CvCityCitizens::SetForcedWorkingPlot
$LN4@DoRemoveWo:

; 2080 : 			}
; 2081 : 		}
; 2082 : 
; 2083 : 		return true;

	mov	al, 1
	jmp	SHORT $LN11@DoRemoveWo

; 2084 : 	}
; 2085 : 	// Have to resort to pulling away a good Specialist
; 2086 : #ifdef AUI_CITIZENS_FIX_REMOVE_WORST_SPECIALIST_ACTUALLY_REMOVES_WORST
; 2087 : 	else if (eWorstSpecialistBuilding != NO_BUILDING)
; 2088 : 	{
; 2089 : 		DoRemoveSpecialistFromBuilding(eWorstSpecialistBuilding, false);
; 2090 : 		return true;
; 2091 : 	}
; 2092 : #else
; 2093 : 	else

	jmp	SHORT $LN2@DoRemoveWo
$LN5@DoRemoveWo:

; 2094 : 	{
; 2095 : 		if(DoRemoveWorstSpecialist(eDontChangeSpecialist))

	push	-1
	mov	eax, DWORD PTR _eDontChangeSpecialist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoRemoveWorstSpecialist@CvCityCitizens@@QAE_NW4SpecialistTypes@@W4BuildingTypes@@@Z ; CvCityCitizens::DoRemoveWorstSpecialist
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@DoRemoveWo

; 2096 : 		{
; 2097 : 			return true;

	mov	al, 1
	jmp	SHORT $LN11@DoRemoveWo
$LN2@DoRemoveWo:

; 2098 : 		}
; 2099 : 	}
; 2100 : #endif
; 2101 : 
; 2102 : 	return false;

	xor	al, al
$LN11@DoRemoveWo:

; 2103 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?DoRemoveWorstCitizen@CvCityCitizens@@QAE_N_NW4SpecialistTypes@@H@Z ENDP ; CvCityCitizens::DoRemoveWorstCitizen
_TEXT	ENDS
PUBLIC	?IsWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsWorkingPlot
EXTRN	?getWorkingCity@CvPlot@@QBEPAVCvCity@@XZ:PROC	; CvPlot::getWorkingCity
; Function compile flags: /Odtp
;	COMDAT ?GetBestCityPlotWithValue@CvCityCitizens@@QAEPAVCvPlot@@AAH_N1@Z
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T226024 = -36						; size = 4
$T226023 = -32						; size = 4
$T226014 = -28						; size = 4
$T226013 = -24						; size = 4
_iPlotLoop$224854 = -20					; size = 4
_iBestPlotID$ = -16					; size = 4
_bPlotForceWorked$ = -9					; size = 1
_iBestPlotValue$ = -8					; size = 4
_pLoopPlot$ = -4					; size = 4
_iValue$ = 8						; size = 4
_bWantBest$ = 12					; size = 1
_bWantWorked$ = 16					; size = 1
?GetBestCityPlotWithValue@CvCityCitizens@@QAEPAVCvPlot@@AAH_N1@Z PROC ; CvCityCitizens::GetBestCityPlotWithValue, COMDAT
; _this$ = ecx

; 2107 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 2108 : 	bool bPlotForceWorked;
; 2109 : 
; 2110 : 	int iBestPlotValue = -1;

	mov	DWORD PTR _iBestPlotValue$[ebp], -1

; 2111 : 	int iBestPlotID = -1;

	mov	DWORD PTR _iBestPlotID$[ebp], -1

; 2112 : 
; 2113 : 	CvPlot* pLoopPlot;
; 2114 : 
; 2115 : 	// Look at all workable Plots
; 2116 : 	for(int iPlotLoop = 0; iPlotLoop < NUM_CITY_PLOTS; iPlotLoop++)

	mov	DWORD PTR _iPlotLoop$224854[ebp], 0
	jmp	SHORT $LN18@GetBestCit
$LN17@GetBestCit:
	mov	eax, DWORD PTR _iPlotLoop$224854[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlotLoop$224854[ebp], eax
$LN18@GetBestCit:
	cmp	DWORD PTR _iPlotLoop$224854[ebp], 37	; 00000025H
	jge	$LN16@GetBestCit

; 2117 : 	{
; 2118 : 		if(iPlotLoop != CITY_HOME_PLOT)

	cmp	DWORD PTR _iPlotLoop$224854[ebp], 0
	je	$LN15@GetBestCit

; 2119 : 		{
; 2120 : 			pLoopPlot = GetCityPlotFromIndex(iPlotLoop);

	mov	ecx, DWORD PTR _iPlotLoop$224854[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z ; CvCityCitizens::GetCityPlotFromIndex
	mov	DWORD PTR _pLoopPlot$[ebp], eax

; 2121 : 
; 2122 : 			if(pLoopPlot != NULL)

	cmp	DWORD PTR _pLoopPlot$[ebp], 0
	je	$LN15@GetBestCit

; 2123 : 			{
; 2124 : 				// Is this a Plot this City controls?
; 2125 : 				if(pLoopPlot->getWorkingCity() != NULL && pLoopPlot->getWorkingCity()->GetID() == GetCity()->GetID())

	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	call	?getWorkingCity@CvPlot@@QBEPAVCvCity@@XZ ; CvPlot::getWorkingCity
	test	eax, eax
	je	$LN15@GetBestCit
	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	call	?getWorkingCity@CvPlot@@QBEPAVCvCity@@XZ ; CvPlot::getWorkingCity
	mov	DWORD PTR $T226013[ebp], eax
	mov	edx, DWORD PTR $T226013[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	DWORD PTR $T226014[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	DWORD PTR $T226023[ebp], eax
	mov	ecx, DWORD PTR $T226023[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR $T226024[ebp], edx
	mov	eax, DWORD PTR $T226014[ebp]
	cmp	eax, DWORD PTR $T226024[ebp]
	jne	$LN15@GetBestCit

; 2126 : 				{
; 2127 : 					// Working the Plot and wanting to work it, or Not working it and wanting to find one to work?
; 2128 : 					if((IsWorkingPlot(pLoopPlot) && bWantWorked) ||
; 2129 : 					        (!IsWorkingPlot(pLoopPlot) && !bWantWorked))

	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsWorkingPlot
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN10@GetBestCit
	movzx	eax, BYTE PTR _bWantWorked$[ebp]
	test	eax, eax
	jne	SHORT $LN11@GetBestCit
$LN10@GetBestCit:
	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsWorkingPlot
	movzx	edx, al
	test	edx, edx
	jne	$LN15@GetBestCit
	movzx	eax, BYTE PTR _bWantWorked$[ebp]
	test	eax, eax
	jne	$LN15@GetBestCit
$LN11@GetBestCit:

; 2130 : 					{
; 2131 : 						// Working the Plot or CAN work the Plot?
; 2132 : 						if(bWantWorked || IsCanWork(pLoopPlot))

	movzx	ecx, BYTE PTR _bWantWorked$[ebp]
	test	ecx, ecx
	jne	SHORT $LN8@GetBestCit
	mov	edx, DWORD PTR _pLoopPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCanWork@CvCityCitizens@@QBE_NPAVCvPlot@@@Z ; CvCityCitizens::IsCanWork
	movzx	eax, al
	test	eax, eax
	je	$LN15@GetBestCit
$LN8@GetBestCit:

; 2133 : 						{
; 2134 : #ifdef AUI_CITIZENS_REALLOCATE_CITIZENS_USES_SELF_CONSISTENCY
; 2135 : 							iValue = GetPlotValue(pLoopPlot, true);
; 2136 : #else
; 2137 : 							iValue = GetPlotValue(pLoopPlot, bWantBest);

	movzx	ecx, BYTE PTR _bWantBest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pLoopPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlotValue@CvCityCitizens@@QAEHPAVCvPlot@@_N@Z ; CvCityCitizens::GetPlotValue
	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR [ecx], eax

; 2138 : #endif
; 2139 : 
; 2140 : 							bPlotForceWorked = IsForcedWorkingPlot(pLoopPlot);

	mov	edx, DWORD PTR _pLoopPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsForcedWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsForcedWorkingPlot
	mov	BYTE PTR _bPlotForceWorked$[ebp], al

; 2141 : 
; 2142 : 							if(bPlotForceWorked)

	movzx	eax, BYTE PTR _bPlotForceWorked$[ebp]
	test	eax, eax
	je	SHORT $LN7@GetBestCit

; 2143 : 							{
; 2144 : 								// Looking for best, unworked Plot: Forced plots are FIRST to be picked
; 2145 : 								if(bWantBest && !bWantWorked)

	movzx	ecx, BYTE PTR _bWantBest$[ebp]
	test	ecx, ecx
	je	SHORT $LN6@GetBestCit
	movzx	edx, BYTE PTR _bWantWorked$[ebp]
	test	edx, edx
	jne	SHORT $LN6@GetBestCit

; 2146 : 								{
; 2147 : 									iValue += 10000;

	mov	eax, DWORD PTR _iValue$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 10000				; 00002710H
	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR [edx], ecx
$LN6@GetBestCit:

; 2148 : 								}
; 2149 : 								// Looking for worst, worked Plot: Forced plots are LAST to be picked, so make it's value incredibly high
; 2150 : 								if(!bWantBest && bWantWorked)

	movzx	eax, BYTE PTR _bWantBest$[ebp]
	test	eax, eax
	jne	SHORT $LN7@GetBestCit
	movzx	ecx, BYTE PTR _bWantWorked$[ebp]
	test	ecx, ecx
	je	SHORT $LN7@GetBestCit

; 2151 : 								{
; 2152 : 									iValue += 10000;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 10000				; 00002710H
	mov	ecx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR [ecx], eax
$LN7@GetBestCit:

; 2153 : 								}
; 2154 : 							}
; 2155 : 
; 2156 : 							if(iBestPlotValue == -1 ||							// First Plot?
; 2157 : 							        (bWantBest && iValue > iBestPlotValue) ||		// Best Plot so far?
; 2158 : 							        (!bWantBest && iValue < iBestPlotValue))			// Worst Plot so far?

	cmp	DWORD PTR _iBestPlotValue$[ebp], -1
	je	SHORT $LN3@GetBestCit
	movzx	edx, BYTE PTR _bWantBest$[ebp]
	test	edx, edx
	je	SHORT $LN2@GetBestCit
	mov	eax, DWORD PTR _iValue$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _iBestPlotValue$[ebp]
	jg	SHORT $LN3@GetBestCit
$LN2@GetBestCit:
	movzx	edx, BYTE PTR _bWantBest$[ebp]
	test	edx, edx
	jne	SHORT $LN15@GetBestCit
	mov	eax, DWORD PTR _iValue$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _iBestPlotValue$[ebp]
	jge	SHORT $LN15@GetBestCit
$LN3@GetBestCit:

; 2159 : 							{
; 2160 : 								iBestPlotValue = iValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _iBestPlotValue$[ebp], eax

; 2161 : 								iBestPlotID = iPlotLoop;

	mov	ecx, DWORD PTR _iPlotLoop$224854[ebp]
	mov	DWORD PTR _iBestPlotID$[ebp], ecx
$LN15@GetBestCit:

; 2162 : 							}
; 2163 : 						}
; 2164 : 					}
; 2165 : 				}
; 2166 : 			}
; 2167 : 		}
; 2168 : 	}

	jmp	$LN17@GetBestCit
$LN16@GetBestCit:

; 2169 : 
; 2170 : 	// Passed in by reference
; 2171 : 	iValue = iBestPlotValue;

	mov	edx, DWORD PTR _iValue$[ebp]
	mov	eax, DWORD PTR _iBestPlotValue$[ebp]
	mov	DWORD PTR [edx], eax

; 2172 : 
; 2173 : 	if(iBestPlotID == -1)

	cmp	DWORD PTR _iBestPlotID$[ebp], -1
	jne	SHORT $LN1@GetBestCit

; 2174 : 	{
; 2175 : 		return NULL;

	xor	eax, eax
	jmp	SHORT $LN19@GetBestCit
$LN1@GetBestCit:

; 2176 : 	}
; 2177 : 
; 2178 : 	return GetCityPlotFromIndex(iBestPlotID);

	mov	ecx, DWORD PTR _iBestPlotID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z ; CvCityCitizens::GetCityPlotFromIndex
$LN19@GetBestCit:

; 2179 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetBestCityPlotWithValue@CvCityCitizens@@QAEPAVCvPlot@@AAH_N1@Z ENDP ; CvCityCitizens::GetBestCityPlotWithValue
_TEXT	ENDS
PUBLIC	?DoRemoveSpecialistFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N1@Z ; CvCityCitizens::DoRemoveSpecialistFromBuilding
PUBLIC	?GetNumForcedSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z ; CvCityCitizens::GetNumForcedSpecialistsInBuilding
PUBLIC	?GetNumSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z ; CvCityCitizens::GetNumSpecialistsInBuilding
PUBLIC	?DoValidateForcedWorkingPlots@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoValidateForcedWorkingPlots
; Function compile flags: /Odtp
;	COMDAT ?DoReallocateCitizens@CvCityCitizens@@QAEXXZ
_TEXT	SEGMENT
_this$ = -40						; size = 4
_iUnallocatedLoop$224898 = -36				; size = 4
_iBuildingLoop$224884 = -32				; size = 4
_iWorkerLoop$224877 = -28				; size = 4
_iNumCitizensToRemove$ = -24				; size = 4
_eBuilding$ = -20					; size = 4
_iNumSpecialistsToRemove$ = -16				; size = 4
_iSpecialistLoop$ = -12					; size = 4
_iNumDefaultsToRemove$ = -8				; size = 4
_iNumToAllocate$ = -4					; size = 4
?DoReallocateCitizens@CvCityCitizens@@QAEXXZ PROC	; CvCityCitizens::DoReallocateCitizens, COMDAT
; _this$ = ecx

; 2183 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 2184 : 	// Make sure we don't have more forced working plots than we have citizens working.  If so, clean it up before reallocating
; 2185 : 	DoValidateForcedWorkingPlots();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoValidateForcedWorkingPlots@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoValidateForcedWorkingPlots

; 2186 : 
; 2187 : 	// Remove all of the allocated guys
; 2188 : #ifdef AUI_CITIZENS_FIX_DO_REALLOCATE_CITIZENS_NO_COSTLY_PLOT_REMOVAL
; 2189 : 	CvPlot* pLoopPlot;
; 2190 : 	for (int iPlotLoop = 0; iPlotLoop < NUM_CITY_PLOTS; iPlotLoop++)
; 2191 : 	{
; 2192 : 		if (iPlotLoop != CITY_HOME_PLOT)
; 2193 : 		{
; 2194 : 			pLoopPlot = GetCityPlotFromIndex(iPlotLoop);
; 2195 : 
; 2196 : 			if (pLoopPlot != NULL)
; 2197 : 			{
; 2198 : 				if (pLoopPlot->getWorkingCity() != NULL && pLoopPlot->getWorkingCity()->GetID() == GetCity()->GetID())
; 2199 : 				{
; 2200 : 					SetWorkingPlot(pLoopPlot, false, true);
; 2201 : 				}
; 2202 : 			}
; 2203 : 		}
; 2204 : 	}
; 2205 : #else
; 2206 : 	int iNumCitizensToRemove = GetNumCitizensWorkingPlots();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumCitizensWorkingPlots@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumCitizensWorkingPlots
	mov	DWORD PTR _iNumCitizensToRemove$[ebp], eax

; 2207 : 	for(int iWorkerLoop = 0; iWorkerLoop < iNumCitizensToRemove; iWorkerLoop++)

	mov	DWORD PTR _iWorkerLoop$224877[ebp], 0
	jmp	SHORT $LN16@DoRealloca
$LN15@DoRealloca:
	mov	eax, DWORD PTR _iWorkerLoop$224877[ebp]
	add	eax, 1
	mov	DWORD PTR _iWorkerLoop$224877[ebp], eax
$LN16@DoRealloca:
	mov	ecx, DWORD PTR _iWorkerLoop$224877[ebp]
	cmp	ecx, DWORD PTR _iNumCitizensToRemove$[ebp]
	jge	SHORT $LN14@DoRealloca

; 2208 : 	{
; 2209 : 		DoRemoveWorstCitizen();

	push	-1
	push	-1
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoRemoveWorstCitizen@CvCityCitizens@@QAE_N_NW4SpecialistTypes@@H@Z ; CvCityCitizens::DoRemoveWorstCitizen

; 2210 : 	}

	jmp	SHORT $LN15@DoRealloca
$LN14@DoRealloca:

; 2211 : #endif
; 2212 : 
; 2213 : 	int iSpecialistLoop;
; 2214 : 
; 2215 : #ifdef AUI_CITIZENS_FIX_DO_REALLOCATE_CITIZENS_OBEY_MANUAL_SPECIALIST_CONTROL
; 2216 : 	if (!IsNoAutoAssignSpecialists())
; 2217 : 	{
; 2218 : #endif
; 2219 : 	// Remove Non-Forced Specialists in Buildings
; 2220 : 	int iNumSpecialistsToRemove;
; 2221 : 	BuildingTypes eBuilding;
; 2222 : #ifdef AUI_WARNING_FIXES
; 2223 : 	for (uint iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)
; 2224 : #else
; 2225 : 	for(int iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)

	mov	DWORD PTR _iBuildingLoop$224884[ebp], 0
	jmp	SHORT $LN13@DoRealloca
$LN12@DoRealloca:
	mov	edx, DWORD PTR _iBuildingLoop$224884[ebp]
	add	edx, 1
	mov	DWORD PTR _iBuildingLoop$224884[ebp], edx
$LN13@DoRealloca:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iBuildingLoop$224884[ebp], eax
	jge	SHORT $LN11@DoRealloca

; 2226 : #endif
; 2227 : 	{
; 2228 : 		eBuilding = (BuildingTypes) iBuildingLoop;

	mov	eax, DWORD PTR _iBuildingLoop$224884[ebp]
	mov	DWORD PTR _eBuilding$[ebp], eax

; 2229 : 
; 2230 : 		// Have this Building in the City?
; 2231 : 		if(GetCity()->GetCityBuildings()->GetNumBuilding(eBuilding) > 0)

	mov	ecx, DWORD PTR _eBuilding$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN10@DoRealloca

; 2232 : 		{
; 2233 : 			iNumSpecialistsToRemove = GetNumSpecialistsInBuilding(eBuilding) - GetNumForcedSpecialistsInBuilding(eBuilding);	// Don't include Forced guys

	mov	edx, DWORD PTR _eBuilding$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z ; CvCityCitizens::GetNumSpecialistsInBuilding
	mov	esi, eax
	mov	eax, DWORD PTR _eBuilding$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumForcedSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z ; CvCityCitizens::GetNumForcedSpecialistsInBuilding
	sub	esi, eax
	mov	DWORD PTR _iNumSpecialistsToRemove$[ebp], esi

; 2234 : 
; 2235 : 			// Loop through guys to remove (if there are any)
; 2236 : 			for(iSpecialistLoop = 0; iSpecialistLoop < iNumSpecialistsToRemove; iSpecialistLoop++)

	mov	DWORD PTR _iSpecialistLoop$[ebp], 0
	jmp	SHORT $LN9@DoRealloca
$LN8@DoRealloca:
	mov	ecx, DWORD PTR _iSpecialistLoop$[ebp]
	add	ecx, 1
	mov	DWORD PTR _iSpecialistLoop$[ebp], ecx
$LN9@DoRealloca:
	mov	edx, DWORD PTR _iSpecialistLoop$[ebp]
	cmp	edx, DWORD PTR _iNumSpecialistsToRemove$[ebp]
	jge	SHORT $LN10@DoRealloca

; 2237 : 			{
; 2238 : 				DoRemoveSpecialistFromBuilding(eBuilding, /*bForced*/ false);

	push	0
	push	0
	mov	eax, DWORD PTR _eBuilding$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoRemoveSpecialistFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N1@Z ; CvCityCitizens::DoRemoveSpecialistFromBuilding

; 2239 : 			}

	jmp	SHORT $LN8@DoRealloca
$LN10@DoRealloca:

; 2240 : 		}
; 2241 : 	}

	jmp	$LN12@DoRealloca
$LN11@DoRealloca:

; 2242 : #ifdef AUI_CITIZENS_FIX_DO_REALLOCATE_CITIZENS_OBEY_MANUAL_SPECIALIST_CONTROL
; 2243 : 	}
; 2244 : #endif
; 2245 : 
; 2246 : 	// Remove Default Specialists
; 2247 : 	int iNumDefaultsToRemove = GetNumDefaultSpecialists() - GetNumForcedDefaultSpecialists();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumDefaultSpecialists@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumDefaultSpecialists
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumForcedDefaultSpecialists@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumForcedDefaultSpecialists
	sub	esi, eax
	mov	DWORD PTR _iNumDefaultsToRemove$[ebp], esi

; 2248 : 	for(iSpecialistLoop = 0; iSpecialistLoop < iNumDefaultsToRemove; iSpecialistLoop++)

	mov	DWORD PTR _iSpecialistLoop$[ebp], 0
	jmp	SHORT $LN6@DoRealloca
$LN5@DoRealloca:
	mov	ecx, DWORD PTR _iSpecialistLoop$[ebp]
	add	ecx, 1
	mov	DWORD PTR _iSpecialistLoop$[ebp], ecx
$LN6@DoRealloca:
	mov	edx, DWORD PTR _iSpecialistLoop$[ebp]
	cmp	edx, DWORD PTR _iNumDefaultsToRemove$[ebp]
	jge	SHORT $LN4@DoRealloca

; 2249 : 	{
; 2250 : 		ChangeNumDefaultSpecialists(-1);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumDefaultSpecialists@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumDefaultSpecialists

; 2251 : 	}

	jmp	SHORT $LN5@DoRealloca
$LN4@DoRealloca:

; 2252 : 
; 2253 : 	// Now put all of the unallocated guys back
; 2254 : 	int iNumToAllocate = GetNumUnassignedCitizens();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumUnassignedCitizens@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumUnassignedCitizens
	mov	DWORD PTR _iNumToAllocate$[ebp], eax

; 2255 : 	for(int iUnallocatedLoop = 0; iUnallocatedLoop < iNumToAllocate; iUnallocatedLoop++)

	mov	DWORD PTR _iUnallocatedLoop$224898[ebp], 0
	jmp	SHORT $LN3@DoRealloca
$LN2@DoRealloca:
	mov	eax, DWORD PTR _iUnallocatedLoop$224898[ebp]
	add	eax, 1
	mov	DWORD PTR _iUnallocatedLoop$224898[ebp], eax
$LN3@DoRealloca:
	mov	ecx, DWORD PTR _iUnallocatedLoop$224898[ebp]
	cmp	ecx, DWORD PTR _iNumToAllocate$[ebp]
	jge	SHORT $LN17@DoRealloca

; 2256 : 	{
; 2257 : 		DoAddBestCitizenFromUnassigned();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoAddBestCitizenFromUnassigned@CvCityCitizens@@QAE_NXZ ; CvCityCitizens::DoAddBestCitizenFromUnassigned
	jmp	SHORT $LN2@DoRealloca
$LN17@DoRealloca:

; 2258 : 	}
; 2259 : 
; 2260 : #ifdef AUI_CITIZENS_REALLOCATE_CITIZENS_USES_SELF_CONSISTENCY
; 2261 : 	DoSelfConsistencyCheck();
; 2262 : #elif defined(AUI_CITIZENS_FIX_DO_REALLOCATE_CITIZENS_NO_COSTLY_PLOT_REMOVAL)
; 2263 : 	ICvUserInterface2* pkIFace = GC.GetEngineUserInterface();
; 2264 : 	pkIFace->setDirty(GameData_DIRTY_BIT, true);
; 2265 : 	pkIFace->setDirty(CityInfo_DIRTY_BIT, true);
; 2266 : 	//pkIFace->setDirty(InfoPane_DIRTY_BIT, true );
; 2267 : 	pkIFace->setDirty(CityScreen_DIRTY_BIT, true);
; 2268 : 	pkIFace->setDirty(ColoredPlots_DIRTY_BIT, true);
; 2269 : #endif
; 2270 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?DoReallocateCitizens@CvCityCitizens@@QAEXXZ ENDP	; CvCityCitizens::DoReallocateCitizens
_TEXT	ENDS
PUBLIC	?GetCityIndexFromPlot@CvCityCitizens@@QBEHPBVCvPlot@@@Z ; CvCityCitizens::GetCityIndexFromPlot
; Function compile flags: /Odtp
;	COMDAT ?IsWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iIndex$ = -4						; size = 4
_pPlot$ = 8						; size = 4
?IsWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z PROC	; CvCityCitizens::IsWorkingPlot, COMDAT
; _this$ = ecx

; 2319 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2320 : 	int iIndex;
; 2321 : 
; 2322 : 	iIndex = GetCityIndexFromPlot(pPlot);

	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCityIndexFromPlot@CvCityCitizens@@QBEHPBVCvPlot@@@Z ; CvCityCitizens::GetCityIndexFromPlot
	mov	DWORD PTR _iIndex$[ebp], eax

; 2323 : 
; 2324 : 	if(iIndex != -1)

	cmp	DWORD PTR _iIndex$[ebp], -1
	je	SHORT $LN1@IsWorkingP

; 2325 : 	{
; 2326 : 		return m_pabWorkingPlot[iIndex];

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _iIndex$[ebp]
	mov	al, BYTE PTR [ecx+25]
	jmp	SHORT $LN2@IsWorkingP
$LN1@IsWorkingP:

; 2327 : 	}
; 2328 : 
; 2329 : 	return false;

	xor	al, al
$LN2@IsWorkingP:

; 2330 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ENDP	; CvCityCitizens::IsWorkingPlot
_TEXT	ENDS
EXTRN	?isCitySelected@CvCity@@QAE_NXZ:PROC		; CvCity::isCitySelected
EXTRN	?ChangeBaseYieldRateFromTerrain@CvCity@@QAEXW4YieldTypes@@H@Z:PROC ; CvCity::ChangeBaseYieldRateFromTerrain
; Function compile flags: /Odtp
;	COMDAT ?SetWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N1@Z
_TEXT	SEGMENT
tv200 = -44						; size = 4
tv188 = -40						; size = 4
tv176 = -36						; size = 4
tv164 = -32						; size = 4
_this$ = -28						; size = 4
$T226046 = -24						; size = 4
$T226042 = -20						; size = 4
$T226038 = -16						; size = 4
$T226034 = -12						; size = 4
_iIndex$ = -8						; size = 4
_iI$ = -4						; size = 4
_pPlot$ = 8						; size = 4
_bNewValue$ = 12					; size = 1
_bUseUnassignedPool$ = 16				; size = 1
?SetWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N1@Z PROC ; CvCityCitizens::SetWorkingPlot, COMDAT
; _this$ = ecx

; 2334 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 2335 : 	int iI;
; 2336 : 
; 2337 : 	int iIndex = GetCityIndexFromPlot(pPlot);

	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCityIndexFromPlot@CvCityCitizens@@QBEHPBVCvPlot@@@Z ; CvCityCitizens::GetCityIndexFromPlot
	mov	DWORD PTR _iIndex$[ebp], eax

; 2338 : 
; 2339 : 	CvAssertMsg(iIndex >= 0, "iIndex expected to be >= 0");
; 2340 : 	CvAssertMsg(iIndex < NUM_CITY_PLOTS, "iIndex expected to be < NUM_CITY_PLOTS");
; 2341 : 
; 2342 : 	if(IsWorkingPlot(pPlot) != bNewValue && iIndex >= 0 && iIndex < NUM_CITY_PLOTS)

	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsWorkingPlot
	movzx	edx, al
	movzx	eax, BYTE PTR _bNewValue$[ebp]
	cmp	edx, eax
	je	$LN17@SetWorking
	cmp	DWORD PTR _iIndex$[ebp], 0
	jl	$LN17@SetWorking
	cmp	DWORD PTR _iIndex$[ebp], 37		; 00000025H
	jge	$LN17@SetWorking

; 2343 : 	{
; 2344 : 		m_pabWorkingPlot[iIndex] = bNewValue;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _iIndex$[ebp]
	mov	dl, BYTE PTR _bNewValue$[ebp]
	mov	BYTE PTR [ecx+25], dl

; 2345 : 
; 2346 : 		// Don't look at the center Plot of a City, because we always work it for free
; 2347 : 		if(iIndex != CITY_HOME_PLOT)

	cmp	DWORD PTR _iIndex$[ebp], 0
	je	SHORT $LN15@SetWorking

; 2348 : 		{
; 2349 : 			// Alter the count of Plots being worked by Citizens
; 2350 : 			if(bNewValue)

	movzx	eax, BYTE PTR _bNewValue$[ebp]
	test	eax, eax
	je	SHORT $LN14@SetWorking

; 2351 : 			{
; 2352 : 				ChangeNumCitizensWorkingPlots(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumCitizensWorkingPlots@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumCitizensWorkingPlots

; 2353 : 
; 2354 : 				if(bUseUnassignedPool)

	movzx	ecx, BYTE PTR _bUseUnassignedPool$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@SetWorking

; 2355 : 				{
; 2356 : 					ChangeNumUnassignedCitizens(-1);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumUnassignedCitizens@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumUnassignedCitizens
$LN13@SetWorking:

; 2357 : 				}
; 2358 : 			}
; 2359 : 			else

	jmp	SHORT $LN15@SetWorking
$LN14@SetWorking:

; 2360 : 			{
; 2361 : 				ChangeNumCitizensWorkingPlots(-1);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumCitizensWorkingPlots@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumCitizensWorkingPlots

; 2362 : 
; 2363 : 				if(bUseUnassignedPool)

	movzx	edx, BYTE PTR _bUseUnassignedPool$[ebp]
	test	edx, edx
	je	SHORT $LN15@SetWorking

; 2364 : 				{
; 2365 : 					ChangeNumUnassignedCitizens(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumUnassignedCitizens@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumUnassignedCitizens
$LN15@SetWorking:

; 2366 : 				}
; 2367 : 			}
; 2368 : 		}
; 2369 : 
; 2370 : 		if(pPlot != NULL)

	cmp	DWORD PTR _pPlot$[ebp], 0
	je	$LN10@SetWorking

; 2371 : 		{
; 2372 : 			// investigate later
; 2373 : 			//CvAssertMsg(pPlot->getWorkingCity() == GetCity(), "WorkingCity is expected to be this");
; 2374 : 
; 2375 : 			// Now working pPlot
; 2376 : 			if(IsWorkingPlot(pPlot))

	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsWorkingPlot
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@SetWorking

; 2377 : 			{
; 2378 : 				//if (iIndex != CITY_HOME_PLOT)
; 2379 : 				//{
; 2380 : 				//	GetCity()->changeWorkingPopulation(1);
; 2381 : 				//}
; 2382 : 
; 2383 : 				for(iI = 0; iI < NUM_YIELD_TYPES; iI++)

	mov	DWORD PTR _iI$[ebp], 0
	jmp	SHORT $LN8@SetWorking
$LN7@SetWorking:
	mov	edx, DWORD PTR _iI$[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$[ebp], edx
$LN8@SetWorking:
	cmp	DWORD PTR _iI$[ebp], 6
	jge	SHORT $LN6@SetWorking

; 2384 : 				{
; 2385 : 					GetCity()->ChangeBaseYieldRateFromTerrain(((YieldTypes)iI), pPlot->getYield((YieldTypes)iI));

	mov	eax, DWORD PTR _iI$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?getYield@CvPlot@@QBEHW4YieldTypes@@@Z	; CvPlot::getYield
	push	eax
	mov	ecx, DWORD PTR _iI$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?ChangeBaseYieldRateFromTerrain@CvCity@@QAEXW4YieldTypes@@H@Z ; CvCity::ChangeBaseYieldRateFromTerrain

; 2386 : 				}

	jmp	SHORT $LN7@SetWorking
$LN6@SetWorking:

; 2387 : 			}
; 2388 : 			// No longer working pPlot
; 2389 : 			else

	jmp	SHORT $LN10@SetWorking
$LN9@SetWorking:

; 2390 : 			{
; 2391 : 				//if (iIndex != CITY_HOME_PLOT)
; 2392 : 				//{
; 2393 : 				//	GetCity()->changeWorkingPopulation(-1);
; 2394 : 				//}
; 2395 : 
; 2396 : 				for(iI = 0; iI < NUM_YIELD_TYPES; iI++)

	mov	DWORD PTR _iI$[ebp], 0
	jmp	SHORT $LN4@SetWorking
$LN3@SetWorking:
	mov	edx, DWORD PTR _iI$[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$[ebp], edx
$LN4@SetWorking:
	cmp	DWORD PTR _iI$[ebp], 6
	jge	SHORT $LN10@SetWorking

; 2397 : 				{
; 2398 : 					GetCity()->ChangeBaseYieldRateFromTerrain(((YieldTypes)iI), -pPlot->getYield((YieldTypes)iI));

	mov	eax, DWORD PTR _iI$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?getYield@CvPlot@@QBEHW4YieldTypes@@@Z	; CvPlot::getYield
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _iI$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?ChangeBaseYieldRateFromTerrain@CvCity@@QAEXW4YieldTypes@@H@Z ; CvCity::ChangeBaseYieldRateFromTerrain

; 2399 : 				}

	jmp	SHORT $LN3@SetWorking
$LN10@SetWorking:

; 2400 : 			}
; 2401 : 		}
; 2402 : 
; 2403 : 		if(GetCity()->isCitySelected())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?isCitySelected@CvCity@@QAE_NXZ		; CvCity::isCitySelected
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@SetWorking

; 2404 : 		{
; 2405 : 			GC.GetEngineUserInterface()->setDirty(CityInfo_DIRTY_BIT, true);

	mov	eax, DWORD PTR $T226034[ebp]
	mov	DWORD PTR tv164[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv164[ebp], ecx
	push	1
	push	18					; 00000012H
	mov	edx, DWORD PTR tv164[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv164[ebp]
	mov	edx, DWORD PTR [eax+260]
	call	edx

; 2406 : 			//GC.GetEngineUserInterface()->setDirty(InfoPane_DIRTY_BIT, true );
; 2407 : 			GC.GetEngineUserInterface()->setDirty(CityScreen_DIRTY_BIT, true);

	mov	eax, DWORD PTR $T226038[ebp]
	mov	DWORD PTR tv176[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv176[ebp], ecx
	push	1
	push	21					; 00000015H
	mov	edx, DWORD PTR tv176[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv176[ebp]
	mov	edx, DWORD PTR [eax+260]
	call	edx

; 2408 : 			GC.GetEngineUserInterface()->setDirty(ColoredPlots_DIRTY_BIT, true);

	mov	eax, DWORD PTR $T226042[ebp]
	mov	DWORD PTR tv188[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv188[ebp], ecx
	push	1
	push	24					; 00000018H
	mov	edx, DWORD PTR tv188[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv188[ebp]
	mov	edx, DWORD PTR [eax+260]
	call	edx
$LN1@SetWorking:

; 2409 : 		}
; 2410 : 
; 2411 : 		GC.GetEngineUserInterface()->setDirty(CityInfo_DIRTY_BIT, true);

	mov	eax, DWORD PTR $T226046[ebp]
	mov	DWORD PTR tv200[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv200[ebp], ecx
	push	1
	push	18					; 00000012H
	mov	edx, DWORD PTR tv200[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv200[ebp]
	mov	edx, DWORD PTR [eax+260]
	call	edx
$LN17@SetWorking:

; 2412 : 	}
; 2413 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N1@Z ENDP ; CvCityCitizens::SetWorkingPlot
_TEXT	ENDS
PUBLIC	?DoAlterWorkingPlot@CvCityCitizens@@QAEXH@Z	; CvCityCitizens::DoAlterWorkingPlot
EXTRN	?setWorkingCityOverride@CvPlot@@QAEXPBVCvCity@@@Z:PROC ; CvPlot::setWorkingCityOverride
EXTRN	?getWorkingCityOverride@CvPlot@@QBEPAVCvCity@@XZ:PROC ; CvPlot::getWorkingCityOverride
; Function compile flags: /Odtp
;	COMDAT ?DoAlterWorkingPlot@CvCityCitizens@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T226052 = -16						; size = 4
_pPlot$224950 = -12					; size = 4
_iPlotLoop$224942 = -8					; size = 4
_pLoopPlot$224941 = -4					; size = 4
_iIndex$ = 8						; size = 4
?DoAlterWorkingPlot@CvCityCitizens@@QAEXH@Z PROC	; CvCityCitizens::DoAlterWorkingPlot, COMDAT
; _this$ = ecx

; 2417 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 2418 : 	CvAssertMsg(iIndex >= 0, "iIndex expected to be >= 0");
; 2419 : 	CvAssertMsg(iIndex < NUM_CITY_PLOTS, "iIndex expected to be < NUM_CITY_PLOTS");
; 2420 : 
; 2421 : 	// Clicking ON the city "resets" it to default setup
; 2422 : 	if(iIndex == CITY_HOME_PLOT)

	cmp	DWORD PTR _iIndex$[ebp], 0
	jne	SHORT $LN21@DoAlterWor

; 2423 : 	{
; 2424 : 		CvPlot* pLoopPlot;
; 2425 : 
; 2426 : 		// If we've forced any plots to be worked, reset them to the normal state
; 2427 : 		for(int iPlotLoop = 0; iPlotLoop < NUM_CITY_PLOTS; iPlotLoop++)

	mov	DWORD PTR _iPlotLoop$224942[ebp], 0
	jmp	SHORT $LN20@DoAlterWor
$LN19@DoAlterWor:
	mov	eax, DWORD PTR _iPlotLoop$224942[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlotLoop$224942[ebp], eax
$LN20@DoAlterWor:
	cmp	DWORD PTR _iPlotLoop$224942[ebp], 37	; 00000025H
	jge	SHORT $LN18@DoAlterWor

; 2428 : 		{
; 2429 : 			if(iPlotLoop != CITY_HOME_PLOT)

	cmp	DWORD PTR _iPlotLoop$224942[ebp], 0
	je	SHORT $LN17@DoAlterWor

; 2430 : 			{
; 2431 : 				pLoopPlot = GetCityPlotFromIndex(iPlotLoop);

	mov	ecx, DWORD PTR _iPlotLoop$224942[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z ; CvCityCitizens::GetCityPlotFromIndex
	mov	DWORD PTR _pLoopPlot$224941[ebp], eax

; 2432 : 
; 2433 : 				if(pLoopPlot != NULL)

	cmp	DWORD PTR _pLoopPlot$224941[ebp], 0
	je	SHORT $LN17@DoAlterWor

; 2434 : 				{
; 2435 : 					if(IsForcedWorkingPlot(pLoopPlot))

	mov	edx, DWORD PTR _pLoopPlot$224941[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsForcedWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsForcedWorkingPlot
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@DoAlterWor

; 2436 : 					{
; 2437 : 						SetForcedWorkingPlot(pLoopPlot, false);

	push	0
	mov	ecx, DWORD PTR _pLoopPlot$224941[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetForcedWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N@Z ; CvCityCitizens::SetForcedWorkingPlot
$LN17@DoAlterWor:

; 2438 : 					}
; 2439 : 				}
; 2440 : 			}
; 2441 : 		}

	jmp	SHORT $LN19@DoAlterWor
$LN18@DoAlterWor:

; 2442 : 
; 2443 : 		// Reset Forced Default Specialists
; 2444 : 		ChangeNumForcedDefaultSpecialists(-GetNumForcedDefaultSpecialists());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumForcedDefaultSpecialists@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumForcedDefaultSpecialists
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumForcedDefaultSpecialists@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumForcedDefaultSpecialists

; 2445 : 
; 2446 : 		DoReallocateCitizens();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoReallocateCitizens@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoReallocateCitizens

; 2447 : 	}
; 2448 : 	else

	jmp	$LN22@DoAlterWor
$LN21@DoAlterWor:

; 2449 : 	{
; 2450 : 		CvPlot* pPlot = GetCityPlotFromIndex(iIndex);

	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z ; CvCityCitizens::GetCityPlotFromIndex
	mov	DWORD PTR _pPlot$224950[ebp], eax

; 2451 : 
; 2452 : 		if(pPlot != NULL)

	cmp	DWORD PTR _pPlot$224950[ebp], 0
	je	$LN22@DoAlterWor

; 2453 : 		{
; 2454 : 			if(IsCanWork(pPlot))

	mov	eax, DWORD PTR _pPlot$224950[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCanWork@CvCityCitizens@@QBE_NPAVCvPlot@@@Z ; CvCityCitizens::IsCanWork
	movzx	ecx, al
	test	ecx, ecx
	je	$LN12@DoAlterWor

; 2455 : 			{
; 2456 : //				GetCity()->setCitizensAutomated(false);
; 2457 : 
; 2458 : 				// If we're already working the Plot, then take the guy off and turn him into a Default Specialist
; 2459 : 				if(IsWorkingPlot(pPlot))

	mov	edx, DWORD PTR _pPlot$224950[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsWorkingPlot
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN11@DoAlterWor

; 2460 : 				{
; 2461 : 					SetWorkingPlot(pPlot, false);

	push	1
	push	0
	mov	ecx, DWORD PTR _pPlot$224950[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N1@Z ; CvCityCitizens::SetWorkingPlot

; 2462 : 					SetForcedWorkingPlot(pPlot, false);

	push	0
	mov	edx, DWORD PTR _pPlot$224950[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetForcedWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N@Z ; CvCityCitizens::SetForcedWorkingPlot

; 2463 : 					ChangeNumDefaultSpecialists(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumDefaultSpecialists@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumDefaultSpecialists

; 2464 : 					ChangeNumForcedDefaultSpecialists(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumForcedDefaultSpecialists@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumForcedDefaultSpecialists

; 2465 : 				}
; 2466 : 				// Player picked a new Plot to work
; 2467 : 				else

	jmp	SHORT $LN10@DoAlterWor
$LN11@DoAlterWor:

; 2468 : 				{
; 2469 : 					// Pull from the Default Specialist pool, if possible
; 2470 : 					if(GetNumDefaultSpecialists() > 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumDefaultSpecialists@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumDefaultSpecialists
	test	eax, eax
	jle	SHORT $LN9@DoAlterWor

; 2471 : 					{
; 2472 : 						ChangeNumDefaultSpecialists(-1);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumDefaultSpecialists@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumDefaultSpecialists

; 2473 : 						// Player is forcibly telling city to work a plot, so reduce count of forced default specialists
; 2474 : 						if(GetNumForcedDefaultSpecialists() > 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumForcedDefaultSpecialists@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumForcedDefaultSpecialists
	test	eax, eax
	jle	SHORT $LN8@DoAlterWor

; 2475 : 							ChangeNumForcedDefaultSpecialists(-1);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumForcedDefaultSpecialists@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumForcedDefaultSpecialists
$LN8@DoAlterWor:

; 2476 : 
; 2477 : 						SetWorkingPlot(pPlot, true);

	push	1
	push	1
	mov	eax, DWORD PTR _pPlot$224950[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N1@Z ; CvCityCitizens::SetWorkingPlot

; 2478 : 						SetForcedWorkingPlot(pPlot, true);

	push	1
	mov	ecx, DWORD PTR _pPlot$224950[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetForcedWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N@Z ; CvCityCitizens::SetForcedWorkingPlot

; 2479 : 					}
; 2480 : 					// No Default Specialists, so grab a better allocated guy
; 2481 : 					else

	jmp	SHORT $LN10@DoAlterWor
$LN9@DoAlterWor:

; 2482 : 					{
; 2483 : 						// Working Plot
; 2484 : 						if(DoRemoveWorstCitizen(true))

	push	-1
	push	-1
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoRemoveWorstCitizen@CvCityCitizens@@QAE_N_NW4SpecialistTypes@@H@Z ; CvCityCitizens::DoRemoveWorstCitizen
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN10@DoAlterWor

; 2485 : 						{
; 2486 : 							SetWorkingPlot(pPlot, true);

	push	1
	push	1
	mov	eax, DWORD PTR _pPlot$224950[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N1@Z ; CvCityCitizens::SetWorkingPlot

; 2487 : 							SetForcedWorkingPlot(pPlot, true);

	push	1
	mov	ecx, DWORD PTR _pPlot$224950[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetForcedWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N@Z ; CvCityCitizens::SetForcedWorkingPlot
$LN10@DoAlterWor:

; 2488 : 							//ChangeNumUnassignedCitizens(-1);
; 2489 : 						}
; 2490 : 						// Good Specialist
; 2491 : 						else
; 2492 : 						{
; 2493 : 							CvAssert(false);
; 2494 : 						}
; 2495 : 					}
; 2496 : 					//if ((GetCity()->extraSpecialists() > 0) || GetCity()->AI_removeWorstCitizen())
; 2497 : 					//{
; 2498 : 					//	SetWorkingPlot(pPlot, true);
; 2499 : 					//}
; 2500 : 				}

	jmp	SHORT $LN22@DoAlterWor
$LN12@DoAlterWor:

; 2501 : 			}
; 2502 : 			// JON: Need to update this block to work with new system
; 2503 : #ifdef AUI_CITIZENS_FIX_LOCKED_TILES_BLOCKED
; 2504 : 			else if ((pPlot->getOwner() == GetOwner()) && pPlot->getWorkingCityOverride() != GetCity())
; 2505 : #else
; 2506 : 			else if(pPlot->getOwner() == GetOwner())

	mov	edx, DWORD PTR _pPlot$224950[ebp]
	movsx	eax, BYTE PTR [edx+4]
	mov	DWORD PTR $T226052[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetOwner@CvCityCitizens@@QBE?AW4PlayerTypes@@XZ ; CvCityCitizens::GetOwner
	cmp	DWORD PTR $T226052[ebp], eax
	jne	SHORT $LN22@DoAlterWor

; 2507 : #endif
; 2508 : 			{
; 2509 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 2510 : 				CvCity* pOldWorkingCityOverride = pPlot->getWorkingCityOverride();
; 2511 : 				if (pOldWorkingCityOverride != NULL)
; 2512 : 				{
; 2513 : 					if (pOldWorkingCityOverride->IsPuppet())
; 2514 : 					{
; 2515 : 						return;
; 2516 : #else
; 2517 : 				// Can't take away forced plots from puppet Cities
; 2518 : 				if(pPlot->getWorkingCityOverride() != NULL)

	mov	ecx, DWORD PTR _pPlot$224950[ebp]
	call	?getWorkingCityOverride@CvPlot@@QBEPAVCvCity@@XZ ; CvPlot::getWorkingCityOverride
	test	eax, eax
	je	SHORT $LN2@DoAlterWor

; 2519 : 				{
; 2520 : 					if(pPlot->getWorkingCityOverride()->IsPuppet())

	mov	ecx, DWORD PTR _pPlot$224950[ebp]
	call	?getWorkingCityOverride@CvPlot@@QBEPAVCvCity@@XZ ; CvPlot::getWorkingCityOverride
	mov	ecx, eax
	call	?IsPuppet@CvCity@@QBE_NXZ		; CvCity::IsPuppet
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@DoAlterWor

; 2521 : 					{
; 2522 : 						return;

	jmp	SHORT $LN22@DoAlterWor
$LN2@DoAlterWor:

; 2523 : #endif
; 2524 : 					}
; 2525 : 				}
; 2526 : 
; 2527 : 				pPlot->setWorkingCityOverride(GetCity());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	push	eax
	mov	ecx, DWORD PTR _pPlot$224950[ebp]
	call	?setWorkingCityOverride@CvPlot@@QAEXPBVCvCity@@@Z ; CvPlot::setWorkingCityOverride
$LN22@DoAlterWor:

; 2528 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 2529 : 				if (pOldWorkingCityOverride)
; 2530 : 					pOldWorkingCityOverride->GetCityCitizens()->DoSelfConsistencyCheck();
; 2531 : #endif
; 2532 : 			}
; 2533 : 		}
; 2534 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 2535 : 		DoSelfConsistencyCheck();
; 2536 : #endif
; 2537 : 	}
; 2538 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?DoAlterWorkingPlot@CvCityCitizens@@QAEXH@Z ENDP	; CvCityCitizens::DoAlterWorkingPlot
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsForcedWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iIndex$ = -4						; size = 4
_pPlot$ = 8						; size = 4
?IsForcedWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z PROC ; CvCityCitizens::IsForcedWorkingPlot, COMDAT
; _this$ = ecx

; 2544 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2545 : 	int iIndex;
; 2546 : 
; 2547 : 	iIndex = GetCityIndexFromPlot(pPlot);

	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCityIndexFromPlot@CvCityCitizens@@QBEHPBVCvPlot@@@Z ; CvCityCitizens::GetCityIndexFromPlot
	mov	DWORD PTR _iIndex$[ebp], eax

; 2548 : 
; 2549 : 	if(iIndex != -1)

	cmp	DWORD PTR _iIndex$[ebp], -1
	je	SHORT $LN1@IsForcedWo

; 2550 : 	{
; 2551 : 		return m_pabForcedWorkingPlot[iIndex];

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _iIndex$[ebp]
	mov	al, BYTE PTR [ecx+62]
	jmp	SHORT $LN2@IsForcedWo
$LN1@IsForcedWo:

; 2552 : 	}
; 2553 : 
; 2554 : 	return false;

	xor	al, al
$LN2@IsForcedWo:

; 2555 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsForcedWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ENDP ; CvCityCitizens::IsForcedWorkingPlot
_TEXT	ENDS
PUBLIC	?GetNumForcedWorkingPlots@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumForcedWorkingPlots
PUBLIC	?ChangeNumForcedWorkingPlots@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumForcedWorkingPlots
; Function compile flags: /Odtp
;	COMDAT ?SetForcedWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iIndex$ = -4						; size = 4
_pPlot$ = 8						; size = 4
_bNewValue$ = 12					; size = 1
?SetForcedWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N@Z PROC ; CvCityCitizens::SetForcedWorkingPlot, COMDAT
; _this$ = ecx

; 2559 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 2560 : 	int iIndex = GetCityIndexFromPlot(pPlot);

	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCityIndexFromPlot@CvCityCitizens@@QBEHPBVCvPlot@@@Z ; CvCityCitizens::GetCityIndexFromPlot
	mov	DWORD PTR _iIndex$[ebp], eax

; 2561 : 
; 2562 : 	CvAssertMsg(iIndex >= 0, "iIndex expected to be >= 0");
; 2563 : 	CvAssertMsg(iIndex < NUM_CITY_PLOTS, "iIndex expected to be < NUM_CITY_PLOTS");
; 2564 : 
; 2565 : 	if(IsForcedWorkingPlot(pPlot) != bNewValue && iIndex >= 0 && iIndex < NUM_CITY_PLOTS)

	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsForcedWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsForcedWorkingPlot
	movzx	edx, al
	movzx	eax, BYTE PTR _bNewValue$[ebp]
	cmp	edx, eax
	je	SHORT $LN5@SetForcedW
	cmp	DWORD PTR _iIndex$[ebp], 0
	jl	SHORT $LN5@SetForcedW
	cmp	DWORD PTR _iIndex$[ebp], 37		; 00000025H
	jge	SHORT $LN5@SetForcedW

; 2566 : 	{
; 2567 : 		m_pabForcedWorkingPlot[iIndex] = bNewValue;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _iIndex$[ebp]
	mov	dl, BYTE PTR _bNewValue$[ebp]
	mov	BYTE PTR [ecx+62], dl

; 2568 : 
; 2569 : 		// Change the count of how many are forced
; 2570 : 		if(bNewValue)

	movzx	eax, BYTE PTR _bNewValue$[ebp]
	test	eax, eax
	je	SHORT $LN3@SetForcedW

; 2571 : 		{
; 2572 : 			ChangeNumForcedWorkingPlots(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumForcedWorkingPlots@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumForcedWorkingPlots

; 2573 : 
; 2574 : 			// More forced plots than we have citizens working?  If so, then pick someone to lose their forced status
; 2575 : 			if(GetNumForcedWorkingPlots() > GetNumCitizensWorkingPlots())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumForcedWorkingPlots@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumForcedWorkingPlots
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumCitizensWorkingPlots@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumCitizensWorkingPlots
	cmp	esi, eax
	jle	SHORT $LN2@SetForcedW

; 2576 : 			{
; 2577 : 				DoValidateForcedWorkingPlots();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoValidateForcedWorkingPlots@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoValidateForcedWorkingPlots
$LN2@SetForcedW:

; 2578 : 			}
; 2579 : 		}
; 2580 : 		else

	jmp	SHORT $LN5@SetForcedW
$LN3@SetForcedW:

; 2581 : 		{
; 2582 : 			ChangeNumForcedWorkingPlots(-1);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumForcedWorkingPlots@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumForcedWorkingPlots
$LN5@SetForcedW:

; 2583 : 		}
; 2584 : 	}
; 2585 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?SetForcedWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N@Z ENDP ; CvCityCitizens::SetForcedWorkingPlot
_TEXT	ENDS
PUBLIC	?DoDemoteWorstForcedWorkingPlot@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoDemoteWorstForcedWorkingPlot
; Function compile flags: /Odtp
;	COMDAT ?DoValidateForcedWorkingPlots@CvCityCitizens@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_iLoop$224985 = -8					; size = 4
_iNumForcedWorkingPlotsToDemote$ = -4			; size = 4
?DoValidateForcedWorkingPlots@CvCityCitizens@@QAEXXZ PROC ; CvCityCitizens::DoValidateForcedWorkingPlots, COMDAT
; _this$ = ecx

; 2589 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 2590 : 	int iNumForcedWorkingPlotsToDemote = GetNumForcedWorkingPlots() - GetNumCitizensWorkingPlots();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumForcedWorkingPlots@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumForcedWorkingPlots
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumCitizensWorkingPlots@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumCitizensWorkingPlots
	sub	esi, eax
	mov	DWORD PTR _iNumForcedWorkingPlotsToDemote$[ebp], esi

; 2591 : 
; 2592 : 	if(iNumForcedWorkingPlotsToDemote > 0)

	cmp	DWORD PTR _iNumForcedWorkingPlotsToDemote$[ebp], 0
	jle	SHORT $LN5@DoValidate

; 2593 : 	{
; 2594 : 		for(int iLoop = 0; iLoop < iNumForcedWorkingPlotsToDemote; iLoop++)

	mov	DWORD PTR _iLoop$224985[ebp], 0
	jmp	SHORT $LN3@DoValidate
$LN2@DoValidate:
	mov	eax, DWORD PTR _iLoop$224985[ebp]
	add	eax, 1
	mov	DWORD PTR _iLoop$224985[ebp], eax
$LN3@DoValidate:
	mov	ecx, DWORD PTR _iLoop$224985[ebp]
	cmp	ecx, DWORD PTR _iNumForcedWorkingPlotsToDemote$[ebp]
	jge	SHORT $LN5@DoValidate

; 2595 : 		{
; 2596 : 			DoDemoteWorstForcedWorkingPlot();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoDemoteWorstForcedWorkingPlot@CvCityCitizens@@QAEXXZ ; CvCityCitizens::DoDemoteWorstForcedWorkingPlot

; 2597 : 		}

	jmp	SHORT $LN2@DoValidate
$LN5@DoValidate:

; 2598 : 	}
; 2599 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?DoValidateForcedWorkingPlots@CvCityCitizens@@QAEXXZ ENDP ; CvCityCitizens::DoValidateForcedWorkingPlots
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?DoDemoteWorstForcedWorkingPlot@CvCityCitizens@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
_iPlotLoop$224996 = -20					; size = 4
_iBestPlotID$ = -16					; size = 4
_iBestPlotValue$ = -12					; size = 4
_pLoopPlot$ = -8					; size = 4
_iValue$ = -4						; size = 4
?DoDemoteWorstForcedWorkingPlot@CvCityCitizens@@QAEXXZ PROC ; CvCityCitizens::DoDemoteWorstForcedWorkingPlot, COMDAT
; _this$ = ecx

; 2603 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 2604 : 	int iValue;
; 2605 : 
; 2606 : 	int iBestPlotValue = -1;

	mov	DWORD PTR _iBestPlotValue$[ebp], -1

; 2607 : 	int iBestPlotID = -1;

	mov	DWORD PTR _iBestPlotID$[ebp], -1

; 2608 : 
; 2609 : 	CvPlot* pLoopPlot;
; 2610 : 
; 2611 : 	// Look at all workable Plots
; 2612 : 	for(int iPlotLoop = 0; iPlotLoop < NUM_CITY_PLOTS; iPlotLoop++)

	mov	DWORD PTR _iPlotLoop$224996[ebp], 0
	jmp	SHORT $LN9@DoDemoteWo
$LN8@DoDemoteWo:
	mov	eax, DWORD PTR _iPlotLoop$224996[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlotLoop$224996[ebp], eax
$LN9@DoDemoteWo:
	cmp	DWORD PTR _iPlotLoop$224996[ebp], 37	; 00000025H
	jge	SHORT $LN7@DoDemoteWo

; 2613 : 	{
; 2614 : 		if(iPlotLoop != CITY_HOME_PLOT)

	cmp	DWORD PTR _iPlotLoop$224996[ebp], 0
	je	SHORT $LN6@DoDemoteWo

; 2615 : 		{
; 2616 : 			pLoopPlot = GetCityPlotFromIndex(iPlotLoop);

	mov	ecx, DWORD PTR _iPlotLoop$224996[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z ; CvCityCitizens::GetCityPlotFromIndex
	mov	DWORD PTR _pLoopPlot$[ebp], eax

; 2617 : 
; 2618 : 			if(pLoopPlot != NULL)

	cmp	DWORD PTR _pLoopPlot$[ebp], 0
	je	SHORT $LN6@DoDemoteWo

; 2619 : 			{
; 2620 : 				if(IsForcedWorkingPlot(pLoopPlot))

	mov	edx, DWORD PTR _pLoopPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsForcedWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsForcedWorkingPlot
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@DoDemoteWo

; 2621 : 				{
; 2622 : 					iValue = GetPlotValue(pLoopPlot, false);

	push	0
	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlotValue@CvCityCitizens@@QAEHPAVCvPlot@@_N@Z ; CvCityCitizens::GetPlotValue
	mov	DWORD PTR _iValue$[ebp], eax

; 2623 : 
; 2624 : 					// First, or worst yet?
; 2625 : 					if(iBestPlotValue == -1 || iValue < iBestPlotValue)

	cmp	DWORD PTR _iBestPlotValue$[ebp], -1
	je	SHORT $LN2@DoDemoteWo
	mov	edx, DWORD PTR _iValue$[ebp]
	cmp	edx, DWORD PTR _iBestPlotValue$[ebp]
	jge	SHORT $LN6@DoDemoteWo
$LN2@DoDemoteWo:

; 2626 : 					{
; 2627 : 						iBestPlotValue = iValue;

	mov	eax, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR _iBestPlotValue$[ebp], eax

; 2628 : 						iBestPlotID = iPlotLoop;

	mov	ecx, DWORD PTR _iPlotLoop$224996[ebp]
	mov	DWORD PTR _iBestPlotID$[ebp], ecx
$LN6@DoDemoteWo:

; 2629 : 					}
; 2630 : 				}
; 2631 : 			}
; 2632 : 		}
; 2633 : 	}

	jmp	SHORT $LN8@DoDemoteWo
$LN7@DoDemoteWo:

; 2634 : 
; 2635 : 	if(iBestPlotID > -1)

	cmp	DWORD PTR _iBestPlotID$[ebp], -1
	jle	SHORT $LN10@DoDemoteWo

; 2636 : 	{
; 2637 : 		pLoopPlot = GetCityPlotFromIndex(iBestPlotID);

	mov	edx, DWORD PTR _iBestPlotID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z ; CvCityCitizens::GetCityPlotFromIndex
	mov	DWORD PTR _pLoopPlot$[ebp], eax

; 2638 : 		SetForcedWorkingPlot(pLoopPlot, false);

	push	0
	mov	eax, DWORD PTR _pLoopPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetForcedWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N@Z ; CvCityCitizens::SetForcedWorkingPlot
$LN10@DoDemoteWo:

; 2639 : 	}
; 2640 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoDemoteWorstForcedWorkingPlot@CvCityCitizens@@QAEXXZ ENDP ; CvCityCitizens::DoDemoteWorstForcedWorkingPlot
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetNumForcedWorkingPlots@CvCityCitizens@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumForcedWorkingPlots@CvCityCitizens@@QBEHXZ PROC	; CvCityCitizens::GetNumForcedWorkingPlots, COMDAT
; _this$ = ecx

; 2644 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2645 : #ifdef AUI_CITIZENS_FIX_LOCKED_TILES_BLOCKED
; 2646 : 	return m_iNumForcedWorkingPlots + GetNumForcedWorkingPlotsBlocked();
; 2647 : #else
; 2648 : 	return m_iNumForcedWorkingPlots;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 2649 : #endif
; 2650 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumForcedWorkingPlots@CvCityCitizens@@QBEHXZ ENDP	; CvCityCitizens::GetNumForcedWorkingPlots
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?ChangeNumForcedWorkingPlots@CvCityCitizens@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iChange$ = 8						; size = 4
?ChangeNumForcedWorkingPlots@CvCityCitizens@@QAEXH@Z PROC ; CvCityCitizens::ChangeNumForcedWorkingPlots, COMDAT
; _this$ = ecx

; 2654 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2655 : 	if(iChange != 0)

	cmp	DWORD PTR _iChange$[ebp], 0
	je	SHORT $LN2@ChangeNumF

; 2656 : 	{
; 2657 : 		m_iNumForcedWorkingPlots += iChange;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, DWORD PTR _iChange$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], ecx
$LN2@ChangeNumF:

; 2658 : 	}
; 2659 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ChangeNumForcedWorkingPlots@CvCityCitizens@@QAEXH@Z ENDP ; CvCityCitizens::ChangeNumForcedWorkingPlots
_TEXT	ENDS
PUBLIC	?IsPlotBlockaded@CvCityCitizens@@QBE_NPAVCvPlot@@@Z ; CvCityCitizens::IsPlotBlockaded
EXTRN	?hasYield@CvPlot@@QBE_NXZ:PROC			; CvPlot::hasYield
EXTRN	?isWaterWork@CvTeam@@QBE_NXZ:PROC		; CvTeam::isWaterWork
EXTRN	?m_aTeams@CvTeam@@1PAV1@A:DWORD			; CvTeam::m_aTeams
EXTRN	?plotCheck@CvPlot@@QAEPAVCvUnit@@P6A_NPBV2@HH@ZHHW4PlayerTypes@@W4TeamTypes@@1HH@Z:PROC ; CvPlot::plotCheck
EXTRN	?PUF_canSiege@@YA_NPBVCvUnit@@HH@Z:PROC		; PUF_canSiege
; Function compile flags: /Odtp
;	COMDAT ?IsCanWork@CvCityCitizens@@QBE_NPAVCvPlot@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T226074 = -8						; size = 4
$T226073 = -4						; size = 4
_pPlot$ = 8						; size = 4
?IsCanWork@CvCityCitizens@@QBE_NPAVCvPlot@@@Z PROC	; CvCityCitizens::IsCanWork, COMDAT
; _this$ = ecx

; 2663 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2664 : 	if(pPlot->getWorkingCity() != m_pCity)

	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?getWorkingCity@CvPlot@@QBEPAVCvCity@@XZ ; CvPlot::getWorkingCity
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx]
	je	SHORT $LN6@IsCanWork

; 2665 : 	{
; 2666 : 		return false;

	xor	al, al
	jmp	$LN7@IsCanWork
$LN6@IsCanWork:

; 2667 : 	}
; 2668 : 
; 2669 : 	CvAssertMsg(GetCityIndexFromPlot(pPlot) != -1, "GetCityIndexFromPlot(pPlot) is expected to be assigned (not -1)");
; 2670 : 
; 2671 : 	if(pPlot->plotCheck(PUF_canSiege, GetOwner()) != NULL)

	push	-1
	push	-1
	push	0
	push	-1
	push	-1
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetOwner@CvCityCitizens@@QBE?AW4PlayerTypes@@XZ ; CvCityCitizens::GetOwner
	push	eax
	push	OFFSET ?PUF_canSiege@@YA_NPBVCvUnit@@HH@Z ; PUF_canSiege
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?plotCheck@CvPlot@@QAEPAVCvUnit@@P6A_NPBV2@HH@ZHHW4PlayerTypes@@W4TeamTypes@@1HH@Z ; CvPlot::plotCheck
	test	eax, eax
	je	SHORT $LN9@IsCanWork

; 2672 : 	{
; 2673 : 		return false;

	xor	al, al
	jmp	SHORT $LN7@IsCanWork

; 2674 : 	}
; 2675 : 
; 2676 : 	if(pPlot->isWater())

$LN9@IsCanWork:
	mov	edx, DWORD PTR _pPlot$[ebp]
	movsx	eax, BYTE PTR [edx+5]
	xor	ecx, ecx
	cmp	eax, 3
	sete	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN4@IsCanWork

; 2677 : 	{
; 2678 : 		if(!(GET_TEAM(GetTeam()).isWaterWork()))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTeam@CvCityCitizens@@QBE?AW4TeamTypes@@XZ ; CvCityCitizens::GetTeam
	mov	DWORD PTR $T226073[ebp], eax
	mov	eax, DWORD PTR $T226073[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T226074[ebp], eax
	mov	ecx, DWORD PTR $T226074[ebp]
	call	?isWaterWork@CvTeam@@QBE_NXZ		; CvTeam::isWaterWork
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@IsCanWork

; 2679 : 		{
; 2680 : 			return false;

	xor	al, al
	jmp	SHORT $LN7@IsCanWork
$LN4@IsCanWork:

; 2681 : 		}
; 2682 : 
; 2683 : 	}
; 2684 : 
; 2685 : 	if(!pPlot->hasYield())

	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?hasYield@CvPlot@@QBE_NXZ		; CvPlot::hasYield
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@IsCanWork

; 2686 : 	{
; 2687 : 		return false;

	xor	al, al
	jmp	SHORT $LN7@IsCanWork
$LN2@IsCanWork:

; 2688 : 	}
; 2689 : 
; 2690 : 	if(IsPlotBlockaded(pPlot))

	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsPlotBlockaded@CvCityCitizens@@QBE_NPAVCvPlot@@@Z ; CvCityCitizens::IsPlotBlockaded
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@IsCanWork

; 2691 : 	{
; 2692 : 		return false;

	xor	al, al
	jmp	SHORT $LN7@IsCanWork
$LN1@IsCanWork:

; 2693 : 	}
; 2694 : 
; 2695 : 	return true;

	mov	al, 1
$LN7@IsCanWork:

; 2696 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsCanWork@CvCityCitizens@@QBE_NPAVCvPlot@@@Z ENDP	; CvCityCitizens::IsCanWork
_TEXT	ENDS
PUBLIC	?plotDistance@@YAHHHHH@Z			; plotDistance
PUBLIC	?plotXY@@YAPAVCvPlot@@HHHH@Z			; plotXY
EXTRN	?HasAlliedUnit@CvPlot@@QBE_NW4PlayerTypes@@_N@Z:PROC ; CvPlot::HasAlliedUnit
EXTRN	?IsActualEnemyUnit@CvPlot@@QBE_NW4PlayerTypes@@_N@Z:PROC ; CvPlot::IsActualEnemyUnit
; Function compile flags: /Odtp
;	COMDAT ?IsPlotBlockaded@CvCityCitizens@@QBE_NPAVCvPlot@@@Z
_TEXT	SEGMENT
_this$ = -336						; size = 4
$T226335 = -252						; size = 4
$T226331 = -248						; size = 4
$T226327 = -244						; size = 4
$T226323 = -240						; size = 4
$T226270 = -180						; size = 4
$T226266 = -176						; size = 4
$T226262 = -172						; size = 4
$T226258 = -168						; size = 4
$T226217 = -120						; size = 4
$T226213 = -116						; size = 4
$T226209 = -112						; size = 4
$T226205 = -108						; size = 4
$T226201 = -104						; size = 4
$T226197 = -100						; size = 4
$T226095 = -40						; size = 4
$T226091 = -36						; size = 4
_iDY$ = -32						; size = 4
_iDX$ = -28						; size = 4
_ePlayer$ = -24						; size = 4
_iLoopDistance$ = -20					; size = 4
_iBlockadeDistance$ = -16				; size = 4
_iClosestAllyDistance$ = -12				; size = 4
_pNearbyPlot$ = -8					; size = 4
_iClosestEnemyDistance$ = -4				; size = 4
_pPlot$ = 8						; size = 4
?IsPlotBlockaded@CvCityCitizens@@QBE_NPAVCvPlot@@@Z PROC ; CvCityCitizens::IsPlotBlockaded, COMDAT
; _this$ = ecx

; 2704 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 336				; 00000150H
	mov	DWORD PTR _this$[ebp], ecx

; 2705 : 	// See if there are any enemy boats near us that are blockading this plot
; 2706 : 	int iBlockadeDistance = /*2*/ GC.getNAVAL_PLOT_BLOCKADE_RANGE();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+6172
	mov	DWORD PTR _iBlockadeDistance$[ebp], eax

; 2707 : 	int iDX, iDY;
; 2708 : 	CvPlot* pNearbyPlot;
; 2709 : #ifdef AUI_CITY_CITIZENS_COUNTERBLOCKADE
; 2710 : 	int iClosestEnemyDistance = MAX_INT;

	mov	DWORD PTR _iClosestEnemyDistance$[ebp], 2147483647 ; 7fffffffH

; 2711 : 	int iClosestAllyDistance = MAX_INT - 1;

	mov	DWORD PTR _iClosestAllyDistance$[ebp], 2147483646 ; 7ffffffeH

; 2712 : 	int iLoopDistance = 0;

	mov	DWORD PTR _iLoopDistance$[ebp], 0

; 2713 : #endif
; 2714 : 
; 2715 : 	PlayerTypes ePlayer = m_pCity->getOwner();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR _ePlayer$[ebp], eax

; 2716 : 
; 2717 : 	// Might be a better way to do this that'd be slightly less CPU-intensive
; 2718 : #ifdef AUI_HEXSPACE_DX_LOOPS
; 2719 : 	int iMaxDX;
; 2720 : 	for (iDY = -iBlockadeDistance; iDY <= iBlockadeDistance; iDY++)
; 2721 : 	{
; 2722 : 		iMaxDX = iBlockadeDistance - MAX(0, iDY);
; 2723 : 		for (iDX = -iBlockadeDistance - MIN(0, iDY); iDX <= iMaxDX; iDX++) // MIN() and MAX() stuff is to reduce loops (hexspace!)
; 2724 : #else
; 2725 : 	for(iDX = -(iBlockadeDistance); iDX <= iBlockadeDistance; iDX++)

	mov	ecx, DWORD PTR _iBlockadeDistance$[ebp]
	neg	ecx
	mov	DWORD PTR _iDX$[ebp], ecx
	jmp	SHORT $LN13@IsPlotBloc
$LN12@IsPlotBloc:
	mov	edx, DWORD PTR _iDX$[ebp]
	add	edx, 1
	mov	DWORD PTR _iDX$[ebp], edx
$LN13@IsPlotBloc:
	mov	eax, DWORD PTR _iDX$[ebp]
	cmp	eax, DWORD PTR _iBlockadeDistance$[ebp]
	jg	$LN11@IsPlotBloc

; 2726 : 	{
; 2727 : 		for(iDY = -(iBlockadeDistance); iDY <= iBlockadeDistance; iDY++)

	mov	ecx, DWORD PTR _iBlockadeDistance$[ebp]
	neg	ecx
	mov	DWORD PTR _iDY$[ebp], ecx
	jmp	SHORT $LN10@IsPlotBloc
$LN9@IsPlotBloc:
	mov	edx, DWORD PTR _iDY$[ebp]
	add	edx, 1
	mov	DWORD PTR _iDY$[ebp], edx
$LN10@IsPlotBloc:
	mov	eax, DWORD PTR _iDY$[ebp]
	cmp	eax, DWORD PTR _iBlockadeDistance$[ebp]
	jg	$LN8@IsPlotBloc

; 2728 : #endif
; 2729 : 		{
; 2730 : 			pNearbyPlot = plotXY(pPlot->getX(), pPlot->getY(), iDX, iDY);

	mov	ecx, DWORD PTR _pPlot$[ebp]
	movsx	edx, WORD PTR [ecx+2]
	mov	DWORD PTR $T226091[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR $T226095[ebp], ecx
	mov	edx, DWORD PTR _iDY$[ebp]
	push	edx
	mov	eax, DWORD PTR _iDX$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T226091[ebp]
	push	ecx
	mov	edx, DWORD PTR $T226095[ebp]
	push	edx
	call	?plotXY@@YAPAVCvPlot@@HHHH@Z		; plotXY
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pNearbyPlot$[ebp], eax

; 2731 : 
; 2732 : 			if(pNearbyPlot != NULL)

	cmp	DWORD PTR _pNearbyPlot$[ebp], 0
	je	$LN7@IsPlotBloc

; 2733 : 			{
; 2734 : 				// Must be water in the same Area
; 2735 : 				if(pNearbyPlot->isWater() && pNearbyPlot->getArea() == pPlot->getArea())

	mov	eax, DWORD PTR _pNearbyPlot$[ebp]
	movsx	ecx, BYTE PTR [eax+5]
	xor	edx, edx
	cmp	ecx, 3
	sete	dl
	movzx	eax, dl
	test	eax, eax
	je	$LN7@IsPlotBloc
	mov	ecx, DWORD PTR _pNearbyPlot$[ebp]
	mov	edx, DWORD PTR [ecx+356]
	mov	DWORD PTR $T226197[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	mov	ecx, DWORD PTR [eax+356]
	mov	DWORD PTR $T226201[ebp], ecx
	mov	edx, DWORD PTR $T226197[ebp]
	cmp	edx, DWORD PTR $T226201[ebp]
	jne	$LN7@IsPlotBloc

; 2736 : 				{
; 2737 : #ifndef AUI_HEXSPACE_DX_LOOPS
; 2738 : #ifdef AUI_FIX_HEX_DISTANCE_INSTEAD_OF_PLOT_DISTANCE
; 2739 : 					if (hexDistance(iDX, iDY) <= iBlockadeDistance)
; 2740 : #else
; 2741 : 					if(plotDistance(pNearbyPlot->getX(), pNearbyPlot->getY(), pPlot->getX(), pPlot->getY()) <= iBlockadeDistance)

	mov	eax, DWORD PTR _pPlot$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR $T226205[ebp], ecx
	mov	edx, DWORD PTR _pPlot$[ebp]
	movsx	eax, WORD PTR [edx]
	mov	DWORD PTR $T226209[ebp], eax
	mov	ecx, DWORD PTR _pNearbyPlot$[ebp]
	movsx	edx, WORD PTR [ecx+2]
	mov	DWORD PTR $T226213[ebp], edx
	mov	eax, DWORD PTR _pNearbyPlot$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR $T226217[ebp], ecx
	mov	edx, DWORD PTR $T226205[ebp]
	push	edx
	mov	eax, DWORD PTR $T226209[ebp]
	push	eax
	mov	ecx, DWORD PTR $T226213[ebp]
	push	ecx
	mov	edx, DWORD PTR $T226217[ebp]
	push	edx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	cmp	eax, DWORD PTR _iBlockadeDistance$[ebp]
	jg	$LN7@IsPlotBloc

; 2742 : #endif
; 2743 : #endif
; 2744 : 					{
; 2745 : 						// Enemy boat within range to blockade our plot?
; 2746 : 						if(pNearbyPlot->IsActualEnemyUnit(ePlayer))

	push	1
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNearbyPlot$[ebp]
	call	?IsActualEnemyUnit@CvPlot@@QBE_NW4PlayerTypes@@_N@Z ; CvPlot::IsActualEnemyUnit
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@IsPlotBloc

; 2747 : 						{
; 2748 : #ifdef AUI_CITY_CITIZENS_COUNTERBLOCKADE
; 2749 : #ifdef AUI_HEXSPACE_DX_LOOPS
; 2750 : 							iLoopDistance = hexDistance(iDX, iDY);
; 2751 : #else
; 2752 : 							iLoopDistance = plotDistance(pPlot->getX(), pPlot->getY(), pNearbyPlot->getX(), pNearbyPlot->getY());

	mov	edx, DWORD PTR _pNearbyPlot$[ebp]
	movsx	eax, WORD PTR [edx+2]
	mov	DWORD PTR $T226258[ebp], eax
	mov	ecx, DWORD PTR _pNearbyPlot$[ebp]
	movsx	edx, WORD PTR [ecx]
	mov	DWORD PTR $T226262[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR $T226266[ebp], ecx
	mov	edx, DWORD PTR _pPlot$[ebp]
	movsx	eax, WORD PTR [edx]
	mov	DWORD PTR $T226270[ebp], eax
	mov	ecx, DWORD PTR $T226258[ebp]
	push	ecx
	mov	edx, DWORD PTR $T226262[ebp]
	push	edx
	mov	eax, DWORD PTR $T226266[ebp]
	push	eax
	mov	ecx, DWORD PTR $T226270[ebp]
	push	ecx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	mov	DWORD PTR _iLoopDistance$[ebp], eax

; 2753 : #endif
; 2754 : 							if (iLoopDistance < iClosestEnemyDistance)

	mov	edx, DWORD PTR _iLoopDistance$[ebp]
	cmp	edx, DWORD PTR _iClosestEnemyDistance$[ebp]
	jge	SHORT $LN4@IsPlotBloc

; 2755 : 								iClosestEnemyDistance = iLoopDistance;

	mov	eax, DWORD PTR _iLoopDistance$[ebp]
	mov	DWORD PTR _iClosestEnemyDistance$[ebp], eax
$LN4@IsPlotBloc:

; 2756 : 						}
; 2757 : 
; 2758 : 						if (pNearbyPlot->HasAlliedUnit(ePlayer))

	push	1
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pNearbyPlot$[ebp]
	call	?HasAlliedUnit@CvPlot@@QBE_NW4PlayerTypes@@_N@Z ; CvPlot::HasAlliedUnit
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN7@IsPlotBloc

; 2759 : 						{
; 2760 : #ifdef AUI_HEXSPACE_DX_LOOPS
; 2761 : 							iLoopDistance = hexDistance(iDX, iDY);
; 2762 : #else
; 2763 : 							iLoopDistance = plotDistance(pPlot->getX(), pPlot->getY(), pNearbyPlot->getX(), pNearbyPlot->getY());

	mov	eax, DWORD PTR _pNearbyPlot$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR $T226323[ebp], ecx
	mov	edx, DWORD PTR _pNearbyPlot$[ebp]
	movsx	eax, WORD PTR [edx]
	mov	DWORD PTR $T226327[ebp], eax
	mov	ecx, DWORD PTR _pPlot$[ebp]
	movsx	edx, WORD PTR [ecx+2]
	mov	DWORD PTR $T226331[ebp], edx
	mov	eax, DWORD PTR _pPlot$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR $T226335[ebp], ecx
	mov	edx, DWORD PTR $T226323[ebp]
	push	edx
	mov	eax, DWORD PTR $T226327[ebp]
	push	eax
	mov	ecx, DWORD PTR $T226331[ebp]
	push	ecx
	mov	edx, DWORD PTR $T226335[ebp]
	push	edx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	mov	DWORD PTR _iLoopDistance$[ebp], eax

; 2764 : #endif
; 2765 : 							if (iLoopDistance < iClosestAllyDistance)

	mov	eax, DWORD PTR _iLoopDistance$[ebp]
	cmp	eax, DWORD PTR _iClosestAllyDistance$[ebp]
	jge	SHORT $LN7@IsPlotBloc

; 2766 : 								iClosestAllyDistance = iLoopDistance;

	mov	ecx, DWORD PTR _iLoopDistance$[ebp]
	mov	DWORD PTR _iClosestAllyDistance$[ebp], ecx
$LN7@IsPlotBloc:

; 2767 : #else
; 2768 : 							return true;
; 2769 : #endif
; 2770 : 						}
; 2771 : 					}
; 2772 : 				}
; 2773 : 			}
; 2774 : 		}

	jmp	$LN9@IsPlotBloc
$LN8@IsPlotBloc:

; 2775 : 	}

	jmp	$LN12@IsPlotBloc
$LN11@IsPlotBloc:

; 2776 : #ifdef AUI_CITY_CITIZENS_COUNTERBLOCKADE
; 2777 : 	return iClosestEnemyDistance < iClosestAllyDistance;

	mov	edx, DWORD PTR _iClosestEnemyDistance$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR _iClosestAllyDistance$[ebp]
	setl	al

; 2778 : #else
; 2779 : 	return false;
; 2780 : #endif
; 2781 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsPlotBlockaded@CvCityCitizens@@QBE_NPAVCvPlot@@@Z ENDP ; CvCityCitizens::IsPlotBlockaded
_TEXT	ENDS
PUBLIC	?dyWrap@@YAHH@Z					; dyWrap
PUBLIC	?dxWrap@@YAHH@Z					; dxWrap
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?plotDistance@@YAHHHHH@Z
_TEXT	SEGMENT
tv157 = -92						; size = 4
tv138 = -88						; size = 4
tv135 = -84						; size = 4
$T226504 = -80						; size = 4
$T226477 = -60						; size = 4
_iDY$ = -24						; size = 4
_iDX$ = -20						; size = 4
_iWrappedDX$ = -16					; size = 4
_iHX1$ = -12						; size = 4
_iHX2$ = -8						; size = 4
_iWrappedDY$ = -4					; size = 4
_iX1$ = 8						; size = 4
_iY1$ = 12						; size = 4
_iX2$ = 16						; size = 4
_iY2$ = 20						; size = 4
?plotDistance@@YAHHHHH@Z PROC				; plotDistance, COMDAT

; 144  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH

; 145  : 	int iDX;
; 146  : 	int iWrappedDX = dxWrap(iX2 - iX1);

	mov	eax, DWORD PTR _iX2$[ebp]
	sub	eax, DWORD PTR _iX1$[ebp]
	push	eax
	call	?dxWrap@@YAHH@Z				; dxWrap
	add	esp, 4
	mov	DWORD PTR _iWrappedDX$[ebp], eax

; 147  : 	int iWrappedDY = dyWrap(iY2 - iY1);

	mov	ecx, DWORD PTR _iY2$[ebp]
	sub	ecx, DWORD PTR _iY1$[ebp]
	push	ecx
	call	?dyWrap@@YAHH@Z				; dyWrap
	add	esp, 4
	mov	DWORD PTR _iWrappedDY$[ebp], eax

; 148  : 	int iDY = abs(iWrappedDY);

	mov	eax, DWORD PTR _iWrappedDY$[ebp]
	cdq
	xor	eax, edx
	sub	eax, edx
	mov	DWORD PTR _iDY$[ebp], eax

; 149  : 
; 150  : 	// convert to hex-space coordinates - the coordinate system axes are E and NE (not orthogonal)
; 151  : 	int iHX1 = xToHexspaceX(iX1, iY1);

	cmp	DWORD PTR _iY1$[ebp], 0
	jl	SHORT $LN35@plotDistan
	mov	edx, DWORD PTR _iY1$[ebp]
	sar	edx, 1
	mov	DWORD PTR tv135[ebp], edx
	jmp	SHORT $LN33@plotDistan
$LN35@plotDistan:
	mov	eax, DWORD PTR _iY1$[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR tv135[ebp], eax
$LN33@plotDistan:
	mov	eax, DWORD PTR _iX1$[ebp]
	sub	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR _iHX1$[ebp], eax

; 152  : 	int iHX2 = xToHexspaceX(iX1 + iWrappedDX, iY1 + iWrappedDY);

	mov	ecx, DWORD PTR _iY1$[ebp]
	add	ecx, DWORD PTR _iWrappedDY$[ebp]
	mov	DWORD PTR $T226477[ebp], ecx
	js	SHORT $LN39@plotDistan
	mov	edx, DWORD PTR $T226477[ebp]
	sar	edx, 1
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN37@plotDistan
$LN39@plotDistan:
	mov	eax, DWORD PTR $T226477[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR tv138[ebp], eax
$LN37@plotDistan:
	mov	eax, DWORD PTR _iX1$[ebp]
	add	eax, DWORD PTR _iWrappedDX$[ebp]
	sub	eax, DWORD PTR tv138[ebp]
	mov	DWORD PTR _iHX2$[ebp], eax

; 153  : 
; 154  : 	iDX = abs(dxWrap(iHX2 - iHX1));

	mov	ecx, DWORD PTR _iHX2$[ebp]
	sub	ecx, DWORD PTR _iHX1$[ebp]
	push	ecx
	call	?dxWrap@@YAHH@Z				; dxWrap
	add	esp, 4
	cdq
	xor	eax, edx
	sub	eax, edx
	mov	DWORD PTR _iDX$[ebp], eax

; 155  : 
; 156  : #ifdef NQM_GAME_CORE_UTILS_OPTIMIZATIONS
; 157  : 	if (((iHX2 - iHX1) ^ (iWrappedDY)) >= 0)  // the signs match
; 158  : #else
; 159  : 	if((iHX2 - iHX1 >= 0) == (iWrappedDY >= 0))  // the signs match

	mov	edx, DWORD PTR _iHX2$[ebp]
	sub	edx, DWORD PTR _iHX1$[ebp]
	xor	eax, eax
	test	edx, edx
	setge	al
	xor	ecx, ecx
	cmp	DWORD PTR _iWrappedDY$[ebp], 0
	setge	cl
	cmp	eax, ecx
	jne	SHORT $LN2@plotDistan

; 160  : #endif
; 161  : 	{
; 162  : 		return iDX + iDY;

	mov	eax, DWORD PTR _iDX$[ebp]
	add	eax, DWORD PTR _iDY$[ebp]
	jmp	SHORT $LN3@plotDistan

; 163  : 	}
; 164  : 	else

	jmp	SHORT $LN3@plotDistan
$LN2@plotDistan:

; 165  : 	{
; 166  : #ifdef NQM_FAST_COMP
; 167  : 		return (MAX(iDX, iDY));
; 168  : #else
; 169  : 		return (std::max(iDX, iDY));

	mov	edx, DWORD PTR _iDX$[ebp]
	cmp	edx, DWORD PTR _iDY$[ebp]
	jge	SHORT $LN57@plotDistan
	lea	eax, DWORD PTR _iDY$[ebp]
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $LN58@plotDistan
$LN57@plotDistan:
	lea	ecx, DWORD PTR _iDX$[ebp]
	mov	DWORD PTR tv157[ebp], ecx
$LN58@plotDistan:
	mov	edx, DWORD PTR tv157[ebp]
	mov	DWORD PTR $T226504[ebp], edx
	mov	eax, DWORD PTR $T226504[ebp]
	mov	eax, DWORD PTR [eax]
$LN3@plotDistan:

; 170  : #endif
; 171  : 	}
; 172  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?plotDistance@@YAHHHHH@Z ENDP				; plotDistance
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?dxWrap@@YAHH@Z
_TEXT	SEGMENT
$T226527 = -16						; size = 4
$T226519 = -12						; size = 4
$T226515 = -5						; size = 1
_kMap$ = -4						; size = 4
_iDX$ = 8						; size = 4
?dxWrap@@YAHH@Z PROC					; dxWrap, COMDAT

; 73   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 74   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR _kMap$[ebp], eax

; 75   : 	return wrapCoordDifference(iDX, kMap.getGridWidth(), kMap.isWrapX());

	mov	ecx, DWORD PTR _kMap$[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T226515[ebp], dl
	mov	eax, DWORD PTR _kMap$[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T226519[ebp], ecx
	movzx	edx, BYTE PTR $T226515[ebp]
	test	edx, edx
	je	SHORT $LN12@dxWrap
	mov	eax, DWORD PTR $T226519[ebp]
	shr	eax, 1
	cmp	DWORD PTR _iDX$[ebp], eax
	jle	SHORT $LN11@dxWrap
	mov	ecx, DWORD PTR _iDX$[ebp]
	sub	ecx, DWORD PTR $T226519[ebp]
	mov	DWORD PTR $T226527[ebp], ecx
	jmp	SHORT $LN13@dxWrap
	jmp	SHORT $LN12@dxWrap
$LN11@dxWrap:
	mov	edx, DWORD PTR $T226519[ebp]
	shr	edx, 1
	neg	edx
	cmp	DWORD PTR _iDX$[ebp], edx
	jge	SHORT $LN12@dxWrap
	mov	eax, DWORD PTR _iDX$[ebp]
	add	eax, DWORD PTR $T226519[ebp]
	mov	DWORD PTR $T226527[ebp], eax
	jmp	SHORT $LN13@dxWrap
$LN12@dxWrap:
	mov	ecx, DWORD PTR _iDX$[ebp]
	mov	DWORD PTR $T226527[ebp], ecx
$LN13@dxWrap:
	mov	eax, DWORD PTR $T226527[ebp]

; 76   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?dxWrap@@YAHH@Z ENDP					; dxWrap
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?dyWrap@@YAHH@Z
_TEXT	SEGMENT
$T226548 = -16						; size = 4
$T226540 = -12						; size = 4
$T226536 = -5						; size = 1
_kMap$ = -4						; size = 4
_iDY$ = 8						; size = 4
?dyWrap@@YAHH@Z PROC					; dyWrap, COMDAT

; 79   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 80   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR _kMap$[ebp], eax

; 81   : 	return wrapCoordDifference(iDY, kMap.getGridHeight(), kMap.isWrapY());

	mov	ecx, DWORD PTR _kMap$[ebp]
	mov	dl, BYTE PTR [ecx+4057]
	mov	BYTE PTR $T226536[ebp], dl
	mov	eax, DWORD PTR _kMap$[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T226540[ebp], ecx
	movzx	edx, BYTE PTR $T226536[ebp]
	test	edx, edx
	je	SHORT $LN12@dyWrap
	mov	eax, DWORD PTR $T226540[ebp]
	shr	eax, 1
	cmp	DWORD PTR _iDY$[ebp], eax
	jle	SHORT $LN11@dyWrap
	mov	ecx, DWORD PTR _iDY$[ebp]
	sub	ecx, DWORD PTR $T226540[ebp]
	mov	DWORD PTR $T226548[ebp], ecx
	jmp	SHORT $LN13@dyWrap
	jmp	SHORT $LN12@dyWrap
$LN11@dyWrap:
	mov	edx, DWORD PTR $T226540[ebp]
	shr	edx, 1
	neg	edx
	cmp	DWORD PTR _iDY$[ebp], edx
	jge	SHORT $LN12@dyWrap
	mov	eax, DWORD PTR _iDY$[ebp]
	add	eax, DWORD PTR $T226540[ebp]
	mov	DWORD PTR $T226548[ebp], eax
	jmp	SHORT $LN13@dyWrap
$LN12@dyWrap:
	mov	ecx, DWORD PTR _iDY$[ebp]
	mov	DWORD PTR $T226548[ebp], ecx
$LN13@dyWrap:
	mov	eax, DWORD PTR $T226548[ebp]

; 82   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?dyWrap@@YAHH@Z ENDP					; dyWrap
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?plotXY@@YAPAVCvPlot@@HHHH@Z
_TEXT	SEGMENT
tv148 = -72						; size = 4
tv163 = -68						; size = 4
tv86 = -64						; size = 4
tv82 = -60						; size = 4
$T226670 = -56						; size = 4
$T226625 = -52						; size = 4
$T226612 = -48						; size = 4
$T226608 = -44						; size = 4
$T226594 = -40						; size = 4
$T226590 = -33						; size = 1
$T226579 = -32						; size = 4
$T226575 = -25						; size = 1
_iMapY$226669 = -24					; size = 4
_iMapX$226668 = -20					; size = 4
$T226568 = -16						; size = 4
_iPlotHexX$ = -12					; size = 4
_iPlotY$ = -8						; size = 4
_iStartHexX$ = -4					; size = 4
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
_iDX$ = 16						; size = 4
_iDY$ = 20						; size = 4
?plotXY@@YAPAVCvPlot@@HHHH@Z PROC			; plotXY, COMDAT

; 213  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H

; 214  : 	// convert the start coord to hex-space coordinates
; 215  : 	int iStartHexX = xToHexspaceX(iX, iY);

	cmp	DWORD PTR _iY$[ebp], 0
	jl	SHORT $LN5@plotXY
	mov	eax, DWORD PTR _iY$[ebp]
	sar	eax, 1
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN3@plotXY
$LN5@plotXY:
	mov	eax, DWORD PTR _iY$[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR tv82[ebp], eax
$LN3@plotXY:
	mov	ecx, DWORD PTR _iX$[ebp]
	sub	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR _iStartHexX$[ebp], ecx

; 216  : 
; 217  : 	int iPlotHexX = iStartHexX + iDX;

	mov	edx, DWORD PTR _iStartHexX$[ebp]
	add	edx, DWORD PTR _iDX$[ebp]
	mov	DWORD PTR _iPlotHexX$[ebp], edx

; 218  : 	int iPlotY = iY + iDY; // Y is the same in both coordinate systems

	mov	eax, DWORD PTR _iY$[ebp]
	add	eax, DWORD PTR _iDY$[ebp]
	mov	DWORD PTR _iPlotY$[ebp], eax

; 219  : 
; 220  : 	// convert from hex-space coordinates to the storage array
; 221  : 	iPlotHexX = hexspaceXToX(iPlotHexX, iPlotY);

	js	SHORT $LN9@plotXY
	mov	ecx, DWORD PTR _iPlotY$[ebp]
	sar	ecx, 1
	mov	DWORD PTR tv86[ebp], ecx
	jmp	SHORT $LN7@plotXY
$LN9@plotXY:
	mov	eax, DWORD PTR _iPlotY$[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR tv86[ebp], eax
$LN7@plotXY:
	mov	edx, DWORD PTR _iPlotHexX$[ebp]
	add	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR _iPlotHexX$[ebp], edx

; 222  : 
; 223  : 	return GC.getMap().plot(iPlotHexX , iPlotY);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T226568[ebp], eax
	cmp	DWORD PTR _iPlotHexX$[ebp], -2147483647	; 80000001H
	je	SHORT $LN13@plotXY
	cmp	DWORD PTR _iPlotY$[ebp], -2147483647	; 80000001H
	jne	SHORT $LN14@plotXY
$LN13@plotXY:
	mov	DWORD PTR $T226670[ebp], 0
	jmp	$LN15@plotXY
$LN14@plotXY:
	mov	ecx, DWORD PTR $T226568[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T226575[ebp], dl
	mov	eax, DWORD PTR $T226568[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T226579[ebp], ecx
	movzx	edx, BYTE PTR $T226575[ebp]
	test	edx, edx
	je	SHORT $LN26@plotXY
	cmp	DWORD PTR _iPlotHexX$[ebp], 0
	jge	SHORT $LN25@plotXY
	mov	eax, DWORD PTR _iPlotHexX$[ebp]
	cdq
	idiv	DWORD PTR $T226579[ebp]
	add	edx, DWORD PTR $T226579[ebp]
	mov	DWORD PTR _iMapX$226668[ebp], edx
	jmp	SHORT $LN27@plotXY
	jmp	SHORT $LN26@plotXY
$LN25@plotXY:
	mov	eax, DWORD PTR _iPlotHexX$[ebp]
	cmp	eax, DWORD PTR $T226579[ebp]
	jl	SHORT $LN26@plotXY
	mov	eax, DWORD PTR _iPlotHexX$[ebp]
	cdq
	idiv	DWORD PTR $T226579[ebp]
	mov	DWORD PTR _iMapX$226668[ebp], edx
	jmp	SHORT $LN27@plotXY
$LN26@plotXY:
	mov	ecx, DWORD PTR _iPlotHexX$[ebp]
	mov	DWORD PTR _iMapX$226668[ebp], ecx
$LN27@plotXY:
	mov	edx, DWORD PTR $T226568[ebp]
	mov	al, BYTE PTR [edx+4057]
	mov	BYTE PTR $T226590[ebp], al
	mov	ecx, DWORD PTR $T226568[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T226594[ebp], edx
	movzx	eax, BYTE PTR $T226590[ebp]
	test	eax, eax
	je	SHORT $LN36@plotXY
	cmp	DWORD PTR _iPlotY$[ebp], 0
	jge	SHORT $LN35@plotXY
	mov	eax, DWORD PTR _iPlotY$[ebp]
	cdq
	idiv	DWORD PTR $T226594[ebp]
	add	edx, DWORD PTR $T226594[ebp]
	mov	DWORD PTR _iMapY$226669[ebp], edx
	jmp	SHORT $LN37@plotXY
	jmp	SHORT $LN36@plotXY
$LN35@plotXY:
	mov	ecx, DWORD PTR _iPlotY$[ebp]
	cmp	ecx, DWORD PTR $T226594[ebp]
	jl	SHORT $LN36@plotXY
	mov	eax, DWORD PTR _iPlotY$[ebp]
	cdq
	idiv	DWORD PTR $T226594[ebp]
	mov	DWORD PTR _iMapY$226669[ebp], edx
	jmp	SHORT $LN37@plotXY
$LN36@plotXY:
	mov	edx, DWORD PTR _iPlotY$[ebp]
	mov	DWORD PTR _iMapY$226669[ebp], edx
$LN37@plotXY:
	cmp	DWORD PTR _iMapX$226668[ebp], 0
	jl	SHORT $LN41@plotXY
	mov	eax, DWORD PTR $T226568[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T226608[ebp], ecx
	mov	edx, DWORD PTR _iMapX$226668[ebp]
	cmp	edx, DWORD PTR $T226608[ebp]
	jge	SHORT $LN41@plotXY
	cmp	DWORD PTR _iMapY$226669[ebp], 0
	jl	SHORT $LN41@plotXY
	mov	eax, DWORD PTR $T226568[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T226612[ebp], ecx
	mov	edx, DWORD PTR _iMapY$226669[ebp]
	cmp	edx, DWORD PTR $T226612[ebp]
	jge	SHORT $LN41@plotXY
	mov	DWORD PTR tv163[ebp], 1
	jmp	SHORT $LN39@plotXY
$LN41@plotXY:
	mov	DWORD PTR tv163[ebp], 0
$LN39@plotXY:
	cmp	DWORD PTR tv163[ebp], 0
	je	SHORT $LN17@plotXY
	mov	eax, DWORD PTR $T226568[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T226625[ebp], ecx
	mov	edx, DWORD PTR _iMapY$226669[ebp]
	imul	edx, DWORD PTR $T226625[ebp]
	add	edx, DWORD PTR _iMapX$226668[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T226568[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv148[ebp], edx
	jmp	SHORT $LN18@plotXY
$LN17@plotXY:
	mov	DWORD PTR tv148[ebp], 0
$LN18@plotXY:
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR $T226670[ebp], ecx
$LN15@plotXY:
	mov	eax, DWORD PTR $T226670[ebp]

; 224  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?plotXY@@YAPAVCvPlot@@HHHH@Z ENDP			; plotXY
_TEXT	ENDS
PUBLIC	?IsAnyPlotBlockaded@CvCityCitizens@@QBE_NXZ	; CvCityCitizens::IsAnyPlotBlockaded
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvcitycitizens.cpp
;	COMDAT ?IsAnyPlotBlockaded@CvCityCitizens@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_iPlotLoop$225053 = -8					; size = 4
_pLoopPlot$ = -4					; size = 4
?IsAnyPlotBlockaded@CvCityCitizens@@QBE_NXZ PROC	; CvCityCitizens::IsAnyPlotBlockaded, COMDAT
; _this$ = ecx

; 2785 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2786 : 	CvPlot* pLoopPlot;
; 2787 : 
; 2788 : 	// Look at all workable Plots
; 2789 : 	for(int iPlotLoop = 0; iPlotLoop < NUM_CITY_PLOTS; iPlotLoop++)

	mov	DWORD PTR _iPlotLoop$225053[ebp], 0
	jmp	SHORT $LN6@IsAnyPlotB
$LN5@IsAnyPlotB:
	mov	eax, DWORD PTR _iPlotLoop$225053[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlotLoop$225053[ebp], eax
$LN6@IsAnyPlotB:
	cmp	DWORD PTR _iPlotLoop$225053[ebp], 37	; 00000025H
	jge	SHORT $LN4@IsAnyPlotB

; 2790 : 	{
; 2791 : 		if(iPlotLoop != CITY_HOME_PLOT)

	cmp	DWORD PTR _iPlotLoop$225053[ebp], 0
	je	SHORT $LN3@IsAnyPlotB

; 2792 : 		{
; 2793 : 			pLoopPlot = GetCityPlotFromIndex(iPlotLoop);

	mov	ecx, DWORD PTR _iPlotLoop$225053[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z ; CvCityCitizens::GetCityPlotFromIndex
	mov	DWORD PTR _pLoopPlot$[ebp], eax

; 2794 : 
; 2795 : 			if(pLoopPlot != NULL)

	cmp	DWORD PTR _pLoopPlot$[ebp], 0
	je	SHORT $LN3@IsAnyPlotB

; 2796 : 			{
; 2797 : 				if(IsPlotBlockaded(pLoopPlot))

	mov	edx, DWORD PTR _pLoopPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsPlotBlockaded@CvCityCitizens@@QBE_NPAVCvPlot@@@Z ; CvCityCitizens::IsPlotBlockaded
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@IsAnyPlotB

; 2798 : 				{
; 2799 : 					return true;

	mov	al, 1
	jmp	SHORT $LN7@IsAnyPlotB
$LN3@IsAnyPlotB:

; 2800 : 				}
; 2801 : 			}
; 2802 : 		}
; 2803 : 	}

	jmp	SHORT $LN5@IsAnyPlotB
$LN4@IsAnyPlotB:

; 2804 : 
; 2805 : 	return false;

	xor	al, al
$LN7@IsAnyPlotB:

; 2806 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsAnyPlotBlockaded@CvCityCitizens@@QBE_NXZ ENDP	; CvCityCitizens::IsAnyPlotBlockaded
_TEXT	ENDS
PUBLIC	?DoVerifyWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@@Z ; CvCityCitizens::DoVerifyWorkingPlot
; Function compile flags: /Odtp
;	COMDAT ?DoVerifyWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pPlot$ = 8						; size = 4
?DoVerifyWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@@Z PROC ; CvCityCitizens::DoVerifyWorkingPlot, COMDAT
; _this$ = ecx

; 2846 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2847 : #endif
; 2848 : 	if(pPlot != NULL)

	cmp	DWORD PTR _pPlot$[ebp], 0
	je	SHORT $LN4@DoVerifyWo

; 2849 : 	{
; 2850 : 		if(IsWorkingPlot(pPlot))

	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsWorkingPlot
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@DoVerifyWo

; 2851 : 		{
; 2852 : 			if(!IsCanWork(pPlot))

	mov	edx, DWORD PTR _pPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCanWork@CvCityCitizens@@QBE_NPAVCvPlot@@@Z ; CvCityCitizens::IsCanWork
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@DoVerifyWo

; 2853 : 			{
; 2854 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 2855 : 				bRet = true;
; 2856 : #endif
; 2857 : 				SetWorkingPlot(pPlot, false);

	push	1
	push	0
	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@_N1@Z ; CvCityCitizens::SetWorkingPlot

; 2858 : 				DoAddBestCitizenFromUnassigned();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoAddBestCitizenFromUnassigned@CvCityCitizens@@QAE_NXZ ; CvCityCitizens::DoAddBestCitizenFromUnassigned
$LN4@DoVerifyWo:

; 2859 : 			}
; 2860 : 		}
; 2861 : 	}
; 2862 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 2863 : 	return bRet;
; 2864 : #endif
; 2865 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?DoVerifyWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@@Z ENDP ; CvCityCitizens::DoVerifyWorkingPlot
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?DoVerifyWorkingPlots@CvCityCitizens@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_pPlot$ = -8						; size = 4
_iI$ = -4						; size = 4
?DoVerifyWorkingPlots@CvCityCitizens@@QAEXXZ PROC	; CvCityCitizens::DoVerifyWorkingPlots, COMDAT
; _this$ = ecx

; 2869 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2870 : 	int iI;
; 2871 : 	CvPlot* pPlot;
; 2872 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 2873 : 	bool bDoSelfConsistency = false;
; 2874 : #endif
; 2875 : 
; 2876 : 	for(iI = 0; iI < NUM_CITY_PLOTS; iI++)

	mov	DWORD PTR _iI$[ebp], 0
	jmp	SHORT $LN3@DoVerifyWo@2
$LN2@DoVerifyWo@2:
	mov	eax, DWORD PTR _iI$[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$[ebp], eax
$LN3@DoVerifyWo@2:
	cmp	DWORD PTR _iI$[ebp], 37			; 00000025H
	jge	SHORT $LN4@DoVerifyWo@2

; 2877 : 	{
; 2878 : 		pPlot = GetCityPlotFromIndex(iI);

	mov	ecx, DWORD PTR _iI$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z ; CvCityCitizens::GetCityPlotFromIndex
	mov	DWORD PTR _pPlot$[ebp], eax

; 2879 : 
; 2880 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 2881 : 		bDoSelfConsistency = DoVerifyWorkingPlot(pPlot) || bDoSelfConsistency;
; 2882 : #else
; 2883 : 		DoVerifyWorkingPlot(pPlot);

	mov	edx, DWORD PTR _pPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoVerifyWorkingPlot@CvCityCitizens@@QAEXPAVCvPlot@@@Z ; CvCityCitizens::DoVerifyWorkingPlot
	jmp	SHORT $LN2@DoVerifyWo@2
$LN4@DoVerifyWo@2:

; 2884 : #endif
; 2885 : 	}
; 2886 : 
; 2887 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 2888 : 	if (bDoSelfConsistency)
; 2889 : 		DoSelfConsistencyCheck();
; 2890 : #endif
; 2891 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoVerifyWorkingPlots@CvCityCitizens@@QAEXXZ ENDP	; CvCityCitizens::DoVerifyWorkingPlots
_TEXT	ENDS
EXTRN	?plotCityXY@@YAHPBVCvCity@@PBVCvPlot@@@Z:PROC	; plotCityXY
; Function compile flags: /Odtp
;	COMDAT ?GetCityIndexFromPlot@CvCityCitizens@@QBEHPBVCvPlot@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pPlot$ = 8						; size = 4
?GetCityIndexFromPlot@CvCityCitizens@@QBEHPBVCvPlot@@@Z PROC ; CvCityCitizens::GetCityIndexFromPlot, COMDAT
; _this$ = ecx

; 2905 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2906 : 	return plotCityXY(m_pCity, pPlot);

	mov	eax, DWORD PTR _pPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?plotCityXY@@YAHPBVCvCity@@PBVCvPlot@@@Z ; plotCityXY
	add	esp, 8

; 2907 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCityIndexFromPlot@CvCityCitizens@@QBEHPBVCvPlot@@@Z ENDP ; CvCityCitizens::GetCityIndexFromPlot
_TEXT	ENDS
EXTRN	?plotCity@@YAPAVCvPlot@@HHH@Z:PROC		; plotCity
; Function compile flags: /Odtp
;	COMDAT ?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T226698 = -8						; size = 4
$T226689 = -4						; size = 4
_iIndex$ = 8						; size = 4
?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z PROC ; CvCityCitizens::GetCityPlotFromIndex, COMDAT
; _this$ = ecx

; 2912 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2913 : 	return plotCity(m_pCity->getX(), m_pCity->getY(), iIndex);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T226689[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T226698[ebp], edx
	mov	eax, DWORD PTR _iIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T226689[ebp]
	push	ecx
	mov	edx, DWORD PTR $T226698[ebp]
	push	edx
	call	?plotCity@@YAPAVCvPlot@@HHH@Z		; plotCity
	add	esp, 12					; 0000000cH

; 2914 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z ENDP ; CvCityCitizens::GetCityPlotFromIndex
_TEXT	ENDS
PUBLIC	?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z ; CvCityCitizens::DoSpawnGreatPerson
PUBLIC	?DoResetSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QAEXW4SpecialistTypes@@@Z ; CvCityCitizens::DoResetSpecialistGreatPersonProgressTimes100
PUBLIC	?GetSpecialistGreatPersonProgress@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ; CvCityCitizens::GetSpecialistGreatPersonProgress
PUBLIC	?ChangeSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QAEXW4SpecialistTypes@@H@Z ; CvCityCitizens::ChangeSpecialistGreatPersonProgressTimes100
PUBLIC	??_C@_0BD@EAEEACNP@UNITCLASS_ENGINEER?$AA@	; `string'
PUBLIC	??_C@_0BD@GIKGAGAO@UNITCLASS_MERCHANT?$AA@	; `string'
PUBLIC	??_C@_0BD@BKOELLOP@UNITCLASS_MUSICIAN?$AA@	; `string'
PUBLIC	??_C@_0BB@ILPBPHBP@UNITCLASS_ARTIST?$AA@	; `string'
PUBLIC	??_C@_0BB@PLANPKNO@UNITCLASS_WRITER?$AA@	; `string'
PUBLIC	??_C@_0BE@NHLKBGBE@UNITCLASS_SCIENTIST?$AA@	; `string'
PUBLIC	?GetBuildingGreatPeopleRateChanges@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ; CvCityCitizens::GetBuildingGreatPeopleRateChanges
PUBLIC	?GetSpecialistCount@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ; CvCityCitizens::GetSpecialistCount
PUBLIC	?GetSpecialistUpgradeThreshold@CvCityCitizens@@QAEHW4UnitClassTypes@@@Z ; CvCityCitizens::GetSpecialistUpgradeThreshold
EXTRN	?getCivilizationUnits@CvCivilizationInfo@@QBEHH@Z:PROC ; CvCivilizationInfo::getCivilizationUnits
EXTRN	?getCivilizationInfo@CvGlobals@@QAEPAVCvCivilizationInfo@@W4CivilizationTypes@@@Z:PROC ; CvGlobals::getCivilizationInfo
EXTRN	?getCivilizationType@CvCity@@QBE?AW4CivilizationTypes@@XZ:PROC ; CvCity::getCivilizationType
EXTRN	?getGreatEngineerRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatEngineerRateModifier
EXTRN	?getGreatMerchantRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatMerchantRateModifier
EXTRN	?getGreatMusicianRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatMusicianRateModifier
EXTRN	?calculateTotalYield@CvPlayer@@QBEHW4YieldTypes@@@Z:PROC ; CvPlayer::calculateTotalYield
EXTRN	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z:PROC ; CvPlayerPolicies::GetNumericModifier
EXTRN	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ:PROC ; CvPlayer::GetPlayerPolicies
EXTRN	?getGreatArtistRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatArtistRateModifier
EXTRN	?getGreatWriterRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatWriterRateModifier
EXTRN	?isGoldenAge@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isGoldenAge
EXTRN	?getGreatScientistRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatScientistRateModifier
EXTRN	?getGreatPeopleRateModifier@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatPeopleRateModifier
EXTRN	?getGreatPeopleRateModifier@CvCity@@QBEHXZ:PROC	; CvCity::getGreatPeopleRateModifier
EXTRN	?getGreatPeopleUnitClass@CvSpecialistInfo@@QBEHXZ:PROC ; CvSpecialistInfo::getGreatPeopleUnitClass
;	COMDAT ??_C@_0BD@EAEEACNP@UNITCLASS_ENGINEER?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
CONST	SEGMENT
??_C@_0BD@EAEEACNP@UNITCLASS_ENGINEER?$AA@ DB 'UNITCLASS_ENGINEER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GIKGAGAO@UNITCLASS_MERCHANT?$AA@
CONST	SEGMENT
??_C@_0BD@GIKGAGAO@UNITCLASS_MERCHANT?$AA@ DB 'UNITCLASS_MERCHANT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BKOELLOP@UNITCLASS_MUSICIAN?$AA@
CONST	SEGMENT
??_C@_0BD@BKOELLOP@UNITCLASS_MUSICIAN?$AA@ DB 'UNITCLASS_MUSICIAN', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ILPBPHBP@UNITCLASS_ARTIST?$AA@
CONST	SEGMENT
??_C@_0BB@ILPBPHBP@UNITCLASS_ARTIST?$AA@ DB 'UNITCLASS_ARTIST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PLANPKNO@UNITCLASS_WRITER?$AA@
CONST	SEGMENT
??_C@_0BB@PLANPKNO@UNITCLASS_WRITER?$AA@ DB 'UNITCLASS_WRITER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NHLKBGBE@UNITCLASS_SCIENTIST?$AA@
CONST	SEGMENT
??_C@_0BE@NHLKBGBE@UNITCLASS_SCIENTIST?$AA@ DB 'UNITCLASS_SCIENTIST', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvcitycitizens.cpp
CONST	ENDS
;	COMDAT ?DoSpecialists@CvCityCitizens@@QAEXXZ
_TEXT	SEGMENT
_this$ = -88						; size = 4
$T226729 = -84						; size = 4
$T226725 = -80						; size = 4
$T226724 = -76						; size = 4
$T226715 = -72						; size = 4
$T226714 = -68						; size = 4
$T226710 = -64						; size = 4
$T226709 = -60						; size = 4
$T226705 = -56						; size = 4
$T226704 = -52						; size = 4
_eUnit$225136 = -48					; size = 4
_eCivilization$225133 = -44				; size = 4
_pCivilizationInfo$225134 = -40				; size = 4
_eUnitClass$225131 = -36				; size = 4
_iProductionToGreatMusiciansModifier$225119 = -32	; size = 4
_iGPThreshold$225097 = -28				; size = 4
_eSpecialist$225093 = -24				; size = 4
_pkSpecialistInfo$225095 = -20				; size = 4
_iSpecialistLoop$225089 = -16				; size = 4
_iCount$ = -12						; size = 4
_iGPPChange$ = -8					; size = 4
_iMod$ = -4						; size = 4
?DoSpecialists@CvCityCitizens@@QAEXXZ PROC		; CvCityCitizens::DoSpecialists, COMDAT
; _this$ = ecx

; 3019 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 3020 : #ifndef AUI_YIELDS_APPLIED_AFTER_TURN_NOT_BEFORE
; 3021 : 	int iGPPChange;
; 3022 : 	int iCount;
; 3023 : 	int iMod;
; 3024 : #endif
; 3025 : #ifdef AUI_WARNING_FIXES
; 3026 : 	for (uint iSpecialistLoop = 0; iSpecialistLoop < GC.getNumSpecialistInfos(); iSpecialistLoop++)
; 3027 : #else
; 3028 : 	for(int iSpecialistLoop = 0; iSpecialistLoop < GC.getNumSpecialistInfos(); iSpecialistLoop++)

	mov	DWORD PTR _iSpecialistLoop$225089[ebp], 0
	jmp	SHORT $LN24@DoSpeciali
$LN23@DoSpeciali:
	mov	eax, DWORD PTR _iSpecialistLoop$225089[ebp]
	add	eax, 1
	mov	DWORD PTR _iSpecialistLoop$225089[ebp], eax
$LN24@DoSpeciali:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	cmp	DWORD PTR _iSpecialistLoop$225089[ebp], eax
	jge	$LN25@DoSpeciali

; 3029 : #endif
; 3030 : 	{
; 3031 : 		const SpecialistTypes eSpecialist = static_cast<SpecialistTypes>(iSpecialistLoop);

	mov	ecx, DWORD PTR _iSpecialistLoop$225089[ebp]
	mov	DWORD PTR _eSpecialist$225093[ebp], ecx

; 3032 : 		CvSpecialistInfo* pkSpecialistInfo = GC.getSpecialistInfo(eSpecialist);

	mov	edx, DWORD PTR _eSpecialist$225093[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getSpecialistInfo@CvGlobals@@QAEPAVCvSpecialistInfo@@W4SpecialistTypes@@@Z ; CvGlobals::getSpecialistInfo
	mov	DWORD PTR _pkSpecialistInfo$225095[ebp], eax

; 3033 : 		if(pkSpecialistInfo)

	cmp	DWORD PTR _pkSpecialistInfo$225095[ebp], 0
	je	$LN21@DoSpeciali

; 3034 : 		{
; 3035 : #ifdef AUI_YIELDS_APPLIED_AFTER_TURN_NOT_BEFORE
; 3036 : 			UnitClassTypes eGPUnitClassType = (UnitClassTypes)pkSpecialistInfo->getGreatPeopleUnitClass();
; 3037 : 			if (eGPUnitClassType != NO_UNITCLASS)
; 3038 : 			{
; 3039 : 				ChangeSpecialistGreatPersonProgressTimes100(eSpecialist, getCachedGPChangeT100ForThisTurn(eSpecialist));
; 3040 : 
; 3041 : 				int iGPThreshold = GetSpecialistUpgradeThreshold(eGPUnitClassType);
; 3042 : #else
; 3043 : 			int iGPThreshold = GetSpecialistUpgradeThreshold((UnitClassTypes)pkSpecialistInfo->getGreatPeopleUnitClass());

	mov	ecx, DWORD PTR _pkSpecialistInfo$225095[ebp]
	call	?getGreatPeopleUnitClass@CvSpecialistInfo@@QBEHXZ ; CvSpecialistInfo::getGreatPeopleUnitClass
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSpecialistUpgradeThreshold@CvCityCitizens@@QAEHW4UnitClassTypes@@@Z ; CvCityCitizens::GetSpecialistUpgradeThreshold
	mov	DWORD PTR _iGPThreshold$225097[ebp], eax

; 3044 : 
; 3045 : 			// Does this Specialist spawn a GP?
; 3046 : 			if(pkSpecialistInfo->getGreatPeopleUnitClass() != NO_UNITCLASS)

	mov	ecx, DWORD PTR _pkSpecialistInfo$225095[ebp]
	call	?getGreatPeopleUnitClass@CvSpecialistInfo@@QBEHXZ ; CvSpecialistInfo::getGreatPeopleUnitClass
	cmp	eax, -1
	je	$LN21@DoSpeciali

; 3047 : 			{
; 3048 : 				iCount = GetSpecialistCount(eSpecialist);

	mov	eax, DWORD PTR _eSpecialist$225093[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSpecialistCount@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ; CvCityCitizens::GetSpecialistCount
	mov	DWORD PTR _iCount$[ebp], eax

; 3049 : 
; 3050 : 				// GPP from Specialists
; 3051 : 				iGPPChange = pkSpecialistInfo->getGreatPeopleRateChange() * iCount * 100;

	mov	ecx, DWORD PTR _pkSpecialistInfo$225095[ebp]
	call	?getGreatPeopleRateChange@CvSpecialistInfo@@QBEHXZ ; CvSpecialistInfo::getGreatPeopleRateChange
	imul	eax, DWORD PTR _iCount$[ebp]
	imul	eax, 100				; 00000064H
	mov	DWORD PTR _iGPPChange$[ebp], eax

; 3052 : 
; 3053 : 				// GPP from Buildings
; 3054 : 				iGPPChange += GetBuildingGreatPeopleRateChanges(eSpecialist) * 100;

	mov	ecx, DWORD PTR _eSpecialist$225093[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBuildingGreatPeopleRateChanges@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ; CvCityCitizens::GetBuildingGreatPeopleRateChanges
	imul	eax, 100				; 00000064H
	add	eax, DWORD PTR _iGPPChange$[ebp]
	mov	DWORD PTR _iGPPChange$[ebp], eax

; 3055 : 
; 3056 : 				if(iGPPChange > 0)

	cmp	DWORD PTR _iGPPChange$[ebp], 0
	jle	$LN19@DoSpeciali

; 3057 : 				{
; 3058 : 					iMod = 0;

	mov	DWORD PTR _iMod$[ebp], 0

; 3059 : 
; 3060 : 					// City mod
; 3061 : 					iMod += GetCity()->getGreatPeopleRateModifier();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?getGreatPeopleRateModifier@CvCity@@QBEHXZ ; CvCity::getGreatPeopleRateModifier
	add	eax, DWORD PTR _iMod$[ebp]
	mov	DWORD PTR _iMod$[ebp], eax

; 3062 : 
; 3063 : 					// Player mod
; 3064 : 					iMod += GetPlayer()->getGreatPeopleRateModifier();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?getGreatPeopleRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatPeopleRateModifier
	add	eax, DWORD PTR _iMod$[ebp]
	mov	DWORD PTR _iMod$[ebp], eax

; 3065 : 
; 3066 : 					// Player and Golden Age mods to this specific class
; 3067 : 					if((UnitClassTypes)pkSpecialistInfo->getGreatPeopleUnitClass() == GC.getInfoTypeForString("UNITCLASS_SCIENTIST"))

	mov	ecx, DWORD PTR _pkSpecialistInfo$225095[ebp]
	call	?getGreatPeopleUnitClass@CvSpecialistInfo@@QBEHXZ ; CvSpecialistInfo::getGreatPeopleUnitClass
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0BE@NHLKBGBE@UNITCLASS_SCIENTIST?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jne	SHORT $LN18@DoSpeciali

; 3068 : 					{
; 3069 : 						iMod += GetPlayer()->getGreatScientistRateModifier();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?getGreatScientistRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatScientistRateModifier
	add	eax, DWORD PTR _iMod$[ebp]
	mov	DWORD PTR _iMod$[ebp], eax
	jmp	$LN17@DoSpeciali
$LN18@DoSpeciali:

; 3070 : 					}
; 3071 : 					else if((UnitClassTypes)pkSpecialistInfo->getGreatPeopleUnitClass() == GC.getInfoTypeForString("UNITCLASS_WRITER"))

	mov	ecx, DWORD PTR _pkSpecialistInfo$225095[ebp]
	call	?getGreatPeopleUnitClass@CvSpecialistInfo@@QBEHXZ ; CvSpecialistInfo::getGreatPeopleUnitClass
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0BB@PLANPKNO@UNITCLASS_WRITER?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jne	SHORT $LN16@DoSpeciali

; 3072 : 					{ 
; 3073 : 						if (GetPlayer()->isGoldenAge())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?isGoldenAge@CvPlayer@@QBE_NXZ		; CvPlayer::isGoldenAge
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN15@DoSpeciali

; 3074 : 						{
; 3075 : 							iMod += GetPlayer()->GetPlayerTraits()->GetGoldenAgeGreatWriterRateModifier();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T226704[ebp], eax
	mov	eax, DWORD PTR $T226704[ebp]
	mov	ecx, DWORD PTR [eax+196]
	mov	DWORD PTR $T226705[ebp], ecx
	mov	edx, DWORD PTR _iMod$[ebp]
	add	edx, DWORD PTR $T226705[ebp]
	mov	DWORD PTR _iMod$[ebp], edx
$LN15@DoSpeciali:

; 3076 : 						}
; 3077 : 						iMod += GetPlayer()->getGreatWriterRateModifier();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?getGreatWriterRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatWriterRateModifier
	add	eax, DWORD PTR _iMod$[ebp]
	mov	DWORD PTR _iMod$[ebp], eax
	jmp	$LN17@DoSpeciali
$LN16@DoSpeciali:

; 3078 : 					}
; 3079 : 					else if((UnitClassTypes)pkSpecialistInfo->getGreatPeopleUnitClass() == GC.getInfoTypeForString("UNITCLASS_ARTIST"))

	mov	ecx, DWORD PTR _pkSpecialistInfo$225095[ebp]
	call	?getGreatPeopleUnitClass@CvSpecialistInfo@@QBEHXZ ; CvSpecialistInfo::getGreatPeopleUnitClass
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0BB@ILPBPHBP@UNITCLASS_ARTIST?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jne	SHORT $LN13@DoSpeciali

; 3080 : 					{
; 3081 : 						if (GetPlayer()->isGoldenAge())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?isGoldenAge@CvPlayer@@QBE_NXZ		; CvPlayer::isGoldenAge
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@DoSpeciali

; 3082 : 						{
; 3083 : 							iMod += GetPlayer()->GetPlayerTraits()->GetGoldenAgeGreatArtistRateModifier();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T226709[ebp], eax
	mov	ecx, DWORD PTR $T226709[ebp]
	mov	edx, DWORD PTR [ecx+188]
	mov	DWORD PTR $T226710[ebp], edx
	mov	eax, DWORD PTR _iMod$[ebp]
	add	eax, DWORD PTR $T226710[ebp]
	mov	DWORD PTR _iMod$[ebp], eax
$LN12@DoSpeciali:

; 3084 : 						}
; 3085 : 						iMod += GetPlayer()->getGreatArtistRateModifier();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?getGreatArtistRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatArtistRateModifier
	add	eax, DWORD PTR _iMod$[ebp]
	mov	DWORD PTR _iMod$[ebp], eax
	jmp	$LN17@DoSpeciali
$LN13@DoSpeciali:

; 3086 : 					}
; 3087 : 					else if((UnitClassTypes)pkSpecialistInfo->getGreatPeopleUnitClass() == GC.getInfoTypeForString("UNITCLASS_MUSICIAN"))

	mov	ecx, DWORD PTR _pkSpecialistInfo$225095[ebp]
	call	?getGreatPeopleUnitClass@CvSpecialistInfo@@QBEHXZ ; CvSpecialistInfo::getGreatPeopleUnitClass
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0BD@BKOELLOP@UNITCLASS_MUSICIAN?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jne	$LN10@DoSpeciali

; 3088 : 					{
; 3089 : 						if (GetPlayer()->isGoldenAge())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?isGoldenAge@CvPlayer@@QBE_NXZ		; CvPlayer::isGoldenAge
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@DoSpeciali

; 3090 : 						{
; 3091 : 							iMod += GetPlayer()->GetPlayerTraits()->GetGoldenAgeGreatMusicianRateModifier();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T226714[ebp], eax
	mov	edx, DWORD PTR $T226714[ebp]
	mov	eax, DWORD PTR [edx+192]
	mov	DWORD PTR $T226715[ebp], eax
	mov	ecx, DWORD PTR _iMod$[ebp]
	add	ecx, DWORD PTR $T226715[ebp]
	mov	DWORD PTR _iMod$[ebp], ecx
$LN9@DoSpeciali:

; 3092 : 						}
; 3093 : #ifdef NQ_PRODUCTION_TO_GREAT_MUSICIANS_MODIFIER_FROM_POLICIES
; 3094 : 						int iProductionToGreatMusiciansModifier = GetPlayer()->GetPlayerPolicies()->GetNumericModifier(POLICYMOD_PRODUCTION_TO_GREAT_MUSICIANS_MODIFIER);

	push	47					; 0000002fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumericModifier@CvPlayerPolicies@@QAEHW4PolicyModifierType@@@Z ; CvPlayerPolicies::GetNumericModifier
	mov	DWORD PTR _iProductionToGreatMusiciansModifier$225119[ebp], eax

; 3095 : 						if (iProductionToGreatMusiciansModifier > 0)

	cmp	DWORD PTR _iProductionToGreatMusiciansModifier$225119[ebp], 0
	jle	SHORT $LN8@DoSpeciali

; 3096 : 						{
; 3097 : 							iMod += GetPlayer()->calculateTotalYield(YIELD_PRODUCTION) * iProductionToGreatMusiciansModifier / 100;

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?calculateTotalYield@CvPlayer@@QBEHW4YieldTypes@@@Z ; CvPlayer::calculateTotalYield
	imul	eax, DWORD PTR _iProductionToGreatMusiciansModifier$225119[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	add	eax, DWORD PTR _iMod$[ebp]
	mov	DWORD PTR _iMod$[ebp], eax
$LN8@DoSpeciali:

; 3098 : 						}
; 3099 : #endif
; 3100 : 						iMod += GetPlayer()->getGreatMusicianRateModifier();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?getGreatMusicianRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatMusicianRateModifier
	add	eax, DWORD PTR _iMod$[ebp]
	mov	DWORD PTR _iMod$[ebp], eax
	jmp	SHORT $LN17@DoSpeciali
$LN10@DoSpeciali:

; 3101 : 					}
; 3102 : 					else if((UnitClassTypes)pkSpecialistInfo->getGreatPeopleUnitClass() == GC.getInfoTypeForString("UNITCLASS_MERCHANT"))

	mov	ecx, DWORD PTR _pkSpecialistInfo$225095[ebp]
	call	?getGreatPeopleUnitClass@CvSpecialistInfo@@QBEHXZ ; CvSpecialistInfo::getGreatPeopleUnitClass
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0BD@GIKGAGAO@UNITCLASS_MERCHANT?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jne	SHORT $LN6@DoSpeciali

; 3103 : 					{
; 3104 : 						iMod += GetPlayer()->getGreatMerchantRateModifier();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?getGreatMerchantRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatMerchantRateModifier
	add	eax, DWORD PTR _iMod$[ebp]
	mov	DWORD PTR _iMod$[ebp], eax
	jmp	SHORT $LN17@DoSpeciali
$LN6@DoSpeciali:

; 3105 : 					}
; 3106 : 					else if((UnitClassTypes)pkSpecialistInfo->getGreatPeopleUnitClass() == GC.getInfoTypeForString("UNITCLASS_ENGINEER"))

	mov	ecx, DWORD PTR _pkSpecialistInfo$225095[ebp]
	call	?getGreatPeopleUnitClass@CvSpecialistInfo@@QBEHXZ ; CvSpecialistInfo::getGreatPeopleUnitClass
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0BD@EAEEACNP@UNITCLASS_ENGINEER?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jne	SHORT $LN17@DoSpeciali

; 3107 : 					{
; 3108 : 						iMod += GetPlayer()->getGreatEngineerRateModifier();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayer@CvCityCitizens@@QAEPAVCvPlayer@@XZ ; CvCityCitizens::GetPlayer
	mov	ecx, eax
	call	?getGreatEngineerRateModifier@CvPlayer@@QBEHXZ ; CvPlayer::getGreatEngineerRateModifier
	add	eax, DWORD PTR _iMod$[ebp]
	mov	DWORD PTR _iMod$[ebp], eax
$LN17@DoSpeciali:

; 3109 : 					}
; 3110 : 
; 3111 : 					// Apply mod
; 3112 : 					iGPPChange *= (100 + iMod);

	mov	edx, DWORD PTR _iMod$[ebp]
	add	edx, 100				; 00000064H
	imul	edx, DWORD PTR _iGPPChange$[ebp]
	mov	DWORD PTR _iGPPChange$[ebp], edx

; 3113 : 					iGPPChange /= 100;

	mov	eax, DWORD PTR _iGPPChange$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iGPPChange$[ebp], eax

; 3114 : 
; 3115 : 					ChangeSpecialistGreatPersonProgressTimes100(eSpecialist, iGPPChange);

	mov	edx, DWORD PTR _iGPPChange$[ebp]
	push	edx
	mov	eax, DWORD PTR _eSpecialist$225093[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QAEXW4SpecialistTypes@@H@Z ; CvCityCitizens::ChangeSpecialistGreatPersonProgressTimes100
$LN19@DoSpeciali:

; 3116 : 				}
; 3117 : #endif
; 3118 : 
; 3119 : 				// Enough to spawn a GP?
; 3120 : 				if(GetSpecialistGreatPersonProgress(eSpecialist) >= iGPThreshold)

	mov	ecx, DWORD PTR _eSpecialist$225093[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSpecialistGreatPersonProgress@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ; CvCityCitizens::GetSpecialistGreatPersonProgress
	cmp	eax, DWORD PTR _iGPThreshold$225097[ebp]
	jl	$LN21@DoSpeciali

; 3121 : 				{
; 3122 : 					// No Minors
; 3123 : 					if(!GET_PLAYER(GetCity()->getOwner()).isMinorCiv())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	DWORD PTR $T226724[ebp], eax
	mov	edx, DWORD PTR $T226724[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T226725[ebp], eax
	mov	ecx, DWORD PTR $T226725[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T226729[ebp], ecx
	mov	ecx, DWORD PTR $T226729[ebp]
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN21@DoSpeciali

; 3124 : 					{
; 3125 : 						// Reset progress on this Specialist
; 3126 : 						DoResetSpecialistGreatPersonProgressTimes100(eSpecialist);

	mov	eax, DWORD PTR _eSpecialist$225093[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoResetSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QAEXW4SpecialistTypes@@@Z ; CvCityCitizens::DoResetSpecialistGreatPersonProgressTimes100

; 3127 : 
; 3128 : 						// Now... actually create the GP!
; 3129 : 						const UnitClassTypes eUnitClass = (UnitClassTypes) pkSpecialistInfo->getGreatPeopleUnitClass();

	mov	ecx, DWORD PTR _pkSpecialistInfo$225095[ebp]
	call	?getGreatPeopleUnitClass@CvSpecialistInfo@@QBEHXZ ; CvSpecialistInfo::getGreatPeopleUnitClass
	mov	DWORD PTR _eUnitClass$225131[ebp], eax

; 3130 : 						const CivilizationTypes eCivilization = GetCity()->getCivilizationType();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?getCivilizationType@CvCity@@QBE?AW4CivilizationTypes@@XZ ; CvCity::getCivilizationType
	mov	DWORD PTR _eCivilization$225133[ebp], eax

; 3131 : 						CvCivilizationInfo* pCivilizationInfo = GC.getCivilizationInfo(eCivilization);

	mov	ecx, DWORD PTR _eCivilization$225133[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getCivilizationInfo@CvGlobals@@QAEPAVCvCivilizationInfo@@W4CivilizationTypes@@@Z ; CvGlobals::getCivilizationInfo
	mov	DWORD PTR _pCivilizationInfo$225134[ebp], eax

; 3132 : 						if(pCivilizationInfo != NULL)

	cmp	DWORD PTR _pCivilizationInfo$225134[ebp], 0
	je	SHORT $LN21@DoSpeciali

; 3133 : 						{
; 3134 : 							UnitTypes eUnit = (UnitTypes) pCivilizationInfo->getCivilizationUnits(eUnitClass);

	mov	edx, DWORD PTR _eUnitClass$225131[ebp]
	push	edx
	mov	ecx, DWORD PTR _pCivilizationInfo$225134[ebp]
	call	?getCivilizationUnits@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationUnits
	mov	DWORD PTR _eUnit$225136[ebp], eax

; 3135 : 
; 3136 : 							DoSpawnGreatPerson(eUnit, true, false);

	push	0
	push	1
	mov	eax, DWORD PTR _eUnit$225136[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z ; CvCityCitizens::DoSpawnGreatPerson
$LN21@DoSpeciali:

; 3137 : 						}
; 3138 : 					}
; 3139 : 				}
; 3140 : 			}
; 3141 : 		}

	jmp	$LN23@DoSpeciali
$LN25@DoSpeciali:

; 3142 : 	}
; 3143 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?DoSpecialists@CvCityCitizens@@QAEXXZ ENDP		; CvCityCitizens::DoSpecialists
_TEXT	ENDS
EXTRN	?GetSpecialistCount@CvBuildingEntry@@QBEHXZ:PROC ; CvBuildingEntry::GetSpecialistCount
; Function compile flags: /Odtp
;	COMDAT ?GetNumSpecialistsAllowedByBuilding@CvCityCitizens@@QAEHABVCvBuildingEntry@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_kBuilding$ = 8						; size = 4
?GetNumSpecialistsAllowedByBuilding@CvCityCitizens@@QAEHABVCvBuildingEntry@@@Z PROC ; CvCityCitizens::GetNumSpecialistsAllowedByBuilding, COMDAT
; _this$ = ecx

; 3151 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3152 : 	return kBuilding.GetSpecialistCount();

	mov	ecx, DWORD PTR _kBuilding$[ebp]
	call	?GetSpecialistCount@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetSpecialistCount

; 3153 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumSpecialistsAllowedByBuilding@CvCityCitizens@@QAEHABVCvBuildingEntry@@@Z ENDP ; CvCityCitizens::GetNumSpecialistsAllowedByBuilding
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T226737 = -8						; size = 4
_iNumSpecialistsAssigned$ = -4				; size = 4
_eBuilding$ = 8						; size = 4
?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z PROC ; CvCityCitizens::IsCanAddSpecialistToBuilding, COMDAT
; _this$ = ecx

; 3161 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 3162 : 	CvAssert(eBuilding > -1);
; 3163 : 	CvAssert(eBuilding < GC.getNumBuildingInfos());
; 3164 : #ifdef AUI_WARNING_FIXES
; 3165 : 	CvBuildingEntry* pBuildingInfo = GC.getBuildingInfo(eBuilding);
; 3166 : 	if (!pBuildingInfo)
; 3167 : 		return false;
; 3168 : #endif
; 3169 : 
; 3170 : 	int iNumSpecialistsAssigned = GetNumSpecialistsInBuilding(eBuilding);

	mov	eax, DWORD PTR _eBuilding$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z ; CvCityCitizens::GetNumSpecialistsInBuilding
	mov	DWORD PTR _iNumSpecialistsAssigned$[ebp], eax

; 3171 : 
; 3172 : 	if(iNumSpecialistsAssigned < GetCity()->getPopulation() &&	// Limit based on Pop of City
; 3173 : #ifdef AUI_WARNING_FIXES
; 3174 : 		iNumSpecialistsAssigned < pBuildingInfo->GetSpecialistCount() &&				// Limit for this particular Building
; 3175 : #else
; 3176 : 	        iNumSpecialistsAssigned < GC.getBuildingInfo(eBuilding)->GetSpecialistCount() &&				// Limit for this particular Building
; 3177 : #endif
; 3178 : 	        iNumSpecialistsAssigned < GC.getMAX_SPECIALISTS_FROM_BUILDING())	// Overall Limit

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	DWORD PTR _iNumSpecialistsAssigned$[ebp], eax
	jge	SHORT $LN1@IsCanAddSp
	mov	ecx, DWORD PTR _eBuilding$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	ecx, eax
	call	?GetSpecialistCount@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetSpecialistCount
	cmp	DWORD PTR _iNumSpecialistsAssigned$[ebp], eax
	jge	SHORT $LN1@IsCanAddSp
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7100
	mov	DWORD PTR $T226737[ebp], edx
	mov	eax, DWORD PTR _iNumSpecialistsAssigned$[ebp]
	cmp	eax, DWORD PTR $T226737[ebp]
	jge	SHORT $LN1@IsCanAddSp

; 3179 : 	{
; 3180 : 		return true;

	mov	al, 1
	jmp	SHORT $LN2@IsCanAddSp
$LN1@IsCanAddSp:

; 3181 : 	}
; 3182 : 
; 3183 : 	return false;

	xor	al, al
$LN2@IsCanAddSp:

; 3184 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z ENDP ; CvCityCitizens::IsCanAddSpecialistToBuilding
_TEXT	ENDS
PUBLIC	??1?$auto_ptr@VICvCity1@@@std@@QAE@XZ		; std::auto_ptr<ICvCity1>::~auto_ptr<ICvCity1>
EXTRN	?WrapCityPointer@CvGlobals@@QAE?AV?$auto_ptr@VICvCity1@@@std@@PAVCvCity@@@Z:PROC ; CvGlobals::WrapCityPointer
EXTRN	?UpdateReligion@CvCity@@QAEXW4ReligionTypes@@@Z:PROC ; CvCity::UpdateReligion
EXTRN	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ:PROC ; CvCityReligions::GetReligiousMajority
EXTRN	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ:PROC ; CvCity::GetCityReligions
EXTRN	?processSpecialist@CvCity@@QAEXW4SpecialistTypes@@H@Z:PROC ; CvCity::processSpecialist
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
xdata$x	SEGMENT
__unwindtable$?DoAddSpecialistToBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoAddSpecialistToBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z$1
__ehfuncinfo$?DoAddSpecialistToBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DoAddSpecialistToBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvcitycitizens.cpp
xdata$x	ENDS
;	COMDAT ?DoAddSpecialistToBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z
_TEXT	SEGMENT
_this$ = -80						; size = 4
_inst$226793 = -76					; size = 4
$T226789 = -72						; size = 4
_inst$226776 = -68					; size = 4
$T226772 = -64						; size = 4
$T226762 = -60						; size = 4
__Ptr$226760 = -56					; size = 4
$T226757 = -52						; size = 4
__Cvtptr$226752 = -48					; size = 4
__Ans$226753 = -44					; size = 4
$T226741 = -40						; size = 4
$T226740 = -36						; size = 4
_pkIFace$225164 = -32					; size = 4
_pCity$225213 = -28					; size = 4
_pkCity$225165 = -24					; size = 4
_eSpecialist$ = -20					; size = 4
_pkBuildingInfo$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_eBuilding$ = 8						; size = 4
_bForced$ = 12						; size = 1
?DoAddSpecialistToBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z PROC ; CvCityCitizens::DoAddSpecialistToBuilding, COMDAT
; _this$ = ecx

; 3188 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoAddSpecialistToBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 3189 : 	CvAssert(eBuilding > -1);
; 3190 : 	CvAssert(eBuilding < GC.getNumBuildingInfos());
; 3191 : 
; 3192 : 	CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	eax, DWORD PTR _eBuilding$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$[ebp], eax

; 3193 : 	if(pkBuildingInfo == NULL)

	cmp	DWORD PTR _pkBuildingInfo$[ebp], 0
	jne	SHORT $LN8@DoAddSpeci

; 3194 : 	{
; 3195 : 		return;

	jmp	$LN9@DoAddSpeci
$LN8@DoAddSpeci:

; 3196 : 	}
; 3197 : 
; 3198 : 	SpecialistTypes eSpecialist = (SpecialistTypes) pkBuildingInfo->GetSpecialistType();

	mov	ecx, DWORD PTR _pkBuildingInfo$[ebp]
	call	?GetSpecialistType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetSpecialistType
	mov	DWORD PTR _eSpecialist$[ebp], eax

; 3199 : 
; 3200 : 	// Can't add more than the max
; 3201 : 	if(IsCanAddSpecialistToBuilding(eBuilding))

	mov	ecx, DWORD PTR _eBuilding$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCanAddSpecialistToBuilding@CvCityCitizens@@QAE_NW4BuildingTypes@@@Z ; CvCityCitizens::IsCanAddSpecialistToBuilding
	movzx	edx, al
	test	edx, edx
	je	$LN9@DoAddSpeci

; 3202 : 	{
; 3203 : 		// If we're force-assigning a specialist, then we can reduce the count on forced default specialists
; 3204 : 		if(bForced)

	movzx	eax, BYTE PTR _bForced$[ebp]
	test	eax, eax
	je	SHORT $LN6@DoAddSpeci

; 3205 : 		{
; 3206 : 			if(GetNumForcedDefaultSpecialists() > 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumForcedDefaultSpecialists@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumForcedDefaultSpecialists
	test	eax, eax
	jle	SHORT $LN6@DoAddSpeci

; 3207 : 				ChangeNumForcedDefaultSpecialists(-1);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumForcedDefaultSpecialists@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumForcedDefaultSpecialists
$LN6@DoAddSpeci:

; 3208 : 		}
; 3209 : 
; 3210 : 		// If we don't already have an Unassigned Citizen to turn into a Specialist, find one from somewhere
; 3211 : 		if(GetNumUnassignedCitizens() == 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumUnassignedCitizens@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumUnassignedCitizens
	test	eax, eax
	jne	SHORT $LN4@DoAddSpeci

; 3212 : 		{
; 3213 : 			DoRemoveWorstCitizen(true, /*Don't remove this type*/ eSpecialist);

	push	-1
	mov	ecx, DWORD PTR _eSpecialist$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoRemoveWorstCitizen@CvCityCitizens@@QAE_N_NW4SpecialistTypes@@H@Z ; CvCityCitizens::DoRemoveWorstCitizen

; 3214 : 			if(GetNumUnassignedCitizens() == 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumUnassignedCitizens@CvCityCitizens@@QBEHXZ ; CvCityCitizens::GetNumUnassignedCitizens
	test	eax, eax
	jne	SHORT $LN4@DoAddSpeci

; 3215 : 			{
; 3216 : 				// Still nobody, all the citizens may be assigned to the eSpecialist we are looking for, try again
; 3217 : 				if(!DoRemoveWorstSpecialist(NO_SPECIALIST, eBuilding))

	mov	edx, DWORD PTR _eBuilding$[ebp]
	push	edx
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoRemoveWorstSpecialist@CvCityCitizens@@QAE_NW4SpecialistTypes@@W4BuildingTypes@@@Z ; CvCityCitizens::DoRemoveWorstSpecialist
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@DoAddSpeci

; 3218 : 				{
; 3219 : 					return; // For some reason we can't do this, we must exit, else we will be going over the population count

	jmp	$LN9@DoAddSpeci
$LN4@DoAddSpeci:

; 3220 : 				}
; 3221 : 			}
; 3222 : 		}
; 3223 : 
; 3224 : 		// Increase count for the whole city
; 3225 : 		m_aiSpecialistCounts[eSpecialist]++;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	eax, DWORD PTR _eSpecialist$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	edx, DWORD PTR _eSpecialist$[ebp]
	mov	DWORD PTR [eax+edx*4], ecx

; 3226 : 		m_aiNumSpecialistsInBuilding[eBuilding]++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR _eBuilding$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	ecx, DWORD PTR _eBuilding$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax

; 3227 : 
; 3228 : 		if(bForced)

	movzx	edx, BYTE PTR _bForced$[ebp]
	test	edx, edx
	je	SHORT $LN1@DoAddSpeci

; 3229 : 		{
; 3230 : 			m_aiNumForcedSpecialistsInBuilding[eBuilding]++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	edx, DWORD PTR _eBuilding$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	ecx, DWORD PTR _eBuilding$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
$LN1@DoAddSpeci:

; 3231 : 		}
; 3232 : 
; 3233 : 		GetCity()->processSpecialist(eSpecialist, 1);

	push	1
	mov	edx, DWORD PTR _eSpecialist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?processSpecialist@CvCity@@QAEXW4SpecialistTypes@@H@Z ; CvCity::processSpecialist

; 3234 : 		GetCity()->UpdateReligion(GetCity()->GetCityReligions()->GetReligiousMajority());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?UpdateReligion@CvCity@@QAEXW4ReligionTypes@@@Z ; CvCity::UpdateReligion

; 3235 : 
; 3236 : 		ChangeNumUnassignedCitizens(-1);

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumUnassignedCitizens@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumUnassignedCitizens

; 3237 : 
; 3238 : 		ICvUserInterface2* pkIFace = GC.GetEngineUserInterface();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR _pkIFace$225164[ebp], eax

; 3239 : 		pkIFace->setDirty(GameData_DIRTY_BIT, true);

	push	1
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _pkIFace$225164[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pkIFace$225164[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 3240 : 		pkIFace->setDirty(CityInfo_DIRTY_BIT, true);

	push	1
	push	18					; 00000012H
	mov	ecx, DWORD PTR _pkIFace$225164[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pkIFace$225164[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 3241 : 		//pkIFace->setDirty(InfoPane_DIRTY_BIT, true );
; 3242 : 		pkIFace->setDirty(CityScreen_DIRTY_BIT, true);

	push	1
	push	21					; 00000015H
	mov	ecx, DWORD PTR _pkIFace$225164[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pkIFace$225164[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 3243 : 		pkIFace->setDirty(ColoredPlots_DIRTY_BIT, true);

	push	1
	push	24					; 00000018H
	mov	ecx, DWORD PTR _pkIFace$225164[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pkIFace$225164[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 3244 : 
; 3245 : 		CvCity* pkCity = GetCity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	DWORD PTR _pkCity$225165[ebp], eax

; 3246 : 		auto_ptr<ICvCity1> pCity = GC.WrapCityPointer(pkCity);

	mov	ecx, DWORD PTR _pkCity$225165[ebp]
	push	ecx
	lea	edx, DWORD PTR $T226740[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?WrapCityPointer@CvGlobals@@QAE?AV?$auto_ptr@VICvCity1@@@std@@PAVCvCity@@@Z ; CvGlobals::WrapCityPointer
	mov	DWORD PTR $T226757[ebp], eax
	mov	eax, DWORD PTR $T226757[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Cvtptr$226752[ebp], ecx
	mov	edx, DWORD PTR __Cvtptr$226752[ebp]
	mov	DWORD PTR __Ans$226753[ebp], edx
	mov	eax, DWORD PTR $T226757[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR __Ans$226753[ebp]
	mov	DWORD PTR $T226741[ebp], ecx
	mov	edx, DWORD PTR $T226741[ebp]
	mov	DWORD PTR $T226762[ebp], edx
	mov	eax, DWORD PTR $T226762[ebp]
	mov	DWORD PTR __Ptr$226760[ebp], eax
	mov	DWORD PTR $T226762[ebp], 0
	mov	ecx, DWORD PTR __Ptr$226760[ebp]
	mov	DWORD PTR _pCity$225213[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T226740[ebp]
	mov	DWORD PTR $T226772[ebp], edx
	cmp	DWORD PTR $T226772[ebp], 0
	je	SHORT $LN26@DoAddSpeci
	mov	eax, DWORD PTR $T226772[ebp]
	mov	DWORD PTR _inst$226776[ebp], eax
	mov	ecx, DWORD PTR _inst$226776[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _inst$226776[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+4]
	call	ecx

; 3247 : 
; 3248 : 		pkIFace->SetSpecificCityInfoDirty(pCity.get(), CITY_UPDATE_TYPE_SPECIALISTS);

$LN26@DoAddSpeci:
	push	1
	mov	edx, DWORD PTR _pCity$225213[ebp]
	push	edx
	mov	eax, DWORD PTR _pkIFace$225164[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pkIFace$225164[ebp]
	mov	eax, DWORD PTR [edx+440]
	call	eax

; 3249 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _pCity$225213[ebp]
	mov	DWORD PTR $T226789[ebp], ecx
	cmp	DWORD PTR $T226789[ebp], 0
	je	SHORT $LN9@DoAddSpeci
	mov	edx, DWORD PTR $T226789[ebp]
	mov	DWORD PTR _inst$226793[ebp], edx
	mov	eax, DWORD PTR _inst$226793[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$226793[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN9@DoAddSpeci:

; 3250 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoAddSpecialistToBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z$1:
	lea	ecx, DWORD PTR _pCity$225213[ebp]
	jmp	??1?$auto_ptr@VICvCity1@@@std@@QAE@XZ	; std::auto_ptr<ICvCity1>::~auto_ptr<ICvCity1>
__ehhandler$?DoAddSpecialistToBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoAddSpecialistToBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoAddSpecialistToBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z ENDP ; CvCityCitizens::DoAddSpecialistToBuilding
EXTRN	?changePopulation@CvCity@@QAEXH_N@Z:PROC	; CvCity::changePopulation
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
xdata$x	SEGMENT
__unwindtable$?DoRemoveSpecialistFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoRemoveSpecialistFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N1@Z$1
__ehfuncinfo$?DoRemoveSpecialistFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N1@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DoRemoveSpecialistFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvcitycitizens.cpp
xdata$x	ENDS
;	COMDAT ?DoRemoveSpecialistFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N1@Z
_TEXT	SEGMENT
tv232 = -116						; size = 4
tv205 = -112						; size = 4
tv193 = -108						; size = 4
tv181 = -104						; size = 4
tv169 = -100						; size = 4
_this$ = -96						; size = 4
_inst$226877 = -92					; size = 4
$T226873 = -88						; size = 4
$T226860 = -84						; size = 4
_inst$226856 = -80					; size = 4
$T226852 = -76						; size = 4
$T226842 = -72						; size = 4
__Ptr$226840 = -68					; size = 4
$T226837 = -64						; size = 4
__Cvtptr$226832 = -60					; size = 4
__Ans$226833 = -56					; size = 4
$T226826 = -52						; size = 4
$T226822 = -48						; size = 4
$T226818 = -44						; size = 4
$T226814 = -40						; size = 4
$T226808 = -36						; size = 4
$T226807 = -32						; size = 4
_pCity$225249 = -28					; size = 4
_iNumSpecialistsAssigned$ = -24				; size = 4
_eSpecialist$ = -20					; size = 4
_pkBuildingInfo$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_eBuilding$ = 8						; size = 4
_bForced$ = 12						; size = 1
_bEliminatePopulation$ = 16				; size = 1
?DoRemoveSpecialistFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N1@Z PROC ; CvCityCitizens::DoRemoveSpecialistFromBuilding, COMDAT
; _this$ = ecx

; 3254 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoRemoveSpecialistFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 104				; 00000068H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 3255 : 	CvAssert(eBuilding > -1);
; 3256 : 	CvAssert(eBuilding < GC.getNumBuildingInfos());
; 3257 : 
; 3258 : 	CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	eax, DWORD PTR _eBuilding$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$[ebp], eax

; 3259 : 	if(pkBuildingInfo == NULL)

	cmp	DWORD PTR _pkBuildingInfo$[ebp], 0
	jne	SHORT $LN5@DoRemoveSp

; 3260 : 	{
; 3261 : 		return;

	jmp	$LN6@DoRemoveSp
$LN5@DoRemoveSp:

; 3262 : 	}
; 3263 : 
; 3264 : 	SpecialistTypes eSpecialist = (SpecialistTypes) pkBuildingInfo->GetSpecialistType();

	mov	ecx, DWORD PTR _pkBuildingInfo$[ebp]
	call	?GetSpecialistType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetSpecialistType
	mov	DWORD PTR _eSpecialist$[ebp], eax

; 3265 : 
; 3266 : 	int iNumSpecialistsAssigned = GetNumSpecialistsInBuilding(eBuilding);

	mov	ecx, DWORD PTR _eBuilding$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z ; CvCityCitizens::GetNumSpecialistsInBuilding
	mov	DWORD PTR _iNumSpecialistsAssigned$[ebp], eax

; 3267 : 
; 3268 : 	// Need at least 1 assigned to remove
; 3269 : 	if(iNumSpecialistsAssigned > 0)

	cmp	DWORD PTR _iNumSpecialistsAssigned$[ebp], 0
	jle	$LN6@DoRemoveSp

; 3270 : 	{
; 3271 : 		// Decrease count for the whole city
; 3272 : 		m_aiSpecialistCounts[eSpecialist]--;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	ecx, DWORD PTR _eSpecialist$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	eax, DWORD PTR _eSpecialist$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx

; 3273 : 		m_aiNumSpecialistsInBuilding[eBuilding]--;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	eax, DWORD PTR _eBuilding$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+116]
	mov	edx, DWORD PTR _eBuilding$[ebp]
	mov	DWORD PTR [eax+edx*4], ecx

; 3274 : 
; 3275 : 		if(bForced)

	movzx	eax, BYTE PTR _bForced$[ebp]
	test	eax, eax
	je	SHORT $LN3@DoRemoveSp

; 3276 : 		{
; 3277 : 			m_aiNumForcedSpecialistsInBuilding[eBuilding]--;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	eax, DWORD PTR _eBuilding$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	edx, DWORD PTR _eBuilding$[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
$LN3@DoRemoveSp:

; 3278 : 		}
; 3279 : 
; 3280 : 		GetCity()->processSpecialist(eSpecialist, -1);

	push	-1
	mov	eax, DWORD PTR _eSpecialist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?processSpecialist@CvCity@@QAEXW4SpecialistTypes@@H@Z ; CvCity::processSpecialist

; 3281 : 		GetCity()->UpdateReligion(GetCity()->GetCityReligions()->GetReligiousMajority());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?UpdateReligion@CvCity@@QAEXW4ReligionTypes@@@Z ; CvCity::UpdateReligion

; 3282 : 
; 3283 : 		// Do we kill this population or reassign him?
; 3284 : 		if(bEliminatePopulation)

	movzx	ecx, BYTE PTR _bEliminatePopulation$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@DoRemoveSp

; 3285 : 		{
; 3286 : 			GetCity()->changePopulation(-1, /*bReassignPop*/ false);

	push	0
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?changePopulation@CvCity@@QAEXH_N@Z	; CvCity::changePopulation

; 3287 : 		}
; 3288 : 		else

	jmp	SHORT $LN1@DoRemoveSp
$LN2@DoRemoveSp:

; 3289 : 		{
; 3290 : 			ChangeNumUnassignedCitizens(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumUnassignedCitizens@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumUnassignedCitizens
$LN1@DoRemoveSp:

; 3291 : 		}
; 3292 : 
; 3293 : #ifdef AUI_WARNING_FIXES
; 3294 : 		ICvUserInterface2* pkIFace = GC.GetEngineUserInterface();
; 3295 : 		pkIFace->setDirty(GameData_DIRTY_BIT, true);
; 3296 : 		pkIFace->setDirty(CityInfo_DIRTY_BIT, true);
; 3297 : 		//pkIFace->setDirty(InfoPane_DIRTY_BIT, true );
; 3298 : 		pkIFace->setDirty(CityScreen_DIRTY_BIT, true);
; 3299 : 		pkIFace->setDirty(ColoredPlots_DIRTY_BIT, true);
; 3300 : 
; 3301 : 		auto_ptr<ICvCity1> pCity = GC.WrapCityPointer(GetCity());
; 3302 : 
; 3303 : 		pkIFace->SetSpecificCityInfoDirty(pCity.get(), CITY_UPDATE_TYPE_SPECIALISTS);
; 3304 : #else
; 3305 : 		GC.GetEngineUserInterface()->setDirty(GameData_DIRTY_BIT, true);

	mov	edx, DWORD PTR $T226814[ebp]
	mov	DWORD PTR tv169[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv169[ebp], eax
	push	1
	push	11					; 0000000bH
	mov	ecx, DWORD PTR tv169[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv169[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 3306 : 		GC.GetEngineUserInterface()->setDirty(CityInfo_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T226818[ebp]
	mov	DWORD PTR tv181[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv181[ebp], edx
	push	1
	push	18					; 00000012H
	mov	eax, DWORD PTR tv181[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv181[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 3307 : 		//GC.GetEngineUserInterface()->setDirty(InfoPane_DIRTY_BIT, true );
; 3308 : 		GC.GetEngineUserInterface()->setDirty(CityScreen_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T226822[ebp]
	mov	DWORD PTR tv193[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv193[ebp], edx
	push	1
	push	21					; 00000015H
	mov	eax, DWORD PTR tv193[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv193[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 3309 : 		GC.GetEngineUserInterface()->setDirty(ColoredPlots_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T226826[ebp]
	mov	DWORD PTR tv205[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv205[ebp], edx
	push	1
	push	24					; 00000018H
	mov	eax, DWORD PTR tv205[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv205[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 3310 : 
; 3311 : 		auto_ptr<ICvCity1> pCity = GC.WrapCityPointer(GetCity());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	push	eax
	lea	ecx, DWORD PTR $T226807[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?WrapCityPointer@CvGlobals@@QAE?AV?$auto_ptr@VICvCity1@@@std@@PAVCvCity@@@Z ; CvGlobals::WrapCityPointer
	mov	DWORD PTR $T226837[ebp], eax
	mov	edx, DWORD PTR $T226837[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Cvtptr$226832[ebp], eax
	mov	ecx, DWORD PTR __Cvtptr$226832[ebp]
	mov	DWORD PTR __Ans$226833[ebp], ecx
	mov	edx, DWORD PTR $T226837[ebp]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR __Ans$226833[ebp]
	mov	DWORD PTR $T226808[ebp], eax
	mov	ecx, DWORD PTR $T226808[ebp]
	mov	DWORD PTR $T226842[ebp], ecx
	mov	edx, DWORD PTR $T226842[ebp]
	mov	DWORD PTR __Ptr$226840[ebp], edx
	mov	DWORD PTR $T226842[ebp], 0
	mov	eax, DWORD PTR __Ptr$226840[ebp]
	mov	DWORD PTR _pCity$225249[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T226807[ebp]
	mov	DWORD PTR $T226852[ebp], ecx
	cmp	DWORD PTR $T226852[ebp], 0
	je	SHORT $LN24@DoRemoveSp
	mov	edx, DWORD PTR $T226852[ebp]
	mov	DWORD PTR _inst$226856[ebp], edx
	mov	eax, DWORD PTR _inst$226856[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$226856[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN24@DoRemoveSp:

; 3312 : 
; 3313 : 		GC.GetEngineUserInterface()->SetSpecificCityInfoDirty(pCity.get(), CITY_UPDATE_TYPE_SPECIALISTS);

	mov	ecx, DWORD PTR $T226860[ebp]
	mov	DWORD PTR tv232[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv232[ebp], edx
	push	1
	mov	eax, DWORD PTR _pCity$225249[ebp]
	push	eax
	mov	ecx, DWORD PTR tv232[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv232[ebp]
	mov	eax, DWORD PTR [edx+440]
	call	eax

; 3314 : #endif
; 3315 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _pCity$225249[ebp]
	mov	DWORD PTR $T226873[ebp], ecx
	cmp	DWORD PTR $T226873[ebp], 0
	je	SHORT $LN6@DoRemoveSp
	mov	edx, DWORD PTR $T226873[ebp]
	mov	DWORD PTR _inst$226877[ebp], edx
	mov	eax, DWORD PTR _inst$226877[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$226877[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN6@DoRemoveSp:

; 3316 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoRemoveSpecialistFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N1@Z$1:
	lea	ecx, DWORD PTR _pCity$225249[ebp]
	jmp	??1?$auto_ptr@VICvCity1@@@std@@QAE@XZ	; std::auto_ptr<ICvCity1>::~auto_ptr<ICvCity1>
__ehhandler$?DoRemoveSpecialistFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-108]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoRemoveSpecialistFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoRemoveSpecialistFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N1@Z ENDP ; CvCityCitizens::DoRemoveSpecialistFromBuilding
PUBLIC	?DoRemoveAllSpecialistsFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z ; CvCityCitizens::DoRemoveAllSpecialistsFromBuilding
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
xdata$x	SEGMENT
__unwindtable$?DoRemoveAllSpecialistsFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoRemoveAllSpecialistsFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z$1
__ehfuncinfo$?DoRemoveAllSpecialistsFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DoRemoveAllSpecialistsFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvcitycitizens.cpp
xdata$x	ENDS
;	COMDAT ?DoRemoveAllSpecialistsFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z
_TEXT	SEGMENT
tv202 = -112						; size = 4
tv175 = -108						; size = 4
tv163 = -104						; size = 4
tv151 = -100						; size = 4
_this$ = -96						; size = 4
_inst$226952 = -92					; size = 4
$T226948 = -88						; size = 4
$T226935 = -84						; size = 4
_inst$226931 = -80					; size = 4
$T226927 = -76						; size = 4
$T226917 = -72						; size = 4
__Ptr$226915 = -68					; size = 4
$T226912 = -64						; size = 4
__Cvtptr$226907 = -60					; size = 4
__Ans$226908 = -56					; size = 4
$T226901 = -52						; size = 4
$T226897 = -48						; size = 4
$T226893 = -44						; size = 4
$T226887 = -40						; size = 4
$T226886 = -36						; size = 4
_pCity$225269 = -32					; size = 4
_iAssignedLoop$225262 = -28				; size = 4
_iNumSpecialists$ = -24					; size = 4
_eSpecialist$ = -20					; size = 4
_pkBuildingInfo$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_eBuilding$ = 8						; size = 4
_bEliminatePopulation$ = 12				; size = 1
?DoRemoveAllSpecialistsFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z PROC ; CvCityCitizens::DoRemoveAllSpecialistsFromBuilding, COMDAT
; _this$ = ecx

; 3323 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoRemoveAllSpecialistsFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 3324 : 	CvAssert(eBuilding > -1);
; 3325 : 	CvAssert(eBuilding < GC.getNumBuildingInfos());
; 3326 : 
; 3327 : 	CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	eax, DWORD PTR _eBuilding$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$[ebp], eax

; 3328 : 	if(pkBuildingInfo == NULL)

	cmp	DWORD PTR _pkBuildingInfo$[ebp], 0
	jne	SHORT $LN6@DoRemoveAl

; 3329 : 	{
; 3330 : 		return;

	jmp	$LN7@DoRemoveAl
$LN6@DoRemoveAl:

; 3331 : 	}
; 3332 : 
; 3333 : 	SpecialistTypes eSpecialist = (SpecialistTypes) pkBuildingInfo->GetSpecialistType();

	mov	ecx, DWORD PTR _pkBuildingInfo$[ebp]
	call	?GetSpecialistType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetSpecialistType
	mov	DWORD PTR _eSpecialist$[ebp], eax

; 3334 : 	int iNumSpecialists = GetNumSpecialistsInBuilding(eBuilding);

	mov	ecx, DWORD PTR _eBuilding$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z ; CvCityCitizens::GetNumSpecialistsInBuilding
	mov	DWORD PTR _iNumSpecialists$[ebp], eax

; 3335 : 
; 3336 : 	m_aiNumForcedSpecialistsInBuilding[eBuilding] = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	ecx, DWORD PTR _eBuilding$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0

; 3337 : 
; 3338 : 	// Pick the worst to remove
; 3339 : 	for(int iAssignedLoop = 0; iAssignedLoop < iNumSpecialists; iAssignedLoop++)

	mov	DWORD PTR _iAssignedLoop$225262[ebp], 0
	jmp	SHORT $LN5@DoRemoveAl
$LN4@DoRemoveAl:
	mov	edx, DWORD PTR _iAssignedLoop$225262[ebp]
	add	edx, 1
	mov	DWORD PTR _iAssignedLoop$225262[ebp], edx
$LN5@DoRemoveAl:
	mov	eax, DWORD PTR _iAssignedLoop$225262[ebp]
	cmp	eax, DWORD PTR _iNumSpecialists$[ebp]
	jge	$LN7@DoRemoveAl

; 3340 : 	{
; 3341 : 		// Decrease count for the whole city
; 3342 : 		m_aiSpecialistCounts[eSpecialist]--;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	eax, DWORD PTR _eSpecialist$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	edx, DWORD PTR _eSpecialist$[ebp]
	mov	DWORD PTR [eax+edx*4], ecx

; 3343 : 		m_aiNumSpecialistsInBuilding[eBuilding]--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR _eBuilding$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	ecx, DWORD PTR _eBuilding$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax

; 3344 : 		GetCity()->processSpecialist(eSpecialist, -1);

	push	-1
	mov	edx, DWORD PTR _eSpecialist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?processSpecialist@CvCity@@QAEXW4SpecialistTypes@@H@Z ; CvCity::processSpecialist

; 3345 : 
; 3346 : 		// Do we kill this population or reassign him?
; 3347 : 		if(bEliminatePopulation)

	movzx	eax, BYTE PTR _bEliminatePopulation$[ebp]
	test	eax, eax
	je	SHORT $LN2@DoRemoveAl

; 3348 : 		{
; 3349 : 			GetCity()->changePopulation(-1, /*bReassignPop*/ false);

	push	0
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?changePopulation@CvCity@@QAEXH_N@Z	; CvCity::changePopulation

; 3350 : 		}
; 3351 : 		else

	jmp	SHORT $LN1@DoRemoveAl
$LN2@DoRemoveAl:

; 3352 : 		{
; 3353 : 			ChangeNumUnassignedCitizens(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumUnassignedCitizens@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumUnassignedCitizens
$LN1@DoRemoveAl:

; 3354 : 		}
; 3355 : 
; 3356 : #ifdef AUI_WARNING_FIXES
; 3357 : 		ICvUserInterface2* pkIFace = GC.GetEngineUserInterface();
; 3358 : 		pkIFace->setDirty(CityInfo_DIRTY_BIT, true);
; 3359 : 		//pkIFace->setDirty(InfoPane_DIRTY_BIT, true );
; 3360 : 		pkIFace->setDirty(CityScreen_DIRTY_BIT, true);
; 3361 : 		pkIFace->setDirty(ColoredPlots_DIRTY_BIT, true);
; 3362 : 
; 3363 : 		auto_ptr<ICvCity1> pCity = GC.WrapCityPointer(GetCity());
; 3364 : 		pkIFace->SetSpecificCityInfoDirty(pCity.get(), CITY_UPDATE_TYPE_SPECIALISTS);
; 3365 : #else
; 3366 : 		GC.GetEngineUserInterface()->setDirty(CityInfo_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T226893[ebp]
	mov	DWORD PTR tv151[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv151[ebp], edx
	push	1
	push	18					; 00000012H
	mov	eax, DWORD PTR tv151[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv151[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 3367 : 		//GC.GetEngineUserInterface()->setDirty(InfoPane_DIRTY_BIT, true );
; 3368 : 		GC.GetEngineUserInterface()->setDirty(CityScreen_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T226897[ebp]
	mov	DWORD PTR tv163[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv163[ebp], edx
	push	1
	push	21					; 00000015H
	mov	eax, DWORD PTR tv163[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv163[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 3369 : 		GC.GetEngineUserInterface()->setDirty(ColoredPlots_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T226901[ebp]
	mov	DWORD PTR tv175[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv175[ebp], edx
	push	1
	push	24					; 00000018H
	mov	eax, DWORD PTR tv175[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv175[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 3370 : 
; 3371 : 		auto_ptr<ICvCity1> pCity = GC.WrapCityPointer(GetCity());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	push	eax
	lea	ecx, DWORD PTR $T226886[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?WrapCityPointer@CvGlobals@@QAE?AV?$auto_ptr@VICvCity1@@@std@@PAVCvCity@@@Z ; CvGlobals::WrapCityPointer
	mov	DWORD PTR $T226912[ebp], eax
	mov	edx, DWORD PTR $T226912[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Cvtptr$226907[ebp], eax
	mov	ecx, DWORD PTR __Cvtptr$226907[ebp]
	mov	DWORD PTR __Ans$226908[ebp], ecx
	mov	edx, DWORD PTR $T226912[ebp]
	mov	DWORD PTR [edx], 0
	mov	eax, DWORD PTR __Ans$226908[ebp]
	mov	DWORD PTR $T226887[ebp], eax
	mov	ecx, DWORD PTR $T226887[ebp]
	mov	DWORD PTR $T226917[ebp], ecx
	mov	edx, DWORD PTR $T226917[ebp]
	mov	DWORD PTR __Ptr$226915[ebp], edx
	mov	DWORD PTR $T226917[ebp], 0
	mov	eax, DWORD PTR __Ptr$226915[ebp]
	mov	DWORD PTR _pCity$225269[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T226886[ebp]
	mov	DWORD PTR $T226927[ebp], ecx
	cmp	DWORD PTR $T226927[ebp], 0
	je	SHORT $LN23@DoRemoveAl
	mov	edx, DWORD PTR $T226927[ebp]
	mov	DWORD PTR _inst$226931[ebp], edx
	mov	eax, DWORD PTR _inst$226931[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$226931[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN23@DoRemoveAl:

; 3372 : 		GC.GetEngineUserInterface()->SetSpecificCityInfoDirty(pCity.get(), CITY_UPDATE_TYPE_SPECIALISTS);

	mov	ecx, DWORD PTR $T226935[ebp]
	mov	DWORD PTR tv202[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv202[ebp], edx
	push	1
	mov	eax, DWORD PTR _pCity$225269[ebp]
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv202[ebp]
	mov	eax, DWORD PTR [edx+440]
	call	eax

; 3373 : #endif
; 3374 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _pCity$225269[ebp]
	mov	DWORD PTR $T226948[ebp], ecx
	cmp	DWORD PTR $T226948[ebp], 0
	je	SHORT $LN32@DoRemoveAl
	mov	edx, DWORD PTR $T226948[ebp]
	mov	DWORD PTR _inst$226952[ebp], edx
	mov	eax, DWORD PTR _inst$226952[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$226952[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN32@DoRemoveAl:
	jmp	$LN4@DoRemoveAl
$LN7@DoRemoveAl:

; 3375 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoRemoveAllSpecialistsFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z$1:
	lea	ecx, DWORD PTR _pCity$225269[ebp]
	jmp	??1?$auto_ptr@VICvCity1@@@std@@QAE@XZ	; std::auto_ptr<ICvCity1>::~auto_ptr<ICvCity1>
__ehhandler$?DoRemoveAllSpecialistsFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoRemoveAllSpecialistsFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoRemoveAllSpecialistsFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N@Z ENDP ; CvCityCitizens::DoRemoveAllSpecialistsFromBuilding
; Function compile flags: /Odtp
;	COMDAT ?DoRemoveWorstSpecialist@CvCityCitizens@@QAE_NW4SpecialistTypes@@W4BuildingTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_eBuilding$225281 = -12					; size = 4
_pkBuildingInfo$225284 = -8				; size = 4
_iBuildingLoop$225277 = -4				; size = 4
_eDontChangeSpecialist$ = 8				; size = 4
_eDontRemoveFromBuilding$ = 12				; size = 4
?DoRemoveWorstSpecialist@CvCityCitizens@@QAE_NW4SpecialistTypes@@W4BuildingTypes@@@Z PROC ; CvCityCitizens::DoRemoveWorstSpecialist, COMDAT
; _this$ = ecx

; 3380 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 3381 : #ifdef AUI_CITIZENS_FIX_REMOVE_WORST_SPECIALIST_ACTUALLY_REMOVES_WORST
; 3382 : 	BuildingTypes eWorstBuilding = NO_BUILDING;
; 3383 : 	int iWorstSpecialistScore = MAX_INT;
; 3384 : 	int iLoopSpecialistScore = 0;
; 3385 : #endif
; 3386 : #ifdef AUI_WARNING_FIXES
; 3387 : 	for (uint iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)
; 3388 : #else
; 3389 : 	for(int iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)

	mov	DWORD PTR _iBuildingLoop$225277[ebp], 0
	jmp	SHORT $LN7@DoRemoveWo@2
$LN6@DoRemoveWo@2:
	mov	eax, DWORD PTR _iBuildingLoop$225277[ebp]
	add	eax, 1
	mov	DWORD PTR _iBuildingLoop$225277[ebp], eax
$LN7@DoRemoveWo@2:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iBuildingLoop$225277[ebp], eax
	jge	SHORT $LN5@DoRemoveWo@2

; 3390 : #endif
; 3391 : 	{
; 3392 : 		const BuildingTypes eBuilding = static_cast<BuildingTypes>(iBuildingLoop);

	mov	ecx, DWORD PTR _iBuildingLoop$225277[ebp]
	mov	DWORD PTR _eBuilding$225281[ebp], ecx

; 3393 : 
; 3394 : 		if(eBuilding == eDontRemoveFromBuilding)

	mov	edx, DWORD PTR _eBuilding$225281[ebp]
	cmp	edx, DWORD PTR _eDontRemoveFromBuilding$[ebp]
	jne	SHORT $LN4@DoRemoveWo@2

; 3395 : 		{
; 3396 : 			continue;

	jmp	SHORT $LN6@DoRemoveWo@2
$LN4@DoRemoveWo@2:

; 3397 : 		}
; 3398 : 
; 3399 : 		CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	eax, DWORD PTR _eBuilding$225281[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$225284[ebp], eax

; 3400 : 		if(pkBuildingInfo == NULL)

	cmp	DWORD PTR _pkBuildingInfo$225284[ebp], 0
	jne	SHORT $LN3@DoRemoveWo@2

; 3401 : 		{
; 3402 : 			continue;

	jmp	SHORT $LN6@DoRemoveWo@2
$LN3@DoRemoveWo@2:

; 3403 : 		}
; 3404 : 
; 3405 : 		// We might not be allowed to change this Building's Specialists
; 3406 : 		if(eDontChangeSpecialist == pkBuildingInfo->GetSpecialistType())

	mov	ecx, DWORD PTR _pkBuildingInfo$225284[ebp]
	call	?GetSpecialistType@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetSpecialistType
	cmp	DWORD PTR _eDontChangeSpecialist$[ebp], eax
	jne	SHORT $LN2@DoRemoveWo@2

; 3407 : 		{
; 3408 : 			continue;

	jmp	SHORT $LN6@DoRemoveWo@2
$LN2@DoRemoveWo@2:

; 3409 : 		}
; 3410 : 
; 3411 : 		if(GetNumSpecialistsInBuilding(eBuilding) > 0)

	mov	ecx, DWORD PTR _eBuilding$225281[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z ; CvCityCitizens::GetNumSpecialistsInBuilding
	test	eax, eax
	jle	SHORT $LN1@DoRemoveWo@2

; 3412 : 		{
; 3413 : #ifdef AUI_CITIZENS_FIX_REMOVE_WORST_SPECIALIST_ACTUALLY_REMOVES_WORST
; 3414 : #ifdef AUI_CITIZENS_UNHARDCODE_SPECIALIST_VALUE_HAPPINESS
; 3415 : 			iLoopSpecialistScore = GetSpecialistValue((SpecialistTypes)pkBuildingInfo->GetSpecialistType(), true);
; 3416 : #else
; 3417 : 			iLoopSpecialistScore = GetSpecialistValue((SpecialistTypes)pkBuildingInfo->GetSpecialistType());
; 3418 : #endif
; 3419 : 			if (iLoopSpecialistScore < iWorstSpecialistScore)
; 3420 : 			{
; 3421 : 				iWorstSpecialistScore = iLoopSpecialistScore;
; 3422 : 				eWorstBuilding = eBuilding;
; 3423 : 			}
; 3424 : #else
; 3425 : 			DoRemoveSpecialistFromBuilding(eBuilding, true);

	push	0
	push	1
	mov	edx, DWORD PTR _eBuilding$225281[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoRemoveSpecialistFromBuilding@CvCityCitizens@@QAEXW4BuildingTypes@@_N1@Z ; CvCityCitizens::DoRemoveSpecialistFromBuilding

; 3426 : 
; 3427 : 			return true;

	mov	al, 1
	jmp	SHORT $LN8@DoRemoveWo@2
$LN1@DoRemoveWo@2:

; 3428 : #endif
; 3429 : 		}
; 3430 : 	}

	jmp	SHORT $LN6@DoRemoveWo@2
$LN5@DoRemoveWo@2:

; 3431 : 
; 3432 : #ifdef AUI_CITIZENS_FIX_REMOVE_WORST_SPECIALIST_ACTUALLY_REMOVES_WORST
; 3433 : 	if (eWorstBuilding != NO_BUILDING)
; 3434 : 	{
; 3435 : 		DoRemoveSpecialistFromBuilding(eWorstBuilding, false);
; 3436 : 
; 3437 : 		return true;
; 3438 : 	}
; 3439 : #endif
; 3440 : 
; 3441 : 	return false;

	xor	al, al
$LN8@DoRemoveWo@2:

; 3442 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?DoRemoveWorstSpecialist@CvCityCitizens@@QAE_NW4SpecialistTypes@@W4BuildingTypes@@@Z ENDP ; CvCityCitizens::DoRemoveWorstSpecialist
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetNumDefaultSpecialists@CvCityCitizens@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumDefaultSpecialists@CvCityCitizens@@QBEHXZ PROC	; CvCityCitizens::GetNumDefaultSpecialists, COMDAT
; _this$ = ecx

; 3446 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3447 : 	return m_iNumDefaultSpecialists;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+100]

; 3448 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumDefaultSpecialists@CvCityCitizens@@QBEHXZ ENDP	; CvCityCitizens::GetNumDefaultSpecialists
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?ChangeNumDefaultSpecialists@CvCityCitizens@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_eSpecialist$ = -4					; size = 4
_iChange$ = 8						; size = 4
?ChangeNumDefaultSpecialists@CvCityCitizens@@QAEXH@Z PROC ; CvCityCitizens::ChangeNumDefaultSpecialists, COMDAT
; _this$ = ecx

; 3452 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 3453 : 	m_iNumDefaultSpecialists += iChange;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	add	ecx, DWORD PTR _iChange$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+100], ecx

; 3454 : 
; 3455 : 	SpecialistTypes eSpecialist = (SpecialistTypes) GC.getDEFAULT_SPECIALIST();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8420
	mov	DWORD PTR _eSpecialist$[ebp], eax

; 3456 : 	m_aiSpecialistCounts[eSpecialist] += iChange;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	eax, DWORD PTR _eSpecialist$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	add	ecx, DWORD PTR _iChange$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	edx, DWORD PTR _eSpecialist$[ebp]
	mov	DWORD PTR [eax+edx*4], ecx

; 3457 : 
; 3458 : 	GetCity()->processSpecialist(eSpecialist, iChange);

	mov	eax, DWORD PTR _iChange$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eSpecialist$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?processSpecialist@CvCity@@QAEXW4SpecialistTypes@@H@Z ; CvCity::processSpecialist

; 3459 : 
; 3460 : 	ChangeNumUnassignedCitizens(-iChange);

	mov	edx, DWORD PTR _iChange$[ebp]
	neg	edx
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChangeNumUnassignedCitizens@CvCityCitizens@@QAEXH@Z ; CvCityCitizens::ChangeNumUnassignedCitizens

; 3461 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ChangeNumDefaultSpecialists@CvCityCitizens@@QAEXH@Z ENDP ; CvCityCitizens::ChangeNumDefaultSpecialists
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetNumForcedDefaultSpecialists@CvCityCitizens@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumForcedDefaultSpecialists@CvCityCitizens@@QBEHXZ PROC ; CvCityCitizens::GetNumForcedDefaultSpecialists, COMDAT
; _this$ = ecx

; 3465 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3466 : 	return m_iNumForcedDefaultSpecialists;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+104]

; 3467 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumForcedDefaultSpecialists@CvCityCitizens@@QBEHXZ ENDP ; CvCityCitizens::GetNumForcedDefaultSpecialists
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?ChangeNumForcedDefaultSpecialists@CvCityCitizens@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iChange$ = 8						; size = 4
?ChangeNumForcedDefaultSpecialists@CvCityCitizens@@QAEXH@Z PROC ; CvCityCitizens::ChangeNumForcedDefaultSpecialists, COMDAT
; _this$ = ecx

; 3471 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3472 : 	m_iNumForcedDefaultSpecialists += iChange;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	add	ecx, DWORD PTR _iChange$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+104], ecx

; 3473 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ChangeNumForcedDefaultSpecialists@CvCityCitizens@@QAEXH@Z ENDP ; CvCityCitizens::ChangeNumForcedDefaultSpecialists
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetSpecialistCount@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eIndex$ = 8						; size = 4
?GetSpecialistCount@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z PROC ; CvCityCitizens::GetSpecialistCount, COMDAT
; _this$ = ecx

; 3477 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3478 : 	CvAssert(eIndex > -1);
; 3479 : 	CvAssert(eIndex < GC.getNumSpecialistInfos());
; 3480 : 
; 3481 : 	return m_aiSpecialistCounts[eIndex];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR _eIndex$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]

; 3482 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetSpecialistCount@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ENDP ; CvCityCitizens::GetSpecialistCount
_TEXT	ENDS
PUBLIC	?GetTotalSpecialistCount@CvCityCitizens@@QBEHXZ	; CvCityCitizens::GetTotalSpecialistCount
; Function compile flags: /Odtp
;	COMDAT ?GetTotalSpecialistCount@CvCityCitizens@@QBEHXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T226979 = -16						; size = 4
_iSpecialistLoop$225313 = -12				; size = 4
_iNumSpecialists$ = -8					; size = 4
_eSpecialist$ = -4					; size = 4
?GetTotalSpecialistCount@CvCityCitizens@@QBEHXZ PROC	; CvCityCitizens::GetTotalSpecialistCount, COMDAT
; _this$ = ecx

; 3486 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 3487 : 	int iNumSpecialists = 0;

	mov	DWORD PTR _iNumSpecialists$[ebp], 0

; 3488 : 	SpecialistTypes eSpecialist;
; 3489 : 
; 3490 : #ifdef AUI_WARNING_FIXES
; 3491 : 	for (uint iSpecialistLoop = 0; iSpecialistLoop < GC.getNumSpecialistInfos(); iSpecialistLoop++)
; 3492 : #else
; 3493 : 	for(int iSpecialistLoop = 0; iSpecialistLoop < GC.getNumSpecialistInfos(); iSpecialistLoop++)

	mov	DWORD PTR _iSpecialistLoop$225313[ebp], 0
	jmp	SHORT $LN4@GetTotalSp
$LN3@GetTotalSp:
	mov	eax, DWORD PTR _iSpecialistLoop$225313[ebp]
	add	eax, 1
	mov	DWORD PTR _iSpecialistLoop$225313[ebp], eax
$LN4@GetTotalSp:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumSpecialistInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumSpecialistInfos
	cmp	DWORD PTR _iSpecialistLoop$225313[ebp], eax
	jge	SHORT $LN2@GetTotalSp

; 3494 : #endif
; 3495 : 	{
; 3496 : 		eSpecialist = (SpecialistTypes) iSpecialistLoop;

	mov	ecx, DWORD PTR _iSpecialistLoop$225313[ebp]
	mov	DWORD PTR _eSpecialist$[ebp], ecx

; 3497 : 
; 3498 : 		if (eSpecialist != (SpecialistTypes) GC.getDEFAULT_SPECIALIST())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8420
	mov	DWORD PTR $T226979[ebp], edx
	mov	eax, DWORD PTR _eSpecialist$[ebp]
	cmp	eax, DWORD PTR $T226979[ebp]
	je	SHORT $LN1@GetTotalSp

; 3499 : 		{
; 3500 : 			iNumSpecialists += GetSpecialistCount(eSpecialist);

	mov	ecx, DWORD PTR _eSpecialist$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSpecialistCount@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ; CvCityCitizens::GetSpecialistCount
	add	eax, DWORD PTR _iNumSpecialists$[ebp]
	mov	DWORD PTR _iNumSpecialists$[ebp], eax
$LN1@GetTotalSp:

; 3501 : 		}
; 3502 : 	}

	jmp	SHORT $LN3@GetTotalSp
$LN2@GetTotalSp:

; 3503 : 
; 3504 : 	return iNumSpecialists;

	mov	eax, DWORD PTR _iNumSpecialists$[ebp]

; 3505 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetTotalSpecialistCount@CvCityCitizens@@QBEHXZ ENDP	; CvCityCitizens::GetTotalSpecialistCount
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetBuildingGreatPeopleRateChanges@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eSpecialist$ = 8					; size = 4
?GetBuildingGreatPeopleRateChanges@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z PROC ; CvCityCitizens::GetBuildingGreatPeopleRateChanges, COMDAT
; _this$ = ecx

; 3509 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3510 : 	CvAssert(eSpecialist > -1);
; 3511 : 	CvAssert(eSpecialist < GC.getNumSpecialistInfos());
; 3512 : 
; 3513 : 	return m_piBuildingGreatPeopleRateChanges[eSpecialist];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	edx, DWORD PTR _eSpecialist$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]

; 3514 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuildingGreatPeopleRateChanges@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ENDP ; CvCityCitizens::GetBuildingGreatPeopleRateChanges
_TEXT	ENDS
PUBLIC	?ChangeBuildingGreatPeopleRateChanges@CvCityCitizens@@QAEXW4SpecialistTypes@@H@Z ; CvCityCitizens::ChangeBuildingGreatPeopleRateChanges
; Function compile flags: /Odtp
;	COMDAT ?ChangeBuildingGreatPeopleRateChanges@CvCityCitizens@@QAEXW4SpecialistTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eSpecialist$ = 8					; size = 4
_iChange$ = 12						; size = 4
?ChangeBuildingGreatPeopleRateChanges@CvCityCitizens@@QAEXW4SpecialistTypes@@H@Z PROC ; CvCityCitizens::ChangeBuildingGreatPeopleRateChanges, COMDAT
; _this$ = ecx

; 3518 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3519 : 	CvAssert(eSpecialist > -1);
; 3520 : 	CvAssert(eSpecialist < GC.getNumSpecialistInfos());
; 3521 : 
; 3522 : 	m_piBuildingGreatPeopleRateChanges[eSpecialist] += iChange;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	edx, DWORD PTR _eSpecialist$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	add	eax, DWORD PTR _iChange$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	mov	ecx, DWORD PTR _eSpecialist$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax

; 3523 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?ChangeBuildingGreatPeopleRateChanges@CvCityCitizens@@QAEXW4SpecialistTypes@@H@Z ENDP ; CvCityCitizens::ChangeBuildingGreatPeopleRateChanges
_TEXT	ENDS
PUBLIC	?GetSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ; CvCityCitizens::GetSpecialistGreatPersonProgressTimes100
; Function compile flags: /Odtp
;	COMDAT ?GetSpecialistGreatPersonProgress@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eIndex$ = 8						; size = 4
?GetSpecialistGreatPersonProgress@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z PROC ; CvCityCitizens::GetSpecialistGreatPersonProgress, COMDAT
; _this$ = ecx

; 3527 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3528 : 	CvAssert(eIndex > -1);
; 3529 : 	CvAssert(eIndex < GC.getNumSpecialistInfos());
; 3530 : 
; 3531 : 	return GetSpecialistGreatPersonProgressTimes100(eIndex) / 100;

	mov	eax, DWORD PTR _eIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ; CvCityCitizens::GetSpecialistGreatPersonProgressTimes100
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx

; 3532 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetSpecialistGreatPersonProgress@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ENDP ; CvCityCitizens::GetSpecialistGreatPersonProgress
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eIndex$ = 8						; size = 4
?GetSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z PROC ; CvCityCitizens::GetSpecialistGreatPersonProgressTimes100, COMDAT
; _this$ = ecx

; 3536 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3537 : 	CvAssert(eIndex > -1);
; 3538 : 	CvAssert(eIndex < GC.getNumSpecialistInfos());
; 3539 : 
; 3540 : 	return m_aiSpecialistGreatPersonProgressTimes100[eIndex];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	edx, DWORD PTR _eIndex$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]

; 3541 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QBEHW4SpecialistTypes@@@Z ENDP ; CvCityCitizens::GetSpecialistGreatPersonProgressTimes100
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?ChangeSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QAEXW4SpecialistTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eIndex$ = 8						; size = 4
_iChange$ = 12						; size = 4
?ChangeSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QAEXW4SpecialistTypes@@H@Z PROC ; CvCityCitizens::ChangeSpecialistGreatPersonProgressTimes100, COMDAT
; _this$ = ecx

; 3545 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3546 : 	CvAssert(eIndex > -1);
; 3547 : 	CvAssert(eIndex < GC.getNumSpecialistInfos());
; 3548 : 
; 3549 : 	m_aiSpecialistGreatPersonProgressTimes100[eIndex] += iChange;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	edx, DWORD PTR _eIndex$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	add	eax, DWORD PTR _iChange$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	ecx, DWORD PTR _eIndex$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax

; 3550 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?ChangeSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QAEXW4SpecialistTypes@@H@Z ENDP ; CvCityCitizens::ChangeSpecialistGreatPersonProgressTimes100
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?DoResetSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QAEXW4SpecialistTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eIndex$ = 8						; size = 4
?DoResetSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QAEXW4SpecialistTypes@@@Z PROC ; CvCityCitizens::DoResetSpecialistGreatPersonProgressTimes100, COMDAT
; _this$ = ecx

; 3554 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3555 : 	CvAssert(eIndex > -1);
; 3556 : 	CvAssert(eIndex < GC.getNumSpecialistInfos());
; 3557 : 
; 3558 : 	m_aiSpecialistGreatPersonProgressTimes100[eIndex] = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	edx, DWORD PTR _eIndex$[ebp]
	mov	DWORD PTR [ecx+edx*4], 0

; 3559 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?DoResetSpecialistGreatPersonProgressTimes100@CvCityCitizens@@QAEXW4SpecialistTypes@@@Z ENDP ; CvCityCitizens::DoResetSpecialistGreatPersonProgressTimes100
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetNumSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eBuilding$ = 8						; size = 4
?GetNumSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z PROC ; CvCityCitizens::GetNumSpecialistsInBuilding, COMDAT
; _this$ = ecx

; 3563 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3564 : 	CvAssert(eBuilding > -1);
; 3565 : 	CvAssert(eBuilding < GC.getNumBuildingInfos());
; 3566 : 
; 3567 : 	return m_aiNumSpecialistsInBuilding[eBuilding];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR _eBuilding$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]

; 3568 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z ENDP ; CvCityCitizens::GetNumSpecialistsInBuilding
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetNumForcedSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eBuilding$ = 8						; size = 4
?GetNumForcedSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z PROC ; CvCityCitizens::GetNumForcedSpecialistsInBuilding, COMDAT
; _this$ = ecx

; 3572 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3573 : 	CvAssert(eBuilding > -1);
; 3574 : 	CvAssert(eBuilding < GC.getNumBuildingInfos());
; 3575 : 
; 3576 : 	return m_aiNumForcedSpecialistsInBuilding[eBuilding];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	edx, DWORD PTR _eBuilding$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]

; 3577 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumForcedSpecialistsInBuilding@CvCityCitizens@@QBEHW4BuildingTypes@@@Z ENDP ; CvCityCitizens::GetNumForcedSpecialistsInBuilding
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?DoClearForcedSpecialists@CvCityCitizens@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_iBuildingLoop$225358 = -8				; size = 4
_eBuilding$ = -4					; size = 4
?DoClearForcedSpecialists@CvCityCitizens@@QAEXXZ PROC	; CvCityCitizens::DoClearForcedSpecialists, COMDAT
; _this$ = ecx

; 3581 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 3582 : 	// Loop through all Buildings
; 3583 : 	BuildingTypes eBuilding;
; 3584 : #ifdef AUI_WARNING_FIXES
; 3585 : 	for (uint iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)
; 3586 : #else
; 3587 : 	for(int iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)

	mov	DWORD PTR _iBuildingLoop$225358[ebp], 0
	jmp	SHORT $LN4@DoClearFor
$LN3@DoClearFor:
	mov	eax, DWORD PTR _iBuildingLoop$225358[ebp]
	add	eax, 1
	mov	DWORD PTR _iBuildingLoop$225358[ebp], eax
$LN4@DoClearFor:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iBuildingLoop$225358[ebp], eax
	jge	SHORT $LN5@DoClearFor

; 3588 : #endif
; 3589 : 	{
; 3590 : 		eBuilding = (BuildingTypes) iBuildingLoop;

	mov	ecx, DWORD PTR _iBuildingLoop$225358[ebp]
	mov	DWORD PTR _eBuilding$[ebp], ecx

; 3591 : 
; 3592 : 		// Have this Building in the City?
; 3593 : 		if(GetCity()->GetCityBuildings()->GetNumBuilding(eBuilding) > 0)

	mov	edx, DWORD PTR _eBuilding$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	ecx, eax
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN1@DoClearFor

; 3594 : 		{
; 3595 : 			m_aiNumForcedSpecialistsInBuilding[eBuilding] = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	edx, DWORD PTR _eBuilding$[ebp]
	mov	DWORD PTR [ecx+edx*4], 0
$LN1@DoClearFor:

; 3596 : 		}

	jmp	SHORT $LN3@DoClearFor
$LN5@DoClearFor:

; 3597 : 	}
; 3598 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoClearForcedSpecialists@CvCityCitizens@@QAEXXZ ENDP	; CvCityCitizens::DoClearForcedSpecialists
_TEXT	ENDS
EXTRN	?getGreatPeoplePercent@CvEraInfo@@QBEHXZ:PROC	; CvEraInfo::getGreatPeoplePercent
EXTRN	?getStartEraInfo@CvGame@@QBEAAVCvEraInfo@@XZ:PROC ; CvGame::getStartEraInfo
EXTRN	?getGreatPeoplePercent@CvGameSpeedInfo@@QBEHXZ:PROC ; CvGameSpeedInfo::getGreatPeoplePercent
EXTRN	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ:PROC ; CvGame::getGameSpeedInfo
EXTRN	?getGreatPeopleCreated@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGreatPeopleCreated
EXTRN	?getGreatMerchantsCreated@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGreatMerchantsCreated
EXTRN	?getGreatEngineersCreated@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGreatEngineersCreated
EXTRN	?getGreatScientistsCreated@CvPlayer@@QBEHXZ:PROC ; CvPlayer::getGreatScientistsCreated
EXTRN	?getGreatMusiciansCreated@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGreatMusiciansCreated
EXTRN	?getGreatArtistsCreated@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGreatArtistsCreated
EXTRN	?getGreatWritersCreated@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGreatWritersCreated
; Function compile flags: /Odtp
;	COMDAT ?GetSpecialistUpgradeThreshold@CvCityCitizens@@QAEHW4UnitClassTypes@@@Z
_TEXT	SEGMENT
_this$ = -108						; size = 4
$T227112 = -104						; size = 4
$T227108 = -100						; size = 4
$T227104 = -96						; size = 4
$T227100 = -92						; size = 4
$T227096 = -88						; size = 4
$T227095 = -84						; size = 4
$T227086 = -80						; size = 4
$T227082 = -76						; size = 4
$T227081 = -72						; size = 4
$T227072 = -68						; size = 4
$T227068 = -64						; size = 4
$T227067 = -60						; size = 4
$T227058 = -56						; size = 4
$T227054 = -52						; size = 4
$T227053 = -48						; size = 4
$T227044 = -44						; size = 4
$T227040 = -40						; size = 4
$T227039 = -36						; size = 4
$T227030 = -32						; size = 4
$T227026 = -28						; size = 4
$T227025 = -24						; size = 4
$T227016 = -20						; size = 4
$T227012 = -16						; size = 4
$T227011 = -12						; size = 4
_iNumCreated$ = -8					; size = 4
_iThreshold$ = -4					; size = 4
_eUnitClass$ = 8					; size = 4
?GetSpecialistUpgradeThreshold@CvCityCitizens@@QAEHW4UnitClassTypes@@@Z PROC ; CvCityCitizens::GetSpecialistUpgradeThreshold, COMDAT
; _this$ = ecx

; 3606 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	mov	DWORD PTR _this$[ebp], ecx

; 3607 : 	int iThreshold = /*100*/ GC.getGREAT_PERSON_THRESHOLD_BASE();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7104
	mov	DWORD PTR _iThreshold$[ebp], eax

; 3608 : 	int iNumCreated;
; 3609 : 
; 3610 : 	if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_WRITER", true))

	push	1
	push	OFFSET ??_C@_0BB@PLANPKNO@UNITCLASS_WRITER?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eUnitClass$[ebp], eax
	jne	SHORT $LN12@GetSpecial@2

; 3611 : 	{
; 3612 : 		iNumCreated = GET_PLAYER(GetCity()->getOwner()).getGreatWritersCreated();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	DWORD PTR $T227011[ebp], eax
	mov	ecx, DWORD PTR $T227011[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T227012[ebp], edx
	mov	eax, DWORD PTR $T227012[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T227016[ebp], eax
	mov	ecx, DWORD PTR $T227016[ebp]
	call	?getGreatWritersCreated@CvPlayer@@QBEHXZ ; CvPlayer::getGreatWritersCreated
	mov	DWORD PTR _iNumCreated$[ebp], eax
	jmp	$LN11@GetSpecial@2
$LN12@GetSpecial@2:

; 3613 : 	}
; 3614 : 	else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_ARTIST", true))

	push	1
	push	OFFSET ??_C@_0BB@ILPBPHBP@UNITCLASS_ARTIST?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eUnitClass$[ebp], eax
	jne	SHORT $LN10@GetSpecial@2

; 3615 : 	{
; 3616 : 		iNumCreated = GET_PLAYER(GetCity()->getOwner()).getGreatArtistsCreated();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	DWORD PTR $T227025[ebp], eax
	mov	ecx, DWORD PTR $T227025[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T227026[ebp], edx
	mov	eax, DWORD PTR $T227026[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T227030[ebp], eax
	mov	ecx, DWORD PTR $T227030[ebp]
	call	?getGreatArtistsCreated@CvPlayer@@QBEHXZ ; CvPlayer::getGreatArtistsCreated
	mov	DWORD PTR _iNumCreated$[ebp], eax
	jmp	$LN11@GetSpecial@2
$LN10@GetSpecial@2:

; 3617 : 	}
; 3618 : 	else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_MUSICIAN", true))

	push	1
	push	OFFSET ??_C@_0BD@BKOELLOP@UNITCLASS_MUSICIAN?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eUnitClass$[ebp], eax
	jne	SHORT $LN8@GetSpecial@2

; 3619 : 	{
; 3620 : 		iNumCreated = GET_PLAYER(GetCity()->getOwner()).getGreatMusiciansCreated();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	DWORD PTR $T227039[ebp], eax
	mov	ecx, DWORD PTR $T227039[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T227040[ebp], edx
	mov	eax, DWORD PTR $T227040[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T227044[ebp], eax
	mov	ecx, DWORD PTR $T227044[ebp]
	call	?getGreatMusiciansCreated@CvPlayer@@QBEHXZ ; CvPlayer::getGreatMusiciansCreated
	mov	DWORD PTR _iNumCreated$[ebp], eax
	jmp	$LN11@GetSpecial@2
$LN8@GetSpecial@2:

; 3621 : 	}
; 3622 : 	// GJS: begin separation of great people types
; 3623 : 	else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_SCIENTIST", true))

	push	1
	push	OFFSET ??_C@_0BE@NHLKBGBE@UNITCLASS_SCIENTIST?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eUnitClass$[ebp], eax
	jne	SHORT $LN6@GetSpecial@2

; 3624 : 	{
; 3625 : 		iNumCreated = GET_PLAYER(GetCity()->getOwner()).getGreatScientistsCreated();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	DWORD PTR $T227053[ebp], eax
	mov	ecx, DWORD PTR $T227053[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T227054[ebp], edx
	mov	eax, DWORD PTR $T227054[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T227058[ebp], eax
	mov	ecx, DWORD PTR $T227058[ebp]
	call	?getGreatScientistsCreated@CvPlayer@@QBEHXZ ; CvPlayer::getGreatScientistsCreated
	mov	DWORD PTR _iNumCreated$[ebp], eax
	jmp	$LN11@GetSpecial@2
$LN6@GetSpecial@2:

; 3626 : 	}
; 3627 : 	else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_ENGINEER", true))

	push	1
	push	OFFSET ??_C@_0BD@EAEEACNP@UNITCLASS_ENGINEER?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eUnitClass$[ebp], eax
	jne	SHORT $LN4@GetSpecial@2

; 3628 : 	{
; 3629 : 		iNumCreated = GET_PLAYER(GetCity()->getOwner()).getGreatEngineersCreated();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	DWORD PTR $T227067[ebp], eax
	mov	ecx, DWORD PTR $T227067[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T227068[ebp], edx
	mov	eax, DWORD PTR $T227068[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T227072[ebp], eax
	mov	ecx, DWORD PTR $T227072[ebp]
	call	?getGreatEngineersCreated@CvPlayer@@QBEHXZ ; CvPlayer::getGreatEngineersCreated
	mov	DWORD PTR _iNumCreated$[ebp], eax
	jmp	SHORT $LN11@GetSpecial@2
$LN4@GetSpecial@2:

; 3630 : 	}
; 3631 : 	else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_MERCHANT", true))

	push	1
	push	OFFSET ??_C@_0BD@GIKGAGAO@UNITCLASS_MERCHANT?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eUnitClass$[ebp], eax
	jne	SHORT $LN2@GetSpecial@2

; 3632 : 	{
; 3633 : 		iNumCreated = GET_PLAYER(GetCity()->getOwner()).getGreatMerchantsCreated();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	DWORD PTR $T227081[ebp], eax
	mov	ecx, DWORD PTR $T227081[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T227082[ebp], edx
	mov	eax, DWORD PTR $T227082[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T227086[ebp], eax
	mov	ecx, DWORD PTR $T227086[ebp]
	call	?getGreatMerchantsCreated@CvPlayer@@QBEHXZ ; CvPlayer::getGreatMerchantsCreated
	mov	DWORD PTR _iNumCreated$[ebp], eax

; 3634 : 	}
; 3635 : 	// GJS: end separation of great people types
; 3636 : 	else

	jmp	SHORT $LN11@GetSpecial@2
$LN2@GetSpecial@2:

; 3637 : 	{
; 3638 : 		iNumCreated = GET_PLAYER(GetCity()->getOwner()).getGreatPeopleCreated();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	DWORD PTR $T227095[ebp], eax
	mov	ecx, DWORD PTR $T227095[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T227096[ebp], edx
	mov	eax, DWORD PTR $T227096[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T227100[ebp], eax
	mov	ecx, DWORD PTR $T227100[ebp]
	call	?getGreatPeopleCreated@CvPlayer@@QBEHXZ	; CvPlayer::getGreatPeopleCreated
	mov	DWORD PTR _iNumCreated$[ebp], eax
$LN11@GetSpecial@2:

; 3639 : 	}
; 3640 : 
; 3641 : 	// Increase threshold based on how many GP have already been spawned
; 3642 : 	iThreshold += (/*50*/ GC.getGREAT_PERSON_THRESHOLD_INCREASE() * iNumCreated);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7108
	mov	DWORD PTR $T227104[ebp], ecx
	mov	edx, DWORD PTR $T227104[ebp]
	imul	edx, DWORD PTR _iNumCreated$[ebp]
	add	edx, DWORD PTR _iThreshold$[ebp]
	mov	DWORD PTR _iThreshold$[ebp], edx

; 3643 : 
; 3644 : 	// Game Speed mod
; 3645 : 	iThreshold *= GC.getGame().getGameSpeedInfo().getGreatPeoplePercent();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227108[ebp], eax
	mov	ecx, DWORD PTR $T227108[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getGreatPeoplePercent@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getGreatPeoplePercent
	imul	eax, DWORD PTR _iThreshold$[ebp]
	mov	DWORD PTR _iThreshold$[ebp], eax

; 3646 : 	iThreshold /= 100;

	mov	eax, DWORD PTR _iThreshold$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iThreshold$[ebp], eax

; 3647 : 
; 3648 : 	// Start era mod
; 3649 : 	iThreshold *= GC.getGame().getStartEraInfo().getGreatPeoplePercent();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227112[ebp], edx
	mov	ecx, DWORD PTR $T227112[ebp]
	call	?getStartEraInfo@CvGame@@QBEAAVCvEraInfo@@XZ ; CvGame::getStartEraInfo
	mov	ecx, eax
	call	?getGreatPeoplePercent@CvEraInfo@@QBEHXZ ; CvEraInfo::getGreatPeoplePercent
	imul	eax, DWORD PTR _iThreshold$[ebp]
	mov	DWORD PTR _iThreshold$[ebp], eax

; 3650 : 	iThreshold /= 100;

	mov	eax, DWORD PTR _iThreshold$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iThreshold$[ebp], eax

; 3651 : 
; 3652 : 	return iThreshold;

	mov	eax, DWORD PTR _iThreshold$[ebp]

; 3653 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetSpecialistUpgradeThreshold@CvCityCitizens@@QAEHW4UnitClassTypes@@@Z ENDP ; CvCityCitizens::GetSpecialistUpgradeThreshold
_TEXT	ENDS
PUBLIC	??_C@_0CK@FLLPCCAH@TXT_KEY_NOTIFICATION_SUMMARY_GRE@ ; `string'
PUBLIC	??_C@_0DA@DNFDIJNC@TXT_KEY_NOTIFICATION_GREAT_PERSO@ ; `string'
PUBLIC	??_C@_0M@FNEDFKCL@UNIT_ARTIST?$AA@		; `string'
PUBLIC	??_C@_0BC@HNFIELJF@UNITCLASS_PROPHET?$AA@	; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1String@Localization@@UAE@XZ:PROC
EXTRN	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z:PROC ; CvNotifications::Add
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDXZ:PROC
EXTRN	__imp_?Lookup@Localization@@YA?AVString@1@PBD@Z:PROC
EXTRN	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ:PROC ; CvPlayer::GetNotifications
EXTRN	?addFreeUnit@CvPlayer@@QAEPAVCvPlot@@W4UnitTypes@@W4UnitAITypes@@@Z:PROC ; CvPlayer::addFreeUnit
EXTRN	?IsWarHero@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::IsWarHero
EXTRN	?SetResearchBulbAmount@CvUnit@@QAEXH@Z:PROC	; CvUnit::SetResearchBulbAmount
EXTRN	?GetScienceYieldFromPreviousTurns@CvPlayer@@QAEHHH@Z:PROC ; CvPlayer::GetScienceYieldFromPreviousTurns
EXTRN	?GetBaseBeakersTurnsToCount@CvUnitEntry@@QBEHXZ:PROC ; CvUnitEntry::GetBaseBeakersTurnsToCount
EXTRN	?SetTourismBlastStrength@CvUnit@@QAEXH@Z:PROC	; CvUnit::SetTourismBlastStrength
EXTRN	?GetTourismBlastStrength@CvPlayerCulture@@QAEHH@Z:PROC ; CvPlayerCulture::GetTourismBlastStrength
EXTRN	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ:PROC ; CvPlayer::GetCulture
EXTRN	?GetOneShotTourism@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetOneShotTourism
EXTRN	?GetReligiousStrength@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetReligiousStrength
EXTRN	?GetReligionSpreads@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetReligionSpreads
EXTRN	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ:PROC ; CvPlayerReligions::GetReligionCreatedByPlayer
EXTRN	?IsFoundReligion@CvUnitEntry@@QBE_NXZ:PROC	; CvUnitEntry::IsFoundReligion
EXTRN	?ChangeNumProphetsSpawned@CvPlayerReligions@@QAEXH@Z:PROC ; CvPlayerReligions::ChangeNumProphetsSpawned
EXTRN	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ:PROC ; CvPlayer::GetReligions
EXTRN	?incrementGreatPeopleCreated@CvPlayer@@QAEXXZ:PROC ; CvPlayer::incrementGreatPeopleCreated
EXTRN	?incrementGreatProphetsCreated@CvPlayer@@QAEXXZ:PROC ; CvPlayer::incrementGreatProphetsCreated
EXTRN	?incrementGreatMerchantsCreated@CvPlayer@@QAEXXZ:PROC ; CvPlayer::incrementGreatMerchantsCreated
EXTRN	?incrementGreatEngineersCreated@CvPlayer@@QAEXXZ:PROC ; CvPlayer::incrementGreatEngineersCreated
EXTRN	?incrementGreatScientistsCreated@CvPlayer@@QAEXXZ:PROC ; CvPlayer::incrementGreatScientistsCreated
EXTRN	?incrementGreatMusiciansCreated@CvPlayer@@QAEXXZ:PROC ; CvPlayer::incrementGreatMusiciansCreated
EXTRN	?incrementGreatArtistsCreated@CvPlayer@@QAEXXZ:PROC ; CvPlayer::incrementGreatArtistsCreated
EXTRN	?incrementGreatWritersCreated@CvPlayer@@QAEXXZ:PROC ; CvPlayer::incrementGreatWritersCreated
EXTRN	?GetUnitClassType@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetUnitClassType
EXTRN	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ:PROC	; CvUnit::getUnitInfo
EXTRN	?setXY@CvUnit@@QAEXHH_N0000@Z:PROC		; CvUnit::setXY
EXTRN	?plot@CvUnit@@QBEPAVCvPlot@@XZ:PROC		; CvUnit::plot
EXTRN	?GetGreatAdmiralSpawnPlot@CvPlayer@@QAEPAVCvPlot@@PAVCvUnit@@@Z:PROC ; CvPlayer::GetGreatAdmiralSpawnPlot
EXTRN	?incrementGreatAdmiralsCreated@CvPlayer@@QAEXXZ:PROC ; CvPlayer::incrementGreatAdmiralsCreated
EXTRN	?IsGreatAdmiral@CvUnit@@QBE_NXZ:PROC		; CvUnit::IsGreatAdmiral
EXTRN	?incrementGreatGeneralsCreated@CvPlayer@@QAEXXZ:PROC ; CvPlayer::incrementGreatGeneralsCreated
EXTRN	?IsGreatGeneral@CvUnit@@QBE_NXZ:PROC		; CvUnit::IsGreatGeneral
EXTRN	?initUnit@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z:PROC ; CvPlayer::initUnit
EXTRN	?isNetworkMultiPlayer@CvGame@@QBE_NXZ:PROC	; CvGame::isNetworkMultiPlayer
EXTRN	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ:PROC ; CvGame::getActivePlayer
;	COMDAT ??_C@_0CK@FLLPCCAH@TXT_KEY_NOTIFICATION_SUMMARY_GRE@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
CONST	SEGMENT
??_C@_0CK@FLLPCCAH@TXT_KEY_NOTIFICATION_SUMMARY_GRE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_GREAT_PERSON', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@DNFDIJNC@TXT_KEY_NOTIFICATION_GREAT_PERSO@
CONST	SEGMENT
??_C@_0DA@DNFDIJNC@TXT_KEY_NOTIFICATION_GREAT_PERSO@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_GREAT_PERSON_ACTIVE_PLAYER', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FNEDFKCL@UNIT_ARTIST?$AA@
CONST	SEGMENT
??_C@_0M@FNEDFKCL@UNIT_ARTIST?$AA@ DB 'UNIT_ARTIST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HNFIELJF@UNITCLASS_PROPHET?$AA@
CONST	SEGMENT
??_C@_0BC@HNFIELJF@UNITCLASS_PROPHET?$AA@ DB 'UNITCLASS_PROPHET', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z$1
__ehfuncinfo$?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvcitycitizens.cpp
xdata$x	ENDS
;	COMDAT ?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z
_TEXT	SEGMENT
tv131 = -852						; size = 4
_this$ = -848						; size = 4
$T227247 = -844						; size = 4
$T227246 = -840						; size = 4
$T227242 = -836						; size = 4
$T227241 = -832						; size = 4
$T227232 = -828						; size = 4
$T227231 = -824						; size = 4
$T227222 = -820						; size = 4
$T227221 = -816						; size = 4
$T227217 = -812						; size = 4
$T227210 = -808						; size = 4
$T227203 = -804						; size = 4
$T227196 = -800						; size = 4
$T227189 = -796						; size = 4
$T227185 = -792						; size = 4
$T227184 = -788						; size = 4
$T227175 = -784						; size = 4
$T227174 = -780						; size = 4
$T227162 = -776						; size = 4
$T227161 = -772						; size = 4
$T227152 = -768						; size = 4
$T227145 = -764						; size = 4
$T227144 = -760						; size = 4
$T227135 = -756						; size = 4
$T227131 = -752						; size = 4
$T227127 = -748						; size = 4
$T227126 = -744						; size = 4
_strText$225428 = -740					; size = 80
_strSummary$225431 = -660				; size = 80
_eReligion$225418 = -580				; size = 4
_iReligionSpreads$225419 = -576				; size = 4
_iReligiousStrength$225420 = -572			; size = 4
_pSpawnPlot$225398 = -568				; size = 4
_kPopupInfo$225391 = -564				; size = 536
__$ArrayPad$ = -24					; size = 4
_newUnit$ = -20						; size = 4
_kPlayer$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_eUnit$ = 8						; size = 4
_bIncrementCount$ = 12					; size = 1
_bCountAsProphet$ = 16					; size = 1
?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z PROC ; CvCityCitizens::DoSpawnGreatPerson, COMDAT
; _this$ = ecx

; 3657 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 840				; 00000348H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 3658 : 	CvAssert(eUnit != NO_UNIT);
; 3659 : 
; 3660 : 	if (eUnit == NO_UNIT)

	cmp	DWORD PTR _eUnit$[ebp], -1
	jne	SHORT $LN30@DoSpawnGre

; 3661 : 		return;	// Better than crashing.

	jmp	$LN31@DoSpawnGre
$LN30@DoSpawnGre:

; 3662 : 
; 3663 : 	// If it's the active player then show the popup
; 3664 : 	if(GetCity()->getOwner() == GC.getGame().getActivePlayer())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	DWORD PTR $T227126[ebp], eax
	mov	eax, DWORD PTR $T227126[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T227127[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227131[ebp], edx
	mov	ecx, DWORD PTR $T227131[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T227127[ebp], eax
	jne	$LN29@DoSpawnGre

; 3665 : 	{
; 3666 : 		// Don't show in MP
; 3667 : 		if(!GC.getGame().isNetworkMultiPlayer())	// KWG: Candidate for !GC.getGame().IsOption(GAMEOPTION_SIMULTANEOUS_TURNS)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227135[ebp], eax
	mov	ecx, DWORD PTR $T227135[ebp]
	call	?isNetworkMultiPlayer@CvGame@@QBE_NXZ	; CvGame::isNetworkMultiPlayer
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN29@DoSpawnGre

; 3668 : 		{
; 3669 : 			CvPopupInfo kPopupInfo(BUTTONPOPUP_GREAT_PERSON_REWARD, eUnit, GetCity()->GetID());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	DWORD PTR $T227144[ebp], eax
	mov	edx, DWORD PTR $T227144[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	DWORD PTR $T227145[ebp], eax
	mov	ecx, DWORD PTR _eUnit$[ebp]
	mov	DWORD PTR _kPopupInfo$225391[ebp], ecx
	mov	edx, DWORD PTR $T227145[ebp]
	mov	DWORD PTR _kPopupInfo$225391[ebp+4], edx
	mov	DWORD PTR _kPopupInfo$225391[ebp+8], -1
	mov	DWORD PTR _kPopupInfo$225391[ebp+12], 0
	mov	BYTE PTR _kPopupInfo$225391[ebp+16], 0
	mov	BYTE PTR _kPopupInfo$225391[ebp+17], 0
	mov	DWORD PTR _kPopupInfo$225391[ebp+20], 60 ; 0000003cH
	mov	BYTE PTR _kPopupInfo$225391[ebp+24], 0

; 3670 : 			GC.GetEngineUserInterface()->AddPopup(kPopupInfo);

	mov	eax, DWORD PTR $T227152[ebp]
	mov	DWORD PTR tv131[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv131[ebp], ecx
	lea	edx, DWORD PTR _kPopupInfo$225391[ebp]
	push	edx
	mov	eax, DWORD PTR tv131[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv131[ebp]
	mov	eax, DWORD PTR [edx+180]
	call	eax
$LN29@DoSpawnGre:

; 3671 : 		}
; 3672 : 	}
; 3673 : 
; 3674 : 	CvPlayer& kPlayer = GET_PLAYER(GetCity()->getOwner());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	DWORD PTR $T227161[ebp], eax
	mov	ecx, DWORD PTR $T227161[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T227162[ebp], edx
	mov	eax, DWORD PTR $T227162[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 3675 : 	CvUnit* newUnit = kPlayer.initUnit(eUnit, GetCity()->getX(), GetCity()->getY());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	DWORD PTR $T227174[ebp], eax
	mov	ecx, DWORD PTR $T227174[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T227175[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	DWORD PTR $T227184[ebp], eax
	mov	eax, DWORD PTR $T227184[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T227185[ebp], ecx
	push	0
	push	0
	push	1
	push	0
	push	-1
	push	-1
	mov	edx, DWORD PTR $T227175[ebp]
	push	edx
	mov	eax, DWORD PTR $T227185[ebp]
	push	eax
	mov	ecx, DWORD PTR _eUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?initUnit@CvPlayer@@QAEPAVCvUnit@@W4UnitTypes@@HHW4UnitAITypes@@W4DirectionTypes@@_N3HH@Z ; CvPlayer::initUnit
	mov	DWORD PTR _newUnit$[ebp], eax

; 3676 : #ifdef AUI_DLLNETMESSAGEHANDLER_FIX_RESPAWN_PROPHET_IF_BEATEN_TO_LAST_RELIGION
; 3677 : 	if (bSpawnWithNoExpendedTrigger)
; 3678 : 		newUnit->SetIgnoreExpended(true);
; 3679 : #endif
; 3680 : 
; 3681 : 	// Bump up the count
; 3682 : 	if(bIncrementCount && !bCountAsProphet)

	movzx	edx, BYTE PTR _bIncrementCount$[ebp]
	test	edx, edx
	je	$LN27@DoSpawnGre
	movzx	eax, BYTE PTR _bCountAsProphet$[ebp]
	test	eax, eax
	jne	$LN27@DoSpawnGre

; 3683 : 	{
; 3684 : 		if(newUnit->IsGreatGeneral())

	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?IsGreatGeneral@CvUnit@@QBE_NXZ		; CvUnit::IsGreatGeneral
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN26@DoSpawnGre

; 3685 : 		{
; 3686 : 			kPlayer.incrementGreatGeneralsCreated();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?incrementGreatGeneralsCreated@CvPlayer@@QAEXXZ ; CvPlayer::incrementGreatGeneralsCreated
	jmp	$LN27@DoSpawnGre
$LN26@DoSpawnGre:

; 3687 : 		}
; 3688 : 		else if(newUnit->IsGreatAdmiral())

	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?IsGreatAdmiral@CvUnit@@QBE_NXZ		; CvUnit::IsGreatAdmiral
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN24@DoSpawnGre

; 3689 : 		{
; 3690 : 			kPlayer.incrementGreatAdmiralsCreated();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?incrementGreatAdmiralsCreated@CvPlayer@@QAEXXZ ; CvPlayer::incrementGreatAdmiralsCreated

; 3691 : 			CvPlot *pSpawnPlot = kPlayer.GetGreatAdmiralSpawnPlot(newUnit);

	mov	eax, DWORD PTR _newUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetGreatAdmiralSpawnPlot@CvPlayer@@QAEPAVCvPlot@@PAVCvUnit@@@Z ; CvPlayer::GetGreatAdmiralSpawnPlot
	mov	DWORD PTR _pSpawnPlot$225398[ebp], eax

; 3692 : 			if (newUnit->plot() != pSpawnPlot)

	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	cmp	eax, DWORD PTR _pSpawnPlot$225398[ebp]
	je	SHORT $LN23@DoSpawnGre

; 3693 : 			{
; 3694 : 				newUnit->setXY(pSpawnPlot->getX(), pSpawnPlot->getY());

	mov	ecx, DWORD PTR _pSpawnPlot$225398[ebp]
	movsx	edx, WORD PTR [ecx+2]
	mov	DWORD PTR $T227189[ebp], edx
	push	0
	push	0
	push	0
	push	1
	push	0
	mov	eax, DWORD PTR $T227189[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSpawnPlot$225398[ebp]
	movsx	edx, WORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?setXY@CvUnit@@QAEXHH_N0000@Z		; CvUnit::setXY
$LN23@DoSpawnGre:

; 3695 : 			}
; 3696 : 		}

	jmp	$LN27@DoSpawnGre
$LN24@DoSpawnGre:

; 3697 : 		else if (newUnit->getUnitInfo().GetUnitClassType() == GC.getInfoTypeForString("UNITCLASS_WRITER"))

	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?GetUnitClassType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetUnitClassType
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0BB@PLANPKNO@UNITCLASS_WRITER?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jne	SHORT $LN21@DoSpawnGre

; 3698 : 		{
; 3699 : 			kPlayer.incrementGreatWritersCreated();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?incrementGreatWritersCreated@CvPlayer@@QAEXXZ ; CvPlayer::incrementGreatWritersCreated
	jmp	$LN27@DoSpawnGre
$LN21@DoSpawnGre:

; 3700 : 		}							
; 3701 : 		else if (newUnit->getUnitInfo().GetUnitClassType() == GC.getInfoTypeForString("UNITCLASS_ARTIST"))

	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?GetUnitClassType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetUnitClassType
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0BB@ILPBPHBP@UNITCLASS_ARTIST?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jne	SHORT $LN19@DoSpawnGre

; 3702 : 		{
; 3703 : 			kPlayer.incrementGreatArtistsCreated();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?incrementGreatArtistsCreated@CvPlayer@@QAEXXZ ; CvPlayer::incrementGreatArtistsCreated
	jmp	$LN27@DoSpawnGre
$LN19@DoSpawnGre:

; 3704 : 		}							
; 3705 : 		else if (newUnit->getUnitInfo().GetUnitClassType() == GC.getInfoTypeForString("UNITCLASS_MUSICIAN"))

	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?GetUnitClassType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetUnitClassType
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0BD@BKOELLOP@UNITCLASS_MUSICIAN?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jne	SHORT $LN17@DoSpawnGre

; 3706 : 		{
; 3707 : 			kPlayer.incrementGreatMusiciansCreated();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?incrementGreatMusiciansCreated@CvPlayer@@QAEXXZ ; CvPlayer::incrementGreatMusiciansCreated
	jmp	$LN27@DoSpawnGre
$LN17@DoSpawnGre:

; 3708 : 		}		
; 3709 : 		// GJS: Start separation of great people
; 3710 : 		else if (newUnit->getUnitInfo().GetUnitClassType() == GC.getInfoTypeForString("UNITCLASS_SCIENTIST"))

	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?GetUnitClassType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetUnitClassType
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0BE@NHLKBGBE@UNITCLASS_SCIENTIST?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jne	SHORT $LN15@DoSpawnGre

; 3711 : 		{
; 3712 : 			kPlayer.incrementGreatScientistsCreated();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?incrementGreatScientistsCreated@CvPlayer@@QAEXXZ ; CvPlayer::incrementGreatScientistsCreated
	jmp	$LN27@DoSpawnGre
$LN15@DoSpawnGre:

; 3713 : 		}
; 3714 : 		else if (newUnit->getUnitInfo().GetUnitClassType() == GC.getInfoTypeForString("UNITCLASS_ENGINEER"))

	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?GetUnitClassType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetUnitClassType
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0BD@EAEEACNP@UNITCLASS_ENGINEER?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jne	SHORT $LN13@DoSpawnGre

; 3715 : 		{
; 3716 : 			kPlayer.incrementGreatEngineersCreated();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?incrementGreatEngineersCreated@CvPlayer@@QAEXXZ ; CvPlayer::incrementGreatEngineersCreated
	jmp	SHORT $LN27@DoSpawnGre
$LN13@DoSpawnGre:

; 3717 : 		}
; 3718 : 		else if (newUnit->getUnitInfo().GetUnitClassType() == GC.getInfoTypeForString("UNITCLASS_MERCHANT"))

	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?GetUnitClassType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetUnitClassType
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0BD@GIKGAGAO@UNITCLASS_MERCHANT?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jne	SHORT $LN11@DoSpawnGre

; 3719 : 		{
; 3720 : 			kPlayer.incrementGreatMerchantsCreated();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?incrementGreatMerchantsCreated@CvPlayer@@QAEXXZ ; CvPlayer::incrementGreatMerchantsCreated
	jmp	SHORT $LN27@DoSpawnGre
$LN11@DoSpawnGre:

; 3721 : 		}
; 3722 : 		else if (newUnit->getUnitInfo().GetUnitClassType() == GC.getInfoTypeForString("UNITCLASS_PROPHET"))

	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?GetUnitClassType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetUnitClassType
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0BC@HNFIELJF@UNITCLASS_PROPHET?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jne	SHORT $LN9@DoSpawnGre

; 3723 : 		{
; 3724 : 			kPlayer.incrementGreatProphetsCreated();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?incrementGreatProphetsCreated@CvPlayer@@QAEXXZ ; CvPlayer::incrementGreatProphetsCreated

; 3725 : 		}
; 3726 : 		// GJS: End separation of great people
; 3727 : 		else

	jmp	SHORT $LN27@DoSpawnGre
$LN9@DoSpawnGre:

; 3728 : 		{
; 3729 : 			kPlayer.incrementGreatPeopleCreated();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?incrementGreatPeopleCreated@CvPlayer@@QAEXXZ ; CvPlayer::incrementGreatPeopleCreated
$LN27@DoSpawnGre:

; 3730 : 		}
; 3731 : 	}
; 3732 : 
; 3733 : 	// NQMP GJS: In order to make "free" Great Prophets truly free, had to remove the 2nd half of the check below, left it commented out though in case I screw something up.
; 3734 : 	if(bCountAsProphet)// || newUnit->getUnitInfo().IsFoundReligion())

	movzx	eax, BYTE PTR _bCountAsProphet$[ebp]
	test	eax, eax
	je	SHORT $LN7@DoSpawnGre

; 3735 : 	{
; 3736 : 		kPlayer.GetReligions()->ChangeNumProphetsSpawned(1);

	push	1
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?ChangeNumProphetsSpawned@CvPlayerReligions@@QAEXH@Z ; CvPlayerReligions::ChangeNumProphetsSpawned
$LN7@DoSpawnGre:

; 3737 : 	}
; 3738 : 
; 3739 : 	// Setup prophet properly
; 3740 : 	if(newUnit->getUnitInfo().IsFoundReligion())

	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?IsFoundReligion@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsFoundReligion
	movzx	ecx, al
	test	ecx, ecx
	je	$LN6@DoSpawnGre

; 3741 : 	{
; 3742 : 		ReligionTypes eReligion = kPlayer.GetReligions()->GetReligionCreatedByPlayer();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eReligion$225418[ebp], eax

; 3743 : 		int iReligionSpreads = newUnit->getUnitInfo().GetReligionSpreads();

	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?GetReligionSpreads@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetReligionSpreads
	mov	DWORD PTR _iReligionSpreads$225419[ebp], eax

; 3744 : 		int iReligiousStrength = newUnit->getUnitInfo().GetReligiousStrength();

	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?GetReligiousStrength@CvUnitEntry@@QBEHXZ ; CvUnitEntry::GetReligiousStrength
	mov	DWORD PTR _iReligiousStrength$225420[ebp], eax

; 3745 : 		if(iReligionSpreads > 0 && eReligion > RELIGION_PANTHEON)

	cmp	DWORD PTR _iReligionSpreads$225419[ebp], 0
	jle	SHORT $LN6@DoSpawnGre
	cmp	DWORD PTR _eReligion$225418[ebp], 0
	jle	SHORT $LN6@DoSpawnGre

; 3746 : 		{
; 3747 : 			newUnit->GetReligionData()->SetSpreadsLeft(iReligionSpreads);

	mov	edx, DWORD PTR _newUnit$[ebp]
	mov	eax, DWORD PTR [edx+1888]
	mov	DWORD PTR $T227196[ebp], eax
	mov	ecx, DWORD PTR $T227196[ebp]
	mov	edx, DWORD PTR _iReligionSpreads$225419[ebp]
	mov	DWORD PTR [ecx+8], edx

; 3748 : 			newUnit->GetReligionData()->SetReligiousStrength(iReligiousStrength);

	mov	eax, DWORD PTR _newUnit$[ebp]
	mov	ecx, DWORD PTR [eax+1888]
	mov	DWORD PTR $T227203[ebp], ecx
	mov	edx, DWORD PTR $T227203[ebp]
	mov	eax, DWORD PTR _iReligiousStrength$225420[ebp]
	mov	DWORD PTR [edx+4], eax

; 3749 : 			newUnit->GetReligionData()->SetReligion(eReligion);

	mov	ecx, DWORD PTR _newUnit$[ebp]
	mov	edx, DWORD PTR [ecx+1888]
	mov	DWORD PTR $T227210[ebp], edx
	mov	eax, DWORD PTR $T227210[ebp]
	mov	ecx, DWORD PTR _eReligion$225418[ebp]
	mov	DWORD PTR [eax], ecx
$LN6@DoSpawnGre:

; 3750 : 		}
; 3751 : 	}
; 3752 : 
; 3753 : 	if (newUnit->getUnitInfo().GetOneShotTourism() > 0)

	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?GetOneShotTourism@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetOneShotTourism
	test	eax, eax
	jle	SHORT $LN4@DoSpawnGre

; 3754 : 	{
; 3755 : 		newUnit->SetTourismBlastStrength(kPlayer.GetCulture()->GetTourismBlastStrength(newUnit->getUnitInfo().GetOneShotTourism()));

	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?GetOneShotTourism@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetOneShotTourism
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetCulture@CvPlayer@@QBEPAVCvPlayerCulture@@XZ ; CvPlayer::GetCulture
	mov	ecx, eax
	call	?GetTourismBlastStrength@CvPlayerCulture@@QAEHH@Z ; CvPlayerCulture::GetTourismBlastStrength
	push	eax
	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?SetTourismBlastStrength@CvUnit@@QAEXH@Z ; CvUnit::SetTourismBlastStrength
$LN4@DoSpawnGre:

; 3756 : 	}
; 3757 : 
; 3758 : 	// GJS: Great Scientists now bulb for science at point of birth, not current science 
; 3759 : 	if (newUnit->getUnitInfo().GetBaseBeakersTurnsToCount() > 0)

	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?GetBaseBeakersTurnsToCount@CvUnitEntry@@QBEHXZ ; CvUnitEntry::GetBaseBeakersTurnsToCount
	test	eax, eax
	jle	SHORT $LN3@DoSpawnGre

; 3760 : 	{
; 3761 : 		newUnit->SetResearchBulbAmount(kPlayer.GetScienceYieldFromPreviousTurns(GC.getGame().getGameTurn(), newUnit->getUnitInfo().GetBaseBeakersTurnsToCount()));

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227217[ebp], edx
	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?GetBaseBeakersTurnsToCount@CvUnitEntry@@QBEHXZ ; CvUnitEntry::GetBaseBeakersTurnsToCount
	push	eax
	mov	ecx, DWORD PTR $T227217[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetScienceYieldFromPreviousTurns@CvPlayer@@QAEHHH@Z ; CvPlayer::GetScienceYieldFromPreviousTurns
	push	eax
	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?SetResearchBulbAmount@CvUnit@@QAEXH@Z	; CvUnit::SetResearchBulbAmount
$LN3@DoSpawnGre:

; 3762 : 	}
; 3763 : 
; 3764 : #ifdef NQ_WAR_HERO
; 3765 : 	if (newUnit->IsGreatGeneral() && kPlayer.IsWarHero())

	mov	ecx, DWORD PTR _newUnit$[ebp]
	call	?IsGreatGeneral@CvUnit@@QBE_NXZ		; CvUnit::IsGreatGeneral
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@DoSpawnGre
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?IsWarHero@CvPlayer@@QBE_NXZ		; CvPlayer::IsWarHero
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@DoSpawnGre

; 3766 : 	{
; 3767 : 		kPlayer.addFreeUnit((UnitTypes)GC.getInfoTypeForString("UNIT_ARTIST"));

	push	-1
	push	0
	push	OFFSET ??_C@_0M@FNEDFKCL@UNIT_ARTIST?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?addFreeUnit@CvPlayer@@QAEPAVCvPlot@@W4UnitTypes@@W4UnitAITypes@@@Z ; CvPlayer::addFreeUnit
$LN2@DoSpawnGre:

; 3768 : 	}
; 3769 : #endif
; 3770 : 
; 3771 : 	// Notification
; 3772 : 	if(GET_PLAYER(GetOwner()).GetNotifications())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetOwner@CvCityCitizens@@QBE?AW4PlayerTypes@@XZ ; CvCityCitizens::GetOwner
	mov	DWORD PTR $T227221[ebp], eax
	mov	edx, DWORD PTR $T227221[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T227222[ebp], edx
	mov	ecx, DWORD PTR $T227222[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	test	eax, eax
	je	$LN31@DoSpawnGre

; 3773 : 	{
; 3774 : 		Localization::String strText = Localization::Lookup("TXT_KEY_NOTIFICATION_GREAT_PERSON_ACTIVE_PLAYER");

	push	OFFSET ??_C@_0DA@DNFDIJNC@TXT_KEY_NOTIFICATION_GREAT_PERSO@
	lea	eax, DWORD PTR _strText$225428[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3775 : 		Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_SUMMARY_GREAT_PERSON");

	push	OFFSET ??_C@_0CK@FLLPCCAH@TXT_KEY_NOTIFICATION_SUMMARY_GRE@
	lea	ecx, DWORD PTR _strSummary$225431[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 3776 : 		GET_PLAYER(GetOwner()).GetNotifications()->Add(NOTIFICATION_GREAT_PERSON_ACTIVE_PLAYER, strText.toUTF8(), strSummary.toUTF8(), GetCity()->getX(), GetCity()->getY(), eUnit);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	DWORD PTR $T227231[ebp], eax
	mov	edx, DWORD PTR $T227231[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T227232[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCity@CvCityCitizens@@QAEPAVCvCity@@XZ ; CvCityCitizens::GetCity
	mov	DWORD PTR $T227241[ebp], eax
	mov	ecx, DWORD PTR $T227241[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T227242[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetOwner@CvCityCitizens@@QBE?AW4PlayerTypes@@XZ ; CvCityCitizens::GetOwner
	mov	DWORD PTR $T227246[ebp], eax
	mov	eax, DWORD PTR $T227246[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T227247[ebp], eax
	push	-1
	mov	ecx, DWORD PTR _eUnit$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T227232[ebp]
	push	edx
	mov	eax, DWORD PTR $T227242[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$225431[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strText$225428[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	-2083717098				; 83cd0016H
	mov	ecx, DWORD PTR $T227247[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 3777 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$225431[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strText$225428[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN31@DoSpawnGre:

; 3778 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z$0:
	lea	ecx, DWORD PTR _strText$225428[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z$1:
	lea	ecx, DWORD PTR _strSummary$225431[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-848]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z ENDP ; CvCityCitizens::DoSpawnGreatPerson
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??1?$auto_ptr@VICvCity1@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_inst$227260 = -8					; size = 4
$T227256 = -4						; size = 4
??1?$auto_ptr@VICvCity1@@@std@@QAE@XZ PROC		; std::auto_ptr<ICvCity1>::~auto_ptr<ICvCity1>, COMDAT
; _this$ = ecx

; 720  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 721  : 		delete _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T227256[ebp], ecx
	cmp	DWORD PTR $T227256[ebp], 0
	je	SHORT $LN1@auto_ptr
	mov	edx, DWORD PTR $T227256[ebp]
	mov	DWORD PTR _inst$227260[ebp], edx
	mov	eax, DWORD PTR _inst$227260[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$227260[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN1@auto_ptr:

; 722  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$auto_ptr@VICvCity1@@@std@@QAE@XZ ENDP		; std::auto_ptr<ICvCity1>::~auto_ptr<ICvCity1>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fdatastream.h
_TEXT	ENDS
;	COMDAT ??$?5_N$0CF@@@YAAAVFDataStream@@AAV0@AAY0CF@_N@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??$?5_N$0CF@@@YAAAVFDataStream@@AAV0@AAY0CF@_N@Z PROC	; operator>><bool,37>, COMDAT

; 234  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 235  : 	size_t i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 236  : 	for(i = 0; i < count; ++i)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@operator
$LN2@operator:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@operator:
	cmp	DWORD PTR _i$[ebp], 37			; 00000025H
	jae	SHORT $LN1@operator

; 237  : 	{
; 238  : 		loadFrom >> writeTo[i];

	mov	ecx, DWORD PTR _writeTo$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 239  : 	}

	jmp	SHORT $LN2@operator
$LN1@operator:

; 240  : 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[ebp]

; 241  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$?5_N$0CF@@@YAAAVFDataStream@@AAV0@AAY0CF@_N@Z ENDP	; operator>><bool,37>
_TEXT	ENDS
EXTRN	?ReadHashed@CvInfosSerializationHelper@@YAHAAVFDataStream@@PA_N@Z:PROC ; CvInfosSerializationHelper::ReadHashed
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvinfosserializationhelper.h
;	COMDAT ??$ReadHashedDataArray@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHH@Z
_TEXT	SEGMENT
_tValue$225466 = -24					; size = 4
_tValue$225461 = -20					; size = 4
_iType$225459 = -16					; size = 4
_bValid$225458 = -9					; size = 1
_iI$225454 = -8						; size = 4
_uiNumEntries$ = -4					; size = 4
_kStream$ = 8						; size = 4
_paArray$ = 12						; size = 4
_iArraySize$ = 16					; size = 4
??$ReadHashedDataArray@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHH@Z PROC ; CvInfosSerializationHelper::ReadHashedDataArray<int>, COMDAT

; 248  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 249  : 	uint uiNumEntries;
; 250  : 
; 251  : 	kStream >> uiNumEntries;

	lea	eax, DWORD PTR _uiNumEntries$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 252  : 
; 253  : 	for(uint iI = 0; iI < uiNumEntries; iI++)

	mov	DWORD PTR _iI$225454[ebp], 0
	jmp	SHORT $LN7@ReadHashed
$LN6@ReadHashed:
	mov	ecx, DWORD PTR _iI$225454[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$225454[ebp], ecx
$LN7@ReadHashed:
	mov	edx, DWORD PTR _iI$225454[ebp]
	cmp	edx, DWORD PTR _uiNumEntries$[ebp]
	jae	SHORT $LN8@ReadHashed

; 254  : 	{
; 255  : 		bool bValid;
; 256  : 		int iType = ReadHashed(kStream, &bValid);

	lea	eax, DWORD PTR _bValid$225458[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	?ReadHashed@CvInfosSerializationHelper@@YAHAAVFDataStream@@PA_N@Z ; CvInfosSerializationHelper::ReadHashed
	add	esp, 8
	mov	DWORD PTR _iType$225459[ebp], eax

; 257  : 		if(iType != -1)

	cmp	DWORD PTR _iType$225459[ebp], -1
	je	SHORT $LN4@ReadHashed

; 258  : 		{
; 259  : 			TData tValue;
; 260  : 			kStream >> tValue;

	lea	edx, DWORD PTR _tValue$225461[ebp]
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 261  : 			if((int)iType < iArraySize)

	mov	eax, DWORD PTR _iType$225459[ebp]
	cmp	eax, DWORD PTR _iArraySize$[ebp]
	jge	SHORT $LN3@ReadHashed

; 262  : 				paArray[iType] = tValue;

	mov	ecx, DWORD PTR _iType$225459[ebp]
	mov	edx, DWORD PTR _paArray$[ebp]
	mov	eax, DWORD PTR _tValue$225461[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
$LN3@ReadHashed:

; 263  : 		}

	jmp	SHORT $LN2@ReadHashed
$LN4@ReadHashed:

; 264  : 		else if(!bValid)

	movzx	ecx, BYTE PTR _bValid$225458[ebp]
	test	ecx, ecx
	jne	SHORT $LN2@ReadHashed

; 265  : 		{
; 266  : 			TData tValue;
; 267  : 			kStream >> tValue;

	lea	edx, DWORD PTR _tValue$225466[ebp]
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
$LN2@ReadHashed:

; 268  : 		}
; 269  : 	}

	jmp	SHORT $LN6@ReadHashed
$LN8@ReadHashed:

; 270  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$ReadHashedDataArray@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHH@Z ENDP ; CvInfosSerializationHelper::ReadHashedDataArray<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fdatastream.h
_TEXT	ENDS
;	COMDAT ??$?6_N$0CF@@@YAAAVFDataStream@@AAV0@AAY0CF@$$CB_N@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??$?6_N$0CF@@@YAAAVFDataStream@@AAV0@AAY0CF@$$CB_N@Z PROC ; operator<<<bool,37>, COMDAT

; 223  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 224  : 	size_t i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 225  : 	for(i = 0; i < count; ++i)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@operator@2:
	cmp	DWORD PTR _i$[ebp], 37			; 00000025H
	jae	SHORT $LN1@operator@2

; 226  : 	{
; 227  : 		saveTo << readFrom[i];

	mov	ecx, DWORD PTR _readFrom$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 228  : 	}

	jmp	SHORT $LN2@operator@2
$LN1@operator@2:

; 229  : 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[ebp]

; 230  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$?6_N$0CF@@@YAAAVFDataStream@@AAV0@AAY0CF@$$CB_N@Z ENDP ; operator<<<bool,37>
_TEXT	ENDS
EXTRN	?WriteHashed@CvInfosSerializationHelper@@YA_NAAVFDataStream@@W4SpecialistTypes@@@Z:PROC ; CvInfosSerializationHelper::WriteHashed
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvinfosserializationhelper.h
;	COMDAT ??$WriteHashedDataArray@W4SpecialistTypes@@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHI@Z
_TEXT	SEGMENT
_eType$225477 = -8					; size = 4
_iI$225473 = -4						; size = 4
_kStream$ = 8						; size = 4
_paArray$ = 12						; size = 4
_uiArraySize$ = 16					; size = 4
??$WriteHashedDataArray@W4SpecialistTypes@@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHI@Z PROC ; CvInfosSerializationHelper::WriteHashedDataArray<enum SpecialistTypes,int>, COMDAT

; 559  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 560  : 	kStream << uiArraySize;

	lea	eax, DWORD PTR _uiArraySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 561  : 
; 562  : 	for(uint iI = 0; iI < uiArraySize; iI++)

	mov	DWORD PTR _iI$225473[ebp], 0
	jmp	SHORT $LN4@WriteHashe
$LN3@WriteHashe:
	mov	ecx, DWORD PTR _iI$225473[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$225473[ebp], ecx
$LN4@WriteHashe:
	mov	edx, DWORD PTR _iI$225473[ebp]
	cmp	edx, DWORD PTR _uiArraySize$[ebp]
	jae	SHORT $LN5@WriteHashe

; 563  : 	{
; 564  : 		const TType eType = static_cast<TType>(iI);

	mov	eax, DWORD PTR _iI$225473[ebp]
	mov	DWORD PTR _eType$225477[ebp], eax

; 565  : 		if(WriteHashed(kStream, eType))

	mov	ecx, DWORD PTR _eType$225477[ebp]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	?WriteHashed@CvInfosSerializationHelper@@YA_NAAVFDataStream@@W4SpecialistTypes@@@Z ; CvInfosSerializationHelper::WriteHashed
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@WriteHashe

; 566  : 		{
; 567  : 			kStream << paArray[iI];

	mov	ecx, DWORD PTR _iI$225473[ebp]
	mov	edx, DWORD PTR _paArray$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
$LN1@WriteHashe:

; 568  : 		}
; 569  : 	}

	jmp	SHORT $LN3@WriteHashe
$LN5@WriteHashe:

; 570  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$WriteHashedDataArray@W4SpecialistTypes@@H@CvInfosSerializationHelper@@YAXAAVFDataStream@@PAHI@Z ENDP ; CvInfosSerializationHelper::WriteHashedDataArray<enum SpecialistTypes,int>
_TEXT	ENDS
END
