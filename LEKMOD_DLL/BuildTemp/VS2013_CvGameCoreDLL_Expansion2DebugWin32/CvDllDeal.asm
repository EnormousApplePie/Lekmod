; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvDllDeal.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05OCFELOIJ@1?40?40?$AA@			; `string'
CONST	SEGMENT
_guidICvUnknown DD 0d89ba82fH
	DW	09fa3H
	DW	04696H
	DB	0b3H
	DB	0f4H
	DB	052H
	DB	0bdH
	DB	0b1H
	DB	01H
	DB	0cfH
	DB	0b2H
_guidICvDeal1 DD 061ca9e15H
	DW	059faH
	DW	04980H
	DB	0adH
	DB	088H
	DB	027H
	DB	0a7H
	DB	01aH
	DB	0c4H
	DB	025H
	DB	0a5H
CONST	ENDS
_DATA	SEGMENT
_CIV5_XP2_DLL_VERSION DD FLAT:??_C@_05OCFELOIJ@1?40?40?$AA@
_DATA	ENDS
;	COMDAT ??_C@_05OCFELOIJ@1?40?40?$AA@
CONST	SEGMENT
??_C@_05OCFELOIJ@1?40?40?$AA@ DB '1.0.0', 00H		; `string'
CONST	ENDS
PUBLIC	??_7CvDllDeal@@6B@				; CvDllDeal::`vftable'
PUBLIC	??_7ICvDeal1@@6B@				; ICvDeal1::`vftable'
PUBLIC	??_7ICvUnknown@@6B@				; ICvUnknown::`vftable'
PUBLIC	??0CvDllDeal@@QAE@PAVCvDeal@@@Z			; CvDllDeal::CvDllDeal
PUBLIC	?QueryInterface@CvDllDeal@@UAGPAXU_GUID@@@Z	; CvDllDeal::QueryInterface
PUBLIC	?Destroy@CvDllDeal@@EAGXXZ			; CvDllDeal::Destroy
PUBLIC	?GetOtherPlayer@CvDllDeal@@UAG?AW4PlayerTypes@@W42@@Z ; CvDllDeal::GetOtherPlayer
PUBLIC	?GetToPlayer@CvDllDeal@@UAG?AW4PlayerTypes@@XZ	; CvDllDeal::GetToPlayer
PUBLIC	?GetFromPlayer@CvDllDeal@@UAG?AW4PlayerTypes@@XZ ; CvDllDeal::GetFromPlayer
PUBLIC	?GetStartTurn@CvDllDeal@@UAGIXZ			; CvDllDeal::GetStartTurn
PUBLIC	?GetDuration@CvDllDeal@@UAGIXZ			; CvDllDeal::GetDuration
PUBLIC	?GetEndTurn@CvDllDeal@@UAGIXZ			; CvDllDeal::GetEndTurn
PUBLIC	?CopyFrom@CvDllDeal@@UAGXPAVICvDeal1@@@Z	; CvDllDeal::CopyFrom
PUBLIC	?Read@CvDllDeal@@UAGXAAVFDataStream@@@Z		; CvDllDeal::Read
PUBLIC	?Write@CvDllDeal@@UAGXAAVFDataStream@@@Z	; CvDllDeal::Write
EXTRN	__purecall:PROC
;	COMDAT ??_7CvDllDeal@@6B@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdlldeal.cpp
CONST	SEGMENT
??_7CvDllDeal@@6B@ DD FLAT:?QueryInterface@CvDllDeal@@UAGPAXU_GUID@@@Z ; CvDllDeal::`vftable'
	DD	FLAT:?Destroy@CvDllDeal@@EAGXXZ
	DD	FLAT:?GetOtherPlayer@CvDllDeal@@UAG?AW4PlayerTypes@@W42@@Z
	DD	FLAT:?GetToPlayer@CvDllDeal@@UAG?AW4PlayerTypes@@XZ
	DD	FLAT:?GetFromPlayer@CvDllDeal@@UAG?AW4PlayerTypes@@XZ
	DD	FLAT:?GetStartTurn@CvDllDeal@@UAGIXZ
	DD	FLAT:?GetDuration@CvDllDeal@@UAGIXZ
	DD	FLAT:?GetEndTurn@CvDllDeal@@UAGIXZ
	DD	FLAT:?CopyFrom@CvDllDeal@@UAGXPAVICvDeal1@@@Z
	DD	FLAT:?Read@CvDllDeal@@UAGXAAVFDataStream@@@Z
	DD	FLAT:?Write@CvDllDeal@@UAGXAAVFDataStream@@@Z
CONST	ENDS
;	COMDAT ??_7ICvDeal1@@6B@
CONST	SEGMENT
??_7ICvDeal1@@6B@ DD FLAT:__purecall			; ICvDeal1::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ICvUnknown@@6B@
CONST	SEGMENT
??_7ICvUnknown@@6B@ DD FLAT:__purecall			; ICvUnknown::`vftable'
	DD	FLAT:__purecall
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0CvDllDeal@@QAE@PAVCvDeal@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDeal$ = 8						; size = 4
??0CvDllDeal@@QAE@PAVCvDeal@@@Z PROC			; CvDllDeal::CvDllDeal, COMDAT
; _this$ = ecx

; 20   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnknown@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7ICvDeal1@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7CvDllDeal@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pDeal$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 21   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CvDllDeal@@QAE@PAVCvDeal@@@Z ENDP			; CvDllDeal::CvDllDeal
_TEXT	ENDS
PUBLIC	??1CvDllDeal@@QAE@XZ				; CvDllDeal::~CvDllDeal
; Function compile flags: /Odtp
;	COMDAT ??1CvDllDeal@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvDllDeal@@QAE@XZ PROC				; CvDllDeal::~CvDllDeal, COMDAT
; _this$ = ecx

; 24   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvDllDeal@@6B@

; 25   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1CvDllDeal@@QAE@XZ ENDP				; CvDllDeal::~CvDllDeal
_TEXT	ENDS
PUBLIC	?IncrementReference@CvDllDeal@@QAEIXZ		; CvDllDeal::IncrementReference
; Function compile flags: /Odtp
;	COMDAT ?QueryInterface@CvDllDeal@@UAGPAXU_GUID@@@Z
_TEXT	SEGMENT
tv90 = -88						; size = 4
tv161 = -84						; size = 4
tv85 = -80						; size = 4
tv137 = -76						; size = 4
$T218017 = -72						; size = 16
$T218016 = -56						; size = 16
$T218015 = -40						; size = 16
$T218014 = -20						; size = 16
_this$ = 8						; size = 4
_guidInterface$ = 12					; size = 16
?QueryInterface@CvDllDeal@@UAGPAXU_GUID@@@Z PROC	; CvDllDeal::QueryInterface, COMDAT

; 28   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	push	edi

; 29   : 	if(guidInterface == ICvUnknown::GetInterfaceId() ||
; 30   : 	        guidInterface == ICvDeal1::GetInterfaceId())

	mov	eax, DWORD PTR _guidICvUnknown
	mov	DWORD PTR $T218015[ebp], eax
	mov	ecx, DWORD PTR _guidICvUnknown+4
	mov	DWORD PTR $T218015[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvUnknown+8
	mov	DWORD PTR $T218015[ebp+8], edx
	mov	eax, DWORD PTR _guidICvUnknown+12
	mov	DWORD PTR $T218015[ebp+12], eax
	mov	ecx, DWORD PTR $T218015[ebp]
	mov	DWORD PTR $T218014[ebp], ecx
	mov	edx, DWORD PTR $T218015[ebp+4]
	mov	DWORD PTR $T218014[ebp+4], edx
	mov	eax, DWORD PTR $T218015[ebp+8]
	mov	DWORD PTR $T218014[ebp+8], eax
	mov	ecx, DWORD PTR $T218015[ebp+12]
	mov	DWORD PTR $T218014[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T218014[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv137[ebp], edx
	repe cmpsb
	je	SHORT $LN17@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv137[ebp], eax
$LN17@QueryInter:
	mov	ecx, DWORD PTR tv137[ebp]
	mov	DWORD PTR tv85[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv85[ebp], 0
	sete	dl
	test	edx, edx
	jne	SHORT $LN1@QueryInter
	mov	eax, DWORD PTR _guidICvDeal1
	mov	DWORD PTR $T218017[ebp], eax
	mov	ecx, DWORD PTR _guidICvDeal1+4
	mov	DWORD PTR $T218017[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvDeal1+8
	mov	DWORD PTR $T218017[ebp+8], edx
	mov	eax, DWORD PTR _guidICvDeal1+12
	mov	DWORD PTR $T218017[ebp+12], eax
	mov	ecx, DWORD PTR $T218017[ebp]
	mov	DWORD PTR $T218016[ebp], ecx
	mov	edx, DWORD PTR $T218017[ebp+4]
	mov	DWORD PTR $T218016[ebp+4], edx
	mov	eax, DWORD PTR $T218017[ebp+8]
	mov	DWORD PTR $T218016[ebp+8], eax
	mov	ecx, DWORD PTR $T218017[ebp+12]
	mov	DWORD PTR $T218016[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T218016[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv161[ebp], edx
	repe cmpsb
	je	SHORT $LN18@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv161[ebp], eax
$LN18@QueryInter:
	mov	ecx, DWORD PTR tv161[ebp]
	mov	DWORD PTR tv90[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv90[ebp], 0
	sete	dl
	test	edx, edx
	je	SHORT $LN2@QueryInter
$LN1@QueryInter:

; 31   : 	{
; 32   : 		IncrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IncrementReference@CvDllDeal@@QAEIXZ	; CvDllDeal::IncrementReference

; 33   : 		return this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN3@QueryInter
$LN2@QueryInter:

; 34   : 	}
; 35   : 
; 36   : 	return NULL;

	xor	eax, eax
$LN3@QueryInter:

; 37   : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?QueryInterface@CvDllDeal@@UAGPAXU_GUID@@@Z ENDP	; CvDllDeal::QueryInterface
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IncrementReference@CvDllDeal@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IncrementReference@CvDllDeal@@QAEIXZ PROC		; CvDllDeal::IncrementReference, COMDAT
; _this$ = ecx

; 40   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 	++m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 42   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 43   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IncrementReference@CvDllDeal@@QAEIXZ ENDP		; CvDllDeal::IncrementReference
_TEXT	ENDS
PUBLIC	??3CvDllDeal@@SAXPAX@Z				; CvDllDeal::operator delete
PUBLIC	?DecrementReference@CvDllDeal@@QAEIXZ		; CvDllDeal::DecrementReference
; Function compile flags: /Odtp
;	COMDAT ?DecrementReference@CvDllDeal@@QAEIXZ
_TEXT	SEGMENT
tv70 = -16						; size = 4
_this$ = -12						; size = 4
$T218049 = -8						; size = 4
$T218048 = -4						; size = 4
?DecrementReference@CvDllDeal@@QAEIXZ PROC		; CvDllDeal::DecrementReference, COMDAT
; _this$ = ecx

; 46   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 47   : 	if(m_uiRefCount == 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	SHORT $LN2@DecrementR

; 48   : 	{
; 49   : 		delete this;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T218049[ebp], ecx
	mov	edx, DWORD PTR $T218049[ebp]
	mov	DWORD PTR $T218048[ebp], edx
	cmp	DWORD PTR $T218048[ebp], 0
	je	SHORT $LN5@DecrementR
	mov	ecx, DWORD PTR $T218048[ebp]
	call	??1CvDllDeal@@QAE@XZ			; CvDllDeal::~CvDllDeal
	mov	eax, 1
	and	eax, 1
	je	SHORT $LN8@DecrementR
	mov	ecx, DWORD PTR $T218048[ebp]
	push	ecx
	call	??3CvDllDeal@@SAXPAX@Z			; CvDllDeal::operator delete
	add	esp, 4
$LN8@DecrementR:
	mov	edx, DWORD PTR $T218048[ebp]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN6@DecrementR
$LN5@DecrementR:
	mov	DWORD PTR tv70[ebp], 0
$LN6@DecrementR:

; 50   : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN3@DecrementR

; 51   : 	}
; 52   : 	else

	jmp	SHORT $LN3@DecrementR
$LN2@DecrementR:

; 53   : 	{
; 54   : 		--m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 55   : 		return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
$LN3@DecrementR:

; 56   : 	}
; 57   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DecrementReference@CvDllDeal@@QAEIXZ ENDP		; CvDllDeal::DecrementReference
_TEXT	ENDS
PUBLIC	?GetReferenceCount@CvDllDeal@@QAEIXZ		; CvDllDeal::GetReferenceCount
; Function compile flags: /Odtp
;	COMDAT ?GetReferenceCount@CvDllDeal@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetReferenceCount@CvDllDeal@@QAEIXZ PROC		; CvDllDeal::GetReferenceCount, COMDAT
; _this$ = ecx

; 60   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 61   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 62   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetReferenceCount@CvDllDeal@@QAEIXZ ENDP		; CvDllDeal::GetReferenceCount
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Destroy@CvDllDeal@@EAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Destroy@CvDllDeal@@EAGXXZ PROC				; CvDllDeal::Destroy, COMDAT

; 65   : {

	push	ebp
	mov	ebp, esp

; 66   : 	DecrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DecrementReference@CvDllDeal@@QAEIXZ	; CvDllDeal::DecrementReference

; 67   : }

	pop	ebp
	ret	4
?Destroy@CvDllDeal@@EAGXXZ ENDP				; CvDllDeal::Destroy
_TEXT	ENDS
EXTRN	?Free@CvDllGameContext@@SAXPAX@Z:PROC		; CvDllGameContext::Free
; Function compile flags: /Odtp
;	COMDAT ??3CvDllDeal@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CvDllDeal@@SAXPAX@Z PROC				; CvDllDeal::operator delete, COMDAT

; 70   : {

	push	ebp
	mov	ebp, esp

; 71   : 	CvDllGameContext::Free(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4

; 72   : }

	pop	ebp
	ret	0
??3CvDllDeal@@SAXPAX@Z ENDP				; CvDllDeal::operator delete
_TEXT	ENDS
PUBLIC	??2CvDllDeal@@SAPAXI@Z				; CvDllDeal::operator new
EXTRN	?Allocate@CvDllGameContext@@SAPAXI@Z:PROC	; CvDllGameContext::Allocate
; Function compile flags: /Odtp
;	COMDAT ??2CvDllDeal@@SAPAXI@Z
_TEXT	SEGMENT
_bytes$ = 8						; size = 4
??2CvDllDeal@@SAPAXI@Z PROC				; CvDllDeal::operator new, COMDAT

; 75   : {

	push	ebp
	mov	ebp, esp

; 76   : 	return CvDllGameContext::Allocate(bytes);

	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	call	?Allocate@CvDllGameContext@@SAPAXI@Z	; CvDllGameContext::Allocate
	add	esp, 4

; 77   : }

	pop	ebp
	ret	0
??2CvDllDeal@@SAPAXI@Z ENDP				; CvDllDeal::operator new
_TEXT	ENDS
PUBLIC	?GetInstance@CvDllDeal@@QAEPAVCvDeal@@XZ	; CvDllDeal::GetInstance
; Function compile flags: /Odtp
;	COMDAT ?GetInstance@CvDllDeal@@QAEPAVCvDeal@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetInstance@CvDllDeal@@QAEPAVCvDeal@@XZ PROC		; CvDllDeal::GetInstance, COMDAT
; _this$ = ecx

; 80   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 81   : 	return m_pDeal;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 82   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@CvDllDeal@@QAEPAVCvDeal@@XZ ENDP		; CvDllDeal::GetInstance
_TEXT	ENDS
EXTRN	?GetOtherPlayer@CvDeal@@QBE?AW4PlayerTypes@@W42@@Z:PROC ; CvDeal::GetOtherPlayer
; Function compile flags: /Odtp
;	COMDAT ?GetOtherPlayer@CvDllDeal@@UAG?AW4PlayerTypes@@W42@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_eFromPlayer$ = 12					; size = 4
?GetOtherPlayer@CvDllDeal@@UAG?AW4PlayerTypes@@W42@@Z PROC ; CvDllDeal::GetOtherPlayer, COMDAT

; 85   : {

	push	ebp
	mov	ebp, esp

; 86   : 	return m_pDeal->GetOtherPlayer(eFromPlayer);

	mov	eax, DWORD PTR _eFromPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?GetOtherPlayer@CvDeal@@QBE?AW4PlayerTypes@@W42@@Z ; CvDeal::GetOtherPlayer

; 87   : }

	pop	ebp
	ret	8
?GetOtherPlayer@CvDllDeal@@UAG?AW4PlayerTypes@@W42@@Z ENDP ; CvDllDeal::GetOtherPlayer
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetToPlayer@CvDllDeal@@UAG?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
$T218073 = -4						; size = 4
_this$ = 8						; size = 4
?GetToPlayer@CvDllDeal@@UAG?AW4PlayerTypes@@XZ PROC	; CvDllDeal::GetToPlayer, COMDAT

; 90   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 91   : 	return m_pDeal->GetToPlayer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T218073[ebp], edx
	mov	eax, DWORD PTR $T218073[ebp]

; 92   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetToPlayer@CvDllDeal@@UAG?AW4PlayerTypes@@XZ ENDP	; CvDllDeal::GetToPlayer
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetFromPlayer@CvDllDeal@@UAG?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
$T218079 = -4						; size = 4
_this$ = 8						; size = 4
?GetFromPlayer@CvDllDeal@@UAG?AW4PlayerTypes@@XZ PROC	; CvDllDeal::GetFromPlayer, COMDAT

; 95   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 96   : 	return m_pDeal->GetFromPlayer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T218079[ebp], edx
	mov	eax, DWORD PTR $T218079[ebp]

; 97   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetFromPlayer@CvDllDeal@@UAG?AW4PlayerTypes@@XZ ENDP	; CvDllDeal::GetFromPlayer
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetStartTurn@CvDllDeal@@UAGIXZ
_TEXT	SEGMENT
$T218085 = -4						; size = 4
_this$ = 8						; size = 4
?GetStartTurn@CvDllDeal@@UAGIXZ PROC			; CvDllDeal::GetStartTurn, COMDAT

; 100  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 101  : 	return m_pDeal->GetStartTurn();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR $T218085[ebp], edx
	mov	eax, DWORD PTR $T218085[ebp]

; 102  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetStartTurn@CvDllDeal@@UAGIXZ ENDP			; CvDllDeal::GetStartTurn
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetDuration@CvDllDeal@@UAGIXZ
_TEXT	SEGMENT
$T218091 = -4						; size = 4
_this$ = 8						; size = 4
?GetDuration@CvDllDeal@@UAGIXZ PROC			; CvDllDeal::GetDuration, COMDAT

; 105  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 106  : 	return m_pDeal->GetDuration();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR $T218091[ebp], edx
	mov	eax, DWORD PTR $T218091[ebp]

; 107  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetDuration@CvDllDeal@@UAGIXZ ENDP			; CvDllDeal::GetDuration
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetEndTurn@CvDllDeal@@UAGIXZ
_TEXT	SEGMENT
$T218097 = -4						; size = 4
_this$ = 8						; size = 4
?GetEndTurn@CvDllDeal@@UAGIXZ PROC			; CvDllDeal::GetEndTurn, COMDAT

; 110  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 111  : 	return m_pDeal->GetEndTurn();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR $T218097[ebp], edx
	mov	eax, DWORD PTR $T218097[ebp]

; 112  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetEndTurn@CvDllDeal@@UAGIXZ ENDP			; CvDllDeal::GetEndTurn
_TEXT	ENDS
EXTRN	??4CvDeal@@QAEAAV0@ABV0@@Z:PROC			; CvDeal::operator=
EXTRN	?UnwrapDealPointer@CvGlobals@@QAEPAVCvDeal@@PAVICvDeal1@@@Z:PROC ; CvGlobals::UnwrapDealPointer
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
; Function compile flags: /Odtp
;	COMDAT ?CopyFrom@CvDllDeal@@UAGXPAVICvDeal1@@@Z
_TEXT	SEGMENT
_pkOtherDeal$ = -4					; size = 4
_this$ = 8						; size = 4
_pOtherDeal$ = 12					; size = 4
?CopyFrom@CvDllDeal@@UAGXPAVICvDeal1@@@Z PROC		; CvDllDeal::CopyFrom, COMDAT

; 115  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 116  : 	CvDeal* pkOtherDeal = GC.UnwrapDealPointer(pOtherDeal);

	mov	eax, DWORD PTR _pOtherDeal$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?UnwrapDealPointer@CvGlobals@@QAEPAVCvDeal@@PAVICvDeal1@@@Z ; CvGlobals::UnwrapDealPointer
	mov	DWORD PTR _pkOtherDeal$[ebp], eax

; 117  : 	if(pkOtherDeal != NULL)

	cmp	DWORD PTR _pkOtherDeal$[ebp], 0
	je	SHORT $LN2@CopyFrom

; 118  : 		*m_pDeal = *pkOtherDeal;

	mov	ecx, DWORD PTR _pkOtherDeal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	??4CvDeal@@QAEAAV0@ABV0@@Z		; CvDeal::operator=
$LN2@CopyFrom:

; 119  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?CopyFrom@CvDllDeal@@UAGXPAVICvDeal1@@@Z ENDP		; CvDllDeal::CopyFrom
_TEXT	ENDS
EXTRN	??5@YAAAVFDataStream@@AAV0@AAVCvDeal@@@Z:PROC	; operator>>
; Function compile flags: /Odtp
;	COMDAT ?Read@CvDllDeal@@UAGXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_kStream$ = 12						; size = 4
?Read@CvDllDeal@@UAGXAAVFDataStream@@@Z PROC		; CvDllDeal::Read, COMDAT

; 122  : {

	push	ebp
	mov	ebp, esp

; 123  : 	kStream >> *m_pDeal;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??5@YAAAVFDataStream@@AAV0@AAVCvDeal@@@Z ; operator>>
	add	esp, 8

; 124  : }

	pop	ebp
	ret	8
?Read@CvDllDeal@@UAGXAAVFDataStream@@@Z ENDP		; CvDllDeal::Read
_TEXT	ENDS
EXTRN	??6@YAAAVFDataStream@@AAV0@ABVCvDeal@@@Z:PROC	; operator<<
; Function compile flags: /Odtp
;	COMDAT ?Write@CvDllDeal@@UAGXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_kStream$ = 12						; size = 4
?Write@CvDllDeal@@UAGXAAVFDataStream@@@Z PROC		; CvDllDeal::Write, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp

; 128  : 	kStream << *m_pDeal;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??6@YAAAVFDataStream@@AAV0@ABVCvDeal@@@Z ; operator<<
	add	esp, 8

; 129  : }

	pop	ebp
	ret	8
?Write@CvDllDeal@@UAGXAAVFDataStream@@@Z ENDP		; CvDllDeal::Write
_TEXT	ENDS
END
