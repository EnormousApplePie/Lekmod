; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvDllDealAI.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05OCFELOIJ@1?40?40?$AA@			; `string'
CONST	SEGMENT
_guidICvUnknown DD 0d89ba82fH
	DW	09fa3H
	DW	04696H
	DB	0b3H
	DB	0f4H
	DB	052H
	DB	0bdH
	DB	0b1H
	DB	01H
	DB	0cfH
	DB	0b2H
_guidICvDealAI1 DD 033320cc0H
	DW	047fdH
	DW	04b67H
	DB	0a0H
	DB	024H
	DB	0ffH
	DB	0f3H
	DB	0aaH
	DB	04fH
	DB	066H
	DB	0c1H
CONST	ENDS
_DATA	SEGMENT
_CIV5_XP2_DLL_VERSION DD FLAT:??_C@_05OCFELOIJ@1?40?40?$AA@
_DATA	ENDS
;	COMDAT ??_C@_05OCFELOIJ@1?40?40?$AA@
CONST	SEGMENT
??_C@_05OCFELOIJ@1?40?40?$AA@ DB '1.0.0', 00H		; `string'
CONST	ENDS
PUBLIC	??_7CvDllDealAI@@6B@				; CvDllDealAI::`vftable'
PUBLIC	??_7ICvDealAI1@@6B@				; ICvDealAI1::`vftable'
PUBLIC	??_7ICvUnknown@@6B@				; ICvUnknown::`vftable'
PUBLIC	??0CvDllDealAI@@QAE@PAVCvDealAI@@@Z		; CvDllDealAI::CvDllDealAI
PUBLIC	?QueryInterface@CvDllDealAI@@UAGPAXU_GUID@@@Z	; CvDllDealAI::QueryInterface
PUBLIC	?Destroy@CvDllDealAI@@EAGXXZ			; CvDllDealAI::Destroy
PUBLIC	?GetPlayer@CvDllDealAI@@UAGPAVICvPlayer1@@XZ	; CvDllDealAI::GetPlayer
PUBLIC	?DoHumanOfferDealToThisAI@CvDllDealAI@@UAGHPAVICvDeal1@@@Z ; CvDllDealAI::DoHumanOfferDealToThisAI
PUBLIC	?DoAcceptedDeal@CvDllDealAI@@UAGXW4PlayerTypes@@PAVICvDeal1@@HHH@Z ; CvDllDealAI::DoAcceptedDeal
PUBLIC	?DoHumanDemand@CvDllDealAI@@UAGHPAVICvDeal1@@@Z	; CvDllDealAI::DoHumanDemand
PUBLIC	?DoAcceptedDemand@CvDllDealAI@@UAGXW4PlayerTypes@@PAVICvDeal1@@@Z ; CvDllDealAI::DoAcceptedDemand
PUBLIC	?DoEqualizeDealWithHuman@CvDllDealAI@@UAG_NPAVICvDeal1@@W4PlayerTypes@@_N2AA_N3@Z ; CvDllDealAI::DoEqualizeDealWithHuman
EXTRN	__purecall:PROC
;	COMDAT ??_7CvDllDealAI@@6B@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdlldealai.cpp
CONST	SEGMENT
??_7CvDllDealAI@@6B@ DD FLAT:?QueryInterface@CvDllDealAI@@UAGPAXU_GUID@@@Z ; CvDllDealAI::`vftable'
	DD	FLAT:?Destroy@CvDllDealAI@@EAGXXZ
	DD	FLAT:?GetPlayer@CvDllDealAI@@UAGPAVICvPlayer1@@XZ
	DD	FLAT:?DoHumanOfferDealToThisAI@CvDllDealAI@@UAGHPAVICvDeal1@@@Z
	DD	FLAT:?DoAcceptedDeal@CvDllDealAI@@UAGXW4PlayerTypes@@PAVICvDeal1@@HHH@Z
	DD	FLAT:?DoHumanDemand@CvDllDealAI@@UAGHPAVICvDeal1@@@Z
	DD	FLAT:?DoAcceptedDemand@CvDllDealAI@@UAGXW4PlayerTypes@@PAVICvDeal1@@@Z
	DD	FLAT:?DoEqualizeDealWithHuman@CvDllDealAI@@UAG_NPAVICvDeal1@@W4PlayerTypes@@_N2AA_N3@Z
CONST	ENDS
;	COMDAT ??_7ICvDealAI1@@6B@
CONST	SEGMENT
??_7ICvDealAI1@@6B@ DD FLAT:__purecall			; ICvDealAI1::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ICvUnknown@@6B@
CONST	SEGMENT
??_7ICvUnknown@@6B@ DD FLAT:__purecall			; ICvUnknown::`vftable'
	DD	FLAT:__purecall
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0CvDllDealAI@@QAE@PAVCvDealAI@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDealAI$ = 8						; size = 4
??0CvDllDealAI@@QAE@PAVCvDealAI@@@Z PROC		; CvDllDealAI::CvDllDealAI, COMDAT
; _this$ = ecx

; 23   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnknown@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7ICvDealAI1@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7CvDllDealAI@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pDealAI$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 24   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CvDllDealAI@@QAE@PAVCvDealAI@@@Z ENDP		; CvDllDealAI::CvDllDealAI
_TEXT	ENDS
PUBLIC	??1CvDllDealAI@@QAE@XZ				; CvDllDealAI::~CvDllDealAI
; Function compile flags: /Odtp
;	COMDAT ??1CvDllDealAI@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvDllDealAI@@QAE@XZ PROC				; CvDllDealAI::~CvDllDealAI, COMDAT
; _this$ = ecx

; 27   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvDllDealAI@@6B@

; 28   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1CvDllDealAI@@QAE@XZ ENDP				; CvDllDealAI::~CvDllDealAI
_TEXT	ENDS
PUBLIC	?IncrementReference@CvDllDealAI@@QAEIXZ		; CvDllDealAI::IncrementReference
; Function compile flags: /Odtp
;	COMDAT ?QueryInterface@CvDllDealAI@@UAGPAXU_GUID@@@Z
_TEXT	SEGMENT
tv90 = -88						; size = 4
tv161 = -84						; size = 4
tv85 = -80						; size = 4
tv137 = -76						; size = 4
$T218521 = -72						; size = 16
$T218520 = -56						; size = 16
$T218519 = -40						; size = 16
$T218518 = -20						; size = 16
_this$ = 8						; size = 4
_guidInterface$ = 12					; size = 16
?QueryInterface@CvDllDealAI@@UAGPAXU_GUID@@@Z PROC	; CvDllDealAI::QueryInterface, COMDAT

; 31   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	push	edi

; 32   : 	if(guidInterface == ICvUnknown::GetInterfaceId() ||
; 33   : 	        guidInterface == ICvDealAI1::GetInterfaceId())

	mov	eax, DWORD PTR _guidICvUnknown
	mov	DWORD PTR $T218519[ebp], eax
	mov	ecx, DWORD PTR _guidICvUnknown+4
	mov	DWORD PTR $T218519[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvUnknown+8
	mov	DWORD PTR $T218519[ebp+8], edx
	mov	eax, DWORD PTR _guidICvUnknown+12
	mov	DWORD PTR $T218519[ebp+12], eax
	mov	ecx, DWORD PTR $T218519[ebp]
	mov	DWORD PTR $T218518[ebp], ecx
	mov	edx, DWORD PTR $T218519[ebp+4]
	mov	DWORD PTR $T218518[ebp+4], edx
	mov	eax, DWORD PTR $T218519[ebp+8]
	mov	DWORD PTR $T218518[ebp+8], eax
	mov	ecx, DWORD PTR $T218519[ebp+12]
	mov	DWORD PTR $T218518[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T218518[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv137[ebp], edx
	repe cmpsb
	je	SHORT $LN17@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv137[ebp], eax
$LN17@QueryInter:
	mov	ecx, DWORD PTR tv137[ebp]
	mov	DWORD PTR tv85[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv85[ebp], 0
	sete	dl
	test	edx, edx
	jne	SHORT $LN1@QueryInter
	mov	eax, DWORD PTR _guidICvDealAI1
	mov	DWORD PTR $T218521[ebp], eax
	mov	ecx, DWORD PTR _guidICvDealAI1+4
	mov	DWORD PTR $T218521[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvDealAI1+8
	mov	DWORD PTR $T218521[ebp+8], edx
	mov	eax, DWORD PTR _guidICvDealAI1+12
	mov	DWORD PTR $T218521[ebp+12], eax
	mov	ecx, DWORD PTR $T218521[ebp]
	mov	DWORD PTR $T218520[ebp], ecx
	mov	edx, DWORD PTR $T218521[ebp+4]
	mov	DWORD PTR $T218520[ebp+4], edx
	mov	eax, DWORD PTR $T218521[ebp+8]
	mov	DWORD PTR $T218520[ebp+8], eax
	mov	ecx, DWORD PTR $T218521[ebp+12]
	mov	DWORD PTR $T218520[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T218520[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv161[ebp], edx
	repe cmpsb
	je	SHORT $LN18@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv161[ebp], eax
$LN18@QueryInter:
	mov	ecx, DWORD PTR tv161[ebp]
	mov	DWORD PTR tv90[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv90[ebp], 0
	sete	dl
	test	edx, edx
	je	SHORT $LN2@QueryInter
$LN1@QueryInter:

; 34   : 	{
; 35   : 		IncrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IncrementReference@CvDllDealAI@@QAEIXZ	; CvDllDealAI::IncrementReference

; 36   : 		return this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN3@QueryInter
$LN2@QueryInter:

; 37   : 	}
; 38   : 
; 39   : 	return NULL;

	xor	eax, eax
$LN3@QueryInter:

; 40   : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?QueryInterface@CvDllDealAI@@UAGPAXU_GUID@@@Z ENDP	; CvDllDealAI::QueryInterface
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IncrementReference@CvDllDealAI@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IncrementReference@CvDllDealAI@@QAEIXZ PROC		; CvDllDealAI::IncrementReference, COMDAT
; _this$ = ecx

; 43   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 44   : 	++m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 45   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 46   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IncrementReference@CvDllDealAI@@QAEIXZ ENDP		; CvDllDealAI::IncrementReference
_TEXT	ENDS
PUBLIC	??3CvDllDealAI@@SAXPAX@Z			; CvDllDealAI::operator delete
PUBLIC	?DecrementReference@CvDllDealAI@@QAEIXZ		; CvDllDealAI::DecrementReference
; Function compile flags: /Odtp
;	COMDAT ?DecrementReference@CvDllDealAI@@QAEIXZ
_TEXT	SEGMENT
tv70 = -16						; size = 4
_this$ = -12						; size = 4
$T218553 = -8						; size = 4
$T218552 = -4						; size = 4
?DecrementReference@CvDllDealAI@@QAEIXZ PROC		; CvDllDealAI::DecrementReference, COMDAT
; _this$ = ecx

; 49   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 50   : 	if(m_uiRefCount == 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	SHORT $LN2@DecrementR

; 51   : 	{
; 52   : 		delete this;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T218553[ebp], ecx
	mov	edx, DWORD PTR $T218553[ebp]
	mov	DWORD PTR $T218552[ebp], edx
	cmp	DWORD PTR $T218552[ebp], 0
	je	SHORT $LN5@DecrementR
	mov	ecx, DWORD PTR $T218552[ebp]
	call	??1CvDllDealAI@@QAE@XZ			; CvDllDealAI::~CvDllDealAI
	mov	eax, 1
	and	eax, 1
	je	SHORT $LN8@DecrementR
	mov	ecx, DWORD PTR $T218552[ebp]
	push	ecx
	call	??3CvDllDealAI@@SAXPAX@Z		; CvDllDealAI::operator delete
	add	esp, 4
$LN8@DecrementR:
	mov	edx, DWORD PTR $T218552[ebp]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN6@DecrementR
$LN5@DecrementR:
	mov	DWORD PTR tv70[ebp], 0
$LN6@DecrementR:

; 53   : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN3@DecrementR

; 54   : 	}
; 55   : 	else

	jmp	SHORT $LN3@DecrementR
$LN2@DecrementR:

; 56   : 	{
; 57   : 		--m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 58   : 		return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
$LN3@DecrementR:

; 59   : 	}
; 60   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DecrementReference@CvDllDealAI@@QAEIXZ ENDP		; CvDllDealAI::DecrementReference
_TEXT	ENDS
PUBLIC	?GetReferenceCount@CvDllDealAI@@QAEIXZ		; CvDllDealAI::GetReferenceCount
; Function compile flags: /Odtp
;	COMDAT ?GetReferenceCount@CvDllDealAI@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetReferenceCount@CvDllDealAI@@QAEIXZ PROC		; CvDllDealAI::GetReferenceCount, COMDAT
; _this$ = ecx

; 63   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 64   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 65   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetReferenceCount@CvDllDealAI@@QAEIXZ ENDP		; CvDllDealAI::GetReferenceCount
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Destroy@CvDllDealAI@@EAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Destroy@CvDllDealAI@@EAGXXZ PROC			; CvDllDealAI::Destroy, COMDAT

; 68   : {

	push	ebp
	mov	ebp, esp

; 69   : 	DecrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DecrementReference@CvDllDealAI@@QAEIXZ	; CvDllDealAI::DecrementReference

; 70   : }

	pop	ebp
	ret	4
?Destroy@CvDllDealAI@@EAGXXZ ENDP			; CvDllDealAI::Destroy
_TEXT	ENDS
EXTRN	?Free@CvDllGameContext@@SAXPAX@Z:PROC		; CvDllGameContext::Free
; Function compile flags: /Odtp
;	COMDAT ??3CvDllDealAI@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CvDllDealAI@@SAXPAX@Z PROC				; CvDllDealAI::operator delete, COMDAT

; 73   : {

	push	ebp
	mov	ebp, esp

; 74   : 	CvDllGameContext::Free(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4

; 75   : }

	pop	ebp
	ret	0
??3CvDllDealAI@@SAXPAX@Z ENDP				; CvDllDealAI::operator delete
_TEXT	ENDS
PUBLIC	??2CvDllDealAI@@SAPAXI@Z			; CvDllDealAI::operator new
EXTRN	?Allocate@CvDllGameContext@@SAPAXI@Z:PROC	; CvDllGameContext::Allocate
; Function compile flags: /Odtp
;	COMDAT ??2CvDllDealAI@@SAPAXI@Z
_TEXT	SEGMENT
_bytes$ = 8						; size = 4
??2CvDllDealAI@@SAPAXI@Z PROC				; CvDllDealAI::operator new, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp

; 79   : 	return CvDllGameContext::Allocate(bytes);

	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	call	?Allocate@CvDllGameContext@@SAPAXI@Z	; CvDllGameContext::Allocate
	add	esp, 4

; 80   : }

	pop	ebp
	ret	0
??2CvDllDealAI@@SAPAXI@Z ENDP				; CvDllDealAI::operator new
_TEXT	ENDS
PUBLIC	?GetInstance@CvDllDealAI@@QAEPAVCvDealAI@@XZ	; CvDllDealAI::GetInstance
; Function compile flags: /Odtp
;	COMDAT ?GetInstance@CvDllDealAI@@QAEPAVCvDealAI@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetInstance@CvDllDealAI@@QAEPAVCvDealAI@@XZ PROC	; CvDllDealAI::GetInstance, COMDAT
; _this$ = ecx

; 83   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 84   : 	return m_pDealAI;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 85   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@CvDllDealAI@@QAEPAVCvDealAI@@XZ ENDP	; CvDllDealAI::GetInstance
_TEXT	ENDS
EXTRN	??3CvDllPlayer@@SAXPAX@Z:PROC			; CvDllPlayer::operator delete
EXTRN	??0CvDllPlayer@@QAE@PAVCvPlayerAI@@@Z:PROC	; CvDllPlayer::CvDllPlayer
EXTRN	??2CvDllPlayer@@SAPAXI@Z:PROC			; CvDllPlayer::operator new
EXTRN	?GetPlayer@CvDealAI@@QAEPAVCvPlayer@@XZ:PROC	; CvDealAI::GetPlayer
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetPlayer@CvDllDealAI@@UAGPAVICvPlayer1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPlayer@CvDllDealAI@@UAGPAVICvPlayer1@@XZ$0
__ehfuncinfo$?GetPlayer@CvDllDealAI@@UAGPAVICvPlayer1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetPlayer@CvDllDealAI@@UAGPAVICvPlayer1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetPlayer@CvDllDealAI@@UAGPAVICvPlayer1@@XZ
_TEXT	SEGMENT
tv78 = -32						; size = 4
tv83 = -28						; size = 4
$T218573 = -24						; size = 4
$T218572 = -20						; size = 4
_pkPlayer$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?GetPlayer@CvDllDealAI@@UAGPAVICvPlayer1@@XZ PROC	; CvDllDealAI::GetPlayer, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetPlayer@CvDllDealAI@@UAGPAVICvPlayer1@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 89   : 	CvPlayerAI* pkPlayer = (CvPlayerAI*)m_pDealAI->GetPlayer();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetPlayer@CvDealAI@@QAEPAVCvPlayer@@XZ	; CvDealAI::GetPlayer
	mov	DWORD PTR _pkPlayer$[ebp], eax

; 90   : 	return (NULL != pkPlayer)? new CvDllPlayer(pkPlayer) : NULL;

	cmp	DWORD PTR _pkPlayer$[ebp], 0
	je	SHORT $LN5@GetPlayer
	push	12					; 0000000cH
	call	??2CvDllPlayer@@SAPAXI@Z		; CvDllPlayer::operator new
	add	esp, 4
	mov	DWORD PTR $T218573[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T218573[ebp], 0
	je	SHORT $LN3@GetPlayer
	mov	ecx, DWORD PTR _pkPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T218573[ebp]
	call	??0CvDllPlayer@@QAE@PAVCvPlayerAI@@@Z	; CvDllPlayer::CvDllPlayer
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN4@GetPlayer
$LN3@GetPlayer:
	mov	DWORD PTR tv83[ebp], 0
$LN4@GetPlayer:
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR $T218572[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T218572[ebp]
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN6@GetPlayer
$LN5@GetPlayer:
	mov	DWORD PTR tv78[ebp], 0
$LN6@GetPlayer:
	mov	eax, DWORD PTR tv78[ebp]

; 91   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetPlayer@CvDllDealAI@@UAGPAVICvPlayer1@@XZ$0:
	mov	eax, DWORD PTR $T218573[ebp]
	push	eax
	call	??3CvDllPlayer@@SAXPAX@Z		; CvDllPlayer::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetPlayer@CvDllDealAI@@UAGPAVICvPlayer1@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetPlayer@CvDllDealAI@@UAGPAVICvPlayer1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetPlayer@CvDllDealAI@@UAGPAVICvPlayer1@@XZ ENDP	; CvDllDealAI::GetPlayer
EXTRN	?DoHumanOfferDealToThisAI@CvDealAI@@QAE?AW4DealOfferResponseTypes@@PAVCvDeal@@@Z:PROC ; CvDealAI::DoHumanOfferDealToThisAI
EXTRN	?GetInstance@CvDllDeal@@QAEPAVCvDeal@@XZ:PROC	; CvDllDeal::GetInstance
; Function compile flags: /Odtp
;	COMDAT ?DoHumanOfferDealToThisAI@CvDllDealAI@@UAGHPAVICvDeal1@@@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_pkDeal$ = -4						; size = 4
_this$ = 8						; size = 4
_pDeal$ = 12						; size = 4
?DoHumanOfferDealToThisAI@CvDllDealAI@@UAGHPAVICvDeal1@@@Z PROC ; CvDllDealAI::DoHumanOfferDealToThisAI, COMDAT

; 94   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 95   : 	CvDeal* pkDeal = (NULL != pDeal)? static_cast<CvDllDeal*>(pDeal)->GetInstance() : NULL;

	cmp	DWORD PTR _pDeal$[ebp], 0
	je	SHORT $LN3@DoHumanOff
	mov	ecx, DWORD PTR _pDeal$[ebp]
	call	?GetInstance@CvDllDeal@@QAEPAVCvDeal@@XZ ; CvDllDeal::GetInstance
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@DoHumanOff
$LN3@DoHumanOff:
	mov	DWORD PTR tv71[ebp], 0
$LN4@DoHumanOff:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR _pkDeal$[ebp], eax

; 96   : 	return m_pDealAI->DoHumanOfferDealToThisAI(pkDeal);

	mov	ecx, DWORD PTR _pkDeal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?DoHumanOfferDealToThisAI@CvDealAI@@QAE?AW4DealOfferResponseTypes@@PAVCvDeal@@@Z ; CvDealAI::DoHumanOfferDealToThisAI

; 97   : }

	mov	esp, ebp
	pop	ebp
	ret	8
?DoHumanOfferDealToThisAI@CvDllDealAI@@UAGHPAVICvDeal1@@@Z ENDP ; CvDllDealAI::DoHumanOfferDealToThisAI
_TEXT	ENDS
EXTRN	?DoAcceptedDeal@CvDealAI@@QAEXW4PlayerTypes@@ABVCvDeal@@HHH@Z:PROC ; CvDealAI::DoAcceptedDeal
; Function compile flags: /Odtp
;	COMDAT ?DoAcceptedDeal@CvDllDealAI@@UAGXW4PlayerTypes@@PAVICvDeal1@@HHH@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_pkDeal$ = -4						; size = 4
_this$ = 8						; size = 4
_eFromPlayer$ = 12					; size = 4
_pDeal$ = 16						; size = 4
_iDealValueToMe$ = 20					; size = 4
_iValueImOffering$ = 24					; size = 4
_iValueTheyreOffering$ = 28				; size = 4
?DoAcceptedDeal@CvDllDealAI@@UAGXW4PlayerTypes@@PAVICvDeal1@@HHH@Z PROC ; CvDllDealAI::DoAcceptedDeal, COMDAT

; 100  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 101  : 	CvDeal* pkDeal = (NULL != pDeal)? static_cast<CvDllDeal*>(pDeal)->GetInstance() : NULL;

	cmp	DWORD PTR _pDeal$[ebp], 0
	je	SHORT $LN4@DoAccepted
	mov	ecx, DWORD PTR _pDeal$[ebp]
	call	?GetInstance@CvDllDeal@@QAEPAVCvDeal@@XZ ; CvDllDeal::GetInstance
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN5@DoAccepted
$LN4@DoAccepted:
	mov	DWORD PTR tv71[ebp], 0
$LN5@DoAccepted:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR _pkDeal$[ebp], eax

; 102  : 	if(pkDeal != NULL)

	cmp	DWORD PTR _pkDeal$[ebp], 0
	je	SHORT $LN2@DoAccepted

; 103  : 		m_pDealAI->DoAcceptedDeal(eFromPlayer, *pkDeal, iDealValueToMe, iValueImOffering, iValueTheyreOffering);

	mov	ecx, DWORD PTR _iValueTheyreOffering$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iValueImOffering$[ebp]
	push	edx
	mov	eax, DWORD PTR _iDealValueToMe$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkDeal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eFromPlayer$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?DoAcceptedDeal@CvDealAI@@QAEXW4PlayerTypes@@ABVCvDeal@@HHH@Z ; CvDealAI::DoAcceptedDeal
$LN2@DoAccepted:

; 104  : }

	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?DoAcceptedDeal@CvDllDealAI@@UAGXW4PlayerTypes@@PAVICvDeal1@@HHH@Z ENDP ; CvDllDealAI::DoAcceptedDeal
_TEXT	ENDS
EXTRN	?DoHumanDemand@CvDealAI@@QAE?AW4DemandResponseTypes@@PAVCvDeal@@@Z:PROC ; CvDealAI::DoHumanDemand
; Function compile flags: /Odtp
;	COMDAT ?DoHumanDemand@CvDllDealAI@@UAGHPAVICvDeal1@@@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_pkDeal$ = -4						; size = 4
_this$ = 8						; size = 4
_pDeal$ = 12						; size = 4
?DoHumanDemand@CvDllDealAI@@UAGHPAVICvDeal1@@@Z PROC	; CvDllDealAI::DoHumanDemand, COMDAT

; 107  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 108  : 	CvDeal* pkDeal = (NULL != pDeal)? static_cast<CvDllDeal*>(pDeal)->GetInstance() : NULL;

	cmp	DWORD PTR _pDeal$[ebp], 0
	je	SHORT $LN3@DoHumanDem
	mov	ecx, DWORD PTR _pDeal$[ebp]
	call	?GetInstance@CvDllDeal@@QAEPAVCvDeal@@XZ ; CvDllDeal::GetInstance
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@DoHumanDem
$LN3@DoHumanDem:
	mov	DWORD PTR tv71[ebp], 0
$LN4@DoHumanDem:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR _pkDeal$[ebp], eax

; 109  : 	return m_pDealAI->DoHumanDemand(pkDeal);

	mov	ecx, DWORD PTR _pkDeal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?DoHumanDemand@CvDealAI@@QAE?AW4DemandResponseTypes@@PAVCvDeal@@@Z ; CvDealAI::DoHumanDemand

; 110  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?DoHumanDemand@CvDllDealAI@@UAGHPAVICvDeal1@@@Z ENDP	; CvDllDealAI::DoHumanDemand
_TEXT	ENDS
EXTRN	?DoAcceptedDemand@CvDealAI@@QAEXW4PlayerTypes@@ABVCvDeal@@@Z:PROC ; CvDealAI::DoAcceptedDemand
; Function compile flags: /Odtp
;	COMDAT ?DoAcceptedDemand@CvDllDealAI@@UAGXW4PlayerTypes@@PAVICvDeal1@@@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_pkDeal$ = -4						; size = 4
_this$ = 8						; size = 4
_eFromPlayer$ = 12					; size = 4
_pDeal$ = 16						; size = 4
?DoAcceptedDemand@CvDllDealAI@@UAGXW4PlayerTypes@@PAVICvDeal1@@@Z PROC ; CvDllDealAI::DoAcceptedDemand, COMDAT

; 113  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 114  : 	CvDeal* pkDeal = (NULL != pDeal)? static_cast<CvDllDeal*>(pDeal)->GetInstance() : NULL;

	cmp	DWORD PTR _pDeal$[ebp], 0
	je	SHORT $LN4@DoAccepted@2
	mov	ecx, DWORD PTR _pDeal$[ebp]
	call	?GetInstance@CvDllDeal@@QAEPAVCvDeal@@XZ ; CvDllDeal::GetInstance
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN5@DoAccepted@2
$LN4@DoAccepted@2:
	mov	DWORD PTR tv71[ebp], 0
$LN5@DoAccepted@2:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR _pkDeal$[ebp], eax

; 115  : 	if(pkDeal != NULL)

	cmp	DWORD PTR _pkDeal$[ebp], 0
	je	SHORT $LN2@DoAccepted@2

; 116  : 		m_pDealAI->DoAcceptedDemand(eFromPlayer, *pkDeal);

	mov	ecx, DWORD PTR _pkDeal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eFromPlayer$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?DoAcceptedDemand@CvDealAI@@QAEXW4PlayerTypes@@ABVCvDeal@@@Z ; CvDealAI::DoAcceptedDemand
$LN2@DoAccepted@2:

; 117  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?DoAcceptedDemand@CvDllDealAI@@UAGXW4PlayerTypes@@PAVICvDeal1@@@Z ENDP ; CvDllDealAI::DoAcceptedDemand
_TEXT	ENDS
EXTRN	?DoEqualizeDealWithHuman@CvDealAI@@QAE_NPAVCvDeal@@W4PlayerTypes@@_N2AA_N3@Z:PROC ; CvDealAI::DoEqualizeDealWithHuman
; Function compile flags: /Odtp
;	COMDAT ?DoEqualizeDealWithHuman@CvDllDealAI@@UAG_NPAVICvDeal1@@W4PlayerTypes@@_N2AA_N3@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_pkDeal$ = -4						; size = 4
_this$ = 8						; size = 4
_pDeal$ = 12						; size = 4
_eOtherPlayer$ = 16					; size = 4
_bDontChangeMyExistingItems$ = 20			; size = 1
_bDontChangeTheirExistingItems$ = 24			; size = 1
_bDealGoodToBeginWith$ = 28				; size = 4
_bCantMatchOffer$ = 32					; size = 4
?DoEqualizeDealWithHuman@CvDllDealAI@@UAG_NPAVICvDeal1@@W4PlayerTypes@@_N2AA_N3@Z PROC ; CvDllDealAI::DoEqualizeDealWithHuman, COMDAT

; 120  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 121  : 	CvDeal* pkDeal = (NULL != pDeal)? static_cast<CvDllDeal*>(pDeal)->GetInstance() : NULL;

	cmp	DWORD PTR _pDeal$[ebp], 0
	je	SHORT $LN3@DoEqualize
	mov	ecx, DWORD PTR _pDeal$[ebp]
	call	?GetInstance@CvDllDeal@@QAEPAVCvDeal@@XZ ; CvDllDeal::GetInstance
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@DoEqualize
$LN3@DoEqualize:
	mov	DWORD PTR tv71[ebp], 0
$LN4@DoEqualize:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR _pkDeal$[ebp], eax

; 122  : 	return m_pDealAI->DoEqualizeDealWithHuman(pkDeal, eOtherPlayer, bDontChangeMyExistingItems, bDontChangeTheirExistingItems, bDealGoodToBeginWith, bCantMatchOffer);

	mov	ecx, DWORD PTR _bCantMatchOffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bDealGoodToBeginWith$[ebp]
	push	edx
	movzx	eax, BYTE PTR _bDontChangeTheirExistingItems$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bDontChangeMyExistingItems$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	eax, DWORD PTR _pkDeal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?DoEqualizeDealWithHuman@CvDealAI@@QAE_NPAVCvDeal@@W4PlayerTypes@@_N2AA_N3@Z ; CvDealAI::DoEqualizeDealWithHuman

; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?DoEqualizeDealWithHuman@CvDllDealAI@@UAG_NPAVICvDeal1@@W4PlayerTypes@@_N2AA_N3@Z ENDP ; CvDllDealAI::DoEqualizeDealWithHuman
_TEXT	ENDS
END
