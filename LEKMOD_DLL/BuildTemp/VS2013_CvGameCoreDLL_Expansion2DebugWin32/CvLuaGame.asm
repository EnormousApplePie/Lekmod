; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\Lua\CvLuaGame.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0CF@KNIMINGB@34fb6c19?910dd?94b65?9b143?9fd00b2c0@ ; `string'
PUBLIC	??_C@_0CF@JHCBKEFK@f2eb1642?93334?94d2c?98db1?908e6aede@ ; `string'
;	COMDAT ??_C@_0CF@KNIMINGB@34fb6c19?910dd?94b65?9b143?9fd00b2c0@
CONST	SEGMENT
??_C@_0CF@KNIMINGB@34fb6c19?910dd?94b65?9b143?9fd00b2c0@ DB '34fb6c19-10d'
	DB	'd-4b65-b143-fd00b2c0826f', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
_CIV5_XP2_SCENARIO2_MODID DD FLAT:??_C@_0CF@JHCBKEFK@f2eb1642?93334?94d2c?98db1?908e6aede@
_CIV5_COMPLETE_SCENARIO1_MODID DD FLAT:??_C@_0CF@KNIMINGB@34fb6c19?910dd?94b65?9b143?9fd00b2c0@
CONST	ENDS
;	COMDAT ??_C@_0CF@JHCBKEFK@f2eb1642?93334?94d2c?98db1?908e6aede@
CONST	SEGMENT
??_C@_0CF@JHCBKEFK@f2eb1642?93334?94d2c?98db1?908e6aede@ DB 'f2eb1642-333'
	DB	'4-4d2c-8db1-08e6aede3532', 00H		; `string'
CONST	ENDS
PUBLIC	??_C@_04IBBNLEM@Game?$AA@			; `string'
PUBLIC	?GetInstanceName@CvLuaGame@@SAPBDXZ		; CvLuaGame::GetInstanceName
;	COMDAT ??_C@_04IBBNLEM@Game?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
CONST	SEGMENT
??_C@_04IBBNLEM@Game?$AA@ DB 'Game', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?GetInstanceName@CvLuaGame@@SAPBDXZ
_TEXT	SEGMENT
?GetInstanceName@CvLuaGame@@SAPBDXZ PROC		; CvLuaGame::GetInstanceName, COMDAT

; 34   : {

	push	ebp
	mov	ebp, esp

; 35   : 	return "Game";

	mov	eax, OFFSET ??_C@_04IBBNLEM@Game?$AA@

; 36   : }

	pop	ebp
	ret	0
?GetInstanceName@CvLuaGame@@SAPBDXZ ENDP		; CvLuaGame::GetInstanceName
_TEXT	ENDS
PUBLIC	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
; Function compile flags: /Odtp
;	COMDAT ?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z
_TEXT	SEGMENT
$T226469 = -4						; size = 4
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z PROC ; CvLuaGame::GetInstance, COMDAT

; 43   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 44   : 	return &GC.getGame();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T226469[ebp], eax
	mov	eax, DWORD PTR $T226469[ebp]

; 45   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ENDP ; CvLuaGame::GetInstance
_TEXT	ENDS
PUBLIC	?lGetNumHiddenArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumHiddenArchaeologySites
PUBLIC	??_C@_0BN@ILHHKDKD@GetNumHiddenArchaeologySites?$AA@ ; `string'
PUBLIC	?lGetNumArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumArchaeologySites
PUBLIC	??_C@_0BH@CGIJLDCN@GetNumArchaeologySites?$AA@	; `string'
PUBLIC	?lMouseoverUnit@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lMouseoverUnit
PUBLIC	??_C@_0O@EMLNJGOH@MouseoverUnit?$AA@		; `string'
PUBLIC	?lSelectedUnit_SpeculativePopupTradeRoute_Hide@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectedUnit_SpeculativePopupTradeRoute_Hide
PUBLIC	??_C@_0CN@DONCEICH@SelectedUnit_SpeculativePopupTra@ ; `string'
PUBLIC	?lSelectedUnit_SpeculativePopupTradeRoute_Display@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectedUnit_SpeculativePopupTradeRoute_Display
PUBLIC	??_C@_0DA@EKBLDCCD@SelectedUnit_SpeculativePopupTra@ ; `string'
PUBLIC	?lGetLongestCityConnectionPlots@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetLongestCityConnectionPlots
PUBLIC	??_C@_0BO@BMENPGPE@GetLongestCityConnectionPlots?$AA@ ; `string'
PUBLIC	?lGetNumFreePolicies@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumFreePolicies
PUBLIC	??_C@_0BD@DPNODDCH@GetNumFreePolicies?$AA@	; `string'
PUBLIC	?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetArtifactName
PUBLIC	??_C@_0BA@KMNDNEOG@GetArtifactName?$AA@		; `string'
PUBLIC	?lGetGreatWorkCurrentThemingBonus@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkCurrentThemingBonus
PUBLIC	??_C@_0CA@KPGAFMHH@GetGreatWorkCurrentThemingBonus?$AA@ ; `string'
PUBLIC	?lGetGreatWorkController@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkController
PUBLIC	??_C@_0BH@IKJFIBAN@GetGreatWorkController?$AA@	; `string'
PUBLIC	?lGetGreatWorkCreator@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkCreator
PUBLIC	??_C@_0BE@LBHAMFME@GetGreatWorkCreator?$AA@	; `string'
PUBLIC	?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkEraShort
PUBLIC	??_C@_0BF@LMBMELCC@GetGreatWorkEraShort?$AA@	; `string'
PUBLIC	?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkEraAbbreviation
PUBLIC	??_C@_0BM@MEHKMABC@GetGreatWorkEraAbbreviation?$AA@ ; `string'
PUBLIC	?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkEra
PUBLIC	??_C@_0BA@PFJDFAPE@GetGreatWorkEra?$AA@		; `string'
PUBLIC	?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkArtist
PUBLIC	??_C@_0BD@GGPFKKMA@GetGreatWorkArtist?$AA@	; `string'
PUBLIC	?lGetGreatWorkClass@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkClass
PUBLIC	??_C@_0BC@EAJHLGBM@GetGreatWorkClass?$AA@	; `string'
PUBLIC	?lGetGreatWorkType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkType
PUBLIC	??_C@_0BB@DFMKMKMD@GetGreatWorkType?$AA@	; `string'
PUBLIC	?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkName
PUBLIC	??_C@_0BB@JOMJAKLD@GetGreatWorkName?$AA@	; `string'
PUBLIC	?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkTooltip
PUBLIC	??_C@_0BE@KOLHPJBP@GetGreatWorkTooltip?$AA@	; `string'
PUBLIC	?lIsProcessingMessages@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsProcessingMessages
PUBLIC	??_C@_0BF@GMOHFKCF@IsProcessingMessages?$AA@	; `string'
PUBLIC	?lGetActiveLeague@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetActiveLeague
PUBLIC	??_C@_0BA@JGFELEHE@GetActiveLeague?$AA@		; `string'
PUBLIC	?lGetLeague@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetLeague
PUBLIC	??_C@_09MNHMPFCL@GetLeague?$AA@			; `string'
PUBLIC	?lGetNumLeaguesEverFounded@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumLeaguesEverFounded
PUBLIC	??_C@_0BJ@IPFGDPKL@GetNumLeaguesEverFounded?$AA@ ; `string'
PUBLIC	?lGetNumActiveLeagues@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumActiveLeagues
PUBLIC	??_C@_0BE@GDCNMBLK@GetNumActiveLeagues?$AA@	; `string'
PUBLIC	?lGetTurnsUntilMinorCivElection@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTurnsUntilMinorCivElection
PUBLIC	??_C@_0BO@EKKFPCLI@GetTurnsUntilMinorCivElection?$AA@ ; `string'
PUBLIC	?lGetTurnsBetweenMinorCivElections@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTurnsBetweenMinorCivElections
PUBLIC	??_C@_0CB@MGIONIDE@GetTurnsBetweenMinorCivElections@ ; `string'
PUBLIC	?lSetFounder@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetFounder
PUBLIC	??_C@_0L@OHBFHIAI@SetFounder?$AA@		; `string'
PUBLIC	?lGetFounder@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetFounder
PUBLIC	??_C@_0L@PJDKMPEB@GetFounder?$AA@		; `string'
PUBLIC	?lSetHolyCity@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetHolyCity
PUBLIC	??_C@_0M@OJCMFPEH@SetHolyCity?$AA@		; `string'
PUBLIC	?lEnhanceReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lEnhanceReligion
PUBLIC	??_C@_0BA@MJNPLGMD@EnhanceReligion?$AA@		; `string'
PUBLIC	?lFoundReligion@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lFoundReligion
PUBLIC	??_C@_0O@KKHALMAI@FoundReligion?$AA@		; `string'
PUBLIC	?lFoundPantheon@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lFoundPantheon
PUBLIC	??_C@_0O@OAJNLCHB@FoundPantheon?$AA@		; `string'
PUBLIC	?lGetFounderBenefitsReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetFounderBenefitsReligion
PUBLIC	??_C@_0BL@ODLKNBCI@GetFounderBenefitsReligion?$AA@ ; `string'
PUBLIC	?lGetReligionName@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetReligionName
PUBLIC	??_C@_0BA@GINIHLHA@GetReligionName?$AA@		; `string'
PUBLIC	?lGetHolyCityForReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetHolyCityForReligion
PUBLIC	??_C@_0BH@NCFNPKAM@GetHolyCityForReligion?$AA@	; `string'
PUBLIC	?lGetNumReligionsFounded@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumReligionsFounded
PUBLIC	??_C@_0BH@FMGIEENO@GetNumReligionsFounded?$AA@	; `string'
PUBLIC	?lGetNumReligionsStillToFound@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumReligionsStillToFound
PUBLIC	??_C@_0BM@CLCAOIFD@GetNumReligionsStillToFound?$AA@ ; `string'
PUBLIC	?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBeliefsInReligion
PUBLIC	??_C@_0BF@MBPEBDAP@GetBeliefsInReligion?$AA@	; `string'
PUBLIC	?lGetNumCitiesFollowing@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCitiesFollowing
PUBLIC	??_C@_0BG@NLBBKMBK@GetNumCitiesFollowing?$AA@	; `string'
PUBLIC	?lGetNumFollowers@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumFollowers
PUBLIC	??_C@_0BA@BEJIHHEO@GetNumFollowers?$AA@		; `string'
PUBLIC	?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableReformationBeliefs
PUBLIC	??_C@_0BP@CADPLLKB@GetAvailableReformationBeliefs?$AA@ ; `string'
PUBLIC	?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableBonusBeliefs
PUBLIC	??_C@_0BJ@FGBDBKNN@GetAvailableBonusBeliefs?$AA@ ; `string'
PUBLIC	?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableEnhancerBeliefs
PUBLIC	??_C@_0BM@KDHMNEGC@GetAvailableEnhancerBeliefs?$AA@ ; `string'
PUBLIC	?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableFollowerBeliefs
PUBLIC	??_C@_0BM@OIEFKPDL@GetAvailableFollowerBeliefs?$AA@ ; `string'
PUBLIC	?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableFounderBeliefs
PUBLIC	??_C@_0BL@DMBIIOGH@GetAvailableFounderBeliefs?$AA@ ; `string'
PUBLIC	?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailablePantheonBeliefs
PUBLIC	??_C@_0BM@GADOOEAH@GetAvailablePantheonBeliefs?$AA@ ; `string'
PUBLIC	?lSetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetMinimumFaithNextPantheon
PUBLIC	??_C@_0BM@FGPDEGO@SetMinimumFaithNextPantheon?$AA@ ; `string'
PUBLIC	?lGetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMinimumFaithNextPantheon
PUBLIC	??_C@_0BM@BIOHBBMK@GetMinimumFaithNextPantheon?$AA@ ; `string'
PUBLIC	?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetTimeString
PUBLIC	??_C@_0O@MBFFONGO@GetTimeString?$AA@		; `string'
PUBLIC	?lGetCombatPrediction@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetCombatPrediction
PUBLIC	??_C@_0BE@IHBNIFJC@GetCombatPrediction?$AA@	; `string'
PUBLIC	?lGetUnitUpgradesTo@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetUnitUpgradesTo
PUBLIC	??_C@_0BC@CNNCGGKP@GetUnitUpgradesTo?$AA@	; `string'
PUBLIC	?lGetPeaceDuration@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPeaceDuration
PUBLIC	??_C@_0BB@NADMKBKJ@GetPeaceDuration?$AA@	; `string'
PUBLIC	?lGetDealDuration@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetDealDuration
PUBLIC	??_C@_0BA@PIOFNEIA@GetDealDuration?$AA@		; `string'
PUBLIC	?lGetWorldNumCitiesUnhappinessPercent@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetWorldNumCitiesUnhappinessPercent
PUBLIC	??_C@_0CE@EICALPKM@GetWorldNumCitiesUnhappinessPerc@ ; `string'
PUBLIC	?lGetBuildingYieldModifier@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBuildingYieldModifier
PUBLIC	??_C@_0BJ@DBPBDBNK@GetBuildingYieldModifier?$AA@ ; `string'
PUBLIC	?lGetBuildingYieldChange@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBuildingYieldChange
PUBLIC	??_C@_0BH@IIHDEHPE@GetBuildingYieldChange?$AA@	; `string'
PUBLIC	?lGetNumCitiesTechCostMod@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCitiesTechCostMod
PUBLIC	??_C@_0BI@DOEGIJOF@GetNumCitiesTechCostMod?$AA@	; `string'
PUBLIC	?lGetNumCitiesPolicyCostMod@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCitiesPolicyCostMod
PUBLIC	??_C@_0BK@OBHHAKMB@GetNumCitiesPolicyCostMod?$AA@ ; `string'
PUBLIC	?lGetCustomOption@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetCustomOption
PUBLIC	??_C@_0BA@OFKJKAHO@GetCustomOption?$AA@		; `string'
PUBLIC	?lGetResearchAgreementCost@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetResearchAgreementCost
PUBLIC	??_C@_0BJ@IICBLKFL@GetResearchAgreementCost?$AA@ ; `string'
PUBLIC	?lGetVariableCitySizeFromPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetVariableCitySizeFromPopulation
PUBLIC	??_C@_0CC@PPFDDOGO@GetVariableCitySizeFromPopulatio@ ; `string'
PUBLIC	?lIsTechRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsTechRecommended
PUBLIC	??_C@_0BC@EIGNBGNL@IsTechRecommended?$AA@	; `string'
PUBLIC	?lSetAdvisorRecommenderTech@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorRecommenderTech
PUBLIC	??_C@_0BK@CAANNHAC@SetAdvisorRecommenderTech?$AA@ ; `string'
PUBLIC	?lIsProjectRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsProjectRecommended
PUBLIC	??_C@_0BF@ONMGNANH@IsProjectRecommended?$AA@	; `string'
PUBLIC	?lIsBuildingRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsBuildingRecommended
PUBLIC	??_C@_0BG@KBCJFALA@IsBuildingRecommended?$AA@	; `string'
PUBLIC	?lIsUnitRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsUnitRecommended
PUBLIC	??_C@_0BC@MEHLOEAO@IsUnitRecommended?$AA@	; `string'
PUBLIC	?lSetAdvisorRecommenderCity@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorRecommenderCity
PUBLIC	??_C@_0BK@PCKLLFMN@SetAdvisorRecommenderCity?$AA@ ; `string'
PUBLIC	?lGetAdvisorCounsel@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAdvisorCounsel
PUBLIC	??_C@_0BC@MGGGFFNP@GetAdvisorCounsel?$AA@	; `string'
PUBLIC	?lSetCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetCombatWarned
PUBLIC	??_C@_0BA@DFMCJLNI@SetCombatWarned?$AA@		; `string'
PUBLIC	?lIsCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsCombatWarned
PUBLIC	??_C@_0P@EHMGJCEG@IsCombatWarned?$AA@		; `string'
PUBLIC	?lGetNumResourceRequiredForBuilding@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumResourceRequiredForBuilding
PUBLIC	??_C@_0CC@IGJEPCCI@GetNumResourceRequiredForBuildin@ ; `string'
PUBLIC	?lGetNumResourceRequiredForUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumResourceRequiredForUnit
PUBLIC	??_C@_0BO@LCJGBMDG@GetNumResourceRequiredForUnit?$AA@ ; `string'
PUBLIC	?lGetResourceUsageType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetResourceUsageType
PUBLIC	??_C@_0BF@IBPCBPJG@GetResourceUsageType?$AA@	; `string'
PUBLIC	?lGameplayDiplomacyAILeaderMessage@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGameplayDiplomacyAILeaderMessage
PUBLIC	??_C@_0CB@FJJKABLK@GameplayDiplomacyAILeaderMessage@ ; `string'
PUBLIC	?lIsEverAttackedTutorial@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsEverAttackedTutorial
PUBLIC	??_C@_0BH@FKEBPBPE@IsEverAttackedTutorial?$AA@	; `string'
PUBLIC	?lGetBestGreatPeoplePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestGreatPeoplePlayer
PUBLIC	??_C@_0BJ@BNFIKAFK@GetBestGreatPeoplePlayer?$AA@ ; `string'
PUBLIC	?lGetBestPoliciesPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestPoliciesPlayer
PUBLIC	??_C@_0BG@IJIOMHPK@GetBestPoliciesPlayer?$AA@	; `string'
PUBLIC	?lGetBestWondersPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestWondersPlayer
PUBLIC	??_C@_0BF@MILFGGAC@GetBestWondersPlayer?$AA@	; `string'
PUBLIC	?lDoMinorBuyout@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lDoMinorBuyout
PUBLIC	??_C@_0O@HOJDIIMB@DoMinorBuyout?$AA@		; `string'
PUBLIC	?lDoMinorBullyUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorBullyUnit
PUBLIC	??_C@_0BB@FDENADME@DoMinorBullyUnit?$AA@	; `string'
PUBLIC	?lDoMinorBullyGold@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorBullyGold
PUBLIC	??_C@_0BB@LNNIHAPJ@DoMinorBullyGold?$AA@	; `string'
PUBLIC	?lDoMinorGiftTileImprovement@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorGiftTileImprovement
PUBLIC	??_C@_0BL@LMJKLHLF@DoMinorGiftTileImprovement?$AA@ ; `string'
PUBLIC	?lDoMinorGiftGold@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorGiftGold
PUBLIC	??_C@_0BA@LECDELEF@DoMinorGiftGold?$AA@		; `string'
PUBLIC	?lDoMinorGoldGift@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorGoldGift
PUBLIC	??_C@_0BA@LHNENHEM@DoMinorGoldGift?$AA@		; `string'
PUBLIC	?lDoMinorPledgeProtection@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorPledgeProtection
PUBLIC	??_C@_0BI@CGHFCKII@DoMinorPledgeProtection?$AA@	; `string'
PUBLIC	?lDoControl@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lDoControl
PUBLIC	??_C@_09KHELGPKA@DoControl?$AA@			; `string'
PUBLIC	?lCanDoControl@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lCanDoControl
PUBLIC	??_C@_0N@PKKHCBGI@CanDoControl?$AA@		; `string'
PUBLIC	?lIsBuildingEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsBuildingEverActive
PUBLIC	??_C@_0BF@IAAOBODO@IsBuildingEverActive?$AA@	; `string'
PUBLIC	?lIsUnitEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsUnitEverActive
PUBLIC	??_C@_0BB@GCGDGGGG@IsUnitEverActive?$AA@	; `string'
PUBLIC	?lIsLeaderEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsLeaderEverActive
PUBLIC	??_C@_0BD@GBFCNPKP@IsLeaderEverActive?$AA@	; `string'
PUBLIC	?lIsCivEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsCivEverActive
PUBLIC	??_C@_0BA@ECPGLOBI@IsCivEverActive?$AA@		; `string'
PUBLIC	?lChangePlotExtraCost@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangePlotExtraCost
PUBLIC	??_C@_0BE@OCCPKLBN@ChangePlotExtraCost?$AA@	; `string'
PUBLIC	?lSetPlotExtraYield@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetPlotExtraYield
PUBLIC	??_C@_0BC@JDFDCOBD@SetPlotExtraYield?$AA@	; `string'
PUBLIC	?lAddPlayer@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lAddPlayer
PUBLIC	??_C@_09IFLAAADM@AddPlayer?$AA@			; `string'
PUBLIC	?lSaveReplay@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSaveReplay
PUBLIC	??_C@_0L@IDAKCDFD@SaveReplay?$AA@		; `string'
PUBLIC	?lGetReplayInfo@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetReplayInfo
PUBLIC	??_C@_0O@HPJCLEJF@GetReplayInfo?$AA@		; `string'
PUBLIC	?lGetNumReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumReplayMessages
PUBLIC	??_C@_0BF@DIOCLBGM@GetNumReplayMessages?$AA@	; `string'
PUBLIC	?lGetReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetReplayMessages
PUBLIC	??_C@_0BC@MCNNENAF@GetReplayMessages?$AA@	; `string'
PUBLIC	?lGetReplayMessage@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetReplayMessage
PUBLIC	??_C@_0BB@MDLOICDK@GetReplayMessage?$AA@	; `string'
PUBLIC	?lCalculateOptionsChecksum@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCalculateOptionsChecksum
PUBLIC	??_C@_0BJ@CCAMDPII@CalculateOptionsChecksum?$AA@ ; `string'
PUBLIC	?lCalculateSyncChecksum@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCalculateSyncChecksum
PUBLIC	??_C@_0BG@CHMMPMLD@CalculateSyncChecksum?$AA@	; `string'
PUBLIC	?lRand@CvLuaGame@@KAHPAUlua_State@@@Z		; CvLuaGame::lRand
PUBLIC	??_C@_04LLEMEMKG@Rand?$AA@			; `string'
PUBLIC	?lGetName@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetName
PUBLIC	??_C@_07MMGEHGCI@GetName?$AA@			; `string'
PUBLIC	?lSetName@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetName
PUBLIC	??_C@_07DEJFEJPJ@SetName?$AA@			; `string'
PUBLIC	?lIsInAdvancedStart@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsInAdvancedStart
PUBLIC	??_C@_0BC@KNBLEAKO@IsInAdvancedStart?$AA@	; `string'
PUBLIC	?lMakeNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lMakeNukesValid
PUBLIC	??_C@_0P@BAMBEBFG@MakeNukesValid?$AA@		; `string'
PUBLIC	?lIsNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsNukesValid
PUBLIC	??_C@_0N@NPEGNFLP@IsNukesValid?$AA@		; `string'
PUBLIC	?lMakeSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lMakeSpecialUnitValid
PUBLIC	??_C@_0BF@BIKONALI@MakeSpecialUnitValid?$AA@	; `string'
PUBLIC	?lIsSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsSpecialUnitValid
PUBLIC	??_C@_0BD@OHBOEENN@IsSpecialUnitValid?$AA@	; `string'
PUBLIC	?lSetVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetVictoryValid
PUBLIC	??_C@_0BA@HBCIKCE@SetVictoryValid?$AA@		; `string'
PUBLIC	?lIsVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsVictoryValid
PUBLIC	??_C@_0P@HFBGIDLK@IsVictoryValid?$AA@		; `string'
PUBLIC	?lIsProjectMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsProjectMaxedOut
PUBLIC	??_C@_0BC@OBMJOMIK@IsProjectMaxedOut?$AA@	; `string'
PUBLIC	?lGetProjectCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetProjectCreatedCount
PUBLIC	??_C@_0BH@PNJJBILD@GetProjectCreatedCount?$AA@	; `string'
PUBLIC	?lIsBuildingClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsBuildingClassMaxedOut
PUBLIC	??_C@_0BI@BIOFBBJB@IsBuildingClassMaxedOut?$AA@	; `string'
PUBLIC	?lGetBuildingClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBuildingClassCreatedCount
PUBLIC	??_C@_0BN@HHEMMAAG@GetBuildingClassCreatedCount?$AA@ ; `string'
PUBLIC	?lIsUnitClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsUnitClassMaxedOut
PUBLIC	??_C@_0BE@KOKPIAGA@IsUnitClassMaxedOut?$AA@	; `string'
PUBLIC	?lGetUnitClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetUnitClassCreatedCount
PUBLIC	??_C@_0BJ@HBCFMJOB@GetUnitClassCreatedCount?$AA@ ; `string'
PUBLIC	?lGetUnitCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetUnitCreatedCount
PUBLIC	??_C@_0BE@IJNNECCG@GetUnitCreatedCount?$AA@	; `string'
PUBLIC	?lIsMPOption@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsMPOption
PUBLIC	??_C@_0L@BFBAHMJH@IsMPOption?$AA@		; `string'
PUBLIC	?lSetOption@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetOption
PUBLIC	??_C@_09DLFAMNKA@SetOption?$AA@			; `string'
PUBLIC	?lIsOption@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsOption
PUBLIC	??_C@_08CPAPEJN@IsOption?$AA@			; `string'
PUBLIC	?lGetTeamScore@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetTeamScore
PUBLIC	??_C@_0N@OGGGMIHD@GetTeamScore?$AA@		; `string'
PUBLIC	?lGetTeamRank@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetTeamRank
PUBLIC	??_C@_0M@DFOHMFIM@GetTeamRank?$AA@		; `string'
PUBLIC	?lGetRankTeam@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetRankTeam
PUBLIC	??_C@_0M@LPICKDEE@GetRankTeam?$AA@		; `string'
PUBLIC	?lGetPlayerScore@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetPlayerScore
PUBLIC	??_C@_0P@JELLOHIK@GetPlayerScore?$AA@		; `string'
PUBLIC	?lGetPlayerRank@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetPlayerRank
PUBLIC	??_C@_0O@OPKPLJEK@GetPlayerRank?$AA@		; `string'
PUBLIC	?lGetRankPlayer@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetRankPlayer
PUBLIC	??_C@_0O@IEOEGAHN@GetRankPlayer?$AA@		; `string'
PUBLIC	?lGetGameSpeedType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGameSpeedType
PUBLIC	??_C@_0BB@DCMPODF@GetGameSpeedType?$AA@		; `string'
PUBLIC	?lGetStartEra@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetStartEra
PUBLIC	??_C@_0M@JNBFHJON@GetStartEra?$AA@		; `string'
PUBLIC	?lGetCalendar@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetCalendar
PUBLIC	??_C@_0M@DHNLEMPD@GetCalendar?$AA@		; `string'
PUBLIC	?lGetHandicapType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetHandicapType
PUBLIC	??_C@_0BA@NDPGKNBO@GetHandicapType?$AA@		; `string'
PUBLIC	?lChangeNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangeNumVotesForTeam
PUBLIC	??_C@_0BG@BJHOIPGP@ChangeNumVotesForTeam?$AA@	; `string'
PUBLIC	?lSetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetNumVotesForTeam
PUBLIC	??_C@_0BD@DBPDHPP@SetNumVotesForTeam?$AA@	; `string'
PUBLIC	?lGetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumVotesForTeam
PUBLIC	??_C@_0BD@PJDFABBH@GetNumVotesForTeam?$AA@	; `string'
PUBLIC	?lGetPreviousVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPreviousVoteCast
PUBLIC	??_C@_0BE@EKIOIEIM@GetPreviousVoteCast?$AA@	; `string'
PUBLIC	?lGetVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetVoteCast
PUBLIC	??_C@_0M@NHEAEAEJ@GetVoteCast?$AA@		; `string'
PUBLIC	?lGetNumVictoryVotesTallied@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumVictoryVotesTallied
PUBLIC	??_C@_0BK@GCJFCPEL@GetNumVictoryVotesTallied?$AA@ ; `string'
PUBLIC	?lIsUnitedNationsActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsUnitedNationsActive
PUBLIC	??_C@_0BG@EPNNJPDD@IsUnitedNationsActive?$AA@	; `string'
PUBLIC	?lGetVotesNeededForDiploVictory@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetVotesNeededForDiploVictory
PUBLIC	??_C@_0BO@FPFHEDKK@GetVotesNeededForDiploVictory?$AA@ ; `string'
PUBLIC	?lSetGameState@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetGameState
PUBLIC	??_C@_0N@FBHPHEOD@SetGameState?$AA@		; `string'
PUBLIC	?lGetGameState@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetGameState
PUBLIC	??_C@_0N@CFMBLIKP@GetGameState?$AA@		; `string'
PUBLIC	?lSetWinner@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetWinner
PUBLIC	??_C@_09BHNPCDEL@SetWinner?$AA@			; `string'
PUBLIC	?lGetVictory@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetVictory
PUBLIC	??_C@_0L@DEBCEOMK@GetVictory?$AA@		; `string'
PUBLIC	?lGetWinner@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetWinner
PUBLIC	??_C@_09DJJKACNJ@GetWinner?$AA@			; `string'
PUBLIC	?lGetFaithCost@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetFaithCost
PUBLIC	??_C@_0N@EEBFJLEP@GetFaithCost?$AA@		; `string'
PUBLIC	?lGetBestLandUnitCombat@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestLandUnitCombat
PUBLIC	??_C@_0BG@LAJKLGGH@GetBestLandUnitCombat?$AA@	; `string'
PUBLIC	?lGetBestLandUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestLandUnit
PUBLIC	??_C@_0BA@PMKPPFOP@GetBestLandUnit?$AA@		; `string'
PUBLIC	?lIsPaused@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsPaused
PUBLIC	??_C@_08KOFADKJD@IsPaused?$AA@			; `string'
PUBLIC	?lSetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetPausePlayer
PUBLIC	??_C@_0P@JEAMAMCA@SetPausePlayer?$AA@		; `string'
PUBLIC	?lGetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetPausePlayer
PUBLIC	??_C@_0P@FKBCPGAM@GetPausePlayer?$AA@		; `string'
PUBLIC	?lSetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetActivePlayer
PUBLIC	??_C@_0BA@IKFAGGFF@SetActivePlayer?$AA@		; `string'
PUBLIC	?lGetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetActivePlayer
PUBLIC	??_C@_0BA@LIEGBEEM@GetActivePlayer?$AA@		; `string'
PUBLIC	?lIsFinalInitialized@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsFinalInitialized
PUBLIC	??_C@_0BD@MMGHEDPG@IsFinalInitialized?$AA@	; `string'
PUBLIC	?lIsSimultaneousTeamTurns@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsSimultaneousTeamTurns
PUBLIC	??_C@_0BI@FKPGBLMB@IsSimultaneousTeamTurns?$AA@	; `string'
PUBLIC	?lIsPitboss@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsPitboss
PUBLIC	??_C@_09LOFNMOJA@IsPitboss?$AA@			; `string'
PUBLIC	?lIsPbem@CvLuaGame@@KAHPAUlua_State@@@Z		; CvLuaGame::lIsPbem
PUBLIC	??_C@_06JMFIDCG@IsPbem?$AA@			; `string'
PUBLIC	?lIsHotSeat@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsHotSeat
PUBLIC	??_C@_09NBMMEBLP@IsHotSeat?$AA@			; `string'
PUBLIC	?lSetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetPitbossTurnTime
PUBLIC	??_C@_0BD@NMFICBBG@SetPitbossTurnTime?$AA@	; `string'
PUBLIC	?lGetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPitbossTurnTime
PUBLIC	??_C@_0BD@CGHCBHPO@GetPitbossTurnTime?$AA@	; `string'
PUBLIC	?lUpdateFOW@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lUpdateFOW
PUBLIC	??_C@_09DLKJEBCF@UpdateFOW?$AA@			; `string'
PUBLIC	?lToggleDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lToggleDebugMode
PUBLIC	??_C@_0BA@KDGJNHAB@ToggleDebugMode?$AA@		; `string'
PUBLIC	?lSetDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetDebugMode
PUBLIC	??_C@_0N@JGHJFLIB@SetDebugMode?$AA@		; `string'
PUBLIC	?lIsDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsDebugMode
PUBLIC	??_C@_0M@GCJIADCJ@IsDebugMode?$AA@		; `string'
PUBLIC	?lDoFromUIDiploEvent@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoFromUIDiploEvent
PUBLIC	??_C@_0BD@MLPGFDEI@DoFromUIDiploEvent?$AA@	; `string'
PUBLIC	?lMakeCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lMakeCircumnavigated
PUBLIC	??_C@_0BE@BEIFOFIP@MakeCircumnavigated?$AA@	; `string'
PUBLIC	?lIsCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsCircumnavigated
PUBLIC	??_C@_0BC@KLHLPAFG@IsCircumnavigated?$AA@	; `string'
PUBLIC	?lSetScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetScoreDirty
PUBLIC	??_C@_0O@ECMLDDFG@SetScoreDirty?$AA@		; `string'
PUBLIC	?lIsScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsScoreDirty
PUBLIC	??_C@_0N@JKDCPJNE@IsScoreDirty?$AA@		; `string'
PUBLIC	?lSetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetAIAutoPlay
PUBLIC	??_C@_0O@GAAHECC@SetAIAutoPlay?$AA@		; `string'
PUBLIC	?lGetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetAIAutoPlay
PUBLIC	??_C@_0O@HJBOMHFF@GetAIAutoPlay?$AA@		; `string'
PUBLIC	?lGetNumWorldWonders@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumWorldWonders
PUBLIC	??_C@_0BD@FHKHHPIG@GetNumWorldWonders?$AA@	; `string'
PUBLIC	?lGetInitWonders@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetInitWonders
PUBLIC	??_C@_0P@HPOBKFL@GetInitWonders?$AA@		; `string'
PUBLIC	?lGetInitTech@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetInitTech
PUBLIC	??_C@_0M@BODMDKP@GetInitTech?$AA@		; `string'
PUBLIC	?lGetInitLand@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetInitLand
PUBLIC	??_C@_0M@HKHMFEOE@GetInitLand?$AA@		; `string'
PUBLIC	?lGetInitPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetInitPopulation
PUBLIC	??_C@_0BC@CLMIMCAI@GetInitPopulation?$AA@	; `string'
PUBLIC	?lGetMaxPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMaxPopulation
PUBLIC	??_C@_0BB@LCOKJLPM@GetMaxPopulation?$AA@	; `string'
PUBLIC	?lChangeNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangeNukesExploded
PUBLIC	??_C@_0BE@FHIOAEGC@ChangeNukesExploded?$AA@	; `string'
PUBLIC	?lGetNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNukesExploded
PUBLIC	??_C@_0BB@FEHNKNGF@GetNukesExploded?$AA@	; `string'
PUBLIC	?lChangeNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangeNoNukesCount
PUBLIC	??_C@_0BD@NCOJINPO@ChangeNoNukesCount?$AA@	; `string'
PUBLIC	?lIsNoNukes@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsNoNukes
PUBLIC	??_C@_09FEFEPPHP@IsNoNukes?$AA@			; `string'
PUBLIC	?lGetNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNoNukesCount
PUBLIC	??_C@_0BA@JHKCIGHM@GetNoNukesCount?$AA@		; `string'
PUBLIC	?lGetTotalPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTotalPopulation
PUBLIC	??_C@_0BD@BKBNEN@GetTotalPopulation?$AA@	; `string'
PUBLIC	?lGetNumCivCities@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCivCities
PUBLIC	??_C@_0BA@JHGDDCJG@GetNumCivCities?$AA@		; `string'
PUBLIC	?lGetNumCities@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetNumCities
PUBLIC	??_C@_0N@OFLMPMAK@GetNumCities?$AA@		; `string'
PUBLIC	?lCountNumHumanGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountNumHumanGameTurnActive
PUBLIC	??_C@_0BM@DAJJNKIG@CountNumHumanGameTurnActive?$AA@ ; `string'
PUBLIC	?lGetNumGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumGameTurnActive
PUBLIC	??_C@_0BF@KBMHIGNM@GetNumGameTurnActive?$AA@	; `string'
PUBLIC	?lGetAllowRClickMovementWhileScrolling@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAllowRClickMovementWhileScrolling
PUBLIC	??_C@_0CF@MGEJFFOD@GetAllowRClickMovementWhileScrol@ ; `string'
PUBLIC	?lSetAdvisorCityAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorCityAttackInterrupt
PUBLIC	??_C@_0BO@FEHAIGNH@SetAdvisorCityAttackInterrupt?$AA@ ; `string'
PUBLIC	?lSetAdvisorBadAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorBadAttackInterrupt
PUBLIC	??_C@_0BN@MMOJNIHE@SetAdvisorBadAttackInterrupt?$AA@ ; `string'
PUBLIC	?lSetAdvisorMessageHasBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorMessageHasBeenSeen
PUBLIC	??_C@_0BN@DKEPDDOF@SetAdvisorMessageHasBeenSeen?$AA@ ; `string'
PUBLIC	?lHasAdvisorMessageBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lHasAdvisorMessageBeenSeen
PUBLIC	??_C@_0BK@BMGPOKLD@HasAdvisorMessageBeenSeen?$AA@ ; `string'
PUBLIC	?lGetTutorialLevel@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTutorialLevel
PUBLIC	??_C@_0BB@ELIDKPCD@GetTutorialLevel?$AA@	; `string'
PUBLIC	?lIsTutorialDebugging@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsTutorialDebugging
PUBLIC	??_C@_0BE@CCNGCBKP@IsTutorialDebugging?$AA@	; `string'
PUBLIC	?lIsTutorialLogging@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsTutorialLogging
PUBLIC	??_C@_0BC@GKNJGIMD@IsTutorialLogging?$AA@	; `string'
PUBLIC	?lSetEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetEverRightClickMoved
PUBLIC	??_C@_0BH@GPLHPDBL@SetEverRightClickMoved?$AA@	; `string'
PUBLIC	?lIsEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsEverRightClickMoved
PUBLIC	??_C@_0BG@MDPJGBGF@IsEverRightClickMoved?$AA@	; `string'
PUBLIC	?lSetStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetStaticTutorialActive
PUBLIC	??_C@_0BI@CMIENKPA@SetStaticTutorialActive?$AA@	; `string'
PUBLIC	?lIsStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsStaticTutorialActive
PUBLIC	??_C@_0BH@JLJFMIFJ@IsStaticTutorialActive?$AA@	; `string'
PUBLIC	?lSetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetTargetScore
PUBLIC	??_C@_0P@FJHMPNOM@SetTargetScore?$AA@		; `string'
PUBLIC	?lGetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetTargetScore
PUBLIC	??_C@_0P@JHGCAHMA@GetTargetScore?$AA@		; `string'
PUBLIC	?lGetMinutesPlayed@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMinutesPlayed
PUBLIC	??_C@_0BB@NPENKJHH@GetMinutesPlayed?$AA@	; `string'
PUBLIC	?lGetTurnSlice@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetTurnSlice
PUBLIC	??_C@_0N@DDKFKHBN@GetTurnSlice?$AA@		; `string'
PUBLIC	?lSetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetEstimateEndTurn
PUBLIC	??_C@_0BD@CPNMOABJ@SetEstimateEndTurn?$AA@	; `string'
PUBLIC	?lGetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetEstimateEndTurn
PUBLIC	??_C@_0BD@NFPGNGPB@GetEstimateEndTurn?$AA@	; `string'
PUBLIC	?lSetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetStartYear
PUBLIC	??_C@_0N@NPEPEJCB@SetStartYear?$AA@		; `string'
PUBLIC	?lGetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetStartYear
PUBLIC	??_C@_0N@KLPBIFGN@GetStartYear?$AA@		; `string'
PUBLIC	?lGetWinningTurn@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetWinningTurn
PUBLIC	??_C@_0P@PLFHKJK@GetWinningTurn?$AA@		; `string'
PUBLIC	?lGetStartTurn@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetStartTurn
PUBLIC	??_C@_0N@PLGPFGDH@GetStartTurn?$AA@		; `string'
PUBLIC	?lSetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetNumAdvancedStartPoints
PUBLIC	??_C@_0BK@LGNKJMMD@SetNumAdvancedStartPoints?$AA@ ; `string'
PUBLIC	?lGetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumAdvancedStartPoints
PUBLIC	??_C@_0BK@DGBMFBGF@GetNumAdvancedStartPoints?$AA@ ; `string'
PUBLIC	?lSetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetMaxCityElimination
PUBLIC	??_C@_0BG@DIKIOFHK@SetMaxCityElimination?$AA@	; `string'
PUBLIC	?lGetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMaxCityElimination
PUBLIC	??_C@_0BG@MNPODMDL@GetMaxCityElimination?$AA@	; `string'
PUBLIC	?lChangeMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lChangeMaxTurns
PUBLIC	??_C@_0P@NNFCNHCO@ChangeMaxTurns?$AA@		; `string'
PUBLIC	?lSetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetMaxTurns
PUBLIC	??_C@_0M@NMLFPFJL@SetMaxTurns?$AA@		; `string'
PUBLIC	?lGetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetMaxTurns
PUBLIC	??_C@_0M@NDKLCDBI@GetMaxTurns?$AA@		; `string'
PUBLIC	?lGetElapsedGameTurns@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetElapsedGameTurns
PUBLIC	??_C@_0BE@EGONPMOO@GetElapsedGameTurns?$AA@	; `string'
PUBLIC	?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetTurnString
PUBLIC	??_C@_0O@NCNEBNPO@GetTurnString?$AA@		; `string'
PUBLIC	?lGetGameTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGameTurnYear
PUBLIC	??_C@_0BA@HCNOOOMC@GetGameTurnYear?$AA@		; `string'
PUBLIC	?lGetTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetTurnYear
PUBLIC	??_C@_0M@PBBAEIDJ@GetTurnYear?$AA@		; `string'
PUBLIC	?lSetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lSetGameTurn
PUBLIC	??_C@_0M@DIHNBAGB@SetGameTurn?$AA@		; `string'
PUBLIC	?lGetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetGameTurn
PUBLIC	??_C@_0M@DHGDMGOC@GetGameTurn?$AA@		; `string'
PUBLIC	?lGetNumSequentialHumans@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumSequentialHumans
PUBLIC	??_C@_0BH@MNBIDJED@GetNumSequentialHumans?$AA@	; `string'
PUBLIC	?lGetNumHumanPlayers@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumHumanPlayers
PUBLIC	??_C@_0BD@CNCKMKLF@GetNumHumanPlayers?$AA@	; `string'
PUBLIC	?lReviveActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lReviveActivePlayer
PUBLIC	??_C@_0BD@PNKFDCJD@ReviveActivePlayer?$AA@	; `string'
PUBLIC	?lIsTeamGame@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lIsTeamGame
PUBLIC	??_C@_0L@DLNBGBDM@IsTeamGame?$AA@		; `string'
PUBLIC	?lIsGameMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsGameMultiPlayer
PUBLIC	??_C@_0BC@NIOHMLKJ@IsGameMultiPlayer?$AA@	; `string'
PUBLIC	?lIsNetworkMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsNetworkMultiPlayer
PUBLIC	??_C@_0BF@LOKJIOPH@IsNetworkMultiPlayer?$AA@	; `string'
PUBLIC	?lGetActiveCivilizationType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetActiveCivilizationType
PUBLIC	??_C@_0BK@GMACKBML@GetActiveCivilizationType?$AA@ ; `string'
PUBLIC	?lGetActiveTeam@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetActiveTeam
PUBLIC	??_C@_0O@POPBPJOF@GetActiveTeam?$AA@		; `string'
PUBLIC	?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetDiploResponse
PUBLIC	??_C@_0BB@JHEMKDBG@GetDiploResponse?$AA@	; `string'
PUBLIC	?lGetCurrentEra@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lGetCurrentEra
PUBLIC	??_C@_0O@DBDBEBPD@GetCurrentEra?$AA@		; `string'
PUBLIC	?lCanTrainNukes@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lCanTrainNukes
PUBLIC	??_C@_0O@MGDNFNEM@CanTrainNukes?$AA@		; `string'
PUBLIC	?lGetImprovementUpgradeTime@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetImprovementUpgradeTime
PUBLIC	??_C@_0BK@JPFKJMOO@GetImprovementUpgradeTime?$AA@ ; `string'
PUBLIC	?lVictoryDelay@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lVictoryDelay
PUBLIC	??_C@_0N@MNNHAEKH@VictoryDelay?$AA@		; `string'
PUBLIC	?lGoldenAgeLength@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGoldenAgeLength
PUBLIC	??_C@_0BA@HIIILMMM@GoldenAgeLength?$AA@		; `string'
PUBLIC	?lCountKnownTechNumTeams@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountKnownTechNumTeams
PUBLIC	??_C@_0BH@BBKLDJHC@CountKnownTechNumTeams?$AA@	; `string'
PUBLIC	?lCountTotalNukeUnits@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountTotalNukeUnits
PUBLIC	??_C@_0BE@BOHJMEIP@CountTotalNukeUnits?$AA@	; `string'
PUBLIC	?lCountTotalCivPower@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountTotalCivPower
PUBLIC	??_C@_0BD@KABPIJOH@CountTotalCivPower?$AA@	; `string'
PUBLIC	?lCountHumanPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountHumanPlayersEverAlive
PUBLIC	??_C@_0BL@NHFNEPCG@CountHumanPlayersEverAlive?$AA@ ; `string'
PUBLIC	?lCountHumanPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountHumanPlayersAlive
PUBLIC	??_C@_0BH@NPAKNGLN@CountHumanPlayersAlive?$AA@	; `string'
PUBLIC	?lCountCivTeamsEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountCivTeamsEverAlive
PUBLIC	??_C@_0BH@CMCLEPCA@CountCivTeamsEverAlive?$AA@	; `string'
PUBLIC	?lCountCivTeamsAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountCivTeamsAlive
PUBLIC	??_C@_0BD@BEOMALBI@CountCivTeamsAlive?$AA@	; `string'
PUBLIC	?lCountCivPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountCivPlayersEverAlive
PUBLIC	??_C@_0BJ@DMGNCBAD@CountCivPlayersEverAlive?$AA@ ; `string'
PUBLIC	?lCountCivPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountCivPlayersAlive
PUBLIC	??_C@_0BF@OABNJLCK@CountCivPlayersAlive?$AA@	; `string'
PUBLIC	?lSetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetUnitedNationsCountdown
PUBLIC	??_C@_0BK@PGALOIOI@SetUnitedNationsCountdown?$AA@ ; `string'
PUBLIC	?lGetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetUnitedNationsCountdown
PUBLIC	??_C@_0BK@HGMNCFEO@GetUnitedNationsCountdown?$AA@ ; `string'
PUBLIC	?lGetAdjustedLandPercent@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAdjustedLandPercent
PUBLIC	??_C@_0BH@LNHFJDEB@GetAdjustedLandPercent?$AA@	; `string'
PUBLIC	?lGetAdjustedPopulationPercent@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAdjustedPopulationPercent
PUBLIC	??_C@_0BN@OJIFMJAA@GetAdjustedPopulationPercent?$AA@ ; `string'
PUBLIC	?lGetProductionPerPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetProductionPerPopulation
PUBLIC	??_C@_0BL@MPAMACHM@GetProductionPerPopulation?$AA@ ; `string'
PUBLIC	?lCityPurchaseProject@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCityPurchaseProject
PUBLIC	??_C@_0BE@OAIJGNPH@CityPurchaseProject?$AA@	; `string'
PUBLIC	?lCityPurchaseBuilding@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCityPurchaseBuilding
PUBLIC	??_C@_0BF@HHJDEJAJ@CityPurchaseBuilding?$AA@	; `string'
PUBLIC	?lCityPurchaseUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCityPurchaseUnit
PUBLIC	??_C@_0BB@GEAOIOGF@CityPurchaseUnit?$AA@	; `string'
PUBLIC	?lCityPushOrder@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lCityPushOrder
PUBLIC	??_C@_0O@DLDCLPIH@CityPushOrder?$AA@		; `string'
PUBLIC	?lSelectedCitiesGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectedCitiesGameNetMessage
PUBLIC	??_C@_0BN@DKKBBHKF@SelectedCitiesGameNetMessage?$AA@ ; `string'
PUBLIC	?lSelectionListGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectionListGameNetMessage
PUBLIC	??_C@_0BM@KPINNGKD@SelectionListGameNetMessage?$AA@ ; `string'
PUBLIC	?lSelectionListMove@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectionListMove
PUBLIC	??_C@_0BC@IMDEFNAG@SelectionListMove?$AA@	; `string'
PUBLIC	?lCyclePlotUnits@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lCyclePlotUnits
PUBLIC	??_C@_0P@HBFLLMPF@CyclePlotUnits?$AA@		; `string'
PUBLIC	?lCycleUnits@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lCycleUnits
PUBLIC	??_C@_0L@IBCPPGCA@CycleUnits?$AA@		; `string'
PUBLIC	?lCycleCities@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lCycleCities
PUBLIC	??_C@_0M@EFOLPPE@CycleCities?$AA@		; `string'
PUBLIC	?lUpdateScore@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lUpdateScore
PUBLIC	??_C@_0M@MEGCDIPH@UpdateScore?$AA@		; `string'
PUBLIC	?lHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z	; CvLuaGame::lHandleAction
PUBLIC	??_C@_0N@MCJFCJAM@HandleAction?$AA@		; `string'
PUBLIC	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
PUBLIC	?lCanHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCanHandleAction
PUBLIC	??_C@_0BA@JKGPCCHB@CanHandleAction?$AA@		; `string'
PUBLIC	?RegisterMembers@CvLuaGame@@SAXPAUlua_State@@@Z	; CvLuaGame::RegisterMembers
;	COMDAT ??_C@_0BN@ILHHKDKD@GetNumHiddenArchaeologySites?$AA@
CONST	SEGMENT
??_C@_0BN@ILHHKDKD@GetNumHiddenArchaeologySites?$AA@ DB 'GetNumHiddenArch'
	DB	'aeologySites', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CGIJLDCN@GetNumArchaeologySites?$AA@
CONST	SEGMENT
??_C@_0BH@CGIJLDCN@GetNumArchaeologySites?$AA@ DB 'GetNumArchaeologySites'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EMLNJGOH@MouseoverUnit?$AA@
CONST	SEGMENT
??_C@_0O@EMLNJGOH@MouseoverUnit?$AA@ DB 'MouseoverUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@DONCEICH@SelectedUnit_SpeculativePopupTra@
CONST	SEGMENT
??_C@_0CN@DONCEICH@SelectedUnit_SpeculativePopupTra@ DB 'SelectedUnit_Spe'
	DB	'culativePopupTradeRoute_Hide', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@EKBLDCCD@SelectedUnit_SpeculativePopupTra@
CONST	SEGMENT
??_C@_0DA@EKBLDCCD@SelectedUnit_SpeculativePopupTra@ DB 'SelectedUnit_Spe'
	DB	'culativePopupTradeRoute_Display', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BMENPGPE@GetLongestCityConnectionPlots?$AA@
CONST	SEGMENT
??_C@_0BO@BMENPGPE@GetLongestCityConnectionPlots?$AA@ DB 'GetLongestCityC'
	DB	'onnectionPlots', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DPNODDCH@GetNumFreePolicies?$AA@
CONST	SEGMENT
??_C@_0BD@DPNODDCH@GetNumFreePolicies?$AA@ DB 'GetNumFreePolicies', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KMNDNEOG@GetArtifactName?$AA@
CONST	SEGMENT
??_C@_0BA@KMNDNEOG@GetArtifactName?$AA@ DB 'GetArtifactName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KPGAFMHH@GetGreatWorkCurrentThemingBonus?$AA@
CONST	SEGMENT
??_C@_0CA@KPGAFMHH@GetGreatWorkCurrentThemingBonus?$AA@ DB 'GetGreatWorkC'
	DB	'urrentThemingBonus', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IKJFIBAN@GetGreatWorkController?$AA@
CONST	SEGMENT
??_C@_0BH@IKJFIBAN@GetGreatWorkController?$AA@ DB 'GetGreatWorkController'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LBHAMFME@GetGreatWorkCreator?$AA@
CONST	SEGMENT
??_C@_0BE@LBHAMFME@GetGreatWorkCreator?$AA@ DB 'GetGreatWorkCreator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LMBMELCC@GetGreatWorkEraShort?$AA@
CONST	SEGMENT
??_C@_0BF@LMBMELCC@GetGreatWorkEraShort?$AA@ DB 'GetGreatWorkEraShort', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MEHKMABC@GetGreatWorkEraAbbreviation?$AA@
CONST	SEGMENT
??_C@_0BM@MEHKMABC@GetGreatWorkEraAbbreviation?$AA@ DB 'GetGreatWorkEraAb'
	DB	'breviation', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PFJDFAPE@GetGreatWorkEra?$AA@
CONST	SEGMENT
??_C@_0BA@PFJDFAPE@GetGreatWorkEra?$AA@ DB 'GetGreatWorkEra', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GGPFKKMA@GetGreatWorkArtist?$AA@
CONST	SEGMENT
??_C@_0BD@GGPFKKMA@GetGreatWorkArtist?$AA@ DB 'GetGreatWorkArtist', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EAJHLGBM@GetGreatWorkClass?$AA@
CONST	SEGMENT
??_C@_0BC@EAJHLGBM@GetGreatWorkClass?$AA@ DB 'GetGreatWorkClass', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DFMKMKMD@GetGreatWorkType?$AA@
CONST	SEGMENT
??_C@_0BB@DFMKMKMD@GetGreatWorkType?$AA@ DB 'GetGreatWorkType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JOMJAKLD@GetGreatWorkName?$AA@
CONST	SEGMENT
??_C@_0BB@JOMJAKLD@GetGreatWorkName?$AA@ DB 'GetGreatWorkName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KOLHPJBP@GetGreatWorkTooltip?$AA@
CONST	SEGMENT
??_C@_0BE@KOLHPJBP@GetGreatWorkTooltip?$AA@ DB 'GetGreatWorkTooltip', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GMOHFKCF@IsProcessingMessages?$AA@
CONST	SEGMENT
??_C@_0BF@GMOHFKCF@IsProcessingMessages?$AA@ DB 'IsProcessingMessages', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JGFELEHE@GetActiveLeague?$AA@
CONST	SEGMENT
??_C@_0BA@JGFELEHE@GetActiveLeague?$AA@ DB 'GetActiveLeague', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09MNHMPFCL@GetLeague?$AA@
CONST	SEGMENT
??_C@_09MNHMPFCL@GetLeague?$AA@ DB 'GetLeague', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IPFGDPKL@GetNumLeaguesEverFounded?$AA@
CONST	SEGMENT
??_C@_0BJ@IPFGDPKL@GetNumLeaguesEverFounded?$AA@ DB 'GetNumLeaguesEverFou'
	DB	'nded', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GDCNMBLK@GetNumActiveLeagues?$AA@
CONST	SEGMENT
??_C@_0BE@GDCNMBLK@GetNumActiveLeagues?$AA@ DB 'GetNumActiveLeagues', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@EKKFPCLI@GetTurnsUntilMinorCivElection?$AA@
CONST	SEGMENT
??_C@_0BO@EKKFPCLI@GetTurnsUntilMinorCivElection?$AA@ DB 'GetTurnsUntilMi'
	DB	'norCivElection', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@MGIONIDE@GetTurnsBetweenMinorCivElections@
CONST	SEGMENT
??_C@_0CB@MGIONIDE@GetTurnsBetweenMinorCivElections@ DB 'GetTurnsBetweenM'
	DB	'inorCivElections', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OHBFHIAI@SetFounder?$AA@
CONST	SEGMENT
??_C@_0L@OHBFHIAI@SetFounder?$AA@ DB 'SetFounder', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PJDKMPEB@GetFounder?$AA@
CONST	SEGMENT
??_C@_0L@PJDKMPEB@GetFounder?$AA@ DB 'GetFounder', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OJCMFPEH@SetHolyCity?$AA@
CONST	SEGMENT
??_C@_0M@OJCMFPEH@SetHolyCity?$AA@ DB 'SetHolyCity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MJNPLGMD@EnhanceReligion?$AA@
CONST	SEGMENT
??_C@_0BA@MJNPLGMD@EnhanceReligion?$AA@ DB 'EnhanceReligion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KKHALMAI@FoundReligion?$AA@
CONST	SEGMENT
??_C@_0O@KKHALMAI@FoundReligion?$AA@ DB 'FoundReligion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OAJNLCHB@FoundPantheon?$AA@
CONST	SEGMENT
??_C@_0O@OAJNLCHB@FoundPantheon?$AA@ DB 'FoundPantheon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@ODLKNBCI@GetFounderBenefitsReligion?$AA@
CONST	SEGMENT
??_C@_0BL@ODLKNBCI@GetFounderBenefitsReligion?$AA@ DB 'GetFounderBenefits'
	DB	'Religion', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GINIHLHA@GetReligionName?$AA@
CONST	SEGMENT
??_C@_0BA@GINIHLHA@GetReligionName?$AA@ DB 'GetReligionName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NCFNPKAM@GetHolyCityForReligion?$AA@
CONST	SEGMENT
??_C@_0BH@NCFNPKAM@GetHolyCityForReligion?$AA@ DB 'GetHolyCityForReligion'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FMGIEENO@GetNumReligionsFounded?$AA@
CONST	SEGMENT
??_C@_0BH@FMGIEENO@GetNumReligionsFounded?$AA@ DB 'GetNumReligionsFounded'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@CLCAOIFD@GetNumReligionsStillToFound?$AA@
CONST	SEGMENT
??_C@_0BM@CLCAOIFD@GetNumReligionsStillToFound?$AA@ DB 'GetNumReligionsSt'
	DB	'illToFound', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MBPEBDAP@GetBeliefsInReligion?$AA@
CONST	SEGMENT
??_C@_0BF@MBPEBDAP@GetBeliefsInReligion?$AA@ DB 'GetBeliefsInReligion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NLBBKMBK@GetNumCitiesFollowing?$AA@
CONST	SEGMENT
??_C@_0BG@NLBBKMBK@GetNumCitiesFollowing?$AA@ DB 'GetNumCitiesFollowing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BEJIHHEO@GetNumFollowers?$AA@
CONST	SEGMENT
??_C@_0BA@BEJIHHEO@GetNumFollowers?$AA@ DB 'GetNumFollowers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@CADPLLKB@GetAvailableReformationBeliefs?$AA@
CONST	SEGMENT
??_C@_0BP@CADPLLKB@GetAvailableReformationBeliefs?$AA@ DB 'GetAvailableRe'
	DB	'formationBeliefs', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FGBDBKNN@GetAvailableBonusBeliefs?$AA@
CONST	SEGMENT
??_C@_0BJ@FGBDBKNN@GetAvailableBonusBeliefs?$AA@ DB 'GetAvailableBonusBel'
	DB	'iefs', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KDHMNEGC@GetAvailableEnhancerBeliefs?$AA@
CONST	SEGMENT
??_C@_0BM@KDHMNEGC@GetAvailableEnhancerBeliefs?$AA@ DB 'GetAvailableEnhan'
	DB	'cerBeliefs', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OIEFKPDL@GetAvailableFollowerBeliefs?$AA@
CONST	SEGMENT
??_C@_0BM@OIEFKPDL@GetAvailableFollowerBeliefs?$AA@ DB 'GetAvailableFollo'
	DB	'werBeliefs', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DMBIIOGH@GetAvailableFounderBeliefs?$AA@
CONST	SEGMENT
??_C@_0BL@DMBIIOGH@GetAvailableFounderBeliefs?$AA@ DB 'GetAvailableFounde'
	DB	'rBeliefs', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GADOOEAH@GetAvailablePantheonBeliefs?$AA@
CONST	SEGMENT
??_C@_0BM@GADOOEAH@GetAvailablePantheonBeliefs?$AA@ DB 'GetAvailablePanth'
	DB	'eonBeliefs', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FGPDEGO@SetMinimumFaithNextPantheon?$AA@
CONST	SEGMENT
??_C@_0BM@FGPDEGO@SetMinimumFaithNextPantheon?$AA@ DB 'SetMinimumFaithNex'
	DB	'tPantheon', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BIOHBBMK@GetMinimumFaithNextPantheon?$AA@
CONST	SEGMENT
??_C@_0BM@BIOHBBMK@GetMinimumFaithNextPantheon?$AA@ DB 'GetMinimumFaithNe'
	DB	'xtPantheon', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MBFFONGO@GetTimeString?$AA@
CONST	SEGMENT
??_C@_0O@MBFFONGO@GetTimeString?$AA@ DB 'GetTimeString', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IHBNIFJC@GetCombatPrediction?$AA@
CONST	SEGMENT
??_C@_0BE@IHBNIFJC@GetCombatPrediction?$AA@ DB 'GetCombatPrediction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CNNCGGKP@GetUnitUpgradesTo?$AA@
CONST	SEGMENT
??_C@_0BC@CNNCGGKP@GetUnitUpgradesTo?$AA@ DB 'GetUnitUpgradesTo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NADMKBKJ@GetPeaceDuration?$AA@
CONST	SEGMENT
??_C@_0BB@NADMKBKJ@GetPeaceDuration?$AA@ DB 'GetPeaceDuration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PIOFNEIA@GetDealDuration?$AA@
CONST	SEGMENT
??_C@_0BA@PIOFNEIA@GetDealDuration?$AA@ DB 'GetDealDuration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@EICALPKM@GetWorldNumCitiesUnhappinessPerc@
CONST	SEGMENT
??_C@_0CE@EICALPKM@GetWorldNumCitiesUnhappinessPerc@ DB 'GetWorldNumCitie'
	DB	'sUnhappinessPercent', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DBPBDBNK@GetBuildingYieldModifier?$AA@
CONST	SEGMENT
??_C@_0BJ@DBPBDBNK@GetBuildingYieldModifier?$AA@ DB 'GetBuildingYieldModi'
	DB	'fier', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IIHDEHPE@GetBuildingYieldChange?$AA@
CONST	SEGMENT
??_C@_0BH@IIHDEHPE@GetBuildingYieldChange?$AA@ DB 'GetBuildingYieldChange'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DOEGIJOF@GetNumCitiesTechCostMod?$AA@
CONST	SEGMENT
??_C@_0BI@DOEGIJOF@GetNumCitiesTechCostMod?$AA@ DB 'GetNumCitiesTechCostM'
	DB	'od', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OBHHAKMB@GetNumCitiesPolicyCostMod?$AA@
CONST	SEGMENT
??_C@_0BK@OBHHAKMB@GetNumCitiesPolicyCostMod?$AA@ DB 'GetNumCitiesPolicyC'
	DB	'ostMod', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OFKJKAHO@GetCustomOption?$AA@
CONST	SEGMENT
??_C@_0BA@OFKJKAHO@GetCustomOption?$AA@ DB 'GetCustomOption', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IICBLKFL@GetResearchAgreementCost?$AA@
CONST	SEGMENT
??_C@_0BJ@IICBLKFL@GetResearchAgreementCost?$AA@ DB 'GetResearchAgreement'
	DB	'Cost', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@PPFDDOGO@GetVariableCitySizeFromPopulatio@
CONST	SEGMENT
??_C@_0CC@PPFDDOGO@GetVariableCitySizeFromPopulatio@ DB 'GetVariableCityS'
	DB	'izeFromPopulation', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EIGNBGNL@IsTechRecommended?$AA@
CONST	SEGMENT
??_C@_0BC@EIGNBGNL@IsTechRecommended?$AA@ DB 'IsTechRecommended', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CAANNHAC@SetAdvisorRecommenderTech?$AA@
CONST	SEGMENT
??_C@_0BK@CAANNHAC@SetAdvisorRecommenderTech?$AA@ DB 'SetAdvisorRecommend'
	DB	'erTech', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@ONMGNANH@IsProjectRecommended?$AA@
CONST	SEGMENT
??_C@_0BF@ONMGNANH@IsProjectRecommended?$AA@ DB 'IsProjectRecommended', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KBCJFALA@IsBuildingRecommended?$AA@
CONST	SEGMENT
??_C@_0BG@KBCJFALA@IsBuildingRecommended?$AA@ DB 'IsBuildingRecommended', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MEHLOEAO@IsUnitRecommended?$AA@
CONST	SEGMENT
??_C@_0BC@MEHLOEAO@IsUnitRecommended?$AA@ DB 'IsUnitRecommended', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PCKLLFMN@SetAdvisorRecommenderCity?$AA@
CONST	SEGMENT
??_C@_0BK@PCKLLFMN@SetAdvisorRecommenderCity?$AA@ DB 'SetAdvisorRecommend'
	DB	'erCity', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MGGGFFNP@GetAdvisorCounsel?$AA@
CONST	SEGMENT
??_C@_0BC@MGGGFFNP@GetAdvisorCounsel?$AA@ DB 'GetAdvisorCounsel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DFMCJLNI@SetCombatWarned?$AA@
CONST	SEGMENT
??_C@_0BA@DFMCJLNI@SetCombatWarned?$AA@ DB 'SetCombatWarned', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EHMGJCEG@IsCombatWarned?$AA@
CONST	SEGMENT
??_C@_0P@EHMGJCEG@IsCombatWarned?$AA@ DB 'IsCombatWarned', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@IGJEPCCI@GetNumResourceRequiredForBuildin@
CONST	SEGMENT
??_C@_0CC@IGJEPCCI@GetNumResourceRequiredForBuildin@ DB 'GetNumResourceRe'
	DB	'quiredForBuilding', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LCJGBMDG@GetNumResourceRequiredForUnit?$AA@
CONST	SEGMENT
??_C@_0BO@LCJGBMDG@GetNumResourceRequiredForUnit?$AA@ DB 'GetNumResourceR'
	DB	'equiredForUnit', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IBPCBPJG@GetResourceUsageType?$AA@
CONST	SEGMENT
??_C@_0BF@IBPCBPJG@GetResourceUsageType?$AA@ DB 'GetResourceUsageType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@FJJKABLK@GameplayDiplomacyAILeaderMessage@
CONST	SEGMENT
??_C@_0CB@FJJKABLK@GameplayDiplomacyAILeaderMessage@ DB 'GameplayDiplomac'
	DB	'yAILeaderMessage', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FKEBPBPE@IsEverAttackedTutorial?$AA@
CONST	SEGMENT
??_C@_0BH@FKEBPBPE@IsEverAttackedTutorial?$AA@ DB 'IsEverAttackedTutorial'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BNFIKAFK@GetBestGreatPeoplePlayer?$AA@
CONST	SEGMENT
??_C@_0BJ@BNFIKAFK@GetBestGreatPeoplePlayer?$AA@ DB 'GetBestGreatPeoplePl'
	DB	'ayer', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IJIOMHPK@GetBestPoliciesPlayer?$AA@
CONST	SEGMENT
??_C@_0BG@IJIOMHPK@GetBestPoliciesPlayer?$AA@ DB 'GetBestPoliciesPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MILFGGAC@GetBestWondersPlayer?$AA@
CONST	SEGMENT
??_C@_0BF@MILFGGAC@GetBestWondersPlayer?$AA@ DB 'GetBestWondersPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HOJDIIMB@DoMinorBuyout?$AA@
CONST	SEGMENT
??_C@_0O@HOJDIIMB@DoMinorBuyout?$AA@ DB 'DoMinorBuyout', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FDENADME@DoMinorBullyUnit?$AA@
CONST	SEGMENT
??_C@_0BB@FDENADME@DoMinorBullyUnit?$AA@ DB 'DoMinorBullyUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LNNIHAPJ@DoMinorBullyGold?$AA@
CONST	SEGMENT
??_C@_0BB@LNNIHAPJ@DoMinorBullyGold?$AA@ DB 'DoMinorBullyGold', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LMJKLHLF@DoMinorGiftTileImprovement?$AA@
CONST	SEGMENT
??_C@_0BL@LMJKLHLF@DoMinorGiftTileImprovement?$AA@ DB 'DoMinorGiftTileImp'
	DB	'rovement', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LECDELEF@DoMinorGiftGold?$AA@
CONST	SEGMENT
??_C@_0BA@LECDELEF@DoMinorGiftGold?$AA@ DB 'DoMinorGiftGold', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LHNENHEM@DoMinorGoldGift?$AA@
CONST	SEGMENT
??_C@_0BA@LHNENHEM@DoMinorGoldGift?$AA@ DB 'DoMinorGoldGift', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CGHFCKII@DoMinorPledgeProtection?$AA@
CONST	SEGMENT
??_C@_0BI@CGHFCKII@DoMinorPledgeProtection?$AA@ DB 'DoMinorPledgeProtecti'
	DB	'on', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09KHELGPKA@DoControl?$AA@
CONST	SEGMENT
??_C@_09KHELGPKA@DoControl?$AA@ DB 'DoControl', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PKKHCBGI@CanDoControl?$AA@
CONST	SEGMENT
??_C@_0N@PKKHCBGI@CanDoControl?$AA@ DB 'CanDoControl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IAAOBODO@IsBuildingEverActive?$AA@
CONST	SEGMENT
??_C@_0BF@IAAOBODO@IsBuildingEverActive?$AA@ DB 'IsBuildingEverActive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GCGDGGGG@IsUnitEverActive?$AA@
CONST	SEGMENT
??_C@_0BB@GCGDGGGG@IsUnitEverActive?$AA@ DB 'IsUnitEverActive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GBFCNPKP@IsLeaderEverActive?$AA@
CONST	SEGMENT
??_C@_0BD@GBFCNPKP@IsLeaderEverActive?$AA@ DB 'IsLeaderEverActive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ECPGLOBI@IsCivEverActive?$AA@
CONST	SEGMENT
??_C@_0BA@ECPGLOBI@IsCivEverActive?$AA@ DB 'IsCivEverActive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OCCPKLBN@ChangePlotExtraCost?$AA@
CONST	SEGMENT
??_C@_0BE@OCCPKLBN@ChangePlotExtraCost?$AA@ DB 'ChangePlotExtraCost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JDFDCOBD@SetPlotExtraYield?$AA@
CONST	SEGMENT
??_C@_0BC@JDFDCOBD@SetPlotExtraYield?$AA@ DB 'SetPlotExtraYield', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IFLAAADM@AddPlayer?$AA@
CONST	SEGMENT
??_C@_09IFLAAADM@AddPlayer?$AA@ DB 'AddPlayer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IDAKCDFD@SaveReplay?$AA@
CONST	SEGMENT
??_C@_0L@IDAKCDFD@SaveReplay?$AA@ DB 'SaveReplay', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HPJCLEJF@GetReplayInfo?$AA@
CONST	SEGMENT
??_C@_0O@HPJCLEJF@GetReplayInfo?$AA@ DB 'GetReplayInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DIOCLBGM@GetNumReplayMessages?$AA@
CONST	SEGMENT
??_C@_0BF@DIOCLBGM@GetNumReplayMessages?$AA@ DB 'GetNumReplayMessages', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MCNNENAF@GetReplayMessages?$AA@
CONST	SEGMENT
??_C@_0BC@MCNNENAF@GetReplayMessages?$AA@ DB 'GetReplayMessages', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MDLOICDK@GetReplayMessage?$AA@
CONST	SEGMENT
??_C@_0BB@MDLOICDK@GetReplayMessage?$AA@ DB 'GetReplayMessage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CCAMDPII@CalculateOptionsChecksum?$AA@
CONST	SEGMENT
??_C@_0BJ@CCAMDPII@CalculateOptionsChecksum?$AA@ DB 'CalculateOptionsChec'
	DB	'ksum', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CHMMPMLD@CalculateSyncChecksum?$AA@
CONST	SEGMENT
??_C@_0BG@CHMMPMLD@CalculateSyncChecksum?$AA@ DB 'CalculateSyncChecksum', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04LLEMEMKG@Rand?$AA@
CONST	SEGMENT
??_C@_04LLEMEMKG@Rand?$AA@ DB 'Rand', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MMGEHGCI@GetName?$AA@
CONST	SEGMENT
??_C@_07MMGEHGCI@GetName?$AA@ DB 'GetName', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DEJFEJPJ@SetName?$AA@
CONST	SEGMENT
??_C@_07DEJFEJPJ@SetName?$AA@ DB 'SetName', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KNBLEAKO@IsInAdvancedStart?$AA@
CONST	SEGMENT
??_C@_0BC@KNBLEAKO@IsInAdvancedStart?$AA@ DB 'IsInAdvancedStart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BAMBEBFG@MakeNukesValid?$AA@
CONST	SEGMENT
??_C@_0P@BAMBEBFG@MakeNukesValid?$AA@ DB 'MakeNukesValid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NPEGNFLP@IsNukesValid?$AA@
CONST	SEGMENT
??_C@_0N@NPEGNFLP@IsNukesValid?$AA@ DB 'IsNukesValid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BIKONALI@MakeSpecialUnitValid?$AA@
CONST	SEGMENT
??_C@_0BF@BIKONALI@MakeSpecialUnitValid?$AA@ DB 'MakeSpecialUnitValid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OHBOEENN@IsSpecialUnitValid?$AA@
CONST	SEGMENT
??_C@_0BD@OHBOEENN@IsSpecialUnitValid?$AA@ DB 'IsSpecialUnitValid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HBCIKCE@SetVictoryValid?$AA@
CONST	SEGMENT
??_C@_0BA@HBCIKCE@SetVictoryValid?$AA@ DB 'SetVictoryValid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HFBGIDLK@IsVictoryValid?$AA@
CONST	SEGMENT
??_C@_0P@HFBGIDLK@IsVictoryValid?$AA@ DB 'IsVictoryValid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OBMJOMIK@IsProjectMaxedOut?$AA@
CONST	SEGMENT
??_C@_0BC@OBMJOMIK@IsProjectMaxedOut?$AA@ DB 'IsProjectMaxedOut', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PNJJBILD@GetProjectCreatedCount?$AA@
CONST	SEGMENT
??_C@_0BH@PNJJBILD@GetProjectCreatedCount?$AA@ DB 'GetProjectCreatedCount'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BIOFBBJB@IsBuildingClassMaxedOut?$AA@
CONST	SEGMENT
??_C@_0BI@BIOFBBJB@IsBuildingClassMaxedOut?$AA@ DB 'IsBuildingClassMaxedO'
	DB	'ut', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HHEMMAAG@GetBuildingClassCreatedCount?$AA@
CONST	SEGMENT
??_C@_0BN@HHEMMAAG@GetBuildingClassCreatedCount?$AA@ DB 'GetBuildingClass'
	DB	'CreatedCount', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KOKPIAGA@IsUnitClassMaxedOut?$AA@
CONST	SEGMENT
??_C@_0BE@KOKPIAGA@IsUnitClassMaxedOut?$AA@ DB 'IsUnitClassMaxedOut', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HBCFMJOB@GetUnitClassCreatedCount?$AA@
CONST	SEGMENT
??_C@_0BJ@HBCFMJOB@GetUnitClassCreatedCount?$AA@ DB 'GetUnitClassCreatedC'
	DB	'ount', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IJNNECCG@GetUnitCreatedCount?$AA@
CONST	SEGMENT
??_C@_0BE@IJNNECCG@GetUnitCreatedCount?$AA@ DB 'GetUnitCreatedCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BFBAHMJH@IsMPOption?$AA@
CONST	SEGMENT
??_C@_0L@BFBAHMJH@IsMPOption?$AA@ DB 'IsMPOption', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DLFAMNKA@SetOption?$AA@
CONST	SEGMENT
??_C@_09DLFAMNKA@SetOption?$AA@ DB 'SetOption', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CPAPEJN@IsOption?$AA@
CONST	SEGMENT
??_C@_08CPAPEJN@IsOption?$AA@ DB 'IsOption', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OGGGMIHD@GetTeamScore?$AA@
CONST	SEGMENT
??_C@_0N@OGGGMIHD@GetTeamScore?$AA@ DB 'GetTeamScore', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DFOHMFIM@GetTeamRank?$AA@
CONST	SEGMENT
??_C@_0M@DFOHMFIM@GetTeamRank?$AA@ DB 'GetTeamRank', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LPICKDEE@GetRankTeam?$AA@
CONST	SEGMENT
??_C@_0M@LPICKDEE@GetRankTeam?$AA@ DB 'GetRankTeam', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JELLOHIK@GetPlayerScore?$AA@
CONST	SEGMENT
??_C@_0P@JELLOHIK@GetPlayerScore?$AA@ DB 'GetPlayerScore', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OPKPLJEK@GetPlayerRank?$AA@
CONST	SEGMENT
??_C@_0O@OPKPLJEK@GetPlayerRank?$AA@ DB 'GetPlayerRank', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IEOEGAHN@GetRankPlayer?$AA@
CONST	SEGMENT
??_C@_0O@IEOEGAHN@GetRankPlayer?$AA@ DB 'GetRankPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DCMPODF@GetGameSpeedType?$AA@
CONST	SEGMENT
??_C@_0BB@DCMPODF@GetGameSpeedType?$AA@ DB 'GetGameSpeedType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JNBFHJON@GetStartEra?$AA@
CONST	SEGMENT
??_C@_0M@JNBFHJON@GetStartEra?$AA@ DB 'GetStartEra', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DHNLEMPD@GetCalendar?$AA@
CONST	SEGMENT
??_C@_0M@DHNLEMPD@GetCalendar?$AA@ DB 'GetCalendar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NDPGKNBO@GetHandicapType?$AA@
CONST	SEGMENT
??_C@_0BA@NDPGKNBO@GetHandicapType?$AA@ DB 'GetHandicapType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BJHOIPGP@ChangeNumVotesForTeam?$AA@
CONST	SEGMENT
??_C@_0BG@BJHOIPGP@ChangeNumVotesForTeam?$AA@ DB 'ChangeNumVotesForTeam', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DBPDHPP@SetNumVotesForTeam?$AA@
CONST	SEGMENT
??_C@_0BD@DBPDHPP@SetNumVotesForTeam?$AA@ DB 'SetNumVotesForTeam', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PJDFABBH@GetNumVotesForTeam?$AA@
CONST	SEGMENT
??_C@_0BD@PJDFABBH@GetNumVotesForTeam?$AA@ DB 'GetNumVotesForTeam', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EKIOIEIM@GetPreviousVoteCast?$AA@
CONST	SEGMENT
??_C@_0BE@EKIOIEIM@GetPreviousVoteCast?$AA@ DB 'GetPreviousVoteCast', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NHEAEAEJ@GetVoteCast?$AA@
CONST	SEGMENT
??_C@_0M@NHEAEAEJ@GetVoteCast?$AA@ DB 'GetVoteCast', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GCJFCPEL@GetNumVictoryVotesTallied?$AA@
CONST	SEGMENT
??_C@_0BK@GCJFCPEL@GetNumVictoryVotesTallied?$AA@ DB 'GetNumVictoryVotesT'
	DB	'allied', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EPNNJPDD@IsUnitedNationsActive?$AA@
CONST	SEGMENT
??_C@_0BG@EPNNJPDD@IsUnitedNationsActive?$AA@ DB 'IsUnitedNationsActive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FPFHEDKK@GetVotesNeededForDiploVictory?$AA@
CONST	SEGMENT
??_C@_0BO@FPFHEDKK@GetVotesNeededForDiploVictory?$AA@ DB 'GetVotesNeededF'
	DB	'orDiploVictory', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FBHPHEOD@SetGameState?$AA@
CONST	SEGMENT
??_C@_0N@FBHPHEOD@SetGameState?$AA@ DB 'SetGameState', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CFMBLIKP@GetGameState?$AA@
CONST	SEGMENT
??_C@_0N@CFMBLIKP@GetGameState?$AA@ DB 'GetGameState', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BHNPCDEL@SetWinner?$AA@
CONST	SEGMENT
??_C@_09BHNPCDEL@SetWinner?$AA@ DB 'SetWinner', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DEBCEOMK@GetVictory?$AA@
CONST	SEGMENT
??_C@_0L@DEBCEOMK@GetVictory?$AA@ DB 'GetVictory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DJJKACNJ@GetWinner?$AA@
CONST	SEGMENT
??_C@_09DJJKACNJ@GetWinner?$AA@ DB 'GetWinner', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EEBFJLEP@GetFaithCost?$AA@
CONST	SEGMENT
??_C@_0N@EEBFJLEP@GetFaithCost?$AA@ DB 'GetFaithCost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LAJKLGGH@GetBestLandUnitCombat?$AA@
CONST	SEGMENT
??_C@_0BG@LAJKLGGH@GetBestLandUnitCombat?$AA@ DB 'GetBestLandUnitCombat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PMKPPFOP@GetBestLandUnit?$AA@
CONST	SEGMENT
??_C@_0BA@PMKPPFOP@GetBestLandUnit?$AA@ DB 'GetBestLandUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08KOFADKJD@IsPaused?$AA@
CONST	SEGMENT
??_C@_08KOFADKJD@IsPaused?$AA@ DB 'IsPaused', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JEAMAMCA@SetPausePlayer?$AA@
CONST	SEGMENT
??_C@_0P@JEAMAMCA@SetPausePlayer?$AA@ DB 'SetPausePlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FKBCPGAM@GetPausePlayer?$AA@
CONST	SEGMENT
??_C@_0P@FKBCPGAM@GetPausePlayer?$AA@ DB 'GetPausePlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IKFAGGFF@SetActivePlayer?$AA@
CONST	SEGMENT
??_C@_0BA@IKFAGGFF@SetActivePlayer?$AA@ DB 'SetActivePlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LIEGBEEM@GetActivePlayer?$AA@
CONST	SEGMENT
??_C@_0BA@LIEGBEEM@GetActivePlayer?$AA@ DB 'GetActivePlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MMGHEDPG@IsFinalInitialized?$AA@
CONST	SEGMENT
??_C@_0BD@MMGHEDPG@IsFinalInitialized?$AA@ DB 'IsFinalInitialized', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FKPGBLMB@IsSimultaneousTeamTurns?$AA@
CONST	SEGMENT
??_C@_0BI@FKPGBLMB@IsSimultaneousTeamTurns?$AA@ DB 'IsSimultaneousTeamTur'
	DB	'ns', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09LOFNMOJA@IsPitboss?$AA@
CONST	SEGMENT
??_C@_09LOFNMOJA@IsPitboss?$AA@ DB 'IsPitboss', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06JMFIDCG@IsPbem?$AA@
CONST	SEGMENT
??_C@_06JMFIDCG@IsPbem?$AA@ DB 'IsPbem', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09NBMMEBLP@IsHotSeat?$AA@
CONST	SEGMENT
??_C@_09NBMMEBLP@IsHotSeat?$AA@ DB 'IsHotSeat', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NMFICBBG@SetPitbossTurnTime?$AA@
CONST	SEGMENT
??_C@_0BD@NMFICBBG@SetPitbossTurnTime?$AA@ DB 'SetPitbossTurnTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CGHCBHPO@GetPitbossTurnTime?$AA@
CONST	SEGMENT
??_C@_0BD@CGHCBHPO@GetPitbossTurnTime?$AA@ DB 'GetPitbossTurnTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DLKJEBCF@UpdateFOW?$AA@
CONST	SEGMENT
??_C@_09DLKJEBCF@UpdateFOW?$AA@ DB 'UpdateFOW', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KDGJNHAB@ToggleDebugMode?$AA@
CONST	SEGMENT
??_C@_0BA@KDGJNHAB@ToggleDebugMode?$AA@ DB 'ToggleDebugMode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JGHJFLIB@SetDebugMode?$AA@
CONST	SEGMENT
??_C@_0N@JGHJFLIB@SetDebugMode?$AA@ DB 'SetDebugMode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GCJIADCJ@IsDebugMode?$AA@
CONST	SEGMENT
??_C@_0M@GCJIADCJ@IsDebugMode?$AA@ DB 'IsDebugMode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MLPGFDEI@DoFromUIDiploEvent?$AA@
CONST	SEGMENT
??_C@_0BD@MLPGFDEI@DoFromUIDiploEvent?$AA@ DB 'DoFromUIDiploEvent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BEIFOFIP@MakeCircumnavigated?$AA@
CONST	SEGMENT
??_C@_0BE@BEIFOFIP@MakeCircumnavigated?$AA@ DB 'MakeCircumnavigated', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KLHLPAFG@IsCircumnavigated?$AA@
CONST	SEGMENT
??_C@_0BC@KLHLPAFG@IsCircumnavigated?$AA@ DB 'IsCircumnavigated', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ECMLDDFG@SetScoreDirty?$AA@
CONST	SEGMENT
??_C@_0O@ECMLDDFG@SetScoreDirty?$AA@ DB 'SetScoreDirty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JKDCPJNE@IsScoreDirty?$AA@
CONST	SEGMENT
??_C@_0N@JKDCPJNE@IsScoreDirty?$AA@ DB 'IsScoreDirty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GAAHECC@SetAIAutoPlay?$AA@
CONST	SEGMENT
??_C@_0O@GAAHECC@SetAIAutoPlay?$AA@ DB 'SetAIAutoPlay', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HJBOMHFF@GetAIAutoPlay?$AA@
CONST	SEGMENT
??_C@_0O@HJBOMHFF@GetAIAutoPlay?$AA@ DB 'GetAIAutoPlay', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FHKHHPIG@GetNumWorldWonders?$AA@
CONST	SEGMENT
??_C@_0BD@FHKHHPIG@GetNumWorldWonders?$AA@ DB 'GetNumWorldWonders', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HPOBKFL@GetInitWonders?$AA@
CONST	SEGMENT
??_C@_0P@HPOBKFL@GetInitWonders?$AA@ DB 'GetInitWonders', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BODMDKP@GetInitTech?$AA@
CONST	SEGMENT
??_C@_0M@BODMDKP@GetInitTech?$AA@ DB 'GetInitTech', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HKHMFEOE@GetInitLand?$AA@
CONST	SEGMENT
??_C@_0M@HKHMFEOE@GetInitLand?$AA@ DB 'GetInitLand', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CLMIMCAI@GetInitPopulation?$AA@
CONST	SEGMENT
??_C@_0BC@CLMIMCAI@GetInitPopulation?$AA@ DB 'GetInitPopulation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LCOKJLPM@GetMaxPopulation?$AA@
CONST	SEGMENT
??_C@_0BB@LCOKJLPM@GetMaxPopulation?$AA@ DB 'GetMaxPopulation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FHIOAEGC@ChangeNukesExploded?$AA@
CONST	SEGMENT
??_C@_0BE@FHIOAEGC@ChangeNukesExploded?$AA@ DB 'ChangeNukesExploded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FEHNKNGF@GetNukesExploded?$AA@
CONST	SEGMENT
??_C@_0BB@FEHNKNGF@GetNukesExploded?$AA@ DB 'GetNukesExploded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NCOJINPO@ChangeNoNukesCount?$AA@
CONST	SEGMENT
??_C@_0BD@NCOJINPO@ChangeNoNukesCount?$AA@ DB 'ChangeNoNukesCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09FEFEPPHP@IsNoNukes?$AA@
CONST	SEGMENT
??_C@_09FEFEPPHP@IsNoNukes?$AA@ DB 'IsNoNukes', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JHKCIGHM@GetNoNukesCount?$AA@
CONST	SEGMENT
??_C@_0BA@JHKCIGHM@GetNoNukesCount?$AA@ DB 'GetNoNukesCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BKBNEN@GetTotalPopulation?$AA@
CONST	SEGMENT
??_C@_0BD@BKBNEN@GetTotalPopulation?$AA@ DB 'GetTotalPopulation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JHGDDCJG@GetNumCivCities?$AA@
CONST	SEGMENT
??_C@_0BA@JHGDDCJG@GetNumCivCities?$AA@ DB 'GetNumCivCities', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OFLMPMAK@GetNumCities?$AA@
CONST	SEGMENT
??_C@_0N@OFLMPMAK@GetNumCities?$AA@ DB 'GetNumCities', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DAJJNKIG@CountNumHumanGameTurnActive?$AA@
CONST	SEGMENT
??_C@_0BM@DAJJNKIG@CountNumHumanGameTurnActive?$AA@ DB 'CountNumHumanGame'
	DB	'TurnActive', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KBMHIGNM@GetNumGameTurnActive?$AA@
CONST	SEGMENT
??_C@_0BF@KBMHIGNM@GetNumGameTurnActive?$AA@ DB 'GetNumGameTurnActive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MGEJFFOD@GetAllowRClickMovementWhileScrol@
CONST	SEGMENT
??_C@_0CF@MGEJFFOD@GetAllowRClickMovementWhileScrol@ DB 'GetAllowRClickMo'
	DB	'vementWhileScrolling', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FEHAIGNH@SetAdvisorCityAttackInterrupt?$AA@
CONST	SEGMENT
??_C@_0BO@FEHAIGNH@SetAdvisorCityAttackInterrupt?$AA@ DB 'SetAdvisorCityA'
	DB	'ttackInterrupt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MMOJNIHE@SetAdvisorBadAttackInterrupt?$AA@
CONST	SEGMENT
??_C@_0BN@MMOJNIHE@SetAdvisorBadAttackInterrupt?$AA@ DB 'SetAdvisorBadAtt'
	DB	'ackInterrupt', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DKEPDDOF@SetAdvisorMessageHasBeenSeen?$AA@
CONST	SEGMENT
??_C@_0BN@DKEPDDOF@SetAdvisorMessageHasBeenSeen?$AA@ DB 'SetAdvisorMessag'
	DB	'eHasBeenSeen', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BMGPOKLD@HasAdvisorMessageBeenSeen?$AA@
CONST	SEGMENT
??_C@_0BK@BMGPOKLD@HasAdvisorMessageBeenSeen?$AA@ DB 'HasAdvisorMessageBe'
	DB	'enSeen', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ELIDKPCD@GetTutorialLevel?$AA@
CONST	SEGMENT
??_C@_0BB@ELIDKPCD@GetTutorialLevel?$AA@ DB 'GetTutorialLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CCNGCBKP@IsTutorialDebugging?$AA@
CONST	SEGMENT
??_C@_0BE@CCNGCBKP@IsTutorialDebugging?$AA@ DB 'IsTutorialDebugging', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GKNJGIMD@IsTutorialLogging?$AA@
CONST	SEGMENT
??_C@_0BC@GKNJGIMD@IsTutorialLogging?$AA@ DB 'IsTutorialLogging', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GPLHPDBL@SetEverRightClickMoved?$AA@
CONST	SEGMENT
??_C@_0BH@GPLHPDBL@SetEverRightClickMoved?$AA@ DB 'SetEverRightClickMoved'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MDPJGBGF@IsEverRightClickMoved?$AA@
CONST	SEGMENT
??_C@_0BG@MDPJGBGF@IsEverRightClickMoved?$AA@ DB 'IsEverRightClickMoved', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CMIENKPA@SetStaticTutorialActive?$AA@
CONST	SEGMENT
??_C@_0BI@CMIENKPA@SetStaticTutorialActive?$AA@ DB 'SetStaticTutorialActi'
	DB	've', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JLJFMIFJ@IsStaticTutorialActive?$AA@
CONST	SEGMENT
??_C@_0BH@JLJFMIFJ@IsStaticTutorialActive?$AA@ DB 'IsStaticTutorialActive'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FJHMPNOM@SetTargetScore?$AA@
CONST	SEGMENT
??_C@_0P@FJHMPNOM@SetTargetScore?$AA@ DB 'SetTargetScore', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JHGCAHMA@GetTargetScore?$AA@
CONST	SEGMENT
??_C@_0P@JHGCAHMA@GetTargetScore?$AA@ DB 'GetTargetScore', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NPENKJHH@GetMinutesPlayed?$AA@
CONST	SEGMENT
??_C@_0BB@NPENKJHH@GetMinutesPlayed?$AA@ DB 'GetMinutesPlayed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DDKFKHBN@GetTurnSlice?$AA@
CONST	SEGMENT
??_C@_0N@DDKFKHBN@GetTurnSlice?$AA@ DB 'GetTurnSlice', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CPNMOABJ@SetEstimateEndTurn?$AA@
CONST	SEGMENT
??_C@_0BD@CPNMOABJ@SetEstimateEndTurn?$AA@ DB 'SetEstimateEndTurn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NFPGNGPB@GetEstimateEndTurn?$AA@
CONST	SEGMENT
??_C@_0BD@NFPGNGPB@GetEstimateEndTurn?$AA@ DB 'GetEstimateEndTurn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NPEPEJCB@SetStartYear?$AA@
CONST	SEGMENT
??_C@_0N@NPEPEJCB@SetStartYear?$AA@ DB 'SetStartYear', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KLPBIFGN@GetStartYear?$AA@
CONST	SEGMENT
??_C@_0N@KLPBIFGN@GetStartYear?$AA@ DB 'GetStartYear', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PLFHKJK@GetWinningTurn?$AA@
CONST	SEGMENT
??_C@_0P@PLFHKJK@GetWinningTurn?$AA@ DB 'GetWinningTurn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PLGPFGDH@GetStartTurn?$AA@
CONST	SEGMENT
??_C@_0N@PLGPFGDH@GetStartTurn?$AA@ DB 'GetStartTurn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LGNKJMMD@SetNumAdvancedStartPoints?$AA@
CONST	SEGMENT
??_C@_0BK@LGNKJMMD@SetNumAdvancedStartPoints?$AA@ DB 'SetNumAdvancedStart'
	DB	'Points', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DGBMFBGF@GetNumAdvancedStartPoints?$AA@
CONST	SEGMENT
??_C@_0BK@DGBMFBGF@GetNumAdvancedStartPoints?$AA@ DB 'GetNumAdvancedStart'
	DB	'Points', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DIKIOFHK@SetMaxCityElimination?$AA@
CONST	SEGMENT
??_C@_0BG@DIKIOFHK@SetMaxCityElimination?$AA@ DB 'SetMaxCityElimination', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MNPODMDL@GetMaxCityElimination?$AA@
CONST	SEGMENT
??_C@_0BG@MNPODMDL@GetMaxCityElimination?$AA@ DB 'GetMaxCityElimination', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NNFCNHCO@ChangeMaxTurns?$AA@
CONST	SEGMENT
??_C@_0P@NNFCNHCO@ChangeMaxTurns?$AA@ DB 'ChangeMaxTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NMLFPFJL@SetMaxTurns?$AA@
CONST	SEGMENT
??_C@_0M@NMLFPFJL@SetMaxTurns?$AA@ DB 'SetMaxTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NDKLCDBI@GetMaxTurns?$AA@
CONST	SEGMENT
??_C@_0M@NDKLCDBI@GetMaxTurns?$AA@ DB 'GetMaxTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EGONPMOO@GetElapsedGameTurns?$AA@
CONST	SEGMENT
??_C@_0BE@EGONPMOO@GetElapsedGameTurns?$AA@ DB 'GetElapsedGameTurns', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NCNEBNPO@GetTurnString?$AA@
CONST	SEGMENT
??_C@_0O@NCNEBNPO@GetTurnString?$AA@ DB 'GetTurnString', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HCNOOOMC@GetGameTurnYear?$AA@
CONST	SEGMENT
??_C@_0BA@HCNOOOMC@GetGameTurnYear?$AA@ DB 'GetGameTurnYear', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PBBAEIDJ@GetTurnYear?$AA@
CONST	SEGMENT
??_C@_0M@PBBAEIDJ@GetTurnYear?$AA@ DB 'GetTurnYear', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DIHNBAGB@SetGameTurn?$AA@
CONST	SEGMENT
??_C@_0M@DIHNBAGB@SetGameTurn?$AA@ DB 'SetGameTurn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DHGDMGOC@GetGameTurn?$AA@
CONST	SEGMENT
??_C@_0M@DHGDMGOC@GetGameTurn?$AA@ DB 'GetGameTurn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MNBIDJED@GetNumSequentialHumans?$AA@
CONST	SEGMENT
??_C@_0BH@MNBIDJED@GetNumSequentialHumans?$AA@ DB 'GetNumSequentialHumans'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CNCKMKLF@GetNumHumanPlayers?$AA@
CONST	SEGMENT
??_C@_0BD@CNCKMKLF@GetNumHumanPlayers?$AA@ DB 'GetNumHumanPlayers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PNKFDCJD@ReviveActivePlayer?$AA@
CONST	SEGMENT
??_C@_0BD@PNKFDCJD@ReviveActivePlayer?$AA@ DB 'ReviveActivePlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DLNBGBDM@IsTeamGame?$AA@
CONST	SEGMENT
??_C@_0L@DLNBGBDM@IsTeamGame?$AA@ DB 'IsTeamGame', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NIOHMLKJ@IsGameMultiPlayer?$AA@
CONST	SEGMENT
??_C@_0BC@NIOHMLKJ@IsGameMultiPlayer?$AA@ DB 'IsGameMultiPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LOKJIOPH@IsNetworkMultiPlayer?$AA@
CONST	SEGMENT
??_C@_0BF@LOKJIOPH@IsNetworkMultiPlayer?$AA@ DB 'IsNetworkMultiPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GMACKBML@GetActiveCivilizationType?$AA@
CONST	SEGMENT
??_C@_0BK@GMACKBML@GetActiveCivilizationType?$AA@ DB 'GetActiveCivilizati'
	DB	'onType', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@POPBPJOF@GetActiveTeam?$AA@
CONST	SEGMENT
??_C@_0O@POPBPJOF@GetActiveTeam?$AA@ DB 'GetActiveTeam', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JHEMKDBG@GetDiploResponse?$AA@
CONST	SEGMENT
??_C@_0BB@JHEMKDBG@GetDiploResponse?$AA@ DB 'GetDiploResponse', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DBDBEBPD@GetCurrentEra?$AA@
CONST	SEGMENT
??_C@_0O@DBDBEBPD@GetCurrentEra?$AA@ DB 'GetCurrentEra', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MGDNFNEM@CanTrainNukes?$AA@
CONST	SEGMENT
??_C@_0O@MGDNFNEM@CanTrainNukes?$AA@ DB 'CanTrainNukes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JPFKJMOO@GetImprovementUpgradeTime?$AA@
CONST	SEGMENT
??_C@_0BK@JPFKJMOO@GetImprovementUpgradeTime?$AA@ DB 'GetImprovementUpgra'
	DB	'deTime', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MNNHAEKH@VictoryDelay?$AA@
CONST	SEGMENT
??_C@_0N@MNNHAEKH@VictoryDelay?$AA@ DB 'VictoryDelay', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HIIILMMM@GoldenAgeLength?$AA@
CONST	SEGMENT
??_C@_0BA@HIIILMMM@GoldenAgeLength?$AA@ DB 'GoldenAgeLength', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BBKLDJHC@CountKnownTechNumTeams?$AA@
CONST	SEGMENT
??_C@_0BH@BBKLDJHC@CountKnownTechNumTeams?$AA@ DB 'CountKnownTechNumTeams'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BOHJMEIP@CountTotalNukeUnits?$AA@
CONST	SEGMENT
??_C@_0BE@BOHJMEIP@CountTotalNukeUnits?$AA@ DB 'CountTotalNukeUnits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KABPIJOH@CountTotalCivPower?$AA@
CONST	SEGMENT
??_C@_0BD@KABPIJOH@CountTotalCivPower?$AA@ DB 'CountTotalCivPower', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NHFNEPCG@CountHumanPlayersEverAlive?$AA@
CONST	SEGMENT
??_C@_0BL@NHFNEPCG@CountHumanPlayersEverAlive?$AA@ DB 'CountHumanPlayersE'
	DB	'verAlive', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NPAKNGLN@CountHumanPlayersAlive?$AA@
CONST	SEGMENT
??_C@_0BH@NPAKNGLN@CountHumanPlayersAlive?$AA@ DB 'CountHumanPlayersAlive'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CMCLEPCA@CountCivTeamsEverAlive?$AA@
CONST	SEGMENT
??_C@_0BH@CMCLEPCA@CountCivTeamsEverAlive?$AA@ DB 'CountCivTeamsEverAlive'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BEOMALBI@CountCivTeamsAlive?$AA@
CONST	SEGMENT
??_C@_0BD@BEOMALBI@CountCivTeamsAlive?$AA@ DB 'CountCivTeamsAlive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DMGNCBAD@CountCivPlayersEverAlive?$AA@
CONST	SEGMENT
??_C@_0BJ@DMGNCBAD@CountCivPlayersEverAlive?$AA@ DB 'CountCivPlayersEverA'
	DB	'live', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OABNJLCK@CountCivPlayersAlive?$AA@
CONST	SEGMENT
??_C@_0BF@OABNJLCK@CountCivPlayersAlive?$AA@ DB 'CountCivPlayersAlive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PGALOIOI@SetUnitedNationsCountdown?$AA@
CONST	SEGMENT
??_C@_0BK@PGALOIOI@SetUnitedNationsCountdown?$AA@ DB 'SetUnitedNationsCou'
	DB	'ntdown', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HGMNCFEO@GetUnitedNationsCountdown?$AA@
CONST	SEGMENT
??_C@_0BK@HGMNCFEO@GetUnitedNationsCountdown?$AA@ DB 'GetUnitedNationsCou'
	DB	'ntdown', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LNHFJDEB@GetAdjustedLandPercent?$AA@
CONST	SEGMENT
??_C@_0BH@LNHFJDEB@GetAdjustedLandPercent?$AA@ DB 'GetAdjustedLandPercent'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@OJIFMJAA@GetAdjustedPopulationPercent?$AA@
CONST	SEGMENT
??_C@_0BN@OJIFMJAA@GetAdjustedPopulationPercent?$AA@ DB 'GetAdjustedPopul'
	DB	'ationPercent', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MPAMACHM@GetProductionPerPopulation?$AA@
CONST	SEGMENT
??_C@_0BL@MPAMACHM@GetProductionPerPopulation?$AA@ DB 'GetProductionPerPo'
	DB	'pulation', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OAIJGNPH@CityPurchaseProject?$AA@
CONST	SEGMENT
??_C@_0BE@OAIJGNPH@CityPurchaseProject?$AA@ DB 'CityPurchaseProject', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HHJDEJAJ@CityPurchaseBuilding?$AA@
CONST	SEGMENT
??_C@_0BF@HHJDEJAJ@CityPurchaseBuilding?$AA@ DB 'CityPurchaseBuilding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GEAOIOGF@CityPurchaseUnit?$AA@
CONST	SEGMENT
??_C@_0BB@GEAOIOGF@CityPurchaseUnit?$AA@ DB 'CityPurchaseUnit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DLDCLPIH@CityPushOrder?$AA@
CONST	SEGMENT
??_C@_0O@DLDCLPIH@CityPushOrder?$AA@ DB 'CityPushOrder', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DKKBBHKF@SelectedCitiesGameNetMessage?$AA@
CONST	SEGMENT
??_C@_0BN@DKKBBHKF@SelectedCitiesGameNetMessage?$AA@ DB 'SelectedCitiesGa'
	DB	'meNetMessage', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KPINNGKD@SelectionListGameNetMessage?$AA@
CONST	SEGMENT
??_C@_0BM@KPINNGKD@SelectionListGameNetMessage?$AA@ DB 'SelectionListGame'
	DB	'NetMessage', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IMDEFNAG@SelectionListMove?$AA@
CONST	SEGMENT
??_C@_0BC@IMDEFNAG@SelectionListMove?$AA@ DB 'SelectionListMove', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HBFLLMPF@CyclePlotUnits?$AA@
CONST	SEGMENT
??_C@_0P@HBFLLMPF@CyclePlotUnits?$AA@ DB 'CyclePlotUnits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IBCPPGCA@CycleUnits?$AA@
CONST	SEGMENT
??_C@_0L@IBCPPGCA@CycleUnits?$AA@ DB 'CycleUnits', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EFOLPPE@CycleCities?$AA@
CONST	SEGMENT
??_C@_0M@EFOLPPE@CycleCities?$AA@ DB 'CycleCities', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MEGCDIPH@UpdateScore?$AA@
CONST	SEGMENT
??_C@_0M@MEGCDIPH@UpdateScore?$AA@ DB 'UpdateScore', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MCJFCJAM@HandleAction?$AA@
CONST	SEGMENT
??_C@_0N@MCJFCJAM@HandleAction?$AA@ DB 'HandleAction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JKGPCCHB@CanHandleAction?$AA@
CONST	SEGMENT
??_C@_0BA@JKGPCCHB@CanHandleAction?$AA@ DB 'CanHandleAction', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?RegisterMembers@CvLuaGame@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?RegisterMembers@CvLuaGame@@SAXPAUlua_State@@@Z PROC	; CvLuaGame::RegisterMembers, COMDAT

; 48   : {

	push	ebp
	mov	ebp, esp

; 49   : 	Method(CanHandleAction);

	push	OFFSET ??_C@_0BA@JKGPCCHB@CanHandleAction?$AA@
	push	OFFSET ?lCanHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCanHandleAction
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 50   : 	Method(HandleAction);

	push	OFFSET ??_C@_0N@MCJFCJAM@HandleAction?$AA@
	push	OFFSET ?lHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lHandleAction
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 51   : 	Method(UpdateScore);

	push	OFFSET ??_C@_0M@MEGCDIPH@UpdateScore?$AA@
	push	OFFSET ?lUpdateScore@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lUpdateScore
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 52   : 	Method(CycleCities);

	push	OFFSET ??_C@_0M@EFOLPPE@CycleCities?$AA@
	push	OFFSET ?lCycleCities@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCycleCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 53   : 	Method(CycleUnits);

	push	OFFSET ??_C@_0L@IBCPPGCA@CycleUnits?$AA@
	push	OFFSET ?lCycleUnits@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCycleUnits
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 54   : 	Method(CyclePlotUnits);

	push	OFFSET ??_C@_0P@HBFLLMPF@CyclePlotUnits?$AA@
	push	OFFSET ?lCyclePlotUnits@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCyclePlotUnits
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 55   : 
; 56   : 	Method(SelectionListMove);

	push	OFFSET ??_C@_0BC@IMDEFNAG@SelectionListMove?$AA@
	push	OFFSET ?lSelectionListMove@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectionListMove
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 57   : 	Method(SelectionListGameNetMessage);

	push	OFFSET ??_C@_0BM@KPINNGKD@SelectionListGameNetMessage?$AA@
	push	OFFSET ?lSelectionListGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectionListGameNetMessage
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 58   : 	Method(SelectedCitiesGameNetMessage);

	push	OFFSET ??_C@_0BN@DKKBBHKF@SelectedCitiesGameNetMessage?$AA@
	push	OFFSET ?lSelectedCitiesGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectedCitiesGameNetMessage
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 59   : 	Method(CityPushOrder);

	push	OFFSET ??_C@_0O@DLDCLPIH@CityPushOrder?$AA@
	push	OFFSET ?lCityPushOrder@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCityPushOrder
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 60   : 	Method(CityPurchaseUnit);

	push	OFFSET ??_C@_0BB@GEAOIOGF@CityPurchaseUnit?$AA@
	push	OFFSET ?lCityPurchaseUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCityPurchaseUnit
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 61   : 	Method(CityPurchaseBuilding);

	push	OFFSET ??_C@_0BF@HHJDEJAJ@CityPurchaseBuilding?$AA@
	push	OFFSET ?lCityPurchaseBuilding@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCityPurchaseBuilding
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 62   : 	Method(CityPurchaseProject);

	push	OFFSET ??_C@_0BE@OAIJGNPH@CityPurchaseProject?$AA@
	push	OFFSET ?lCityPurchaseProject@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCityPurchaseProject
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 63   : 
; 64   : 	Method(GetProductionPerPopulation);

	push	OFFSET ??_C@_0BL@MPAMACHM@GetProductionPerPopulation?$AA@
	push	OFFSET ?lGetProductionPerPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetProductionPerPopulation
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 65   : 
; 66   : 	Method(GetAdjustedPopulationPercent);

	push	OFFSET ??_C@_0BN@OJIFMJAA@GetAdjustedPopulationPercent?$AA@
	push	OFFSET ?lGetAdjustedPopulationPercent@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAdjustedPopulationPercent
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 67   : 	Method(GetAdjustedLandPercent);

	push	OFFSET ??_C@_0BH@LNHFJDEB@GetAdjustedLandPercent?$AA@
	push	OFFSET ?lGetAdjustedLandPercent@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAdjustedLandPercent
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 68   : 
; 69   : 	Method(GetUnitedNationsCountdown);

	push	OFFSET ??_C@_0BK@HGMNCFEO@GetUnitedNationsCountdown?$AA@
	push	OFFSET ?lGetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetUnitedNationsCountdown
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 70   : 	Method(SetUnitedNationsCountdown);

	push	OFFSET ??_C@_0BK@PGALOIOI@SetUnitedNationsCountdown?$AA@
	push	OFFSET ?lSetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetUnitedNationsCountdown
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 71   : 
; 72   : 	Method(CountCivPlayersAlive);

	push	OFFSET ??_C@_0BF@OABNJLCK@CountCivPlayersAlive?$AA@
	push	OFFSET ?lCountCivPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountCivPlayersAlive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 73   : 	Method(CountCivPlayersEverAlive);

	push	OFFSET ??_C@_0BJ@DMGNCBAD@CountCivPlayersEverAlive?$AA@
	push	OFFSET ?lCountCivPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountCivPlayersEverAlive
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 74   : 	Method(CountCivTeamsAlive);

	push	OFFSET ??_C@_0BD@BEOMALBI@CountCivTeamsAlive?$AA@
	push	OFFSET ?lCountCivTeamsAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountCivTeamsAlive
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 75   : 	Method(CountCivTeamsEverAlive);

	push	OFFSET ??_C@_0BH@CMCLEPCA@CountCivTeamsEverAlive?$AA@
	push	OFFSET ?lCountCivTeamsEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountCivTeamsEverAlive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 76   : 	Method(CountHumanPlayersAlive);

	push	OFFSET ??_C@_0BH@NPAKNGLN@CountHumanPlayersAlive?$AA@
	push	OFFSET ?lCountHumanPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountHumanPlayersAlive
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 77   : 	Method(CountHumanPlayersEverAlive);

	push	OFFSET ??_C@_0BL@NHFNEPCG@CountHumanPlayersEverAlive?$AA@
	push	OFFSET ?lCountHumanPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountHumanPlayersEverAlive
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 78   : 
; 79   : 	Method(CountTotalCivPower);

	push	OFFSET ??_C@_0BD@KABPIJOH@CountTotalCivPower?$AA@
	push	OFFSET ?lCountTotalCivPower@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountTotalCivPower
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 80   : 	Method(CountTotalNukeUnits);

	push	OFFSET ??_C@_0BE@BOHJMEIP@CountTotalNukeUnits?$AA@
	push	OFFSET ?lCountTotalNukeUnits@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountTotalNukeUnits
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 81   : 	Method(CountKnownTechNumTeams);

	push	OFFSET ??_C@_0BH@BBKLDJHC@CountKnownTechNumTeams?$AA@
	push	OFFSET ?lCountKnownTechNumTeams@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountKnownTechNumTeams
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 82   : 
; 83   : 	Method(GoldenAgeLength);

	push	OFFSET ??_C@_0BA@HIIILMMM@GoldenAgeLength?$AA@
	push	OFFSET ?lGoldenAgeLength@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGoldenAgeLength
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 84   : 	Method(VictoryDelay);

	push	OFFSET ??_C@_0N@MNNHAEKH@VictoryDelay?$AA@
	push	OFFSET ?lVictoryDelay@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lVictoryDelay
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 85   : 	Method(GetImprovementUpgradeTime);

	push	OFFSET ??_C@_0BK@JPFKJMOO@GetImprovementUpgradeTime?$AA@
	push	OFFSET ?lGetImprovementUpgradeTime@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetImprovementUpgradeTime
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 86   : 	Method(CanTrainNukes);

	push	OFFSET ??_C@_0O@MGDNFNEM@CanTrainNukes?$AA@
	push	OFFSET ?lCanTrainNukes@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCanTrainNukes
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 87   : 
; 88   : 	Method(GetCurrentEra);

	push	OFFSET ??_C@_0O@DBDBEBPD@GetCurrentEra?$AA@
	push	OFFSET ?lGetCurrentEra@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetCurrentEra
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 89   : 
; 90   : 	Method(GetDiploResponse);

	push	OFFSET ??_C@_0BB@JHEMKDBG@GetDiploResponse?$AA@
	push	OFFSET ?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetDiploResponse
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 91   : 
; 92   : 	Method(GetActiveTeam);

	push	OFFSET ??_C@_0O@POPBPJOF@GetActiveTeam?$AA@
	push	OFFSET ?lGetActiveTeam@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetActiveTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 93   : 	Method(GetActiveCivilizationType);

	push	OFFSET ??_C@_0BK@GMACKBML@GetActiveCivilizationType?$AA@
	push	OFFSET ?lGetActiveCivilizationType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetActiveCivilizationType
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 94   : 	Method(IsNetworkMultiPlayer);

	push	OFFSET ??_C@_0BF@LOKJIOPH@IsNetworkMultiPlayer?$AA@
	push	OFFSET ?lIsNetworkMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsNetworkMultiPlayer
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 95   : 	Method(IsGameMultiPlayer);

	push	OFFSET ??_C@_0BC@NIOHMLKJ@IsGameMultiPlayer?$AA@
	push	OFFSET ?lIsGameMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsGameMultiPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 96   : 	Method(IsTeamGame);

	push	OFFSET ??_C@_0L@DLNBGBDM@IsTeamGame?$AA@
	push	OFFSET ?lIsTeamGame@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsTeamGame
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 97   : 
; 98   : 	Method(ReviveActivePlayer);

	push	OFFSET ??_C@_0BD@PNKFDCJD@ReviveActivePlayer?$AA@
	push	OFFSET ?lReviveActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lReviveActivePlayer
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 99   : 
; 100  : 	Method(GetNumHumanPlayers);

	push	OFFSET ??_C@_0BD@CNCKMKLF@GetNumHumanPlayers?$AA@
	push	OFFSET ?lGetNumHumanPlayers@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumHumanPlayers
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 101  : 	Method(GetNumSequentialHumans);

	push	OFFSET ??_C@_0BH@MNBIDJED@GetNumSequentialHumans?$AA@
	push	OFFSET ?lGetNumSequentialHumans@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumSequentialHumans
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 102  : 	Method(GetGameTurn);

	push	OFFSET ??_C@_0M@DHGDMGOC@GetGameTurn?$AA@
	push	OFFSET ?lGetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGameTurn
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 103  : 	Method(SetGameTurn);

	push	OFFSET ??_C@_0M@DIHNBAGB@SetGameTurn?$AA@
	push	OFFSET ?lSetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetGameTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 104  : 	Method(GetTurnYear);

	push	OFFSET ??_C@_0M@PBBAEIDJ@GetTurnYear?$AA@
	push	OFFSET ?lGetTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTurnYear
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 105  : 	Method(GetGameTurnYear);

	push	OFFSET ??_C@_0BA@HCNOOOMC@GetGameTurnYear?$AA@
	push	OFFSET ?lGetGameTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGameTurnYear
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 106  : 	Method(GetTurnString);

	push	OFFSET ??_C@_0O@NCNEBNPO@GetTurnString?$AA@
	push	OFFSET ?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTurnString
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 107  : 
; 108  : 	Method(GetElapsedGameTurns);

	push	OFFSET ??_C@_0BE@EGONPMOO@GetElapsedGameTurns?$AA@
	push	OFFSET ?lGetElapsedGameTurns@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetElapsedGameTurns
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 109  : 	Method(GetMaxTurns);

	push	OFFSET ??_C@_0M@NDKLCDBI@GetMaxTurns?$AA@
	push	OFFSET ?lGetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMaxTurns
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 110  : 	Method(SetMaxTurns);

	push	OFFSET ??_C@_0M@NMLFPFJL@SetMaxTurns?$AA@
	push	OFFSET ?lSetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetMaxTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 111  : 	Method(ChangeMaxTurns);

	push	OFFSET ??_C@_0P@NNFCNHCO@ChangeMaxTurns?$AA@
	push	OFFSET ?lChangeMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangeMaxTurns
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 112  : 	Method(GetMaxCityElimination);

	push	OFFSET ??_C@_0BG@MNPODMDL@GetMaxCityElimination?$AA@
	push	OFFSET ?lGetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMaxCityElimination
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 113  : 	Method(SetMaxCityElimination);

	push	OFFSET ??_C@_0BG@DIKIOFHK@SetMaxCityElimination?$AA@
	push	OFFSET ?lSetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetMaxCityElimination
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 114  : 	Method(GetNumAdvancedStartPoints);

	push	OFFSET ??_C@_0BK@DGBMFBGF@GetNumAdvancedStartPoints?$AA@
	push	OFFSET ?lGetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumAdvancedStartPoints
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 115  : 	Method(SetNumAdvancedStartPoints);

	push	OFFSET ??_C@_0BK@LGNKJMMD@SetNumAdvancedStartPoints?$AA@
	push	OFFSET ?lSetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetNumAdvancedStartPoints
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 116  : 	Method(GetStartTurn);

	push	OFFSET ??_C@_0N@PLGPFGDH@GetStartTurn?$AA@
	push	OFFSET ?lGetStartTurn@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetStartTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 117  : 	Method(GetWinningTurn);

	push	OFFSET ??_C@_0P@PLFHKJK@GetWinningTurn?$AA@
	push	OFFSET ?lGetWinningTurn@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetWinningTurn
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 118  : 	Method(GetStartYear);

	push	OFFSET ??_C@_0N@KLPBIFGN@GetStartYear?$AA@
	push	OFFSET ?lGetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetStartYear
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 119  : 	Method(SetStartYear);

	push	OFFSET ??_C@_0N@NPEPEJCB@SetStartYear?$AA@
	push	OFFSET ?lSetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetStartYear
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 120  : 	Method(GetEstimateEndTurn);

	push	OFFSET ??_C@_0BD@NFPGNGPB@GetEstimateEndTurn?$AA@
	push	OFFSET ?lGetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetEstimateEndTurn
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 121  : 	Method(SetEstimateEndTurn);

	push	OFFSET ??_C@_0BD@CPNMOABJ@SetEstimateEndTurn?$AA@
	push	OFFSET ?lSetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetEstimateEndTurn
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 122  : 	Method(GetTurnSlice);

	push	OFFSET ??_C@_0N@DDKFKHBN@GetTurnSlice?$AA@
	push	OFFSET ?lGetTurnSlice@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTurnSlice
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 123  : 	Method(GetMinutesPlayed);

	push	OFFSET ??_C@_0BB@NPENKJHH@GetMinutesPlayed?$AA@
	push	OFFSET ?lGetMinutesPlayed@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMinutesPlayed
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 124  : 	Method(GetTargetScore);

	push	OFFSET ??_C@_0P@JHGCAHMA@GetTargetScore?$AA@
	push	OFFSET ?lGetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTargetScore
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 125  : 	Method(SetTargetScore);

	push	OFFSET ??_C@_0P@FJHMPNOM@SetTargetScore?$AA@
	push	OFFSET ?lSetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetTargetScore
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 126  : 
; 127  : 	Method(IsStaticTutorialActive);

	push	OFFSET ??_C@_0BH@JLJFMIFJ@IsStaticTutorialActive?$AA@
	push	OFFSET ?lIsStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsStaticTutorialActive
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 128  : 	Method(SetStaticTutorialActive);

	push	OFFSET ??_C@_0BI@CMIENKPA@SetStaticTutorialActive?$AA@
	push	OFFSET ?lSetStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetStaticTutorialActive
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 129  : 	Method(IsEverRightClickMoved);

	push	OFFSET ??_C@_0BG@MDPJGBGF@IsEverRightClickMoved?$AA@
	push	OFFSET ?lIsEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsEverRightClickMoved
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 130  : 	Method(SetEverRightClickMoved);

	push	OFFSET ??_C@_0BH@GPLHPDBL@SetEverRightClickMoved?$AA@
	push	OFFSET ?lSetEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetEverRightClickMoved
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 131  : 
; 132  : 	Method(IsTutorialLogging);

	push	OFFSET ??_C@_0BC@GKNJGIMD@IsTutorialLogging?$AA@
	push	OFFSET ?lIsTutorialLogging@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsTutorialLogging
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 133  : 	Method(IsTutorialDebugging);

	push	OFFSET ??_C@_0BE@CCNGCBKP@IsTutorialDebugging?$AA@
	push	OFFSET ?lIsTutorialDebugging@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsTutorialDebugging
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 134  : 	Method(GetTutorialLevel);

	push	OFFSET ??_C@_0BB@ELIDKPCD@GetTutorialLevel?$AA@
	push	OFFSET ?lGetTutorialLevel@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTutorialLevel
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 135  : 
; 136  : 	Method(HasAdvisorMessageBeenSeen);

	push	OFFSET ??_C@_0BK@BMGPOKLD@HasAdvisorMessageBeenSeen?$AA@
	push	OFFSET ?lHasAdvisorMessageBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lHasAdvisorMessageBeenSeen
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 137  : 	Method(SetAdvisorMessageHasBeenSeen);

	push	OFFSET ??_C@_0BN@DKEPDDOF@SetAdvisorMessageHasBeenSeen?$AA@
	push	OFFSET ?lSetAdvisorMessageHasBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorMessageHasBeenSeen
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 138  : 
; 139  : 	Method(SetAdvisorBadAttackInterrupt);

	push	OFFSET ??_C@_0BN@MMOJNIHE@SetAdvisorBadAttackInterrupt?$AA@
	push	OFFSET ?lSetAdvisorBadAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorBadAttackInterrupt
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 140  : 	Method(SetAdvisorCityAttackInterrupt);

	push	OFFSET ??_C@_0BO@FEHAIGNH@SetAdvisorCityAttackInterrupt?$AA@
	push	OFFSET ?lSetAdvisorCityAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorCityAttackInterrupt
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 141  : 
; 142  : 	Method(GetAllowRClickMovementWhileScrolling);

	push	OFFSET ??_C@_0CF@MGEJFFOD@GetAllowRClickMovementWhileScrol@
	push	OFFSET ?lGetAllowRClickMovementWhileScrolling@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAllowRClickMovementWhileScrolling
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 143  : 
; 144  : 	Method(GetNumGameTurnActive);

	push	OFFSET ??_C@_0BF@KBMHIGNM@GetNumGameTurnActive?$AA@
	push	OFFSET ?lGetNumGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumGameTurnActive
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 145  : 	Method(CountNumHumanGameTurnActive);

	push	OFFSET ??_C@_0BM@DAJJNKIG@CountNumHumanGameTurnActive?$AA@
	push	OFFSET ?lCountNumHumanGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCountNumHumanGameTurnActive
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 146  : 	Method(GetNumCities);

	push	OFFSET ??_C@_0N@OFLMPMAK@GetNumCities?$AA@
	push	OFFSET ?lGetNumCities@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 147  : 	Method(GetNumCivCities);

	push	OFFSET ??_C@_0BA@JHGDDCJG@GetNumCivCities?$AA@
	push	OFFSET ?lGetNumCivCities@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCivCities
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 148  : 	Method(GetTotalPopulation);

	push	OFFSET ??_C@_0BD@BKBNEN@GetTotalPopulation?$AA@
	push	OFFSET ?lGetTotalPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTotalPopulation
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 149  : 
; 150  : 	Method(GetNoNukesCount);

	push	OFFSET ??_C@_0BA@JHKCIGHM@GetNoNukesCount?$AA@
	push	OFFSET ?lGetNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNoNukesCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 151  : 	Method(IsNoNukes);

	push	OFFSET ??_C@_09FEFEPPHP@IsNoNukes?$AA@
	push	OFFSET ?lIsNoNukes@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsNoNukes
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 152  : 	Method(ChangeNoNukesCount);

	push	OFFSET ??_C@_0BD@NCOJINPO@ChangeNoNukesCount?$AA@
	push	OFFSET ?lChangeNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangeNoNukesCount
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 153  : 	Method(GetNukesExploded);

	push	OFFSET ??_C@_0BB@FEHNKNGF@GetNukesExploded?$AA@
	push	OFFSET ?lGetNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNukesExploded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 154  : 	Method(ChangeNukesExploded);

	push	OFFSET ??_C@_0BE@FHIOAEGC@ChangeNukesExploded?$AA@
	push	OFFSET ?lChangeNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangeNukesExploded
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 155  : 
; 156  : 	Method(GetMaxPopulation);

	push	OFFSET ??_C@_0BB@LCOKJLPM@GetMaxPopulation?$AA@
	push	OFFSET ?lGetMaxPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMaxPopulation
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 157  : 	Method(GetInitPopulation);

	push	OFFSET ??_C@_0BC@CLMIMCAI@GetInitPopulation?$AA@
	push	OFFSET ?lGetInitPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetInitPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 158  : 	Method(GetInitLand);

	push	OFFSET ??_C@_0M@HKHMFEOE@GetInitLand?$AA@
	push	OFFSET ?lGetInitLand@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetInitLand
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 159  : 	Method(GetInitTech);

	push	OFFSET ??_C@_0M@BODMDKP@GetInitTech?$AA@
	push	OFFSET ?lGetInitTech@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetInitTech
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 160  : 	Method(GetInitWonders);

	push	OFFSET ??_C@_0P@HPOBKFL@GetInitWonders?$AA@
	push	OFFSET ?lGetInitWonders@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetInitWonders
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 161  : 	Method(GetNumWorldWonders);

	push	OFFSET ??_C@_0BD@FHKHHPIG@GetNumWorldWonders?$AA@
	push	OFFSET ?lGetNumWorldWonders@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumWorldWonders
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 162  : 
; 163  : 	Method(GetAIAutoPlay);

	push	OFFSET ??_C@_0O@HJBOMHFF@GetAIAutoPlay?$AA@
	push	OFFSET ?lGetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAIAutoPlay
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 164  : 	Method(SetAIAutoPlay);

	push	OFFSET ??_C@_0O@GAAHECC@SetAIAutoPlay?$AA@
	push	OFFSET ?lSetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAIAutoPlay
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 165  : 
; 166  : 	Method(IsScoreDirty);

	push	OFFSET ??_C@_0N@JKDCPJNE@IsScoreDirty?$AA@
	push	OFFSET ?lIsScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsScoreDirty
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 167  : 	Method(SetScoreDirty);

	push	OFFSET ??_C@_0O@ECMLDDFG@SetScoreDirty?$AA@
	push	OFFSET ?lSetScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetScoreDirty
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 168  : 	Method(IsCircumnavigated);

	push	OFFSET ??_C@_0BC@KLHLPAFG@IsCircumnavigated?$AA@
	push	OFFSET ?lIsCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsCircumnavigated
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 169  : 	Method(MakeCircumnavigated);

	push	OFFSET ??_C@_0BE@BEIFOFIP@MakeCircumnavigated?$AA@
	push	OFFSET ?lMakeCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lMakeCircumnavigated
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 170  : 
; 171  : 	Method(DoFromUIDiploEvent);

	push	OFFSET ??_C@_0BD@MLPGFDEI@DoFromUIDiploEvent?$AA@
	push	OFFSET ?lDoFromUIDiploEvent@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoFromUIDiploEvent
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 172  : 
; 173  : 	Method(IsDebugMode);

	push	OFFSET ??_C@_0M@GCJIADCJ@IsDebugMode?$AA@
	push	OFFSET ?lIsDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsDebugMode
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 174  : 	Method(SetDebugMode);

	push	OFFSET ??_C@_0N@JGHJFLIB@SetDebugMode?$AA@
	push	OFFSET ?lSetDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetDebugMode
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 175  : 	Method(ToggleDebugMode);

	push	OFFSET ??_C@_0BA@KDGJNHAB@ToggleDebugMode?$AA@
	push	OFFSET ?lToggleDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lToggleDebugMode
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 176  : 	Method(UpdateFOW);

	push	OFFSET ??_C@_09DLKJEBCF@UpdateFOW?$AA@
	push	OFFSET ?lUpdateFOW@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lUpdateFOW
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 177  : 
; 178  : 	Method(GetPitbossTurnTime);

	push	OFFSET ??_C@_0BD@CGHCBHPO@GetPitbossTurnTime?$AA@
	push	OFFSET ?lGetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPitbossTurnTime
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 179  : 	Method(SetPitbossTurnTime);

	push	OFFSET ??_C@_0BD@NMFICBBG@SetPitbossTurnTime?$AA@
	push	OFFSET ?lSetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetPitbossTurnTime
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 180  : 	Method(IsHotSeat);

	push	OFFSET ??_C@_09NBMMEBLP@IsHotSeat?$AA@
	push	OFFSET ?lIsHotSeat@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsHotSeat
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 181  : 	Method(IsPbem);

	push	OFFSET ??_C@_06JMFIDCG@IsPbem?$AA@
	push	OFFSET ?lIsPbem@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsPbem
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 182  : 	Method(IsPitboss);

	push	OFFSET ??_C@_09LOFNMOJA@IsPitboss?$AA@
	push	OFFSET ?lIsPitboss@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsPitboss
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 183  : 	Method(IsSimultaneousTeamTurns);

	push	OFFSET ??_C@_0BI@FKPGBLMB@IsSimultaneousTeamTurns?$AA@
	push	OFFSET ?lIsSimultaneousTeamTurns@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsSimultaneousTeamTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 184  : 
; 185  : 	Method(IsFinalInitialized);

	push	OFFSET ??_C@_0BD@MMGHEDPG@IsFinalInitialized?$AA@
	push	OFFSET ?lIsFinalInitialized@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsFinalInitialized
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 186  : 
; 187  : 	Method(GetActivePlayer);

	push	OFFSET ??_C@_0BA@LIEGBEEM@GetActivePlayer?$AA@
	push	OFFSET ?lGetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetActivePlayer
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 188  : 	Method(SetActivePlayer);

	push	OFFSET ??_C@_0BA@IKFAGGFF@SetActivePlayer?$AA@
	push	OFFSET ?lSetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetActivePlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 189  : 	Method(GetPausePlayer);

	push	OFFSET ??_C@_0P@FKBCPGAM@GetPausePlayer?$AA@
	push	OFFSET ?lGetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPausePlayer
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 190  : 	Method(SetPausePlayer);

	push	OFFSET ??_C@_0P@JEAMAMCA@SetPausePlayer?$AA@
	push	OFFSET ?lSetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetPausePlayer
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 191  : 	Method(IsPaused);

	push	OFFSET ??_C@_08KOFADKJD@IsPaused?$AA@
	push	OFFSET ?lIsPaused@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsPaused
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 192  : 	Method(GetBestLandUnit);

	push	OFFSET ??_C@_0BA@PMKPPFOP@GetBestLandUnit?$AA@
	push	OFFSET ?lGetBestLandUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestLandUnit
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 193  : 	Method(GetBestLandUnitCombat);

	push	OFFSET ??_C@_0BG@LAJKLGGH@GetBestLandUnitCombat?$AA@
	push	OFFSET ?lGetBestLandUnitCombat@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestLandUnitCombat
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 194  : 
; 195  : 	Method(GetFaithCost);

	push	OFFSET ??_C@_0N@EEBFJLEP@GetFaithCost?$AA@
	push	OFFSET ?lGetFaithCost@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetFaithCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 196  : 
; 197  : 	Method(GetWinner);

	push	OFFSET ??_C@_09DJJKACNJ@GetWinner?$AA@
	push	OFFSET ?lGetWinner@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetWinner
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 198  : 	Method(GetVictory);

	push	OFFSET ??_C@_0L@DEBCEOMK@GetVictory?$AA@
	push	OFFSET ?lGetVictory@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetVictory
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 199  : 	Method(SetWinner);

	push	OFFSET ??_C@_09BHNPCDEL@SetWinner?$AA@
	push	OFFSET ?lSetWinner@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetWinner
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 200  : 	Method(GetGameState);

	push	OFFSET ??_C@_0N@CFMBLIKP@GetGameState?$AA@
	push	OFFSET ?lGetGameState@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGameState
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 201  : 	Method(SetGameState);

	push	OFFSET ??_C@_0N@FBHPHEOD@SetGameState?$AA@
	push	OFFSET ?lSetGameState@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetGameState
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 202  : 
; 203  : 	Method(GetVotesNeededForDiploVictory);

	push	OFFSET ??_C@_0BO@FPFHEDKK@GetVotesNeededForDiploVictory?$AA@
	push	OFFSET ?lGetVotesNeededForDiploVictory@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetVotesNeededForDiploVictory
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 204  : 	Method(IsUnitedNationsActive);

	push	OFFSET ??_C@_0BG@EPNNJPDD@IsUnitedNationsActive?$AA@
	push	OFFSET ?lIsUnitedNationsActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsUnitedNationsActive
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 205  : 
; 206  : 	Method(GetNumVictoryVotesTallied);

	push	OFFSET ??_C@_0BK@GCJFCPEL@GetNumVictoryVotesTallied?$AA@
	push	OFFSET ?lGetNumVictoryVotesTallied@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumVictoryVotesTallied
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 207  : 	Method(GetVoteCast);

	push	OFFSET ??_C@_0M@NHEAEAEJ@GetVoteCast?$AA@
	push	OFFSET ?lGetVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetVoteCast
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 208  : 	Method(GetPreviousVoteCast);

	push	OFFSET ??_C@_0BE@EKIOIEIM@GetPreviousVoteCast?$AA@
	push	OFFSET ?lGetPreviousVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPreviousVoteCast
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 209  : 	Method(GetNumVotesForTeam);

	push	OFFSET ??_C@_0BD@PJDFABBH@GetNumVotesForTeam?$AA@
	push	OFFSET ?lGetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumVotesForTeam
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 210  : 	Method(SetNumVotesForTeam);

	push	OFFSET ??_C@_0BD@DBPDHPP@SetNumVotesForTeam?$AA@
	push	OFFSET ?lSetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetNumVotesForTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 211  : 	Method(ChangeNumVotesForTeam);

	push	OFFSET ??_C@_0BG@BJHOIPGP@ChangeNumVotesForTeam?$AA@
	push	OFFSET ?lChangeNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangeNumVotesForTeam
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 212  : 
; 213  : 	Method(GetHandicapType);

	push	OFFSET ??_C@_0BA@NDPGKNBO@GetHandicapType?$AA@
	push	OFFSET ?lGetHandicapType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetHandicapType
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 214  : 	Method(GetCalendar);

	push	OFFSET ??_C@_0M@DHNLEMPD@GetCalendar?$AA@
	push	OFFSET ?lGetCalendar@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetCalendar
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 215  : 	Method(GetStartEra);

	push	OFFSET ??_C@_0M@JNBFHJON@GetStartEra?$AA@
	push	OFFSET ?lGetStartEra@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetStartEra
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 216  : 	Method(GetGameSpeedType);

	push	OFFSET ??_C@_0BB@DCMPODF@GetGameSpeedType?$AA@
	push	OFFSET ?lGetGameSpeedType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGameSpeedType
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 217  : 	Method(GetRankPlayer);

	push	OFFSET ??_C@_0O@IEOEGAHN@GetRankPlayer?$AA@
	push	OFFSET ?lGetRankPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetRankPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 218  : 	Method(GetPlayerRank);

	push	OFFSET ??_C@_0O@OPKPLJEK@GetPlayerRank?$AA@
	push	OFFSET ?lGetPlayerRank@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPlayerRank
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 219  : 	Method(GetPlayerScore);

	push	OFFSET ??_C@_0P@JELLOHIK@GetPlayerScore?$AA@
	push	OFFSET ?lGetPlayerScore@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPlayerScore
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 220  : 	Method(GetRankTeam);

	push	OFFSET ??_C@_0M@LPICKDEE@GetRankTeam?$AA@
	push	OFFSET ?lGetRankTeam@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetRankTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 221  : 	Method(GetTeamRank);

	push	OFFSET ??_C@_0M@DFOHMFIM@GetTeamRank?$AA@
	push	OFFSET ?lGetTeamRank@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTeamRank
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 222  : 	Method(GetTeamScore);

	push	OFFSET ??_C@_0N@OGGGMIHD@GetTeamScore?$AA@
	push	OFFSET ?lGetTeamScore@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTeamScore
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 223  : 	Method(IsOption);

	push	OFFSET ??_C@_08CPAPEJN@IsOption?$AA@
	push	OFFSET ?lIsOption@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsOption
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 224  : 	Method(SetOption);

	push	OFFSET ??_C@_09DLFAMNKA@SetOption?$AA@
	push	OFFSET ?lSetOption@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetOption
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 225  : 	Method(IsMPOption);

	push	OFFSET ??_C@_0L@BFBAHMJH@IsMPOption?$AA@
	push	OFFSET ?lIsMPOption@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsMPOption
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 226  : 	Method(GetUnitCreatedCount);

	push	OFFSET ??_C@_0BE@IJNNECCG@GetUnitCreatedCount?$AA@
	push	OFFSET ?lGetUnitCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetUnitCreatedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 227  : 	Method(GetUnitClassCreatedCount);

	push	OFFSET ??_C@_0BJ@HBCFMJOB@GetUnitClassCreatedCount?$AA@
	push	OFFSET ?lGetUnitClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetUnitClassCreatedCount
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 228  : 	Method(IsUnitClassMaxedOut);

	push	OFFSET ??_C@_0BE@KOKPIAGA@IsUnitClassMaxedOut?$AA@
	push	OFFSET ?lIsUnitClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsUnitClassMaxedOut
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 229  : 	Method(GetBuildingClassCreatedCount);

	push	OFFSET ??_C@_0BN@HHEMMAAG@GetBuildingClassCreatedCount?$AA@
	push	OFFSET ?lGetBuildingClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBuildingClassCreatedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 230  : 	Method(IsBuildingClassMaxedOut);

	push	OFFSET ??_C@_0BI@BIOFBBJB@IsBuildingClassMaxedOut?$AA@
	push	OFFSET ?lIsBuildingClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsBuildingClassMaxedOut
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 231  : 
; 232  : 	Method(GetProjectCreatedCount);

	push	OFFSET ??_C@_0BH@PNJJBILD@GetProjectCreatedCount?$AA@
	push	OFFSET ?lGetProjectCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetProjectCreatedCount
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 233  : 	Method(IsProjectMaxedOut);

	push	OFFSET ??_C@_0BC@OBMJOMIK@IsProjectMaxedOut?$AA@
	push	OFFSET ?lIsProjectMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsProjectMaxedOut
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 234  : 
; 235  : 	Method(IsVictoryValid);

	push	OFFSET ??_C@_0P@HFBGIDLK@IsVictoryValid?$AA@
	push	OFFSET ?lIsVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsVictoryValid
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 236  : 	Method(SetVictoryValid);

	push	OFFSET ??_C@_0BA@HBCIKCE@SetVictoryValid?$AA@
	push	OFFSET ?lSetVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetVictoryValid
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 237  : 	Method(IsSpecialUnitValid);

	push	OFFSET ??_C@_0BD@OHBOEENN@IsSpecialUnitValid?$AA@
	push	OFFSET ?lIsSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsSpecialUnitValid
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 238  : 	Method(MakeSpecialUnitValid);

	push	OFFSET ??_C@_0BF@BIKONALI@MakeSpecialUnitValid?$AA@
	push	OFFSET ?lMakeSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lMakeSpecialUnitValid
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 239  : 	Method(IsNukesValid);

	push	OFFSET ??_C@_0N@NPEGNFLP@IsNukesValid?$AA@
	push	OFFSET ?lIsNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsNukesValid
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 240  : 	Method(MakeNukesValid);

	push	OFFSET ??_C@_0P@BAMBEBFG@MakeNukesValid?$AA@
	push	OFFSET ?lMakeNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lMakeNukesValid
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 241  : 	Method(IsInAdvancedStart);

	push	OFFSET ??_C@_0BC@KNBLEAKO@IsInAdvancedStart?$AA@
	push	OFFSET ?lIsInAdvancedStart@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsInAdvancedStart
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 242  : 
; 243  : 	Method(SetName);

	push	OFFSET ??_C@_07DEJFEJPJ@SetName?$AA@
	push	OFFSET ?lSetName@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetName
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 244  : 	Method(GetName);

	push	OFFSET ??_C@_07MMGEHGCI@GetName?$AA@
	push	OFFSET ?lGetName@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetName
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 245  : 	Method(Rand);

	push	OFFSET ??_C@_04LLEMEMKG@Rand?$AA@
	push	OFFSET ?lRand@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lRand
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 246  : 	Method(CalculateSyncChecksum);

	push	OFFSET ??_C@_0BG@CHMMPMLD@CalculateSyncChecksum?$AA@
	push	OFFSET ?lCalculateSyncChecksum@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCalculateSyncChecksum
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 247  : 	Method(CalculateOptionsChecksum);

	push	OFFSET ??_C@_0BJ@CCAMDPII@CalculateOptionsChecksum?$AA@
	push	OFFSET ?lCalculateOptionsChecksum@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCalculateOptionsChecksum
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 248  : 
; 249  : 	Method(GetReplayMessage);

	push	OFFSET ??_C@_0BB@MDLOICDK@GetReplayMessage?$AA@
	push	OFFSET ?lGetReplayMessage@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetReplayMessage
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 250  : 	Method(GetReplayMessages);

	push	OFFSET ??_C@_0BC@MCNNENAF@GetReplayMessages?$AA@
	push	OFFSET ?lGetReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetReplayMessages
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 251  : 	Method(GetNumReplayMessages);

	push	OFFSET ??_C@_0BF@DIOCLBGM@GetNumReplayMessages?$AA@
	push	OFFSET ?lGetNumReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumReplayMessages
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 252  : 	Method(GetReplayInfo);

	push	OFFSET ??_C@_0O@HPJCLEJF@GetReplayInfo?$AA@
	push	OFFSET ?lGetReplayInfo@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetReplayInfo
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 253  : 
; 254  : 	Method(SaveReplay);

	push	OFFSET ??_C@_0L@IDAKCDFD@SaveReplay?$AA@
	push	OFFSET ?lSaveReplay@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSaveReplay
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 255  : 
; 256  : 	Method(AddPlayer);

	push	OFFSET ??_C@_09IFLAAADM@AddPlayer?$AA@
	push	OFFSET ?lAddPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lAddPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 257  : 
; 258  : 	Method(SetPlotExtraYield);

	push	OFFSET ??_C@_0BC@JDFDCOBD@SetPlotExtraYield?$AA@
	push	OFFSET ?lSetPlotExtraYield@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetPlotExtraYield
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 259  : 	Method(ChangePlotExtraCost);

	push	OFFSET ??_C@_0BE@OCCPKLBN@ChangePlotExtraCost?$AA@
	push	OFFSET ?lChangePlotExtraCost@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lChangePlotExtraCost
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 260  : 
; 261  : 	Method(IsCivEverActive);

	push	OFFSET ??_C@_0BA@ECPGLOBI@IsCivEverActive?$AA@
	push	OFFSET ?lIsCivEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsCivEverActive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 262  : 	Method(IsLeaderEverActive);

	push	OFFSET ??_C@_0BD@GBFCNPKP@IsLeaderEverActive?$AA@
	push	OFFSET ?lIsLeaderEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsLeaderEverActive
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 263  : 	Method(IsUnitEverActive);

	push	OFFSET ??_C@_0BB@GCGDGGGG@IsUnitEverActive?$AA@
	push	OFFSET ?lIsUnitEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsUnitEverActive
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 264  : 	Method(IsBuildingEverActive);

	push	OFFSET ??_C@_0BF@IAAOBODO@IsBuildingEverActive?$AA@
	push	OFFSET ?lIsBuildingEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsBuildingEverActive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 265  : 
; 266  : 	Method(CanDoControl);

	push	OFFSET ??_C@_0N@PKKHCBGI@CanDoControl?$AA@
	push	OFFSET ?lCanDoControl@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lCanDoControl
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 267  : 	Method(DoControl);

	push	OFFSET ??_C@_09KHELGPKA@DoControl?$AA@
	push	OFFSET ?lDoControl@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoControl
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 268  : 
; 269  : 	Method(DoMinorPledgeProtection);

	push	OFFSET ??_C@_0BI@CGHFCKII@DoMinorPledgeProtection?$AA@
	push	OFFSET ?lDoMinorPledgeProtection@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorPledgeProtection
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 270  : 	Method(DoMinorGoldGift);

	push	OFFSET ??_C@_0BA@LHNENHEM@DoMinorGoldGift?$AA@
	push	OFFSET ?lDoMinorGoldGift@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorGoldGift
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 271  : 	Method(DoMinorGiftGold);

	push	OFFSET ??_C@_0BA@LECDELEF@DoMinorGiftGold?$AA@
	push	OFFSET ?lDoMinorGiftGold@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorGiftGold
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 272  : 	Method(DoMinorGiftTileImprovement);

	push	OFFSET ??_C@_0BL@LMJKLHLF@DoMinorGiftTileImprovement?$AA@
	push	OFFSET ?lDoMinorGiftTileImprovement@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorGiftTileImprovement
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 273  : 	Method(DoMinorBullyGold);

	push	OFFSET ??_C@_0BB@LNNIHAPJ@DoMinorBullyGold?$AA@
	push	OFFSET ?lDoMinorBullyGold@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorBullyGold
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 274  : 	Method(DoMinorBullyUnit);

	push	OFFSET ??_C@_0BB@FDENADME@DoMinorBullyUnit?$AA@
	push	OFFSET ?lDoMinorBullyUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorBullyUnit
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 275  : 	Method(DoMinorBuyout);

	push	OFFSET ??_C@_0O@HOJDIIMB@DoMinorBuyout?$AA@
	push	OFFSET ?lDoMinorBuyout@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorBuyout
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 276  : 
; 277  : 	Method(GetBestWondersPlayer);

	push	OFFSET ??_C@_0BF@MILFGGAC@GetBestWondersPlayer?$AA@
	push	OFFSET ?lGetBestWondersPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestWondersPlayer
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 278  : 	Method(GetBestPoliciesPlayer);

	push	OFFSET ??_C@_0BG@IJIOMHPK@GetBestPoliciesPlayer?$AA@
	push	OFFSET ?lGetBestPoliciesPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestPoliciesPlayer
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 279  : 	Method(GetBestGreatPeoplePlayer);

	push	OFFSET ??_C@_0BJ@BNFIKAFK@GetBestGreatPeoplePlayer?$AA@
	push	OFFSET ?lGetBestGreatPeoplePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBestGreatPeoplePlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 280  : 
; 281  : 	Method(IsEverAttackedTutorial);

	push	OFFSET ??_C@_0BH@FKEBPBPE@IsEverAttackedTutorial?$AA@
	push	OFFSET ?lIsEverAttackedTutorial@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsEverAttackedTutorial
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 282  : 
; 283  : 	Method(GameplayDiplomacyAILeaderMessage);

	push	OFFSET ??_C@_0CB@FJJKABLK@GameplayDiplomacyAILeaderMessage@
	push	OFFSET ?lGameplayDiplomacyAILeaderMessage@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGameplayDiplomacyAILeaderMessage
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 284  : 
; 285  : 	Method(GetResourceUsageType);

	push	OFFSET ??_C@_0BF@IBPCBPJG@GetResourceUsageType?$AA@
	push	OFFSET ?lGetResourceUsageType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetResourceUsageType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 286  : 
; 287  : 	Method(GetNumResourceRequiredForUnit);

	push	OFFSET ??_C@_0BO@LCJGBMDG@GetNumResourceRequiredForUnit?$AA@
	push	OFFSET ?lGetNumResourceRequiredForUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumResourceRequiredForUnit
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 288  : 	Method(GetNumResourceRequiredForBuilding);

	push	OFFSET ??_C@_0CC@IGJEPCCI@GetNumResourceRequiredForBuildin@
	push	OFFSET ?lGetNumResourceRequiredForBuilding@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumResourceRequiredForBuilding
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 289  : 
; 290  : 	Method(IsCombatWarned);

	push	OFFSET ??_C@_0P@EHMGJCEG@IsCombatWarned?$AA@
	push	OFFSET ?lIsCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsCombatWarned
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 291  : 	Method(SetCombatWarned);

	push	OFFSET ??_C@_0BA@DFMCJLNI@SetCombatWarned?$AA@
	push	OFFSET ?lSetCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetCombatWarned
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 292  : 
; 293  : 	Method(GetAdvisorCounsel);

	push	OFFSET ??_C@_0BC@MGGGFFNP@GetAdvisorCounsel?$AA@
	push	OFFSET ?lGetAdvisorCounsel@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAdvisorCounsel
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 294  : 	Method(SetAdvisorRecommenderCity);

	push	OFFSET ??_C@_0BK@PCKLLFMN@SetAdvisorRecommenderCity?$AA@
	push	OFFSET ?lSetAdvisorRecommenderCity@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorRecommenderCity
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 295  : 
; 296  : 	Method(IsUnitRecommended);

	push	OFFSET ??_C@_0BC@MEHLOEAO@IsUnitRecommended?$AA@
	push	OFFSET ?lIsUnitRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsUnitRecommended
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 297  : 	Method(IsBuildingRecommended);

	push	OFFSET ??_C@_0BG@KBCJFALA@IsBuildingRecommended?$AA@
	push	OFFSET ?lIsBuildingRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsBuildingRecommended
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 298  : 	Method(IsProjectRecommended);

	push	OFFSET ??_C@_0BF@ONMGNANH@IsProjectRecommended?$AA@
	push	OFFSET ?lIsProjectRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsProjectRecommended
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 299  : 
; 300  : 	Method(SetAdvisorRecommenderTech);

	push	OFFSET ??_C@_0BK@CAANNHAC@SetAdvisorRecommenderTech?$AA@
	push	OFFSET ?lSetAdvisorRecommenderTech@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetAdvisorRecommenderTech
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 301  : 	Method(IsTechRecommended);

	push	OFFSET ??_C@_0BC@EIGNBGNL@IsTechRecommended?$AA@
	push	OFFSET ?lIsTechRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsTechRecommended
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 302  : 
; 303  : 	Method(GetVariableCitySizeFromPopulation);

	push	OFFSET ??_C@_0CC@PPFDDOGO@GetVariableCitySizeFromPopulatio@
	push	OFFSET ?lGetVariableCitySizeFromPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetVariableCitySizeFromPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 304  : 
; 305  : 	Method(GetResearchAgreementCost);

	push	OFFSET ??_C@_0BJ@IICBLKFL@GetResearchAgreementCost?$AA@
	push	OFFSET ?lGetResearchAgreementCost@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetResearchAgreementCost
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 306  : 
; 307  : 	Method(GetCustomOption);

	push	OFFSET ??_C@_0BA@OFKJKAHO@GetCustomOption?$AA@
	push	OFFSET ?lGetCustomOption@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetCustomOption
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 308  : 
; 309  : 	Method(GetNumCitiesPolicyCostMod);

	push	OFFSET ??_C@_0BK@OBHHAKMB@GetNumCitiesPolicyCostMod?$AA@
	push	OFFSET ?lGetNumCitiesPolicyCostMod@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCitiesPolicyCostMod
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 310  : 	Method(GetNumCitiesTechCostMod);

	push	OFFSET ??_C@_0BI@DOEGIJOF@GetNumCitiesTechCostMod?$AA@
	push	OFFSET ?lGetNumCitiesTechCostMod@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCitiesTechCostMod
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 311  : 
; 312  : 	Method(GetBuildingYieldChange);

	push	OFFSET ??_C@_0BH@IIHDEHPE@GetBuildingYieldChange?$AA@
	push	OFFSET ?lGetBuildingYieldChange@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBuildingYieldChange
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 313  : 	Method(GetBuildingYieldModifier);

	push	OFFSET ??_C@_0BJ@DBPBDBNK@GetBuildingYieldModifier?$AA@
	push	OFFSET ?lGetBuildingYieldModifier@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBuildingYieldModifier
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 314  : 
; 315  : 	Method(GetWorldNumCitiesUnhappinessPercent);

	push	OFFSET ??_C@_0CE@EICALPKM@GetWorldNumCitiesUnhappinessPerc@
	push	OFFSET ?lGetWorldNumCitiesUnhappinessPercent@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetWorldNumCitiesUnhappinessPercent
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 316  : 
; 317  : 	Method(GetDealDuration);

	push	OFFSET ??_C@_0BA@PIOFNEIA@GetDealDuration?$AA@
	push	OFFSET ?lGetDealDuration@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetDealDuration
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 318  : 	Method(GetPeaceDuration);

	push	OFFSET ??_C@_0BB@NADMKBKJ@GetPeaceDuration?$AA@
	push	OFFSET ?lGetPeaceDuration@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetPeaceDuration
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 319  : 
; 320  : 	Method(GetUnitUpgradesTo);

	push	OFFSET ??_C@_0BC@CNNCGGKP@GetUnitUpgradesTo?$AA@
	push	OFFSET ?lGetUnitUpgradesTo@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetUnitUpgradesTo
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 321  : 
; 322  : 	Method(GetCombatPrediction);

	push	OFFSET ??_C@_0BE@IHBNIFJC@GetCombatPrediction?$AA@
	push	OFFSET ?lGetCombatPrediction@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetCombatPrediction
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 323  : 
; 324  : 	Method(GetTimeString);

	push	OFFSET ??_C@_0O@MBFFONGO@GetTimeString?$AA@
	push	OFFSET ?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTimeString
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 325  : 
; 326  : 	Method(GetMinimumFaithNextPantheon);

	push	OFFSET ??_C@_0BM@BIOHBBMK@GetMinimumFaithNextPantheon?$AA@
	push	OFFSET ?lGetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetMinimumFaithNextPantheon
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 327  : 	Method(SetMinimumFaithNextPantheon);

	push	OFFSET ??_C@_0BM@FGPDEGO@SetMinimumFaithNextPantheon?$AA@
	push	OFFSET ?lSetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetMinimumFaithNextPantheon
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 328  : 
; 329  : 	Method(GetAvailablePantheonBeliefs);

	push	OFFSET ??_C@_0BM@GADOOEAH@GetAvailablePantheonBeliefs?$AA@
	push	OFFSET ?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailablePantheonBeliefs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 330  : 	Method(GetAvailableFounderBeliefs);

	push	OFFSET ??_C@_0BL@DMBIIOGH@GetAvailableFounderBeliefs?$AA@
	push	OFFSET ?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableFounderBeliefs
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 331  : 	Method(GetAvailableFollowerBeliefs);

	push	OFFSET ??_C@_0BM@OIEFKPDL@GetAvailableFollowerBeliefs?$AA@
	push	OFFSET ?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableFollowerBeliefs
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 332  : 	Method(GetAvailableEnhancerBeliefs);

	push	OFFSET ??_C@_0BM@KDHMNEGC@GetAvailableEnhancerBeliefs?$AA@
	push	OFFSET ?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableEnhancerBeliefs
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 333  : 	Method(GetAvailableBonusBeliefs);

	push	OFFSET ??_C@_0BJ@FGBDBKNN@GetAvailableBonusBeliefs?$AA@
	push	OFFSET ?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableBonusBeliefs
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 334  : 	Method(GetAvailableReformationBeliefs);

	push	OFFSET ??_C@_0BP@CADPLLKB@GetAvailableReformationBeliefs?$AA@
	push	OFFSET ?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetAvailableReformationBeliefs
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 335  : 
; 336  : 	Method(GetNumFollowers);

	push	OFFSET ??_C@_0BA@BEJIHHEO@GetNumFollowers?$AA@
	push	OFFSET ?lGetNumFollowers@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumFollowers
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 337  : 	Method(GetNumCitiesFollowing);

	push	OFFSET ??_C@_0BG@NLBBKMBK@GetNumCitiesFollowing?$AA@
	push	OFFSET ?lGetNumCitiesFollowing@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumCitiesFollowing
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 338  : 
; 339  : 	Method(GetBeliefsInReligion);

	push	OFFSET ??_C@_0BF@MBPEBDAP@GetBeliefsInReligion?$AA@
	push	OFFSET ?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetBeliefsInReligion
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 340  : 	Method(GetNumReligionsStillToFound);

	push	OFFSET ??_C@_0BM@CLCAOIFD@GetNumReligionsStillToFound?$AA@
	push	OFFSET ?lGetNumReligionsStillToFound@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumReligionsStillToFound
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 341  : 	Method(GetNumReligionsFounded);

	push	OFFSET ??_C@_0BH@FMGIEENO@GetNumReligionsFounded?$AA@
	push	OFFSET ?lGetNumReligionsFounded@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumReligionsFounded
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 342  : 	Method(GetHolyCityForReligion);

	push	OFFSET ??_C@_0BH@NCFNPKAM@GetHolyCityForReligion?$AA@
	push	OFFSET ?lGetHolyCityForReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetHolyCityForReligion
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 343  : 	Method(GetReligionName);

	push	OFFSET ??_C@_0BA@GINIHLHA@GetReligionName?$AA@
	push	OFFSET ?lGetReligionName@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetReligionName
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 344  : 	Method(GetFounderBenefitsReligion);

	push	OFFSET ??_C@_0BL@ODLKNBCI@GetFounderBenefitsReligion?$AA@
	push	OFFSET ?lGetFounderBenefitsReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetFounderBenefitsReligion
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 345  : 
; 346  : 	Method(FoundPantheon);

	push	OFFSET ??_C@_0O@OAJNLCHB@FoundPantheon?$AA@
	push	OFFSET ?lFoundPantheon@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lFoundPantheon
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 347  : 	Method(FoundReligion);

	push	OFFSET ??_C@_0O@KKHALMAI@FoundReligion?$AA@
	push	OFFSET ?lFoundReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lFoundReligion
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 348  : 	Method(EnhanceReligion);

	push	OFFSET ??_C@_0BA@MJNPLGMD@EnhanceReligion?$AA@
	push	OFFSET ?lEnhanceReligion@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lEnhanceReligion
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 349  : 	Method(SetHolyCity);

	push	OFFSET ??_C@_0M@OJCMFPEH@SetHolyCity?$AA@
	push	OFFSET ?lSetHolyCity@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetHolyCity
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 350  : 	Method(GetFounder);

	push	OFFSET ??_C@_0L@PJDKMPEB@GetFounder?$AA@
	push	OFFSET ?lGetFounder@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetFounder
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 351  : 	Method(SetFounder);

	push	OFFSET ??_C@_0L@OHBFHIAI@SetFounder?$AA@
	push	OFFSET ?lSetFounder@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSetFounder
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 352  : 
; 353  : 	Method(GetTurnsBetweenMinorCivElections);

	push	OFFSET ??_C@_0CB@MGIONIDE@GetTurnsBetweenMinorCivElections@
	push	OFFSET ?lGetTurnsBetweenMinorCivElections@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTurnsBetweenMinorCivElections
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 354  : 	Method(GetTurnsUntilMinorCivElection);

	push	OFFSET ??_C@_0BO@EKKFPCLI@GetTurnsUntilMinorCivElection?$AA@
	push	OFFSET ?lGetTurnsUntilMinorCivElection@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetTurnsUntilMinorCivElection
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 355  : 
; 356  : 	Method(GetNumActiveLeagues);

	push	OFFSET ??_C@_0BE@GDCNMBLK@GetNumActiveLeagues?$AA@
	push	OFFSET ?lGetNumActiveLeagues@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumActiveLeagues
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 357  : 	Method(GetNumLeaguesEverFounded);

	push	OFFSET ??_C@_0BJ@IPFGDPKL@GetNumLeaguesEverFounded?$AA@
	push	OFFSET ?lGetNumLeaguesEverFounded@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumLeaguesEverFounded
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 358  : 	Method(GetLeague);

	push	OFFSET ??_C@_09MNHMPFCL@GetLeague?$AA@
	push	OFFSET ?lGetLeague@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetLeague
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 359  : 	Method(GetActiveLeague);

	push	OFFSET ??_C@_0BA@JGFELEHE@GetActiveLeague?$AA@
	push	OFFSET ?lGetActiveLeague@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetActiveLeague
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 360  : 
; 361  : 	Method(IsProcessingMessages);

	push	OFFSET ??_C@_0BF@GMOHFKCF@IsProcessingMessages?$AA@
	push	OFFSET ?lIsProcessingMessages@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lIsProcessingMessages
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 362  : 
; 363  : 	Method(GetGreatWorkTooltip);

	push	OFFSET ??_C@_0BE@KOLHPJBP@GetGreatWorkTooltip?$AA@
	push	OFFSET ?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkTooltip
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 364  : 	Method(GetGreatWorkName);

	push	OFFSET ??_C@_0BB@JOMJAKLD@GetGreatWorkName?$AA@
	push	OFFSET ?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkName
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 365  : 	Method(GetGreatWorkType);

	push	OFFSET ??_C@_0BB@DFMKMKMD@GetGreatWorkType?$AA@
	push	OFFSET ?lGetGreatWorkType@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkType
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 366  : 	Method(GetGreatWorkClass);

	push	OFFSET ??_C@_0BC@EAJHLGBM@GetGreatWorkClass?$AA@
	push	OFFSET ?lGetGreatWorkClass@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkClass
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 367  : 	Method(GetGreatWorkArtist);

	push	OFFSET ??_C@_0BD@GGPFKKMA@GetGreatWorkArtist?$AA@
	push	OFFSET ?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkArtist
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 368  : 	Method(GetGreatWorkEra);

	push	OFFSET ??_C@_0BA@PFJDFAPE@GetGreatWorkEra?$AA@
	push	OFFSET ?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkEra
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 369  : 	Method(GetGreatWorkEraAbbreviation);

	push	OFFSET ??_C@_0BM@MEHKMABC@GetGreatWorkEraAbbreviation?$AA@
	push	OFFSET ?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkEraAbbreviation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 370  : 	Method(GetGreatWorkEraShort);

	push	OFFSET ??_C@_0BF@LMBMELCC@GetGreatWorkEraShort?$AA@
	push	OFFSET ?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkEraShort
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 371  : 	Method(GetGreatWorkCreator);

	push	OFFSET ??_C@_0BE@LBHAMFME@GetGreatWorkCreator?$AA@
	push	OFFSET ?lGetGreatWorkCreator@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkCreator
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 372  : 	Method(GetGreatWorkController);

	push	OFFSET ??_C@_0BH@IKJFIBAN@GetGreatWorkController?$AA@
	push	OFFSET ?lGetGreatWorkController@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkController
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 373  : 	Method(GetGreatWorkCurrentThemingBonus);

	push	OFFSET ??_C@_0CA@KPGAFMHH@GetGreatWorkCurrentThemingBonus?$AA@
	push	OFFSET ?lGetGreatWorkCurrentThemingBonus@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetGreatWorkCurrentThemingBonus
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 374  : 	Method(GetArtifactName);

	push	OFFSET ??_C@_0BA@KMNDNEOG@GetArtifactName?$AA@
	push	OFFSET ?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetArtifactName
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 375  : 
; 376  : 	Method(GetNumFreePolicies);

	push	OFFSET ??_C@_0BD@DPNODDCH@GetNumFreePolicies?$AA@
	push	OFFSET ?lGetNumFreePolicies@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumFreePolicies
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 377  : 
; 378  : 	Method(GetLongestCityConnectionPlots);

	push	OFFSET ??_C@_0BO@BMENPGPE@GetLongestCityConnectionPlots?$AA@
	push	OFFSET ?lGetLongestCityConnectionPlots@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetLongestCityConnectionPlots
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 379  : 
; 380  : 	Method(SelectedUnit_SpeculativePopupTradeRoute_Display);

	push	OFFSET ??_C@_0DA@EKBLDCCD@SelectedUnit_SpeculativePopupTra@
	push	OFFSET ?lSelectedUnit_SpeculativePopupTradeRoute_Display@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectedUnit_SpeculativePopupTradeRoute_Display
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 381  : 	Method(SelectedUnit_SpeculativePopupTradeRoute_Hide);

	push	OFFSET ??_C@_0CN@DONCEICH@SelectedUnit_SpeculativePopupTra@
	push	OFFSET ?lSelectedUnit_SpeculativePopupTradeRoute_Hide@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lSelectedUnit_SpeculativePopupTradeRoute_Hide
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 382  : 	Method(MouseoverUnit);

	push	OFFSET ??_C@_0O@EMLNJGOH@MouseoverUnit?$AA@
	push	OFFSET ?lMouseoverUnit@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lMouseoverUnit
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 383  : 
; 384  : 	Method(GetNumArchaeologySites);

	push	OFFSET ??_C@_0BH@CGIJLDCN@GetNumArchaeologySites?$AA@
	push	OFFSET ?lGetNumArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumArchaeologySites
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 385  : 	Method(GetNumHiddenArchaeologySites);

	push	OFFSET ??_C@_0BN@ILHHKDKD@GetNumHiddenArchaeologySites?$AA@
	push	OFFSET ?lGetNumHiddenArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lGetNumHiddenArchaeologySites
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
	add	esp, 12					; 0000000cH

; 386  : }

	pop	ebp
	ret	0
?RegisterMembers@CvLuaGame@@SAXPAUlua_State@@@Z ENDP	; CvLuaGame::RegisterMembers
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
EXTRN	_lua_pushboolean:PROC
EXTRN	?canHandleAction@CvGame@@QAE_NHPAVCvPlot@@_N@Z:PROC ; CvGame::canHandleAction
EXTRN	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z:PROC	; luaL_optbool
EXTRN	_lua_tointeger:PROC
; Function compile flags: /Odtp
;	COMDAT ?lCanHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iAction$ = -12						; size = 4
_bResult$ = -6						; size = 1
_bTestVisible$ = -5					; size = 1
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lCanHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lCanHandleAction, COMDAT

; 394  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 395  : 	const int iAction = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iAction$[ebp], eax

; 396  : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 2, false);

	push	0
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 397  : 	const bool bTestVisible = luaL_optbool(L, 3, 0);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bTestVisible$[ebp], al

; 398  : 	const bool bResult = GetInstance()->canHandleAction(iAction, pkPlot, bTestVisible);

	movzx	eax, BYTE PTR _bTestVisible$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iAction$[ebp]
	push	edx
	push	0
	push	0
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	ecx, eax
	call	?canHandleAction@CvGame@@QAE_NHPAVCvPlot@@_N@Z ; CvGame::canHandleAction
	mov	BYTE PTR _bResult$[ebp], al

; 399  : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 400  : 	return 1;

	mov	eax, 1

; 401  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCanHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lCanHandleAction
_TEXT	ENDS
EXTRN	?handleAction@CvGame@@QAEXH@Z:PROC		; CvGame::handleAction
; Function compile flags: /Odtp
;	COMDAT ?lHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iAction$ = -4						; size = 4
_L$ = 8							; size = 4
?lHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lHandleAction, COMDAT

; 405  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 406  : 	const int iAction = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iAction$[ebp], eax

; 407  : 	GetInstance()->handleAction(iAction);

	mov	ecx, DWORD PTR _iAction$[ebp]
	push	ecx
	push	0
	push	0
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	ecx, eax
	call	?handleAction@CvGame@@QAEXH@Z		; CvGame::handleAction

; 408  : 	return 0;

	xor	eax, eax

; 409  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lHandleAction@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lHandleAction
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
EXTRN	?updateScore@CvGame@@QAEX_N@Z:PROC		; CvGame::updateScore
; Function compile flags: /Odtp
;	COMDAT ?lUpdateScore@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lUpdateScore@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lUpdateScore, COMDAT

; 413  : {

	push	ebp
	mov	ebp, esp

; 414  : 	return BasicLuaMethod(L, &CvGame::updateScore);

	push	OFFSET ?updateScore@CvGame@@QAEX_N@Z	; CvGame::updateScore
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 415  : }

	pop	ebp
	ret	0
?lUpdateScore@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lUpdateScore
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N1@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,bool>
EXTRN	?cycleCities@CvGame@@QAEX_N0@Z:PROC		; CvGame::cycleCities
; Function compile flags: /Odtp
;	COMDAT ?lCycleCities@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCycleCities@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lCycleCities, COMDAT

; 419  : {

	push	ebp
	mov	ebp, esp

; 420  : 	return BasicLuaMethod(L, &CvGame::cycleCities);

	push	OFFSET ?cycleCities@CvGame@@QAEX_N0@Z	; CvGame::cycleCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N1@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,bool>
	add	esp, 8

; 421  : }

	pop	ebp
	ret	0
?lCycleCities@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lCycleCities
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N11@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,bool,bool>
EXTRN	?cycleUnits@CvGame@@QAEX_N00@Z:PROC		; CvGame::cycleUnits
; Function compile flags: /Odtp
;	COMDAT ?lCycleUnits@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCycleUnits@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lCycleUnits, COMDAT

; 425  : {

	push	ebp
	mov	ebp, esp

; 426  : 	return BasicLuaMethod(L, &CvGame::cycleUnits);

	push	OFFSET ?cycleUnits@CvGame@@QAEX_N00@Z	; CvGame::cycleUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N11@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,bool,bool>
	add	esp, 8

; 427  : }

	pop	ebp
	ret	0
?lCycleUnits@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lCycleUnits
_TEXT	ENDS
EXTRN	?cyclePlotUnits@CvGame@@QAE_NPAVCvPlot@@_N1H@Z:PROC ; CvGame::cyclePlotUnits
EXTRN	_lua_toboolean:PROC
; Function compile flags: /Odtp
;	COMDAT ?lCyclePlotUnits@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iCount$ = -16						; size = 4
_bResult$ = -10						; size = 1
_bForward$ = -9						; size = 1
_pkPlot$ = -8						; size = 4
_bAuto$ = -1						; size = 1
_L$ = 8							; size = 4
?lCyclePlotUnits@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lCyclePlotUnits, COMDAT

; 431  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 432  : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 1);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 433  : 	const bool bForward = lua_toboolean(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bForward$[ebp], dl

; 434  : 	const bool bAuto = lua_toboolean(L, 3);

	push	3
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bAuto$[ebp], cl

; 435  : 	const int iCount = lua_tointeger(L, 4);

	push	4
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iCount$[ebp], eax

; 436  : 
; 437  : 	const bool bResult = GetInstance()->cyclePlotUnits(pkPlot, bForward, bAuto, iCount);

	mov	eax, DWORD PTR _iCount$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bAuto$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bForward$[ebp]
	push	edx
	mov	eax, DWORD PTR _pkPlot$[ebp]
	push	eax
	push	0
	push	0
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	ecx, eax
	call	?cyclePlotUnits@CvGame@@QAE_NPAVCvPlot@@_N1H@Z ; CvGame::cyclePlotUnits
	mov	BYTE PTR _bResult$[ebp], al

; 438  : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 439  : 	return 1;

	mov	eax, 1

; 440  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCyclePlotUnits@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lCyclePlotUnits
_TEXT	ENDS
EXTRN	?selectionListMove@CvGame@@QAEXPAVCvPlot@@_N@Z:PROC ; CvGame::selectionListMove
; Function compile flags: /Odtp
;	COMDAT ?lSelectionListMove@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bShift$ = -5						; size = 1
_pkPlot$ = -4						; size = 4
_L$ = 8							; size = 4
?lSelectionListMove@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSelectionListMove, COMDAT

; 444  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 445  : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 1);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 446  : 	const bool bShift = lua_toboolean(L, 3);

	push	3
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bShift$[ebp], dl

; 447  : 
; 448  : 	GetInstance()->selectionListMove(pkPlot, bShift);

	movzx	eax, BYTE PTR _bShift$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkPlot$[ebp]
	push	ecx
	push	0
	push	0
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	ecx, eax
	call	?selectionListMove@CvGame@@QAEXPAVCvPlot@@_N@Z ; CvGame::selectionListMove

; 449  : 	return 0;

	xor	eax, eax

; 450  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSelectionListMove@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSelectionListMove
_TEXT	ENDS
EXTRN	?selectionListGameNetMessage@CvGame@@QAEXHHHHH_N0@Z:PROC ; CvGame::selectionListGameNetMessage
EXTRN	_luaL_optinteger:PROC
; Function compile flags: /Odtp
;	COMDAT ?lSelectionListGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eMessage$ = -28					; size = 4
_bAlt$ = -21						; size = 1
_iData3$ = -20						; size = 4
_bShift$ = -13						; size = 1
_iFlags$ = -12						; size = 4
_iData4$ = -8						; size = 4
_iData2$ = -4						; size = 4
_L$ = 8							; size = 4
?lSelectionListGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSelectionListGameNetMessage, COMDAT

; 454  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 455  : 	const int eMessage	= lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMessage$[ebp], eax

; 456  : 	const int iData2	= luaL_optint(L, 2, -1);

	push	-1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iData2$[ebp], eax

; 457  : 	const int iData3	= luaL_optint(L, 3, -1);

	push	-1
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iData3$[ebp], eax

; 458  : 	const int iData4	= luaL_optint(L, 4, -1);

	push	-1
	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iData4$[ebp], eax

; 459  : 	const int iFlags	= luaL_optint(L, 5, 0);

	push	0
	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iFlags$[ebp], eax

; 460  : 	const bool bAlt		= luaL_optbool(L, 6, 0);

	push	0
	push	6
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bAlt$[ebp], al

; 461  : 	const bool bShift	= luaL_optbool(L, 7, 0);

	push	0
	push	7
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bShift$[ebp], al

; 462  : 
; 463  : 	GetInstance()->selectionListGameNetMessage(eMessage, iData2, iData3, iData4, iFlags, bAlt, bShift);

	movzx	ecx, BYTE PTR _bShift$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bAlt$[ebp]
	push	edx
	mov	eax, DWORD PTR _iFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iData4$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iData3$[ebp]
	push	edx
	mov	eax, DWORD PTR _iData2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eMessage$[ebp]
	push	ecx
	push	0
	push	0
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	ecx, eax
	call	?selectionListGameNetMessage@CvGame@@QAEXHHHHH_N0@Z ; CvGame::selectionListGameNetMessage

; 464  : 	return 0;

	xor	eax, eax

; 465  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSelectionListGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSelectionListGameNetMessage
_TEXT	ENDS
EXTRN	?selectedCitiesGameNetMessage@CvGame@@QAEXHHHH_N000@Z:PROC ; CvGame::selectedCitiesGameNetMessage
; Function compile flags: /Odtp
;	COMDAT ?lSelectedCitiesGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bOption$ = -29						; size = 1
_eMessage$ = -28					; size = 4
_bAlt$ = -21						; size = 1
_iData3$ = -20						; size = 4
_bShift$ = -13						; size = 1
_iData4$ = -12						; size = 4
_bCtrl$ = -5						; size = 1
_iData2$ = -4						; size = 4
_L$ = 8							; size = 4
?lSelectedCitiesGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSelectedCitiesGameNetMessage, COMDAT

; 469  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 470  : 	const int eMessage = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMessage$[ebp], eax

; 471  : 	const int iData2 = luaL_optint(L, 2, -1);

	push	-1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iData2$[ebp], eax

; 472  : 	const int iData3 = luaL_optint(L, 3, -1);

	push	-1
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iData3$[ebp], eax

; 473  : 	const int iData4 = luaL_optint(L, 4, -1);

	push	-1
	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_optinteger
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iData4$[ebp], eax

; 474  : 	const bool bOption	= luaL_optbool(L, 5, 0);

	push	0
	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bOption$[ebp], al

; 475  : 	const bool bAlt		= luaL_optbool(L, 6, 0);

	push	0
	push	6
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bAlt$[ebp], al

; 476  : 	const bool bShift	= luaL_optbool(L, 7, 0);

	push	0
	push	7
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bShift$[ebp], al

; 477  : 	const bool bCtrl	= luaL_optbool(L, 8, 0);

	push	0
	push	8
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bCtrl$[ebp], al

; 478  : 	GetInstance()->selectedCitiesGameNetMessage(eMessage, iData2, iData3, iData4, bOption, bAlt, bShift, bCtrl);

	movzx	edx, BYTE PTR _bCtrl$[ebp]
	push	edx
	movzx	eax, BYTE PTR _bShift$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bAlt$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bOption$[ebp]
	push	edx
	mov	eax, DWORD PTR _iData4$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iData3$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iData2$[ebp]
	push	edx
	mov	eax, DWORD PTR _eMessage$[ebp]
	push	eax
	push	0
	push	0
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	ecx, eax
	call	?selectedCitiesGameNetMessage@CvGame@@QAEXHHHH_N000@Z ; CvGame::selectedCitiesGameNetMessage

; 479  : 	return 0;

	xor	eax, eax

; 480  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSelectedCitiesGameNetMessage@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSelectedCitiesGameNetMessage
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
EXTRN	?cityPushOrder@CvGame@@QAEXPAVCvCity@@W4OrderTypes@@H_N22@Z:PROC ; CvGame::cityPushOrder
; Function compile flags: /Odtp
;	COMDAT ?lCityPushOrder@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eOrder$ = -20						; size = 4
_bAlt$ = -14						; size = 1
_bShift$ = -13						; size = 1
_pkCity$ = -12						; size = 4
_bCtrl$ = -5						; size = 1
_iData$ = -4						; size = 4
_L$ = 8							; size = 4
?lCityPushOrder@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lCityPushOrder, COMDAT

; 484  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 485  : 	CvCity* pkCity			= CvLuaCity::GetInstance(L, 1);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 486  : 	const OrderTypes eOrder	= (OrderTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOrder$[ebp], eax

; 487  : 	const int iData			= lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iData$[ebp], eax

; 488  : 	const bool bAlt			= luaL_optbool(L, 4, 0);

	push	0
	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bAlt$[ebp], al

; 489  : 	const bool bShift		= luaL_optbool(L, 5, 0);

	push	0
	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bShift$[ebp], al

; 490  : 	const bool bCtrl		= luaL_optbool(L, 6, 0);

	push	0
	push	6
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?luaL_optbool@@YA_NPAUlua_State@@H_N@Z	; luaL_optbool
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _bCtrl$[ebp], al

; 491  : 
; 492  : 	GetInstance()->cityPushOrder(pkCity, eOrder, iData, bAlt, bShift, bCtrl);

	movzx	eax, BYTE PTR _bCtrl$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bShift$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _bAlt$[ebp]
	push	edx
	mov	eax, DWORD PTR _iData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eOrder$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkCity$[ebp]
	push	edx
	push	0
	push	0
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	ecx, eax
	call	?cityPushOrder@CvGame@@QAEXPAVCvCity@@W4OrderTypes@@H_N22@Z ; CvGame::cityPushOrder

; 493  : 	return 0;

	xor	eax, eax

; 494  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCityPushOrder@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lCityPushOrder
_TEXT	ENDS
EXTRN	?CityPurchase@CvGame@@QAEXPAVCvCity@@W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z:PROC ; CvGame::CityPurchase
; Function compile flags: /Odtp
;	COMDAT ?lCityPurchaseUnit@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eUnitType$ = -12					; size = 4
_pkCity$ = -8						; size = 4
_ePurchaseYield$ = -4					; size = 4
_L$ = 8							; size = 4
?lCityPurchaseUnit@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lCityPurchaseUnit, COMDAT

; 498  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 499  : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 1);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 500  : 	const UnitTypes eUnitType = (UnitTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnitType$[ebp], eax

; 501  : 	const YieldTypes ePurchaseYield = (YieldTypes)lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePurchaseYield$[ebp], eax

; 502  : 
; 503  : 	GetInstance()->CityPurchase(pkCity, eUnitType, NO_BUILDING, NO_PROJECT, ePurchaseYield);

	mov	eax, DWORD PTR _ePurchaseYield$[ebp]
	push	eax
	push	-1
	push	-1
	mov	ecx, DWORD PTR _eUnitType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkCity$[ebp]
	push	edx
	push	0
	push	0
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	ecx, eax
	call	?CityPurchase@CvGame@@QAEXPAVCvCity@@W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvGame::CityPurchase

; 504  : 	return 0;

	xor	eax, eax

; 505  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCityPurchaseUnit@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lCityPurchaseUnit
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lCityPurchaseBuilding@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eBuildingType$ = -12					; size = 4
_pkCity$ = -8						; size = 4
_ePurchaseYield$ = -4					; size = 4
_L$ = 8							; size = 4
?lCityPurchaseBuilding@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCityPurchaseBuilding, COMDAT

; 509  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 510  : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 1);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 511  : 	const BuildingTypes eBuildingType = (BuildingTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuildingType$[ebp], eax

; 512  : 	const YieldTypes ePurchaseYield = (YieldTypes)lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePurchaseYield$[ebp], eax

; 513  : 
; 514  : 	GetInstance()->CityPurchase(pkCity, NO_UNIT, eBuildingType, NO_PROJECT, ePurchaseYield);

	mov	eax, DWORD PTR _ePurchaseYield$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _eBuildingType$[ebp]
	push	ecx
	push	-1
	mov	edx, DWORD PTR _pkCity$[ebp]
	push	edx
	push	0
	push	0
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	ecx, eax
	call	?CityPurchase@CvGame@@QAEXPAVCvCity@@W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvGame::CityPurchase

; 515  : 	return 0;

	xor	eax, eax

; 516  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCityPurchaseBuilding@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCityPurchaseBuilding
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lCityPurchaseProject@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eProjectType$ = -12					; size = 4
_pkCity$ = -8						; size = 4
_ePurchaseYield$ = -4					; size = 4
_L$ = 8							; size = 4
?lCityPurchaseProject@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCityPurchaseProject, COMDAT

; 520  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 521  : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 1);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 522  : 	const ProjectTypes eProjectType = (ProjectTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eProjectType$[ebp], eax

; 523  : 	const YieldTypes ePurchaseYield = (YieldTypes)lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePurchaseYield$[ebp], eax

; 524  : 
; 525  : 	GetInstance()->CityPurchase(pkCity, NO_UNIT, NO_BUILDING, eProjectType, ePurchaseYield);

	mov	eax, DWORD PTR _ePurchaseYield$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eProjectType$[ebp]
	push	ecx
	push	-1
	push	-1
	mov	edx, DWORD PTR _pkCity$[ebp]
	push	edx
	push	0
	push	0
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	ecx, eax
	call	?CityPurchase@CvGame@@QAEXPAVCvCity@@W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvGame::CityPurchase

; 526  : 	return 0;

	xor	eax, eax

; 527  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lCityPurchaseProject@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCityPurchaseProject
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum HurryTypes>
EXTRN	?getProductionPerPopulation@CvGame@@QAEHW4HurryTypes@@@Z:PROC ; CvGame::getProductionPerPopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetProductionPerPopulation@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProductionPerPopulation@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetProductionPerPopulation, COMDAT

; 531  : {

	push	ebp
	mov	ebp, esp

; 532  : 	return BasicLuaMethod(L, &CvGame::getProductionPerPopulation);

	push	OFFSET ?getProductionPerPopulation@CvGame@@QAEHW4HurryTypes@@@Z ; CvGame::getProductionPerPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4HurryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum HurryTypes>
	add	esp, 8

; 533  : }

	pop	ebp
	ret	0
?lGetProductionPerPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetProductionPerPopulation
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum VictoryTypes>
EXTRN	?getAdjustedPopulationPercent@CvGame@@QBEHW4VictoryTypes@@@Z:PROC ; CvGame::getAdjustedPopulationPercent
; Function compile flags: /Odtp
;	COMDAT ?lGetAdjustedPopulationPercent@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdjustedPopulationPercent@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAdjustedPopulationPercent, COMDAT

; 537  : {

	push	ebp
	mov	ebp, esp

; 538  : 	return BasicLuaMethod(L, &CvGame::getAdjustedPopulationPercent);

	push	OFFSET ?getAdjustedPopulationPercent@CvGame@@QBEHW4VictoryTypes@@@Z ; CvGame::getAdjustedPopulationPercent
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum VictoryTypes>
	add	esp, 8

; 539  : }

	pop	ebp
	ret	0
?lGetAdjustedPopulationPercent@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAdjustedPopulationPercent
_TEXT	ENDS
EXTRN	?getAdjustedLandPercent@CvGame@@QBEHW4VictoryTypes@@@Z:PROC ; CvGame::getAdjustedLandPercent
; Function compile flags: /Odtp
;	COMDAT ?lGetAdjustedLandPercent@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAdjustedLandPercent@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAdjustedLandPercent, COMDAT

; 543  : {

	push	ebp
	mov	ebp, esp

; 544  : 	return BasicLuaMethod(L, &CvGame::getAdjustedLandPercent);

	push	OFFSET ?getAdjustedLandPercent@CvGame@@QBEHW4VictoryTypes@@@Z ; CvGame::getAdjustedLandPercent
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum VictoryTypes>
	add	esp, 8

; 545  : }

	pop	ebp
	ret	0
?lGetAdjustedLandPercent@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAdjustedLandPercent
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
EXTRN	?GetUnitedNationsCountdown@CvGame@@QBEHXZ:PROC	; CvGame::GetUnitedNationsCountdown
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetUnitedNationsCountdown, COMDAT

; 549  : {

	push	ebp
	mov	ebp, esp

; 550  : 	return BasicLuaMethod(L, &CvGame::GetUnitedNationsCountdown);

	push	OFFSET ?GetUnitedNationsCountdown@CvGame@@QBEHXZ ; CvGame::GetUnitedNationsCountdown
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 551  : }

	pop	ebp
	ret	0
?lGetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetUnitedNationsCountdown
_TEXT	ENDS
EXTRN	?SetUnitedNationsCountdown@CvGame@@QAEXH@Z:PROC	; CvGame::SetUnitedNationsCountdown
EXTRN	_luaL_checkinteger:PROC
; Function compile flags: /Odtp
;	COMDAT ?lSetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226511 = -8						; size = 4
_iTurns$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetUnitedNationsCountdown, COMDAT

; 555  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 556  : 	int iTurns = luaL_checkint(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _iTurns$[ebp], eax

; 557  : 	GC.getGame().SetUnitedNationsCountdown(iTurns);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T226511[ebp], ecx
	mov	edx, DWORD PTR _iTurns$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T226511[ebp]
	call	?SetUnitedNationsCountdown@CvGame@@QAEXH@Z ; CvGame::SetUnitedNationsCountdown

; 558  : 	return 0;

	xor	eax, eax

; 559  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetUnitedNationsCountdown@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetUnitedNationsCountdown
_TEXT	ENDS
EXTRN	?countCivPlayersAlive@CvGame@@QBEHXZ:PROC	; CvGame::countCivPlayersAlive
; Function compile flags: /Odtp
;	COMDAT ?lCountCivPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountCivPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountCivPlayersAlive, COMDAT

; 563  : {

	push	ebp
	mov	ebp, esp

; 564  : 	return BasicLuaMethod(L, &CvGame::countCivPlayersAlive);

	push	OFFSET ?countCivPlayersAlive@CvGame@@QBEHXZ ; CvGame::countCivPlayersAlive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 565  : }

	pop	ebp
	ret	0
?lCountCivPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountCivPlayersAlive
_TEXT	ENDS
EXTRN	?countCivPlayersEverAlive@CvGame@@QBEHXZ:PROC	; CvGame::countCivPlayersEverAlive
; Function compile flags: /Odtp
;	COMDAT ?lCountCivPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountCivPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountCivPlayersEverAlive, COMDAT

; 569  : {

	push	ebp
	mov	ebp, esp

; 570  : 	return BasicLuaMethod(L, &CvGame::countCivPlayersEverAlive);

	push	OFFSET ?countCivPlayersEverAlive@CvGame@@QBEHXZ ; CvGame::countCivPlayersEverAlive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 571  : }

	pop	ebp
	ret	0
?lCountCivPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountCivPlayersEverAlive
_TEXT	ENDS
EXTRN	?countCivTeamsAlive@CvGame@@QBEHXZ:PROC		; CvGame::countCivTeamsAlive
; Function compile flags: /Odtp
;	COMDAT ?lCountCivTeamsAlive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountCivTeamsAlive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountCivTeamsAlive, COMDAT

; 575  : {

	push	ebp
	mov	ebp, esp

; 576  : 	return BasicLuaMethod(L, &CvGame::countCivTeamsAlive);

	push	OFFSET ?countCivTeamsAlive@CvGame@@QBEHXZ ; CvGame::countCivTeamsAlive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 577  : }

	pop	ebp
	ret	0
?lCountCivTeamsAlive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountCivTeamsAlive
_TEXT	ENDS
EXTRN	?countCivTeamsEverAlive@CvGame@@QBEHXZ:PROC	; CvGame::countCivTeamsEverAlive
; Function compile flags: /Odtp
;	COMDAT ?lCountCivTeamsEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountCivTeamsEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountCivTeamsEverAlive, COMDAT

; 581  : {

	push	ebp
	mov	ebp, esp

; 582  : 	return BasicLuaMethod(L, &CvGame::countCivTeamsEverAlive);

	push	OFFSET ?countCivTeamsEverAlive@CvGame@@QBEHXZ ; CvGame::countCivTeamsEverAlive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 583  : }

	pop	ebp
	ret	0
?lCountCivTeamsEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountCivTeamsEverAlive
_TEXT	ENDS
EXTRN	?countHumanPlayersAlive@CvGame@@QBEHXZ:PROC	; CvGame::countHumanPlayersAlive
; Function compile flags: /Odtp
;	COMDAT ?lCountHumanPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountHumanPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountHumanPlayersAlive, COMDAT

; 587  : {

	push	ebp
	mov	ebp, esp

; 588  : 	return BasicLuaMethod(L, &CvGame::countHumanPlayersAlive);

	push	OFFSET ?countHumanPlayersAlive@CvGame@@QBEHXZ ; CvGame::countHumanPlayersAlive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 589  : }

	pop	ebp
	ret	0
?lCountHumanPlayersAlive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountHumanPlayersAlive
_TEXT	ENDS
EXTRN	?countHumanPlayersEverAlive@CvGame@@QBEHXZ:PROC	; CvGame::countHumanPlayersEverAlive
; Function compile flags: /Odtp
;	COMDAT ?lCountHumanPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountHumanPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountHumanPlayersEverAlive, COMDAT

; 593  : {

	push	ebp
	mov	ebp, esp

; 594  : 	return BasicLuaMethod(L, &CvGame::countHumanPlayersEverAlive);

	push	OFFSET ?countHumanPlayersEverAlive@CvGame@@QBEHXZ ; CvGame::countHumanPlayersEverAlive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 595  : }

	pop	ebp
	ret	0
?lCountHumanPlayersEverAlive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountHumanPlayersEverAlive
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
EXTRN	?countTotalCivPower@CvGame@@QAEHXZ:PROC		; CvGame::countTotalCivPower
; Function compile flags: /Odtp
;	COMDAT ?lCountTotalCivPower@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountTotalCivPower@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountTotalCivPower, COMDAT

; 599  : {

	push	ebp
	mov	ebp, esp

; 600  : 	return BasicLuaMethod(L, &CvGame::countTotalCivPower);

	push	OFFSET ?countTotalCivPower@CvGame@@QAEHXZ ; CvGame::countTotalCivPower
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 601  : }

	pop	ebp
	ret	0
?lCountTotalCivPower@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountTotalCivPower
_TEXT	ENDS
EXTRN	?countTotalNukeUnits@CvGame@@QAEHXZ:PROC	; CvGame::countTotalNukeUnits
; Function compile flags: /Odtp
;	COMDAT ?lCountTotalNukeUnits@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountTotalNukeUnits@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountTotalNukeUnits, COMDAT

; 605  : {

	push	ebp
	mov	ebp, esp

; 606  : 	return BasicLuaMethod(L, &CvGame::countTotalNukeUnits);

	push	OFFSET ?countTotalNukeUnits@CvGame@@QAEHXZ ; CvGame::countTotalNukeUnits
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 607  : }

	pop	ebp
	ret	0
?lCountTotalNukeUnits@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountTotalNukeUnits
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TechTypes>
EXTRN	?countKnownTechNumTeams@CvGame@@QAEHW4TechTypes@@@Z:PROC ; CvGame::countKnownTechNumTeams
; Function compile flags: /Odtp
;	COMDAT ?lCountKnownTechNumTeams@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountKnownTechNumTeams@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountKnownTechNumTeams, COMDAT

; 611  : {

	push	ebp
	mov	ebp, esp

; 612  : 	return BasicLuaMethod(L, &CvGame::countKnownTechNumTeams);

	push	OFFSET ?countKnownTechNumTeams@CvGame@@QAEHW4TechTypes@@@Z ; CvGame::countKnownTechNumTeams
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TechTypes>
	add	esp, 8

; 613  : }

	pop	ebp
	ret	0
?lCountKnownTechNumTeams@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountKnownTechNumTeams
_TEXT	ENDS
EXTRN	?goldenAgeLength@CvGame@@QBEHXZ:PROC		; CvGame::goldenAgeLength
; Function compile flags: /Odtp
;	COMDAT ?lGoldenAgeLength@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGoldenAgeLength@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGoldenAgeLength, COMDAT

; 617  : {

	push	ebp
	mov	ebp, esp

; 618  : 	return BasicLuaMethod(L, &CvGame::goldenAgeLength);

	push	OFFSET ?goldenAgeLength@CvGame@@QBEHXZ	; CvGame::goldenAgeLength
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 619  : }

	pop	ebp
	ret	0
?lGoldenAgeLength@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGoldenAgeLength
_TEXT	ENDS
EXTRN	?victoryDelay@CvGame@@QBEHW4VictoryTypes@@@Z:PROC ; CvGame::victoryDelay
; Function compile flags: /Odtp
;	COMDAT ?lVictoryDelay@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lVictoryDelay@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lVictoryDelay, COMDAT

; 623  : {

	push	ebp
	mov	ebp, esp

; 624  : 	return BasicLuaMethod(L, &CvGame::victoryDelay);

	push	OFFSET ?victoryDelay@CvGame@@QBEHW4VictoryTypes@@@Z ; CvGame::victoryDelay
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum VictoryTypes>
	add	esp, 8

; 625  : }

	pop	ebp
	ret	0
?lVictoryDelay@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lVictoryDelay
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ImprovementTypes@@PBVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4ImprovementTypes@@PBVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum ImprovementTypes,CvPlot const *>
EXTRN	?getImprovementUpgradeTime@CvGame@@QBEHW4ImprovementTypes@@PBVCvPlot@@@Z:PROC ; CvGame::getImprovementUpgradeTime
; Function compile flags: /Odtp
;	COMDAT ?lGetImprovementUpgradeTime@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetImprovementUpgradeTime@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetImprovementUpgradeTime, COMDAT

; 629  : {

	push	ebp
	mov	ebp, esp

; 630  : 	return BasicLuaMethod(L, &CvGame::getImprovementUpgradeTime);

	push	OFFSET ?getImprovementUpgradeTime@CvGame@@QBEHW4ImprovementTypes@@PBVCvPlot@@@Z ; CvGame::getImprovementUpgradeTime
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ImprovementTypes@@PBVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4ImprovementTypes@@PBVCvPlot@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum ImprovementTypes,CvPlot const *>
	add	esp, 8

; 631  : }

	pop	ebp
	ret	0
?lGetImprovementUpgradeTime@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetImprovementUpgradeTime
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
EXTRN	?canTrainNukes@CvGame@@QBE_NXZ:PROC		; CvGame::canTrainNukes
; Function compile flags: /Odtp
;	COMDAT ?lCanTrainNukes@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanTrainNukes@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lCanTrainNukes, COMDAT

; 635  : {

	push	ebp
	mov	ebp, esp

; 636  : 	return BasicLuaMethod(L, &CvGame::canTrainNukes);

	push	OFFSET ?canTrainNukes@CvGame@@QBE_NXZ	; CvGame::canTrainNukes
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 637  : }

	pop	ebp
	ret	0
?lCanTrainNukes@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lCanTrainNukes
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4EraTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum EraTypes>
EXTRN	?getCurrentEra@CvGame@@QBE?AW4EraTypes@@XZ:PROC	; CvGame::getCurrentEra
; Function compile flags: /Odtp
;	COMDAT ?lGetCurrentEra@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCurrentEra@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetCurrentEra, COMDAT

; 641  : {

	push	ebp
	mov	ebp, esp

; 642  : 	return BasicLuaMethod(L, &CvGame::getCurrentEra);

	push	OFFSET ?getCurrentEra@CvGame@@QBE?AW4EraTypes@@XZ ; CvGame::getCurrentEra
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4EraTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum EraTypes>
	add	esp, 8

; 643  : }

	pop	ebp
	ret	0
?lGetCurrentEra@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetCurrentEra
_TEXT	ENDS
EXTRN	__imp_??1String@Localization@@UAE@XZ:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDXZ:PROC
EXTRN	?GetDiploResponse@CvGame@@QAE?AVString@Localization@@PBD0ABV23@1@Z:PROC ; CvGame::GetDiploResponse
EXTRN	__imp_?Empty@String@Localization@@2V12@A:BYTE
EXTRN	_luaL_checklstring:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__unwindtable$?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226542 = -108						; size = 4
_szResponseType$ = -104					; size = 4
_game$ = -100						; size = 4
_szLeaderType$ = -96					; size = 4
_response$ = -92					; size = 80
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetDiploResponse, COMDAT

; 647  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 96					; 00000060H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 648  : 	CvGame& game = GC.getGame();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _game$[ebp], eax

; 649  : 	const char* szLeaderType = luaL_checkstring(L, 1);

	push	0
	push	1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checklstring
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _szLeaderType$[ebp], eax

; 650  : 	const char* szResponseType = luaL_checkstring(L, 2);

	push	0
	push	2
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_checklstring
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _szResponseType$[ebp], eax

; 651  : 
; 652  : 	Localization::String response
; 653  : 		= game.GetDiploResponse(szLeaderType, szResponseType, Localization::String::Empty, Localization::String::Empty);

	mov	eax, DWORD PTR __imp_?Empty@String@Localization@@2V12@A
	push	eax
	mov	ecx, DWORD PTR __imp_?Empty@String@Localization@@2V12@A
	push	ecx
	mov	edx, DWORD PTR _szResponseType$[ebp]
	push	edx
	mov	eax, DWORD PTR _szLeaderType$[ebp]
	push	eax
	lea	ecx, DWORD PTR _response$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _game$[ebp]
	call	?GetDiploResponse@CvGame@@QAE?AVString@Localization@@PBD0ABV23@1@Z ; CvGame::GetDiploResponse
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 654  : 
; 655  : 	lua_pushstring(L, response.toUTF8());

	lea	ecx, DWORD PTR _response$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 656  : 
; 657  : 	return 1;

	mov	DWORD PTR $T226542[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _response$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	eax, DWORD PTR $T226542[ebp]

; 658  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _response$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__ehhandler$?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetDiploResponse@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetDiploResponse
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes>
EXTRN	?getActiveTeam@CvGame@@QAE?AW4TeamTypes@@XZ:PROC ; CvGame::getActiveTeam
; Function compile flags: /Odtp
;	COMDAT ?lGetActiveTeam@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetActiveTeam@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetActiveTeam, COMDAT

; 662  : {

	push	ebp
	mov	ebp, esp

; 663  : 	return BasicLuaMethod(L, &CvGame::getActiveTeam);

	push	OFFSET ?getActiveTeam@CvGame@@QAE?AW4TeamTypes@@XZ ; CvGame::getActiveTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes>
	add	esp, 8

; 664  : }

	pop	ebp
	ret	0
?lGetActiveTeam@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetActiveTeam
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4CivilizationTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum CivilizationTypes>
EXTRN	?getActiveCivilizationType@CvGame@@QAE?AW4CivilizationTypes@@XZ:PROC ; CvGame::getActiveCivilizationType
; Function compile flags: /Odtp
;	COMDAT ?lGetActiveCivilizationType@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetActiveCivilizationType@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetActiveCivilizationType, COMDAT

; 668  : {

	push	ebp
	mov	ebp, esp

; 669  : 	return BasicLuaMethod(L, &CvGame::getActiveCivilizationType);

	push	OFFSET ?getActiveCivilizationType@CvGame@@QAE?AW4CivilizationTypes@@XZ ; CvGame::getActiveCivilizationType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4CivilizationTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum CivilizationTypes>
	add	esp, 8

; 670  : }

	pop	ebp
	ret	0
?lGetActiveCivilizationType@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetActiveCivilizationType
_TEXT	ENDS
EXTRN	?isNetworkMultiPlayer@CvGame@@QBE_NXZ:PROC	; CvGame::isNetworkMultiPlayer
; Function compile flags: /Odtp
;	COMDAT ?lIsNetworkMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNetworkMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsNetworkMultiPlayer, COMDAT

; 674  : {

	push	ebp
	mov	ebp, esp

; 675  : 	return BasicLuaMethod(L, &CvGame::isNetworkMultiPlayer);

	push	OFFSET ?isNetworkMultiPlayer@CvGame@@QBE_NXZ ; CvGame::isNetworkMultiPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 676  : }

	pop	ebp
	ret	0
?lIsNetworkMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsNetworkMultiPlayer
_TEXT	ENDS
EXTRN	?isGameMultiPlayer@CvGame@@QBE_NXZ:PROC		; CvGame::isGameMultiPlayer
; Function compile flags: /Odtp
;	COMDAT ?lIsGameMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsGameMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsGameMultiPlayer, COMDAT

; 680  : {

	push	ebp
	mov	ebp, esp

; 681  : 	return BasicLuaMethod(L, &CvGame::isGameMultiPlayer);

	push	OFFSET ?isGameMultiPlayer@CvGame@@QBE_NXZ ; CvGame::isGameMultiPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 682  : }

	pop	ebp
	ret	0
?lIsGameMultiPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsGameMultiPlayer
_TEXT	ENDS
EXTRN	?isTeamGame@CvGame@@QBE_NXZ:PROC		; CvGame::isTeamGame
; Function compile flags: /Odtp
;	COMDAT ?lIsTeamGame@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsTeamGame@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsTeamGame, COMDAT

; 686  : {

	push	ebp
	mov	ebp, esp

; 687  : 	return BasicLuaMethod(L, &CvGame::isTeamGame);

	push	OFFSET ?isTeamGame@CvGame@@QBE_NXZ	; CvGame::isTeamGame
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 688  : }

	pop	ebp
	ret	0
?lIsTeamGame@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsTeamGame
_TEXT	ENDS
PUBLIC	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod
EXTRN	?ReviveActivePlayer@CvGame@@QAEXXZ:PROC		; CvGame::ReviveActivePlayer
; Function compile flags: /Odtp
;	COMDAT ?lReviveActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lReviveActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lReviveActivePlayer, COMDAT

; 692  : {

	push	ebp
	mov	ebp, esp

; 693  : 	return BasicLuaMethod(L, &CvGame::ReviveActivePlayer);

	push	OFFSET ?ReviveActivePlayer@CvGame@@QAEXXZ ; CvGame::ReviveActivePlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod
	add	esp, 8

; 694  : }

	pop	ebp
	ret	0
?lReviveActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lReviveActivePlayer
_TEXT	ENDS
EXTRN	?getNumHumanPlayers@CvGame@@QAEHXZ:PROC		; CvGame::getNumHumanPlayers
; Function compile flags: /Odtp
;	COMDAT ?lGetNumHumanPlayers@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumHumanPlayers@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumHumanPlayers, COMDAT

; 698  : {

	push	ebp
	mov	ebp, esp

; 699  : 	return BasicLuaMethod(L, &CvGame::getNumHumanPlayers);

	push	OFFSET ?getNumHumanPlayers@CvGame@@QAEHXZ ; CvGame::getNumHumanPlayers
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 700  : }

	pop	ebp
	ret	0
?lGetNumHumanPlayers@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumHumanPlayers
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum PlayerTypes>
EXTRN	?getNumSequentialHumans@CvGame@@QAEHW4PlayerTypes@@@Z:PROC ; CvGame::getNumSequentialHumans
; Function compile flags: /Odtp
;	COMDAT ?lGetNumSequentialHumans@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumSequentialHumans@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumSequentialHumans, COMDAT

; 704  : {

	push	ebp
	mov	ebp, esp

; 705  : 	return BasicLuaMethod(L, &CvGame::getNumSequentialHumans);

	push	OFFSET ?getNumSequentialHumans@CvGame@@QAEHW4PlayerTypes@@@Z ; CvGame::getNumSequentialHumans
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum PlayerTypes>
	add	esp, 8

; 706  : }

	pop	ebp
	ret	0
?lGetNumSequentialHumans@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumSequentialHumans
_TEXT	ENDS
EXTRN	?getGameTurn@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurn
; Function compile flags: /Odtp
;	COMDAT ?lGetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetGameTurn, COMDAT

; 710  : {

	push	ebp
	mov	ebp, esp

; 711  : 	return BasicLuaMethod(L, &CvGame::getGameTurn);

	push	OFFSET ?getGameTurn@CvGame@@QAEHXZ	; CvGame::getGameTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 712  : }

	pop	ebp
	ret	0
?lGetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetGameTurn
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
EXTRN	?setGameTurn@CvGame@@QAEXH@Z:PROC		; CvGame::setGameTurn
; Function compile flags: /Odtp
;	COMDAT ?lSetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetGameTurn, COMDAT

; 716  : {

	push	ebp
	mov	ebp, esp

; 717  : 	return BasicLuaMethod(L, &CvGame::setGameTurn);

	push	OFFSET ?setGameTurn@CvGame@@QAEXH@Z	; CvGame::setGameTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 718  : }

	pop	ebp
	ret	0
?lSetGameTurn@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetGameTurn
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int>
EXTRN	?getTurnYear@CvGame@@QAEHH@Z:PROC		; CvGame::getTurnYear
; Function compile flags: /Odtp
;	COMDAT ?lGetTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetTurnYear, COMDAT

; 722  : {

	push	ebp
	mov	ebp, esp

; 723  : 	return BasicLuaMethod(L, &CvGame::getTurnYear);

	push	OFFSET ?getTurnYear@CvGame@@QAEHH@Z	; CvGame::getTurnYear
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int>
	add	esp, 8

; 724  : }

	pop	ebp
	ret	0
?lGetTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetTurnYear
_TEXT	ENDS
EXTRN	?getGameTurnYear@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurnYear
; Function compile flags: /Odtp
;	COMDAT ?lGetGameTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGameTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetGameTurnYear, COMDAT

; 728  : {

	push	ebp
	mov	ebp, esp

; 729  : 	return BasicLuaMethod(L, &CvGame::getGameTurnYear);

	push	OFFSET ?getGameTurnYear@CvGame@@QAEHXZ	; CvGame::getGameTurnYear
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 730  : }

	pop	ebp
	ret	0
?lGetGameTurnYear@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetGameTurnYear
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
EXTRN	?setDateStr@CvGameTextMgr@@SAXAAVCvString@@H_NW4CalendarTypes@@HW4GameSpeedTypes@@@Z:PROC ; CvGameTextMgr::setDateStr
EXTRN	?getCalendar@CvGame@@QBE?AW4CalendarTypes@@XZ:PROC ; CvGame::getCalendar
EXTRN	?getStartYear@CvGame@@QBEHXZ:PROC		; CvGame::getStartYear
EXTRN	?getGameSpeedType@CvGame@@QBE?AW4GameSpeedTypes@@XZ:PROC ; CvGame::getGameSpeedType
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226585 = -52						; size = 4
_game$ = -48						; size = 4
_strString$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetTurnString, COMDAT

; 734  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 735  : 	CvGame& game = GC.getGame();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _game$[ebp], eax

; 736  : 	CvString strString;

	lea	ecx, DWORD PTR _strString$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 737  : 	CvGameTextMgr::setDateStr(strString,
; 738  : 		game.getGameTurn(),
; 739  : 		false,
; 740  : 		game.getCalendar(),
; 741  : 		game.getStartYear(),
; 742  : 		game.getGameSpeedType());

	mov	ecx, DWORD PTR _game$[ebp]
	call	?getGameSpeedType@CvGame@@QBE?AW4GameSpeedTypes@@XZ ; CvGame::getGameSpeedType
	push	eax
	mov	ecx, DWORD PTR _game$[ebp]
	call	?getStartYear@CvGame@@QBEHXZ		; CvGame::getStartYear
	push	eax
	mov	ecx, DWORD PTR _game$[ebp]
	call	?getCalendar@CvGame@@QBE?AW4CalendarTypes@@XZ ; CvGame::getCalendar
	push	eax
	push	0
	mov	ecx, DWORD PTR _game$[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	push	eax
	lea	ecx, DWORD PTR _strString$[ebp]
	push	ecx
	call	?setDateStr@CvGameTextMgr@@SAXAAVCvString@@H_NW4CalendarTypes@@HW4GameSpeedTypes@@@Z ; CvGameTextMgr::setDateStr
	add	esp, 24					; 00000018H

; 743  : 
; 744  : 	lua_pushstring(L, strString);

	lea	ecx, DWORD PTR _strString$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 745  : 	return 1;

	mov	DWORD PTR $T226585[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strString$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T226585[ebp]

; 746  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _strString$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTurnString@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetTurnString
EXTRN	?getElapsedGameTurns@CvGame@@QBEHXZ:PROC	; CvGame::getElapsedGameTurns
; Function compile flags: /Odtp
;	COMDAT ?lGetElapsedGameTurns@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetElapsedGameTurns@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetElapsedGameTurns, COMDAT

; 750  : {

	push	ebp
	mov	ebp, esp

; 751  : 	return BasicLuaMethod(L, &CvGame::getElapsedGameTurns);

	push	OFFSET ?getElapsedGameTurns@CvGame@@QBEHXZ ; CvGame::getElapsedGameTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 752  : }

	pop	ebp
	ret	0
?lGetElapsedGameTurns@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetElapsedGameTurns
_TEXT	ENDS
EXTRN	?getMaxTurns@CvGame@@QBEHXZ:PROC		; CvGame::getMaxTurns
; Function compile flags: /Odtp
;	COMDAT ?lGetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetMaxTurns, COMDAT

; 756  : {

	push	ebp
	mov	ebp, esp

; 757  : 	return BasicLuaMethod(L, &CvGame::getMaxTurns);

	push	OFFSET ?getMaxTurns@CvGame@@QBEHXZ	; CvGame::getMaxTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 758  : }

	pop	ebp
	ret	0
?lGetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetMaxTurns
_TEXT	ENDS
EXTRN	?setMaxTurns@CvGame@@QAEXH@Z:PROC		; CvGame::setMaxTurns
; Function compile flags: /Odtp
;	COMDAT ?lSetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetMaxTurns, COMDAT

; 762  : {

	push	ebp
	mov	ebp, esp

; 763  : 	return BasicLuaMethod(L, &CvGame::setMaxTurns);

	push	OFFSET ?setMaxTurns@CvGame@@QAEXH@Z	; CvGame::setMaxTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 764  : }

	pop	ebp
	ret	0
?lSetMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetMaxTurns
_TEXT	ENDS
EXTRN	?changeMaxTurns@CvGame@@QAEXH@Z:PROC		; CvGame::changeMaxTurns
; Function compile flags: /Odtp
;	COMDAT ?lChangeMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lChangeMaxTurns, COMDAT

; 768  : {

	push	ebp
	mov	ebp, esp

; 769  : 	return BasicLuaMethod(L, &CvGame::changeMaxTurns);

	push	OFFSET ?changeMaxTurns@CvGame@@QAEXH@Z	; CvGame::changeMaxTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 770  : }

	pop	ebp
	ret	0
?lChangeMaxTurns@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lChangeMaxTurns
_TEXT	ENDS
EXTRN	?getMaxCityElimination@CvGame@@QBEHXZ:PROC	; CvGame::getMaxCityElimination
; Function compile flags: /Odtp
;	COMDAT ?lGetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetMaxCityElimination, COMDAT

; 774  : {

	push	ebp
	mov	ebp, esp

; 775  : 	return BasicLuaMethod(L, &CvGame::getMaxCityElimination);

	push	OFFSET ?getMaxCityElimination@CvGame@@QBEHXZ ; CvGame::getMaxCityElimination
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 776  : }

	pop	ebp
	ret	0
?lGetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetMaxCityElimination
_TEXT	ENDS
EXTRN	?setMaxCityElimination@CvGame@@QAEXH@Z:PROC	; CvGame::setMaxCityElimination
; Function compile flags: /Odtp
;	COMDAT ?lSetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetMaxCityElimination, COMDAT

; 780  : {

	push	ebp
	mov	ebp, esp

; 781  : 	return BasicLuaMethod(L, &CvGame::setMaxCityElimination);

	push	OFFSET ?setMaxCityElimination@CvGame@@QAEXH@Z ; CvGame::setMaxCityElimination
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 782  : }

	pop	ebp
	ret	0
?lSetMaxCityElimination@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetMaxCityElimination
_TEXT	ENDS
EXTRN	?getNumAdvancedStartPoints@CvGame@@QBEHXZ:PROC	; CvGame::getNumAdvancedStartPoints
; Function compile flags: /Odtp
;	COMDAT ?lGetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumAdvancedStartPoints, COMDAT

; 786  : {

	push	ebp
	mov	ebp, esp

; 787  : 	return BasicLuaMethod(L, &CvGame::getNumAdvancedStartPoints);

	push	OFFSET ?getNumAdvancedStartPoints@CvGame@@QBEHXZ ; CvGame::getNumAdvancedStartPoints
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 788  : }

	pop	ebp
	ret	0
?lGetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumAdvancedStartPoints
_TEXT	ENDS
EXTRN	?setNumAdvancedStartPoints@CvGame@@QAEXH@Z:PROC	; CvGame::setNumAdvancedStartPoints
; Function compile flags: /Odtp
;	COMDAT ?lSetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetNumAdvancedStartPoints, COMDAT

; 792  : {

	push	ebp
	mov	ebp, esp

; 793  : 	return BasicLuaMethod(L, &CvGame::setNumAdvancedStartPoints);

	push	OFFSET ?setNumAdvancedStartPoints@CvGame@@QAEXH@Z ; CvGame::setNumAdvancedStartPoints
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 794  : }

	pop	ebp
	ret	0
?lSetNumAdvancedStartPoints@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetNumAdvancedStartPoints
_TEXT	ENDS
EXTRN	?getStartTurn@CvGame@@QBEHXZ:PROC		; CvGame::getStartTurn
; Function compile flags: /Odtp
;	COMDAT ?lGetStartTurn@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetStartTurn@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetStartTurn, COMDAT

; 798  : {

	push	ebp
	mov	ebp, esp

; 799  : 	return BasicLuaMethod(L, &CvGame::getStartTurn);

	push	OFFSET ?getStartTurn@CvGame@@QBEHXZ	; CvGame::getStartTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 800  : }

	pop	ebp
	ret	0
?lGetStartTurn@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetStartTurn
_TEXT	ENDS
EXTRN	?GetWinningTurn@CvGame@@QBEHXZ:PROC		; CvGame::GetWinningTurn
; Function compile flags: /Odtp
;	COMDAT ?lGetWinningTurn@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWinningTurn@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetWinningTurn, COMDAT

; 804  : {

	push	ebp
	mov	ebp, esp

; 805  : 	return BasicLuaMethod(L, &CvGame::GetWinningTurn);

	push	OFFSET ?GetWinningTurn@CvGame@@QBEHXZ	; CvGame::GetWinningTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 806  : }

	pop	ebp
	ret	0
?lGetWinningTurn@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetWinningTurn
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetStartYear, COMDAT

; 810  : {

	push	ebp
	mov	ebp, esp

; 811  : 	return BasicLuaMethod(L, &CvGame::getStartYear);

	push	OFFSET ?getStartYear@CvGame@@QBEHXZ	; CvGame::getStartYear
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 812  : }

	pop	ebp
	ret	0
?lGetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetStartYear
_TEXT	ENDS
EXTRN	?setStartYear@CvGame@@QAEXH@Z:PROC		; CvGame::setStartYear
; Function compile flags: /Odtp
;	COMDAT ?lSetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetStartYear, COMDAT

; 816  : {

	push	ebp
	mov	ebp, esp

; 817  : 	return BasicLuaMethod(L, &CvGame::setStartYear);

	push	OFFSET ?setStartYear@CvGame@@QAEXH@Z	; CvGame::setStartYear
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 818  : }

	pop	ebp
	ret	0
?lSetStartYear@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetStartYear
_TEXT	ENDS
EXTRN	?getEstimateEndTurn@CvGame@@QBEHXZ:PROC		; CvGame::getEstimateEndTurn
; Function compile flags: /Odtp
;	COMDAT ?lGetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetEstimateEndTurn, COMDAT

; 822  : {

	push	ebp
	mov	ebp, esp

; 823  : 	return BasicLuaMethod(L, &CvGame::getEstimateEndTurn);

	push	OFFSET ?getEstimateEndTurn@CvGame@@QBEHXZ ; CvGame::getEstimateEndTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 824  : }

	pop	ebp
	ret	0
?lGetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetEstimateEndTurn
_TEXT	ENDS
EXTRN	?setEstimateEndTurn@CvGame@@QAEXH@Z:PROC	; CvGame::setEstimateEndTurn
; Function compile flags: /Odtp
;	COMDAT ?lSetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetEstimateEndTurn, COMDAT

; 828  : {

	push	ebp
	mov	ebp, esp

; 829  : 	return BasicLuaMethod(L, &CvGame::setEstimateEndTurn);

	push	OFFSET ?setEstimateEndTurn@CvGame@@QAEXH@Z ; CvGame::setEstimateEndTurn
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 830  : }

	pop	ebp
	ret	0
?lSetEstimateEndTurn@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetEstimateEndTurn
_TEXT	ENDS
EXTRN	?getTurnSlice@CvGame@@QBEHXZ:PROC		; CvGame::getTurnSlice
; Function compile flags: /Odtp
;	COMDAT ?lGetTurnSlice@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTurnSlice@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetTurnSlice, COMDAT

; 834  : {

	push	ebp
	mov	ebp, esp

; 835  : 	return BasicLuaMethod(L, &CvGame::getTurnSlice);

	push	OFFSET ?getTurnSlice@CvGame@@QBEHXZ	; CvGame::getTurnSlice
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 836  : }

	pop	ebp
	ret	0
?lGetTurnSlice@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetTurnSlice
_TEXT	ENDS
EXTRN	?getMinutesPlayed@CvGame@@QBEHXZ:PROC		; CvGame::getMinutesPlayed
; Function compile flags: /Odtp
;	COMDAT ?lGetMinutesPlayed@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMinutesPlayed@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetMinutesPlayed, COMDAT

; 840  : {

	push	ebp
	mov	ebp, esp

; 841  : 	return BasicLuaMethod(L, &CvGame::getMinutesPlayed);

	push	OFFSET ?getMinutesPlayed@CvGame@@QBEHXZ	; CvGame::getMinutesPlayed
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 842  : }

	pop	ebp
	ret	0
?lGetMinutesPlayed@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetMinutesPlayed
_TEXT	ENDS
EXTRN	?getTargetScore@CvGame@@QBEHXZ:PROC		; CvGame::getTargetScore
; Function compile flags: /Odtp
;	COMDAT ?lGetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetTargetScore, COMDAT

; 846  : {

	push	ebp
	mov	ebp, esp

; 847  : 	return BasicLuaMethod(L, &CvGame::getTargetScore);

	push	OFFSET ?getTargetScore@CvGame@@QBEHXZ	; CvGame::getTargetScore
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 848  : }

	pop	ebp
	ret	0
?lGetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetTargetScore
_TEXT	ENDS
EXTRN	?setTargetScore@CvGame@@QAEXH@Z:PROC		; CvGame::setTargetScore
; Function compile flags: /Odtp
;	COMDAT ?lSetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetTargetScore, COMDAT

; 852  : {

	push	ebp
	mov	ebp, esp

; 853  : 	return BasicLuaMethod(L, &CvGame::setTargetScore);

	push	OFFSET ?setTargetScore@CvGame@@QAEXH@Z	; CvGame::setTargetScore
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 854  : }

	pop	ebp
	ret	0
?lSetTargetScore@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetTargetScore
_TEXT	ENDS
EXTRN	?IsStaticTutorialActive@CvGame@@QBE_NXZ:PROC	; CvGame::IsStaticTutorialActive
; Function compile flags: /Odtp
;	COMDAT ?lIsStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsStaticTutorialActive, COMDAT

; 857  : {

	push	ebp
	mov	ebp, esp

; 858  : 	return BasicLuaMethod(L, &CvGame::IsStaticTutorialActive);

	push	OFFSET ?IsStaticTutorialActive@CvGame@@QBE_NXZ ; CvGame::IsStaticTutorialActive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 859  : }

	pop	ebp
	ret	0
?lIsStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsStaticTutorialActive
_TEXT	ENDS
EXTRN	?SetStaticTutorialActive@CvGame@@QAEX_N@Z:PROC	; CvGame::SetStaticTutorialActive
; Function compile flags: /Odtp
;	COMDAT ?lSetStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetStaticTutorialActive, COMDAT

; 862  : {

	push	ebp
	mov	ebp, esp

; 863  : 	return BasicLuaMethod(L, &CvGame::SetStaticTutorialActive);

	push	OFFSET ?SetStaticTutorialActive@CvGame@@QAEX_N@Z ; CvGame::SetStaticTutorialActive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 864  : }

	pop	ebp
	ret	0
?lSetStaticTutorialActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetStaticTutorialActive
_TEXT	ENDS
EXTRN	?IsEverRightClickMoved@CvGame@@QBE_NXZ:PROC	; CvGame::IsEverRightClickMoved
; Function compile flags: /Odtp
;	COMDAT ?lIsEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsEverRightClickMoved, COMDAT

; 867  : {

	push	ebp
	mov	ebp, esp

; 868  : 	return BasicLuaMethod(L, &CvGame::IsEverRightClickMoved);

	push	OFFSET ?IsEverRightClickMoved@CvGame@@QBE_NXZ ; CvGame::IsEverRightClickMoved
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 869  : }

	pop	ebp
	ret	0
?lIsEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsEverRightClickMoved
_TEXT	ENDS
EXTRN	?SetEverRightClickMoved@CvGame@@QAEX_N@Z:PROC	; CvGame::SetEverRightClickMoved
; Function compile flags: /Odtp
;	COMDAT ?lSetEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetEverRightClickMoved, COMDAT

; 872  : {

	push	ebp
	mov	ebp, esp

; 873  : 	return BasicLuaMethod(L, &CvGame::SetEverRightClickMoved);

	push	OFFSET ?SetEverRightClickMoved@CvGame@@QAEX_N@Z ; CvGame::SetEverRightClickMoved
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 874  : }

	pop	ebp
	ret	0
?lSetEverRightClickMoved@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetEverRightClickMoved
_TEXT	ENDS
EXTRN	?GetTutorialLogging@CvGlobals@@QAE_NXZ:PROC	; CvGlobals::GetTutorialLogging
; Function compile flags: /Odtp
;	COMDAT ?lIsTutorialLogging@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsTutorialLogging@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsTutorialLogging, COMDAT

; 877  : {

	push	ebp
	mov	ebp, esp

; 878  : 	lua_pushboolean(L, GC.GetTutorialLogging());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetTutorialLogging@CvGlobals@@QAE_NXZ	; CvGlobals::GetTutorialLogging
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 879  : 	return 1;

	mov	eax, 1

; 880  : }

	pop	ebp
	ret	0
?lIsTutorialLogging@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsTutorialLogging
_TEXT	ENDS
EXTRN	?GetTutorialDebugging@CvGlobals@@QAE_NXZ:PROC	; CvGlobals::GetTutorialDebugging
; Function compile flags: /Odtp
;	COMDAT ?lIsTutorialDebugging@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsTutorialDebugging@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsTutorialDebugging, COMDAT

; 883  : {

	push	ebp
	mov	ebp, esp

; 884  : 	lua_pushboolean(L, GC.GetTutorialDebugging());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetTutorialDebugging@CvGlobals@@QAE_NXZ ; CvGlobals::GetTutorialDebugging
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 885  : 	return 1;

	mov	eax, 1

; 886  : }

	pop	ebp
	ret	0
?lIsTutorialDebugging@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsTutorialDebugging
_TEXT	ENDS
EXTRN	_lua_pushinteger:PROC
; Function compile flags: /Odtp
;	COMDAT ?lGetTutorialLevel@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
$T226660 = -4						; size = 4
_L$ = 8							; size = 4
?lGetTutorialLevel@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetTutorialLevel, COMDAT

; 889  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 890  : 	lua_pushinteger(L, gDLL->GetTutorialLevel());

	mov	eax, DWORD PTR $T226660[ebp]
	mov	DWORD PTR tv71[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv71[ebp], ecx
	mov	edx, DWORD PTR tv71[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv71[ebp]
	mov	edx, DWORD PTR [eax+868]
	call	edx
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 891  : 	return 1;

	mov	eax, 1

; 892  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTutorialLevel@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetTutorialLevel
_TEXT	ENDS
EXTRN	?HasAdvisorMessageBeenSeen@CvGame@@QAE_NPBD@Z:PROC ; CvGame::HasAdvisorMessageBeenSeen
; Function compile flags: /Odtp
;	COMDAT ?lHasAdvisorMessageBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226666 = -12						; size = 4
_bResult$ = -5						; size = 1
_szAdvisorMessage$ = -4					; size = 4
_L$ = 8							; size = 4
?lHasAdvisorMessageBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lHasAdvisorMessageBeenSeen, COMDAT

; 895  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 896  : 	const char* szAdvisorMessage = luaL_checkstring(L, 1);

	push	0
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checklstring
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _szAdvisorMessage$[ebp], eax

; 897  : 	const bool bResult = GC.getGame().HasAdvisorMessageBeenSeen(szAdvisorMessage);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T226666[ebp], ecx
	mov	edx, DWORD PTR _szAdvisorMessage$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T226666[ebp]
	call	?HasAdvisorMessageBeenSeen@CvGame@@QAE_NPBD@Z ; CvGame::HasAdvisorMessageBeenSeen
	mov	BYTE PTR _bResult$[ebp], al

; 898  : 	lua_pushboolean(L, bResult);

	movzx	eax, BYTE PTR _bResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 899  : 	return 1;

	mov	eax, 1

; 900  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lHasAdvisorMessageBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lHasAdvisorMessageBeenSeen
_TEXT	ENDS
EXTRN	?SetAdvisorMessageHasBeenSeen@CvGame@@QAEXPBD_N@Z:PROC ; CvGame::SetAdvisorMessageHasBeenSeen
; Function compile flags: /Odtp
;	COMDAT ?lSetAdvisorMessageHasBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226672 = -12						; size = 4
_bSeen$ = -5						; size = 1
_szAdvisorMessage$ = -4					; size = 4
_L$ = 8							; size = 4
?lSetAdvisorMessageHasBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetAdvisorMessageHasBeenSeen, COMDAT

; 903  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 904  : 	const char* szAdvisorMessage = luaL_checkstring(L, 1);

	push	0
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checklstring
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _szAdvisorMessage$[ebp], eax

; 905  : 	const bool bSeen = lua_toboolean(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bSeen$[ebp], dl

; 906  : 	GC.getGame().SetAdvisorMessageHasBeenSeen(szAdvisorMessage, bSeen);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T226672[ebp], eax
	movzx	ecx, BYTE PTR _bSeen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _szAdvisorMessage$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T226672[ebp]
	call	?SetAdvisorMessageHasBeenSeen@CvGame@@QAEXPBD_N@Z ; CvGame::SetAdvisorMessageHasBeenSeen

; 907  : 	return 0;

	xor	eax, eax

; 908  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetAdvisorMessageHasBeenSeen@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetAdvisorMessageHasBeenSeen
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lSetAdvisorBadAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
$T226678 = -8						; size = 4
_bValue$ = -1						; size = 1
_L$ = 8							; size = 4
?lSetAdvisorBadAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetAdvisorBadAttackInterrupt, COMDAT

; 911  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 912  : 	bool bValue = lua_toboolean(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bValue$[ebp], cl

; 913  : 	gDLL->SetAdvisorBadAttackInterrupt(bValue);

	mov	edx, DWORD PTR $T226678[ebp]
	mov	DWORD PTR tv76[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv76[ebp], eax
	movzx	ecx, BYTE PTR _bValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv76[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv76[ebp]
	mov	edx, DWORD PTR [eax+852]
	call	edx

; 914  : 	return 1;

	mov	eax, 1

; 915  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetAdvisorBadAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetAdvisorBadAttackInterrupt
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lSetAdvisorCityAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
$T226684 = -8						; size = 4
_bValue$ = -1						; size = 1
_L$ = 8							; size = 4
?lSetAdvisorCityAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetAdvisorCityAttackInterrupt, COMDAT

; 919  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 920  : 	bool bValue = lua_toboolean(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	mov	BYTE PTR _bValue$[ebp], cl

; 921  : 	gDLL->SetAdvisorCityAttackInterrupt(bValue);

	mov	edx, DWORD PTR $T226684[ebp]
	mov	DWORD PTR tv76[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv76[ebp], eax
	movzx	ecx, BYTE PTR _bValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv76[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv76[ebp]
	mov	edx, DWORD PTR [eax+860]
	call	edx

; 922  : 	return 1;

	mov	eax, 1

; 923  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetAdvisorCityAttackInterrupt@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetAdvisorCityAttackInterrupt
_TEXT	ENDS
EXTRN	?GetAllowRClickMovementWhileScrolling@CvGlobals@@QAE_NXZ:PROC ; CvGlobals::GetAllowRClickMovementWhileScrolling
; Function compile flags: /Odtp
;	COMDAT ?lGetAllowRClickMovementWhileScrolling@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAllowRClickMovementWhileScrolling@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAllowRClickMovementWhileScrolling, COMDAT

; 927  : {

	push	ebp
	mov	ebp, esp

; 928  : 	lua_pushboolean(L, GC.GetAllowRClickMovementWhileScrolling());

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetAllowRClickMovementWhileScrolling@CvGlobals@@QAE_NXZ ; CvGlobals::GetAllowRClickMovementWhileScrolling
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 929  : 	return 1;

	mov	eax, 1

; 930  : }

	pop	ebp
	ret	0
?lGetAllowRClickMovementWhileScrolling@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAllowRClickMovementWhileScrolling
_TEXT	ENDS
EXTRN	?getNumGameTurnActive@CvGame@@QAEHXZ:PROC	; CvGame::getNumGameTurnActive
; Function compile flags: /Odtp
;	COMDAT ?lGetNumGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumGameTurnActive, COMDAT

; 935  : {

	push	ebp
	mov	ebp, esp

; 936  : 	return BasicLuaMethod(L, &CvGame::getNumGameTurnActive);

	push	OFFSET ?getNumGameTurnActive@CvGame@@QAEHXZ ; CvGame::getNumGameTurnActive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 937  : }

	pop	ebp
	ret	0
?lGetNumGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumGameTurnActive
_TEXT	ENDS
EXTRN	?countNumHumanGameTurnActive@CvGame@@QAEHXZ:PROC ; CvGame::countNumHumanGameTurnActive
; Function compile flags: /Odtp
;	COMDAT ?lCountNumHumanGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountNumHumanGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCountNumHumanGameTurnActive, COMDAT

; 941  : {

	push	ebp
	mov	ebp, esp

; 942  : 	return BasicLuaMethod(L, &CvGame::countNumHumanGameTurnActive);

	push	OFFSET ?countNumHumanGameTurnActive@CvGame@@QAEHXZ ; CvGame::countNumHumanGameTurnActive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 943  : }

	pop	ebp
	ret	0
?lCountNumHumanGameTurnActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCountNumHumanGameTurnActive
_TEXT	ENDS
EXTRN	?getNumCities@CvGame@@QBEHXZ:PROC		; CvGame::getNumCities
; Function compile flags: /Odtp
;	COMDAT ?lGetNumCities@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCities@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetNumCities, COMDAT

; 947  : {

	push	ebp
	mov	ebp, esp

; 948  : 	return BasicLuaMethod(L, &CvGame::getNumCities);

	push	OFFSET ?getNumCities@CvGame@@QBEHXZ	; CvGame::getNumCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 949  : }

	pop	ebp
	ret	0
?lGetNumCities@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetNumCities
_TEXT	ENDS
EXTRN	?getNumCivCities@CvGame@@QBEHXZ:PROC		; CvGame::getNumCivCities
; Function compile flags: /Odtp
;	COMDAT ?lGetNumCivCities@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCivCities@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetNumCivCities, COMDAT

; 953  : {

	push	ebp
	mov	ebp, esp

; 954  : 	return BasicLuaMethod(L, &CvGame::getNumCivCities);

	push	OFFSET ?getNumCivCities@CvGame@@QBEHXZ	; CvGame::getNumCivCities
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 955  : }

	pop	ebp
	ret	0
?lGetNumCivCities@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetNumCivCities
_TEXT	ENDS
EXTRN	?getTotalPopulation@CvGame@@QBEHXZ:PROC		; CvGame::getTotalPopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetTotalPopulation@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalPopulation@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetTotalPopulation, COMDAT

; 959  : {

	push	ebp
	mov	ebp, esp

; 960  : 	return BasicLuaMethod(L, &CvGame::getTotalPopulation);

	push	OFFSET ?getTotalPopulation@CvGame@@QBEHXZ ; CvGame::getTotalPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 961  : }

	pop	ebp
	ret	0
?lGetTotalPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetTotalPopulation
_TEXT	ENDS
EXTRN	?getNoNukesCount@CvGame@@QBEHXZ:PROC		; CvGame::getNoNukesCount
; Function compile flags: /Odtp
;	COMDAT ?lGetNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetNoNukesCount, COMDAT

; 965  : {

	push	ebp
	mov	ebp, esp

; 966  : 	return BasicLuaMethod(L, &CvGame::getNoNukesCount);

	push	OFFSET ?getNoNukesCount@CvGame@@QBEHXZ	; CvGame::getNoNukesCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 967  : }

	pop	ebp
	ret	0
?lGetNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetNoNukesCount
_TEXT	ENDS
EXTRN	?isNoNukes@CvGame@@QBE_NXZ:PROC			; CvGame::isNoNukes
; Function compile flags: /Odtp
;	COMDAT ?lIsNoNukes@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNoNukes@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lIsNoNukes, COMDAT

; 971  : {

	push	ebp
	mov	ebp, esp

; 972  : 	return BasicLuaMethod(L, &CvGame::isNoNukes);

	push	OFFSET ?isNoNukes@CvGame@@QBE_NXZ	; CvGame::isNoNukes
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 973  : }

	pop	ebp
	ret	0
?lIsNoNukes@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lIsNoNukes
_TEXT	ENDS
EXTRN	?changeNoNukesCount@CvGame@@QAEXH@Z:PROC	; CvGame::changeNoNukesCount
; Function compile flags: /Odtp
;	COMDAT ?lChangeNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226706 = -8						; size = 4
_iNumNukes$ = -4					; size = 4
_L$ = 8							; size = 4
?lChangeNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lChangeNoNukesCount, COMDAT

; 977  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 978  : 	int iNumNukes = lua_tointeger(L, 2);

	push	2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNumNukes$[ebp], eax

; 979  : 	GC.getGame().changeNoNukesCount(iNumNukes);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T226706[ebp], ecx
	mov	edx, DWORD PTR _iNumNukes$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T226706[ebp]
	call	?changeNoNukesCount@CvGame@@QAEXH@Z	; CvGame::changeNoNukesCount

; 980  : 	return 1;

	mov	eax, 1

; 981  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeNoNukesCount@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lChangeNoNukesCount
_TEXT	ENDS
EXTRN	?getNukesExploded@CvGame@@QBEHXZ:PROC		; CvGame::getNukesExploded
; Function compile flags: /Odtp
;	COMDAT ?lGetNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetNukesExploded, COMDAT

; 985  : {

	push	ebp
	mov	ebp, esp

; 986  : 	return BasicLuaMethod(L, &CvGame::getNukesExploded);

	push	OFFSET ?getNukesExploded@CvGame@@QBEHXZ	; CvGame::getNukesExploded
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 987  : }

	pop	ebp
	ret	0
?lGetNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetNukesExploded
_TEXT	ENDS
EXTRN	?changeNukesExploded@CvGame@@QAEXH@Z:PROC	; CvGame::changeNukesExploded
; Function compile flags: /Odtp
;	COMDAT ?lChangeNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226714 = -8						; size = 4
_iNumNukes$ = -4					; size = 4
_L$ = 8							; size = 4
?lChangeNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lChangeNukesExploded, COMDAT

; 991  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 992  : 	int iNumNukes = lua_tointeger(L, 2);

	push	2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iNumNukes$[ebp], eax

; 993  : 	GC.getGame().changeNukesExploded(iNumNukes);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T226714[ebp], ecx
	mov	edx, DWORD PTR _iNumNukes$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T226714[ebp]
	call	?changeNukesExploded@CvGame@@QAEXH@Z	; CvGame::changeNukesExploded

; 994  : 	return 1;

	mov	eax, 1

; 995  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lChangeNukesExploded@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lChangeNukesExploded
_TEXT	ENDS
EXTRN	?getMaxPopulation@CvGame@@QBEHXZ:PROC		; CvGame::getMaxPopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetMaxPopulation@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetMaxPopulation@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetMaxPopulation, COMDAT

; 999  : {

	push	ebp
	mov	ebp, esp

; 1000 : 	return BasicLuaMethod(L, &CvGame::getMaxPopulation);

	push	OFFSET ?getMaxPopulation@CvGame@@QBEHXZ	; CvGame::getMaxPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 1001 : }

	pop	ebp
	ret	0
?lGetMaxPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetMaxPopulation
_TEXT	ENDS
EXTRN	?getInitPopulation@CvGame@@QBEHXZ:PROC		; CvGame::getInitPopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetInitPopulation@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetInitPopulation@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetInitPopulation, COMDAT

; 1005 : {

	push	ebp
	mov	ebp, esp

; 1006 : 	return BasicLuaMethod(L, &CvGame::getInitPopulation);

	push	OFFSET ?getInitPopulation@CvGame@@QBEHXZ ; CvGame::getInitPopulation
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 1007 : }

	pop	ebp
	ret	0
?lGetInitPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetInitPopulation
_TEXT	ENDS
EXTRN	?getInitLand@CvGame@@QBEHXZ:PROC		; CvGame::getInitLand
; Function compile flags: /Odtp
;	COMDAT ?lGetInitLand@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetInitLand@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetInitLand, COMDAT

; 1011 : {

	push	ebp
	mov	ebp, esp

; 1012 : 	return BasicLuaMethod(L, &CvGame::getInitLand);

	push	OFFSET ?getInitLand@CvGame@@QBEHXZ	; CvGame::getInitLand
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 1013 : }

	pop	ebp
	ret	0
?lGetInitLand@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetInitLand
_TEXT	ENDS
EXTRN	?getInitTech@CvGame@@QBEHXZ:PROC		; CvGame::getInitTech
; Function compile flags: /Odtp
;	COMDAT ?lGetInitTech@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetInitTech@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetInitTech, COMDAT

; 1017 : {

	push	ebp
	mov	ebp, esp

; 1018 : 	return BasicLuaMethod(L, &CvGame::getInitTech);

	push	OFFSET ?getInitTech@CvGame@@QBEHXZ	; CvGame::getInitTech
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 1019 : }

	pop	ebp
	ret	0
?lGetInitTech@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetInitTech
_TEXT	ENDS
EXTRN	?getInitWonders@CvGame@@QBEHXZ:PROC		; CvGame::getInitWonders
; Function compile flags: /Odtp
;	COMDAT ?lGetInitWonders@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetInitWonders@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetInitWonders, COMDAT

; 1023 : {

	push	ebp
	mov	ebp, esp

; 1024 : 	return BasicLuaMethod(L, &CvGame::getInitWonders);

	push	OFFSET ?getInitWonders@CvGame@@QBEHXZ	; CvGame::getInitWonders
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 1025 : }

	pop	ebp
	ret	0
?lGetInitWonders@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetInitWonders
_TEXT	ENDS
EXTRN	?countNumBuildings@CvPlayer@@QBEHW4BuildingTypes@@@Z:PROC ; CvPlayer::countNumBuildings
EXTRN	?isWorldWonderClass@@YA_NABVCvBuildingClassInfo@@@Z:PROC ; isWorldWonderClass
EXTRN	?GetBuildingClassInfo@CvBuildingEntry@@QBEABVCvBuildingClassInfo@@XZ:PROC ; CvBuildingEntry::GetBuildingClassInfo
EXTRN	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z:PROC ; CvGlobals::getBuildingInfo
EXTRN	?getNumBuildingInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumBuildingInfos
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
; Function compile flags: /Odtp
;	COMDAT ?lGetNumWorldWonders@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eBuilding$222142 = -28					; size = 4
_pkBuildingInfo$222144 = -24				; size = 4
_iBuildingLoop$222138 = -20				; size = 4
_kLoopPlayer$222137 = -16				; size = 4
_iPlayerLoop$222132 = -12				; size = 4
_iWonderCount$ = -8					; size = 4
_eLoopPlayer$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumWorldWonders@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumWorldWonders, COMDAT

; 1029 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 1030 : 	int iWonderCount = 0;

	mov	DWORD PTR _iWonderCount$[ebp], 0

; 1031 : 
; 1032 : 	// Loop through all players
; 1033 : 	PlayerTypes eLoopPlayer;
; 1034 : 	for(int iPlayerLoop = 0; iPlayerLoop < MAX_PLAYERS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$222132[ebp], 0
	jmp	SHORT $LN8@lGetNumWor
$LN7@lGetNumWor:
	mov	eax, DWORD PTR _iPlayerLoop$222132[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$222132[ebp], eax
$LN8@lGetNumWor:
	cmp	DWORD PTR _iPlayerLoop$222132[ebp], 64	; 00000040H
	jge	$LN6@lGetNumWor

; 1035 : 	{
; 1036 : 		eLoopPlayer = (PlayerTypes) iPlayerLoop;

	mov	ecx, DWORD PTR _iPlayerLoop$222132[ebp]
	mov	DWORD PTR _eLoopPlayer$[ebp], ecx

; 1037 : 		CvPlayerAI& kLoopPlayer = GET_PLAYER(eLoopPlayer);

	mov	edx, DWORD PTR _eLoopPlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kLoopPlayer$222137[ebp], edx

; 1038 : 
; 1039 : 		// Loop through all buildings, see if they're a world wonder
; 1040 : #ifdef AUI_WARNING_FIXES
; 1041 : 		for (uint iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)
; 1042 : #else
; 1043 : 		for(int iBuildingLoop = 0; iBuildingLoop < GC.getNumBuildingInfos(); iBuildingLoop++)

	mov	DWORD PTR _iBuildingLoop$222138[ebp], 0
	jmp	SHORT $LN5@lGetNumWor
$LN4@lGetNumWor:
	mov	eax, DWORD PTR _iBuildingLoop$222138[ebp]
	add	eax, 1
	mov	DWORD PTR _iBuildingLoop$222138[ebp], eax
$LN5@lGetNumWor:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iBuildingLoop$222138[ebp], eax
	jge	SHORT $LN3@lGetNumWor

; 1044 : #endif
; 1045 : 		{
; 1046 : 			const BuildingTypes eBuilding = static_cast<BuildingTypes>(iBuildingLoop);

	mov	ecx, DWORD PTR _iBuildingLoop$222138[ebp]
	mov	DWORD PTR _eBuilding$222142[ebp], ecx

; 1047 : 			CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	edx, DWORD PTR _eBuilding$222142[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$222144[ebp], eax

; 1048 : 			if(pkBuildingInfo)

	cmp	DWORD PTR _pkBuildingInfo$222144[ebp], 0
	je	SHORT $LN2@lGetNumWor

; 1049 : 			{
; 1050 : 				if(::isWorldWonderClass(pkBuildingInfo->GetBuildingClassInfo()))

	mov	ecx, DWORD PTR _pkBuildingInfo$222144[ebp]
	call	?GetBuildingClassInfo@CvBuildingEntry@@QBEABVCvBuildingClassInfo@@XZ ; CvBuildingEntry::GetBuildingClassInfo
	push	eax
	call	?isWorldWonderClass@@YA_NABVCvBuildingClassInfo@@@Z ; isWorldWonderClass
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@lGetNumWor

; 1051 : 				{
; 1052 : 					iWonderCount += kLoopPlayer.countNumBuildings(eBuilding);

	mov	ecx, DWORD PTR _eBuilding$222142[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kLoopPlayer$222137[ebp]
	call	?countNumBuildings@CvPlayer@@QBEHW4BuildingTypes@@@Z ; CvPlayer::countNumBuildings
	add	eax, DWORD PTR _iWonderCount$[ebp]
	mov	DWORD PTR _iWonderCount$[ebp], eax
$LN2@lGetNumWor:

; 1053 : 				}
; 1054 : 			}
; 1055 : 		}

	jmp	SHORT $LN4@lGetNumWor
$LN3@lGetNumWor:

; 1056 : 	}

	jmp	$LN7@lGetNumWor
$LN6@lGetNumWor:

; 1057 : 
; 1058 : 	lua_pushinteger(L, iWonderCount);

	mov	edx, DWORD PTR _iWonderCount$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 1059 : 	return 1;

	mov	eax, 1

; 1060 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumWorldWonders@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumWorldWonders
_TEXT	ENDS
EXTRN	?getAIAutoPlay@CvGame@@QAEHXZ:PROC		; CvGame::getAIAutoPlay
; Function compile flags: /Odtp
;	COMDAT ?lGetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetAIAutoPlay, COMDAT

; 1064 : {

	push	ebp
	mov	ebp, esp

; 1065 : 	return BasicLuaMethod(L, &CvGame::getAIAutoPlay);

	push	OFFSET ?getAIAutoPlay@CvGame@@QAEHXZ	; CvGame::getAIAutoPlay
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 1066 : }

	pop	ebp
	ret	0
?lGetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetAIAutoPlay
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum PlayerTypes>
EXTRN	?setAIAutoPlay@CvGame@@QAEXHW4PlayerTypes@@@Z:PROC ; CvGame::setAIAutoPlay
; Function compile flags: /Odtp
;	COMDAT ?lSetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetAIAutoPlay, COMDAT

; 1070 : {

	push	ebp
	mov	ebp, esp

; 1071 : 	return BasicLuaMethod(L, &CvGame::setAIAutoPlay);

	push	OFFSET ?setAIAutoPlay@CvGame@@QAEXHW4PlayerTypes@@@Z ; CvGame::setAIAutoPlay
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum PlayerTypes>
	add	esp, 8

; 1072 : }

	pop	ebp
	ret	0
?lSetAIAutoPlay@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetAIAutoPlay
_TEXT	ENDS
EXTRN	?isScoreDirty@CvGame@@QBE_NXZ:PROC		; CvGame::isScoreDirty
; Function compile flags: /Odtp
;	COMDAT ?lIsScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsScoreDirty, COMDAT

; 1076 : {

	push	ebp
	mov	ebp, esp

; 1077 : 	return BasicLuaMethod(L, &CvGame::isScoreDirty);

	push	OFFSET ?isScoreDirty@CvGame@@QBE_NXZ	; CvGame::isScoreDirty
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 1078 : }

	pop	ebp
	ret	0
?lIsScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsScoreDirty
_TEXT	ENDS
EXTRN	?setScoreDirty@CvGame@@QAEX_N@Z:PROC		; CvGame::setScoreDirty
; Function compile flags: /Odtp
;	COMDAT ?lSetScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetScoreDirty, COMDAT

; 1082 : {

	push	ebp
	mov	ebp, esp

; 1083 : 	return BasicLuaMethod(L, &CvGame::setScoreDirty);

	push	OFFSET ?setScoreDirty@CvGame@@QAEX_N@Z	; CvGame::setScoreDirty
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 1084 : }

	pop	ebp
	ret	0
?lSetScoreDirty@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetScoreDirty
_TEXT	ENDS
EXTRN	?isCircumnavigated@CvGame@@QBE_NXZ:PROC		; CvGame::isCircumnavigated
; Function compile flags: /Odtp
;	COMDAT ?lIsCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsCircumnavigated, COMDAT

; 1088 : {

	push	ebp
	mov	ebp, esp

; 1089 : 	return BasicLuaMethod(L, &CvGame::isCircumnavigated);

	push	OFFSET ?isCircumnavigated@CvGame@@QBE_NXZ ; CvGame::isCircumnavigated
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 1090 : }

	pop	ebp
	ret	0
?lIsCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsCircumnavigated
_TEXT	ENDS
EXTRN	?makeCircumnavigated@CvGame@@QAEXXZ:PROC	; CvGame::makeCircumnavigated
; Function compile flags: /Odtp
;	COMDAT ?lMakeCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lMakeCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lMakeCircumnavigated, COMDAT

; 1094 : {

	push	ebp
	mov	ebp, esp

; 1095 : 	return BasicLuaMethod(L, &CvGame::makeCircumnavigated);

	push	OFFSET ?makeCircumnavigated@CvGame@@QAEXXZ ; CvGame::makeCircumnavigated
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod
	add	esp, 8

; 1096 : }

	pop	ebp
	ret	0
?lMakeCircumnavigated@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lMakeCircumnavigated
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4FromUIDiploEventTypes@@W4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4FromUIDiploEventTypes@@W4PlayerTypes@@HH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum FromUIDiploEventTypes,enum PlayerTypes,int,int>
EXTRN	?DoFromUIDiploEvent@CvGame@@QAEXW4FromUIDiploEventTypes@@W4PlayerTypes@@HH@Z:PROC ; CvGame::DoFromUIDiploEvent
; Function compile flags: /Odtp
;	COMDAT ?lDoFromUIDiploEvent@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoFromUIDiploEvent@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lDoFromUIDiploEvent, COMDAT

; 1100 : {

	push	ebp
	mov	ebp, esp

; 1101 : 	return BasicLuaMethod(L, &CvGame::DoFromUIDiploEvent);

	push	OFFSET ?DoFromUIDiploEvent@CvGame@@QAEXW4FromUIDiploEventTypes@@W4PlayerTypes@@HH@Z ; CvGame::DoFromUIDiploEvent
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4FromUIDiploEventTypes@@W4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4FromUIDiploEventTypes@@W4PlayerTypes@@HH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum FromUIDiploEventTypes,enum PlayerTypes,int,int>
	add	esp, 8

; 1102 : }

	pop	ebp
	ret	0
?lDoFromUIDiploEvent@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lDoFromUIDiploEvent
_TEXT	ENDS
EXTRN	?isDebugMode@CvGame@@QBE_NXZ:PROC		; CvGame::isDebugMode
; Function compile flags: /Odtp
;	COMDAT ?lIsDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsDebugMode, COMDAT

; 1106 : {

	push	ebp
	mov	ebp, esp

; 1107 : 	return BasicLuaMethod(L, &CvGame::isDebugMode);

	push	OFFSET ?isDebugMode@CvGame@@QBE_NXZ	; CvGame::isDebugMode
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 1108 : }

	pop	ebp
	ret	0
?lIsDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsDebugMode
_TEXT	ENDS
EXTRN	?setDebugMode@CvGame@@QAEX_N@Z:PROC		; CvGame::setDebugMode
; Function compile flags: /Odtp
;	COMDAT ?lSetDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetDebugMode, COMDAT

; 1112 : {

	push	ebp
	mov	ebp, esp

; 1113 : 	return BasicLuaMethod(L, &CvGame::setDebugMode);

	push	OFFSET ?setDebugMode@CvGame@@QAEX_N@Z	; CvGame::setDebugMode
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 1114 : }

	pop	ebp
	ret	0
?lSetDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetDebugMode
_TEXT	ENDS
EXTRN	?toggleDebugMode@CvGame@@QAEXXZ:PROC		; CvGame::toggleDebugMode
; Function compile flags: /Odtp
;	COMDAT ?lToggleDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lToggleDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lToggleDebugMode, COMDAT

; 1118 : {

	push	ebp
	mov	ebp, esp

; 1119 : 	return BasicLuaMethod(L, &CvGame::toggleDebugMode);

	push	OFFSET ?toggleDebugMode@CvGame@@QAEXXZ	; CvGame::toggleDebugMode
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod
	add	esp, 8

; 1120 : }

	pop	ebp
	ret	0
?lToggleDebugMode@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lToggleDebugMode
_TEXT	ENDS
EXTRN	?setFOW@CvGame@@QAEX_N@Z:PROC			; CvGame::setFOW
; Function compile flags: /Odtp
;	COMDAT ?lUpdateFOW@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lUpdateFOW@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lUpdateFOW, COMDAT

; 1124 : {

	push	ebp
	mov	ebp, esp

; 1125 : 	return BasicLuaMethod(L, &CvGame::setFOW);

	push	OFFSET ?setFOW@CvGame@@QAEX_N@Z		; CvGame::setFOW
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 1126 : }

	pop	ebp
	ret	0
?lUpdateFOW@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lUpdateFOW
_TEXT	ENDS
EXTRN	?getPitbossTurnTime@CvGame@@QBEHXZ:PROC		; CvGame::getPitbossTurnTime
; Function compile flags: /Odtp
;	COMDAT ?lGetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetPitbossTurnTime, COMDAT

; 1130 : {

	push	ebp
	mov	ebp, esp

; 1131 : 	return BasicLuaMethod(L, &CvGame::getPitbossTurnTime);

	push	OFFSET ?getPitbossTurnTime@CvGame@@QBEHXZ ; CvGame::getPitbossTurnTime
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 1132 : }

	pop	ebp
	ret	0
?lGetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetPitbossTurnTime
_TEXT	ENDS
EXTRN	?setPitbossTurnTime@CvGame@@QAEXH@Z:PROC	; CvGame::setPitbossTurnTime
; Function compile flags: /Odtp
;	COMDAT ?lSetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetPitbossTurnTime, COMDAT

; 1136 : {

	push	ebp
	mov	ebp, esp

; 1137 : 	return BasicLuaMethod(L, &CvGame::setPitbossTurnTime);

	push	OFFSET ?setPitbossTurnTime@CvGame@@QAEXH@Z ; CvGame::setPitbossTurnTime
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 1138 : }

	pop	ebp
	ret	0
?lSetPitbossTurnTime@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetPitbossTurnTime
_TEXT	ENDS
EXTRN	?isHotSeat@CvGame@@QBE_NXZ:PROC			; CvGame::isHotSeat
; Function compile flags: /Odtp
;	COMDAT ?lIsHotSeat@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsHotSeat@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lIsHotSeat, COMDAT

; 1142 : {

	push	ebp
	mov	ebp, esp

; 1143 : 	return BasicLuaMethod(L, &CvGame::isHotSeat);

	push	OFFSET ?isHotSeat@CvGame@@QBE_NXZ	; CvGame::isHotSeat
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 1144 : }

	pop	ebp
	ret	0
?lIsHotSeat@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lIsHotSeat
_TEXT	ENDS
EXTRN	?isPbem@CvGame@@QBE_NXZ:PROC			; CvGame::isPbem
; Function compile flags: /Odtp
;	COMDAT ?lIsPbem@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPbem@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lIsPbem, COMDAT

; 1148 : {

	push	ebp
	mov	ebp, esp

; 1149 : 	return BasicLuaMethod(L, &CvGame::isPbem);

	push	OFFSET ?isPbem@CvGame@@QBE_NXZ		; CvGame::isPbem
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 1150 : }

	pop	ebp
	ret	0
?lIsPbem@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lIsPbem
_TEXT	ENDS
EXTRN	?isPitboss@CvGame@@QBE_NXZ:PROC			; CvGame::isPitboss
; Function compile flags: /Odtp
;	COMDAT ?lIsPitboss@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPitboss@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lIsPitboss, COMDAT

; 1154 : {

	push	ebp
	mov	ebp, esp

; 1155 : 	return BasicLuaMethod(L, &CvGame::isPitboss);

	push	OFFSET ?isPitboss@CvGame@@QBE_NXZ	; CvGame::isPitboss
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 1156 : }

	pop	ebp
	ret	0
?lIsPitboss@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lIsPitboss
_TEXT	ENDS
EXTRN	?isSimultaneousTeamTurns@CvGame@@QBE_NXZ:PROC	; CvGame::isSimultaneousTeamTurns
; Function compile flags: /Odtp
;	COMDAT ?lIsSimultaneousTeamTurns@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsSimultaneousTeamTurns@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsSimultaneousTeamTurns, COMDAT

; 1160 : {

	push	ebp
	mov	ebp, esp

; 1161 : #ifdef AUI_GAME_BETTER_HYBRID_MODE
; 1162 : 	return BasicLuaMethod(L, &CvGame::isAnySimultaneousTurns);
; 1163 : #else
; 1164 : 	return BasicLuaMethod(L, &CvGame::isSimultaneousTeamTurns);

	push	OFFSET ?isSimultaneousTeamTurns@CvGame@@QBE_NXZ ; CvGame::isSimultaneousTeamTurns
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 1165 : #endif
; 1166 : }

	pop	ebp
	ret	0
?lIsSimultaneousTeamTurns@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsSimultaneousTeamTurns
_TEXT	ENDS
EXTRN	?isFinalInitialized@CvGame@@QBE_NXZ:PROC	; CvGame::isFinalInitialized
; Function compile flags: /Odtp
;	COMDAT ?lIsFinalInitialized@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsFinalInitialized@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsFinalInitialized, COMDAT

; 1170 : {

	push	ebp
	mov	ebp, esp

; 1171 : 	return BasicLuaMethod(L, &CvGame::isFinalInitialized);

	push	OFFSET ?isFinalInitialized@CvGame@@QBE_NXZ ; CvGame::isFinalInitialized
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 1172 : }

	pop	ebp
	ret	0
?lIsFinalInitialized@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsFinalInitialized
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes>
EXTRN	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ:PROC ; CvGame::getActivePlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetActivePlayer, COMDAT

; 1176 : {

	push	ebp
	mov	ebp, esp

; 1177 : 	return BasicLuaMethod(L, &CvGame::getActivePlayer);

	push	OFFSET ?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 1178 : }

	pop	ebp
	ret	0
?lGetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetActivePlayer
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@_N2@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,bool,bool>
EXTRN	?setActivePlayer@CvGame@@QAEXW4PlayerTypes@@_N1@Z:PROC ; CvGame::setActivePlayer
; Function compile flags: /Odtp
;	COMDAT ?lSetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetActivePlayer, COMDAT

; 1182 : {

	push	ebp
	mov	ebp, esp

; 1183 : 	return BasicLuaMethod(L, &CvGame::setActivePlayer);

	push	OFFSET ?setActivePlayer@CvGame@@QAEXW4PlayerTypes@@_N1@Z ; CvGame::setActivePlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@_N2@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,bool,bool>
	add	esp, 8

; 1184 : }

	pop	ebp
	ret	0
?lSetActivePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetActivePlayer
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes>
EXTRN	?getPausePlayer@CvGame@@QAE?AW4PlayerTypes@@XZ:PROC ; CvGame::getPausePlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetPausePlayer, COMDAT

; 1188 : {

	push	ebp
	mov	ebp, esp

; 1189 : 	return BasicLuaMethod(L, &CvGame::getPausePlayer);

	push	OFFSET ?getPausePlayer@CvGame@@QAE?AW4PlayerTypes@@XZ ; CvGame::getPausePlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 1190 : }

	pop	ebp
	ret	0
?lGetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetPausePlayer
_TEXT	ENDS
EXTRN	?setPausePlayer@CvGame@@QAEXW4PlayerTypes@@@Z:PROC ; CvGame::setPausePlayer
; Function compile flags: /Odtp
;	COMDAT ?lSetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iPlayer$222393 = -8					; size = 4
_game$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetPausePlayer, COMDAT

; 1193 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1194 : 	CvGame& game = GC.getGame();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _game$[ebp], eax

; 1195 : 	if(!game.isNetworkMultiPlayer())

	mov	ecx, DWORD PTR _game$[ebp]
	call	?isNetworkMultiPlayer@CvGame@@QBE_NXZ	; CvGame::isNetworkMultiPlayer
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@lSetPauseP

; 1196 : 	{
; 1197 : 		int iPlayer = lua_tointeger(L, 1);

	push	1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iPlayer$222393[ebp], eax

; 1198 : 		game.setPausePlayer((PlayerTypes)iPlayer);

	mov	eax, DWORD PTR _iPlayer$222393[ebp]
	push	eax
	mov	ecx, DWORD PTR _game$[ebp]
	call	?setPausePlayer@CvGame@@QAEXW4PlayerTypes@@@Z ; CvGame::setPausePlayer
$LN1@lSetPauseP:

; 1199 : 	}
; 1200 : 
; 1201 : 	return 1;

	mov	eax, 1

; 1202 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetPausePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetPausePlayer
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
EXTRN	?isPaused@CvGame@@QAE_NXZ:PROC			; CvGame::isPaused
; Function compile flags: /Odtp
;	COMDAT ?lIsPaused@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsPaused@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lIsPaused, COMDAT

; 1206 : {

	push	ebp
	mov	ebp, esp

; 1207 : 	return BasicLuaMethod(L, &CvGame::isPaused);

	push	OFFSET ?isPaused@CvGame@@QAE_NXZ	; CvGame::isPaused
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 1208 : }

	pop	ebp
	ret	0
?lIsPaused@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lIsPaused
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4UnitTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum UnitTypes>
EXTRN	?getBestLandUnit@CvGame@@QAE?AW4UnitTypes@@XZ:PROC ; CvGame::getBestLandUnit
; Function compile flags: /Odtp
;	COMDAT ?lGetBestLandUnit@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBestLandUnit@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetBestLandUnit, COMDAT

; 1212 : {

	push	ebp
	mov	ebp, esp

; 1213 : 	return BasicLuaMethod(L, &CvGame::getBestLandUnit);

	push	OFFSET ?getBestLandUnit@CvGame@@QAE?AW4UnitTypes@@XZ ; CvGame::getBestLandUnit
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4UnitTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum UnitTypes>
	add	esp, 8

; 1214 : }

	pop	ebp
	ret	0
?lGetBestLandUnit@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetBestLandUnit
_TEXT	ENDS
EXTRN	?getBestLandUnitCombat@CvGame@@QAEHXZ:PROC	; CvGame::getBestLandUnitCombat
; Function compile flags: /Odtp
;	COMDAT ?lGetBestLandUnitCombat@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBestLandUnitCombat@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetBestLandUnitCombat, COMDAT

; 1218 : {

	push	ebp
	mov	ebp, esp

; 1219 : 	return BasicLuaMethod(L, &CvGame::getBestLandUnitCombat);

	push	OFFSET ?getBestLandUnitCombat@CvGame@@QAEHXZ ; CvGame::getBestLandUnitCombat
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 1220 : }

	pop	ebp
	ret	0
?lGetBestLandUnitCombat@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetBestLandUnitCombat
_TEXT	ENDS
EXTRN	?GetFaithCost@CvGame@@QBEHPAVCvUnitEntry@@@Z:PROC ; CvGame::GetFaithCost
EXTRN	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z:PROC ; CvGlobals::getUnitInfo
; Function compile flags: /Odtp
;	COMDAT ?lGetFaithCost@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226788 = -16						; size = 4
_eUnit$ = -12						; size = 4
_iResult$ = -8						; size = 4
_pkUnitInfo$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetFaithCost@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetFaithCost, COMDAT

; 1224 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1225 : 	const UnitTypes eUnit = (UnitTypes) lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnit$[ebp], eax

; 1226 : 	CvUnitEntry* pkUnitInfo = GC.getUnitInfo(eUnit);

	mov	ecx, DWORD PTR _eUnit$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR _pkUnitInfo$[ebp], eax

; 1227 : 	const int iResult = GC.getGame().GetFaithCost(pkUnitInfo);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T226788[ebp], edx
	mov	eax, DWORD PTR _pkUnitInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T226788[ebp]
	call	?GetFaithCost@CvGame@@QBEHPAVCvUnitEntry@@@Z ; CvGame::GetFaithCost
	mov	DWORD PTR _iResult$[ebp], eax

; 1228 : 	lua_pushinteger(L, iResult);

	mov	ecx, DWORD PTR _iResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1229 : 	return 1;

	mov	eax, 1

; 1230 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetFaithCost@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetFaithCost
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes>
EXTRN	?getWinner@CvGame@@QBE?AW4TeamTypes@@XZ:PROC	; CvGame::getWinner
; Function compile flags: /Odtp
;	COMDAT ?lGetWinner@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetWinner@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lGetWinner, COMDAT

; 1234 : {

	push	ebp
	mov	ebp, esp

; 1235 : 	return BasicLuaMethod(L, &CvGame::getWinner);

	push	OFFSET ?getWinner@CvGame@@QBE?AW4TeamTypes@@XZ ; CvGame::getWinner
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes>
	add	esp, 8

; 1236 : }

	pop	ebp
	ret	0
?lGetWinner@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lGetWinner
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4VictoryTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum VictoryTypes>
EXTRN	?getVictory@CvGame@@QBE?AW4VictoryTypes@@XZ:PROC ; CvGame::getVictory
; Function compile flags: /Odtp
;	COMDAT ?lGetVictory@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetVictory@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetVictory, COMDAT

; 1240 : {

	push	ebp
	mov	ebp, esp

; 1241 : 	return BasicLuaMethod(L, &CvGame::getVictory);

	push	OFFSET ?getVictory@CvGame@@QBE?AW4VictoryTypes@@XZ ; CvGame::getVictory
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4VictoryTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum VictoryTypes>
	add	esp, 8

; 1242 : }

	pop	ebp
	ret	0
?lGetVictory@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetVictory
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@W4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,enum VictoryTypes>
EXTRN	?setWinner@CvGame@@QAEXW4TeamTypes@@W4VictoryTypes@@@Z:PROC ; CvGame::setWinner
; Function compile flags: /Odtp
;	COMDAT ?lSetWinner@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetWinner@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lSetWinner, COMDAT

; 1246 : {

	push	ebp
	mov	ebp, esp

; 1247 : 	return BasicLuaMethod(L, &CvGame::setWinner);

	push	OFFSET ?setWinner@CvGame@@QAEXW4TeamTypes@@W4VictoryTypes@@@Z ; CvGame::setWinner
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@W4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,enum VictoryTypes>
	add	esp, 8

; 1248 : }

	pop	ebp
	ret	0
?lSetWinner@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lSetWinner
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4GameStateTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4GameStateTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum GameStateTypes>
EXTRN	?getGameState@CvGame@@QAE?AW4GameStateTypes@@XZ:PROC ; CvGame::getGameState
; Function compile flags: /Odtp
;	COMDAT ?lGetGameState@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGameState@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetGameState, COMDAT

; 1252 : {

	push	ebp
	mov	ebp, esp

; 1253 : 	return BasicLuaMethod(L, &CvGame::getGameState);

	push	OFFSET ?getGameState@CvGame@@QAE?AW4GameStateTypes@@XZ ; CvGame::getGameState
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4GameStateTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4GameStateTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum GameStateTypes>
	add	esp, 8

; 1254 : }

	pop	ebp
	ret	0
?lGetGameState@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetGameState
_TEXT	ENDS
EXTRN	?setGameState@CvGame@@QAEXW4GameStateTypes@@@Z:PROC ; CvGame::setGameState
; Function compile flags: /Odtp
;	COMDAT ?lSetGameState@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226802 = -12						; size = 4
_eGameState$ = -8					; size = 4
_iGameState$ = -4					; size = 4
_L$ = 8							; size = 4
?lSetGameState@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetGameState, COMDAT

; 1258 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1259 : 	int iGameState = luaL_checkint(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _iGameState$[ebp], eax

; 1260 : 	GameStateTypes eGameState = static_cast<GameStateTypes>(iGameState);

	mov	ecx, DWORD PTR _iGameState$[ebp]
	mov	DWORD PTR _eGameState$[ebp], ecx

; 1261 : 
; 1262 : 	GC.getGame().setGameState(eGameState);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T226802[ebp], edx
	mov	eax, DWORD PTR _eGameState$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T226802[ebp]
	call	?setGameState@CvGame@@QAEXW4GameStateTypes@@@Z ; CvGame::setGameState

; 1263 : 	return 0;

	xor	eax, eax

; 1264 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetGameState@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetGameState
_TEXT	ENDS
EXTRN	?GetVotesNeededForDiploVictory@CvGame@@QBEHXZ:PROC ; CvGame::GetVotesNeededForDiploVictory
; Function compile flags: /Odtp
;	COMDAT ?lGetVotesNeededForDiploVictory@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetVotesNeededForDiploVictory@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetVotesNeededForDiploVictory, COMDAT

; 1268 : {

	push	ebp
	mov	ebp, esp

; 1269 : 	return BasicLuaMethod(L, &CvGame::GetVotesNeededForDiploVictory);

	push	OFFSET ?GetVotesNeededForDiploVictory@CvGame@@QBEHXZ ; CvGame::GetVotesNeededForDiploVictory
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 1270 : }

	pop	ebp
	ret	0
?lGetVotesNeededForDiploVictory@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetVotesNeededForDiploVictory
_TEXT	ENDS
EXTRN	?IsUnitedNationsActive@CvGame@@QAE_NXZ:PROC	; CvGame::IsUnitedNationsActive
; Function compile flags: /Odtp
;	COMDAT ?lIsUnitedNationsActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsUnitedNationsActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsUnitedNationsActive, COMDAT

; 1274 : {

	push	ebp
	mov	ebp, esp

; 1275 : 	return BasicLuaMethod(L, &CvGame::IsUnitedNationsActive);

	push	OFFSET ?IsUnitedNationsActive@CvGame@@QAE_NXZ ; CvGame::IsUnitedNationsActive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 1276 : }

	pop	ebp
	ret	0
?lIsUnitedNationsActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsUnitedNationsActive
_TEXT	ENDS
EXTRN	?GetNumVictoryVotesTallied@CvGame@@QBEHXZ:PROC	; CvGame::GetNumVictoryVotesTallied
; Function compile flags: /Odtp
;	COMDAT ?lGetNumVictoryVotesTallied@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumVictoryVotesTallied@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumVictoryVotesTallied, COMDAT

; 1280 : {

	push	ebp
	mov	ebp, esp

; 1281 : 	return BasicLuaMethod(L, &CvGame::GetNumVictoryVotesTallied);

	push	OFFSET ?GetNumVictoryVotesTallied@CvGame@@QBEHXZ ; CvGame::GetNumVictoryVotesTallied
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 1282 : }

	pop	ebp
	ret	0
?lGetNumVictoryVotesTallied@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumVictoryVotesTallied
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@W43@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,enum TeamTypes>
EXTRN	?GetVoteCast@CvGame@@QBE?AW4TeamTypes@@W42@@Z:PROC ; CvGame::GetVoteCast
; Function compile flags: /Odtp
;	COMDAT ?lGetVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetVoteCast, COMDAT

; 1286 : {

	push	ebp
	mov	ebp, esp

; 1287 : 	return BasicLuaMethod(L, &CvGame::GetVoteCast);

	push	OFFSET ?GetVoteCast@CvGame@@QBE?AW4TeamTypes@@W42@@Z ; CvGame::GetVoteCast
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@W43@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,enum TeamTypes>
	add	esp, 8

; 1288 : }

	pop	ebp
	ret	0
?lGetVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetVoteCast
_TEXT	ENDS
EXTRN	?GetPreviousVoteCast@CvGame@@QBE?AW4TeamTypes@@W42@@Z:PROC ; CvGame::GetPreviousVoteCast
; Function compile flags: /Odtp
;	COMDAT ?lGetPreviousVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPreviousVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetPreviousVoteCast, COMDAT

; 1292 : {

	push	ebp
	mov	ebp, esp

; 1293 : 	return BasicLuaMethod(L, &CvGame::GetPreviousVoteCast);

	push	OFFSET ?GetPreviousVoteCast@CvGame@@QBE?AW4TeamTypes@@W42@@Z ; CvGame::GetPreviousVoteCast
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@W43@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,enum TeamTypes>
	add	esp, 8

; 1294 : }

	pop	ebp
	ret	0
?lGetPreviousVoteCast@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetPreviousVoteCast
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TeamTypes>
EXTRN	?GetNumVotesForTeam@CvGame@@QBEHW4TeamTypes@@@Z:PROC ; CvGame::GetNumVotesForTeam
; Function compile flags: /Odtp
;	COMDAT ?lGetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumVotesForTeam, COMDAT

; 1298 : {

	push	ebp
	mov	ebp, esp

; 1299 : 	return BasicLuaMethod(L, &CvGame::GetNumVotesForTeam);

	push	OFFSET ?GetNumVotesForTeam@CvGame@@QBEHW4TeamTypes@@@Z ; CvGame::GetNumVotesForTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TeamTypes>
	add	esp, 8

; 1300 : }

	pop	ebp
	ret	0
?lGetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumVotesForTeam
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,int>
EXTRN	?SetNumVotesForTeam@CvGame@@QAEXW4TeamTypes@@H@Z:PROC ; CvGame::SetNumVotesForTeam
; Function compile flags: /Odtp
;	COMDAT ?lSetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetNumVotesForTeam, COMDAT

; 1304 : {

	push	ebp
	mov	ebp, esp

; 1305 : 	return BasicLuaMethod(L, &CvGame::SetNumVotesForTeam);

	push	OFFSET ?SetNumVotesForTeam@CvGame@@QAEXW4TeamTypes@@H@Z ; CvGame::SetNumVotesForTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,int>
	add	esp, 8

; 1306 : }

	pop	ebp
	ret	0
?lSetNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetNumVotesForTeam
_TEXT	ENDS
EXTRN	?ChangeNumVotesForTeam@CvGame@@QAEXW4TeamTypes@@H@Z:PROC ; CvGame::ChangeNumVotesForTeam
; Function compile flags: /Odtp
;	COMDAT ?lChangeNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lChangeNumVotesForTeam, COMDAT

; 1310 : {

	push	ebp
	mov	ebp, esp

; 1311 : 	return BasicLuaMethod(L, &CvGame::ChangeNumVotesForTeam);

	push	OFFSET ?ChangeNumVotesForTeam@CvGame@@QAEXW4TeamTypes@@H@Z ; CvGame::ChangeNumVotesForTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,int>
	add	esp, 8

; 1312 : }

	pop	ebp
	ret	0
?lChangeNumVotesForTeam@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lChangeNumVotesForTeam
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4HandicapTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum HandicapTypes>
EXTRN	?getHandicapType@CvGame@@QBE?AW4HandicapTypes@@XZ:PROC ; CvGame::getHandicapType
; Function compile flags: /Odtp
;	COMDAT ?lGetHandicapType@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetHandicapType@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetHandicapType, COMDAT

; 1316 : {

	push	ebp
	mov	ebp, esp

; 1317 : 	return BasicLuaMethod(L, &CvGame::getHandicapType);

	push	OFFSET ?getHandicapType@CvGame@@QBE?AW4HandicapTypes@@XZ ; CvGame::getHandicapType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4HandicapTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum HandicapTypes>
	add	esp, 8

; 1318 : }

	pop	ebp
	ret	0
?lGetHandicapType@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetHandicapType
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4CalendarTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4CalendarTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum CalendarTypes>
; Function compile flags: /Odtp
;	COMDAT ?lGetCalendar@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCalendar@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetCalendar, COMDAT

; 1322 : {

	push	ebp
	mov	ebp, esp

; 1323 : 	return BasicLuaMethod(L, &CvGame::getCalendar);

	push	OFFSET ?getCalendar@CvGame@@QBE?AW4CalendarTypes@@XZ ; CvGame::getCalendar
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4CalendarTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4CalendarTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum CalendarTypes>
	add	esp, 8

; 1324 : }

	pop	ebp
	ret	0
?lGetCalendar@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetCalendar
_TEXT	ENDS
EXTRN	?getStartEra@CvGame@@QBE?AW4EraTypes@@XZ:PROC	; CvGame::getStartEra
; Function compile flags: /Odtp
;	COMDAT ?lGetStartEra@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetStartEra@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetStartEra, COMDAT

; 1328 : {

	push	ebp
	mov	ebp, esp

; 1329 : 	return BasicLuaMethod(L, &CvGame::getStartEra);

	push	OFFSET ?getStartEra@CvGame@@QBE?AW4EraTypes@@XZ ; CvGame::getStartEra
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4EraTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum EraTypes>
	add	esp, 8

; 1330 : }

	pop	ebp
	ret	0
?lGetStartEra@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetStartEra
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4GameSpeedTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4GameSpeedTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum GameSpeedTypes>
; Function compile flags: /Odtp
;	COMDAT ?lGetGameSpeedType@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetGameSpeedType@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetGameSpeedType, COMDAT

; 1334 : {

	push	ebp
	mov	ebp, esp

; 1335 : 	return BasicLuaMethod(L, &CvGame::getGameSpeedType);

	push	OFFSET ?getGameSpeedType@CvGame@@QBE?AW4GameSpeedTypes@@XZ ; CvGame::getGameSpeedType
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4GameSpeedTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4GameSpeedTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum GameSpeedTypes>
	add	esp, 8

; 1336 : }

	pop	ebp
	ret	0
?lGetGameSpeedType@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetGameSpeedType
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,int>
EXTRN	?getRankPlayer@CvGame@@QAE?AW4PlayerTypes@@H@Z:PROC ; CvGame::getRankPlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetRankPlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRankPlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetRankPlayer, COMDAT

; 1340 : {

	push	ebp
	mov	ebp, esp

; 1341 : 	return BasicLuaMethod(L, &CvGame::getRankPlayer);

	push	OFFSET ?getRankPlayer@CvGame@@QAE?AW4PlayerTypes@@H@Z ; CvGame::getRankPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,int>
	add	esp, 8

; 1342 : }

	pop	ebp
	ret	0
?lGetRankPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetRankPlayer
_TEXT	ENDS
EXTRN	?getPlayerRank@CvGame@@QAEHW4PlayerTypes@@@Z:PROC ; CvGame::getPlayerRank
; Function compile flags: /Odtp
;	COMDAT ?lGetPlayerRank@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPlayerRank@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetPlayerRank, COMDAT

; 1346 : {

	push	ebp
	mov	ebp, esp

; 1347 : 	return BasicLuaMethod(L, &CvGame::getPlayerRank);

	push	OFFSET ?getPlayerRank@CvGame@@QAEHW4PlayerTypes@@@Z ; CvGame::getPlayerRank
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum PlayerTypes>
	add	esp, 8

; 1348 : }

	pop	ebp
	ret	0
?lGetPlayerRank@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetPlayerRank
_TEXT	ENDS
EXTRN	?getPlayerScore@CvGame@@QAEHW4PlayerTypes@@@Z:PROC ; CvGame::getPlayerScore
; Function compile flags: /Odtp
;	COMDAT ?lGetPlayerScore@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPlayerScore@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetPlayerScore, COMDAT

; 1352 : {

	push	ebp
	mov	ebp, esp

; 1353 : 	return BasicLuaMethod(L, &CvGame::getPlayerScore);

	push	OFFSET ?getPlayerScore@CvGame@@QAEHW4PlayerTypes@@@Z ; CvGame::getPlayerScore
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum PlayerTypes>
	add	esp, 8

; 1354 : }

	pop	ebp
	ret	0
?lGetPlayerScore@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetPlayerScore
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,int>
EXTRN	?getRankTeam@CvGame@@QAE?AW4TeamTypes@@H@Z:PROC	; CvGame::getRankTeam
; Function compile flags: /Odtp
;	COMDAT ?lGetRankTeam@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetRankTeam@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetRankTeam, COMDAT

; 1358 : {

	push	ebp
	mov	ebp, esp

; 1359 : 	return BasicLuaMethod(L, &CvGame::getRankTeam);

	push	OFFSET ?getRankTeam@CvGame@@QAE?AW4TeamTypes@@H@Z ; CvGame::getRankTeam
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,int>
	add	esp, 8

; 1360 : }

	pop	ebp
	ret	0
?lGetRankTeam@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetRankTeam
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TeamTypes>
EXTRN	?getTeamRank@CvGame@@QAEHW4TeamTypes@@@Z:PROC	; CvGame::getTeamRank
; Function compile flags: /Odtp
;	COMDAT ?lGetTeamRank@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTeamRank@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetTeamRank, COMDAT

; 1364 : {

	push	ebp
	mov	ebp, esp

; 1365 : 	return BasicLuaMethod(L, &CvGame::getTeamRank);

	push	OFFSET ?getTeamRank@CvGame@@QAEHW4TeamTypes@@@Z ; CvGame::getTeamRank
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TeamTypes>
	add	esp, 8

; 1366 : }

	pop	ebp
	ret	0
?lGetTeamRank@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetTeamRank
_TEXT	ENDS
EXTRN	?getTeamScore@CvGame@@QBEHW4TeamTypes@@@Z:PROC	; CvGame::getTeamScore
; Function compile flags: /Odtp
;	COMDAT ?lGetTeamScore@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTeamScore@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetTeamScore, COMDAT

; 1370 : {

	push	ebp
	mov	ebp, esp

; 1371 : 	return BasicLuaMethod(L, &CvGame::getTeamScore);

	push	OFFSET ?getTeamScore@CvGame@@QBEHW4TeamTypes@@@Z ; CvGame::getTeamScore
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4TeamTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TeamTypes>
	add	esp, 8

; 1372 : }

	pop	ebp
	ret	0
?lGetTeamScore@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetTeamScore
_TEXT	ENDS
EXTRN	?isOption@CvGame@@QBE_NPBD@Z:PROC		; CvGame::isOption
EXTRN	_lua_tolstring:PROC
EXTRN	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z:PROC ; CvGame::isOption
EXTRN	_lua_isnumber:PROC
; Function compile flags: /Odtp
;	COMDAT ?lIsOption@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bResult$ = -5						; size = 1
_kGame$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsOption@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lIsOption, COMDAT

; 1377 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1378 : 	CvGame& kGame = GC.getGame();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _kGame$[ebp], eax

; 1379 : 	bool bResult = false;

	mov	BYTE PTR _bResult$[ebp], 0

; 1380 : 	if(lua_isnumber(L, 1))

	push	1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_isnumber
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@lIsOption

; 1381 : 		bResult = kGame.isOption((GameOptionTypes)lua_tointeger(L, 1));

	push	1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _kGame$[ebp]
	call	?isOption@CvGame@@QBE_NW4GameOptionTypes@@@Z ; CvGame::isOption
	mov	BYTE PTR _bResult$[ebp], al

; 1382 : 	else

	jmp	SHORT $LN1@lIsOption
$LN2@lIsOption:

; 1383 : 		bResult = kGame.isOption(lua_tostring(L, 1));

	push	0
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _kGame$[ebp]
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	mov	BYTE PTR _bResult$[ebp], al
$LN1@lIsOption:

; 1384 : 
; 1385 : 	lua_pushboolean(L, bResult);

	movzx	ecx, BYTE PTR _bResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 1386 : 	return 1;

	mov	eax, 1

; 1387 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsOption@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lIsOption
_TEXT	ENDS
EXTRN	?setOption@CvGame@@QAEXPBD_N@Z:PROC		; CvGame::setOption
EXTRN	?setOption@CvGame@@QAEXW4GameOptionTypes@@_N@Z:PROC ; CvGame::setOption
; Function compile flags: /Odtp
;	COMDAT ?lSetOption@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_kGame$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetOption@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lSetOption, COMDAT

; 1392 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1393 : 	CvGame& kGame = GC.getGame();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _kGame$[ebp], eax

; 1394 : 	if(lua_isnumber(L, 1))

	push	1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_isnumber
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@lSetOption

; 1395 : 		kGame.setOption((GameOptionTypes)lua_tointeger(L, 1), lua_toboolean(L, 2));

	push	2
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	movzx	ecx, al
	push	ecx
	push	1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _kGame$[ebp]
	call	?setOption@CvGame@@QAEXW4GameOptionTypes@@_N@Z ; CvGame::setOption

; 1396 : 	else

	jmp	SHORT $LN1@lSetOption
$LN2@lSetOption:

; 1397 : 		kGame.setOption(lua_tostring(L, 1), lua_toboolean(L, 2));

	push	2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	cl
	movzx	edx, cl
	push	edx
	push	0
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _kGame$[ebp]
	call	?setOption@CvGame@@QAEXPBD_N@Z		; CvGame::setOption
$LN1@lSetOption:

; 1398 : 
; 1399 : 	return 0;

	xor	eax, eax

; 1400 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetOption@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lSetOption
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4MultiplayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4MultiplayerOptionTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum MultiplayerOptionTypes>
EXTRN	?isMPOption@CvGame@@QBE_NW4MultiplayerOptionTypes@@@Z:PROC ; CvGame::isMPOption
; Function compile flags: /Odtp
;	COMDAT ?lIsMPOption@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsMPOption@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsMPOption, COMDAT

; 1404 : {

	push	ebp
	mov	ebp, esp

; 1405 : 	return BasicLuaMethod(L, &CvGame::isMPOption);

	push	OFFSET ?isMPOption@CvGame@@QBE_NW4MultiplayerOptionTypes@@@Z ; CvGame::isMPOption
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4MultiplayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4MultiplayerOptionTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum MultiplayerOptionTypes>
	add	esp, 8

; 1406 : }

	pop	ebp
	ret	0
?lIsMPOption@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsMPOption
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum UnitTypes>
EXTRN	?getUnitCreatedCount@CvGame@@QAEHW4UnitTypes@@@Z:PROC ; CvGame::getUnitCreatedCount
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetUnitCreatedCount, COMDAT

; 1410 : {

	push	ebp
	mov	ebp, esp

; 1411 : 	return BasicLuaMethod(L, &CvGame::getUnitCreatedCount);

	push	OFFSET ?getUnitCreatedCount@CvGame@@QAEHW4UnitTypes@@@Z ; CvGame::getUnitCreatedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum UnitTypes>
	add	esp, 8

; 1412 : }

	pop	ebp
	ret	0
?lGetUnitCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetUnitCreatedCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum UnitClassTypes>
EXTRN	?getUnitClassCreatedCount@CvGame@@QAEHW4UnitClassTypes@@@Z:PROC ; CvGame::getUnitClassCreatedCount
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetUnitClassCreatedCount, COMDAT

; 1416 : {

	push	ebp
	mov	ebp, esp

; 1417 : 	return BasicLuaMethod(L, &CvGame::getUnitClassCreatedCount);

	push	OFFSET ?getUnitClassCreatedCount@CvGame@@QAEHW4UnitClassTypes@@@Z ; CvGame::getUnitClassCreatedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum UnitClassTypes>
	add	esp, 8

; 1418 : }

	pop	ebp
	ret	0
?lGetUnitClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetUnitClassCreatedCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4UnitClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum UnitClassTypes,int>
EXTRN	?isUnitClassMaxedOut@CvGame@@QAE_NW4UnitClassTypes@@H@Z:PROC ; CvGame::isUnitClassMaxedOut
; Function compile flags: /Odtp
;	COMDAT ?lIsUnitClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsUnitClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsUnitClassMaxedOut, COMDAT

; 1422 : {

	push	ebp
	mov	ebp, esp

; 1423 : 	return BasicLuaMethod(L, &CvGame::isUnitClassMaxedOut);

	push	OFFSET ?isUnitClassMaxedOut@CvGame@@QAE_NW4UnitClassTypes@@H@Z ; CvGame::isUnitClassMaxedOut
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4UnitClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum UnitClassTypes,int>
	add	esp, 8

; 1424 : }

	pop	ebp
	ret	0
?lIsUnitClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsUnitClassMaxedOut
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum BuildingClassTypes>
EXTRN	?getBuildingClassCreatedCount@CvGame@@QAEHW4BuildingClassTypes@@@Z:PROC ; CvGame::getBuildingClassCreatedCount
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBuildingClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetBuildingClassCreatedCount, COMDAT

; 1428 : {

	push	ebp
	mov	ebp, esp

; 1429 : 	return BasicLuaMethod(L, &CvGame::getBuildingClassCreatedCount);

	push	OFFSET ?getBuildingClassCreatedCount@CvGame@@QAEHW4BuildingClassTypes@@@Z ; CvGame::getBuildingClassCreatedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4BuildingClassTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum BuildingClassTypes>
	add	esp, 8

; 1430 : }

	pop	ebp
	ret	0
?lGetBuildingClassCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetBuildingClassCreatedCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4BuildingClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum BuildingClassTypes,int>
EXTRN	?isBuildingClassMaxedOut@CvGame@@QAE_NW4BuildingClassTypes@@H@Z:PROC ; CvGame::isBuildingClassMaxedOut
; Function compile flags: /Odtp
;	COMDAT ?lIsBuildingClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBuildingClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsBuildingClassMaxedOut, COMDAT

; 1434 : {

	push	ebp
	mov	ebp, esp

; 1435 : 	return BasicLuaMethod(L, &CvGame::isBuildingClassMaxedOut);

	push	OFFSET ?isBuildingClassMaxedOut@CvGame@@QAE_NW4BuildingClassTypes@@H@Z ; CvGame::isBuildingClassMaxedOut
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4BuildingClassTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum BuildingClassTypes,int>
	add	esp, 8

; 1436 : }

	pop	ebp
	ret	0
?lIsBuildingClassMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsBuildingClassMaxedOut
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum ProjectTypes>
EXTRN	?getProjectCreatedCount@CvGame@@QAEHW4ProjectTypes@@@Z:PROC ; CvGame::getProjectCreatedCount
; Function compile flags: /Odtp
;	COMDAT ?lGetProjectCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetProjectCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetProjectCreatedCount, COMDAT

; 1440 : {

	push	ebp
	mov	ebp, esp

; 1441 : 	return BasicLuaMethod(L, &CvGame::getProjectCreatedCount);

	push	OFFSET ?getProjectCreatedCount@CvGame@@QAEHW4ProjectTypes@@@Z ; CvGame::getProjectCreatedCount
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4ProjectTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum ProjectTypes>
	add	esp, 8

; 1442 : }

	pop	ebp
	ret	0
?lGetProjectCreatedCount@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetProjectCreatedCount
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum ProjectTypes,int>
EXTRN	?isProjectMaxedOut@CvGame@@QAE_NW4ProjectTypes@@H@Z:PROC ; CvGame::isProjectMaxedOut
; Function compile flags: /Odtp
;	COMDAT ?lIsProjectMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsProjectMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsProjectMaxedOut, COMDAT

; 1446 : {

	push	ebp
	mov	ebp, esp

; 1447 : 	return BasicLuaMethod(L, &CvGame::isProjectMaxedOut);

	push	OFFSET ?isProjectMaxedOut@CvGame@@QAE_NW4ProjectTypes@@H@Z ; CvGame::isProjectMaxedOut
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ProjectTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum ProjectTypes,int>
	add	esp, 8

; 1448 : }

	pop	ebp
	ret	0
?lIsProjectMaxedOut@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsProjectMaxedOut
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum VictoryTypes>
EXTRN	?isVictoryValid@CvGame@@QBE_NW4VictoryTypes@@@Z:PROC ; CvGame::isVictoryValid
; Function compile flags: /Odtp
;	COMDAT ?lIsVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsVictoryValid, COMDAT

; 1452 : {

	push	ebp
	mov	ebp, esp

; 1453 : 	return BasicLuaMethod(L, &CvGame::isVictoryValid);

	push	OFFSET ?isVictoryValid@CvGame@@QBE_NW4VictoryTypes@@@Z ; CvGame::isVictoryValid
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4VictoryTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum VictoryTypes>
	add	esp, 8

; 1454 : }

	pop	ebp
	ret	0
?lIsVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsVictoryValid
_TEXT	ENDS
EXTRN	?setVictoryValid@CvGame@@QAEXW4VictoryTypes@@_N@Z:PROC ; CvGame::setVictoryValid
; Function compile flags: /Odtp
;	COMDAT ?lSetVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_bValid$ = -9						; size = 1
_game$ = -8						; size = 4
_eVictoryType$ = -4					; size = 4
_L$ = 8							; size = 4
?lSetVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetVictoryValid, COMDAT

; 1458 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1459 : 	CvGame& game = GC.getGame();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _game$[ebp], eax

; 1460 : 	VictoryTypes eVictoryType = (VictoryTypes)lua_tointeger(L, 1);

	push	1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eVictoryType$[ebp], eax

; 1461 : 	bool bValid = lua_toboolean(L, 2);

	push	2
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bValid$[ebp], al

; 1462 : 	game.setVictoryValid(eVictoryType, bValid);

	movzx	ecx, BYTE PTR _bValid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eVictoryType$[ebp]
	push	edx
	mov	ecx, DWORD PTR _game$[ebp]
	call	?setVictoryValid@CvGame@@QAEXW4VictoryTypes@@_N@Z ; CvGame::setVictoryValid

; 1463 : 
; 1464 : #ifdef AUI_WARNING_FIXES
; 1465 : 	return 0;
; 1466 : #else
; 1467 : 	return true;

	mov	eax, 1

; 1468 : #endif
; 1469 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetVictoryValid@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetVictoryValid
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4SpecialUnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum SpecialUnitTypes>
EXTRN	?isSpecialUnitValid@CvGame@@QAE_NW4SpecialUnitTypes@@@Z:PROC ; CvGame::isSpecialUnitValid
; Function compile flags: /Odtp
;	COMDAT ?lIsSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsSpecialUnitValid, COMDAT

; 1473 : {

	push	ebp
	mov	ebp, esp

; 1474 : 	return BasicLuaMethod(L, &CvGame::isSpecialUnitValid);

	push	OFFSET ?isSpecialUnitValid@CvGame@@QAE_NW4SpecialUnitTypes@@@Z ; CvGame::isSpecialUnitValid
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4SpecialUnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum SpecialUnitTypes>
	add	esp, 8

; 1475 : }

	pop	ebp
	ret	0
?lIsSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsSpecialUnitValid
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4SpecialUnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum SpecialUnitTypes>
EXTRN	?makeSpecialUnitValid@CvGame@@QAEXW4SpecialUnitTypes@@@Z:PROC ; CvGame::makeSpecialUnitValid
; Function compile flags: /Odtp
;	COMDAT ?lMakeSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lMakeSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lMakeSpecialUnitValid, COMDAT

; 1479 : {

	push	ebp
	mov	ebp, esp

; 1480 : 	return BasicLuaMethod(L, &CvGame::makeSpecialUnitValid);

	push	OFFSET ?makeSpecialUnitValid@CvGame@@QAEXW4SpecialUnitTypes@@@Z ; CvGame::makeSpecialUnitValid
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4SpecialUnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum SpecialUnitTypes>
	add	esp, 8

; 1481 : }

	pop	ebp
	ret	0
?lMakeSpecialUnitValid@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lMakeSpecialUnitValid
_TEXT	ENDS
EXTRN	?isNukesValid@CvGame@@QBE_NXZ:PROC		; CvGame::isNukesValid
; Function compile flags: /Odtp
;	COMDAT ?lIsNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsNukesValid, COMDAT

; 1485 : {

	push	ebp
	mov	ebp, esp

; 1486 : 	return BasicLuaMethod(L, &CvGame::isNukesValid);

	push	OFFSET ?isNukesValid@CvGame@@QBE_NXZ	; CvGame::isNukesValid
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 1487 : }

	pop	ebp
	ret	0
?lIsNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsNukesValid
_TEXT	ENDS
EXTRN	?makeNukesValid@CvGame@@QAEX_N@Z:PROC		; CvGame::makeNukesValid
; Function compile flags: /Odtp
;	COMDAT ?lMakeNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lMakeNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lMakeNukesValid, COMDAT

; 1491 : {

	push	ebp
	mov	ebp, esp

; 1492 : 	return BasicLuaMethod(L, &CvGame::makeNukesValid);

	push	OFFSET ?makeNukesValid@CvGame@@QAEX_N@Z	; CvGame::makeNukesValid
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 1493 : }

	pop	ebp
	ret	0
?lMakeNukesValid@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lMakeNukesValid
_TEXT	ENDS
EXTRN	?isInAdvancedStart@CvGame@@QBE_NXZ:PROC		; CvGame::isInAdvancedStart
; Function compile flags: /Odtp
;	COMDAT ?lIsInAdvancedStart@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsInAdvancedStart@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsInAdvancedStart, COMDAT

; 1497 : {

	push	ebp
	mov	ebp, esp

; 1498 : 	return BasicLuaMethod(L, &CvGame::isInAdvancedStart);

	push	OFFSET ?isInAdvancedStart@CvGame@@QBE_NXZ ; CvGame::isInAdvancedStart
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 1499 : }

	pop	ebp
	ret	0
?lIsInAdvancedStart@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsInAdvancedStart
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@PBD@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXPBD@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<char const *>
EXTRN	?setName@CvGame@@QAEXPBD@Z:PROC			; CvGame::setName
; Function compile flags: /Odtp
;	COMDAT ?lSetName@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetName@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lSetName, COMDAT

; 1503 : {

	push	ebp
	mov	ebp, esp

; 1504 : 	return BasicLuaMethod(L, &CvGame::setName);

	push	OFFSET ?setName@CvGame@@QAEXPBD@Z	; CvGame::setName
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@PBD@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXPBD@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<char const *>
	add	esp, 8

; 1505 : }

	pop	ebp
	ret	0
?lSetName@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lSetName
_TEXT	ENDS
PUBLIC	??_C@_03OHKGOOJO@NYI?$AA@			; `string'
EXTRN	_luaL_error:PROC
;	COMDAT ??_C@_03OHKGOOJO@NYI?$AA@
CONST	SEGMENT
??_C@_03OHKGOOJO@NYI?$AA@ DB 'NYI', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?lGetName@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetName@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lGetName, COMDAT

; 1509 : {

	push	ebp
	mov	ebp, esp

; 1510 : 	luaL_error(L, "NYI");

	push	OFFSET ??_C@_03OHKGOOJO@NYI?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_error
	add	esp, 8

; 1511 : 	return 0;

	xor	eax, eax

; 1512 : }

	pop	ebp
	ret	0
?lGetName@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lGetName
_TEXT	ENDS
EXTRN	?get@CvRandom@@QAEGGPBD@Z:PROC			; CvRandom::get
EXTRN	?getJonRand@CvGame@@QAEAAVCvRandom@@XZ:PROC	; CvGame::getJonRand
; Function compile flags: /Odtp
;	COMDAT ?lRand@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_max_num$ = -12						; size = 4
_rand_val$ = -8						; size = 4
_strLog$ = -4						; size = 4
_L$ = 8							; size = 4
?lRand@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lRand, COMDAT

; 1516 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1517 : 	const int max_num = luaL_checkinteger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _max_num$[ebp], eax

; 1518 : 	const char* strLog = luaL_checkstring(L, 2);

	push	0
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checklstring
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _strLog$[ebp], eax

; 1519 : 	const int rand_val = GetInstance()->getJonRand().get(max_num, strLog);

	mov	edx, DWORD PTR _strLog$[ebp]
	push	edx
	movzx	eax, WORD PTR _max_num$[ebp]
	push	eax
	push	0
	push	0
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	ecx, eax
	call	?getJonRand@CvGame@@QAEAAVCvRandom@@XZ	; CvGame::getJonRand
	mov	ecx, eax
	call	?get@CvRandom@@QAEGGPBD@Z		; CvRandom::get
	movzx	ecx, ax
	mov	DWORD PTR _rand_val$[ebp], ecx

; 1520 : 
; 1521 : 	lua_pushinteger(L, rand_val);

	mov	edx, DWORD PTR _rand_val$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 1522 : 	return 1;

	mov	eax, 1

; 1523 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lRand@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lRand
_TEXT	ENDS
EXTRN	?calculateSyncChecksum@CvGame@@QAEHXZ:PROC	; CvGame::calculateSyncChecksum
; Function compile flags: /Odtp
;	COMDAT ?lCalculateSyncChecksum@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateSyncChecksum@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCalculateSyncChecksum, COMDAT

; 1527 : {

	push	ebp
	mov	ebp, esp

; 1528 : 	return BasicLuaMethod(L, &CvGame::calculateSyncChecksum);

	push	OFFSET ?calculateSyncChecksum@CvGame@@QAEHXZ ; CvGame::calculateSyncChecksum
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 1529 : }

	pop	ebp
	ret	0
?lCalculateSyncChecksum@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCalculateSyncChecksum
_TEXT	ENDS
EXTRN	?calculateOptionsChecksum@CvGame@@QAEHXZ:PROC	; CvGame::calculateOptionsChecksum
; Function compile flags: /Odtp
;	COMDAT ?lCalculateOptionsChecksum@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateOptionsChecksum@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lCalculateOptionsChecksum, COMDAT

; 1533 : {

	push	ebp
	mov	ebp, esp

; 1534 : 	return BasicLuaMethod(L, &CvGame::calculateOptionsChecksum);

	push	OFFSET ?calculateOptionsChecksum@CvGame@@QAEHXZ ; CvGame::calculateOptionsChecksum
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 1535 : }

	pop	ebp
	ret	0
?lCalculateOptionsChecksum@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lCalculateOptionsChecksum
_TEXT	ENDS
PUBLIC	??_C@_05CKNOMBAL@Plots?$AA@			; `string'
PUBLIC	??_C@_01NFFPALBN@Y?$AA@				; `string'
PUBLIC	??_C@_01MMEEDKFM@X?$AA@				; `string'
PUBLIC	??_C@_04OJAHODMC@Text?$AA@			; `string'
PUBLIC	??_C@_04KOACHJEN@Type?$AA@			; `string'
PUBLIC	??_C@_04EKEMLFA@Turn?$AA@			; `string'
PUBLIC	??_C@_06NPAAKFED@Player?$AA@			; `string'
EXTRN	_lua_rawseti:PROC
EXTRN	?getPlot@CvReplayMessage@@QBE_NIAAH0@Z:PROC	; CvReplayMessage::getPlot
EXTRN	?getNumPlots@CvReplayMessage@@QBEIXZ:PROC	; CvReplayMessage::getNumPlots
EXTRN	__imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ:PROC
EXTRN	?getText@CvReplayMessage@@QBEABVCvString@@XZ:PROC ; CvReplayMessage::getText
EXTRN	?getType@CvReplayMessage@@QBE?AW4ReplayMessageTypes@@XZ:PROC ; CvReplayMessage::getType
EXTRN	?getTurn@CvReplayMessage@@QBEHXZ:PROC		; CvReplayMessage::getTurn
EXTRN	_lua_setfield:PROC
EXTRN	?getPlayer@CvReplayMessage@@QBE?AW4PlayerTypes@@XZ:PROC ; CvReplayMessage::getPlayer
EXTRN	_lua_gettop:PROC
EXTRN	_lua_createtable:PROC
EXTRN	?getReplayMessage@CvGame@@QBEPBVCvReplayMessage@@I@Z:PROC ; CvGame::getReplayMessage
EXTRN	?getNumReplayMessages@CvGame@@QBEIXZ:PROC	; CvGame::getNumReplayMessages
;	COMDAT ??_C@_05CKNOMBAL@Plots?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_05CKNOMBAL@Plots?$AA@ DB 'Plots', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01NFFPALBN@Y?$AA@
CONST	SEGMENT
??_C@_01NFFPALBN@Y?$AA@ DB 'Y', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01MMEEDKFM@X?$AA@
CONST	SEGMENT
??_C@_01MMEEDKFM@X?$AA@ DB 'X', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04OJAHODMC@Text?$AA@
CONST	SEGMENT
??_C@_04OJAHODMC@Text?$AA@ DB 'Text', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KOACHJEN@Type?$AA@
CONST	SEGMENT
??_C@_04KOACHJEN@Type?$AA@ DB 'Type', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04EKEMLFA@Turn?$AA@
CONST	SEGMENT
??_C@_04EKEMLFA@Turn?$AA@ DB 'Turn', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06NPAAKFED@Player?$AA@
CONST	SEGMENT
??_C@_06NPAAKFED@Player?$AA@ DB 'Player', 00H		; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
CONST	ENDS
;	COMDAT ?lGetReplayMessage@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv180 = -52						; size = 4
_iPlotY$223148 = -48					; size = 4
_iPlotX$223147 = -44					; size = 4
_i$223143 = -40						; size = 4
_plots_t$223142 = -36					; size = 4
_plots_idx$223141 = -32					; size = 4
_nPlots$223139 = -28					; size = 4
_t$223132 = -24						; size = 4
_pMessage$223131 = -20					; size = 4
_text$223136 = -16					; size = 4
_game$ = -12						; size = 4
_idx$ = -8						; size = 4
_nReplayMessages$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetReplayMessage@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetReplayMessage, COMDAT

; 1538 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 1539 : 	CvGame& game = GC.getGame();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _game$[ebp], eax

; 1540 : 	const size_t nReplayMessages = game.getNumReplayMessages();

	mov	ecx, DWORD PTR _game$[ebp]
	call	?getNumReplayMessages@CvGame@@QBEIXZ	; CvGame::getNumReplayMessages
	mov	DWORD PTR _nReplayMessages$[ebp], eax

; 1541 : 
; 1542 : 	unsigned int idx = luaL_checkint(L, 1);

	push	1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _idx$[ebp], eax

; 1543 : 	if(idx < nReplayMessages)

	mov	edx, DWORD PTR _idx$[ebp]
	cmp	edx, DWORD PTR _nReplayMessages$[ebp]
	jae	$LN7@lGetReplay

; 1544 : 	{
; 1545 : 		const CvReplayMessage* pMessage = game.getReplayMessage(idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _game$[ebp]
	call	?getReplayMessage@CvGame@@QBEPBVCvReplayMessage@@I@Z ; CvGame::getReplayMessage
	mov	DWORD PTR _pMessage$223131[ebp], eax

; 1546 : 
; 1547 : 		lua_createtable(L, 0, 5);

	push	5
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 1548 : 		const int t = lua_gettop(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$223132[ebp], eax

; 1549 : 
; 1550 : 		lua_pushinteger(L, pMessage->getPlayer());

	mov	ecx, DWORD PTR _pMessage$223131[ebp]
	call	?getPlayer@CvReplayMessage@@QBE?AW4PlayerTypes@@XZ ; CvReplayMessage::getPlayer
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 1551 : 		lua_setfield(L, t, "Player");

	push	OFFSET ??_C@_06NPAAKFED@Player?$AA@
	mov	ecx, DWORD PTR _t$223132[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1552 : 
; 1553 : 		lua_pushinteger(L, pMessage->getTurn());

	mov	ecx, DWORD PTR _pMessage$223131[ebp]
	call	?getTurn@CvReplayMessage@@QBEHXZ	; CvReplayMessage::getTurn
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 1554 : 		lua_setfield(L, t, "Turn");

	push	OFFSET ??_C@_04EKEMLFA@Turn?$AA@
	mov	ecx, DWORD PTR _t$223132[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1555 : 
; 1556 : 		lua_pushinteger(L, pMessage->getType());

	mov	ecx, DWORD PTR _pMessage$223131[ebp]
	call	?getType@CvReplayMessage@@QBE?AW4ReplayMessageTypes@@XZ ; CvReplayMessage::getType
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 1557 : 		lua_setfield(L, t, "Type");

	push	OFFSET ??_C@_04KOACHJEN@Type?$AA@
	mov	ecx, DWORD PTR _t$223132[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1558 : 
; 1559 : 		const CvString& text = pMessage->getText();

	mov	ecx, DWORD PTR _pMessage$223131[ebp]
	call	?getText@CvReplayMessage@@QBEABVCvString@@XZ ; CvReplayMessage::getText
	mov	DWORD PTR _text$223136[ebp], eax

; 1560 : 		if(text.GetLength() > 0)

	mov	ecx, DWORD PTR _text$223136[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	test	eax, eax
	jle	SHORT $LN6@lGetReplay

; 1561 : 		{
; 1562 : 			lua_pushstring(L, text.c_str());

	mov	ecx, DWORD PTR _text$223136[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 1563 : 			lua_setfield(L, t, "Text");

	push	OFFSET ??_C@_04OJAHODMC@Text?$AA@
	mov	ecx, DWORD PTR _t$223132[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH
$LN6@lGetReplay:

; 1564 : 		}
; 1565 : 
; 1566 : 		const unsigned int nPlots = pMessage->getNumPlots();

	mov	ecx, DWORD PTR _pMessage$223131[ebp]
	call	?getNumPlots@CvReplayMessage@@QBEIXZ	; CvReplayMessage::getNumPlots
	mov	DWORD PTR _nPlots$223139[ebp], eax

; 1567 : 		if(nPlots > 0)

	cmp	DWORD PTR _nPlots$223139[ebp], 0
	jbe	$LN5@lGetReplay

; 1568 : 		{
; 1569 : 			lua_createtable(L, nPlots, 0);

	push	0
	mov	eax, DWORD PTR _nPlots$223139[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 1570 : 			int plots_idx = 1;

	mov	DWORD PTR _plots_idx$223141[ebp], 1

; 1571 : 			int plots_t = lua_gettop(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _plots_t$223142[ebp], eax

; 1572 : 
; 1573 : 			for(unsigned int i = 0; i < nPlots; i++)

	mov	DWORD PTR _i$223143[ebp], 0
	jmp	SHORT $LN4@lGetReplay
$LN3@lGetReplay:
	mov	eax, DWORD PTR _i$223143[ebp]
	add	eax, 1
	mov	DWORD PTR _i$223143[ebp], eax
$LN4@lGetReplay:
	mov	ecx, DWORD PTR _i$223143[ebp]
	cmp	ecx, DWORD PTR _nPlots$223139[ebp]
	jae	$LN2@lGetReplay

; 1574 : 			{
; 1575 : 				int iPlotX, iPlotY;
; 1576 : 				if(pMessage->getPlot(i, iPlotX, iPlotY))

	lea	edx, DWORD PTR _iPlotY$223148[ebp]
	push	edx
	lea	eax, DWORD PTR _iPlotX$223147[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$223143[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pMessage$223131[ebp]
	call	?getPlot@CvReplayMessage@@QBE_NIAAH0@Z	; CvReplayMessage::getPlot
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@lGetReplay

; 1577 : 				{
; 1578 : 					lua_createtable(L, 0, 2);

	push	2
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 1579 : 					lua_pushinteger(L, iPlotX);

	mov	ecx, DWORD PTR _iPlotX$223147[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1580 : 					lua_setfield(L, -2, "X");

	push	OFFSET ??_C@_01MMEEDKFM@X?$AA@
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1581 : 					lua_pushinteger(L, iPlotY);

	mov	ecx, DWORD PTR _iPlotY$223148[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1582 : 					lua_setfield(L, -2, "Y");

	push	OFFSET ??_C@_01NFFPALBN@Y?$AA@
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1583 : 					lua_rawseti(L, plots_t, plots_idx++);

	mov	ecx, DWORD PTR _plots_idx$223141[ebp]
	mov	DWORD PTR tv180[ebp], ecx
	mov	edx, DWORD PTR tv180[ebp]
	push	edx
	mov	eax, DWORD PTR _plots_t$223142[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _plots_idx$223141[ebp]
	add	edx, 1
	mov	DWORD PTR _plots_idx$223141[ebp], edx
$LN1@lGetReplay:

; 1584 : 				}
; 1585 : 			}

	jmp	$LN3@lGetReplay
$LN2@lGetReplay:

; 1586 : 
; 1587 : 			lua_setfield(L, t, "Plots");

	push	OFFSET ??_C@_05CKNOMBAL@Plots?$AA@
	mov	eax, DWORD PTR _t$223132[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH
$LN5@lGetReplay:

; 1588 : 		}
; 1589 : 
; 1590 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN8@lGetReplay
$LN7@lGetReplay:

; 1591 : 	}
; 1592 : 
; 1593 : 	return 0;

	xor	eax, eax
$LN8@lGetReplay:

; 1594 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetReplayMessage@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetReplayMessage
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv191 = -64						; size = 4
tv183 = -60						; size = 4
_iPlotY$223177 = -56					; size = 4
_iPlotX$223176 = -52					; size = 4
_j$223172 = -48						; size = 4
_idx$223170 = -44					; size = 4
_plots_idx$223171 = -40					; size = 4
_nPlots$223168 = -36					; size = 4
_t$223165 = -32						; size = 4
_pMessage$223164 = -28					; size = 4
_text$223166 = -24					; size = 4
_i$223160 = -20						; size = 4
_messages_t$ = -16					; size = 4
_game$ = -12						; size = 4
_nMessages$ = -8					; size = 4
_messages_idx$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetReplayMessages, COMDAT

; 1597 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H

; 1598 : 	CvGame& game = GC.getGame();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _game$[ebp], eax

; 1599 : 	const unsigned int nMessages = game.getNumReplayMessages();

	mov	ecx, DWORD PTR _game$[ebp]
	call	?getNumReplayMessages@CvGame@@QBEIXZ	; CvGame::getNumReplayMessages
	mov	DWORD PTR _nMessages$[ebp], eax

; 1600 : 
; 1601 : 	lua_createtable(L, nMessages, 0);

	push	0
	mov	ecx, DWORD PTR _nMessages$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 1602 : 	const int messages_t = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _messages_t$[ebp], eax

; 1603 : 	int messages_idx = 1;

	mov	DWORD PTR _messages_idx$[ebp], 1

; 1604 : 
; 1605 : 	for(unsigned int i = 0; i < nMessages; i++)

	mov	DWORD PTR _i$223160[ebp], 0
	jmp	SHORT $LN9@lGetReplay@2
$LN8@lGetReplay@2:
	mov	ecx, DWORD PTR _i$223160[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$223160[ebp], ecx
$LN9@lGetReplay@2:
	mov	edx, DWORD PTR _i$223160[ebp]
	cmp	edx, DWORD PTR _nMessages$[ebp]
	jae	$LN7@lGetReplay@2

; 1606 : 	{
; 1607 : 		const CvReplayMessage* pMessage = game.getReplayMessage(i);

	mov	eax, DWORD PTR _i$223160[ebp]
	push	eax
	mov	ecx, DWORD PTR _game$[ebp]
	call	?getReplayMessage@CvGame@@QBEPBVCvReplayMessage@@I@Z ; CvGame::getReplayMessage
	mov	DWORD PTR _pMessage$223164[ebp], eax

; 1608 : 
; 1609 : 		lua_createtable(L, 0, 5);

	push	5
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 1610 : 		const int t = lua_gettop(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$223165[ebp], eax

; 1611 : 
; 1612 : 		lua_pushinteger(L, pMessage->getPlayer());

	mov	ecx, DWORD PTR _pMessage$223164[ebp]
	call	?getPlayer@CvReplayMessage@@QBE?AW4PlayerTypes@@XZ ; CvReplayMessage::getPlayer
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 1613 : 		lua_setfield(L, t, "Player");

	push	OFFSET ??_C@_06NPAAKFED@Player?$AA@
	mov	ecx, DWORD PTR _t$223165[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1614 : 
; 1615 : 		lua_pushinteger(L, pMessage->getTurn());

	mov	ecx, DWORD PTR _pMessage$223164[ebp]
	call	?getTurn@CvReplayMessage@@QBEHXZ	; CvReplayMessage::getTurn
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 1616 : 		lua_setfield(L, t, "Turn");

	push	OFFSET ??_C@_04EKEMLFA@Turn?$AA@
	mov	ecx, DWORD PTR _t$223165[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1617 : 
; 1618 : 		lua_pushinteger(L, pMessage->getType());

	mov	ecx, DWORD PTR _pMessage$223164[ebp]
	call	?getType@CvReplayMessage@@QBE?AW4ReplayMessageTypes@@XZ ; CvReplayMessage::getType
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 1619 : 		lua_setfield(L, t, "Type");

	push	OFFSET ??_C@_04KOACHJEN@Type?$AA@
	mov	ecx, DWORD PTR _t$223165[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1620 : 
; 1621 : 		const CvString& text = pMessage->getText();

	mov	ecx, DWORD PTR _pMessage$223164[ebp]
	call	?getText@CvReplayMessage@@QBEABVCvString@@XZ ; CvReplayMessage::getText
	mov	DWORD PTR _text$223166[ebp], eax

; 1622 : 		if(text.GetLength() > 0)

	mov	ecx, DWORD PTR _text$223166[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	test	eax, eax
	jle	SHORT $LN6@lGetReplay@2

; 1623 : 		{
; 1624 : 			lua_pushstring(L, text.c_str());

	mov	ecx, DWORD PTR _text$223166[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 1625 : 			lua_setfield(L, t, "Text");

	push	OFFSET ??_C@_04OJAHODMC@Text?$AA@
	mov	ecx, DWORD PTR _t$223165[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH
$LN6@lGetReplay@2:

; 1626 : 		}
; 1627 : 
; 1628 : 		const unsigned int nPlots = pMessage->getNumPlots();

	mov	ecx, DWORD PTR _pMessage$223164[ebp]
	call	?getNumPlots@CvReplayMessage@@QBEIXZ	; CvReplayMessage::getNumPlots
	mov	DWORD PTR _nPlots$223168[ebp], eax

; 1629 : 		if(nPlots > 0)

	cmp	DWORD PTR _nPlots$223168[ebp], 0
	jbe	$LN5@lGetReplay@2

; 1630 : 		{
; 1631 : 			lua_createtable(L, nPlots, 0);

	push	0
	mov	eax, DWORD PTR _nPlots$223168[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 1632 : 			int idx = 1;

	mov	DWORD PTR _idx$223170[ebp], 1

; 1633 : 			int plots_idx = lua_gettop(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _plots_idx$223171[ebp], eax

; 1634 : 
; 1635 : 			for(unsigned int j = 0; j < nPlots; j++)

	mov	DWORD PTR _j$223172[ebp], 0
	jmp	SHORT $LN4@lGetReplay@2
$LN3@lGetReplay@2:
	mov	eax, DWORD PTR _j$223172[ebp]
	add	eax, 1
	mov	DWORD PTR _j$223172[ebp], eax
$LN4@lGetReplay@2:
	mov	ecx, DWORD PTR _j$223172[ebp]
	cmp	ecx, DWORD PTR _nPlots$223168[ebp]
	jae	$LN2@lGetReplay@2

; 1636 : 			{
; 1637 : 				int iPlotX, iPlotY;
; 1638 : 				if(pMessage->getPlot(j, iPlotX, iPlotY))

	lea	edx, DWORD PTR _iPlotY$223177[ebp]
	push	edx
	lea	eax, DWORD PTR _iPlotX$223176[ebp]
	push	eax
	mov	ecx, DWORD PTR _j$223172[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pMessage$223164[ebp]
	call	?getPlot@CvReplayMessage@@QBE_NIAAH0@Z	; CvReplayMessage::getPlot
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@lGetReplay@2

; 1639 : 				{
; 1640 : 					lua_createtable(L, 0, 2);

	push	2
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 1641 : 					lua_pushinteger(L, iPlotX);

	mov	ecx, DWORD PTR _iPlotX$223176[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1642 : 					lua_setfield(L, -2, "X");

	push	OFFSET ??_C@_01MMEEDKFM@X?$AA@
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1643 : 					lua_pushinteger(L, iPlotY);

	mov	ecx, DWORD PTR _iPlotY$223177[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 1644 : 					lua_setfield(L, -2, "Y");

	push	OFFSET ??_C@_01NFFPALBN@Y?$AA@
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 1645 : 					lua_rawseti(L, plots_idx, idx++);

	mov	ecx, DWORD PTR _idx$223170[ebp]
	mov	DWORD PTR tv183[ebp], ecx
	mov	edx, DWORD PTR tv183[ebp]
	push	edx
	mov	eax, DWORD PTR _plots_idx$223171[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _idx$223170[ebp]
	add	edx, 1
	mov	DWORD PTR _idx$223170[ebp], edx
$LN1@lGetReplay@2:

; 1646 : 				}
; 1647 : 			}

	jmp	$LN3@lGetReplay@2
$LN2@lGetReplay@2:

; 1648 : 
; 1649 : 			lua_setfield(L, t, "Plots");

	push	OFFSET ??_C@_05CKNOMBAL@Plots?$AA@
	mov	eax, DWORD PTR _t$223165[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH
$LN5@lGetReplay@2:

; 1650 : 		}
; 1651 : 
; 1652 : 		lua_rawseti(L, messages_t, messages_idx++);

	mov	edx, DWORD PTR _messages_idx$[ebp]
	mov	DWORD PTR tv191[ebp], edx
	mov	eax, DWORD PTR tv191[ebp]
	push	eax
	mov	ecx, DWORD PTR _messages_t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _messages_idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _messages_idx$[ebp], eax

; 1653 : 	}

	jmp	$LN8@lGetReplay@2
$LN7@lGetReplay@2:

; 1654 : 
; 1655 : 	return 1;

	mov	eax, 1

; 1656 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetReplayMessages
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEIXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<unsigned int>
; Function compile flags: /Odtp
;	COMDAT ?lGetNumReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumReplayMessages, COMDAT

; 1660 : {

	push	ebp
	mov	ebp, esp

; 1661 : 	return BasicLuaMethod(L, &CvGame::getNumReplayMessages);

	push	OFFSET ?getNumReplayMessages@CvGame@@QBEIXZ ; CvGame::getNumReplayMessages
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEIXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<unsigned int>
	add	esp, 8

; 1662 : }

	pop	ebp
	ret	0
?lGetNumReplayMessages@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumReplayMessages
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetReplayInfo@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetReplayInfo@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetReplayInfo, COMDAT

; 1666 : {

	push	ebp
	mov	ebp, esp

; 1667 : 	luaL_error(L, "NYI");

	push	OFFSET ??_C@_03OHKGOOJO@NYI?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_error
	add	esp, 8

; 1668 : 	return 0;

	xor	eax, eax

; 1669 : }

	pop	ebp
	ret	0
?lGetReplayInfo@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetReplayInfo
_TEXT	ENDS
EXTRN	?saveReplay@CvGame@@QAEXXZ:PROC			; CvGame::saveReplay
; Function compile flags: /Odtp
;	COMDAT ?lSaveReplay@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSaveReplay@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSaveReplay, COMDAT

; 1673 : {

	push	ebp
	mov	ebp, esp

; 1674 : 	return BasicLuaMethod(L, &CvGame::saveReplay);

	push	OFFSET ?saveReplay@CvGame@@QAEXXZ	; CvGame::saveReplay
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod
	add	esp, 8

; 1675 : }

	pop	ebp
	ret	0
?lSaveReplay@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSaveReplay
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,enum LeaderHeadTypes,enum CivilizationTypes>
EXTRN	?addPlayer@CvGame@@QAEXW4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@Z:PROC ; CvGame::addPlayer
; Function compile flags: /Odtp
;	COMDAT ?lAddPlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lAddPlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lAddPlayer, COMDAT

; 1679 : {

	push	ebp
	mov	ebp, esp

; 1680 : 	return BasicLuaMethod(L, &CvGame::addPlayer);

	push	OFFSET ?addPlayer@CvGame@@QAEXW4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@Z ; CvGame::addPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,enum LeaderHeadTypes,enum CivilizationTypes>
	add	esp, 8

; 1681 : }

	pop	ebp
	ret	0
?lAddPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lAddPlayer
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HHW4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHW4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int,enum YieldTypes,int>
EXTRN	?setPlotExtraYield@CvGame@@QAEXHHW4YieldTypes@@H@Z:PROC ; CvGame::setPlotExtraYield
; Function compile flags: /Odtp
;	COMDAT ?lSetPlotExtraYield@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetPlotExtraYield@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetPlotExtraYield, COMDAT

; 1685 : {

	push	ebp
	mov	ebp, esp

; 1686 : 	return BasicLuaMethod(L, &CvGame::setPlotExtraYield);

	push	OFFSET ?setPlotExtraYield@CvGame@@QAEXHHW4YieldTypes@@H@Z ; CvGame::setPlotExtraYield
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HHW4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHW4YieldTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int,enum YieldTypes,int>
	add	esp, 8

; 1687 : }

	pop	ebp
	ret	0
?lSetPlotExtraYield@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetPlotExtraYield
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HHH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int,int>
EXTRN	?changePlotExtraCost@CvGame@@QAEXHHH@Z:PROC	; CvGame::changePlotExtraCost
; Function compile flags: /Odtp
;	COMDAT ?lChangePlotExtraCost@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangePlotExtraCost@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lChangePlotExtraCost, COMDAT

; 1691 : {

	push	ebp
	mov	ebp, esp

; 1692 : 	return BasicLuaMethod(L, &CvGame::changePlotExtraCost);

	push	OFFSET ?changePlotExtraCost@CvGame@@QAEXHHH@Z ; CvGame::changePlotExtraCost
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@HHH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int,int>
	add	esp, 8

; 1693 : }

	pop	ebp
	ret	0
?lChangePlotExtraCost@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lChangePlotExtraCost
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4CivilizationTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum CivilizationTypes>
EXTRN	?isCivEverActive@CvGame@@QBE_NW4CivilizationTypes@@@Z:PROC ; CvGame::isCivEverActive
; Function compile flags: /Odtp
;	COMDAT ?lIsCivEverActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsCivEverActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsCivEverActive, COMDAT

; 1697 : {

	push	ebp
	mov	ebp, esp

; 1698 : 	return BasicLuaMethod(L, &CvGame::isCivEverActive);

	push	OFFSET ?isCivEverActive@CvGame@@QBE_NW4CivilizationTypes@@@Z ; CvGame::isCivEverActive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4CivilizationTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum CivilizationTypes>
	add	esp, 8

; 1699 : }

	pop	ebp
	ret	0
?lIsCivEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsCivEverActive
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4LeaderHeadTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum LeaderHeadTypes>
EXTRN	?isLeaderEverActive@CvGame@@QBE_NW4LeaderHeadTypes@@@Z:PROC ; CvGame::isLeaderEverActive
; Function compile flags: /Odtp
;	COMDAT ?lIsLeaderEverActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsLeaderEverActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsLeaderEverActive, COMDAT

; 1703 : {

	push	ebp
	mov	ebp, esp

; 1704 : 	return BasicLuaMethod(L, &CvGame::isLeaderEverActive);

	push	OFFSET ?isLeaderEverActive@CvGame@@QBE_NW4LeaderHeadTypes@@@Z ; CvGame::isLeaderEverActive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4LeaderHeadTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum LeaderHeadTypes>
	add	esp, 8

; 1705 : }

	pop	ebp
	ret	0
?lIsLeaderEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsLeaderEverActive
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum UnitTypes>
EXTRN	?isUnitEverActive@CvGame@@QBE_NW4UnitTypes@@@Z:PROC ; CvGame::isUnitEverActive
; Function compile flags: /Odtp
;	COMDAT ?lIsUnitEverActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsUnitEverActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsUnitEverActive, COMDAT

; 1709 : {

	push	ebp
	mov	ebp, esp

; 1710 : 	return BasicLuaMethod(L, &CvGame::isUnitEverActive);

	push	OFFSET ?isUnitEverActive@CvGame@@QBE_NW4UnitTypes@@@Z ; CvGame::isUnitEverActive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4UnitTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum UnitTypes>
	add	esp, 8

; 1711 : }

	pop	ebp
	ret	0
?lIsUnitEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsUnitEverActive
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum BuildingTypes>
EXTRN	?isBuildingEverActive@CvGame@@QBE_NW4BuildingTypes@@@Z:PROC ; CvGame::isBuildingEverActive
; Function compile flags: /Odtp
;	COMDAT ?lIsBuildingEverActive@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsBuildingEverActive@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsBuildingEverActive, COMDAT

; 1715 : {

	push	ebp
	mov	ebp, esp

; 1716 : 	return BasicLuaMethod(L, &CvGame::isBuildingEverActive);

	push	OFFSET ?isBuildingEverActive@CvGame@@QBE_NW4BuildingTypes@@@Z ; CvGame::isBuildingEverActive
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4BuildingTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum BuildingTypes>
	add	esp, 8

; 1717 : }

	pop	ebp
	ret	0
?lIsBuildingEverActive@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsBuildingEverActive
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ControlTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum ControlTypes>
EXTRN	?canDoControl@CvGame@@QAE_NW4ControlTypes@@@Z:PROC ; CvGame::canDoControl
; Function compile flags: /Odtp
;	COMDAT ?lCanDoControl@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCanDoControl@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lCanDoControl, COMDAT

; 1721 : {

	push	ebp
	mov	ebp, esp

; 1722 : 	return BasicLuaMethod(L, &CvGame::canDoControl);

	push	OFFSET ?canDoControl@CvGame@@QAE_NW4ControlTypes@@@Z ; CvGame::canDoControl
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_NW4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ControlTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum ControlTypes>
	add	esp, 8

; 1723 : }

	pop	ebp
	ret	0
?lCanDoControl@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lCanDoControl
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4ControlTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum ControlTypes>
EXTRN	?doControl@CvGame@@QAEXW4ControlTypes@@@Z:PROC	; CvGame::doControl
; Function compile flags: /Odtp
;	COMDAT ?lDoControl@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoControl@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lDoControl, COMDAT

; 1727 : {

	push	ebp
	mov	ebp, esp

; 1728 : 	return BasicLuaMethod(L, &CvGame::doControl);

	push	OFFSET ?doControl@CvGame@@QAEXW4ControlTypes@@@Z ; CvGame::doControl
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4ControlTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum ControlTypes>
	add	esp, 8

; 1729 : }

	pop	ebp
	ret	0
?lDoControl@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lDoControl
_TEXT	ENDS
EXTRN	?DoMinorPledgeProtection@CvGame@@QAEXW4PlayerTypes@@0_N1@Z:PROC ; CvGame::DoMinorPledgeProtection
; Function compile flags: /Odtp
;	COMDAT ?lDoMinorPledgeProtection@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226937 = -16						; size = 4
_bProtect$ = -9						; size = 1
_iMajor$ = -8						; size = 4
_iMinor$ = -4						; size = 4
_L$ = 8							; size = 4
?lDoMinorPledgeProtection@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lDoMinorPledgeProtection, COMDAT

; 1733 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1734 : 	const int iMajor = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iMajor$[ebp], eax

; 1735 : 	const int iMinor = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iMinor$[ebp], eax

; 1736 : 	const bool bProtect = lua_toboolean(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR _bProtect$[ebp], al

; 1737 : 	GC.getGame().DoMinorPledgeProtection((PlayerTypes)iMajor, (PlayerTypes)iMinor, bProtect);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T226937[ebp], ecx
	push	0
	movzx	edx, BYTE PTR _bProtect$[ebp]
	push	edx
	mov	eax, DWORD PTR _iMinor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T226937[ebp]
	call	?DoMinorPledgeProtection@CvGame@@QAEXW4PlayerTypes@@0_N1@Z ; CvGame::DoMinorPledgeProtection

; 1738 : 
; 1739 : 	return 1;

	mov	eax, 1

; 1740 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lDoMinorPledgeProtection@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lDoMinorPledgeProtection
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lDoMinorGoldGift@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoMinorGoldGift@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lDoMinorGoldGift, COMDAT

; 1745 : {

	push	ebp
	mov	ebp, esp

; 1746 : 	return lDoMinorGiftGold(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?lDoMinorGiftGold@CvLuaGame@@KAHPAUlua_State@@@Z ; CvLuaGame::lDoMinorGiftGold
	add	esp, 4

; 1747 : }

	pop	ebp
	ret	0
?lDoMinorGoldGift@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lDoMinorGoldGift
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,int>
EXTRN	?DoMinorGiftGold@CvGame@@QAEXW4PlayerTypes@@H@Z:PROC ; CvGame::DoMinorGiftGold
; Function compile flags: /Odtp
;	COMDAT ?lDoMinorGiftGold@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoMinorGiftGold@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lDoMinorGiftGold, COMDAT

; 1751 : {

	push	ebp
	mov	ebp, esp

; 1752 : 	return BasicLuaMethod(L, &CvGame::DoMinorGiftGold);

	push	OFFSET ?DoMinorGiftGold@CvGame@@QAEXW4PlayerTypes@@H@Z ; CvGame::DoMinorGiftGold
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@H@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,int>
	add	esp, 8

; 1753 : }

	pop	ebp
	ret	0
?lDoMinorGiftGold@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lDoMinorGiftGold
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4PlayerTypes@@W41@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@1HH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes,int,int>
EXTRN	?DoMinorGiftTileImprovement@CvGame@@QAEXW4PlayerTypes@@0HH@Z:PROC ; CvGame::DoMinorGiftTileImprovement
; Function compile flags: /Odtp
;	COMDAT ?lDoMinorGiftTileImprovement@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lDoMinorGiftTileImprovement@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lDoMinorGiftTileImprovement, COMDAT

; 1757 : {

	push	ebp
	mov	ebp, esp

; 1758 : 	return BasicLuaMethod(L, &CvGame::DoMinorGiftTileImprovement);

	push	OFFSET ?DoMinorGiftTileImprovement@CvGame@@QAEXW4PlayerTypes@@0HH@Z ; CvGame::DoMinorGiftTileImprovement
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@W41@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@1HH@Z@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes,int,int>
	add	esp, 8

; 1759 : }

	pop	ebp
	ret	0
?lDoMinorGiftTileImprovement@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lDoMinorGiftTileImprovement
_TEXT	ENDS
EXTRN	?DoMinorBullyGold@CvGame@@QAEXW4PlayerTypes@@0@Z:PROC ; CvGame::DoMinorBullyGold
; Function compile flags: /Odtp
;	COMDAT ?lDoMinorBullyGold@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226949 = -12						; size = 4
_iBully$ = -8						; size = 4
_iMinor$ = -4						; size = 4
_L$ = 8							; size = 4
?lDoMinorBullyGold@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lDoMinorBullyGold, COMDAT

; 1763 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1764 : 	const int iBully = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iBully$[ebp], eax

; 1765 : 	const int iMinor = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iMinor$[ebp], eax

; 1766 : 	GC.getGame().DoMinorBullyGold((PlayerTypes)iBully, (PlayerTypes)iMinor);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T226949[ebp], edx
	mov	eax, DWORD PTR _iMinor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iBully$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T226949[ebp]
	call	?DoMinorBullyGold@CvGame@@QAEXW4PlayerTypes@@0@Z ; CvGame::DoMinorBullyGold

; 1767 : 
; 1768 : 	return 1;

	mov	eax, 1

; 1769 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lDoMinorBullyGold@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lDoMinorBullyGold
_TEXT	ENDS
EXTRN	?DoMinorBullyUnit@CvGame@@QAEXW4PlayerTypes@@0@Z:PROC ; CvGame::DoMinorBullyUnit
; Function compile flags: /Odtp
;	COMDAT ?lDoMinorBullyUnit@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226955 = -12						; size = 4
_iBully$ = -8						; size = 4
_iMinor$ = -4						; size = 4
_L$ = 8							; size = 4
?lDoMinorBullyUnit@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lDoMinorBullyUnit, COMDAT

; 1773 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1774 : 	const int iBully = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iBully$[ebp], eax

; 1775 : 	const int iMinor = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iMinor$[ebp], eax

; 1776 : 	GC.getGame().DoMinorBullyUnit((PlayerTypes)iBully, (PlayerTypes)iMinor);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T226955[ebp], edx
	mov	eax, DWORD PTR _iMinor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iBully$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T226955[ebp]
	call	?DoMinorBullyUnit@CvGame@@QAEXW4PlayerTypes@@0@Z ; CvGame::DoMinorBullyUnit

; 1777 : 
; 1778 : 	return 1;

	mov	eax, 1

; 1779 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lDoMinorBullyUnit@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lDoMinorBullyUnit
_TEXT	ENDS
EXTRN	?DoMinorBuyout@CvGame@@QAEXW4PlayerTypes@@0@Z:PROC ; CvGame::DoMinorBuyout
; Function compile flags: /Odtp
;	COMDAT ?lDoMinorBuyout@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226961 = -12						; size = 4
_iMajor$ = -8						; size = 4
_iMinor$ = -4						; size = 4
_L$ = 8							; size = 4
?lDoMinorBuyout@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lDoMinorBuyout, COMDAT

; 1783 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1784 : 	const int iMajor = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iMajor$[ebp], eax

; 1785 : 	const int iMinor = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iMinor$[ebp], eax

; 1786 : 	GC.getGame().DoMinorBuyout((PlayerTypes)iMajor, (PlayerTypes)iMinor);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T226961[ebp], edx
	mov	eax, DWORD PTR _iMinor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iMajor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T226961[ebp]
	call	?DoMinorBuyout@CvGame@@QAEXW4PlayerTypes@@0@Z ; CvGame::DoMinorBuyout

; 1787 : 
; 1788 : 	return 1;

	mov	eax, 1

; 1789 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lDoMinorBuyout@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lDoMinorBuyout
_TEXT	ENDS
EXTRN	?GetBestWondersPlayer@CvGame@@QAE?AW4PlayerTypes@@XZ:PROC ; CvGame::GetBestWondersPlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetBestWondersPlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBestWondersPlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetBestWondersPlayer, COMDAT

; 1793 : {

	push	ebp
	mov	ebp, esp

; 1794 : 	return BasicLuaMethod(L, &CvGame::GetBestWondersPlayer);

	push	OFFSET ?GetBestWondersPlayer@CvGame@@QAE?AW4PlayerTypes@@XZ ; CvGame::GetBestWondersPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 1795 : }

	pop	ebp
	ret	0
?lGetBestWondersPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetBestWondersPlayer
_TEXT	ENDS
EXTRN	?GetBestPoliciesPlayer@CvGame@@QAE?AW4PlayerTypes@@XZ:PROC ; CvGame::GetBestPoliciesPlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetBestPoliciesPlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBestPoliciesPlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetBestPoliciesPlayer, COMDAT

; 1799 : {

	push	ebp
	mov	ebp, esp

; 1800 : 	return BasicLuaMethod(L, &CvGame::GetBestPoliciesPlayer);

	push	OFFSET ?GetBestPoliciesPlayer@CvGame@@QAE?AW4PlayerTypes@@XZ ; CvGame::GetBestPoliciesPlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 1801 : }

	pop	ebp
	ret	0
?lGetBestPoliciesPlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetBestPoliciesPlayer
_TEXT	ENDS
EXTRN	?GetBestGreatPeoplePlayer@CvGame@@QAE?AW4PlayerTypes@@XZ:PROC ; CvGame::GetBestGreatPeoplePlayer
; Function compile flags: /Odtp
;	COMDAT ?lGetBestGreatPeoplePlayer@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetBestGreatPeoplePlayer@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetBestGreatPeoplePlayer, COMDAT

; 1805 : {

	push	ebp
	mov	ebp, esp

; 1806 : 	return BasicLuaMethod(L, &CvGame::GetBestGreatPeoplePlayer);

	push	OFFSET ?GetBestGreatPeoplePlayer@CvGame@@QAE?AW4PlayerTypes@@XZ ; CvGame::GetBestGreatPeoplePlayer
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes>
	add	esp, 8

; 1807 : }

	pop	ebp
	ret	0
?lGetBestGreatPeoplePlayer@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetBestGreatPeoplePlayer
_TEXT	ENDS
EXTRN	?IsEverAttackedTutorial@CvGame@@QBE_NXZ:PROC	; CvGame::IsEverAttackedTutorial
; Function compile flags: /Odtp
;	COMDAT ?lIsEverAttackedTutorial@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsEverAttackedTutorial@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsEverAttackedTutorial, COMDAT

; 1810 : {

	push	ebp
	mov	ebp, esp

; 1811 : 	return BasicLuaMethod(L, &CvGame::IsEverAttackedTutorial);

	push	OFFSET ?IsEverAttackedTutorial@CvGame@@QBE_NXZ ; CvGame::IsEverAttackedTutorial
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
	add	esp, 8

; 1812 : }

	pop	ebp
	ret	0
?lIsEverAttackedTutorial@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsEverAttackedTutorial
_TEXT	ENDS
PUBLIC	??_C@_04JKHNIKCB@TEMP?$AA@			; `string'
;	COMDAT ??_C@_04JKHNIKCB@TEMP?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_04JKHNIKCB@TEMP?$AA@ DB 'TEMP', 00H		; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
CONST	ENDS
;	COMDAT ?lGameplayDiplomacyAILeaderMessage@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv80 = -20						; size = 4
$T226975 = -16						; size = 4
_eMessage$ = -12					; size = 4
_iPlayer$ = -8						; size = 4
_iData1$ = -4						; size = 4
_L$ = 8							; size = 4
?lGameplayDiplomacyAILeaderMessage@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGameplayDiplomacyAILeaderMessage, COMDAT

; 1815 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 1816 : 	const int iPlayer = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iPlayer$[ebp], eax

; 1817 : 	const int eMessage = lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eMessage$[ebp], eax

; 1818 : 	const int iData1 = lua_tointeger(L, 3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iData1$[ebp], eax

; 1819 : 	gDLL->GameplayDiplomacyAILeaderMessage((PlayerTypes) iPlayer, DIPLO_UI_STATE_DEFAULT_ROOT, "TEMP", (LeaderheadAnimationTypes) eMessage, iData1);

	mov	eax, DWORD PTR $T226975[ebp]
	mov	DWORD PTR tv80[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv80[ebp], ecx
	mov	edx, DWORD PTR _iData1$[ebp]
	push	edx
	mov	eax, DWORD PTR _eMessage$[ebp]
	push	eax
	push	OFFSET ??_C@_04JKHNIKCB@TEMP?$AA@
	push	0
	mov	ecx, DWORD PTR _iPlayer$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv80[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv80[ebp]
	mov	edx, DWORD PTR [eax+736]
	call	edx

; 1820 : 
; 1821 : 	return 1;

	mov	eax, 1

; 1822 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGameplayDiplomacyAILeaderMessage@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGameplayDiplomacyAILeaderMessage
_TEXT	ENDS
EXTRN	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ:PROC ; CvResourceInfo::getResourceUsage
EXTRN	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z:PROC ; CvGlobals::getResourceInfo
; Function compile flags: /Odtp
;	COMDAT ?lGetResourceUsageType@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eUsage$223713 = -12					; size = 4
_eResource$ = -8					; size = 4
_pkResourceInfo$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetResourceUsageType@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetResourceUsageType, COMDAT

; 1826 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 1827 : 	const ResourceTypes eResource = (ResourceTypes) lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eResource$[ebp], eax

; 1828 : 	const CvResourceInfo* pkResourceInfo = GC.getResourceInfo(eResource);

	mov	ecx, DWORD PTR _eResource$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	DWORD PTR _pkResourceInfo$[ebp], eax

; 1829 : 	if (pkResourceInfo)

	cmp	DWORD PTR _pkResourceInfo$[ebp], 0
	je	SHORT $LN2@lGetResour

; 1830 : 	{
; 1831 : 		ResourceUsageTypes eUsage = GC.getResourceInfo(eResource)->getResourceUsage();

	mov	edx, DWORD PTR _eResource$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	ecx, eax
	call	?getResourceUsage@CvResourceInfo@@QBE?AW4ResourceUsageTypes@@XZ ; CvResourceInfo::getResourceUsage
	mov	DWORD PTR _eUsage$223713[ebp], eax

; 1832 : 		lua_pushinteger(L, eUsage);

	mov	eax, DWORD PTR _eUsage$223713[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1833 : 	}
; 1834 : 	else

	jmp	SHORT $LN1@lGetResour
$LN2@lGetResour:

; 1835 : 		lua_pushinteger(L, -1);		// NO_USAGE

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8
$LN1@lGetResour:

; 1836 : 
; 1837 : 	return 1;

	mov	eax, 1

; 1838 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetResourceUsageType@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetResourceUsageType
_TEXT	ENDS
PUBLIC	??_C@_0BM@PPNKKLAI@Unit?5row?5at?5ID?5?$CFd?5is?5empty?4?$AA@ ; `string'
EXTRN	?GetResourceQuantityRequirement@CvUnitEntry@@QBEHH@Z:PROC ; CvUnitEntry::GetResourceQuantityRequirement
;	COMDAT ??_C@_0BM@PPNKKLAI@Unit?5row?5at?5ID?5?$CFd?5is?5empty?4?$AA@
CONST	SEGMENT
??_C@_0BM@PPNKKLAI@Unit?5row?5at?5ID?5?$CFd?5is?5empty?4?$AA@ DB 'Unit ro'
	DB	'w at ID %d is empty.', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?lGetNumResourceRequiredForUnit@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iNumNeeded$ = -16					; size = 4
_eUnit$ = -12						; size = 4
_pkUnitInfo$ = -8					; size = 4
_eResource$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumResourceRequiredForUnit@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumResourceRequiredForUnit, COMDAT

; 1841 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1842 : 	const UnitTypes eUnit = (UnitTypes) lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnit$[ebp], eax

; 1843 : 	const ResourceTypes eResource = (ResourceTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eResource$[ebp], eax

; 1844 : 
; 1845 : 	CvUnitEntry* pkUnitInfo = GC.getUnitInfo(eUnit);

	mov	edx, DWORD PTR _eUnit$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR _pkUnitInfo$[ebp], eax

; 1846 : 	if(pkUnitInfo == NULL)

	cmp	DWORD PTR _pkUnitInfo$[ebp], 0
	jne	SHORT $LN1@lGetNumRes

; 1847 : 	{
; 1848 : 		luaL_error(L, "Unit row at ID %d is empty.", eUnit);

	mov	eax, DWORD PTR _eUnit$[ebp]
	push	eax
	push	OFFSET ??_C@_0BM@PPNKKLAI@Unit?5row?5at?5ID?5?$CFd?5is?5empty?4?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_error
	add	esp, 12					; 0000000cH

; 1849 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN2@lGetNumRes
$LN1@lGetNumRes:

; 1850 : 	}
; 1851 : 
; 1852 : 	const int iNumNeeded = pkUnitInfo->GetResourceQuantityRequirement(eResource);

	mov	edx, DWORD PTR _eResource$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkUnitInfo$[ebp]
	call	?GetResourceQuantityRequirement@CvUnitEntry@@QBEHH@Z ; CvUnitEntry::GetResourceQuantityRequirement
	mov	DWORD PTR _iNumNeeded$[ebp], eax

; 1853 : 
; 1854 : 	lua_pushinteger(L, iNumNeeded);

	mov	eax, DWORD PTR _iNumNeeded$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 1855 : 
; 1856 : 	return 1;

	mov	eax, 1
$LN2@lGetNumRes:

; 1857 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumResourceRequiredForUnit@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumResourceRequiredForUnit
_TEXT	ENDS
EXTRN	?GetResourceQuantityRequirement@CvBuildingEntry@@QBEHH@Z:PROC ; CvBuildingEntry::GetResourceQuantityRequirement
; Function compile flags: /Odtp
;	COMDAT ?lGetNumResourceRequiredForBuilding@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_iNumNeeded$ = -20					; size = 4
_eBuilding$ = -16					; size = 4
_pkBuildingInfo$ = -12					; size = 4
_eResource$ = -8					; size = 4
_pkResourceInfo$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumResourceRequiredForBuilding@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumResourceRequiredForBuilding, COMDAT

; 1860 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 1861 : 	const BuildingTypes eBuilding = (BuildingTypes) luaL_checkint(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eBuilding$[ebp], eax

; 1862 : 	const ResourceTypes eResource = (ResourceTypes) luaL_checkint(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eResource$[ebp], eax

; 1863 : 
; 1864 : 	CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	edx, DWORD PTR _eBuilding$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$[ebp], eax

; 1865 : 	CvResourceInfo* pkResourceInfo = GC.getResourceInfo(eResource);

	mov	eax, DWORD PTR _eResource$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getResourceInfo@CvGlobals@@QAEPAVCvResourceInfo@@W4ResourceTypes@@@Z ; CvGlobals::getResourceInfo
	mov	DWORD PTR _pkResourceInfo$[ebp], eax

; 1866 : 
; 1867 : 	int iNumNeeded = 0;

	mov	DWORD PTR _iNumNeeded$[ebp], 0

; 1868 : 	if(pkBuildingInfo && pkResourceInfo)

	cmp	DWORD PTR _pkBuildingInfo$[ebp], 0
	je	SHORT $LN1@lGetNumRes@2
	cmp	DWORD PTR _pkResourceInfo$[ebp], 0
	je	SHORT $LN1@lGetNumRes@2

; 1869 : 	{
; 1870 : 		iNumNeeded = pkBuildingInfo->GetResourceQuantityRequirement(eResource);

	mov	ecx, DWORD PTR _eResource$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkBuildingInfo$[ebp]
	call	?GetResourceQuantityRequirement@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetResourceQuantityRequirement
	mov	DWORD PTR _iNumNeeded$[ebp], eax
$LN1@lGetNumRes@2:

; 1871 : 	}
; 1872 : 
; 1873 : 	lua_pushinteger(L, iNumNeeded);

	mov	edx, DWORD PTR _iNumNeeded$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 1874 : 	return 1;

	mov	eax, 1

; 1875 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumResourceRequiredForBuilding@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumResourceRequiredForBuilding
_TEXT	ENDS
EXTRN	?IsCombatWarned@CvGame@@QBE_NXZ:PROC		; CvGame::IsCombatWarned
; Function compile flags: /Odtp
;	COMDAT ?lIsCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226987 = -4						; size = 4
_L$ = 8							; size = 4
?lIsCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsCombatWarned, COMDAT

; 1879 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1880 : 	lua_pushboolean(L, GC.getGame().IsCombatWarned());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T226987[ebp], eax
	mov	ecx, DWORD PTR $T226987[ebp]
	call	?IsCombatWarned@CvGame@@QBE_NXZ		; CvGame::IsCombatWarned
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushboolean
	add	esp, 8

; 1881 : 	return 1;

	mov	eax, 1

; 1882 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsCombatWarned
_TEXT	ENDS
EXTRN	?SetCombatWarned@CvGame@@QAEX_N@Z:PROC		; CvGame::SetCombatWarned
; Function compile flags: /Odtp
;	COMDAT ?lSetCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T226993 = -4						; size = 4
_L$ = 8							; size = 4
?lSetCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetCombatWarned, COMDAT

; 1886 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 1887 : 	GC.getGame().SetCombatWarned(lua_toboolean(L, 1));

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T226993[ebp], eax
	push	1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR $T226993[ebp]
	call	?SetCombatWarned@CvGame@@QAEX_N@Z	; CvGame::SetCombatWarned

; 1888 : 	return 1;

	mov	eax, 1

; 1889 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetCombatWarned@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetCombatWarned
_TEXT	ENDS
EXTRN	?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z:PROC ; CvAdvisorCounsel::BuildCounselList
EXTRN	?GetAdvisorCounsel@CvGame@@QAEPAVCvAdvisorCounsel@@XZ:PROC ; CvGame::GetAdvisorCounsel
; Function compile flags: /Odtp
;	COMDAT ?lGetAdvisorCounsel@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T227036 = -76						; size = 4
$T227032 = -72						; size = 4
$T227028 = -68						; size = 4
$T227024 = -64						; size = 4
$T227020 = -60						; size = 4
$T227016 = -56						; size = 4
$T227012 = -52						; size = 4
$T227011 = -48						; size = 4
$T227007 = -44						; size = 4
$T227003 = -40						; size = 4
$T226999 = -36						; size = 4
_eNextAdvisorType$223760 = -32				; size = 4
_ui$223754 = -28					; size = 4
_ePlayer$ = -24						; size = 4
_eCurrentAdvisorType$ = -20				; size = 4
_iAdvisorTableLevel$ = -16				; size = 4
_iAdvisorIndex$ = -12					; size = 4
_bTableOpen$ = -5					; size = 1
_iTopLevelLua$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetAdvisorCounsel@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetAdvisorCounsel, COMDAT

; 1893 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH

; 1894 : 	const PlayerTypes ePlayer = GC.getGame().getActivePlayer();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T226999[ebp], eax
	mov	ecx, DWORD PTR $T226999[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	mov	DWORD PTR _ePlayer$[ebp], eax

; 1895 : 	GC.getGame().GetAdvisorCounsel()->BuildCounselList(ePlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227003[ebp], ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T227003[ebp]
	call	?GetAdvisorCounsel@CvGame@@QAEPAVCvAdvisorCounsel@@XZ ; CvGame::GetAdvisorCounsel
	mov	ecx, eax
	call	?BuildCounselList@CvAdvisorCounsel@@QAEXW4PlayerTypes@@@Z ; CvAdvisorCounsel::BuildCounselList

; 1896 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 1897 : 	int iTopLevelLua = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _iTopLevelLua$[ebp], eax

; 1898 : 
; 1899 : 	AdvisorTypes eCurrentAdvisorType = NUM_ADVISOR_TYPES;

	mov	DWORD PTR _eCurrentAdvisorType$[ebp], 4

; 1900 : 	int iAdvisorTableLevel = -1;

	mov	DWORD PTR _iAdvisorTableLevel$[ebp], -1

; 1901 : 	int iAdvisorIndex = 0;

	mov	DWORD PTR _iAdvisorIndex$[ebp], 0

; 1902 : 	bool bTableOpen = false;

	mov	BYTE PTR _bTableOpen$[ebp], 0

; 1903 : 	for(uint ui = 0; ui < GC.getGame().GetAdvisorCounsel()->m_aCounsel.size(); ui++)

	mov	DWORD PTR _ui$223754[ebp], 0
	jmp	SHORT $LN7@lGetAdviso
$LN6@lGetAdviso:
	mov	edx, DWORD PTR _ui$223754[ebp]
	add	edx, 1
	mov	DWORD PTR _ui$223754[ebp], edx
$LN7@lGetAdviso:
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227007[ebp], eax
	mov	ecx, DWORD PTR $T227007[ebp]
	call	?GetAdvisorCounsel@CvGame@@QAEPAVCvAdvisorCounsel@@XZ ; CvGame::GetAdvisorCounsel
	mov	DWORD PTR $T227011[ebp], eax
	mov	ecx, DWORD PTR $T227011[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T227012[ebp], edx
	mov	eax, DWORD PTR _ui$223754[ebp]
	cmp	eax, DWORD PTR $T227012[ebp]
	jae	$LN5@lGetAdviso

; 1904 : 	{
; 1905 : 		if(GC.getGame().GetAdvisorCounsel()->m_aCounsel[ui].m_eAdvisor != eCurrentAdvisorType)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227016[ebp], ecx
	mov	ecx, DWORD PTR $T227016[ebp]
	call	?GetAdvisorCounsel@CvGame@@QAEPAVCvAdvisorCounsel@@XZ ; CvGame::GetAdvisorCounsel
	mov	DWORD PTR $T227020[ebp], eax
	mov	edx, DWORD PTR _ui$223754[ebp]
	imul	edx, 520				; 00000208H
	mov	eax, DWORD PTR $T227020[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx+ecx]
	cmp	edx, DWORD PTR _eCurrentAdvisorType$[ebp]
	je	$LN4@lGetAdviso

; 1906 : 		{
; 1907 : 			// close out previous table
; 1908 : 			if(eCurrentAdvisorType != NUM_ADVISOR_TYPES)

	cmp	DWORD PTR _eCurrentAdvisorType$[ebp], 4
	je	SHORT $LN3@lGetAdviso

; 1909 : 			{
; 1910 : 				CvAssertMsg(bTableOpen, "Table should be open");
; 1911 : 				lua_rawseti(L, iTopLevelLua, eCurrentAdvisorType);

	mov	eax, DWORD PTR _eCurrentAdvisorType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iTopLevelLua$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH

; 1912 : 				bTableOpen = false;

	mov	BYTE PTR _bTableOpen$[ebp], 0
$LN3@lGetAdviso:

; 1913 : 			}
; 1914 : 
; 1915 : 			AdvisorTypes eNextAdvisorType = GC.getGame().GetAdvisorCounsel()->m_aCounsel[ui].m_eAdvisor;

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227024[ebp], eax
	mov	ecx, DWORD PTR $T227024[ebp]
	call	?GetAdvisorCounsel@CvGame@@QAEPAVCvAdvisorCounsel@@XZ ; CvGame::GetAdvisorCounsel
	mov	DWORD PTR $T227028[ebp], eax
	mov	ecx, DWORD PTR _ui$223754[ebp]
	imul	ecx, 520				; 00000208H
	mov	edx, DWORD PTR $T227028[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx+eax]
	mov	DWORD PTR _eNextAdvisorType$223760[ebp], ecx

; 1916 : 			if(eNextAdvisorType == NO_ADVISOR_TYPE)

	cmp	DWORD PTR _eNextAdvisorType$223760[ebp], -1
	jne	SHORT $LN2@lGetAdviso

; 1917 : 			{
; 1918 : 				// no more valid advisor info. Bail out!
; 1919 : 				break;

	jmp	$LN5@lGetAdviso
$LN2@lGetAdviso:

; 1920 : 			}
; 1921 : 			eCurrentAdvisorType = eNextAdvisorType;

	mov	edx, DWORD PTR _eNextAdvisorType$223760[ebp]
	mov	DWORD PTR _eCurrentAdvisorType$[ebp], edx

; 1922 : 			CvAssertMsg(!bTableOpen, "table should be open");
; 1923 : 			lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 1924 : 			bTableOpen = true;

	mov	BYTE PTR _bTableOpen$[ebp], 1

; 1925 : 			iAdvisorTableLevel = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _iAdvisorTableLevel$[ebp], eax

; 1926 : 			iAdvisorIndex = 0;

	mov	DWORD PTR _iAdvisorIndex$[ebp], 0
$LN4@lGetAdviso:

; 1927 : 		}
; 1928 : 
; 1929 : 		CvAssertMsg(bTableOpen, "Table should be open");
; 1930 : 		lua_pushstring(L, GC.getGame().GetAdvisorCounsel()->m_aCounsel[ui].m_strTxtKey);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227032[ebp], edx
	mov	ecx, DWORD PTR $T227032[ebp]
	call	?GetAdvisorCounsel@CvGame@@QAEPAVCvAdvisorCounsel@@XZ ; CvGame::GetAdvisorCounsel
	mov	DWORD PTR $T227036[ebp], eax
	mov	eax, DWORD PTR _ui$223754[ebp]
	imul	eax, 520				; 00000208H
	mov	ecx, DWORD PTR $T227036[ebp]
	mov	edx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [edx+eax+4]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 1931 : 		lua_rawseti(L, iAdvisorTableLevel, iAdvisorIndex);

	mov	edx, DWORD PTR _iAdvisorIndex$[ebp]
	push	edx
	mov	eax, DWORD PTR _iAdvisorTableLevel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH

; 1932 : 		iAdvisorIndex++;

	mov	edx, DWORD PTR _iAdvisorIndex$[ebp]
	add	edx, 1
	mov	DWORD PTR _iAdvisorIndex$[ebp], edx

; 1933 : 	}

	jmp	$LN6@lGetAdviso
$LN5@lGetAdviso:

; 1934 : 
; 1935 : 	if(bTableOpen)

	movzx	eax, BYTE PTR _bTableOpen$[ebp]
	test	eax, eax
	je	SHORT $LN1@lGetAdviso

; 1936 : 	{
; 1937 : 		lua_rawseti(L, iTopLevelLua, eCurrentAdvisorType);

	mov	ecx, DWORD PTR _eCurrentAdvisorType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iTopLevelLua$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
$LN1@lGetAdviso:

; 1938 : 	}
; 1939 : 
; 1940 : 	return 1;

	mov	eax, 1

; 1941 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetAdvisorCounsel@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetAdvisorCounsel
_TEXT	ENDS
EXTRN	?UpdateCityRecommendations@CvAdvisorRecommender@@QAEXPAVCvCity@@@Z:PROC ; CvAdvisorRecommender::UpdateCityRecommendations
EXTRN	?GetAdvisorRecommender@CvGame@@QAEPAVCvAdvisorRecommender@@XZ:PROC ; CvGame::GetAdvisorRecommender
; Function compile flags: /Odtp
;	COMDAT ?lSetAdvisorRecommenderCity@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T227042 = -8						; size = 4
_pkCity$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetAdvisorRecommenderCity@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetAdvisorRecommenderCity, COMDAT

; 1945 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1946 : 	CvCity* pkCity = CvLuaCity::GetInstance(L, 1);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 1947 : 	GC.getGame().GetAdvisorRecommender()->UpdateCityRecommendations(pkCity);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227042[ebp], ecx
	mov	edx, DWORD PTR _pkCity$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T227042[ebp]
	call	?GetAdvisorRecommender@CvGame@@QAEPAVCvAdvisorRecommender@@XZ ; CvGame::GetAdvisorRecommender
	mov	ecx, eax
	call	?UpdateCityRecommendations@CvAdvisorRecommender@@QAEXPAVCvCity@@@Z ; CvAdvisorRecommender::UpdateCityRecommendations

; 1948 : 	return 1;

	mov	eax, 1

; 1949 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetAdvisorRecommenderCity@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetAdvisorRecommenderCity
_TEXT	ENDS
EXTRN	?IsUnitRecommended@CvAdvisorRecommender@@QAE_NW4UnitTypes@@W4AdvisorTypes@@@Z:PROC ; CvAdvisorRecommender::IsUnitRecommended
; Function compile flags: /Odtp
;	COMDAT ?lIsUnitRecommended@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T227048 = -16						; size = 4
_eAdvisor$ = -12					; size = 4
_eUnit$ = -8						; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsUnitRecommended@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsUnitRecommended, COMDAT

; 1953 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1954 : 	UnitTypes eUnit = (UnitTypes)lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnit$[ebp], eax

; 1955 : 	AdvisorTypes eAdvisor = (AdvisorTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eAdvisor$[ebp], eax

; 1956 : 	bool bResult = GC.getGame().GetAdvisorRecommender()->IsUnitRecommended(eUnit, eAdvisor);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227048[ebp], edx
	mov	eax, DWORD PTR _eAdvisor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T227048[ebp]
	call	?GetAdvisorRecommender@CvGame@@QAEPAVCvAdvisorRecommender@@XZ ; CvGame::GetAdvisorRecommender
	mov	ecx, eax
	call	?IsUnitRecommended@CvAdvisorRecommender@@QAE_NW4UnitTypes@@W4AdvisorTypes@@@Z ; CvAdvisorRecommender::IsUnitRecommended
	mov	BYTE PTR _bResult$[ebp], al

; 1957 : 	lua_pushboolean(L, bResult);

	movzx	edx, BYTE PTR _bResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 1958 : 	return 1;

	mov	eax, 1

; 1959 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsUnitRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsUnitRecommended
_TEXT	ENDS
EXTRN	?IsBuildingRecommended@CvAdvisorRecommender@@QAE_NW4BuildingTypes@@W4AdvisorTypes@@@Z:PROC ; CvAdvisorRecommender::IsBuildingRecommended
; Function compile flags: /Odtp
;	COMDAT ?lIsBuildingRecommended@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T227054 = -16						; size = 4
_eAdvisor$ = -12					; size = 4
_eBuilding$ = -8					; size = 4
_bResult$ = -1						; size = 1
_L$ = 8							; size = 4
?lIsBuildingRecommended@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsBuildingRecommended, COMDAT

; 1963 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1964 : 	BuildingTypes eBuilding = (BuildingTypes)lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eBuilding$[ebp], eax

; 1965 : 	AdvisorTypes eAdvisor = (AdvisorTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eAdvisor$[ebp], eax

; 1966 : 	bool bResult = GC.getGame().GetAdvisorRecommender()->IsBuildingRecommended(eBuilding, eAdvisor);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227054[ebp], edx
	mov	eax, DWORD PTR _eAdvisor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eBuilding$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T227054[ebp]
	call	?GetAdvisorRecommender@CvGame@@QAEPAVCvAdvisorRecommender@@XZ ; CvGame::GetAdvisorRecommender
	mov	ecx, eax
	call	?IsBuildingRecommended@CvAdvisorRecommender@@QAE_NW4BuildingTypes@@W4AdvisorTypes@@@Z ; CvAdvisorRecommender::IsBuildingRecommended
	mov	BYTE PTR _bResult$[ebp], al

; 1967 : 	lua_pushboolean(L, bResult);

	movzx	edx, BYTE PTR _bResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 1968 : 	return 1;

	mov	eax, 1

; 1969 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsBuildingRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsBuildingRecommended
_TEXT	ENDS
EXTRN	?IsProjectRecommended@CvAdvisorRecommender@@QAE_NW4ProjectTypes@@W4AdvisorTypes@@@Z:PROC ; CvAdvisorRecommender::IsProjectRecommended
; Function compile flags: /Odtp
;	COMDAT ?lIsProjectRecommended@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T227060 = -16						; size = 4
_eAdvisor$ = -12					; size = 4
_bResult$ = -5						; size = 1
_eProject$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsProjectRecommended@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsProjectRecommended, COMDAT

; 1973 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1974 : 	ProjectTypes eProject = (ProjectTypes)lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eProject$[ebp], eax

; 1975 : 	AdvisorTypes eAdvisor = (AdvisorTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eAdvisor$[ebp], eax

; 1976 : 	bool bResult = GC.getGame().GetAdvisorRecommender()->IsProjectRecommended(eProject, eAdvisor);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227060[ebp], edx
	mov	eax, DWORD PTR _eAdvisor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eProject$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T227060[ebp]
	call	?GetAdvisorRecommender@CvGame@@QAEPAVCvAdvisorRecommender@@XZ ; CvGame::GetAdvisorRecommender
	mov	ecx, eax
	call	?IsProjectRecommended@CvAdvisorRecommender@@QAE_NW4ProjectTypes@@W4AdvisorTypes@@@Z ; CvAdvisorRecommender::IsProjectRecommended
	mov	BYTE PTR _bResult$[ebp], al

; 1977 : 	lua_pushboolean(L, bResult);

	movzx	edx, BYTE PTR _bResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 1978 : 	return 1;

	mov	eax, 1

; 1979 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsProjectRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsProjectRecommended
_TEXT	ENDS
EXTRN	?UpdateTechRecommendations@CvAdvisorRecommender@@QAEXW4PlayerTypes@@@Z:PROC ; CvAdvisorRecommender::UpdateTechRecommendations
; Function compile flags: /Odtp
;	COMDAT ?lSetAdvisorRecommenderTech@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T227066 = -8						; size = 4
_ePlayer$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetAdvisorRecommenderTech@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetAdvisorRecommenderTech, COMDAT

; 1983 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 1984 : 	PlayerTypes ePlayer = (PlayerTypes)lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 1985 : 	GC.getGame().GetAdvisorRecommender()->UpdateTechRecommendations(ePlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227066[ebp], ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T227066[ebp]
	call	?GetAdvisorRecommender@CvGame@@QAEPAVCvAdvisorRecommender@@XZ ; CvGame::GetAdvisorRecommender
	mov	ecx, eax
	call	?UpdateTechRecommendations@CvAdvisorRecommender@@QAEXW4PlayerTypes@@@Z ; CvAdvisorRecommender::UpdateTechRecommendations

; 1986 : 	return 1;

	mov	eax, 1

; 1987 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetAdvisorRecommenderTech@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetAdvisorRecommenderTech
_TEXT	ENDS
EXTRN	?IsTechRecommended@CvAdvisorRecommender@@QAE_NW4TechTypes@@W4AdvisorTypes@@@Z:PROC ; CvAdvisorRecommender::IsTechRecommended
; Function compile flags: /Odtp
;	COMDAT ?lIsTechRecommended@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T227072 = -16						; size = 4
_eAdvisor$ = -12					; size = 4
_bResult$ = -5						; size = 1
_eTech$ = -4						; size = 4
_L$ = 8							; size = 4
?lIsTechRecommended@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lIsTechRecommended, COMDAT

; 1991 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 1992 : 	TechTypes eTech = (TechTypes)lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eTech$[ebp], eax

; 1993 : 	AdvisorTypes eAdvisor = (AdvisorTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eAdvisor$[ebp], eax

; 1994 : 	bool bResult = GC.getGame().GetAdvisorRecommender()->IsTechRecommended(eTech, eAdvisor);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227072[ebp], edx
	mov	eax, DWORD PTR _eAdvisor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eTech$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T227072[ebp]
	call	?GetAdvisorRecommender@CvGame@@QAEPAVCvAdvisorRecommender@@XZ ; CvGame::GetAdvisorRecommender
	mov	ecx, eax
	call	?IsTechRecommended@CvAdvisorRecommender@@QAE_NW4TechTypes@@W4AdvisorTypes@@@Z ; CvAdvisorRecommender::IsTechRecommended
	mov	BYTE PTR _bResult$[ebp], al

; 1995 : 	lua_pushboolean(L, bResult);

	movzx	edx, BYTE PTR _bResult$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushboolean
	add	esp, 8

; 1996 : 	return 1;

	mov	eax, 1

; 1997 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsTechRecommended@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lIsTechRecommended
_TEXT	ENDS
EXTRN	?GetVariableCitySizeFromPopulation@CvGame@@QAEII@Z:PROC ; CvGame::GetVariableCitySizeFromPopulation
; Function compile flags: /Odtp
;	COMDAT ?lGetVariableCitySizeFromPopulation@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T227078 = -12						; size = 4
_nPopulation$ = -8					; size = 4
_nSize$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetVariableCitySizeFromPopulation@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetVariableCitySizeFromPopulation, COMDAT

; 2000 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2001 : 	unsigned int nPopulation = (unsigned int)lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _nPopulation$[ebp], eax

; 2002 : 	unsigned int nSize = GC.getGame().GetVariableCitySizeFromPopulation(nPopulation);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227078[ebp], ecx
	mov	edx, DWORD PTR _nPopulation$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T227078[ebp]
	call	?GetVariableCitySizeFromPopulation@CvGame@@QAEII@Z ; CvGame::GetVariableCitySizeFromPopulation
	mov	DWORD PTR _nSize$[ebp], eax

; 2003 : 	lua_pushinteger(L, nSize);

	mov	eax, DWORD PTR _nSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2004 : 
; 2005 : 	return 1;

	mov	eax, 1

; 2006 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetVariableCitySizeFromPopulation@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetVariableCitySizeFromPopulation
_TEXT	ENDS
EXTRN	?GetResearchAgreementCost@CvGame@@QAEHW4PlayerTypes@@0@Z:PROC ; CvGame::GetResearchAgreementCost
; Function compile flags: /Odtp
;	COMDAT ?lGetResearchAgreementCost@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T227084 = -16						; size = 4
_ePlayer1$ = -12					; size = 4
_ePlayer2$ = -8						; size = 4
_iCost$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetResearchAgreementCost@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetResearchAgreementCost, COMDAT

; 2009 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 2010 : 	const PlayerTypes ePlayer1 = (PlayerTypes) lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer1$[ebp], eax

; 2011 : 	const PlayerTypes ePlayer2 = (PlayerTypes) lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _ePlayer2$[ebp], eax

; 2012 : 	int iCost = GC.getGame().GetResearchAgreementCost(ePlayer1, ePlayer2);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227084[ebp], edx
	mov	eax, DWORD PTR _ePlayer2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T227084[ebp]
	call	?GetResearchAgreementCost@CvGame@@QAEHW4PlayerTypes@@0@Z ; CvGame::GetResearchAgreementCost
	mov	DWORD PTR _iCost$[ebp], eax

; 2013 : 	lua_pushinteger(L, iCost);

	mov	edx, DWORD PTR _iCost$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2014 : 
; 2015 : 	return 1;

	mov	eax, 1

; 2016 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetResearchAgreementCost@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetResearchAgreementCost
_TEXT	ENDS
EXTRN	?GetGameOption@CvPreGame@@YA_NPBDAAH@Z:PROC	; CvPreGame::GetGameOption
; Function compile flags: /Odtp
;	COMDAT ?lGetCustomOption@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_szOptionName$ = -8					; size = 4
_i$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetCustomOption@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetCustomOption, COMDAT

; 2019 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2020 : 	const char* szOptionName = luaL_checkstring(L, 1);

	push	0
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checklstring
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _szOptionName$[ebp], eax

; 2021 : 	int i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 2022 : 	if(CvPreGame::GetGameOption(szOptionName, i))

	lea	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _szOptionName$[ebp]
	push	edx
	call	?GetGameOption@CvPreGame@@YA_NPBDAAH@Z	; CvPreGame::GetGameOption
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@lGetCustom

; 2023 : 	{
; 2024 : 		lua_pushinteger(L, i);

	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2025 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN2@lGetCustom
$LN1@lGetCustom:

; 2026 : 	}
; 2027 : 
; 2028 : 	return 0;

	xor	eax, eax
$LN2@lGetCustom:

; 2029 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCustomOption@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetCustomOption
_TEXT	ENDS
EXTRN	?GetNumCitiesPolicyCostMod@CvWorldInfo@@QBEHXZ:PROC ; CvWorldInfo::GetNumCitiesPolicyCostMod
EXTRN	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ:PROC	; CvMap::getWorldInfo
; Function compile flags: /Odtp
;	COMDAT ?lGetNumCitiesPolicyCostMod@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T227092 = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumCitiesPolicyCostMod@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumCitiesPolicyCostMod, COMDAT

; 2032 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2033 : 	lua_pushinteger(L, GC.getMap().getWorldInfo().GetNumCitiesPolicyCostMod());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T227092[ebp], eax
	mov	ecx, DWORD PTR $T227092[ebp]
	call	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ ; CvMap::getWorldInfo
	mov	ecx, eax
	call	?GetNumCitiesPolicyCostMod@CvWorldInfo@@QBEHXZ ; CvWorldInfo::GetNumCitiesPolicyCostMod
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2034 : 	return 1;

	mov	eax, 1

; 2035 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumCitiesPolicyCostMod@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumCitiesPolicyCostMod
_TEXT	ENDS
EXTRN	?GetNumCitiesTechCostMod@CvWorldInfo@@QBEHXZ:PROC ; CvWorldInfo::GetNumCitiesTechCostMod
; Function compile flags: /Odtp
;	COMDAT ?lGetNumCitiesTechCostMod@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T227098 = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumCitiesTechCostMod@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumCitiesTechCostMod, COMDAT

; 2038 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2039 : 	lua_pushinteger(L, GC.getMap().getWorldInfo().GetNumCitiesTechCostMod());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T227098[ebp], eax
	mov	ecx, DWORD PTR $T227098[ebp]
	call	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ ; CvMap::getWorldInfo
	mov	ecx, eax
	call	?GetNumCitiesTechCostMod@CvWorldInfo@@QBEHXZ ; CvWorldInfo::GetNumCitiesTechCostMod
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2040 : 	return 1;

	mov	eax, 1

; 2041 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumCitiesTechCostMod@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumCitiesTechCostMod
_TEXT	ENDS
EXTRN	?GetYieldChange@CvBuildingEntry@@QBEHH@Z:PROC	; CvBuildingEntry::GetYieldChange
EXTRN	?getYieldInfo@CvGlobals@@QAEPAVCvYieldInfo@@W4YieldTypes@@@Z:PROC ; CvGlobals::getYieldInfo
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingYieldChange@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eYield$ = -20						; size = 4
_eBuilding$ = -16					; size = 4
_pkBuildingInfo$ = -12					; size = 4
_iYieldChange$ = -8					; size = 4
_pkYieldInfo$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetBuildingYieldChange@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetBuildingYieldChange, COMDAT

; 2044 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 2045 : 	const BuildingTypes eBuilding = (BuildingTypes) luaL_checkint(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eBuilding$[ebp], eax

; 2046 : 	const YieldTypes eYield = (YieldTypes) luaL_checkint(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eYield$[ebp], eax

; 2047 : 
; 2048 : 	CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	edx, DWORD PTR _eBuilding$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$[ebp], eax

; 2049 : 	CvYieldInfo* pkYieldInfo = GC.getYieldInfo(eYield);

	mov	eax, DWORD PTR _eYield$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getYieldInfo@CvGlobals@@QAEPAVCvYieldInfo@@W4YieldTypes@@@Z ; CvGlobals::getYieldInfo
	mov	DWORD PTR _pkYieldInfo$[ebp], eax

; 2050 : 
; 2051 : 	int iYieldChange = 0;

	mov	DWORD PTR _iYieldChange$[ebp], 0

; 2052 : 	if(pkBuildingInfo && pkYieldInfo)

	cmp	DWORD PTR _pkBuildingInfo$[ebp], 0
	je	SHORT $LN1@lGetBuildi
	cmp	DWORD PTR _pkYieldInfo$[ebp], 0
	je	SHORT $LN1@lGetBuildi

; 2053 : 	{
; 2054 : 		iYieldChange = pkBuildingInfo->GetYieldChange(eYield);

	mov	ecx, DWORD PTR _eYield$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkBuildingInfo$[ebp]
	call	?GetYieldChange@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetYieldChange
	mov	DWORD PTR _iYieldChange$[ebp], eax
$LN1@lGetBuildi:

; 2055 : 	}
; 2056 : 
; 2057 : 	lua_pushinteger(L, iYieldChange);

	mov	edx, DWORD PTR _iYieldChange$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2058 : 	return 1;

	mov	eax, 1

; 2059 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuildingYieldChange@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetBuildingYieldChange
_TEXT	ENDS
EXTRN	?GetYieldModifier@CvBuildingEntry@@QBEHH@Z:PROC	; CvBuildingEntry::GetYieldModifier
; Function compile flags: /Odtp
;	COMDAT ?lGetBuildingYieldModifier@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eYield$ = -20						; size = 4
_eBuilding$ = -16					; size = 4
_iYieldModifier$ = -12					; size = 4
_pkBuildingInfo$ = -8					; size = 4
_pkYieldInfo$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetBuildingYieldModifier@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetBuildingYieldModifier, COMDAT

; 2062 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 2063 : 	const BuildingTypes eBuilding = (BuildingTypes) luaL_checkint(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eBuilding$[ebp], eax

; 2064 : 	const YieldTypes eYield = (YieldTypes) luaL_checkint(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eYield$[ebp], eax

; 2065 : 
; 2066 : 	CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	edx, DWORD PTR _eBuilding$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$[ebp], eax

; 2067 : 	CvYieldInfo* pkYieldInfo = GC.getYieldInfo(eYield);

	mov	eax, DWORD PTR _eYield$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getYieldInfo@CvGlobals@@QAEPAVCvYieldInfo@@W4YieldTypes@@@Z ; CvGlobals::getYieldInfo
	mov	DWORD PTR _pkYieldInfo$[ebp], eax

; 2068 : 
; 2069 : 	int iYieldModifier = 0;

	mov	DWORD PTR _iYieldModifier$[ebp], 0

; 2070 : 	if(pkBuildingInfo && pkYieldInfo)

	cmp	DWORD PTR _pkBuildingInfo$[ebp], 0
	je	SHORT $LN1@lGetBuildi@2
	cmp	DWORD PTR _pkYieldInfo$[ebp], 0
	je	SHORT $LN1@lGetBuildi@2

; 2071 : 	{
; 2072 : 		iYieldModifier= pkBuildingInfo->GetYieldModifier(eYield);

	mov	ecx, DWORD PTR _eYield$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkBuildingInfo$[ebp]
	call	?GetYieldModifier@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetYieldModifier
	mov	DWORD PTR _iYieldModifier$[ebp], eax
$LN1@lGetBuildi@2:

; 2073 : 	}
; 2074 : 
; 2075 : 	lua_pushinteger(L, iYieldModifier);

	mov	edx, DWORD PTR _iYieldModifier$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2076 : 	return 1;

	mov	eax, 1

; 2077 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetBuildingYieldModifier@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetBuildingYieldModifier
_TEXT	ENDS
EXTRN	?getNumCitiesUnhappinessPercent@CvWorldInfo@@QBEHXZ:PROC ; CvWorldInfo::getNumCitiesUnhappinessPercent
; Function compile flags: /Odtp
;	COMDAT ?lGetWorldNumCitiesUnhappinessPercent@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T227108 = -4						; size = 4
_L$ = 8							; size = 4
?lGetWorldNumCitiesUnhappinessPercent@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetWorldNumCitiesUnhappinessPercent, COMDAT

; 2080 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2081 : 	lua_pushinteger(L, GC.getMap().getWorldInfo().getNumCitiesUnhappinessPercent());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T227108[ebp], eax
	mov	ecx, DWORD PTR $T227108[ebp]
	call	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ ; CvMap::getWorldInfo
	mov	ecx, eax
	call	?getNumCitiesUnhappinessPercent@CvWorldInfo@@QBEHXZ ; CvWorldInfo::getNumCitiesUnhappinessPercent
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2082 : 	return 1;

	mov	eax, 1

; 2083 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetWorldNumCitiesUnhappinessPercent@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetWorldNumCitiesUnhappinessPercent
_TEXT	ENDS
EXTRN	?GetDealDuration@CvGame@@QAEHXZ:PROC		; CvGame::GetDealDuration
; Function compile flags: /Odtp
;	COMDAT ?lGetDealDuration@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetDealDuration@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetDealDuration, COMDAT

; 2086 : {

	push	ebp
	mov	ebp, esp

; 2087 : 	return BasicLuaMethod(L, &CvGame::GetDealDuration);

	push	OFFSET ?GetDealDuration@CvGame@@QAEHXZ	; CvGame::GetDealDuration
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 2088 : }

	pop	ebp
	ret	0
?lGetDealDuration@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetDealDuration
_TEXT	ENDS
EXTRN	?GetPeaceDuration@CvGame@@QAEHXZ:PROC		; CvGame::GetPeaceDuration
; Function compile flags: /Odtp
;	COMDAT ?lGetPeaceDuration@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPeaceDuration@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetPeaceDuration, COMDAT

; 2091 : {

	push	ebp
	mov	ebp, esp

; 2092 : 	return BasicLuaMethod(L, &CvGame::GetPeaceDuration);

	push	OFFSET ?GetPeaceDuration@CvGame@@QAEHXZ	; CvGame::GetPeaceDuration
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
	add	esp, 8

; 2093 : }

	pop	ebp
	ret	0
?lGetPeaceDuration@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetPeaceDuration
_TEXT	ENDS
EXTRN	?getDefaultUnitIndex@CvUnitClassInfo@@QBEHXZ:PROC ; CvUnitClassInfo::getDefaultUnitIndex
EXTRN	?GetUpgradeUnitClass@CvUnitEntry@@QBE_NH@Z:PROC	; CvUnitEntry::GetUpgradeUnitClass
EXTRN	?getUnitClassInfo@CvGlobals@@QAEPAVCvUnitClassInfo@@W4UnitClassTypes@@@Z:PROC ; CvGlobals::getUnitClassInfo
EXTRN	?getNumUnitClassInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumUnitClassInfos
; Function compile flags: /Odtp
;	COMDAT ?lGetUnitUpgradesTo@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_pkUnitClassInfo$223876 = -16				; size = 4
_iUnitClassLoop$223872 = -12				; size = 4
_eUnit$ = -8						; size = 4
_pkUnitInfo$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetUnitUpgradesTo@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetUnitUpgradesTo, COMDAT

; 2097 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 2098 : 	const UnitTypes eUnit = (UnitTypes) lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eUnit$[ebp], eax

; 2099 : 
; 2100 : 	CvUnitEntry* pkUnitInfo = GC.getUnitInfo(eUnit);

	mov	ecx, DWORD PTR _eUnit$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR _pkUnitInfo$[ebp], eax

; 2101 : 	if(pkUnitInfo == NULL)

	cmp	DWORD PTR _pkUnitInfo$[ebp], 0
	jne	SHORT $LN6@lGetUnitUp

; 2102 : 	{
; 2103 : 		luaL_error(L, "Unit row at ID %d is empty.", eUnit);

	mov	edx, DWORD PTR _eUnit$[ebp]
	push	edx
	push	OFFSET ??_C@_0BM@PPNKKLAI@Unit?5row?5at?5ID?5?$CFd?5is?5empty?4?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_error
	add	esp, 12					; 0000000cH

; 2104 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN7@lGetUnitUp
$LN6@lGetUnitUp:

; 2105 : 	}
; 2106 : 
; 2107 : #ifdef AUI_WARNING_FIXES
; 2108 : 	for (uint iUnitClassLoop = 0; iUnitClassLoop < GC.getNumUnitClassInfos(); iUnitClassLoop++)
; 2109 : #else
; 2110 : 	for(int iUnitClassLoop = 0; iUnitClassLoop < GC.getNumUnitClassInfos(); iUnitClassLoop++)

	mov	DWORD PTR _iUnitClassLoop$223872[ebp], 0
	jmp	SHORT $LN5@lGetUnitUp
$LN4@lGetUnitUp:
	mov	ecx, DWORD PTR _iUnitClassLoop$223872[ebp]
	add	ecx, 1
	mov	DWORD PTR _iUnitClassLoop$223872[ebp], ecx
$LN5@lGetUnitUp:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumUnitClassInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitClassInfos
	cmp	DWORD PTR _iUnitClassLoop$223872[ebp], eax
	jge	SHORT $LN3@lGetUnitUp

; 2111 : #endif
; 2112 : 	{
; 2113 : 		CvUnitClassInfo* pkUnitClassInfo = GC.getUnitClassInfo((UnitClassTypes) iUnitClassLoop);

	mov	edx, DWORD PTR _iUnitClassLoop$223872[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitClassInfo@CvGlobals@@QAEPAVCvUnitClassInfo@@W4UnitClassTypes@@@Z ; CvGlobals::getUnitClassInfo
	mov	DWORD PTR _pkUnitClassInfo$223876[ebp], eax

; 2114 : 		if(pkUnitClassInfo != NULL)

	cmp	DWORD PTR _pkUnitClassInfo$223876[ebp], 0
	je	SHORT $LN2@lGetUnitUp

; 2115 : 		{
; 2116 : 			if(pkUnitInfo->GetUpgradeUnitClass(iUnitClassLoop))	// Hardcoded to look at entry 0

	mov	eax, DWORD PTR _iUnitClassLoop$223872[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkUnitInfo$[ebp]
	call	?GetUpgradeUnitClass@CvUnitEntry@@QBE_NH@Z ; CvUnitEntry::GetUpgradeUnitClass
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@lGetUnitUp

; 2117 : 			{
; 2118 : 				lua_pushinteger(L, pkUnitClassInfo->getDefaultUnitIndex());

	mov	ecx, DWORD PTR _pkUnitClassInfo$223876[ebp]
	call	?getDefaultUnitIndex@CvUnitClassInfo@@QBEHXZ ; CvUnitClassInfo::getDefaultUnitIndex
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2119 : 				return 1;

	mov	eax, 1
	jmp	SHORT $LN7@lGetUnitUp
$LN2@lGetUnitUp:

; 2120 : 			}
; 2121 : 		}
; 2122 : 	}

	jmp	SHORT $LN4@lGetUnitUp
$LN3@lGetUnitUp:

; 2123 : 
; 2124 : 	lua_pushinteger(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2125 : 	return 0;

	xor	eax, eax
$LN7@lGetUnitUp:

; 2126 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetUnitUpgradesTo@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetUnitUpgradesTo
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
EXTRN	?GetCombatPrediction@CvGame@@QAE?AW4CombatPredictionTypes@@PBVCvUnit@@0@Z:PROC ; CvGame::GetCombatPrediction
; Function compile flags: /Odtp
;	COMDAT ?lGetCombatPrediction@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T227120 = -16						; size = 4
_ePrediction$ = -12					; size = 4
_pAttackingUnit$ = -8					; size = 4
_pDefendingUnit$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetCombatPrediction@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetCombatPrediction, COMDAT

; 2130 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 2131 : 	const CvUnit* pAttackingUnit = CvLuaUnit::GetInstance(L, 1);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pAttackingUnit$[ebp], eax

; 2132 : 	const CvUnit* pDefendingUnit = CvLuaUnit::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pDefendingUnit$[ebp], eax

; 2133 : 	CombatPredictionTypes ePrediction = GC.getGame().GetCombatPrediction(pAttackingUnit, pDefendingUnit);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227120[ebp], edx
	mov	eax, DWORD PTR _pDefendingUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pAttackingUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T227120[ebp]
	call	?GetCombatPrediction@CvGame@@QAE?AW4CombatPredictionTypes@@PBVCvUnit@@0@Z ; CvGame::GetCombatPrediction
	mov	DWORD PTR _ePrediction$[ebp], eax

; 2134 : 	lua_pushinteger(L, ePrediction);

	mov	edx, DWORD PTR _ePrediction$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 2135 : 	return 1;

	mov	eax, 1

; 2136 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetCombatPrediction@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetCombatPrediction
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T227124 = -52						; size = 4
_timeString$ = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
_kGame$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetTimeString, COMDAT

; 2140 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2141 : 	CvString timeString;

	lea	ecx, DWORD PTR _timeString$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2142 : 
; 2143 : 	CvGame& kGame = GC.getGame();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _kGame$[ebp], eax

; 2144 : 	CvGameTextMgr::setDateStr(timeString, kGame.getGameTurn(), true, kGame.getCalendar(), kGame.getStartYear(), kGame.getGameSpeedType());

	mov	ecx, DWORD PTR _kGame$[ebp]
	call	?getGameSpeedType@CvGame@@QBE?AW4GameSpeedTypes@@XZ ; CvGame::getGameSpeedType
	push	eax
	mov	ecx, DWORD PTR _kGame$[ebp]
	call	?getStartYear@CvGame@@QBEHXZ		; CvGame::getStartYear
	push	eax
	mov	ecx, DWORD PTR _kGame$[ebp]
	call	?getCalendar@CvGame@@QBE?AW4CalendarTypes@@XZ ; CvGame::getCalendar
	push	eax
	push	1
	mov	ecx, DWORD PTR _kGame$[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	push	eax
	lea	ecx, DWORD PTR _timeString$[ebp]
	push	ecx
	call	?setDateStr@CvGameTextMgr@@SAXAAVCvString@@H_NW4CalendarTypes@@HW4GameSpeedTypes@@@Z ; CvGameTextMgr::setDateStr
	add	esp, 24					; 00000018H

; 2145 : 
; 2146 : 	lua_pushstring(L, timeString.GetCString());

	lea	ecx, DWORD PTR _timeString$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 2147 : 	return 1;

	mov	DWORD PTR $T227124[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _timeString$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T227124[ebp]

; 2148 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _timeString$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetTimeString@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetTimeString
EXTRN	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ:PROC ; CvGame::GetGameReligions
; Function compile flags: /Odtp
;	COMDAT ?lGetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T227155 = -12						; size = 4
$T227151 = -8						; size = 4
_iFaith$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetMinimumFaithNextPantheon, COMDAT

; 2151 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2152 : 	int iFaith = GC.getGame().GetGameReligions()->GetMinimumFaithNextPantheon();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227151[ebp], eax
	mov	ecx, DWORD PTR $T227151[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR $T227155[ebp], eax
	mov	ecx, DWORD PTR $T227155[ebp]
	mov	edx, DWORD PTR [ecx+5264]
	mov	DWORD PTR _iFaith$[ebp], edx

; 2153 : 	lua_pushinteger(L, iFaith);

	mov	eax, DWORD PTR _iFaith$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2154 : 	return 1;

	mov	eax, 1

; 2155 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetMinimumFaithNextPantheon
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lSetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T227166 = -12						; size = 4
$T227165 = -8						; size = 4
$T227161 = -4						; size = 4
_L$ = 8							; size = 4
?lSetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSetMinimumFaithNextPantheon, COMDAT

; 2158 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2159 : 	GC.getGame().GetGameReligions()->SetMinimumFaithNextPantheon(lua_tointeger(L, 1));

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227161[ebp], eax
	push	1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR $T227166[ebp], eax
	mov	ecx, DWORD PTR $T227161[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR $T227165[ebp], eax
	mov	edx, DWORD PTR $T227165[ebp]
	mov	eax, DWORD PTR $T227166[ebp]
	mov	DWORD PTR [edx+5264], eax

; 2160 : 	return 1;

	mov	eax, 1

; 2161 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetMinimumFaithNextPantheon@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSetMinimumFaithNextPantheon
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >
PUBLIC	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
EXTRN	?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:PROC ; CvGameReligions::GetAvailablePantheonBeliefs
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
$T227209 = -64						; size = 4
$T227185 = -60						; size = 4
$T227175 = -56						; size = 4
$T227170 = -52						; size = 4
$T227169 = -48						; size = 4
_eBelief$224362 = -44					; size = 4
_it$224356 = -40					; size = 4
_t$ = -36						; size = 4
_idx$ = -32						; size = 4
_availableBeliefs$ = -28				; size = 16
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAvailablePantheonBeliefs, COMDAT

; 2164 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2165 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 2166 : 	const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$[ebp], eax

; 2167 : 	int idx = 1;

	mov	DWORD PTR _idx$[ebp], 1

; 2168 : 
; 2169 : #ifdef AUI_WARNING_FIXES
; 2170 : 	const std::vector<BeliefTypes>& availableBeliefs = GC.getGame().GetGameReligions()->GetAvailablePantheonBeliefs();
; 2171 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 2172 : #else
; 2173 : 	std::vector<BeliefTypes> availableBeliefs = GC.getGame().GetGameReligions()->GetAvailablePantheonBeliefs();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227175[ebp], edx
	lea	eax, DWORD PTR _availableBeliefs$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T227175[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailablePantheonBeliefs

; 2174 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	ecx, DWORD PTR _availableBeliefs$[ebp+4]
	mov	DWORD PTR $T227185[ebp], ecx
	mov	edx, DWORD PTR $T227185[ebp]
	mov	DWORD PTR _it$224356[ebp], edx

; 2175 : 	        it!= availableBeliefs.end(); ++it)

	jmp	SHORT $LN3@lGetAvaila
$LN2@lGetAvaila:
	mov	eax, DWORD PTR _it$224356[ebp]
	add	eax, 4
	mov	DWORD PTR _it$224356[ebp], eax
$LN3@lGetAvaila:
	mov	ecx, DWORD PTR _availableBeliefs$[ebp+8]
	mov	DWORD PTR $T227209[ebp], ecx
	mov	edx, DWORD PTR $T227209[ebp]
	mov	DWORD PTR $T227169[ebp], edx
	mov	eax, DWORD PTR _it$224356[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T227169[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@lGetAvaila

; 2176 : #endif
; 2177 : 	{
; 2178 : 		const BeliefTypes eBelief = (*it);

	mov	ecx, DWORD PTR _it$224356[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _eBelief$224362[ebp], edx

; 2179 : 		lua_pushinteger(L, eBelief);

	mov	eax, DWORD PTR _eBelief$224362[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2180 : 		lua_rawseti(L, t, idx++);

	mov	edx, DWORD PTR _idx$[ebp]
	mov	DWORD PTR tv133[ebp], edx
	mov	eax, DWORD PTR tv133[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax

; 2181 : 	}

	jmp	SHORT $LN2@lGetAvaila
$LN1@lGetAvaila:

; 2182 : 
; 2183 : 	return 1;

	mov	DWORD PTR $T227170[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T227170[ebp]

; 2184 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetAvailablePantheonBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAvailablePantheonBeliefs
EXTRN	?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:PROC ; CvGameReligions::GetAvailableFounderBeliefs
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
$T227365 = -64						; size = 4
$T227341 = -60						; size = 4
$T227331 = -56						; size = 4
$T227326 = -52						; size = 4
$T227325 = -48						; size = 4
_eBelief$224385 = -44					; size = 4
_it$224379 = -40					; size = 4
_t$ = -36						; size = 4
_idx$ = -32						; size = 4
_availableBeliefs$ = -28				; size = 16
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAvailableFounderBeliefs, COMDAT

; 2187 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2188 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 2189 : 	const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$[ebp], eax

; 2190 : 	int idx = 1;

	mov	DWORD PTR _idx$[ebp], 1

; 2191 : 
; 2192 : #ifdef AUI_WARNING_FIXES
; 2193 : 	const std::vector<BeliefTypes>& availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableFounderBeliefs();
; 2194 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 2195 : #else
; 2196 : 	std::vector<BeliefTypes> availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableFounderBeliefs();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227331[ebp], edx
	lea	eax, DWORD PTR _availableBeliefs$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T227331[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableFounderBeliefs

; 2197 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	ecx, DWORD PTR _availableBeliefs$[ebp+4]
	mov	DWORD PTR $T227341[ebp], ecx
	mov	edx, DWORD PTR $T227341[ebp]
	mov	DWORD PTR _it$224379[ebp], edx

; 2198 : 	        it!= availableBeliefs.end(); ++it)

	jmp	SHORT $LN3@lGetAvaila@2
$LN2@lGetAvaila@2:
	mov	eax, DWORD PTR _it$224379[ebp]
	add	eax, 4
	mov	DWORD PTR _it$224379[ebp], eax
$LN3@lGetAvaila@2:
	mov	ecx, DWORD PTR _availableBeliefs$[ebp+8]
	mov	DWORD PTR $T227365[ebp], ecx
	mov	edx, DWORD PTR $T227365[ebp]
	mov	DWORD PTR $T227325[ebp], edx
	mov	eax, DWORD PTR _it$224379[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T227325[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@lGetAvaila@2

; 2199 : #endif
; 2200 : 	{
; 2201 : 		const BeliefTypes eBelief = (*it);

	mov	ecx, DWORD PTR _it$224379[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _eBelief$224385[ebp], edx

; 2202 : 		lua_pushinteger(L, eBelief);

	mov	eax, DWORD PTR _eBelief$224385[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2203 : 		lua_rawseti(L, t, idx++);

	mov	edx, DWORD PTR _idx$[ebp]
	mov	DWORD PTR tv133[ebp], edx
	mov	eax, DWORD PTR tv133[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax

; 2204 : 	}

	jmp	SHORT $LN2@lGetAvaila@2
$LN1@lGetAvaila@2:

; 2205 : 
; 2206 : 	return 1;

	mov	DWORD PTR $T227326[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T227326[ebp]

; 2207 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetAvailableFounderBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAvailableFounderBeliefs
EXTRN	?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:PROC ; CvGameReligions::GetAvailableFollowerBeliefs
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
$T227521 = -64						; size = 4
$T227497 = -60						; size = 4
$T227487 = -56						; size = 4
$T227482 = -52						; size = 4
$T227481 = -48						; size = 4
_eBelief$224408 = -44					; size = 4
_it$224402 = -40					; size = 4
_t$ = -36						; size = 4
_idx$ = -32						; size = 4
_availableBeliefs$ = -28				; size = 16
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAvailableFollowerBeliefs, COMDAT

; 2210 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2211 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 2212 : 	const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$[ebp], eax

; 2213 : 	int idx = 1;

	mov	DWORD PTR _idx$[ebp], 1

; 2214 : 
; 2215 : #ifdef AUI_WARNING_FIXES
; 2216 : 	const std::vector<BeliefTypes>& availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableFollowerBeliefs();
; 2217 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 2218 : #else
; 2219 : 	std::vector<BeliefTypes> availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableFollowerBeliefs();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227487[ebp], edx
	lea	eax, DWORD PTR _availableBeliefs$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T227487[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableFollowerBeliefs

; 2220 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	ecx, DWORD PTR _availableBeliefs$[ebp+4]
	mov	DWORD PTR $T227497[ebp], ecx
	mov	edx, DWORD PTR $T227497[ebp]
	mov	DWORD PTR _it$224402[ebp], edx

; 2221 : 	        it!= availableBeliefs.end(); ++it)

	jmp	SHORT $LN3@lGetAvaila@3
$LN2@lGetAvaila@3:
	mov	eax, DWORD PTR _it$224402[ebp]
	add	eax, 4
	mov	DWORD PTR _it$224402[ebp], eax
$LN3@lGetAvaila@3:
	mov	ecx, DWORD PTR _availableBeliefs$[ebp+8]
	mov	DWORD PTR $T227521[ebp], ecx
	mov	edx, DWORD PTR $T227521[ebp]
	mov	DWORD PTR $T227481[ebp], edx
	mov	eax, DWORD PTR _it$224402[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T227481[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@lGetAvaila@3

; 2222 : #endif
; 2223 : 	{
; 2224 : 		const BeliefTypes eBelief = (*it);

	mov	ecx, DWORD PTR _it$224402[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _eBelief$224408[ebp], edx

; 2225 : 		lua_pushinteger(L, eBelief);

	mov	eax, DWORD PTR _eBelief$224408[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2226 : 		lua_rawseti(L, t, idx++);

	mov	edx, DWORD PTR _idx$[ebp]
	mov	DWORD PTR tv133[ebp], edx
	mov	eax, DWORD PTR tv133[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax

; 2227 : 	}

	jmp	SHORT $LN2@lGetAvaila@3
$LN1@lGetAvaila@3:

; 2228 : 
; 2229 : 	return 1;

	mov	DWORD PTR $T227482[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T227482[ebp]

; 2230 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetAvailableFollowerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAvailableFollowerBeliefs
EXTRN	?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:PROC ; CvGameReligions::GetAvailableEnhancerBeliefs
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
$T227677 = -64						; size = 4
$T227653 = -60						; size = 4
$T227643 = -56						; size = 4
$T227638 = -52						; size = 4
$T227637 = -48						; size = 4
_eBelief$224431 = -44					; size = 4
_it$224425 = -40					; size = 4
_t$ = -36						; size = 4
_idx$ = -32						; size = 4
_availableBeliefs$ = -28				; size = 16
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAvailableEnhancerBeliefs, COMDAT

; 2233 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2234 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 2235 : 	const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$[ebp], eax

; 2236 : 	int idx = 1;

	mov	DWORD PTR _idx$[ebp], 1

; 2237 : 
; 2238 : #ifdef AUI_WARNING_FIXES
; 2239 : 	const std::vector<BeliefTypes>& availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableEnhancerBeliefs();
; 2240 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 2241 : #else
; 2242 : 	std::vector<BeliefTypes> availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableEnhancerBeliefs();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227643[ebp], edx
	lea	eax, DWORD PTR _availableBeliefs$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T227643[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableEnhancerBeliefs

; 2243 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	ecx, DWORD PTR _availableBeliefs$[ebp+4]
	mov	DWORD PTR $T227653[ebp], ecx
	mov	edx, DWORD PTR $T227653[ebp]
	mov	DWORD PTR _it$224425[ebp], edx

; 2244 : 	        it!= availableBeliefs.end(); ++it)

	jmp	SHORT $LN3@lGetAvaila@4
$LN2@lGetAvaila@4:
	mov	eax, DWORD PTR _it$224425[ebp]
	add	eax, 4
	mov	DWORD PTR _it$224425[ebp], eax
$LN3@lGetAvaila@4:
	mov	ecx, DWORD PTR _availableBeliefs$[ebp+8]
	mov	DWORD PTR $T227677[ebp], ecx
	mov	edx, DWORD PTR $T227677[ebp]
	mov	DWORD PTR $T227637[ebp], edx
	mov	eax, DWORD PTR _it$224425[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T227637[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@lGetAvaila@4

; 2245 : #endif
; 2246 : 	{
; 2247 : 		const BeliefTypes eBelief = (*it);

	mov	ecx, DWORD PTR _it$224425[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _eBelief$224431[ebp], edx

; 2248 : 		lua_pushinteger(L, eBelief);

	mov	eax, DWORD PTR _eBelief$224431[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2249 : 		lua_rawseti(L, t, idx++);

	mov	edx, DWORD PTR _idx$[ebp]
	mov	DWORD PTR tv133[ebp], edx
	mov	eax, DWORD PTR tv133[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax

; 2250 : 	}

	jmp	SHORT $LN2@lGetAvaila@4
$LN1@lGetAvaila@4:

; 2251 : 
; 2252 : 	return 1;

	mov	DWORD PTR $T227638[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T227638[ebp]

; 2253 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetAvailableEnhancerBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAvailableEnhancerBeliefs
EXTRN	?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:PROC ; CvGameReligions::GetAvailableBonusBeliefs
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
$T227833 = -64						; size = 4
$T227809 = -60						; size = 4
$T227799 = -56						; size = 4
$T227794 = -52						; size = 4
$T227793 = -48						; size = 4
_eBelief$224454 = -44					; size = 4
_it$224448 = -40					; size = 4
_t$ = -36						; size = 4
_idx$ = -32						; size = 4
_availableBeliefs$ = -28				; size = 16
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAvailableBonusBeliefs, COMDAT

; 2256 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2257 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 2258 : 	const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$[ebp], eax

; 2259 : 	int idx = 1;

	mov	DWORD PTR _idx$[ebp], 1

; 2260 : 
; 2261 : #ifdef AUI_WARNING_FIXES
; 2262 : 	const std::vector<BeliefTypes>& availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableBonusBeliefs();
; 2263 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 2264 : #else
; 2265 : 	std::vector<BeliefTypes> availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableBonusBeliefs();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227799[ebp], edx
	lea	eax, DWORD PTR _availableBeliefs$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T227799[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableBonusBeliefs

; 2266 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	ecx, DWORD PTR _availableBeliefs$[ebp+4]
	mov	DWORD PTR $T227809[ebp], ecx
	mov	edx, DWORD PTR $T227809[ebp]
	mov	DWORD PTR _it$224448[ebp], edx

; 2267 : 	        it!= availableBeliefs.end(); ++it)

	jmp	SHORT $LN3@lGetAvaila@5
$LN2@lGetAvaila@5:
	mov	eax, DWORD PTR _it$224448[ebp]
	add	eax, 4
	mov	DWORD PTR _it$224448[ebp], eax
$LN3@lGetAvaila@5:
	mov	ecx, DWORD PTR _availableBeliefs$[ebp+8]
	mov	DWORD PTR $T227833[ebp], ecx
	mov	edx, DWORD PTR $T227833[ebp]
	mov	DWORD PTR $T227793[ebp], edx
	mov	eax, DWORD PTR _it$224448[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T227793[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@lGetAvaila@5

; 2268 : #endif
; 2269 : 	{
; 2270 : 		const BeliefTypes eBelief = (*it);

	mov	ecx, DWORD PTR _it$224448[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _eBelief$224454[ebp], edx

; 2271 : 		lua_pushinteger(L, eBelief);

	mov	eax, DWORD PTR _eBelief$224454[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2272 : 		lua_rawseti(L, t, idx++);

	mov	edx, DWORD PTR _idx$[ebp]
	mov	DWORD PTR tv133[ebp], edx
	mov	eax, DWORD PTR tv133[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax

; 2273 : 	}

	jmp	SHORT $LN2@lGetAvaila@5
$LN1@lGetAvaila@5:

; 2274 : 
; 2275 : 	return 1;

	mov	DWORD PTR $T227794[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T227794[ebp]

; 2276 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetAvailableBonusBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAvailableBonusBeliefs
EXTRN	?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:PROC ; CvGameReligions::GetAvailableReformationBeliefs
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z$1
__ehfuncinfo$?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv133 = -100						; size = 4
$T227989 = -64						; size = 4
$T227965 = -60						; size = 4
$T227955 = -56						; size = 4
$T227950 = -52						; size = 4
$T227949 = -48						; size = 4
_eBelief$224477 = -44					; size = 4
_it$224471 = -40					; size = 4
_t$ = -36						; size = 4
_idx$ = -32						; size = 4
_availableBeliefs$ = -28				; size = 16
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetAvailableReformationBeliefs, COMDAT

; 2279 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2280 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 2281 : 	const int t = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$[ebp], eax

; 2282 : 	int idx = 1;

	mov	DWORD PTR _idx$[ebp], 1

; 2283 : 
; 2284 : #ifdef AUI_WARNING_FIXES
; 2285 : 	const std::vector<BeliefTypes>& availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableReformationBeliefs();
; 2286 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 2287 : #else
; 2288 : 	std::vector<BeliefTypes> availableBeliefs = GC.getGame().GetGameReligions()->GetAvailableReformationBeliefs();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T227955[ebp], edx
	lea	eax, DWORD PTR _availableBeliefs$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T227955[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableReformationBeliefs

; 2289 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	ecx, DWORD PTR _availableBeliefs$[ebp+4]
	mov	DWORD PTR $T227965[ebp], ecx
	mov	edx, DWORD PTR $T227965[ebp]
	mov	DWORD PTR _it$224471[ebp], edx

; 2290 : 	        it!= availableBeliefs.end(); ++it)

	jmp	SHORT $LN3@lGetAvaila@6
$LN2@lGetAvaila@6:
	mov	eax, DWORD PTR _it$224471[ebp]
	add	eax, 4
	mov	DWORD PTR _it$224471[ebp], eax
$LN3@lGetAvaila@6:
	mov	ecx, DWORD PTR _availableBeliefs$[ebp+8]
	mov	DWORD PTR $T227989[ebp], ecx
	mov	edx, DWORD PTR $T227989[ebp]
	mov	DWORD PTR $T227949[ebp], edx
	mov	eax, DWORD PTR _it$224471[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T227949[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@lGetAvaila@6

; 2291 : #endif
; 2292 : 	{
; 2293 : 		const BeliefTypes eBelief = (*it);

	mov	ecx, DWORD PTR _it$224471[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _eBelief$224477[ebp], edx

; 2294 : 		lua_pushinteger(L, eBelief);

	mov	eax, DWORD PTR _eBelief$224477[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2295 : 		lua_rawseti(L, t, idx++);

	mov	edx, DWORD PTR _idx$[ebp]
	mov	DWORD PTR tv133[ebp], edx
	mov	eax, DWORD PTR tv133[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax

; 2296 : 	}

	jmp	SHORT $LN2@lGetAvaila@6
$LN1@lGetAvaila@6:

; 2297 : 
; 2298 : 	return 1;

	mov	DWORD PTR $T227950[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T227950[ebp]

; 2299 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetAvailableReformationBeliefs@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetAvailableReformationBeliefs
EXTRN	?GetNumFollowers@CvGameReligions@@QBEHW4ReligionTypes@@@Z:PROC ; CvGameReligions::GetNumFollowers
; Function compile flags: /Odtp
;	COMDAT ?lGetNumFollowers@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228108 = -12						; size = 4
_iRtnValue$ = -8					; size = 4
_eReligion$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumFollowers@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetNumFollowers, COMDAT

; 2302 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2303 : 	int iRtnValue;
; 2304 : 	ReligionTypes eReligion;
; 2305 : 	eReligion = (ReligionTypes)lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eReligion$[ebp], eax

; 2306 : 	iRtnValue = GC.getGame().GetGameReligions()->GetNumFollowers(eReligion);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228108[ebp], ecx
	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T228108[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetNumFollowers@CvGameReligions@@QBEHW4ReligionTypes@@@Z ; CvGameReligions::GetNumFollowers
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 2307 : 	lua_pushinteger(L, iRtnValue);

	mov	eax, DWORD PTR _iRtnValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2308 : 	return 1;

	mov	eax, 1

; 2309 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumFollowers@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetNumFollowers
_TEXT	ENDS
EXTRN	?GetNumCitiesFollowing@CvGameReligions@@QBEHW4ReligionTypes@@@Z:PROC ; CvGameReligions::GetNumCitiesFollowing
; Function compile flags: /Odtp
;	COMDAT ?lGetNumCitiesFollowing@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228114 = -12						; size = 4
_iRtnValue$ = -8					; size = 4
_eReligion$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumCitiesFollowing@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumCitiesFollowing, COMDAT

; 2312 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2313 : 	int iRtnValue;
; 2314 : 	ReligionTypes eReligion;
; 2315 : 	eReligion = (ReligionTypes)lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eReligion$[ebp], eax

; 2316 : 	iRtnValue = GC.getGame().GetGameReligions()->GetNumCitiesFollowing(eReligion);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228114[ebp], ecx
	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T228114[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetNumCitiesFollowing@CvGameReligions@@QBEHW4ReligionTypes@@@Z ; CvGameReligions::GetNumCitiesFollowing
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 2317 : 	lua_pushinteger(L, iRtnValue);

	mov	eax, DWORD PTR _iRtnValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2318 : 	return 1;

	mov	eax, 1

; 2319 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumCitiesFollowing@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumCitiesFollowing
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	??1CvReligionBeliefs@@QAE@XZ:PROC		; CvReligionBeliefs::~CvReligionBeliefs
EXTRN	?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z:PROC ; CvReligionBeliefs::GetBelief
EXTRN	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ:PROC	; CvReligionBeliefs::GetNumBeliefs
EXTRN	??0CvReligionBeliefs@@QAE@ABV0@@Z:PROC		; CvReligionBeliefs::CvReligionBeliefs
EXTRN	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetReligion
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__unwindtable$?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv95 = -228						; size = 4
$T228123 = -224						; size = 4
$T228118 = -220						; size = 4
_eBelief$224503 = -216					; size = 4
_iI$224499 = -212					; size = 4
_t$ = -208						; size = 4
_eReligion$ = -204					; size = 4
_idx$ = -200						; size = 4
_beliefs$ = -196					; size = 176
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetBeliefsInReligion, COMDAT

; 2322 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2323 : 	ReligionTypes eReligion;
; 2324 : 	eReligion = (ReligionTypes)lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eReligion$[ebp], eax

; 2325 : 
; 2326 : 	lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 2327 : 	const int t = lua_gettop(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$[ebp], eax

; 2328 : 	int idx = 1;

	mov	DWORD PTR _idx$[ebp], 1

; 2329 : 
; 2330 : #ifdef AUI_WARNING_FIXES
; 2331 : 	const CvReligionBeliefs& beliefs = GC.getGame().GetGameReligions()->GetReligion(eReligion, NO_PLAYER)->m_Beliefs;
; 2332 : #else
; 2333 : 	CvReligionBeliefs beliefs = GC.getGame().GetGameReligions()->GetReligion(eReligion, NO_PLAYER)->m_Beliefs;

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228123[ebp], eax
	push	-1
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T228123[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	add	eax, 152				; 00000098H
	push	eax
	lea	ecx, DWORD PTR _beliefs$[ebp]
	call	??0CvReligionBeliefs@@QAE@ABV0@@Z	; CvReligionBeliefs::CvReligionBeliefs
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2334 : #endif
; 2335 : 	for(int iI = 0; iI < beliefs.GetNumBeliefs(); iI++)

	mov	DWORD PTR _iI$224499[ebp], 0
	jmp	SHORT $LN3@lGetBelief
$LN2@lGetBelief:
	mov	edx, DWORD PTR _iI$224499[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$224499[ebp], edx
$LN3@lGetBelief:
	lea	ecx, DWORD PTR _beliefs$[ebp]
	call	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetNumBeliefs
	cmp	DWORD PTR _iI$224499[ebp], eax
	jge	SHORT $LN1@lGetBelief

; 2336 : 	{
; 2337 : 		const BeliefTypes eBelief = beliefs.GetBelief(iI);

	mov	eax, DWORD PTR _iI$224499[ebp]
	push	eax
	lea	ecx, DWORD PTR _beliefs$[ebp]
	call	?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z ; CvReligionBeliefs::GetBelief
	mov	DWORD PTR _eBelief$224503[ebp], eax

; 2338 : 		lua_pushinteger(L, eBelief);

	mov	ecx, DWORD PTR _eBelief$224503[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2339 : 		lua_rawseti(L, t, idx++);

	mov	eax, DWORD PTR _idx$[ebp]
	mov	DWORD PTR tv95[ebp], eax
	mov	ecx, DWORD PTR tv95[ebp]
	push	ecx
	mov	edx, DWORD PTR _t$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	mov	DWORD PTR _idx$[ebp], ecx

; 2340 : 	}

	jmp	$LN2@lGetBelief
$LN1@lGetBelief:

; 2341 : 
; 2342 : 	return 1;

	mov	DWORD PTR $T228118[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _beliefs$[ebp]
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	mov	eax, DWORD PTR $T228118[ebp]

; 2343 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _beliefs$[ebp]
	jmp	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
__ehhandler$?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetBeliefsInReligion@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetBeliefsInReligion
EXTRN	?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ:PROC ; CvGameReligions::GetNumReligionsStillToFound
; Function compile flags: /Odtp
;	COMDAT ?lGetNumReligionsStillToFound@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228135 = -8						; size = 4
_iRtnValue$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumReligionsStillToFound@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumReligionsStillToFound, COMDAT

; 2346 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2347 : 	int iRtnValue;
; 2348 : 	iRtnValue = GC.getGame().GetGameReligions()->GetNumReligionsStillToFound();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228135[ebp], eax
	mov	ecx, DWORD PTR $T228135[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsStillToFound
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 2349 : 	lua_pushinteger(L, iRtnValue);

	mov	ecx, DWORD PTR _iRtnValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2350 : 	return 1;

	mov	eax, 1

; 2351 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumReligionsStillToFound@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumReligionsStillToFound
_TEXT	ENDS
EXTRN	?GetNumReligionsFounded@CvGameReligions@@QBEHXZ:PROC ; CvGameReligions::GetNumReligionsFounded
; Function compile flags: /Odtp
;	COMDAT ?lGetNumReligionsFounded@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228141 = -8						; size = 4
_iRtnValue$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetNumReligionsFounded@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumReligionsFounded, COMDAT

; 2354 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2355 : 	int iRtnValue;
; 2356 : 	iRtnValue = GC.getGame().GetGameReligions()->GetNumReligionsFounded();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228141[ebp], eax
	mov	ecx, DWORD PTR $T228141[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetNumReligionsFounded@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsFounded
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 2357 : 	lua_pushinteger(L, iRtnValue);

	mov	ecx, DWORD PTR _iRtnValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2358 : 	return 1;

	mov	eax, 1

; 2359 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumReligionsFounded@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumReligionsFounded
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
PUBLIC	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ		; CvPlot::getPlotCity
EXTRN	_lua_pushnil:PROC
; Function compile flags: /Odtp
;	COMDAT ?lGetHolyCityForReligion@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv156 = -84						; size = 4
tv171 = -80						; size = 4
$T228254 = -72						; size = 4
$T228253 = -68						; size = 4
$T228208 = -64						; size = 4
$T228195 = -60						; size = 4
$T228191 = -56						; size = 4
$T228177 = -52						; size = 4
$T228173 = -45						; size = 1
$T228162 = -44						; size = 4
$T228158 = -37						; size = 1
_iMapY$228217 = -36					; size = 4
_iMapX$228216 = -32					; size = 4
$T228151 = -28						; size = 4
$T228147 = -24						; size = 4
_pkPlot$224525 = -20					; size = 4
_ePlayer$ = -16						; size = 4
_eReligion$ = -12					; size = 4
_pkHolyCity$ = -8					; size = 4
_pkReligion$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetHolyCityForReligion@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetHolyCityForReligion, COMDAT

; 2362 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H

; 2363 : 	const ReligionTypes eReligion = static_cast<ReligionTypes>(luaL_checkint(L, 1));

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eReligion$[ebp], eax

; 2364 : 	const PlayerTypes ePlayer = static_cast<PlayerTypes>(luaL_checkint(L, 2));

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 2365 : 	const CvReligion* pkReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, ePlayer);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228147[ebp], edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T228147[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pkReligion$[ebp], eax

; 2366 : 
; 2367 : 	CvCity* pkHolyCity = NULL;

	mov	DWORD PTR _pkHolyCity$[ebp], 0

; 2368 : 	if(pkReligion)

	cmp	DWORD PTR _pkReligion$[ebp], 0
	je	$LN4@lGetHolyCi

; 2369 : 	{
; 2370 : 		CvPlot* pkPlot = GC.getMap().plot(pkReligion->m_iHolyCityX, pkReligion->m_iHolyCityY);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T228151[ebp], edx
	mov	eax, DWORD PTR _pkReligion$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T228254[ebp], ecx
	mov	edx, DWORD PTR _pkReligion$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T228253[ebp], eax
	cmp	DWORD PTR $T228253[ebp], -2147483647	; 80000001H
	je	SHORT $LN11@lGetHolyCi
	cmp	DWORD PTR $T228254[ebp], -2147483647	; 80000001H
	jne	SHORT $LN12@lGetHolyCi
$LN11@lGetHolyCi:
	mov	DWORD PTR _pkPlot$224525[ebp], 0
	jmp	$LN13@lGetHolyCi
$LN12@lGetHolyCi:
	mov	ecx, DWORD PTR $T228151[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T228158[ebp], dl
	mov	eax, DWORD PTR $T228151[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T228162[ebp], ecx
	movzx	edx, BYTE PTR $T228158[ebp]
	test	edx, edx
	je	SHORT $LN24@lGetHolyCi
	cmp	DWORD PTR $T228253[ebp], 0
	jge	SHORT $LN23@lGetHolyCi
	mov	eax, DWORD PTR $T228253[ebp]
	cdq
	idiv	DWORD PTR $T228162[ebp]
	add	edx, DWORD PTR $T228162[ebp]
	mov	DWORD PTR _iMapX$228216[ebp], edx
	jmp	SHORT $LN25@lGetHolyCi
	jmp	SHORT $LN24@lGetHolyCi
$LN23@lGetHolyCi:
	mov	eax, DWORD PTR $T228253[ebp]
	cmp	eax, DWORD PTR $T228162[ebp]
	jl	SHORT $LN24@lGetHolyCi
	mov	eax, DWORD PTR $T228253[ebp]
	cdq
	idiv	DWORD PTR $T228162[ebp]
	mov	DWORD PTR _iMapX$228216[ebp], edx
	jmp	SHORT $LN25@lGetHolyCi
$LN24@lGetHolyCi:
	mov	ecx, DWORD PTR $T228253[ebp]
	mov	DWORD PTR _iMapX$228216[ebp], ecx
$LN25@lGetHolyCi:
	mov	edx, DWORD PTR $T228151[ebp]
	mov	al, BYTE PTR [edx+4057]
	mov	BYTE PTR $T228173[ebp], al
	mov	ecx, DWORD PTR $T228151[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T228177[ebp], edx
	movzx	eax, BYTE PTR $T228173[ebp]
	test	eax, eax
	je	SHORT $LN34@lGetHolyCi
	cmp	DWORD PTR $T228254[ebp], 0
	jge	SHORT $LN33@lGetHolyCi
	mov	eax, DWORD PTR $T228254[ebp]
	cdq
	idiv	DWORD PTR $T228177[ebp]
	add	edx, DWORD PTR $T228177[ebp]
	mov	DWORD PTR _iMapY$228217[ebp], edx
	jmp	SHORT $LN35@lGetHolyCi
	jmp	SHORT $LN34@lGetHolyCi
$LN33@lGetHolyCi:
	mov	ecx, DWORD PTR $T228254[ebp]
	cmp	ecx, DWORD PTR $T228177[ebp]
	jl	SHORT $LN34@lGetHolyCi
	mov	eax, DWORD PTR $T228254[ebp]
	cdq
	idiv	DWORD PTR $T228177[ebp]
	mov	DWORD PTR _iMapY$228217[ebp], edx
	jmp	SHORT $LN35@lGetHolyCi
$LN34@lGetHolyCi:
	mov	edx, DWORD PTR $T228254[ebp]
	mov	DWORD PTR _iMapY$228217[ebp], edx
$LN35@lGetHolyCi:
	cmp	DWORD PTR _iMapX$228216[ebp], 0
	jl	SHORT $LN39@lGetHolyCi
	mov	eax, DWORD PTR $T228151[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T228191[ebp], ecx
	mov	edx, DWORD PTR _iMapX$228216[ebp]
	cmp	edx, DWORD PTR $T228191[ebp]
	jge	SHORT $LN39@lGetHolyCi
	cmp	DWORD PTR _iMapY$228217[ebp], 0
	jl	SHORT $LN39@lGetHolyCi
	mov	eax, DWORD PTR $T228151[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T228195[ebp], ecx
	mov	edx, DWORD PTR _iMapY$228217[ebp]
	cmp	edx, DWORD PTR $T228195[ebp]
	jge	SHORT $LN39@lGetHolyCi
	mov	DWORD PTR tv171[ebp], 1
	jmp	SHORT $LN37@lGetHolyCi
$LN39@lGetHolyCi:
	mov	DWORD PTR tv171[ebp], 0
$LN37@lGetHolyCi:
	cmp	DWORD PTR tv171[ebp], 0
	je	SHORT $LN15@lGetHolyCi
	mov	eax, DWORD PTR $T228151[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T228208[ebp], ecx
	mov	edx, DWORD PTR _iMapY$228217[ebp]
	imul	edx, DWORD PTR $T228208[ebp]
	add	edx, DWORD PTR _iMapX$228216[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T228151[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv156[ebp], edx
	jmp	SHORT $LN16@lGetHolyCi
$LN15@lGetHolyCi:
	mov	DWORD PTR tv156[ebp], 0
$LN16@lGetHolyCi:
	mov	ecx, DWORD PTR tv156[ebp]
	mov	DWORD PTR _pkPlot$224525[ebp], ecx
$LN13@lGetHolyCi:

; 2371 : 		if(pkPlot)

	cmp	DWORD PTR _pkPlot$224525[ebp], 0
	je	SHORT $LN4@lGetHolyCi

; 2372 : 		{
; 2373 : 			pkHolyCity = pkPlot->getPlotCity();

	mov	ecx, DWORD PTR _pkPlot$224525[ebp]
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	DWORD PTR _pkHolyCity$[ebp], eax
$LN4@lGetHolyCi:

; 2374 : 		}
; 2375 : 	}
; 2376 : 
; 2377 : 	if(pkHolyCity)

	cmp	DWORD PTR _pkHolyCity$[ebp], 0
	je	SHORT $LN2@lGetHolyCi

; 2378 : 	{
; 2379 : 		CvLuaCity::Push(L, pkHolyCity);

	mov	edx, DWORD PTR _pkHolyCity$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8

; 2380 : 	}
; 2381 : 	else

	jmp	SHORT $LN1@lGetHolyCi
$LN2@lGetHolyCi:

; 2382 : 	{
; 2383 : 		lua_pushnil(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushnil
	add	esp, 4
$LN1@lGetHolyCi:

; 2384 : 	}
; 2385 : 
; 2386 : 	return 1;

	mov	eax, 1

; 2387 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetHolyCityForReligion@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetHolyCityForReligion
_TEXT	ENDS
EXTRN	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z:PROC ; CvGlobals::getReligionInfo
; Function compile flags: /Odtp
;	COMDAT ?lGetReligionName@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv79 = -32						; size = 4
tv148 = -25						; size = 1
tv145 = -24						; size = 4
tv142 = -20						; size = 4
$T228265 = -16						; size = 4
_eReligion$ = -12					; size = 4
_pkEntry$ = -8						; size = 4
_pkReligion$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetReligionName@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetReligionName, COMDAT

; 2390 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 2391 : 	const ReligionTypes eReligion = static_cast<ReligionTypes>(luaL_checkint(L, 1));

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eReligion$[ebp], eax

; 2392 : 	const CvReligion* pkReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, NO_PLAYER);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228265[ebp], ecx
	push	-1
	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T228265[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pkReligion$[ebp], eax

; 2393 : #ifdef AUI_WARNING_FIXES
; 2394 : 	if (pkReligion && pkReligion->m_szCustomName[0] != '\0')
; 2395 : #else
; 2396 : 	if(pkReligion && strlen(pkReligion->m_szCustomName) > 0)

	cmp	DWORD PTR _pkReligion$[ebp], 0
	je	SHORT $LN2@lGetReligi
	mov	eax, DWORD PTR _pkReligion$[ebp]
	add	eax, 22					; 00000016H
	mov	DWORD PTR tv142[ebp], eax
	mov	ecx, DWORD PTR tv142[ebp]
	add	ecx, 1
	mov	DWORD PTR tv145[ebp], ecx
$LL9@lGetReligi:
	mov	edx, DWORD PTR tv142[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv148[ebp], al
	add	DWORD PTR tv142[ebp], 1
	cmp	BYTE PTR tv148[ebp], 0
	jne	SHORT $LL9@lGetReligi
	mov	ecx, DWORD PTR tv142[ebp]
	sub	ecx, DWORD PTR tv145[ebp]
	mov	DWORD PTR tv79[ebp], ecx
	je	SHORT $LN2@lGetReligi

; 2397 : #endif
; 2398 : 	{
; 2399 : 		lua_pushstring(L, pkReligion->m_szCustomName);

	mov	edx, DWORD PTR _pkReligion$[ebp]
	add	edx, 22					; 00000016H
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 2400 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN3@lGetReligi
$LN2@lGetReligi:

; 2401 : 	}
; 2402 : 
; 2403 : 	CvReligionEntry* pkEntry = GC.getReligionInfo(eReligion);

	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo
	mov	DWORD PTR _pkEntry$[ebp], eax

; 2404 : 	if(pkEntry != NULL)

	cmp	DWORD PTR _pkEntry$[ebp], 0
	je	SHORT $LN1@lGetReligi

; 2405 : 	{
; 2406 : 		lua_pushstring(L, pkEntry->GetDescriptionKey());

	mov	ecx, DWORD PTR _pkEntry$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 2407 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN3@lGetReligi
$LN1@lGetReligi:

; 2408 : 	}
; 2409 : 
; 2410 : 	return 0;

	xor	eax, eax
$LN3@lGetReligi:

; 2411 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetReligionName@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetReligionName
_TEXT	ENDS
EXTRN	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetFounderBenefitsReligion
; Function compile flags: /Odtp
;	COMDAT ?lGetFounderBenefitsReligion@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228275 = -12						; size = 4
_ePlayer$ = -8						; size = 4
_eReligion$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetFounderBenefitsReligion@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetFounderBenefitsReligion, COMDAT

; 2414 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2415 : 	const PlayerTypes ePlayer = static_cast<PlayerTypes>(luaL_checkint(L, 1));

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 2416 : 	ReligionTypes eReligion = GC.getGame().GetGameReligions()->GetFounderBenefitsReligion(ePlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228275[ebp], ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T228275[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetFounderBenefitsReligion
	mov	DWORD PTR _eReligion$[ebp], eax

; 2417 : 	lua_pushinteger(L, eReligion);

	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2418 : 	return 1;

	mov	eax, 1

; 2419 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetFounderBenefitsReligion@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetFounderBenefitsReligion
_TEXT	ENDS
EXTRN	?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z:PROC ; CvGameReligions::FoundPantheon
; Function compile flags: /Odtp
;	COMDAT ?lFoundPantheon@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228281 = -12						; size = 4
_ePlayer$ = -8						; size = 4
_eBelief$ = -4						; size = 4
_L$ = 8							; size = 4
?lFoundPantheon@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lFoundPantheon, COMDAT

; 2422 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2423 : 	const PlayerTypes ePlayer = static_cast<PlayerTypes>(luaL_checkint(L, 1));

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 2424 : 	const BeliefTypes eBelief = static_cast<BeliefTypes>(luaL_checkint(L, 2));

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eBelief$[ebp], eax

; 2425 : 
; 2426 : #ifdef AUI_RELIGION_FIX_SIMULTANEOUS_ENHANCE_OR_FOUND_CAUSING_MULTIPLE
; 2427 : 	CvGameReligions* pkGameReligions(GC.getGame().GetGameReligions());
; 2428 : 	CvGameReligions::FOUNDING_RESULT eResult = pkGameReligions->CanCreatePantheon(ePlayer, true);
; 2429 : 	if (eResult == CvGameReligions::FOUNDING_OK)
; 2430 : 	{
; 2431 : 		if (pkGameReligions->IsPantheonBeliefAvailable(eBelief))
; 2432 : 		{
; 2433 : 			pkGameReligions->FoundPantheon(ePlayer, eBelief);
; 2434 : 		}
; 2435 : 		else
; 2436 : 		{
; 2437 : 			CvGameReligions::NotifyPlayer(ePlayer, CvGameReligions::FOUNDING_BELIEF_IN_USE);
; 2438 : 		}
; 2439 : 	}
; 2440 : 	else
; 2441 : 	{
; 2442 : 		CvGameReligions::NotifyPlayer(ePlayer, eResult);
; 2443 : 	}
; 2444 : #else
; 2445 : 	GC.getGame().GetGameReligions()->FoundPantheon(ePlayer, eBelief);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228281[ebp], edx
	mov	eax, DWORD PTR _eBelief$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T228281[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z ; CvGameReligions::FoundPantheon

; 2446 : #endif
; 2447 : 
; 2448 : 	return 0;

	xor	eax, eax

; 2449 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lFoundPantheon@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lFoundPantheon
_TEXT	ENDS
EXTRN	?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z:PROC ; CvGameReligions::FoundReligion
; Function compile flags: /Odtp
;	COMDAT ?lFoundReligion@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228287 = -36						; size = 4
_ePlayer$ = -32						; size = 4
_eBelief4$ = -28					; size = 4
_eReligion$ = -24					; size = 4
_eBelief3$ = -20					; size = 4
_szCustomName$ = -16					; size = 4
_eBelief2$ = -12					; size = 4
_pkHolyCity$ = -8					; size = 4
_eBelief1$ = -4						; size = 4
_L$ = 8							; size = 4
?lFoundReligion@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lFoundReligion, COMDAT

; 2452 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 2453 : 	const PlayerTypes ePlayer = static_cast<PlayerTypes>(luaL_checkint(L, 1));

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 2454 : 	const ReligionTypes eReligion = static_cast<ReligionTypes>(luaL_checkint(L, 2));

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eReligion$[ebp], eax

; 2455 : 	const char* szCustomName = lua_tostring(L, 3);

	push	0
	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _szCustomName$[ebp], eax

; 2456 : 	const BeliefTypes eBelief1 = static_cast<BeliefTypes>(luaL_checkint(L, 4));

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eBelief1$[ebp], eax

; 2457 : 	const BeliefTypes eBelief2 = static_cast<BeliefTypes>(luaL_checkint(L, 5));

	push	5
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eBelief2$[ebp], eax

; 2458 : 	const BeliefTypes eBelief3 = static_cast<BeliefTypes>(luaL_checkint(L, 6));

	push	6
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eBelief3$[ebp], eax

; 2459 : 	const BeliefTypes eBelief4 = static_cast<BeliefTypes>(luaL_checkint(L, 7));

	push	7
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eBelief4$[ebp], eax

; 2460 : 	CvCity* pkHolyCity	= CvLuaCity::GetInstance(L, 8);

	push	1
	push	8
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkHolyCity$[ebp], eax

; 2461 : 
; 2462 : #ifdef AUI_RELIGION_FIX_SIMULTANEOUS_ENHANCE_OR_FOUND_CAUSING_MULTIPLE
; 2463 : 	if (pkHolyCity && ePlayer != NO_PLAYER)
; 2464 : 	{
; 2465 : 		CvGameReligions* pkGameReligions(GC.getGame().GetGameReligions());
; 2466 : 		CvGameReligions::FOUNDING_RESULT eResult = pkGameReligions->CanFoundReligion(ePlayer, eReligion, szCustomName, eBelief1, eBelief2, eBelief3, eBelief4, pkHolyCity);
; 2467 : 		if (eResult == CvGameReligions::FOUNDING_OK)
; 2468 : 			pkGameReligions->FoundReligion(ePlayer, eReligion, szCustomName, eBelief1, eBelief2, eBelief3, eBelief4, pkHolyCity);
; 2469 : 		else
; 2470 : 		{
; 2471 : 			CvGameReligions::NotifyPlayer(ePlayer, eResult);
; 2472 : 			// We don't want them to lose the opportunity to found the religion, and the Great Prophet is already gone so just repost the notification
; 2473 : 			CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);
; 2474 : 			if (kPlayer.isHuman() && eResult != CvGameReligions::FOUNDING_NO_RELIGIONS_AVAILABLE && eResult != CvGameReligions::FOUNDING_NO_BELIEFS_AVAILABLE)
; 2475 : 			{
; 2476 : 				CvNotifications* pNotifications = kPlayer.GetNotifications();
; 2477 : 				if (pNotifications)
; 2478 : 				{
; 2479 : 					CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_FOUND_RELIGION");
; 2480 : 					CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_FOUND_RELIGION");
; 2481 : 					pNotifications->Add(NOTIFICATION_FOUND_RELIGION, strBuffer, strSummary, pkHolyCity->getX(), pkHolyCity->getY(), -1, pkHolyCity->GetID());
; 2482 : 				}
; 2483 : 				kPlayer.GetReligions()->SetFoundingReligion(true);
; 2484 : 			}
; 2485 : #ifdef AUI_DLLNETMESSAGEHANDLER_FIX_RESPAWN_PROPHET_IF_BEATEN_TO_LAST_RELIGION
; 2486 : 			else if (kPlayer.getCapitalCity())
; 2487 : 			{
; 2488 : 				UnitTypes eUnit = (UnitTypes)GC.getInfoTypeForString("UNIT_PROPHET", true);
; 2489 : 				if (eUnit != NO_UNIT)
; 2490 : 				{
; 2491 : 					kPlayer.getCapitalCity()->GetCityCitizens()->DoSpawnGreatPerson(eUnit, false /*bIncrementCount*/, false, true);
; 2492 : 				}
; 2493 : 			}
; 2494 : #endif
; 2495 : 		}
; 2496 : 	}
; 2497 : #else
; 2498 : 	GC.getGame().GetGameReligions()->FoundReligion(ePlayer, eReligion, szCustomName, eBelief1, eBelief2, eBelief3, eBelief4, pkHolyCity);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228287[ebp], edx
	mov	eax, DWORD PTR _pkHolyCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eBelief4$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eBelief3$[ebp]
	push	edx
	mov	eax, DWORD PTR _eBelief2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eBelief1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _szCustomName$[ebp]
	push	edx
	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T228287[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z ; CvGameReligions::FoundReligion

; 2499 : #endif
; 2500 : 
; 2501 : 	return 0;

	xor	eax, eax

; 2502 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lFoundReligion@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lFoundReligion
_TEXT	ENDS
EXTRN	?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z:PROC ; CvGameReligions::EnhanceReligion
; Function compile flags: /Odtp
;	COMDAT ?lEnhanceReligion@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228293 = -20						; size = 4
_ePlayer$ = -16						; size = 4
_eReligion$ = -12					; size = 4
_eBelief2$ = -8						; size = 4
_eBelief1$ = -4						; size = 4
_L$ = 8							; size = 4
?lEnhanceReligion@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lEnhanceReligion, COMDAT

; 2505 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 2506 : 	const PlayerTypes ePlayer = static_cast<PlayerTypes>(luaL_checkint(L, 1));

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 2507 : 	const ReligionTypes eReligion = static_cast<ReligionTypes>(luaL_checkint(L, 2));

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eReligion$[ebp], eax

; 2508 : 	const BeliefTypes eBelief1 = static_cast<BeliefTypes>(luaL_checkint(L, 3));

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eBelief1$[ebp], eax

; 2509 : 	const BeliefTypes eBelief2 = static_cast<BeliefTypes>(luaL_checkint(L, 4));

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eBelief2$[ebp], eax

; 2510 : 
; 2511 : #ifdef AUI_RELIGION_FIX_SIMULTANEOUS_ENHANCE_OR_FOUND_CAUSING_MULTIPLE
; 2512 : 	CvGameReligions* pkGameReligions(GC.getGame().GetGameReligions());
; 2513 : 
; 2514 : 	CvGameReligions::FOUNDING_RESULT eResult = pkGameReligions->CanEnhanceReligion(ePlayer, eReligion, eBelief1, eBelief2);
; 2515 : 	if (eResult == CvGameReligions::FOUNDING_OK)
; 2516 : 		pkGameReligions->EnhanceReligion(ePlayer, eReligion, eBelief1, eBelief2);
; 2517 : 	else
; 2518 : 	{
; 2519 : 		CvGameReligions::NotifyPlayer(ePlayer, eResult);
; 2520 : 		// We don't want them to lose the opportunity to enhance the religion, and the Great Prophet is already gone so just repost the notification
; 2521 : 		CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);
; 2522 : 		CvCity* pkCity = kPlayer.getCapitalCity();
; 2523 : 		if (kPlayer.isHuman() && pkCity && eResult != CvGameReligions::FOUNDING_NO_BELIEFS_AVAILABLE)
; 2524 : 		{
; 2525 : 			CvNotifications* pNotifications = kPlayer.GetNotifications();
; 2526 : 			if (pNotifications)
; 2527 : 			{
; 2528 : 				CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_ENHANCE_RELIGION");
; 2529 : 				CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_ENHANCE_RELIGION");
; 2530 : 				pNotifications->Add(NOTIFICATION_ENHANCE_RELIGION, strBuffer, strSummary, pkCity->getX(), pkCity->getY(), -1, pkCity->GetID());
; 2531 : 			}
; 2532 : 			kPlayer.GetReligions()->SetFoundingReligion(true);
; 2533 : 		}
; 2534 : #ifdef AUI_DLLNETMESSAGEHANDLER_FIX_RESPAWN_PROPHET_IF_BEATEN_TO_LAST_RELIGION
; 2535 : 		else if (kPlayer.getCapitalCity())
; 2536 : 		{
; 2537 : 			UnitTypes eUnit = (UnitTypes)GC.getInfoTypeForString("UNIT_PROPHET", true);
; 2538 : 			if (eUnit != NO_UNIT)
; 2539 : 			{
; 2540 : 				kPlayer.getCapitalCity()->GetCityCitizens()->DoSpawnGreatPerson(eUnit, false /*bIncrementCount*/, false, true);
; 2541 : 			}
; 2542 : 	}
; 2543 : #endif
; 2544 : 	}
; 2545 : #else
; 2546 : 	GC.getGame().GetGameReligions()->EnhanceReligion(ePlayer, eReligion, eBelief1, eBelief2);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228293[ebp], ecx
	mov	edx, DWORD PTR _eBelief2$[ebp]
	push	edx
	mov	eax, DWORD PTR _eBelief1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T228293[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z ; CvGameReligions::EnhanceReligion

; 2547 : #endif
; 2548 : 
; 2549 : 	return 0;

	xor	eax, eax

; 2550 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lEnhanceReligion@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lEnhanceReligion
_TEXT	ENDS
EXTRN	?SetHolyCity@CvGameReligions@@QAEXW4ReligionTypes@@PAVCvCity@@@Z:PROC ; CvGameReligions::SetHolyCity
; Function compile flags: /Odtp
;	COMDAT ?lSetHolyCity@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228299 = -12						; size = 4
_eReligion$ = -8					; size = 4
_pkHolyCity$ = -4					; size = 4
_L$ = 8							; size = 4
?lSetHolyCity@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetHolyCity, COMDAT

; 2553 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2554 : 	const ReligionTypes eReligion = static_cast<ReligionTypes>(luaL_checkint(L, 1));

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eReligion$[ebp], eax

; 2555 : 	CvCity* pkHolyCity	= CvLuaCity::GetInstance(L, 2);

	push	1
	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkHolyCity$[ebp], eax

; 2556 : 
; 2557 : 	GC.getGame().GetGameReligions()->SetHolyCity(eReligion, pkHolyCity);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228299[ebp], edx
	mov	eax, DWORD PTR _pkHolyCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T228299[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?SetHolyCity@CvGameReligions@@QAEXW4ReligionTypes@@PAVCvCity@@@Z ; CvGameReligions::SetHolyCity

; 2558 : 
; 2559 : 	return 0;

	xor	eax, eax

; 2560 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetHolyCity@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetHolyCity
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lGetFounder@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228305 = -16						; size = 4
_ePlayer$ = -12						; size = 4
_eReligion$ = -8					; size = 4
_pReligion$ = -4					; size = 4
_L$ = 8							; size = 4
?lGetFounder@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetFounder, COMDAT

; 2563 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 2564 : 	const ReligionTypes eReligion = static_cast<ReligionTypes>(luaL_checkint(L, 1));

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eReligion$[ebp], eax

; 2565 : 	const PlayerTypes ePlayer = static_cast<PlayerTypes>(luaL_checkint(L, 2));

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _ePlayer$[ebp], eax

; 2566 : 
; 2567 : 	const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, ePlayer);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228305[ebp], edx
	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T228305[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$[ebp], eax

; 2568 : 
; 2569 : 	lua_pushinteger(L, (int)pReligion->m_eFounder);

	mov	edx, DWORD PTR _pReligion$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2570 : 	return 1;

	mov	eax, 1

; 2571 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetFounder@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetFounder
_TEXT	ENDS
EXTRN	?SetFounder@CvGameReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::SetFounder
; Function compile flags: /Odtp
;	COMDAT ?lSetFounder@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228311 = -12						; size = 4
_eReligion$ = -8					; size = 4
_eFounder$ = -4						; size = 4
_L$ = 8							; size = 4
?lSetFounder@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lSetFounder, COMDAT

; 2574 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2575 : 	const ReligionTypes eReligion = static_cast<ReligionTypes>(luaL_checkint(L, 1));

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eReligion$[ebp], eax

; 2576 : 	const PlayerTypes eFounder = static_cast<PlayerTypes>(luaL_checkint(L, 2));

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eFounder$[ebp], eax

; 2577 : 
; 2578 : 	GC.getGame().GetGameReligions()->SetFounder(eReligion, eFounder);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228311[ebp], edx
	mov	eax, DWORD PTR _eFounder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T228311[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?SetFounder@CvGameReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::SetFounder

; 2579 : 
; 2580 : 	return 0;

	xor	eax, eax

; 2581 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSetFounder@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lSetFounder
_TEXT	ENDS
EXTRN	?GetTurnsBetweenMinorCivElections@CvGame@@QAEHXZ:PROC ; CvGame::GetTurnsBetweenMinorCivElections
; Function compile flags: /Odtp
;	COMDAT ?lGetTurnsBetweenMinorCivElections@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228317 = -4						; size = 4
_L$ = 8							; size = 4
?lGetTurnsBetweenMinorCivElections@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetTurnsBetweenMinorCivElections, COMDAT

; 2584 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2585 : 	lua_pushinteger(L, GC.getGame().GetTurnsBetweenMinorCivElections());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228317[ebp], eax
	mov	ecx, DWORD PTR $T228317[ebp]
	call	?GetTurnsBetweenMinorCivElections@CvGame@@QAEHXZ ; CvGame::GetTurnsBetweenMinorCivElections
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2586 : 	return 1;

	mov	eax, 1

; 2587 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTurnsBetweenMinorCivElections@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetTurnsBetweenMinorCivElections
_TEXT	ENDS
EXTRN	?GetTurnsUntilMinorCivElection@CvGame@@QAEHXZ:PROC ; CvGame::GetTurnsUntilMinorCivElection
; Function compile flags: /Odtp
;	COMDAT ?lGetTurnsUntilMinorCivElection@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228323 = -4						; size = 4
_L$ = 8							; size = 4
?lGetTurnsUntilMinorCivElection@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetTurnsUntilMinorCivElection, COMDAT

; 2590 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2591 : 	lua_pushinteger(L, GC.getGame().GetTurnsUntilMinorCivElection());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228323[ebp], eax
	mov	ecx, DWORD PTR $T228323[ebp]
	call	?GetTurnsUntilMinorCivElection@CvGame@@QAEHXZ ; CvGame::GetTurnsUntilMinorCivElection
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2592 : 	return 1;

	mov	eax, 1

; 2593 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetTurnsUntilMinorCivElection@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetTurnsUntilMinorCivElection
_TEXT	ENDS
EXTRN	?GetNumActiveLeagues@CvGameLeagues@@QAEHXZ:PROC	; CvGameLeagues::GetNumActiveLeagues
EXTRN	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ:PROC ; CvGame::GetGameLeagues
; Function compile flags: /Odtp
;	COMDAT ?lGetNumActiveLeagues@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228329 = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumActiveLeagues@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumActiveLeagues, COMDAT

; 2596 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2597 : 	lua_pushinteger(L, GC.getGame().GetGameLeagues()->GetNumActiveLeagues());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228329[ebp], eax
	mov	ecx, DWORD PTR $T228329[ebp]
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetNumActiveLeagues@CvGameLeagues@@QAEHXZ ; CvGameLeagues::GetNumActiveLeagues
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2598 : 	return 1;

	mov	eax, 1

; 2599 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumActiveLeagues@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumActiveLeagues
_TEXT	ENDS
EXTRN	?GetNumLeaguesEverFounded@CvGameLeagues@@QBEHXZ:PROC ; CvGameLeagues::GetNumLeaguesEverFounded
; Function compile flags: /Odtp
;	COMDAT ?lGetNumLeaguesEverFounded@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228335 = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumLeaguesEverFounded@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumLeaguesEverFounded, COMDAT

; 2602 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2603 : #ifdef AUI_LEAGUES_FIX_POSSIBLE_DEALLOCATION_CRASH
; 2604 : 	lua_pushinteger(L, GC.getGame().GetGameLeagues()->GetNumActiveLeagues());
; 2605 : #else
; 2606 : 	lua_pushinteger(L, GC.getGame().GetGameLeagues()->GetNumLeaguesEverFounded());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228335[ebp], eax
	mov	ecx, DWORD PTR $T228335[ebp]
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetNumLeaguesEverFounded@CvGameLeagues@@QBEHXZ ; CvGameLeagues::GetNumLeaguesEverFounded
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2607 : #endif
; 2608 : 	return 1;

	mov	eax, 1

; 2609 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumLeaguesEverFounded@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumLeaguesEverFounded
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAXPAUlua_State@@PAVCvLeague@@@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::Push
EXTRN	?GetLeague@CvGameLeagues@@QAEPAVCvLeague@@W4LeagueTypes@@@Z:PROC ; CvGameLeagues::GetLeague
; Function compile flags: /Odtp
;	COMDAT ?lGetLeague@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228341 = -12						; size = 4
_pLeague$ = -8						; size = 4
_eLeague$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetLeague@CvLuaGame@@KAHPAUlua_State@@@Z PROC		; CvLuaGame::lGetLeague, COMDAT

; 2612 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2613 : #ifdef AUI_LEAGUES_FIX_POSSIBLE_DEALLOCATION_CRASH
; 2614 : 	CvLeague* pLeague = GC.getGame().GetGameLeagues()->GetActiveLeague();
; 2615 : #else
; 2616 : 	const LeagueTypes eLeague = (LeagueTypes) lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eLeague$[ebp], eax

; 2617 : 
; 2618 : 	CvLeague* pLeague = GC.getGame().GetGameLeagues()->GetLeague(eLeague);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228341[ebp], ecx
	mov	edx, DWORD PTR _eLeague$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T228341[ebp]
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetLeague@CvGameLeagues@@QAEPAVCvLeague@@W4LeagueTypes@@@Z ; CvGameLeagues::GetLeague
	mov	DWORD PTR _pLeague$[ebp], eax

; 2619 : #endif
; 2620 : 	if (pLeague != NULL)

	cmp	DWORD PTR _pLeague$[ebp], 0
	je	SHORT $LN2@lGetLeague

; 2621 : 	{
; 2622 : 		CvLuaLeague::Push(L, pLeague);

	mov	eax, DWORD PTR _pLeague$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?Push@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAXPAUlua_State@@PAVCvLeague@@@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::Push
	add	esp, 8

; 2623 : 	}
; 2624 : 	else

	jmp	SHORT $LN1@lGetLeague
$LN2@lGetLeague:

; 2625 : 	{
; 2626 : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN1@lGetLeague:

; 2627 : 	}
; 2628 : 	return 1;

	mov	eax, 1

; 2629 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetLeague@CvLuaGame@@KAHPAUlua_State@@@Z ENDP		; CvLuaGame::lGetLeague
_TEXT	ENDS
EXTRN	?GetActiveLeague@CvGameLeagues@@QAEPAVCvLeague@@XZ:PROC ; CvGameLeagues::GetActiveLeague
; Function compile flags: /Odtp
;	COMDAT ?lGetActiveLeague@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228347 = -8						; size = 4
_pLeague$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetActiveLeague@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetActiveLeague, COMDAT

; 2632 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2633 : 	CvLeague* pLeague = GC.getGame().GetGameLeagues()->GetActiveLeague();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228347[ebp], eax
	mov	ecx, DWORD PTR $T228347[ebp]
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetActiveLeague@CvGameLeagues@@QAEPAVCvLeague@@XZ ; CvGameLeagues::GetActiveLeague
	mov	DWORD PTR _pLeague$[ebp], eax

; 2634 : 	if (pLeague != NULL)

	cmp	DWORD PTR _pLeague$[ebp], 0
	je	SHORT $LN2@lGetActive

; 2635 : 	{
; 2636 : 		CvLuaLeague::Push(L, pLeague);

	mov	ecx, DWORD PTR _pLeague$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAXPAUlua_State@@PAVCvLeague@@@Z ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::Push
	add	esp, 8

; 2637 : 	}
; 2638 : 	else

	jmp	SHORT $LN1@lGetActive
$LN2@lGetActive:

; 2639 : 	{
; 2640 : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
$LN1@lGetActive:

; 2641 : 	}
; 2642 : 	return 1;

	mov	eax, 1

; 2643 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetActiveLeague@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetActiveLeague
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?lIsProcessingMessages@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
$T228353 = -4						; size = 4
_L$ = 8							; size = 4
?lIsProcessingMessages@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lIsProcessingMessages, COMDAT

; 2646 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 2647 : 	lua_pushboolean(L, gDLL->IsProcessingGameCoreMessages());

	mov	eax, DWORD PTR $T228353[ebp]
	mov	DWORD PTR tv71[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv71[ebp], ecx
	mov	edx, DWORD PTR tv71[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv71[ebp]
	mov	edx, DWORD PTR [eax+908]
	call	edx
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 2648 : 	return 1;

	mov	eax, 1

; 2649 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lIsProcessingMessages@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lIsProcessingMessages
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?GetGreatWorkTooltip@CvGameCulture@@QBE?AVCvString@@HW4PlayerTypes@@@Z:PROC ; CvGameCulture::GetGreatWorkTooltip
EXTRN	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ:PROC ; CvGame::GetGameCulture
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228376 = -72						; size = 4
$T228372 = -68						; size = 4
$T228367 = -64						; size = 4
$T228362 = -60						; size = 4
$T228357 = -56						; size = 4
_szTooltip$224724 = -52					; size = 28
__$ArrayPad$ = -24					; size = 4
_eOwner$ = -20						; size = 4
_iIndex$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetGreatWorkTooltip, COMDAT

; 2652 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2653 : #ifdef AUI_WARNING_FIXES
; 2654 : 	const uint iIndex = lua_tointeger(L, 1);
; 2655 : #else
; 2656 : 	const int iIndex = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 2657 : #endif
; 2658 : 	PlayerTypes eOwner = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eOwner$[ebp], eax

; 2659 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228362[ebp], edx
	mov	ecx, DWORD PTR $T228362[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T228372[ebp], eax
	mov	eax, DWORD PTR $T228372[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T228367[ebp], ecx
	mov	edx, DWORD PTR _iIndex$[ebp]
	cmp	edx, DWORD PTR $T228367[ebp]
	jge	SHORT $LN1@lGetGreatW

; 2660 : 	{
; 2661 : 		CvString szTooltip = GC.getGame().GetGameCulture()->GetGreatWorkTooltip(iIndex, eOwner);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228376[ebp], eax
	mov	ecx, DWORD PTR _eOwner$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iIndex$[ebp]
	push	edx
	lea	eax, DWORD PTR _szTooltip$224724[ebp]
	push	eax
	mov	ecx, DWORD PTR $T228376[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkTooltip@CvGameCulture@@QBE?AVCvString@@HW4PlayerTypes@@@Z ; CvGameCulture::GetGreatWorkTooltip
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2662 : 		lua_pushstring(L, szTooltip);

	lea	ecx, DWORD PTR _szTooltip$224724[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 2663 : 		return 1;

	mov	DWORD PTR $T228357[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _szTooltip$224724[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T228357[ebp]
	jmp	SHORT $LN2@lGetGreatW
$LN1@lGetGreatW:

; 2664 : 	}
; 2665 : 	return 0;

	xor	eax, eax
$LN2@lGetGreatW:

; 2666 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szTooltip$224724[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetGreatWorkTooltip@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetGreatWorkTooltip
PUBLIC	__$ArrayPad$
EXTRN	?GetGreatWorkName@CvGameCulture@@QBE?AVCvString@@H@Z:PROC ; CvGameCulture::GetGreatWorkName
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228412 = -68						; size = 4
$T228408 = -64						; size = 4
$T228403 = -60						; size = 4
$T228398 = -56						; size = 4
$T228393 = -52						; size = 4
_szTooltip$224732 = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
_iIndex$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetGreatWorkName, COMDAT

; 2669 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2670 : #ifdef AUI_WARNING_FIXES
; 2671 : 	const uint iIndex = lua_tointeger(L, 1);
; 2672 : #else
; 2673 : 	const int iIndex = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 2674 : #endif
; 2675 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228398[ebp], ecx
	mov	ecx, DWORD PTR $T228398[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T228408[ebp], eax
	mov	edx, DWORD PTR $T228408[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T228403[ebp], eax
	mov	ecx, DWORD PTR _iIndex$[ebp]
	cmp	ecx, DWORD PTR $T228403[ebp]
	jge	SHORT $LN1@lGetGreatW@2

; 2676 : 	{
; 2677 : 		CvString szTooltip = GC.getGame().GetGameCulture()->GetGreatWorkName(iIndex);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228412[ebp], edx
	mov	eax, DWORD PTR _iIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _szTooltip$224732[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T228412[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkName@CvGameCulture@@QBE?AVCvString@@H@Z ; CvGameCulture::GetGreatWorkName
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2678 : 		lua_pushstring(L, szTooltip);

	lea	ecx, DWORD PTR _szTooltip$224732[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 2679 : 		return 1;

	mov	DWORD PTR $T228393[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _szTooltip$224732[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T228393[ebp]
	jmp	SHORT $LN2@lGetGreatW@2
$LN1@lGetGreatW@2:

; 2680 : 	}
; 2681 : 	return 0;

	xor	eax, eax
$LN2@lGetGreatW@2:

; 2682 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szTooltip$224732[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetGreatWorkName@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetGreatWorkName
EXTRN	?GetGreatWorkType@CvGameCulture@@QBE?AW4GreatWorkType@@H@Z:PROC ; CvGameCulture::GetGreatWorkType
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatWorkType@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228445 = -24						; size = 4
$T228441 = -20						; size = 4
$T228436 = -16						; size = 4
$T228431 = -12						; size = 4
_eGreatWork$224740 = -8					; size = 4
_iIndex$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGreatWorkType@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetGreatWorkType, COMDAT

; 2685 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 2686 : #ifdef AUI_WARNING_FIXES
; 2687 : 	const uint iIndex = lua_tointeger(L, 1);
; 2688 : #else
; 2689 : 	const int iIndex = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 2690 : #endif
; 2691 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228431[ebp], ecx
	mov	ecx, DWORD PTR $T228431[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T228441[ebp], eax
	mov	edx, DWORD PTR $T228441[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T228436[ebp], eax
	mov	ecx, DWORD PTR _iIndex$[ebp]
	cmp	ecx, DWORD PTR $T228436[ebp]
	jge	SHORT $LN1@lGetGreatW@3

; 2692 : 	{
; 2693 : 		GreatWorkType eGreatWork = GC.getGame().GetGameCulture()->GetGreatWorkType(iIndex);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228445[ebp], edx
	mov	eax, DWORD PTR _iIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T228445[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkType@CvGameCulture@@QBE?AW4GreatWorkType@@H@Z ; CvGameCulture::GetGreatWorkType
	mov	DWORD PTR _eGreatWork$224740[ebp], eax

; 2694 : 		lua_pushinteger(L, eGreatWork);

	mov	ecx, DWORD PTR _eGreatWork$224740[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2695 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN2@lGetGreatW@3
$LN1@lGetGreatW@3:

; 2696 : 	}
; 2697 : 
; 2698 : 	return 0;

	xor	eax, eax
$LN2@lGetGreatW@3:

; 2699 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGreatWorkType@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetGreatWorkType
_TEXT	ENDS
EXTRN	?GetGreatWorkClass@CvGameCulture@@QBE?AW4GreatWorkClass@@H@Z:PROC ; CvGameCulture::GetGreatWorkClass
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatWorkClass@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228465 = -24						; size = 4
$T228461 = -20						; size = 4
$T228456 = -16						; size = 4
$T228451 = -12						; size = 4
_eGreatWork$224746 = -8					; size = 4
_iIndex$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGreatWorkClass@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetGreatWorkClass, COMDAT

; 2702 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 2703 : #ifdef AUI_WARNING_FIXES
; 2704 : 	const uint iIndex = lua_tointeger(L, 1);
; 2705 : #else
; 2706 : 	const int iIndex = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 2707 : #endif
; 2708 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228451[ebp], ecx
	mov	ecx, DWORD PTR $T228451[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T228461[ebp], eax
	mov	edx, DWORD PTR $T228461[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T228456[ebp], eax
	mov	ecx, DWORD PTR _iIndex$[ebp]
	cmp	ecx, DWORD PTR $T228456[ebp]
	jge	SHORT $LN1@lGetGreatW@4

; 2709 : 	{
; 2710 : 		GreatWorkClass eGreatWork = GC.getGame().GetGameCulture()->GetGreatWorkClass(iIndex);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228465[ebp], edx
	mov	eax, DWORD PTR _iIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T228465[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkClass@CvGameCulture@@QBE?AW4GreatWorkClass@@H@Z ; CvGameCulture::GetGreatWorkClass
	mov	DWORD PTR _eGreatWork$224746[ebp], eax

; 2711 : 		lua_pushinteger(L, eGreatWork);

	mov	ecx, DWORD PTR _eGreatWork$224746[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2712 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN2@lGetGreatW@4
$LN1@lGetGreatW@4:

; 2713 : 	}
; 2714 : 
; 2715 : 	return 0;

	xor	eax, eax
$LN2@lGetGreatW@4:

; 2716 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGreatWorkClass@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetGreatWorkClass
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?GetGreatWorkArtist@CvGameCulture@@QBE?AVCvString@@H@Z:PROC ; CvGameCulture::GetGreatWorkArtist
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228488 = -68						; size = 4
$T228484 = -64						; size = 4
$T228479 = -60						; size = 4
$T228474 = -56						; size = 4
$T228469 = -52						; size = 4
_szTooltip$224752 = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
_iIndex$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetGreatWorkArtist, COMDAT

; 2719 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2720 : #ifdef AUI_WARNING_FIXES
; 2721 : 	const uint iIndex = lua_tointeger(L, 1);
; 2722 : #else
; 2723 : 	const int iIndex = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 2724 : #endif
; 2725 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228474[ebp], ecx
	mov	ecx, DWORD PTR $T228474[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T228484[ebp], eax
	mov	edx, DWORD PTR $T228484[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T228479[ebp], eax
	mov	ecx, DWORD PTR _iIndex$[ebp]
	cmp	ecx, DWORD PTR $T228479[ebp]
	jge	SHORT $LN1@lGetGreatW@5

; 2726 : 	{
; 2727 : 		CvString szTooltip = GC.getGame().GetGameCulture()->GetGreatWorkArtist(iIndex);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228488[ebp], edx
	mov	eax, DWORD PTR _iIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _szTooltip$224752[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T228488[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkArtist@CvGameCulture@@QBE?AVCvString@@H@Z ; CvGameCulture::GetGreatWorkArtist
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2728 : 		lua_pushstring(L, szTooltip);

	lea	ecx, DWORD PTR _szTooltip$224752[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 2729 : 		return 1;

	mov	DWORD PTR $T228469[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _szTooltip$224752[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T228469[ebp]
	jmp	SHORT $LN2@lGetGreatW@5
$LN1@lGetGreatW@5:

; 2730 : 	}
; 2731 : 	return 0;

	xor	eax, eax
$LN2@lGetGreatW@5:

; 2732 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szTooltip$224752[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetGreatWorkArtist@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetGreatWorkArtist
PUBLIC	__$ArrayPad$
EXTRN	?GetGreatWorkEra@CvGameCulture@@QBE?AVCvString@@H@Z:PROC ; CvGameCulture::GetGreatWorkEra
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228524 = -68						; size = 4
$T228520 = -64						; size = 4
$T228515 = -60						; size = 4
$T228510 = -56						; size = 4
$T228505 = -52						; size = 4
_szTooltip$224760 = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
_iIndex$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetGreatWorkEra, COMDAT

; 2735 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2736 : #ifdef AUI_WARNING_FIXES
; 2737 : 	const uint iIndex = lua_tointeger(L, 1);
; 2738 : #else
; 2739 : 	const int iIndex = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 2740 : #endif
; 2741 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228510[ebp], ecx
	mov	ecx, DWORD PTR $T228510[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T228520[ebp], eax
	mov	edx, DWORD PTR $T228520[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T228515[ebp], eax
	mov	ecx, DWORD PTR _iIndex$[ebp]
	cmp	ecx, DWORD PTR $T228515[ebp]
	jge	SHORT $LN1@lGetGreatW@6

; 2742 : 	{
; 2743 : 		CvString szTooltip = GC.getGame().GetGameCulture()->GetGreatWorkEra(iIndex);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228524[ebp], edx
	mov	eax, DWORD PTR _iIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _szTooltip$224760[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T228524[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkEra@CvGameCulture@@QBE?AVCvString@@H@Z ; CvGameCulture::GetGreatWorkEra
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2744 : 		lua_pushstring(L, szTooltip);

	lea	ecx, DWORD PTR _szTooltip$224760[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 2745 : 		return 1;

	mov	DWORD PTR $T228505[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _szTooltip$224760[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T228505[ebp]
	jmp	SHORT $LN2@lGetGreatW@6
$LN1@lGetGreatW@6:

; 2746 : 	}
; 2747 : 	return 0;

	xor	eax, eax
$LN2@lGetGreatW@6:

; 2748 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szTooltip$224760[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetGreatWorkEra@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetGreatWorkEra
PUBLIC	__$ArrayPad$
EXTRN	?GetGreatWorkEraAbbreviation@CvGameCulture@@QBE?AVCvString@@H@Z:PROC ; CvGameCulture::GetGreatWorkEraAbbreviation
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228560 = -68						; size = 4
$T228556 = -64						; size = 4
$T228551 = -60						; size = 4
$T228546 = -56						; size = 4
$T228541 = -52						; size = 4
_szTooltip$224768 = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
_iIndex$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetGreatWorkEraAbbreviation, COMDAT

; 2751 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2752 : #ifdef AUI_WARNING_FIXES
; 2753 : 	const uint iIndex = lua_tointeger(L, 1);
; 2754 : #else
; 2755 : 	const int iIndex = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 2756 : #endif
; 2757 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228546[ebp], ecx
	mov	ecx, DWORD PTR $T228546[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T228556[ebp], eax
	mov	edx, DWORD PTR $T228556[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T228551[ebp], eax
	mov	ecx, DWORD PTR _iIndex$[ebp]
	cmp	ecx, DWORD PTR $T228551[ebp]
	jge	SHORT $LN1@lGetGreatW@7

; 2758 : 	{
; 2759 : 		CvString szTooltip = GC.getGame().GetGameCulture()->GetGreatWorkEraAbbreviation(iIndex);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228560[ebp], edx
	mov	eax, DWORD PTR _iIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _szTooltip$224768[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T228560[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkEraAbbreviation@CvGameCulture@@QBE?AVCvString@@H@Z ; CvGameCulture::GetGreatWorkEraAbbreviation
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2760 : 		lua_pushstring(L, szTooltip);

	lea	ecx, DWORD PTR _szTooltip$224768[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 2761 : 		return 1;

	mov	DWORD PTR $T228541[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _szTooltip$224768[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T228541[ebp]
	jmp	SHORT $LN2@lGetGreatW@7
$LN1@lGetGreatW@7:

; 2762 : 	}
; 2763 : 	return 0;

	xor	eax, eax
$LN2@lGetGreatW@7:

; 2764 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szTooltip$224768[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetGreatWorkEraAbbreviation@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetGreatWorkEraAbbreviation
PUBLIC	__$ArrayPad$
EXTRN	?GetGreatWorkEraShort@CvGameCulture@@QBE?AVCvString@@H@Z:PROC ; CvGameCulture::GetGreatWorkEraShort
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228596 = -68						; size = 4
$T228592 = -64						; size = 4
$T228587 = -60						; size = 4
$T228582 = -56						; size = 4
$T228577 = -52						; size = 4
_szTooltip$224776 = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
_iIndex$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetGreatWorkEraShort, COMDAT

; 2768 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2769 : #ifdef AUI_WARNING_FIXES
; 2770 : 	const uint iIndex = lua_tointeger(L, 1);
; 2771 : #else
; 2772 : 	const int iIndex = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 2773 : #endif
; 2774 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228582[ebp], ecx
	mov	ecx, DWORD PTR $T228582[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T228592[ebp], eax
	mov	edx, DWORD PTR $T228592[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T228587[ebp], eax
	mov	ecx, DWORD PTR _iIndex$[ebp]
	cmp	ecx, DWORD PTR $T228587[ebp]
	jge	SHORT $LN1@lGetGreatW@8

; 2775 : 	{
; 2776 : 		CvString szTooltip = GC.getGame().GetGameCulture()->GetGreatWorkEraShort(iIndex);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228596[ebp], edx
	mov	eax, DWORD PTR _iIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _szTooltip$224776[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T228596[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkEraShort@CvGameCulture@@QBE?AVCvString@@H@Z ; CvGameCulture::GetGreatWorkEraShort
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2777 : 		lua_pushstring(L, szTooltip);

	lea	ecx, DWORD PTR _szTooltip$224776[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 2778 : 		return 1;

	mov	DWORD PTR $T228577[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _szTooltip$224776[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T228577[ebp]
	jmp	SHORT $LN2@lGetGreatW@8
$LN1@lGetGreatW@8:

; 2779 : 	}
; 2780 : 	return 0;

	xor	eax, eax
$LN2@lGetGreatW@8:

; 2781 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szTooltip$224776[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetGreatWorkEraShort@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetGreatWorkEraShort
EXTRN	?GetGreatWorkCreator@CvGameCulture@@QBE?AW4PlayerTypes@@H@Z:PROC ; CvGameCulture::GetGreatWorkCreator
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatWorkCreator@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228629 = -24						; size = 4
$T228625 = -20						; size = 4
$T228620 = -16						; size = 4
$T228615 = -12						; size = 4
_ePlayer$224784 = -8					; size = 4
_iIndex$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGreatWorkCreator@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetGreatWorkCreator, COMDAT

; 2785 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 2786 : #ifdef AUI_WARNING_FIXES
; 2787 : 	const uint iIndex = lua_tointeger(L, 1);
; 2788 : #else
; 2789 : 	const int iIndex = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 2790 : #endif
; 2791 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228615[ebp], ecx
	mov	ecx, DWORD PTR $T228615[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T228625[ebp], eax
	mov	edx, DWORD PTR $T228625[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T228620[ebp], eax
	mov	ecx, DWORD PTR _iIndex$[ebp]
	cmp	ecx, DWORD PTR $T228620[ebp]
	jge	SHORT $LN1@lGetGreatW@9

; 2792 : 	{
; 2793 : 		PlayerTypes ePlayer = GC.getGame().GetGameCulture()->GetGreatWorkCreator(iIndex);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228629[ebp], edx
	mov	eax, DWORD PTR _iIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T228629[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkCreator@CvGameCulture@@QBE?AW4PlayerTypes@@H@Z ; CvGameCulture::GetGreatWorkCreator
	mov	DWORD PTR _ePlayer$224784[ebp], eax

; 2794 : 		lua_pushinteger(L, ePlayer);

	mov	ecx, DWORD PTR _ePlayer$224784[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2795 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN2@lGetGreatW@9
$LN1@lGetGreatW@9:

; 2796 : 	}
; 2797 : 	return 0;

	xor	eax, eax
$LN2@lGetGreatW@9:

; 2798 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGreatWorkCreator@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetGreatWorkCreator
_TEXT	ENDS
EXTRN	?GetGreatWorkController@CvGameCulture@@QBE?AW4PlayerTypes@@H@Z:PROC ; CvGameCulture::GetGreatWorkController
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatWorkController@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228649 = -24						; size = 4
$T228645 = -20						; size = 4
$T228640 = -16						; size = 4
$T228635 = -12						; size = 4
_ePlayer$224790 = -8					; size = 4
_iIndex$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGreatWorkController@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetGreatWorkController, COMDAT

; 2802 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 2803 : #ifdef AUI_WARNING_FIXES
; 2804 : 	const uint iIndex = lua_tointeger(L, 1);
; 2805 : #else
; 2806 : 	const int iIndex = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 2807 : #endif
; 2808 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228635[ebp], ecx
	mov	ecx, DWORD PTR $T228635[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T228645[ebp], eax
	mov	edx, DWORD PTR $T228645[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T228640[ebp], eax
	mov	ecx, DWORD PTR _iIndex$[ebp]
	cmp	ecx, DWORD PTR $T228640[ebp]
	jge	SHORT $LN1@lGetGreatW@10

; 2809 : 	{
; 2810 : 		PlayerTypes ePlayer = GC.getGame().GetGameCulture()->GetGreatWorkController(iIndex);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228649[ebp], edx
	mov	eax, DWORD PTR _iIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T228649[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkController@CvGameCulture@@QBE?AW4PlayerTypes@@H@Z ; CvGameCulture::GetGreatWorkController
	mov	DWORD PTR _ePlayer$224790[ebp], eax

; 2811 : 		lua_pushinteger(L, ePlayer);

	mov	ecx, DWORD PTR _ePlayer$224790[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2812 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN2@lGetGreatW@10
$LN1@lGetGreatW@10:

; 2813 : 	}
; 2814 : 	return 0;

	xor	eax, eax
$LN2@lGetGreatW@10:

; 2815 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGreatWorkController@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetGreatWorkController
_TEXT	ENDS
EXTRN	?GetGreatWorkCurrentThemingBonus@CvGameCulture@@QBEHH@Z:PROC ; CvGameCulture::GetGreatWorkCurrentThemingBonus
; Function compile flags: /Odtp
;	COMDAT ?lGetGreatWorkCurrentThemingBonus@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228669 = -24						; size = 4
$T228665 = -20						; size = 4
$T228660 = -16						; size = 4
$T228655 = -12						; size = 4
_iBonus$224796 = -8					; size = 4
_iIndex$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetGreatWorkCurrentThemingBonus@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetGreatWorkCurrentThemingBonus, COMDAT

; 2819 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 2820 : #ifdef AUI_WARNING_FIXES
; 2821 : 	const uint iIndex = lua_tointeger(L, 1);
; 2822 : #else
; 2823 : 	const int iIndex = lua_tointeger(L, 1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iIndex$[ebp], eax

; 2824 : #endif
; 2825 : 	if (iIndex < GC.getGame().GetGameCulture()->GetNumGreatWorks())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228655[ebp], ecx
	mov	ecx, DWORD PTR $T228655[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	DWORD PTR $T228665[ebp], eax
	mov	edx, DWORD PTR $T228665[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T228660[ebp], eax
	mov	ecx, DWORD PTR _iIndex$[ebp]
	cmp	ecx, DWORD PTR $T228660[ebp]
	jge	SHORT $LN1@lGetGreatW@11

; 2826 : 	{
; 2827 : 		int iBonus = GC.getGame().GetGameCulture()->GetGreatWorkCurrentThemingBonus(iIndex);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228669[ebp], edx
	mov	eax, DWORD PTR _iIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T228669[ebp]
	call	?GetGameCulture@CvGame@@QAEPAVCvGameCulture@@XZ ; CvGame::GetGameCulture
	mov	ecx, eax
	call	?GetGreatWorkCurrentThemingBonus@CvGameCulture@@QBEHH@Z ; CvGameCulture::GetGreatWorkCurrentThemingBonus
	mov	DWORD PTR _iBonus$224796[ebp], eax

; 2828 : 		lua_pushinteger(L, iBonus);

	mov	ecx, DWORD PTR _iBonus$224796[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2829 : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN2@lGetGreatW@11
$LN1@lGetGreatW@11:

; 2830 : 	}
; 2831 : 	return 0;

	xor	eax, eax
$LN2@lGetGreatW@11:

; 2832 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetGreatWorkCurrentThemingBonus@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetGreatWorkCurrentThemingBonus
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?GetGreatWorkName@CultureHelpers@@YA?AVCvString@@W4GreatWorkType@@@Z:PROC ; CultureHelpers::GetGreatWorkName
EXTRN	?GetArtifact@CultureHelpers@@YA?AW4GreatWorkType@@PAVCvPlot@@@Z:PROC ; CultureHelpers::GetArtifact
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z$0
__ehfuncinfo$?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
xdata$x	ENDS
;	COMDAT ?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T228673 = -56						; size = 4
_eGreatWork$ = -52					; size = 4
_szName$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
_pkPlot$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lGetArtifactName, COMDAT

; 2836 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2837 : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, 1, false);

	push	0
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 2838 : 	GreatWorkType eGreatWork = CultureHelpers::GetArtifact(pkPlot);

	mov	ecx, DWORD PTR _pkPlot$[ebp]
	push	ecx
	call	?GetArtifact@CultureHelpers@@YA?AW4GreatWorkType@@PAVCvPlot@@@Z ; CultureHelpers::GetArtifact
	add	esp, 4
	mov	DWORD PTR _eGreatWork$[ebp], eax

; 2839 : 	CvString szName = CultureHelpers::GetGreatWorkName(eGreatWork);

	mov	edx, DWORD PTR _eGreatWork$[ebp]
	push	edx
	lea	eax, DWORD PTR _szName$[ebp]
	push	eax
	call	?GetGreatWorkName@CultureHelpers@@YA?AVCvString@@W4GreatWorkType@@@Z ; CultureHelpers::GetGreatWorkName
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2840 : 	lua_pushstring(L, szName);

	lea	ecx, DWORD PTR _szName$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 2841 : 	return 1;

	mov	DWORD PTR $T228673[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _szName$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T228673[ebp]

; 2842 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _szName$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?lGetArtifactName@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lGetArtifactName
EXTRN	?GetNumFreePolicies@PolicyHelpers@@YAHW4PolicyBranchTypes@@@Z:PROC ; PolicyHelpers::GetNumFreePolicies
; Function compile flags: /Odtp
;	COMDAT ?lGetNumFreePolicies@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_eBranch$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumFreePolicies@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumFreePolicies, COMDAT

; 2845 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2846 : 	const PolicyBranchTypes eBranch = static_cast<PolicyBranchTypes>(luaL_checkint(L, 1));

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_luaL_checkinteger
	add	esp, 8
	mov	DWORD PTR _eBranch$[ebp], eax

; 2847 : 	lua_pushinteger(L, PolicyHelpers::GetNumFreePolicies(eBranch));

	mov	ecx, DWORD PTR _eBranch$[ebp]
	push	ecx
	call	?GetNumFreePolicies@PolicyHelpers@@YAHW4PolicyBranchTypes@@@Z ; PolicyHelpers::GetNumFreePolicies
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 2848 : 	return 1;

	mov	eax, 1

; 2849 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumFreePolicies@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumFreePolicies
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
PUBLIC	?plotDistance@@YAHHHHH@Z			; plotDistance
PUBLIC	??_C@_0BF@EIFMKKKD@CIVILIZATION_ENGLAND?$AA@	; `string'
EXTRN	?RouteGetExtraChild@@YAHPAVCvAStarNode@@HAAH1PAVCvAStar@@@Z:PROC ; RouteGetExtraChild
EXTRN	?RouteGetNumExtraChildren@@YAHPAVCvAStarNode@@PAVCvAStar@@@Z:PROC ; RouteGetNumExtraChildren
EXTRN	?GeneratePath@CvAStar@@QAE_NHHHHH_N@Z:PROC	; CvAStar::GeneratePath
EXTRN	?getCivilizationTypeKey@CvPlayer@@QBEPBDXZ:PROC	; CvPlayer::getCivilizationTypeKey
EXTRN	?plot@CvCity@@QBEPAVCvPlot@@XZ:PROC		; CvCity::plot
EXTRN	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::nextCity
EXTRN	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::firstCity
EXTRN	?getRouteFinder@CvGlobals@@QAEAAVCvAStar@@XZ:PROC ; CvGlobals::getRouteFinder
;	COMDAT ??_C@_0BF@EIFMKKKD@CIVILIZATION_ENGLAND?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvastar.h
CONST	SEGMENT
??_C@_0BF@EIFMKKKD@CIVILIZATION_ENGLAND?$AA@ DB 'CIVILIZATION_ENGLAND', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
CONST	ENDS
;	COMDAT ?lGetLongestCityConnectionPlots@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv244 = -276						; size = 4
tv201 = -272						; size = 4
tv401 = -268						; size = 4
tv396 = -262						; size = 1
tv389 = -261						; size = 1
tv317 = -260						; size = 4
tv383 = -256						; size = 4
tv181 = -252						; size = 4
tv172 = -248						; size = 4
tv160 = -244						; size = 4
$T228866 = -240						; size = 4
$T228862 = -236						; size = 4
$T228858 = -232						; size = 4
$T228854 = -228						; size = 4
$T228850 = -224						; size = 4
$T228846 = -220						; size = 4
$T228781 = -148						; size = 4
$T228777 = -144						; size = 4
$T228773 = -140						; size = 4
$T228769 = -136						; size = 4
$T228765 = -132						; size = 4
$T228761 = -128						; size = 4
$T228757 = -124						; size = 4
$T228753 = -120						; size = 4
$T228749 = -116						; size = 4
$T228733 = -112						; size = 4
$T228729 = -108						; size = 4
$T228725 = -104						; size = 4
$T228721 = -100						; size = 4
$T228717 = -96						; size = 4
$T228713 = -92						; size = 4
$T228709 = -88						; size = 4
$T228705 = -84						; size = 4
$T228701 = -80						; size = 4
$T228697 = -76						; size = 4
_iRouteValue$224848 = -72				; size = 4
_iPathfinderFlags$224849 = -68				; size = 4
_iRouteValue$224843 = -64				; size = 4
_iPathfinderFlags$224844 = -60				; size = 4
_szCivKey$224839 = -56					; size = 4
_bUsingXP2Scenario2$224836 = -49			; size = 1
_pSecondCityPlot$224835 = -48				; size = 4
_iThisPlotDistance$224846 = -44				; size = 4
_pFirstCityPlot$224830 = -40				; size = 4
_ePlayer$224821 = -36					; size = 4
_pFirstCity$224823 = -32				; size = 4
_pSecondCity$224824 = -28				; size = 4
_iLoop1$224825 = -24					; size = 4
_iLoop2$224826 = -20					; size = 4
_ui$224817 = -16					; size = 4
_iFurthestPlotDistance$ = -12				; size = 4
_pPlot1$ = -8						; size = 4
_pPlot2$ = -4						; size = 4
_L$ = 8							; size = 4
?lGetLongestCityConnectionPlots@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetLongestCityConnectionPlots, COMDAT

; 2852 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H

; 2853 : 	CvPlot* pPlot1 = NULL;

	mov	DWORD PTR _pPlot1$[ebp], 0

; 2854 : 	CvPlot* pPlot2 = NULL;

	mov	DWORD PTR _pPlot2$[ebp], 0

; 2855 : 
; 2856 : 	int iFurthestPlotDistance = 0;

	mov	DWORD PTR _iFurthestPlotDistance$[ebp], 0

; 2857 : 
; 2858 : 	GC.getRouteFinder().SetNumExtraChildrenFunc(NULL);

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getRouteFinder@CvGlobals@@QAEAAVCvAStar@@XZ ; CvGlobals::getRouteFinder
	mov	DWORD PTR $T228697[ebp], eax
	mov	eax, DWORD PTR $T228697[ebp]
	mov	DWORD PTR [eax+28], 0

; 2859 : 	GC.getRouteFinder().SetExtraChildGetterFunc(NULL);

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getRouteFinder@CvGlobals@@QAEAAVCvAStar@@XZ ; CvGlobals::getRouteFinder
	mov	DWORD PTR $T228701[ebp], eax
	mov	ecx, DWORD PTR $T228701[ebp]
	mov	DWORD PTR [ecx+32], 0

; 2860 : 
; 2861 : 	for(uint ui = 0; ui < MAX_MAJOR_CIVS; ui++)

	mov	DWORD PTR _ui$224817[ebp], 0
	jmp	SHORT $LN17@lGetLonges
$LN16@lGetLonges:
	mov	edx, DWORD PTR _ui$224817[ebp]
	add	edx, 1
	mov	DWORD PTR _ui$224817[ebp], edx
$LN17@lGetLonges:
	cmp	DWORD PTR _ui$224817[ebp], 22		; 00000016H
	jae	$LN15@lGetLonges

; 2862 : 	{
; 2863 : 		PlayerTypes ePlayer = (PlayerTypes)ui;

	mov	eax, DWORD PTR _ui$224817[ebp]
	mov	DWORD PTR _ePlayer$224821[ebp], eax

; 2864 : 
; 2865 : 		CvCity* pFirstCity = NULL;

	mov	DWORD PTR _pFirstCity$224823[ebp], 0

; 2866 : 		CvCity* pSecondCity = NULL;

	mov	DWORD PTR _pSecondCity$224824[ebp], 0

; 2867 : 		int iLoop1;
; 2868 : 		int iLoop2;
; 2869 : 
; 2870 : 		for (pFirstCity = GET_PLAYER(ePlayer).firstCity(&iLoop1); pFirstCity != NULL; pFirstCity = GET_PLAYER(ePlayer).nextCity(&iLoop1))

	mov	ecx, DWORD PTR _ePlayer$224821[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T228705[ebp], ecx
	push	0
	lea	edx, DWORD PTR _iLoop1$224825[ebp]
	push	edx
	mov	ecx, DWORD PTR $T228705[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pFirstCity$224823[ebp], eax
	jmp	SHORT $LN14@lGetLonges
$LN13@lGetLonges:
	mov	eax, DWORD PTR _ePlayer$224821[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T228709[ebp], eax
	push	0
	lea	ecx, DWORD PTR _iLoop1$224825[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T228709[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pFirstCity$224823[ebp], eax
$LN14@lGetLonges:
	cmp	DWORD PTR _pFirstCity$224823[ebp], 0
	je	$LN12@lGetLonges

; 2871 : 		{
; 2872 : 			CvPlot* pFirstCityPlot = pFirstCity->plot();

	mov	ecx, DWORD PTR _pFirstCity$224823[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	DWORD PTR _pFirstCityPlot$224830[ebp], eax

; 2873 : 
; 2874 : 			for (pSecondCity = GET_PLAYER(ePlayer).firstCity(&iLoop2); pSecondCity != NULL; pSecondCity = GET_PLAYER(ePlayer).nextCity(&iLoop2))

	mov	edx, DWORD PTR _ePlayer$224821[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T228713[ebp], edx
	push	0
	lea	eax, DWORD PTR _iLoop2$224826[ebp]
	push	eax
	mov	ecx, DWORD PTR $T228713[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pSecondCity$224824[ebp], eax
	jmp	SHORT $LN11@lGetLonges
$LN10@lGetLonges:
	mov	ecx, DWORD PTR _ePlayer$224821[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T228717[ebp], ecx
	push	0
	lea	edx, DWORD PTR _iLoop2$224826[ebp]
	push	edx
	mov	ecx, DWORD PTR $T228717[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pSecondCity$224824[ebp], eax
$LN11@lGetLonges:
	cmp	DWORD PTR _pSecondCity$224824[ebp], 0
	je	$LN9@lGetLonges

; 2875 : 			{
; 2876 : 				// don't measure distance to same city
; 2877 : 				if (pFirstCity == pSecondCity)

	mov	eax, DWORD PTR _pFirstCity$224823[ebp]
	cmp	eax, DWORD PTR _pSecondCity$224824[ebp]
	jne	SHORT $LN8@lGetLonges

; 2878 : 				{
; 2879 : 					continue;

	jmp	SHORT $LN10@lGetLonges
$LN8@lGetLonges:

; 2880 : 				}
; 2881 : 
; 2882 : 				CvPlot* pSecondCityPlot = pSecondCity->plot();

	mov	ecx, DWORD PTR _pSecondCity$224824[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	DWORD PTR _pSecondCityPlot$224835[ebp], eax

; 2883 : 
; 2884 : 				bool bUsingXP2Scenario2 = gDLL->IsModActivated(CIV5_XP2_SCENARIO2_MODID) || gDLL->IsModActivated(CIV5_COMPLETE_SCENARIO1_MODID);

	mov	ecx, DWORD PTR $T228721[ebp]
	mov	DWORD PTR tv160[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv160[ebp], edx
	mov	eax, DWORD PTR _CIV5_XP2_SCENARIO2_MODID
	push	eax
	mov	ecx, DWORD PTR tv160[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv160[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN20@lGetLonges
	mov	edx, DWORD PTR $T228725[ebp]
	mov	DWORD PTR tv172[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv172[ebp], eax
	mov	ecx, DWORD PTR _CIV5_COMPLETE_SCENARIO1_MODID
	push	ecx
	mov	edx, DWORD PTR tv172[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv172[ebp]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN20@lGetLonges
	mov	DWORD PTR tv181[ebp], 0
	jmp	SHORT $LN21@lGetLonges
$LN20@lGetLonges:
	mov	DWORD PTR tv181[ebp], 1
$LN21@lGetLonges:
	mov	cl, BYTE PTR tv181[ebp]
	mov	BYTE PTR _bUsingXP2Scenario2$224836[ebp], cl

; 2885 : 				if(bUsingXP2Scenario2)

	movzx	edx, BYTE PTR _bUsingXP2Scenario2$224836[ebp]
	test	edx, edx
	je	$LN7@lGetLonges

; 2886 : 				{
; 2887 : 					// active player
; 2888 : 					if (GC.getGame().getActivePlayer() == ePlayer)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T228729[ebp], eax
	mov	ecx, DWORD PTR $T228729[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	eax, DWORD PTR _ePlayer$224821[ebp]
	jne	$LN7@lGetLonges

; 2889 : 					{
; 2890 : 						const char* szCivKey = GET_PLAYER(ePlayer).getCivilizationTypeKey();

	mov	ecx, DWORD PTR _ePlayer$224821[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T228733[ebp], ecx
	mov	ecx, DWORD PTR $T228733[ebp]
	call	?getCivilizationTypeKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationTypeKey
	mov	DWORD PTR _szCivKey$224839[ebp], eax

; 2891 : 						if (strcmp(szCivKey, "CIVILIZATION_ENGLAND") == 0)

	mov	DWORD PTR tv383[ebp], OFFSET ??_C@_0BF@EIFMKKKD@CIVILIZATION_ENGLAND?$AA@
	mov	edx, DWORD PTR _szCivKey$224839[ebp]
	mov	DWORD PTR tv317[ebp], edx
$LL120@lGetLonges:
	mov	eax, DWORD PTR tv317[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv389[ebp], cl
	mov	edx, DWORD PTR tv383[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN121@lGetLonges
	cmp	BYTE PTR tv389[ebp], 0
	je	SHORT $LN122@lGetLonges
	mov	eax, DWORD PTR tv317[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv396[ebp], cl
	mov	edx, DWORD PTR tv383[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN121@lGetLonges
	add	DWORD PTR tv317[ebp], 2
	add	DWORD PTR tv383[ebp], 2
	cmp	BYTE PTR tv396[ebp], 0
	jne	SHORT $LL120@lGetLonges
$LN122@lGetLonges:
	mov	DWORD PTR tv401[ebp], 0
	jmp	SHORT $LN123@lGetLonges
$LN121@lGetLonges:
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv401[ebp], eax
$LN123@lGetLonges:
	mov	ecx, DWORD PTR tv401[ebp]
	mov	DWORD PTR tv201[ebp], ecx
	cmp	DWORD PTR tv201[ebp], 0
	jne	$LN7@lGetLonges

; 2892 : 						{
; 2893 : 							if (pFirstCityPlot->getX() == 41 && pFirstCityPlot->getY() == 62 && // cairo
; 2894 : 								pSecondCityPlot->getX() == 32 && pSecondCityPlot->getY() == 6) // cape town

	mov	edx, DWORD PTR _pFirstCityPlot$224830[ebp]
	movsx	eax, WORD PTR [edx]
	cmp	eax, 41					; 00000029H
	jne	$LN7@lGetLonges
	mov	ecx, DWORD PTR _pFirstCityPlot$224830[ebp]
	movsx	edx, WORD PTR [ecx+2]
	cmp	edx, 62					; 0000003eH
	jne	$LN7@lGetLonges
	mov	eax, DWORD PTR _pSecondCityPlot$224835[ebp]
	movsx	ecx, WORD PTR [eax]
	cmp	ecx, 32					; 00000020H
	jne	$LN7@lGetLonges
	mov	edx, DWORD PTR _pSecondCityPlot$224835[ebp]
	movsx	eax, WORD PTR [edx+2]
	cmp	eax, 6
	jne	$LN7@lGetLonges

; 2895 : 							{
; 2896 : 								// assuming that there are fewer than 256 players
; 2897 : 								int iRouteValue = ROUTE_RAILROAD + 1;

	mov	DWORD PTR _iRouteValue$224843[ebp], 2

; 2898 : 								int iPathfinderFlags = ui;

	mov	ecx, DWORD PTR _ui$224817[ebp]
	mov	DWORD PTR _iPathfinderFlags$224844[ebp], ecx

; 2899 : 								iPathfinderFlags |= (iRouteValue << 8);

	mov	edx, DWORD PTR _iRouteValue$224843[ebp]
	shl	edx, 8
	or	edx, DWORD PTR _iPathfinderFlags$224844[ebp]
	mov	DWORD PTR _iPathfinderFlags$224844[ebp], edx

; 2900 : 
; 2901 : 								if (GC.getRouteFinder().GeneratePath(pFirstCityPlot->getX(), pFirstCityPlot->getY(), pSecondCityPlot->getX(), pSecondCityPlot->getY(), iPathfinderFlags, true))

	mov	eax, DWORD PTR _pSecondCityPlot$224835[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR $T228749[ebp], ecx
	mov	edx, DWORD PTR _pSecondCityPlot$224835[ebp]
	movsx	eax, WORD PTR [edx]
	mov	DWORD PTR $T228753[ebp], eax
	mov	ecx, DWORD PTR _pFirstCityPlot$224830[ebp]
	movsx	edx, WORD PTR [ecx+2]
	mov	DWORD PTR $T228757[ebp], edx
	mov	eax, DWORD PTR _pFirstCityPlot$224830[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR $T228761[ebp], ecx
	push	1
	mov	edx, DWORD PTR _iPathfinderFlags$224844[ebp]
	push	edx
	mov	eax, DWORD PTR $T228749[ebp]
	push	eax
	mov	ecx, DWORD PTR $T228753[ebp]
	push	ecx
	mov	edx, DWORD PTR $T228757[ebp]
	push	edx
	mov	eax, DWORD PTR $T228761[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getRouteFinder@CvGlobals@@QAEAAVCvAStar@@XZ ; CvGlobals::getRouteFinder
	mov	ecx, eax
	call	?GeneratePath@CvAStar@@QAE_NHHHHH_N@Z	; CvAStar::GeneratePath
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@lGetLonges

; 2902 : 								{
; 2903 : 									gDLL->UnlockAchievement(ACHIEVEMENT_XP2_53);

	mov	edx, DWORD PTR $T228765[ebp]
	mov	DWORD PTR tv244[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv244[ebp], eax
	push	295					; 00000127H
	mov	ecx, DWORD PTR tv244[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv244[ebp]
	mov	eax, DWORD PTR [edx+828]
	call	eax
$LN7@lGetLonges:

; 2904 : 								}								
; 2905 : 							}
; 2906 : 						}
; 2907 : 					}
; 2908 : 				}
; 2909 : 
; 2910 : 				int iThisPlotDistance = plotDistance(pFirstCityPlot->getX(), pFirstCityPlot->getY(), pSecondCityPlot->getX(), pSecondCityPlot->getY());

	mov	ecx, DWORD PTR _pSecondCityPlot$224835[ebp]
	movsx	edx, WORD PTR [ecx+2]
	mov	DWORD PTR $T228769[ebp], edx
	mov	eax, DWORD PTR _pSecondCityPlot$224835[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR $T228773[ebp], ecx
	mov	edx, DWORD PTR _pFirstCityPlot$224830[ebp]
	movsx	eax, WORD PTR [edx+2]
	mov	DWORD PTR $T228777[ebp], eax
	mov	ecx, DWORD PTR _pFirstCityPlot$224830[ebp]
	movsx	edx, WORD PTR [ecx]
	mov	DWORD PTR $T228781[ebp], edx
	mov	eax, DWORD PTR $T228769[ebp]
	push	eax
	mov	ecx, DWORD PTR $T228773[ebp]
	push	ecx
	mov	edx, DWORD PTR $T228777[ebp]
	push	edx
	mov	eax, DWORD PTR $T228781[ebp]
	push	eax
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	mov	DWORD PTR _iThisPlotDistance$224846[ebp], eax

; 2911 : 				if (iThisPlotDistance > iFurthestPlotDistance)

	mov	ecx, DWORD PTR _iThisPlotDistance$224846[ebp]
	cmp	ecx, DWORD PTR _iFurthestPlotDistance$[ebp]
	jle	$LN2@lGetLonges

; 2912 : 				{
; 2913 : 					// assuming that there are fewer than 256 players
; 2914 : 					int iRouteValue = ROUTE_RAILROAD + 1;

	mov	DWORD PTR _iRouteValue$224848[ebp], 2

; 2915 : 					int iPathfinderFlags = ui;

	mov	edx, DWORD PTR _ui$224817[ebp]
	mov	DWORD PTR _iPathfinderFlags$224849[ebp], edx

; 2916 : 					iPathfinderFlags |= (iRouteValue << 8);

	mov	eax, DWORD PTR _iRouteValue$224848[ebp]
	shl	eax, 8
	or	eax, DWORD PTR _iPathfinderFlags$224849[ebp]
	mov	DWORD PTR _iPathfinderFlags$224849[ebp], eax

; 2917 : 
; 2918 : 					if (GC.getRouteFinder().GeneratePath(pFirstCityPlot->getX(), pFirstCityPlot->getY(), pSecondCityPlot->getX(), pSecondCityPlot->getY(), iPathfinderFlags, true))

	mov	ecx, DWORD PTR _pSecondCityPlot$224835[ebp]
	movsx	edx, WORD PTR [ecx+2]
	mov	DWORD PTR $T228846[ebp], edx
	mov	eax, DWORD PTR _pSecondCityPlot$224835[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR $T228850[ebp], ecx
	mov	edx, DWORD PTR _pFirstCityPlot$224830[ebp]
	movsx	eax, WORD PTR [edx+2]
	mov	DWORD PTR $T228854[ebp], eax
	mov	ecx, DWORD PTR _pFirstCityPlot$224830[ebp]
	movsx	edx, WORD PTR [ecx]
	mov	DWORD PTR $T228858[ebp], edx
	push	1
	mov	eax, DWORD PTR _iPathfinderFlags$224849[ebp]
	push	eax
	mov	ecx, DWORD PTR $T228846[ebp]
	push	ecx
	mov	edx, DWORD PTR $T228850[ebp]
	push	edx
	mov	eax, DWORD PTR $T228854[ebp]
	push	eax
	mov	ecx, DWORD PTR $T228858[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getRouteFinder@CvGlobals@@QAEAAVCvAStar@@XZ ; CvGlobals::getRouteFinder
	mov	ecx, eax
	call	?GeneratePath@CvAStar@@QAE_NHHHHH_N@Z	; CvAStar::GeneratePath
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@lGetLonges

; 2919 : 					{
; 2920 : 						// found a connection
; 2921 : 						pPlot1 = pFirstCityPlot;

	mov	eax, DWORD PTR _pFirstCityPlot$224830[ebp]
	mov	DWORD PTR _pPlot1$[ebp], eax

; 2922 : 						pPlot2 = pSecondCityPlot;

	mov	ecx, DWORD PTR _pSecondCityPlot$224835[ebp]
	mov	DWORD PTR _pPlot2$[ebp], ecx

; 2923 : 						iFurthestPlotDistance = iThisPlotDistance;

	mov	edx, DWORD PTR _iThisPlotDistance$224846[ebp]
	mov	DWORD PTR _iFurthestPlotDistance$[ebp], edx
$LN2@lGetLonges:

; 2924 : 					}
; 2925 : 				}
; 2926 : 			}

	jmp	$LN10@lGetLonges
$LN9@lGetLonges:

; 2927 : 		}

	jmp	$LN13@lGetLonges
$LN12@lGetLonges:

; 2928 : 	}

	jmp	$LN16@lGetLonges
$LN15@lGetLonges:

; 2929 : 
; 2930 : 	// reconnect the land route pathfinder water methods
; 2931 : 	GC.getRouteFinder().SetNumExtraChildrenFunc(RouteGetNumExtraChildren);

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getRouteFinder@CvGlobals@@QAEAAVCvAStar@@XZ ; CvGlobals::getRouteFinder
	mov	DWORD PTR $T228862[ebp], eax
	mov	eax, DWORD PTR $T228862[ebp]
	mov	DWORD PTR [eax+28], OFFSET ?RouteGetNumExtraChildren@@YAHPAVCvAStarNode@@PAVCvAStar@@@Z ; RouteGetNumExtraChildren

; 2932 : 	GC.getRouteFinder().SetExtraChildGetterFunc(RouteGetExtraChild);

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getRouteFinder@CvGlobals@@QAEAAVCvAStar@@XZ ; CvGlobals::getRouteFinder
	mov	DWORD PTR $T228866[ebp], eax
	mov	ecx, DWORD PTR $T228866[ebp]
	mov	DWORD PTR [ecx+32], OFFSET ?RouteGetExtraChild@@YAHPAVCvAStarNode@@HAAH1PAVCvAStar@@@Z ; RouteGetExtraChild

; 2933 : 
; 2934 : 	CvLuaPlot::Push(L, pPlot1);

	mov	edx, DWORD PTR _pPlot1$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8

; 2935 : 	CvLuaPlot::Push(L, pPlot2);

	mov	ecx, DWORD PTR _pPlot2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8

; 2936 : 	return 2;

	mov	eax, 2

; 2937 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetLongestCityConnectionPlots@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetLongestCityConnectionPlots
_TEXT	ENDS
PUBLIC	?dyWrap@@YAHH@Z					; dyWrap
PUBLIC	?dxWrap@@YAHH@Z					; dxWrap
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?plotDistance@@YAHHHHH@Z
_TEXT	SEGMENT
tv157 = -92						; size = 4
tv138 = -88						; size = 4
tv135 = -84						; size = 4
$T228953 = -80						; size = 4
$T228927 = -60						; size = 4
_iDY$ = -24						; size = 4
_iDX$ = -20						; size = 4
_iWrappedDX$ = -16					; size = 4
_iHX1$ = -12						; size = 4
_iHX2$ = -8						; size = 4
_iWrappedDY$ = -4					; size = 4
_iX1$ = 8						; size = 4
_iY1$ = 12						; size = 4
_iX2$ = 16						; size = 4
_iY2$ = 20						; size = 4
?plotDistance@@YAHHHHH@Z PROC				; plotDistance, COMDAT

; 144  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH

; 145  : 	int iDX;
; 146  : 	int iWrappedDX = dxWrap(iX2 - iX1);

	mov	eax, DWORD PTR _iX2$[ebp]
	sub	eax, DWORD PTR _iX1$[ebp]
	push	eax
	call	?dxWrap@@YAHH@Z				; dxWrap
	add	esp, 4
	mov	DWORD PTR _iWrappedDX$[ebp], eax

; 147  : 	int iWrappedDY = dyWrap(iY2 - iY1);

	mov	ecx, DWORD PTR _iY2$[ebp]
	sub	ecx, DWORD PTR _iY1$[ebp]
	push	ecx
	call	?dyWrap@@YAHH@Z				; dyWrap
	add	esp, 4
	mov	DWORD PTR _iWrappedDY$[ebp], eax

; 148  : 	int iDY = abs(iWrappedDY);

	mov	eax, DWORD PTR _iWrappedDY$[ebp]
	cdq
	xor	eax, edx
	sub	eax, edx
	mov	DWORD PTR _iDY$[ebp], eax

; 149  : 
; 150  : 	// convert to hex-space coordinates - the coordinate system axes are E and NE (not orthogonal)
; 151  : 	int iHX1 = xToHexspaceX(iX1, iY1);

	cmp	DWORD PTR _iY1$[ebp], 0
	jl	SHORT $LN35@plotDistan
	mov	edx, DWORD PTR _iY1$[ebp]
	sar	edx, 1
	mov	DWORD PTR tv135[ebp], edx
	jmp	SHORT $LN33@plotDistan
$LN35@plotDistan:
	mov	eax, DWORD PTR _iY1$[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR tv135[ebp], eax
$LN33@plotDistan:
	mov	eax, DWORD PTR _iX1$[ebp]
	sub	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR _iHX1$[ebp], eax

; 152  : 	int iHX2 = xToHexspaceX(iX1 + iWrappedDX, iY1 + iWrappedDY);

	mov	ecx, DWORD PTR _iY1$[ebp]
	add	ecx, DWORD PTR _iWrappedDY$[ebp]
	mov	DWORD PTR $T228927[ebp], ecx
	js	SHORT $LN39@plotDistan
	mov	edx, DWORD PTR $T228927[ebp]
	sar	edx, 1
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN37@plotDistan
$LN39@plotDistan:
	mov	eax, DWORD PTR $T228927[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR tv138[ebp], eax
$LN37@plotDistan:
	mov	eax, DWORD PTR _iX1$[ebp]
	add	eax, DWORD PTR _iWrappedDX$[ebp]
	sub	eax, DWORD PTR tv138[ebp]
	mov	DWORD PTR _iHX2$[ebp], eax

; 153  : 
; 154  : 	iDX = abs(dxWrap(iHX2 - iHX1));

	mov	ecx, DWORD PTR _iHX2$[ebp]
	sub	ecx, DWORD PTR _iHX1$[ebp]
	push	ecx
	call	?dxWrap@@YAHH@Z				; dxWrap
	add	esp, 4
	cdq
	xor	eax, edx
	sub	eax, edx
	mov	DWORD PTR _iDX$[ebp], eax

; 155  : 
; 156  : #ifdef NQM_GAME_CORE_UTILS_OPTIMIZATIONS
; 157  : 	if (((iHX2 - iHX1) ^ (iWrappedDY)) >= 0)  // the signs match
; 158  : #else
; 159  : 	if((iHX2 - iHX1 >= 0) == (iWrappedDY >= 0))  // the signs match

	mov	edx, DWORD PTR _iHX2$[ebp]
	sub	edx, DWORD PTR _iHX1$[ebp]
	xor	eax, eax
	test	edx, edx
	setge	al
	xor	ecx, ecx
	cmp	DWORD PTR _iWrappedDY$[ebp], 0
	setge	cl
	cmp	eax, ecx
	jne	SHORT $LN2@plotDistan

; 160  : #endif
; 161  : 	{
; 162  : 		return iDX + iDY;

	mov	eax, DWORD PTR _iDX$[ebp]
	add	eax, DWORD PTR _iDY$[ebp]
	jmp	SHORT $LN3@plotDistan

; 163  : 	}
; 164  : 	else

	jmp	SHORT $LN3@plotDistan
$LN2@plotDistan:

; 165  : 	{
; 166  : #ifdef NQM_FAST_COMP
; 167  : 		return (MAX(iDX, iDY));
; 168  : #else
; 169  : 		return (std::max(iDX, iDY));

	mov	edx, DWORD PTR _iDX$[ebp]
	cmp	edx, DWORD PTR _iDY$[ebp]
	jge	SHORT $LN57@plotDistan
	lea	eax, DWORD PTR _iDY$[ebp]
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $LN58@plotDistan
$LN57@plotDistan:
	lea	ecx, DWORD PTR _iDX$[ebp]
	mov	DWORD PTR tv157[ebp], ecx
$LN58@plotDistan:
	mov	edx, DWORD PTR tv157[ebp]
	mov	DWORD PTR $T228953[ebp], edx
	mov	eax, DWORD PTR $T228953[ebp]
	mov	eax, DWORD PTR [eax]
$LN3@plotDistan:

; 170  : #endif
; 171  : 	}
; 172  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?plotDistance@@YAHHHHH@Z ENDP				; plotDistance
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?dxWrap@@YAHH@Z
_TEXT	SEGMENT
$T228977 = -16						; size = 4
$T228969 = -12						; size = 4
$T228965 = -5						; size = 1
_kMap$ = -4						; size = 4
_iDX$ = 8						; size = 4
?dxWrap@@YAHH@Z PROC					; dxWrap, COMDAT

; 73   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 74   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR _kMap$[ebp], eax

; 75   : 	return wrapCoordDifference(iDX, kMap.getGridWidth(), kMap.isWrapX());

	mov	ecx, DWORD PTR _kMap$[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T228965[ebp], dl
	mov	eax, DWORD PTR _kMap$[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T228969[ebp], ecx
	movzx	edx, BYTE PTR $T228965[ebp]
	test	edx, edx
	je	SHORT $LN12@dxWrap
	mov	eax, DWORD PTR $T228969[ebp]
	shr	eax, 1
	cmp	DWORD PTR _iDX$[ebp], eax
	jle	SHORT $LN11@dxWrap
	mov	ecx, DWORD PTR _iDX$[ebp]
	sub	ecx, DWORD PTR $T228969[ebp]
	mov	DWORD PTR $T228977[ebp], ecx
	jmp	SHORT $LN13@dxWrap
	jmp	SHORT $LN12@dxWrap
$LN11@dxWrap:
	mov	edx, DWORD PTR $T228969[ebp]
	shr	edx, 1
	neg	edx
	cmp	DWORD PTR _iDX$[ebp], edx
	jge	SHORT $LN12@dxWrap
	mov	eax, DWORD PTR _iDX$[ebp]
	add	eax, DWORD PTR $T228969[ebp]
	mov	DWORD PTR $T228977[ebp], eax
	jmp	SHORT $LN13@dxWrap
$LN12@dxWrap:
	mov	ecx, DWORD PTR _iDX$[ebp]
	mov	DWORD PTR $T228977[ebp], ecx
$LN13@dxWrap:
	mov	eax, DWORD PTR $T228977[ebp]

; 76   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?dxWrap@@YAHH@Z ENDP					; dxWrap
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?dyWrap@@YAHH@Z
_TEXT	SEGMENT
$T228998 = -16						; size = 4
$T228990 = -12						; size = 4
$T228986 = -5						; size = 1
_kMap$ = -4						; size = 4
_iDY$ = 8						; size = 4
?dyWrap@@YAHH@Z PROC					; dyWrap, COMDAT

; 79   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 80   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR _kMap$[ebp], eax

; 81   : 	return wrapCoordDifference(iDY, kMap.getGridHeight(), kMap.isWrapY());

	mov	ecx, DWORD PTR _kMap$[ebp]
	mov	dl, BYTE PTR [ecx+4057]
	mov	BYTE PTR $T228986[ebp], dl
	mov	eax, DWORD PTR _kMap$[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T228990[ebp], ecx
	movzx	edx, BYTE PTR $T228986[ebp]
	test	edx, edx
	je	SHORT $LN12@dyWrap
	mov	eax, DWORD PTR $T228990[ebp]
	shr	eax, 1
	cmp	DWORD PTR _iDY$[ebp], eax
	jle	SHORT $LN11@dyWrap
	mov	ecx, DWORD PTR _iDY$[ebp]
	sub	ecx, DWORD PTR $T228990[ebp]
	mov	DWORD PTR $T228998[ebp], ecx
	jmp	SHORT $LN13@dyWrap
	jmp	SHORT $LN12@dyWrap
$LN11@dyWrap:
	mov	edx, DWORD PTR $T228990[ebp]
	shr	edx, 1
	neg	edx
	cmp	DWORD PTR _iDY$[ebp], edx
	jge	SHORT $LN12@dyWrap
	mov	eax, DWORD PTR _iDY$[ebp]
	add	eax, DWORD PTR $T228990[ebp]
	mov	DWORD PTR $T228998[ebp], eax
	jmp	SHORT $LN13@dyWrap
$LN12@dyWrap:
	mov	ecx, DWORD PTR _iDY$[ebp]
	mov	DWORD PTR $T228998[ebp], ecx
$LN13@dyWrap:
	mov	eax, DWORD PTR $T228998[ebp]

; 82   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?dyWrap@@YAHH@Z ENDP					; dyWrap
_TEXT	ENDS
EXTRN	?DisplayTemporaryPopupTradeRoute@CvGameTrade@@QAEXHHW4TradeConnectionType@@W4DomainTypes@@@Z:PROC ; CvGameTrade::DisplayTemporaryPopupTradeRoute
EXTRN	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ:PROC ; CvGame::GetGameTrade
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluagame.cpp
;	COMDAT ?lSelectedUnit_SpeculativePopupTradeRoute_Display@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T229004 = -20						; size = 4
_iPlotY$ = -16						; size = 4
_eDomain$ = -12						; size = 4
_type$ = -8						; size = 4
_iPlotX$ = -4						; size = 4
_L$ = 8							; size = 4
?lSelectedUnit_SpeculativePopupTradeRoute_Display@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSelectedUnit_SpeculativePopupTradeRoute_Display, COMDAT

; 2941 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 2942 : 	int iPlotX,iPlotY;
; 2943 : 	TradeConnectionType type;
; 2944 : 	DomainTypes eDomain;
; 2945 : 
; 2946 : 	iPlotX = lua_tointeger(L,1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iPlotX$[ebp], eax

; 2947 : 	iPlotY = lua_tointeger(L,2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iPlotY$[ebp], eax

; 2948 : 	type = (TradeConnectionType)lua_tointeger(L,3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _type$[ebp], eax

; 2949 : 	eDomain = (DomainTypes)lua_tointeger(L, 4);

	push	4
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _eDomain$[ebp], eax

; 2950 : 
; 2951 : 	GC.getGame().GetGameTrade()->DisplayTemporaryPopupTradeRoute(iPlotX,iPlotY,type, eDomain);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T229004[ebp], ecx
	mov	edx, DWORD PTR _eDomain$[ebp]
	push	edx
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iPlotY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iPlotX$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T229004[ebp]
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ecx, eax
	call	?DisplayTemporaryPopupTradeRoute@CvGameTrade@@QAEXHHW4TradeConnectionType@@W4DomainTypes@@@Z ; CvGameTrade::DisplayTemporaryPopupTradeRoute

; 2952 : 	return 0;

	xor	eax, eax

; 2953 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSelectedUnit_SpeculativePopupTradeRoute_Display@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSelectedUnit_SpeculativePopupTradeRoute_Display
_TEXT	ENDS
EXTRN	?HideTemporaryPopupTradeRoute@CvGameTrade@@QAEXHHW4TradeConnectionType@@@Z:PROC ; CvGameTrade::HideTemporaryPopupTradeRoute
; Function compile flags: /Odtp
;	COMDAT ?lSelectedUnit_SpeculativePopupTradeRoute_Hide@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T229010 = -16						; size = 4
_iPlotY$ = -12						; size = 4
_type$ = -8						; size = 4
_iPlotX$ = -4						; size = 4
_L$ = 8							; size = 4
?lSelectedUnit_SpeculativePopupTradeRoute_Hide@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lSelectedUnit_SpeculativePopupTradeRoute_Hide, COMDAT

; 2956 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 2957 : 	int iPlotX,iPlotY;
; 2958 : 	TradeConnectionType type;
; 2959 : 	
; 2960 : 	iPlotX = lua_tointeger(L,1);

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iPlotX$[ebp], eax

; 2961 : 	iPlotY = lua_tointeger(L,2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _iPlotY$[ebp], eax

; 2962 : 	type = (TradeConnectionType)lua_tointeger(L,3);

	push	3
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tointeger
	add	esp, 8
	mov	DWORD PTR _type$[ebp], eax

; 2963 : 	GC.getGame().GetGameTrade()->HideTemporaryPopupTradeRoute(iPlotX,iPlotY,type);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T229010[ebp], eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iPlotY$[ebp]
	push	edx
	mov	eax, DWORD PTR _iPlotX$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T229010[ebp]
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ecx, eax
	call	?HideTemporaryPopupTradeRoute@CvGameTrade@@QAEXHHW4TradeConnectionType@@@Z ; CvGameTrade::HideTemporaryPopupTradeRoute

; 2964 : 	return 0;

	xor	eax, eax

; 2965 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lSelectedUnit_SpeculativePopupTradeRoute_Hide@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lSelectedUnit_SpeculativePopupTradeRoute_Hide
_TEXT	ENDS
EXTRN	?mouseoverUnit@CvGame@@QAEXPAVCvUnit@@_N@Z:PROC	; CvGame::mouseoverUnit
; Function compile flags: /Odtp
;	COMDAT ?lMouseoverUnit@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T229016 = -12						; size = 4
_pUnit$ = -8						; size = 4
_bEnter$ = -1						; size = 1
_L$ = 8							; size = 4
?lMouseoverUnit@CvLuaGame@@KAHPAUlua_State@@@Z PROC	; CvLuaGame::lMouseoverUnit, COMDAT

; 2968 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 2969 : 	CvUnit* pUnit;
; 2970 : 	bool bEnter;
; 2971 : 
; 2972 : 	pUnit = CvLuaUnit::GetInstance(L, 1);

	push	1
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pUnit$[ebp], eax

; 2973 : 	bEnter = lua_toboolean(L, 2);

	push	2
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	dl
	mov	BYTE PTR _bEnter$[ebp], dl

; 2974 : 
; 2975 : 	GC.getGame().mouseoverUnit(pUnit, bEnter);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T229016[ebp], eax
	movzx	ecx, BYTE PTR _bEnter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pUnit$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T229016[ebp]
	call	?mouseoverUnit@CvGame@@QAEXPAVCvUnit@@_N@Z ; CvGame::mouseoverUnit

; 2976 : 	return 0;

	xor	eax, eax

; 2977 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lMouseoverUnit@CvLuaGame@@KAHPAUlua_State@@@Z ENDP	; CvLuaGame::lMouseoverUnit
_TEXT	ENDS
EXTRN	?GetNumArchaeologySites@CvGame@@QBEHXZ:PROC	; CvGame::GetNumArchaeologySites
; Function compile flags: /Odtp
;	COMDAT ?lGetNumArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T229022 = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumArchaeologySites, COMDAT

; 2980 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2981 : 	lua_pushinteger(L, GC.getGame().GetNumArchaeologySites());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T229022[ebp], eax
	mov	ecx, DWORD PTR $T229022[ebp]
	call	?GetNumArchaeologySites@CvGame@@QBEHXZ	; CvGame::GetNumArchaeologySites
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2982 : 	return 1;

	mov	eax, 1

; 2983 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumArchaeologySites
_TEXT	ENDS
EXTRN	?GetNumHiddenArchaeologySites@CvGame@@QBEHXZ:PROC ; CvGame::GetNumHiddenArchaeologySites
; Function compile flags: /Odtp
;	COMDAT ?lGetNumHiddenArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
$T229028 = -4						; size = 4
_L$ = 8							; size = 4
?lGetNumHiddenArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z PROC ; CvLuaGame::lGetNumHiddenArchaeologySites, COMDAT

; 2986 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2987 : 	lua_pushinteger(L, GC.getGame().GetNumHiddenArchaeologySites());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T229028[ebp], eax
	mov	ecx, DWORD PTR $T229028[ebp]
	call	?GetNumHiddenArchaeologySites@CvGame@@QBEHXZ ; CvGame::GetNumHiddenArchaeologySites
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 2988 : 	return 1;

	mov	eax, 1

; 2989 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?lGetNumHiddenArchaeologySites@CvLuaGame@@KAHPAUlua_State@@@Z ENDP ; CvLuaGame::lGetNumHiddenArchaeologySites
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T229103 = -32						; size = 4
$T229102 = -28						; size = 4
$T229098 = -24						; size = 4
$T229097 = -20						; size = 4
$T229079 = -16						; size = 4
$T229078 = -12						; size = 4
$T229062 = -8						; size = 4
__Cat$229086 = -2					; size = 1
$T229084 = -1						; size = 1
?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tidy

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T229098[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T229097[ebp], ecx
	mov	edx, DWORD PTR $T229098[ebp]
	mov	DWORD PTR $T229079[ebp], edx
	mov	eax, DWORD PTR $T229097[ebp]
	mov	DWORD PTR $T229078[ebp], eax
	mov	cl, BYTE PTR __Cat$229086[ebp]
	mov	BYTE PTR $T229084[ebp], cl
	mov	edx, DWORD PTR $T229078[ebp]
	mov	DWORD PTR $T229062[ebp], edx
	jmp	SHORT $LN12@Tidy
$LN11@Tidy:
	mov	eax, DWORD PTR $T229062[ebp]
	add	eax, 4
	mov	DWORD PTR $T229062[ebp], eax
$LN12@Tidy:
	mov	ecx, DWORD PTR $T229062[ebp]
	cmp	ecx, DWORD PTR $T229079[ebp]
	je	SHORT $LN4@Tidy
	jmp	SHORT $LN11@Tidy
$LN4@Tidy:

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	mov	DWORD PTR $T229103[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T229102[ebp], eax
	mov	ecx, DWORD PTR $T229102[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Tidy:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 1135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
_TEXT	ENDS
PUBLIC	??_C@_07NHABFFHN@__index?$AA@			; `string'
PUBLIC	??_C@_0L@GCADIOHF@__instance?$AA@		; `string'
PUBLIC	??_C@_01MHEDDDHA@v?$AA@				; `string'
PUBLIC	??_C@_06BPGFKLEK@__mode?$AA@			; `string'
PUBLIC	??_C@_0M@CEBPKMAI@__instances?$AA@		; `string'
EXTRN	_lua_remove:PROC
EXTRN	_lua_pushlightuserdata:PROC
EXTRN	_lua_rawget:PROC
EXTRN	?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z:PROC ; CvLuaCity::PushMethods
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_setmetatable:PROC
EXTRN	_lua_rawset:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_getfield:PROC
EXTRN	?GetTypeName@CvLuaCity@@SAPBDXZ:PROC		; CvLuaCity::GetTypeName
;	COMDAT ??_C@_07NHABFFHN@__index?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
CONST	SEGMENT
??_C@_07NHABFFHN@__index?$AA@ DB '__index', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GCADIOHF@__instance?$AA@
CONST	SEGMENT
??_C@_0L@GCADIOHF@__instance?$AA@ DB '__instance', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01MHEDDDHA@v?$AA@
CONST	SEGMENT
??_C@_01MHEDDDHA@v?$AA@ DB 'v', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06BPGFKLEK@__mode?$AA@
CONST	SEGMENT
??_C@_06BPGFKLEK@__mode?$AA@ DB '__mode', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CEBPKMAI@__instances?$AA@
CONST	SEGMENT
??_C@_0M@CEBPKMAI@__instances?$AA@ DB '__instances', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z
_TEXT	SEGMENT
_instances_index$224976 = -8				; size = 4
_type_index$224975 = -4					; size = 4
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	cmp	DWORD PTR _pkType$[ebp], 0
	je	$LN4@Push

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaCity@@SAPBDXZ		; CvLuaCity::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN3@Push

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 59   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 63   : 			lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET ??_C@_06BPGFKLEK@__mode?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawset
	add	esp, 8

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushvalue
	add	esp, 8

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaCity@@SAPBDXZ		; CvLuaCity::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z ; CvLuaCity::PushMethods
	add	esp, 8
$LN3@Push:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _type_index$224975[ebp], eax

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawget
	add	esp, 8

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _instances_index$224976[ebp], eax

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawget
	add	esp, 8

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN2@Push

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 97   : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET ??_C@_07NHABFFHN@__index?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 102  : 			lua_pushvalue(L, type_index);

	mov	ecx, DWORD PTR _type_index$224975[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	mov	edx, DWORD PTR _instances_index$224976[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8
$LN2@Push:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	mov	ecx, DWORD PTR _instances_index$224976[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_remove
	add	esp, 8

; 114  : 		lua_remove(L, type_index);

	mov	eax, DWORD PTR _type_index$224975[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_remove
	add	esp, 8

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else

	jmp	SHORT $LN5@Push
$LN4@Push:

; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN5@Push:

; 122  : 	}
; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
_TEXT	ENDS
PUBLIC	??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@ ; `string'
EXTRN	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z:PROC ; CvLuaCity::HandleMissingInstance
EXTRN	_lua_touserdata:PROC
;	COMDAT ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
CONST	SEGMENT
??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@ DB 'Not a val'
	DB	'id instance.  Either the instance is NULL or you used ''.'' i'
	DB	'nstead of '':''.', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXXZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod, COMDAT

; 222  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 223  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 224  : 	(pkType->*func)();

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 225  : 	return 0;

	xor	eax, eax

; 226  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?BasicLuaMethod@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod
_TEXT	ENDS
EXTRN	_lua_pushcclosure:PROC
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluastaticinstance.h
;	COMDAT ?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
_funcName$ = 16						; size = 4
?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z PROC ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod, COMDAT

; 58   : {

	push	ebp
	mov	ebp, esp

; 59   : 	lua_pushcclosure(L, func, 0);

	push	0
	mov	eax, DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH

; 60   : 	lua_setfield(L, -2, funcName);

	mov	edx, DWORD PTR _funcName$[ebp]
	push	edx
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 61   : }

	pop	ebp
	ret	0
?RegisterMethod@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@KAXPAUlua_State@@P6AH0@ZPBD@Z ENDP ; CvLuaStaticInstance<CvLuaGame,CvGame>::RegisterMethod
_TEXT	ENDS
EXTRN	?PushMethods@CvLuaPlot@@SAXPAUlua_State@@H@Z:PROC ; CvLuaPlot::PushMethods
EXTRN	?GetTypeName@CvLuaPlot@@SAPBDXZ:PROC		; CvLuaPlot::GetTypeName
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z
_TEXT	SEGMENT
_instances_index$225029 = -8				; size = 4
_type_index$225028 = -4					; size = 4
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z PROC ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	cmp	DWORD PTR _pkType$[ebp], 0
	je	$LN4@Push@2

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlot@@SAPBDXZ		; CvLuaPlot::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN3@Push@2

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 59   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 63   : 			lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET ??_C@_06BPGFKLEK@__mode?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawset
	add	esp, 8

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushvalue
	add	esp, 8

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlot@@SAPBDXZ		; CvLuaPlot::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?PushMethods@CvLuaPlot@@SAXPAUlua_State@@H@Z ; CvLuaPlot::PushMethods
	add	esp, 8
$LN3@Push@2:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _type_index$225028[ebp], eax

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawget
	add	esp, 8

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _instances_index$225029[ebp], eax

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawget
	add	esp, 8

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN2@Push@2

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 97   : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET ??_C@_07NHABFFHN@__index?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 102  : 			lua_pushvalue(L, type_index);

	mov	ecx, DWORD PTR _type_index$225028[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	mov	edx, DWORD PTR _instances_index$225029[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8
$LN2@Push@2:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	mov	ecx, DWORD PTR _instances_index$225029[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_remove
	add	esp, 8

; 114  : 		lua_remove(L, type_index);

	mov	eax, DWORD PTR _type_index$225028[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_remove
	add	esp, 8

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else

	jmp	SHORT $LN5@Push@2
$LN4@Push@2:

; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN5@Push@2:

; 122  : 	}
; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ENDP ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
_TEXT	ENDS
EXTRN	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z:PROC ; CvLuaPlot::HandleMissingInstance
; Function compile flags: /Odtp
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc@2

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc@2

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc@2

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc@2:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc@2
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc@2

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc@2

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@2:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc@2:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
_TEXT	ENDS
EXTRN	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z:PROC ; CvLuaUnit::HandleMissingInstance
; Function compile flags: /Odtp
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc@3

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc@3

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc@3

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc@3:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc@3
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc@3

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc@3

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@3:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z ; CvLuaUnit::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc@3:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
_TEXT	ENDS
EXTRN	?PushMethods@CvLuaLeague@@SAXPAUlua_State@@H@Z:PROC ; CvLuaLeague::PushMethods
EXTRN	?GetTypeName@CvLuaLeague@@SAPBDXZ:PROC		; CvLuaLeague::GetTypeName
; Function compile flags: /Odtp
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAXPAUlua_State@@PAVCvLeague@@@Z
_TEXT	SEGMENT
_instances_index$225079 = -8				; size = 4
_type_index$225078 = -4					; size = 4
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAXPAUlua_State@@PAVCvLeague@@@Z PROC ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::Push, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	cmp	DWORD PTR _pkType$[ebp], 0
	je	$LN4@Push@3

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaLeague@@SAPBDXZ	; CvLuaLeague::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN3@Push@3

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 59   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 63   : 			lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET ??_C@_06BPGFKLEK@__mode?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawset
	add	esp, 8

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushvalue
	add	esp, 8

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaLeague@@SAPBDXZ	; CvLuaLeague::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?PushMethods@CvLuaLeague@@SAXPAUlua_State@@H@Z ; CvLuaLeague::PushMethods
	add	esp, 8
$LN3@Push@3:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _type_index$225078[ebp], eax

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawget
	add	esp, 8

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _instances_index$225079[ebp], eax

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawget
	add	esp, 8

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN2@Push@3

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 97   : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET ??_C@_07NHABFFHN@__index?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 102  : 			lua_pushvalue(L, type_index);

	mov	ecx, DWORD PTR _type_index$225078[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	mov	edx, DWORD PTR _instances_index$225079[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8
$LN2@Push@3:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	mov	ecx, DWORD PTR _instances_index$225079[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_remove
	add	esp, 8

; 114  : 		lua_remove(L, type_index);

	mov	eax, DWORD PTR _type_index$225078[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_remove
	add	esp, 8

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else

	jmp	SHORT $LN5@Push@3
$LN4@Push@3:

; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN5@Push@3:

; 122  : 	}
; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaLeague@@VCvLeague@@@@SAXPAUlua_State@@PAVCvLeague@@@Z ENDP ; CvLuaScopedInstance<CvLuaLeague,CvLeague>::Push
_TEXT	ENDS
PUBLIC	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<bool>, COMDAT

; 23   : 	{

	push	ebp
	mov	ebp, esp

; 24   : 		return lua_toboolean(L, idx) != 0;

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	neg	eax
	sbb	eax, eax
	neg	eax

; 25   : 	}

	pop	ebp
	ret	0
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<bool>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N1@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N1@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,bool>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N1@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_N_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N11@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N11@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,bool,bool>, COMDAT

; 249  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 250  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 253  : 	return 0;

	xor	eax, eax

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_N_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEX_N11@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,bool,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4HurryTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4HurryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum HurryTypes>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 131  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum HurryTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 134  : 
; 135  : 	return 1;

	mov	eax, 1

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4HurryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4HurryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum HurryTypes>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z PROC	; CvLuaArgs::pushValue<int>, COMDAT

; 38   : 	{

	push	ebp
	mov	ebp, esp

; 39   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 40   : 	}

	pop	ebp
	ret	0
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ENDP	; CvLuaArgs::pushValue<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4VictoryTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4VictoryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum VictoryTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4VictoryTypes@@@CvLuaArgs@@YA?AW4VictoryTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum VictoryTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4VictoryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum VictoryTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>, COMDAT

; 121  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TechTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TechTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TechTypes>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 131  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TechTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 134  : 
; 135  : 	return 1;

	mov	eax, 1

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TechTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TechTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4ImprovementTypes@@PBVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4ImprovementTypes@@PBVCvPlot@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ImprovementTypes@@PBVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4ImprovementTypes@@PBVCvPlot@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum ImprovementTypes,CvPlot const *>, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 89   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 90   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 91   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@PBVCvPlot@@@CvLuaArgs@@YAPBVCvPlot@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<CvPlot const *>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ImprovementTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 92   : 
; 93   : 	return 1;

	mov	eax, 1

; 94   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4ImprovementTypes@@PBVCvPlot@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4ImprovementTypes@@PBVCvPlot@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum ImprovementTypes,CvPlot const *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 1
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z PROC	; CvLuaArgs::pushValue<bool>, COMDAT

; 44   : 	{

	push	ebp
	mov	ebp, esp

; 45   : 		lua_pushboolean(L, t);

	movzx	eax, BYTE PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 46   : 	}

	pop	ebp
	ret	0
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ENDP	; CvLuaArgs::pushValue<bool>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4EraTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4EraTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum EraTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z ; CvLuaArgs::pushValue<enum EraTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4EraTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4EraTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum EraTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes>, COMDAT

; 121  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z ; CvLuaArgs::pushValue<enum TeamTypes>
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4CivilizationTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4CivilizationTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum CivilizationTypes>, COMDAT

; 121  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z ; CvLuaArgs::pushValue<enum CivilizationTypes>
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4CivilizationTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum CivilizationTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum PlayerTypes>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 131  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 134  : 
; 135  : 	return 1;

	mov	eax, 1

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<int>, COMDAT

; 18   : 	{

	push	ebp
	mov	ebp, esp

; 19   : 		return lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 20   : 	}

	pop	ebp
	ret	0
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 131  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 134  : 
; 135  : 	return 1;

	mov	eax, 1

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHW4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHW4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum PlayerTypes>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHW4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4FromUIDiploEventTypes@@W4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4FromUIDiploEventTypes@@W4PlayerTypes@@HH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4FromUIDiploEventTypes@@W4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4FromUIDiploEventTypes@@W4PlayerTypes@@HH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum FromUIDiploEventTypes,enum PlayerTypes,int,int>, COMDAT

; 259  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 260  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 261  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 262  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2), CvLuaArgs::toValue<arg4>(L, idx + 3));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4FromUIDiploEventTypes@@@CvLuaArgs@@YA?AW4FromUIDiploEventTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum FromUIDiploEventTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 263  : 	return 0;

	xor	eax, eax

; 264  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4FromUIDiploEventTypes@@W4PlayerTypes@@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4FromUIDiploEventTypes@@W4PlayerTypes@@HH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum FromUIDiploEventTypes,enum PlayerTypes,int,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4PlayerTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4PlayerTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z ; CvLuaArgs::pushValue<enum PlayerTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4PlayerTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@_N2@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@_N2@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,bool,bool>, COMDAT

; 249  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 250  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ; CvLuaArgs::toValue<bool>
	add	esp, 8
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 253  : 	return 0;

	xor	eax, eax

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@_N_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@_N2@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,bool,bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes>, COMDAT

; 121  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z ; CvLuaArgs::pushValue<enum PlayerTypes>
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NXZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>, COMDAT

; 121  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4UnitTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4UnitTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum UnitTypes>, COMDAT

; 121  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z ; CvLuaArgs::pushValue<enum UnitTypes>
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4UnitTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum UnitTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z ; CvLuaArgs::pushValue<enum TeamTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4VictoryTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4VictoryTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum VictoryTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4VictoryTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4VictoryTypes@@@Z ; CvLuaArgs::pushValue<enum VictoryTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4VictoryTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum VictoryTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@W4VictoryTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@W4VictoryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,enum VictoryTypes>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4VictoryTypes@@@CvLuaArgs@@YA?AW4VictoryTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum VictoryTypes>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TeamTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TeamTypes@@W4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@W4VictoryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,enum VictoryTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4GameStateTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4GameStateTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4GameStateTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4GameStateTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum GameStateTypes>, COMDAT

; 121  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 122  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 123  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4GameStateTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4GameStateTypes@@@Z ; CvLuaArgs::pushValue<enum GameStateTypes>
	add	esp, 8

; 124  : 
; 125  : 	return 1;

	mov	eax, 1

; 126  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4GameStateTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4GameStateTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum GameStateTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@W43@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@W43@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,enum TeamTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TeamTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z ; CvLuaArgs::pushValue<enum TeamTypes>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TeamTypes@@W41@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4TeamTypes@@W43@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,enum TeamTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4TeamTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4TeamTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TeamTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TeamTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEHW4TeamTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TeamTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,int>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TeamTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4TeamTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4HandicapTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4HandicapTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum HandicapTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z ; CvLuaArgs::pushValue<enum HandicapTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4HandicapTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4HandicapTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum HandicapTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4CalendarTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4CalendarTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4CalendarTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4CalendarTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum CalendarTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4CalendarTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CalendarTypes@@@Z ; CvLuaArgs::pushValue<enum CalendarTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4CalendarTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4CalendarTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum CalendarTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4GameSpeedTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4GameSpeedTypes@@XZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4GameSpeedTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4GameSpeedTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum GameSpeedTypes>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@W4GameSpeedTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4GameSpeedTypes@@@Z ; CvLuaArgs::pushValue<enum GameSpeedTypes>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4GameSpeedTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE?AW4GameSpeedTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum GameSpeedTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,int>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 131  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z ; CvLuaArgs::pushValue<enum PlayerTypes>
	add	esp, 8

; 134  : 
; 135  : 	return 1;

	mov	eax, 1

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4PlayerTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,int>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 131  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z ; CvLuaArgs::pushValue<enum TeamTypes>
	add	esp, 8

; 134  : 
; 135  : 	return 1;

	mov	eax, 1

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4TeamTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE?AW4TeamTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum TeamTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TeamTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TeamTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TeamTypes>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 131  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum TeamTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 134  : 
; 135  : 	return 1;

	mov	eax, 1

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4TeamTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4TeamTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum TeamTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4MultiplayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4MultiplayerOptionTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4MultiplayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4MultiplayerOptionTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum MultiplayerOptionTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4MultiplayerOptionTypes@@@CvLuaArgs@@YA?AW4MultiplayerOptionTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum MultiplayerOptionTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4MultiplayerOptionTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4MultiplayerOptionTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum MultiplayerOptionTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum UnitTypes>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 131  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 134  : 
; 135  : 	return 1;

	mov	eax, 1

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum UnitTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitClassTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitClassTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum UnitClassTypes>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 131  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitClassTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 134  : 
; 135  : 	return 1;

	mov	eax, 1

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4UnitClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4UnitClassTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum UnitClassTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4UnitClassTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4UnitClassTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum UnitClassTypes,int>, COMDAT

; 140  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 141  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 142  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitClassTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 144  : 
; 145  : 	return 1;

	mov	eax, 1

; 146  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4UnitClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4UnitClassTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum UnitClassTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4BuildingClassTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4BuildingClassTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum BuildingClassTypes>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 131  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingClassTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 134  : 
; 135  : 	return 1;

	mov	eax, 1

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4BuildingClassTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4BuildingClassTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum BuildingClassTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4BuildingClassTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4BuildingClassTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum BuildingClassTypes,int>, COMDAT

; 140  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 141  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 142  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingClassTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 144  : 
; 145  : 	return 1;

	mov	eax, 1

; 146  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4BuildingClassTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4BuildingClassTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum BuildingClassTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4ProjectTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4ProjectTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum ProjectTypes>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 131  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ProjectTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ; CvLuaArgs::pushValue<int>
	add	esp, 8

; 134  : 
; 135  : 	return 1;

	mov	eax, 1

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HW4ProjectTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEHW4ProjectTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,enum ProjectTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ProjectTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ProjectTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum ProjectTypes,int>, COMDAT

; 140  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 141  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 142  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 143  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1)));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ProjectTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	edx, al
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 144  : 
; 145  : 	return 1;

	mov	eax, 1

; 146  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4ProjectTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ProjectTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum ProjectTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4VictoryTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4VictoryTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum VictoryTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4VictoryTypes@@@CvLuaArgs@@YA?AW4VictoryTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum VictoryTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4VictoryTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4VictoryTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum VictoryTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4SpecialUnitTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4SpecialUnitTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum SpecialUnitTypes>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 131  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4SpecialUnitTypes@@@CvLuaArgs@@YA?AW4SpecialUnitTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum SpecialUnitTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 134  : 
; 135  : 	return 1;

	mov	eax, 1

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4SpecialUnitTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum SpecialUnitTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4SpecialUnitTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4SpecialUnitTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum SpecialUnitTypes>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4SpecialUnitTypes@@@CvLuaArgs@@YA?AW4SpecialUnitTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum SpecialUnitTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4SpecialUnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4SpecialUnitTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum SpecialUnitTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@PBD@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXPBD@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@PBD@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXPBD@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<char const *>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@PBD@CvLuaArgs@@YAPBDPAUlua_State@@H@Z ; CvLuaArgs::toValue<char const *>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@PBD@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXPBD@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<char const *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEIXZ@Z
_TEXT	SEGMENT
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEIXZ@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<unsigned int>, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z ; CvLuaArgs::pushValue<unsigned int>
	add	esp, 8

; 72   : 
; 73   : 	return 1;

	mov	eax, 1

; 74   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@I@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BEIXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<unsigned int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,enum LeaderHeadTypes,enum CivilizationTypes>, COMDAT

; 249  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 250  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4CivilizationTypes@@@CvLuaArgs@@YA?AW4CivilizationTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum CivilizationTypes>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4LeaderHeadTypes@@@CvLuaArgs@@YA?AW4LeaderHeadTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum LeaderHeadTypes>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 253  : 	return 0;

	xor	eax, eax

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@W4LeaderHeadTypes@@W4CivilizationTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,enum LeaderHeadTypes,enum CivilizationTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HHW4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHW4YieldTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HHW4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHW4YieldTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int,enum YieldTypes,int>, COMDAT

; 259  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 260  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 261  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 262  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2), CvLuaArgs::toValue<arg4>(L, idx + 3));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum YieldTypes>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 263  : 	return 0;

	xor	eax, eax

; 264  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HHW4YieldTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHW4YieldTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int,enum YieldTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@HHH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HHH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int,int>, COMDAT

; 249  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 250  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 253  : 	return 0;

	xor	eax, eax

; 254  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@HHH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXHHH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<int,int,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4CivilizationTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4CivilizationTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum CivilizationTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4CivilizationTypes@@@CvLuaArgs@@YA?AW4CivilizationTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum CivilizationTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4CivilizationTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4CivilizationTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum CivilizationTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4LeaderHeadTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4LeaderHeadTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum LeaderHeadTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4LeaderHeadTypes@@@CvLuaArgs@@YA?AW4LeaderHeadTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum LeaderHeadTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4LeaderHeadTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4LeaderHeadTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum LeaderHeadTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4UnitTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4UnitTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum UnitTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum UnitTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4UnitTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4UnitTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum UnitTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4BuildingTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4BuildingTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum BuildingTypes>, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 79   : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum BuildingTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 82   : 
; 83   : 	return 1;

	mov	eax, 1

; 84   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4BuildingTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@BE_NW4BuildingTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum BuildingTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@_NW4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ControlTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ControlTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum ControlTypes>, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 131  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 132  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 133  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4ControlTypes@@@CvLuaArgs@@YA?AW4ControlTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ControlTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ; CvLuaArgs::pushValue<bool>
	add	esp, 8

; 134  : 
; 135  : 	return 1;

	mov	eax, 1

; 136  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@_NW4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AE_NW4ControlTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<bool,enum ControlTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4ControlTypes@@@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4ControlTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum ControlTypes>, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 231  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4ControlTypes@@@CvLuaArgs@@YA?AW4ControlTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum ControlTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 234  : 	return 0;

	xor	eax, eax

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4ControlTypes@@@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4ControlTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum ControlTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@H@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@H@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,int>, COMDAT

; 239  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 240  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 243  : 	return 0;

	xor	eax, eax

; 244  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@H@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@H@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$BasicLuaMethod@W4PlayerTypes@@W41@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@1HH@Z@Z
_TEXT	SEGMENT
_idx$ = -8						; size = 4
_pkType$ = -4						; size = 4
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4PlayerTypes@@W41@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@1HH@Z@Z PROC ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes,int,int>, COMDAT

; 259  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 260  : 	const int idx = Derived::GetStartingArgIndex();

	call	?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
	mov	DWORD PTR _idx$[ebp], eax

; 261  : 	InstanceType* pkType = Derived::GetInstance(L);

	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?GetInstance@CvLuaGame@@SAPAVCvGame@@PAUlua_State@@H@Z ; CvLuaGame::GetInstance
	add	esp, 8
	mov	DWORD PTR _pkType$[ebp], eax

; 262  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2), CvLuaArgs::toValue<arg4>(L, idx + 3));

	mov	ecx, DWORD PTR _idx$[ebp]
	add	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ; CvLuaArgs::toValue<int>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _idx$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ; CvLuaArgs::toValue<enum PlayerTypes>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _pkType$[ebp]
	call	DWORD PTR _func$[ebp]

; 263  : 	return 0;

	xor	eax, eax

; 264  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$BasicLuaMethod@W4PlayerTypes@@W41@HH@?$CvLuaMethodWrapper@VCvLuaGame@@VCvGame@@@@KAHPAUlua_State@@P8CvGame@@AEXW4PlayerTypes@@1HH@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaGame,CvGame>::BasicLuaMethod<enum PlayerTypes,enum PlayerTypes,int,int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluastaticinstance.h
_TEXT	ENDS
;	COMDAT ?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ
_TEXT	SEGMENT
?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ PROC ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex, COMDAT

; 34   : {

	push	ebp
	mov	ebp, esp

; 35   : 	return 1;

	mov	eax, 1

; 36   : }

	pop	ebp
	ret	0
?GetStartingArgIndex@?$CvLuaStaticInstance@VCvLuaGame@@VCvGame@@@@SA?BHXZ ENDP ; CvLuaStaticInstance<CvLuaGame,CvGame>::GetStartingArgIndex
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum HurryTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4HurryTypes@@@CvLuaArgs@@YA?AW4HurryTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum HurryTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4VictoryTypes@@@CvLuaArgs@@YA?AW4VictoryTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4VictoryTypes@@@CvLuaArgs@@YA?AW4VictoryTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum VictoryTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4VictoryTypes@@@CvLuaArgs@@YA?AW4VictoryTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum VictoryTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum TechTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum TechTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ImprovementTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4ImprovementTypes@@@CvLuaArgs@@YA?AW4ImprovementTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ImprovementTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@PBVCvPlot@@@CvLuaArgs@@YAPBVCvPlot@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@PBVCvPlot@@@CvLuaArgs@@YAPBVCvPlot@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<CvPlot const *>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@PBVCvPlot@@@CvLuaArgs@@YAPBVCvPlot@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<CvPlot const *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z PROC ; CvLuaArgs::pushValue<enum EraTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4EraTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4EraTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum EraTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z PROC ; CvLuaArgs::pushValue<enum TeamTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4TeamTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TeamTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum TeamTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z PROC ; CvLuaArgs::pushValue<enum CivilizationTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4CivilizationTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CivilizationTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum CivilizationTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum PlayerTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4FromUIDiploEventTypes@@@CvLuaArgs@@YA?AW4FromUIDiploEventTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4FromUIDiploEventTypes@@@CvLuaArgs@@YA?AW4FromUIDiploEventTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum FromUIDiploEventTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4FromUIDiploEventTypes@@@CvLuaArgs@@YA?AW4FromUIDiploEventTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum FromUIDiploEventTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z PROC ; CvLuaArgs::pushValue<enum PlayerTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4PlayerTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4PlayerTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum PlayerTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z PROC ; CvLuaArgs::pushValue<enum UnitTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4UnitTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4UnitTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum UnitTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4VictoryTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4VictoryTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4VictoryTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4VictoryTypes@@@Z PROC ; CvLuaArgs::pushValue<enum VictoryTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4VictoryTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4VictoryTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum VictoryTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum TeamTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4TeamTypes@@@CvLuaArgs@@YA?AW4TeamTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum TeamTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4GameStateTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4GameStateTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4GameStateTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4GameStateTypes@@@Z PROC ; CvLuaArgs::pushValue<enum GameStateTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4GameStateTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4GameStateTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum GameStateTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z PROC ; CvLuaArgs::pushValue<enum HandicapTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4HandicapTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4HandicapTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum HandicapTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4CalendarTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CalendarTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4CalendarTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CalendarTypes@@@Z PROC ; CvLuaArgs::pushValue<enum CalendarTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4CalendarTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4CalendarTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum CalendarTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@W4GameSpeedTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4GameSpeedTypes@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@W4GameSpeedTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4GameSpeedTypes@@@Z PROC ; CvLuaArgs::pushValue<enum GameSpeedTypes>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@W4GameSpeedTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4GameSpeedTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum GameSpeedTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4MultiplayerOptionTypes@@@CvLuaArgs@@YA?AW4MultiplayerOptionTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4MultiplayerOptionTypes@@@CvLuaArgs@@YA?AW4MultiplayerOptionTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum MultiplayerOptionTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4MultiplayerOptionTypes@@@CvLuaArgs@@YA?AW4MultiplayerOptionTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum MultiplayerOptionTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4UnitTypes@@@CvLuaArgs@@YA?AW4UnitTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum UnitClassTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4UnitClassTypes@@@CvLuaArgs@@YA?AW4UnitClassTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum UnitClassTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum BuildingClassTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4BuildingClassTypes@@@CvLuaArgs@@YA?AW4BuildingClassTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum BuildingClassTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ProjectTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4ProjectTypes@@@CvLuaArgs@@YA?AW4ProjectTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ProjectTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4SpecialUnitTypes@@@CvLuaArgs@@YA?AW4SpecialUnitTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4SpecialUnitTypes@@@CvLuaArgs@@YA?AW4SpecialUnitTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum SpecialUnitTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4SpecialUnitTypes@@@CvLuaArgs@@YA?AW4SpecialUnitTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum SpecialUnitTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@PBD@CvLuaArgs@@YAPBDPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@PBD@CvLuaArgs@@YAPBDPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<char const *>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@PBD@CvLuaArgs@@YAPBDPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<char const *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z PROC	; CvLuaArgs::pushValue<unsigned int>, COMDAT

; 30   : 	{

	push	ebp
	mov	ebp, esp

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	pop	ebp
	ret	0
??$pushValue@I@CvLuaArgs@@YAXPAUlua_State@@I@Z ENDP	; CvLuaArgs::pushValue<unsigned int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4LeaderHeadTypes@@@CvLuaArgs@@YA?AW4LeaderHeadTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4LeaderHeadTypes@@@CvLuaArgs@@YA?AW4LeaderHeadTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum LeaderHeadTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4LeaderHeadTypes@@@CvLuaArgs@@YA?AW4LeaderHeadTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum LeaderHeadTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4CivilizationTypes@@@CvLuaArgs@@YA?AW4CivilizationTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4CivilizationTypes@@@CvLuaArgs@@YA?AW4CivilizationTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum CivilizationTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4CivilizationTypes@@@CvLuaArgs@@YA?AW4CivilizationTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum CivilizationTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum YieldTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4YieldTypes@@@CvLuaArgs@@YA?AW4YieldTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum YieldTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum BuildingTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4BuildingTypes@@@CvLuaArgs@@YA?AW4BuildingTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum BuildingTypes>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$toValue@W4ControlTypes@@@CvLuaArgs@@YA?AW4ControlTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
??$toValue@W4ControlTypes@@@CvLuaArgs@@YA?AW4ControlTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum ControlTypes>, COMDAT

; 11   : 	{

	push	ebp
	mov	ebp, esp

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	pop	ebp
	ret	0
??$toValue@W4ControlTypes@@@CvLuaArgs@@YA?AW4ControlTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum ControlTypes>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
_TEXT	ENDS
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
EXTRN	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z:PROC	; CvPlayer::getCity
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T229320 = -4						; size = 4
?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ PROC		; CvPlot::getPlotCity, COMDAT
; _this$ = ecx

; 532  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 533  : 		if((m_plotCity.eOwner >= 0) && m_plotCity.eOwner < MAX_PLAYERS)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+104], 0
	jl	SHORT $LN1@getPlotCit
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+104], 64			; 00000040H
	jge	SHORT $LN1@getPlotCit

; 534  : 			return (GET_PLAYER((PlayerTypes)m_plotCity.eOwner).getCity(m_plotCity.iID));

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T229320[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	ecx, DWORD PTR $T229320[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	jmp	SHORT $LN2@getPlotCit
$LN1@getPlotCit:

; 535  : 
; 536  : 		return NULL;

	xor	eax, eax
$LN2@getPlotCit:

; 537  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ ENDP		; CvPlot::getPlotCity
_TEXT	ENDS
END
