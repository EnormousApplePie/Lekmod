; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvReligionClasses.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?NO_QUEST_DATA@CvMinorCivQuest@@2HB		; CvMinorCivQuest::NO_QUEST_DATA
PUBLIC	?NO_TURN@CvMinorCivQuest@@2HB			; CvMinorCivQuest::NO_TURN
;	COMDAT ?NO_TURN@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_TURN@CvMinorCivQuest@@2HB DD 0ffffffffH		; CvMinorCivQuest::NO_TURN
CONST	ENDS
;	COMDAT ?NO_QUEST_DATA@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_QUEST_DATA@CvMinorCivQuest@@2HB DD 0ffffffffH	; CvMinorCivQuest::NO_QUEST_DATA
CONST	ENDS
PUBLIC	??1CvBaseInfo@@QAE@XZ				; CvBaseInfo::~CvBaseInfo
PUBLIC	??_7CvReligionEntry@@6B@			; CvReligionEntry::`vftable'
PUBLIC	??0CvReligionEntry@@QAE@XZ			; CvReligionEntry::CvReligionEntry
PUBLIC	?CacheResults@CvReligionEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ; CvReligionEntry::CacheResults
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	??0CvBaseInfo@@QAE@XZ:PROC			; CvBaseInfo::CvBaseInfo
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??8CvBaseInfo@@UBE_NABV0@@Z:PROC		; CvBaseInfo::operator==
EXTRN	?readFrom@CvBaseInfo@@UAEXAAVFDataStream@@@Z:PROC ; CvBaseInfo::readFrom
EXTRN	?writeTo@CvBaseInfo@@UBEXAAVFDataStream@@@Z:PROC ; CvBaseInfo::writeTo
;	COMDAT ??_7CvReligionEntry@@6B@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_7CvReligionEntry@@6B@ DD FLAT:?CacheResults@CvReligionEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ; CvReligionEntry::`vftable'
	DD	FLAT:??8CvBaseInfo@@UBE_NABV0@@Z
	DD	FLAT:?readFrom@CvBaseInfo@@UAEXAAVFDataStream@@@Z
	DD	FLAT:?writeTo@CvBaseInfo@@UBEXAAVFDataStream@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CvReligionEntry@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvReligionEntry@@QAE@XZ$0
__ehfuncinfo$??0CvReligionEntry@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CvReligionEntry@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ??0CvReligionEntry@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T230849 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CvReligionEntry@@QAE@XZ PROC				; CvReligionEntry::CvReligionEntry, COMDAT
; _this$ = ecx

; 27   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CvReligionEntry@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CvBaseInfo@@QAE@XZ			; CvBaseInfo::CvBaseInfo
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvReligionEntry@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 260				; 00000104H
	mov	DWORD PTR $T230849[ebp], ecx
	mov	ecx, DWORD PTR $T230849[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 28   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvReligionEntry@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CvBaseInfo@@QAE@XZ
__ehhandler$??0CvReligionEntry@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CvReligionEntry@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvReligionEntry@@QAE@XZ ENDP				; CvReligionEntry::CvReligionEntry
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CvBaseInfo@@QAE@XZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??1CvBaseInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CvBaseInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$7
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1CvBaseInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -52						; size = 4
$T230916 = -48						; size = 4
$T230911 = -44						; size = 4
$T230906 = -40						; size = 4
$T230901 = -36						; size = 4
$T230896 = -32						; size = 4
$T230891 = -28						; size = 4
$T230886 = -24						; size = 4
$T230881 = -20						; size = 4
$T230876 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CvBaseInfo@@QAE@XZ PROC				; CvBaseInfo::~CvBaseInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CvBaseInfo@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 232				; 000000e8H
	mov	DWORD PTR $T230876[ebp], eax
	mov	ecx, DWORD PTR $T230876[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	mov	DWORD PTR $T230881[ebp], ecx
	mov	ecx, DWORD PTR $T230881[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 176				; 000000b0H
	mov	DWORD PTR $T230886[ebp], edx
	mov	ecx, DWORD PTR $T230886[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 148				; 00000094H
	mov	DWORD PTR $T230891[ebp], eax
	mov	ecx, DWORD PTR $T230891[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	mov	DWORD PTR $T230896[ebp], ecx
	mov	ecx, DWORD PTR $T230896[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 92					; 0000005cH
	mov	DWORD PTR $T230901[ebp], edx
	mov	ecx, DWORD PTR $T230901[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	mov	DWORD PTR $T230906[ebp], eax
	mov	ecx, DWORD PTR $T230906[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	mov	DWORD PTR $T230911[ebp], ecx
	mov	ecx, DWORD PTR $T230911[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	mov	DWORD PTR $T230916[ebp], edx
	mov	ecx, DWORD PTR $T230916[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$??1CvBaseInfo@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CvBaseInfo@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvBaseInfo@@QAE@XZ ENDP				; CvBaseInfo::~CvBaseInfo
PUBLIC	??1CvReligionEntry@@QAE@XZ			; CvReligionEntry::~CvReligionEntry
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$??1CvReligionEntry@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvReligionEntry@@QAE@XZ$0
__ehfuncinfo$??1CvReligionEntry@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CvReligionEntry@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ??1CvReligionEntry@@QAE@XZ
_TEXT	SEGMENT
_this$ = -56						; size = 4
$T230931 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CvReligionEntry@@QAE@XZ PROC				; CvReligionEntry::~CvReligionEntry, COMDAT
; _this$ = ecx

; 32   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CvReligionEntry@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvReligionEntry@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 33   : }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 260				; 00000104H
	mov	DWORD PTR $T230931[ebp], ecx
	mov	ecx, DWORD PTR $T230931[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CvBaseInfo@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvReligionEntry@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CvBaseInfo@@QAE@XZ
__ehhandler$??1CvReligionEntry@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CvReligionEntry@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvReligionEntry@@QAE@XZ ENDP				; CvReligionEntry::~CvReligionEntry
PUBLIC	??_C@_0L@GKFBIGGH@IconString?$AA@		; `string'
EXTRN	__imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ:PROC
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z:PROC
EXTRN	__imp_?GetText@Results@Database@@QAEPBDPBD@Z:PROC
EXTRN	?CacheResults@CvBaseInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z:PROC ; CvBaseInfo::CacheResults
;	COMDAT ??_C@_0L@GKFBIGGH@IconString?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0L@GKFBIGGH@IconString?$AA@ DB 'IconString', 00H	; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
CONST	ENDS
;	COMDAT ?CacheResults@CvReligionEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T231001 = -8						; size = 4
$T231000 = -4						; size = 4
_kResults$ = 8						; size = 4
_kUtility$ = 12						; size = 4
?CacheResults@CvReligionEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z PROC ; CvReligionEntry::CacheResults, COMDAT
; _this$ = ecx

; 37   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 38   : 	if(!CvBaseInfo::CacheResults(kResults, kUtility))

	mov	eax, DWORD PTR _kUtility$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kResults$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CacheResults@CvBaseInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ; CvBaseInfo::CacheResults
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@CacheResul

; 39   : 		return false;

	xor	al, al
	jmp	SHORT $LN2@CacheResul
$LN1@CacheResul:

; 40   : 
; 41   : 	//Basic Properties
; 42   : 	m_strIconString = kResults.GetText("IconString");

	push	OFFSET ??_C@_0L@GKFBIGGH@IconString?$AA@
	mov	ecx, DWORD PTR _kResults$[ebp]
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDPBD@Z
	mov	DWORD PTR $T231001[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 260				; 00000104H
	mov	DWORD PTR $T231000[ebp], eax
	cmp	DWORD PTR $T231001[ebp], 0
	je	SHORT $LN5@CacheResul
	mov	ecx, DWORD PTR $T231001[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T231000[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN6@CacheResul
$LN5@CacheResul:
	mov	ecx, DWORD PTR $T231000[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN6@CacheResul:

; 43   : 	 
; 44   : 	return true;

	mov	al, 1
$LN2@CacheResul:

; 45   : }

	mov	esp, ebp
	pop	ebp
	ret	8
?CacheResults@CvReligionEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ENDP ; CvReligionEntry::CacheResults
_TEXT	ENDS
PUBLIC	?GetIconString@CvReligionEntry@@QBE?AVCvString@@XZ ; CvReligionEntry::GetIconString
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp
;	COMDAT ?GetIconString@CvReligionEntry@@QBE?AVCvString@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T231005 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetIconString@CvReligionEntry@@QBE?AVCvString@@XZ PROC	; CvReligionEntry::GetIconString, COMDAT
; _this$ = ecx

; 49   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T231005[ebp], 0

; 50   : 	return m_strIconString;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 260				; 00000104H
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T231005[ebp]
	or	ecx, 1
	mov	DWORD PTR $T231005[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 51   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetIconString@CvReligionEntry@@QBE?AVCvString@@XZ ENDP	; CvReligionEntry::GetIconString
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ ; std::_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >::~_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >
PUBLIC	?_Buy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE_NI@Z ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Buy
PUBLIC	??0CvReligionXMLEntries@@QAE@XZ			; CvReligionXMLEntries::CvReligionXMLEntries
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__unwindtable$??0CvReligionXMLEntries@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvReligionXMLEntries@@QAE@XZ$1
__ehfuncinfo$??0CvReligionXMLEntries@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CvReligionXMLEntries@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ??0CvReligionXMLEntries@@QAE@XZ
_TEXT	SEGMENT
tv92 = -132						; size = 4
tv149 = -128						; size = 4
_this$ = -124						; size = 4
$T231044 = -30						; size = 1
$T231031 = -29						; size = 1
$T231027 = -28						; size = 4
$T231020 = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0CvReligionXMLEntries@@QAE@XZ PROC			; CvReligionXMLEntries::CvReligionXMLEntries, COMDAT
; _this$ = ecx

; 58   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CvReligionXMLEntries@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T231044[ebp]
	mov	DWORD PTR $T231020[ebp], eax
	lea	ecx, DWORD PTR $T231031[ebp]
	mov	DWORD PTR $T231027[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv149[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv92[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE_NI@Z ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Buy
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 59   : 
; 60   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvReligionXMLEntries@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ
__ehhandler$??0CvReligionXMLEntries@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CvReligionXMLEntries@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvReligionXMLEntries@@QAE@XZ ENDP			; CvReligionXMLEntries::CvReligionXMLEntries
PUBLIC	??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::~vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >
PUBLIC	?_Tidy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAEXXZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Tidy
PUBLIC	?DeleteArray@CvReligionXMLEntries@@QAEXXZ	; CvReligionXMLEntries::DeleteArray
PUBLIC	??1CvReligionXMLEntries@@QAE@XZ			; CvReligionXMLEntries::~CvReligionXMLEntries
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1CvReligionXMLEntries@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvReligionXMLEntries@@QAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvReligionXMLEntries@@QAE@XZ$1
__ehfuncinfo$??1CvReligionXMLEntries@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CvReligionXMLEntries@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ??1CvReligionXMLEntries@@QAE@XZ
_TEXT	SEGMENT
_this$ = -44						; size = 4
__$EHRec$ = -12						; size = 12
??1CvReligionXMLEntries@@QAE@XZ PROC			; CvReligionXMLEntries::~CvReligionXMLEntries, COMDAT
; _this$ = ecx

; 64   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CvReligionXMLEntries@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 65   : 	DeleteArray();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeleteArray@CvReligionXMLEntries@@QAEXXZ ; CvReligionXMLEntries::DeleteArray

; 66   : }

	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAEXXZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvReligionXMLEntries@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::~vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >
__unwindfunclet$??1CvReligionXMLEntries@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ
__ehhandler$??1CvReligionXMLEntries@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CvReligionXMLEntries@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvReligionXMLEntries@@QAE@XZ ENDP			; CvReligionXMLEntries::~CvReligionXMLEntries
PUBLIC	?GetReligionEntries@CvReligionXMLEntries@@QAEAAV?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@XZ ; CvReligionXMLEntries::GetReligionEntries
; Function compile flags: /Odtp
;	COMDAT ?GetReligionEntries@CvReligionXMLEntries@@QAEAAV?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetReligionEntries@CvReligionXMLEntries@@QAEAAV?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@XZ PROC ; CvReligionXMLEntries::GetReligionEntries, COMDAT
; _this$ = ecx

; 70   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 71   : 	return m_paReligionEntries;

	mov	eax, DWORD PTR _this$[ebp]

; 72   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetReligionEntries@CvReligionXMLEntries@@QAEAAV?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@XZ ENDP ; CvReligionXMLEntries::GetReligionEntries
_TEXT	ENDS
PUBLIC	?GetNumReligions@CvReligionXMLEntries@@QAEHXZ	; CvReligionXMLEntries::GetNumReligions
; Function compile flags: /Odtp
;	COMDAT ?GetNumReligions@CvReligionXMLEntries@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumReligions@CvReligionXMLEntries@@QAEHXZ PROC	; CvReligionXMLEntries::GetNumReligions, COMDAT
; _this$ = ecx

; 76   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 77   : 	return m_paReligionEntries.size();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 78   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumReligions@CvReligionXMLEntries@@QAEHXZ ENDP	; CvReligionXMLEntries::GetNumReligions
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@0@Z ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::erase
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp
;	COMDAT ?DeleteArray@CvReligionXMLEntries@@QAEXXZ
_TEXT	SEGMENT
tv143 = -116						; size = 4
_this$ = -112						; size = 4
$T231287 = -56						; size = 4
$T231271 = -52						; size = 4
$T231392 = -48						; size = 4
$T231391 = -44						; size = 4
$T231390 = -40						; size = 4
$T231389 = -36						; size = 4
$T231388 = -32						; size = 4
$T231255 = -28						; size = 4
$T231249 = -24						; size = 4
$T231248 = -20						; size = 4
$T231214 = -16						; size = 4
$T231190 = -12						; size = 4
$T231180 = -8						; size = 4
_it$223776 = -4						; size = 4
?DeleteArray@CvReligionXMLEntries@@QAEXXZ PROC		; CvReligionXMLEntries::DeleteArray, COMDAT
; _this$ = ecx

; 82   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 116				; 00000074H
	mov	DWORD PTR _this$[ebp], ecx

; 83   : 	for(std::vector<CvReligionEntry*>::iterator it = m_paReligionEntries.begin(); it != m_paReligionEntries.end(); ++it)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T231190[ebp], ecx
	mov	edx, DWORD PTR $T231190[ebp]
	mov	DWORD PTR _it$223776[ebp], edx
	jmp	SHORT $LN3@DeleteArra
$LN2@DeleteArra:
	mov	eax, DWORD PTR _it$223776[ebp]
	add	eax, 4
	mov	DWORD PTR _it$223776[ebp], eax
$LN3@DeleteArra:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T231214[ebp], edx
	mov	eax, DWORD PTR $T231214[ebp]
	mov	DWORD PTR $T231180[ebp], eax
	mov	ecx, DWORD PTR _it$223776[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR $T231180[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@DeleteArra

; 84   : 	{
; 85   : 		SAFE_DELETE(*it);

	mov	edx, DWORD PTR _it$223776[ebp]
	mov	DWORD PTR $T231255[ebp], edx
	mov	eax, DWORD PTR $T231255[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T231249[ebp], ecx
	mov	edx, DWORD PTR $T231249[ebp]
	mov	DWORD PTR $T231248[ebp], edx
	cmp	DWORD PTR $T231248[ebp], 0
	je	SHORT $LN32@DeleteArra
	mov	ecx, DWORD PTR $T231248[ebp]
	call	??1CvReligionEntry@@QAE@XZ		; CvReligionEntry::~CvReligionEntry
	mov	eax, 1
	and	eax, 1
	je	SHORT $LN35@DeleteArra
	mov	ecx, DWORD PTR $T231248[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN35@DeleteArra:
	mov	edx, DWORD PTR $T231248[ebp]
	mov	DWORD PTR tv143[ebp], edx
	jmp	SHORT $LN33@DeleteArra
$LN32@DeleteArra:
	mov	DWORD PTR tv143[ebp], 0
$LN33@DeleteArra:
	mov	eax, DWORD PTR $T231255[ebp]
	mov	DWORD PTR [eax], 0

; 86   : 	}

	jmp	$LN2@DeleteArra
$LN1@DeleteArra:

; 87   : 
; 88   : 	m_paReligionEntries.clear();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T231271[ebp], edx
	mov	eax, DWORD PTR $T231271[ebp]
	mov	DWORD PTR $T231389[ebp], eax
	mov	ecx, DWORD PTR $T231389[ebp]
	mov	DWORD PTR $T231388[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T231287[ebp], eax
	mov	ecx, DWORD PTR $T231287[ebp]
	mov	DWORD PTR $T231391[ebp], ecx
	mov	edx, DWORD PTR $T231391[ebp]
	mov	DWORD PTR $T231390[ebp], edx
	mov	eax, DWORD PTR $T231388[ebp]
	push	eax
	mov	ecx, DWORD PTR $T231390[ebp]
	push	ecx
	lea	edx, DWORD PTR $T231392[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@0@Z ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::erase

; 89   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteArray@CvReligionXMLEntries@@QAEXXZ ENDP		; CvReligionXMLEntries::DeleteArray
_TEXT	ENDS
PUBLIC	?GetEntry@CvReligionXMLEntries@@QAEPAVCvReligionEntry@@H@Z ; CvReligionXMLEntries::GetEntry
; Function compile flags: /Odtp
;	COMDAT ?GetEntry@CvReligionXMLEntries@@QAEPAVCvReligionEntry@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?GetEntry@CvReligionXMLEntries@@QAEPAVCvReligionEntry@@H@Z PROC ; CvReligionXMLEntries::GetEntry, COMDAT
; _this$ = ecx

; 93   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 94   : 	return m_paReligionEntries[index];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]

; 95   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetEntry@CvReligionXMLEntries@@QAEPAVCvReligionEntry@@H@Z ENDP ; CvReligionXMLEntries::GetEntry
_TEXT	ENDS
PUBLIC	??0CvReligion@@QAE@XZ				; CvReligion::CvReligion
EXTRN	??0CvReligionBeliefs@@QAE@XZ:PROC		; CvReligionBeliefs::CvReligionBeliefs
EXTRN	_memset:PROC
; Function compile flags: /Odtp
;	COMDAT ??0CvReligion@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CvReligion@@QAE@XZ PROC				; CvReligion::CvReligion, COMDAT
; _this$ = ecx

; 109  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+21], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??0CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::CvReligionBeliefs

; 110  : 	ZeroMemory(m_szCustomName, sizeof(m_szCustomName));

	push	128					; 00000080H
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 22					; 00000016H
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 111  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CvReligion@@QAE@XZ ENDP				; CvReligion::CvReligion
_TEXT	ENDS
PUBLIC	??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z ; CvReligion::CvReligion
EXTRN	??1CvReligionBeliefs@@QAE@XZ:PROC		; CvReligionBeliefs::~CvReligionBeliefs
EXTRN	?getGameTurn@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurn
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__unwindtable$??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z$0
__ehfuncinfo$??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T231438 = -24						; size = 4
$T231434 = -20						; size = 4
$T231425 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_eReligion$ = 8						; size = 4
_eFounder$ = 12						; size = 4
_pHolyCity$ = 16					; size = 4
_bPantheon$ = 20					; size = 1
??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z PROC ; CvReligion::CvReligion, COMDAT
; _this$ = ecx

; 119  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _eReligion$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _eFounder$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _bPantheon$[ebp]
	mov	BYTE PTR [ecx+20], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+21], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??0CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::CvReligionBeliefs
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 120  : 	if(pHolyCity)

	cmp	DWORD PTR _pHolyCity$[ebp], 0
	je	SHORT $LN1@CvReligion

; 121  : 	{
; 122  : 		m_iHolyCityX = pHolyCity->getX();

	mov	ecx, DWORD PTR _pHolyCity$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T231425[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T231425[ebp]
	mov	DWORD PTR [eax+8], ecx

; 123  : 		m_iHolyCityY = pHolyCity->getY();

	mov	edx, DWORD PTR _pHolyCity$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T231434[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T231434[ebp]
	mov	DWORD PTR [ecx+12], edx
$LN1@CvReligion:

; 124  : 	}
; 125  : 	m_iTurnFounded = GC.getGame().getGameTurn();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T231438[ebp], eax
	mov	ecx, DWORD PTR $T231438[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 126  : 	ZeroMemory(m_szCustomName, sizeof(m_szCustomName));

	push	128					; 00000080H
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 22					; 00000016H
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 127  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	jmp	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
__ehhandler$??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z ENDP ; CvReligion::CvReligion
PUBLIC	??$?5D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@D@Z	; operator>><char,128>
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAVCvReligion@@@Z	; operator>>
EXTRN	?Read@CvReligionBeliefs@@QAEXAAVFDataStream@@@Z:PROC ; CvReligionBeliefs::Read
EXTRN	?Read@FDataStream@@IAEXAA_N@Z:PROC		; FDataStream::Read
EXTRN	?Read@FDataStream@@IAEXAAH@Z:PROC		; FDataStream::Read
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4PlayerTypes@@@Z:PROC ; operator>>
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4ReligionTypes@@@Z:PROC ; operator>>
EXTRN	?Read@FDataStream@@IAEXAAI@Z:PROC		; FDataStream::Read
; Function compile flags: /Odtp
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAVCvReligion@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??5@YAAAVFDataStream@@AAV0@AAVCvReligion@@@Z PROC	; operator>>, COMDAT

; 131  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 132  : 	uint uiVersion;
; 133  : 	loadFrom >> uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 134  : 
; 135  : 	loadFrom >> writeTo.m_eReligion;

	mov	ecx, DWORD PTR _writeTo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _loadFrom$[ebp]
	push	edx
	call	??5@YAAAVFDataStream@@AAV0@AAW4ReligionTypes@@@Z ; operator>>
	add	esp, 8

; 136  : 	loadFrom >> writeTo.m_eFounder;

	mov	eax, DWORD PTR _writeTo$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	push	ecx
	call	??5@YAAAVFDataStream@@AAV0@AAW4PlayerTypes@@@Z ; operator>>
	add	esp, 8

; 137  : 	loadFrom >> writeTo.m_iHolyCityX;

	mov	edx, DWORD PTR _writeTo$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 138  : 	loadFrom >> writeTo.m_iHolyCityY;

	mov	eax, DWORD PTR _writeTo$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 139  : 	loadFrom >> writeTo.m_iTurnFounded;

	mov	ecx, DWORD PTR _writeTo$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 140  : 
; 141  : 	if(uiVersion >= 2)

	cmp	DWORD PTR _uiVersion$[ebp], 2
	jb	SHORT $LN5@operator

; 142  : 	{
; 143  : 		loadFrom >> writeTo.m_bPantheon;

	mov	edx, DWORD PTR _writeTo$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 144  : 	}
; 145  : 	else

	jmp	SHORT $LN4@operator
$LN5@operator:

; 146  : 	{
; 147  : 		writeTo.m_bPantheon = false;

	mov	eax, DWORD PTR _writeTo$[ebp]
	mov	BYTE PTR [eax+20], 0
$LN4@operator:

; 148  : 	}
; 149  : 
; 150  : 	if(uiVersion >= 4)

	cmp	DWORD PTR _uiVersion$[ebp], 4
	jb	SHORT $LN3@operator

; 151  : 	{
; 152  : 		loadFrom >> writeTo.m_bEnhanced;

	mov	ecx, DWORD PTR _writeTo$[ebp]
	add	ecx, 21					; 00000015H
	push	ecx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 153  : 	}
; 154  : 	else

	jmp	SHORT $LN2@operator
$LN3@operator:

; 155  : 	{
; 156  : 		writeTo.m_bEnhanced = false;

	mov	edx, DWORD PTR _writeTo$[ebp]
	mov	BYTE PTR [edx+21], 0
$LN2@operator:

; 157  : 	}
; 158  : 
; 159  : 	ZeroMemory(writeTo.m_szCustomName, sizeof(writeTo.m_szCustomName));

	push	128					; 00000080H
	push	0
	mov	eax, DWORD PTR _writeTo$[ebp]
	add	eax, 22					; 00000016H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 160  : 	if(uiVersion >= 3)

	cmp	DWORD PTR _uiVersion$[ebp], 3
	jb	SHORT $LN1@operator

; 161  : 	{
; 162  : 		loadFrom >> writeTo.m_szCustomName;

	mov	ecx, DWORD PTR _writeTo$[ebp]
	add	ecx, 22					; 00000016H
	push	ecx
	mov	edx, DWORD PTR _loadFrom$[ebp]
	push	edx
	call	??$?5D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@D@Z ; operator>><char,128>
	add	esp, 8
$LN1@operator:

; 163  : 	}
; 164  : 
; 165  : 	writeTo.m_Beliefs.Read(loadFrom);

	mov	eax, DWORD PTR _loadFrom$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writeTo$[ebp]
	add	ecx, 152				; 00000098H
	call	?Read@CvReligionBeliefs@@QAEXAAVFDataStream@@@Z ; CvReligionBeliefs::Read

; 166  : 
; 167  : 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[ebp]

; 168  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??5@YAAAVFDataStream@@AAV0@AAVCvReligion@@@Z ENDP	; operator>>
_TEXT	ENDS
PUBLIC	??$?6D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@$$CBD@Z ; operator<<<char,128>
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABVCvReligion@@@Z	; operator<<
EXTRN	?Write@CvReligionBeliefs@@QBEXAAVFDataStream@@@Z:PROC ; CvReligionBeliefs::Write
EXTRN	?Write@FDataStream@@IAEXAB_N@Z:PROC		; FDataStream::Write
EXTRN	?Write@FDataStream@@IAEXABH@Z:PROC		; FDataStream::Write
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4PlayerTypes@@@Z:PROC ; operator<<
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4ReligionTypes@@@Z:PROC ; operator<<
EXTRN	?Write@FDataStream@@IAEXABI@Z:PROC		; FDataStream::Write
; Function compile flags: /Odtp
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABVCvReligion@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??6@YAAAVFDataStream@@AAV0@ABVCvReligion@@@Z PROC	; operator<<, COMDAT

; 172  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 173  : 	uint uiVersion = 4;

	mov	DWORD PTR _uiVersion$[ebp], 4

; 174  : 	saveTo << uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 175  : 
; 176  : 	saveTo << readFrom.m_eReligion;

	mov	ecx, DWORD PTR _readFrom$[ebp]
	push	ecx
	mov	edx, DWORD PTR _saveTo$[ebp]
	push	edx
	call	??6@YAAAVFDataStream@@AAV0@ABW4ReligionTypes@@@Z ; operator<<
	add	esp, 8

; 177  : 	saveTo << readFrom.m_eFounder;

	mov	eax, DWORD PTR _readFrom$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	push	ecx
	call	??6@YAAAVFDataStream@@AAV0@ABW4PlayerTypes@@@Z ; operator<<
	add	esp, 8

; 178  : 	saveTo << readFrom.m_iHolyCityX;

	mov	edx, DWORD PTR _readFrom$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 179  : 	saveTo << readFrom.m_iHolyCityY;

	mov	eax, DWORD PTR _readFrom$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 180  : 	saveTo << readFrom.m_iTurnFounded;

	mov	ecx, DWORD PTR _readFrom$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 181  : 	saveTo << readFrom.m_bPantheon;

	mov	edx, DWORD PTR _readFrom$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 182  : 	saveTo << readFrom.m_bEnhanced;

	mov	eax, DWORD PTR _readFrom$[ebp]
	add	eax, 21					; 00000015H
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 183  : 	saveTo << readFrom.m_szCustomName;

	mov	ecx, DWORD PTR _readFrom$[ebp]
	add	ecx, 22					; 00000016H
	push	ecx
	mov	edx, DWORD PTR _saveTo$[ebp]
	push	edx
	call	??$?6D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@$$CBD@Z ; operator<<<char,128>
	add	esp, 8

; 184  : 
; 185  : 	readFrom.m_Beliefs.Write(saveTo);

	mov	eax, DWORD PTR _saveTo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _readFrom$[ebp]
	add	ecx, 152				; 00000098H
	call	?Write@CvReligionBeliefs@@QBEXAAVFDataStream@@@Z ; CvReligionBeliefs::Write

; 186  : 
; 187  : 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[ebp]

; 188  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??6@YAAAVFDataStream@@AAV0@ABVCvReligion@@@Z ENDP	; operator<<
_TEXT	ENDS
PUBLIC	??_C@_0M@KDICFKJM@No?5Religion?$AA@		; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?GetName@CvReligion@@QBE?AVCvString@@XZ		; CvReligion::GetName
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
EXTRN	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z:PROC ; CvGlobals::getReligionInfo
;	COMDAT ??_C@_0M@KDICFKJM@No?5Religion?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0M@KDICFKJM@No?5Religion?$AA@ DB 'No Religion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetName@CvReligion@@QBE?AVCvString@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetName@CvReligion@@QBE?AVCvString@@XZ$0
__ehfuncinfo$?GetName@CvReligion@@QBE?AVCvString@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetName@CvReligion@@QBE?AVCvString@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetName@CvReligion@@QBE?AVCvString@@XZ
_TEXT	SEGMENT
tv180 = -88						; size = 4
tv147 = -84						; size = 4
tv75 = -80						; size = 4
tv195 = -73						; size = 1
tv192 = -72						; size = 4
tv189 = -68						; size = 4
_this$ = -64						; size = 4
$T231505 = -60						; size = 4
$T231492 = -56						; size = 4
_szReligionName$223861 = -52				; size = 28
__$ArrayPad$ = -24					; size = 4
_szReligionNameBackup$ = -20				; size = 4
_pEntry$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetName@CvReligion@@QBE?AVCvString@@XZ PROC		; CvReligion::GetName, COMDAT
; _this$ = ecx

; 191  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetName@CvReligion@@QBE?AVCvString@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T231492[ebp], 0

; 192  : #ifdef AUI_WARNING_FIXES
; 193  : 	CvString szReligionName = m_szCustomName;
; 194  : 	if (szReligionName.IsEmpty())
; 195  : 	{
; 196  : 		CvReligionEntry* pEntry = GC.getReligionInfo(m_eReligion);
; 197  : 		CvAssertMsg(pEntry, "pEntry for religion not expected to be NULL. Please send Anton or Ed your save file and version.");
; 198  : 		if (pEntry)
; 199  : 			szReligionName = pEntry->GetDescriptionKey();
; 200  : 		else
; 201  : 			szReligionName = "No Religion";
; 202  : 	}
; 203  : 	
; 204  : 	return szReligionName;
; 205  : #else
; 206  : 	CvReligionEntry* pEntry = GC.getReligionInfo(m_eReligion);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo
	mov	DWORD PTR _pEntry$[ebp], eax

; 207  : 	CvAssertMsg(pEntry, "pEntry for religion not expected to be NULL. Please send Anton or Ed your save file and version.");
; 208  : 	if (pEntry)

	cmp	DWORD PTR _pEntry$[ebp], 0
	je	$LN1@GetName

; 209  : 	{
; 210  : 		CvString szReligionName = (m_szCustomName == NULL || strlen(m_szCustomName) == 0) ? pEntry->GetDescriptionKey() : m_szCustomName;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 22					; 00000016H
	je	SHORT $LN9@GetName
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 22					; 00000016H
	mov	DWORD PTR tv189[ebp], eax
	mov	ecx, DWORD PTR tv189[ebp]
	add	ecx, 1
	mov	DWORD PTR tv192[ebp], ecx
$LL27@GetName:
	mov	edx, DWORD PTR tv189[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv195[ebp], al
	add	DWORD PTR tv189[ebp], 1
	cmp	BYTE PTR tv195[ebp], 0
	jne	SHORT $LL27@GetName
	mov	ecx, DWORD PTR tv189[ebp]
	sub	ecx, DWORD PTR tv192[ebp]
	mov	DWORD PTR tv75[ebp], ecx
	je	SHORT $LN9@GetName
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 22					; 00000016H
	mov	DWORD PTR $T231505[ebp], edx
	jmp	SHORT $LN5@GetName
$LN9@GetName:
	mov	ecx, DWORD PTR _pEntry$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T231505[ebp], eax
$LN5@GetName:
	cmp	DWORD PTR $T231505[ebp], 0
	je	SHORT $LN13@GetName
	mov	eax, DWORD PTR $T231505[ebp]
	mov	DWORD PTR tv147[ebp], eax
	jmp	SHORT $LN14@GetName
$LN13@GetName:
	mov	DWORD PTR tv147[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN14@GetName:
	mov	ecx, DWORD PTR tv147[ebp]
	push	ecx
	lea	ecx, DWORD PTR _szReligionName$223861[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 211  : 		return szReligionName;

	lea	edx, DWORD PTR _szReligionName$223861[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T231492[ebp]
	or	eax, 1
	mov	DWORD PTR $T231492[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _szReligionName$223861[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN2@GetName
$LN1@GetName:

; 212  : 	}
; 213  : 
; 214  : 	const char* szReligionNameBackup = "No Religion";

	mov	DWORD PTR _szReligionNameBackup$[ebp], OFFSET ??_C@_0M@KDICFKJM@No?5Religion?$AA@

; 215  : 	return szReligionNameBackup;

	cmp	DWORD PTR _szReligionNameBackup$[ebp], 0
	je	SHORT $LN24@GetName
	mov	ecx, DWORD PTR _szReligionNameBackup$[ebp]
	mov	DWORD PTR tv180[ebp], ecx
	jmp	SHORT $LN25@GetName
$LN24@GetName:
	mov	DWORD PTR tv180[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN25@GetName:
	mov	edx, DWORD PTR tv180[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR $T231492[ebp]
	or	eax, 1
	mov	DWORD PTR $T231492[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@GetName:

; 216  : #endif
; 217  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetName@CvReligion@@QBE?AVCvString@@XZ$0:
	lea	ecx, DWORD PTR _szReligionName$223861[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?GetName@CvReligion@@QBE?AVCvString@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetName@CvReligion@@QBE?AVCvString@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetName@CvReligion@@QBE?AVCvString@@XZ ENDP		; CvReligion::GetName
PUBLIC	??0CvReligionInCity@@QAE@XZ			; CvReligionInCity::CvReligionInCity
; Function compile flags: /Odtp
;	COMDAT ??0CvReligionInCity@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CvReligionInCity@@QAE@XZ PROC			; CvReligionInCity::CvReligionInCity, COMDAT
; _this$ = ecx

; 224  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 225  : 	m_eReligion = NO_RELIGION;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1

; 226  : 	m_bFoundedHere = false;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], 0

; 227  : 	m_iFollowers = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 228  : 	m_iPressure = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 229  : 	m_iNumTradeRoutesApplyingPressure = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0

; 230  : 	m_iTemp = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0

; 231  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CvReligionInCity@@QAE@XZ ENDP			; CvReligionInCity::CvReligionInCity
_TEXT	ENDS
PUBLIC	??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z ; CvReligionInCity::CvReligionInCity
; Function compile flags: /Odtp
;	COMDAT ??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_bFoundedHere$ = 12					; size = 1
_iFollowers$ = 16					; size = 4
_iPressure$ = 20					; size = 4
??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z PROC	; CvReligionInCity::CvReligionInCity, COMDAT
; _this$ = ecx

; 241  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _eReligion$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR _bFoundedHere$[ebp]
	mov	BYTE PTR [edx+4], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iFollowers$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iPressure$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0

; 242  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z ENDP	; CvReligionInCity::CvReligionInCity
_TEXT	ENDS
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAVCvReligionInCity@@@Z ; operator>>
; Function compile flags: /Odtp
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAVCvReligionInCity@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??5@YAAAVFDataStream@@AAV0@AAVCvReligionInCity@@@Z PROC	; operator>>, COMDAT

; 246  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 247  : 	uint uiVersion;
; 248  : 	loadFrom >> uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 249  : 
; 250  : 	loadFrom >> writeTo.m_eReligion;

	mov	ecx, DWORD PTR _writeTo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _loadFrom$[ebp]
	push	edx
	call	??5@YAAAVFDataStream@@AAV0@AAW4ReligionTypes@@@Z ; operator>>
	add	esp, 8

; 251  : 	loadFrom >> writeTo.m_bFoundedHere;

	mov	eax, DWORD PTR _writeTo$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 252  : 	loadFrom >> writeTo.m_iFollowers;

	mov	ecx, DWORD PTR _writeTo$[ebp]
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 253  : 	loadFrom >> writeTo.m_iPressure;

	mov	edx, DWORD PTR _writeTo$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 254  : 
; 255  : 	if (uiVersion == 2)

	cmp	DWORD PTR _uiVersion$[ebp], 2
	jne	SHORT $LN2@operator@2

; 256  : 	{
; 257  : 		loadFrom >> writeTo.m_iNumTradeRoutesApplyingPressure;

	mov	eax, DWORD PTR _writeTo$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 258  : 	}
; 259  : 	else

	jmp	SHORT $LN1@operator@2
$LN2@operator@2:

; 260  : 	{
; 261  : 		writeTo.m_iNumTradeRoutesApplyingPressure = 0;

	mov	ecx, DWORD PTR _writeTo$[ebp]
	mov	DWORD PTR [ecx+16], 0
$LN1@operator@2:

; 262  : 	}
; 263  : 
; 264  : 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[ebp]

; 265  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??5@YAAAVFDataStream@@AAV0@AAVCvReligionInCity@@@Z ENDP	; operator>>
_TEXT	ENDS
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABVCvReligionInCity@@@Z ; operator<<
; Function compile flags: /Odtp
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABVCvReligionInCity@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??6@YAAAVFDataStream@@AAV0@ABVCvReligionInCity@@@Z PROC	; operator<<, COMDAT

; 269  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 270  : 	uint uiVersion = 2;

	mov	DWORD PTR _uiVersion$[ebp], 2

; 271  : 	saveTo << uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 272  : 
; 273  : 	saveTo << readFrom.m_eReligion;

	mov	ecx, DWORD PTR _readFrom$[ebp]
	push	ecx
	mov	edx, DWORD PTR _saveTo$[ebp]
	push	edx
	call	??6@YAAAVFDataStream@@AAV0@ABW4ReligionTypes@@@Z ; operator<<
	add	esp, 8

; 274  : 	saveTo << readFrom.m_bFoundedHere;

	mov	eax, DWORD PTR _readFrom$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 275  : 	saveTo << readFrom.m_iFollowers;

	mov	ecx, DWORD PTR _readFrom$[ebp]
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 276  : 	saveTo << readFrom.m_iPressure;

	mov	edx, DWORD PTR _readFrom$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 277  : 	saveTo << readFrom.m_iNumTradeRoutesApplyingPressure;

	mov	eax, DWORD PTR _readFrom$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 278  : 
; 279  : 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[ebp]

; 280  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??6@YAAAVFDataStream@@AAV0@ABVCvReligionInCity@@@Z ENDP	; operator<<
_TEXT	ENDS
PUBLIC	??0?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligion,16,0,297,0>::FStaticVector<CvReligion,16,0,297,0>
PUBLIC	??0CvGameReligions@@QAE@XZ			; CvGameReligions::CvGameReligions
; Function compile flags: /Odtp
;	COMDAT ??0CvGameReligions@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
??0CvGameReligions@@QAE@XZ PROC				; CvGameReligions::CvGameReligions, COMDAT
; _this$ = ecx

; 288  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligion,16,0,297,0>::FStaticVector<CvReligion,16,0,297,0>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+5264], 0

; 289  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CvGameReligions@@QAE@XZ ENDP				; CvGameReligions::CvGameReligions
_TEXT	ENDS
PUBLIC	??1?$BaseVector@VCvReligion@@$0A@@@QAE@XZ	; BaseVector<CvReligion,0>::~BaseVector<CvReligion,0>
PUBLIC	?Free@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXPAVCvReligion@@I@Z ; FStaticVector<CvReligion,16,0,297,0>::Free
PUBLIC	??1CvGameReligions@@QAE@XZ			; CvGameReligions::~CvGameReligions
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$??1CvGameReligions@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvGameReligions@@QAE@XZ$1
__ehfuncinfo$??1CvGameReligions@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CvGameReligions@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ??1CvGameReligions@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
__$EHRec$ = -12						; size = 12
??1CvGameReligions@@QAE@XZ PROC				; CvGameReligions::~CvGameReligions, COMDAT
; _this$ = ecx

; 293  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CvGameReligions@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 294  : 
; 295  : }

	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXPAVCvReligion@@I@Z ; FStaticVector<CvReligion,16,0,297,0>::Free
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvGameReligions@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@VCvReligion@@$0A@@@QAE@XZ ; BaseVector<CvReligion,0>::~BaseVector<CvReligion,0>
__ehhandler$??1CvGameReligions@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CvGameReligions@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvGameReligions@@QAE@XZ ENDP				; CvGameReligions::~CvGameReligions
PUBLIC	?Init@CvGameReligions@@QAEXXZ			; CvGameReligions::Init
EXTRN	?getTrainPercent@CvGameSpeedInfo@@QBEHXZ:PROC	; CvGameSpeedInfo::getTrainPercent
EXTRN	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ:PROC ; CvGame::getGameSpeedInfo
; Function compile flags: /Odtp
;	COMDAT ?Init@CvGameReligions@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T231634 = -8						; size = 4
$T231630 = -4						; size = 4
?Init@CvGameReligions@@QAEXXZ PROC			; CvGameReligions::Init, COMDAT
; _this$ = ecx

; 299  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 300  : 	m_iMinimumFaithForNextPantheon = GC.getRELIGION_MIN_FAITH_FIRST_PANTHEON();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7860
	mov	DWORD PTR $T231630[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T231630[ebp]
	mov	DWORD PTR [ecx+5264], edx

; 301  : 	m_iMinimumFaithForNextPantheon *= GC.getGame().getGameSpeedInfo().getTrainPercent();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T231634[ebp], eax
	mov	ecx, DWORD PTR $T231634[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getTrainPercent@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getTrainPercent
	mov	ecx, DWORD PTR _this$[ebp]
	imul	eax, DWORD PTR [ecx+5264]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+5264], eax

; 302  : 	m_iMinimumFaithForNextPantheon /= 100;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+5264]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+5264], eax

; 303  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CvGameReligions@@QAEXXZ ENDP			; CvGameReligions::Init
_TEXT	ENDS
PUBLIC	?SpreadReligion@CvGameReligions@@QAEXXZ		; CvGameReligions::SpreadReligion
PUBLIC	?DoTurn@CvGameReligions@@QAEXXZ			; CvGameReligions::DoTurn
; Function compile flags: /Odtp
;	COMDAT ?DoTurn@CvGameReligions@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoTurn@CvGameReligions@@QAEXXZ PROC			; CvGameReligions::DoTurn, COMDAT
; _this$ = ecx

; 307  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 308  : 	SpreadReligion();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SpreadReligion@CvGameReligions@@QAEXXZ	; CvGameReligions::SpreadReligion

; 309  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoTurn@CvGameReligions@@QAEXXZ ENDP			; CvGameReligions::DoTurn
_TEXT	ENDS
PUBLIC	?SpreadReligionToOneCity@CvGameReligions@@QAEXPAVCvCity@@@Z ; CvGameReligions::SpreadReligionToOneCity
EXTRN	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::nextCity
EXTRN	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::firstCity
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
; Function compile flags: /Odtp
;	COMDAT ?SpreadReligion@CvGameReligions@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T231650 = -17						; size = 1
_pLoopCity$223913 = -16					; size = 4
_iLoop$223912 = -12					; size = 4
_kPlayer$223909 = -8					; size = 4
_iI$223905 = -4						; size = 4
?SpreadReligion@CvGameReligions@@QAEXXZ PROC		; CvGameReligions::SpreadReligion, COMDAT
; _this$ = ecx

; 313  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 314  : 	// Loop through all the players
; 315  : 	for(int iI = 0; iI < MAX_PLAYERS; iI++)

	mov	DWORD PTR _iI$223905[ebp], 0
	jmp	SHORT $LN7@SpreadReli
$LN6@SpreadReli:
	mov	eax, DWORD PTR _iI$223905[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$223905[ebp], eax
$LN7@SpreadReli:
	cmp	DWORD PTR _iI$223905[ebp], 64		; 00000040H
	jge	SHORT $LN8@SpreadReli

; 316  : 	{
; 317  : 		CvPlayer& kPlayer = GET_PLAYER((PlayerTypes)iI);

	mov	ecx, DWORD PTR _iI$223905[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$223909[ebp], ecx

; 318  : 		if(kPlayer.isAlive())

	mov	edx, DWORD PTR _kPlayer$223909[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T231650[ebp], al
	movzx	ecx, BYTE PTR $T231650[ebp]
	test	ecx, ecx
	je	SHORT $LN4@SpreadReli

; 319  : 		{
; 320  : 			// Loop through each of their cities
; 321  : 			int iLoop;
; 322  : 			CvCity* pLoopCity;
; 323  : 			for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$223912[ebp]
	push	edx
	mov	ecx, DWORD PTR _kPlayer$223909[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$223913[ebp], eax
	jmp	SHORT $LN3@SpreadReli
$LN2@SpreadReli:
	push	0
	lea	eax, DWORD PTR _iLoop$223912[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$223909[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$223913[ebp], eax
$LN3@SpreadReli:
	cmp	DWORD PTR _pLoopCity$223913[ebp], 0
	je	SHORT $LN4@SpreadReli

; 324  : 			{
; 325  : 				SpreadReligionToOneCity(pLoopCity);

	mov	ecx, DWORD PTR _pLoopCity$223913[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SpreadReligionToOneCity@CvGameReligions@@QAEXPAVCvCity@@@Z ; CvGameReligions::SpreadReligionToOneCity
	jmp	SHORT $LN2@SpreadReli
$LN4@SpreadReli:

; 326  : 			}

	jmp	SHORT $LN6@SpreadReli
$LN8@SpreadReli:

; 327  : 		}
; 328  : 	}
; 329  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SpreadReligion@CvGameReligions@@QAEXXZ ENDP		; CvGameReligions::SpreadReligion
_TEXT	ENDS
PUBLIC	?IncrementNumTradeRouteConnections@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::IncrementNumTradeRouteConnections
PUBLIC	?AddReligiousPressure@CvCityReligions@@QAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@HW4PlayerTypes@@@Z ; CvCityReligions::AddReligiousPressure
PUBLIC	?GetAdjacentCityReligiousPressure@CvGameReligions@@QAEHW4ReligionTypes@@PAVCvCity@@1AAH_N@Z ; CvGameReligions::GetAdjacentCityReligiousPressure
PUBLIC	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
PUBLIC	?AddSpyPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::AddSpyPressure
PUBLIC	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionCreatedByPlayer
PUBLIC	?GetSpyPressure@CvPlayerReligions@@QBEHXZ	; CvPlayerReligions::GetSpyPressure
PUBLIC	?AddHolyCityPressure@CvCityReligions@@QAEXXZ	; CvCityReligions::AddHolyCityPressure
PUBLIC	?IsHolyCityAnyReligion@CvCityReligions@@QAE_NXZ	; CvCityReligions::IsHolyCityAnyReligion
PUBLIC	?ResetNumTradeRoutePressure@CvCityReligions@@QAEXXZ ; CvCityReligions::ResetNumTradeRoutePressure
EXTRN	?GetSpyIndexInCity@CvPlayerEspionage@@QAEHPAVCvCity@@@Z:PROC ; CvPlayerEspionage::GetSpyIndexInCity
EXTRN	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ:PROC ; CvPlayer::GetEspionage
EXTRN	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ:PROC ; CvPlayer::GetReligions
EXTRN	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ:PROC ; CvCity::GetCityReligions
; Function compile flags: /Odtp
;	COMDAT ?SpreadReligionToOneCity@CvGameReligions@@QAEXPAVCvCity@@@Z
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T231664 = -37						; size = 1
_iPressure$223942 = -36					; size = 4
_eMajorityReligion$223939 = -32				; size = 4
_iNumTradeRoutes$223941 = -28				; size = 4
_eReligionFounded$223932 = -24				; size = 4
_iSpyPressure$223929 = -20				; size = 4
_pLoopCity$223934 = -16					; size = 4
_iLoop$223933 = -12					; size = 4
_kPlayer$223926 = -8					; size = 4
_iI$223922 = -4						; size = 4
_pCity$ = 8						; size = 4
?SpreadReligionToOneCity@CvGameReligions@@QAEXPAVCvCity@@@Z PROC ; CvGameReligions::SpreadReligionToOneCity, COMDAT
; _this$ = ecx

; 333  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 334  : #ifdef AUI_WARNING_FIXES
; 335  : 	if (!pCity)
; 336  : 		return;
; 337  : #endif
; 338  : 	// Used to calculate how many trade routes are applying pressure to this city. This resets the value so we get a true count every turn.
; 339  : 	pCity->GetCityReligions()->ResetNumTradeRoutePressure();

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?ResetNumTradeRoutePressure@CvCityReligions@@QAEXXZ ; CvCityReligions::ResetNumTradeRoutePressure

; 340  : 
; 341  : 	// Is this a city where a religion was founded?
; 342  : 	if(pCity->GetCityReligions()->IsHolyCityAnyReligion())

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsHolyCityAnyReligion@CvCityReligions@@QAE_NXZ ; CvCityReligions::IsHolyCityAnyReligion
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@SpreadReli@2

; 343  : 	{
; 344  : 		pCity->GetCityReligions()->AddHolyCityPressure();

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?AddHolyCityPressure@CvCityReligions@@QAEXXZ ; CvCityReligions::AddHolyCityPressure
$LN14@SpreadReli@2:

; 345  : 	}
; 346  : 
; 347  : 	// Loop through all the players
; 348  : 	for(int iI = 0; iI < MAX_PLAYERS; iI++)

	mov	DWORD PTR _iI$223922[ebp], 0
	jmp	SHORT $LN13@SpreadReli@2
$LN12@SpreadReli@2:
	mov	ecx, DWORD PTR _iI$223922[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$223922[ebp], ecx
$LN13@SpreadReli@2:
	cmp	DWORD PTR _iI$223922[ebp], 64		; 00000040H
	jge	$LN15@SpreadReli@2

; 349  : 	{
; 350  : 		CvPlayer& kPlayer = GET_PLAYER((PlayerTypes)iI);

	mov	edx, DWORD PTR _iI$223922[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$223926[ebp], edx

; 351  : 		if(kPlayer.isAlive())

	mov	eax, DWORD PTR _kPlayer$223926[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T231664[ebp], cl
	movzx	edx, BYTE PTR $T231664[ebp]
	test	edx, edx
	je	$LN10@SpreadReli@2

; 352  : 		{
; 353  : 			int iSpyPressure = kPlayer.GetReligions()->GetSpyPressure();

	mov	ecx, DWORD PTR _kPlayer$223926[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetSpyPressure@CvPlayerReligions@@QBEHXZ ; CvPlayerReligions::GetSpyPressure
	mov	DWORD PTR _iSpyPressure$223929[ebp], eax

; 354  : 			if (iSpyPressure > 0)

	cmp	DWORD PTR _iSpyPressure$223929[ebp], 0
	jle	SHORT $LN9@SpreadReli@2

; 355  : 			{
; 356  : 				if (kPlayer.GetEspionage()->GetSpyIndexInCity(pCity) != -1)

	mov	eax, DWORD PTR _pCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$223926[ebp]
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	ecx, eax
	call	?GetSpyIndexInCity@CvPlayerEspionage@@QAEHPAVCvCity@@@Z ; CvPlayerEspionage::GetSpyIndexInCity
	cmp	eax, -1
	je	SHORT $LN9@SpreadReli@2

; 357  : 				{
; 358  : 					ReligionTypes eReligionFounded = kPlayer.GetReligions()->GetReligionCreatedByPlayer();

	mov	ecx, DWORD PTR _kPlayer$223926[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eReligionFounded$223932[ebp], eax

; 359  : 					pCity->GetCityReligions()->AddSpyPressure(eReligionFounded, iSpyPressure);

	mov	ecx, DWORD PTR _iSpyPressure$223929[ebp]
	push	ecx
	mov	edx, DWORD PTR _eReligionFounded$223932[ebp]
	push	edx
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?AddSpyPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::AddSpyPressure
$LN9@SpreadReli@2:

; 360  : 				}
; 361  : 			}
; 362  : 
; 363  : 			// Loop through each of their cities
; 364  : 			int iLoop;
; 365  : 			CvCity* pLoopCity;
; 366  : 			for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$223933[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$223926[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$223934[ebp], eax
	jmp	SHORT $LN7@SpreadReli@2
$LN6@SpreadReli@2:
	push	0
	lea	ecx, DWORD PTR _iLoop$223933[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$223926[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$223934[ebp], eax
$LN7@SpreadReli@2:
	cmp	DWORD PTR _pLoopCity$223934[ebp], 0
	je	$LN10@SpreadReli@2

; 367  : 			{
; 368  : 				// Ignore the same city
; 369  : 				if(pCity == pLoopCity)

	mov	edx, DWORD PTR _pCity$[ebp]
	cmp	edx, DWORD PTR _pLoopCity$223934[ebp]
	jne	SHORT $LN4@SpreadReli@2

; 370  : 				{
; 371  : 					continue;

	jmp	SHORT $LN6@SpreadReli@2
$LN4@SpreadReli@2:

; 372  : 				}
; 373  : 
; 374  : 				// Does this city have a majority religion?
; 375  : 				ReligionTypes eMajorityReligion = pLoopCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, DWORD PTR _pLoopCity$223934[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eMajorityReligion$223939[ebp], eax

; 376  : 				if(eMajorityReligion == NO_RELIGION)

	cmp	DWORD PTR _eMajorityReligion$223939[ebp], -1
	jne	SHORT $LN3@SpreadReli@2

; 377  : 				{
; 378  : 					continue;

	jmp	SHORT $LN6@SpreadReli@2
$LN3@SpreadReli@2:

; 379  : 				}
; 380  : 
; 381  : 				int iNumTradeRoutes = 0;

	mov	DWORD PTR _iNumTradeRoutes$223941[ebp], 0

; 382  : 				int iPressure = GetAdjacentCityReligiousPressure (eMajorityReligion, pLoopCity, pCity, iNumTradeRoutes, false);

	push	0
	lea	eax, DWORD PTR _iNumTradeRoutes$223941[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pLoopCity$223934[ebp]
	push	edx
	mov	eax, DWORD PTR _eMajorityReligion$223939[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAdjacentCityReligiousPressure@CvGameReligions@@QAEHW4ReligionTypes@@PAVCvCity@@1AAH_N@Z ; CvGameReligions::GetAdjacentCityReligiousPressure
	mov	DWORD PTR _iPressure$223942[ebp], eax

; 383  : 				if (iPressure > 0)

	cmp	DWORD PTR _iPressure$223942[ebp], 0
	jle	SHORT $LN2@SpreadReli@2

; 384  : 				{
; 385  : 					pCity->GetCityReligions()->AddReligiousPressure(FOLLOWER_CHANGE_ADJACENT_PRESSURE, eMajorityReligion, iPressure);

	push	-1
	mov	ecx, DWORD PTR _iPressure$223942[ebp]
	push	ecx
	mov	edx, DWORD PTR _eMajorityReligion$223939[ebp]
	push	edx
	push	2
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?AddReligiousPressure@CvCityReligions@@QAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@HW4PlayerTypes@@@Z ; CvCityReligions::AddReligiousPressure

; 386  : 					if (iNumTradeRoutes != 0)

	cmp	DWORD PTR _iNumTradeRoutes$223941[ebp], 0
	je	SHORT $LN2@SpreadReli@2

; 387  : 					{
; 388  : 						pCity->GetCityReligions()->IncrementNumTradeRouteConnections(eMajorityReligion, iNumTradeRoutes);

	mov	eax, DWORD PTR _iNumTradeRoutes$223941[ebp]
	push	eax
	mov	ecx, DWORD PTR _eMajorityReligion$223939[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IncrementNumTradeRouteConnections@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::IncrementNumTradeRouteConnections
$LN2@SpreadReli@2:

; 389  : 					}
; 390  : 				}

	jmp	$LN6@SpreadReli@2
$LN10@SpreadReli@2:

; 391  : 			}

	jmp	$LN12@SpreadReli@2
$LN15@SpreadReli@2:

; 392  : 		}
; 393  : 	}
; 394  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SpreadReligionToOneCity@CvGameReligions@@QAEXPAVCvCity@@@Z ENDP ; CvGameReligions::SpreadReligionToOneCity
_TEXT	ENDS
PUBLIC	??_C@_0EA@CIMBFLIJ@TXT_KEY_NOTIFICATION_SUMMARY_NEE@ ; `string'
PUBLIC	??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z ; GetLocalizedText<CvString>
PUBLIC	??_C@_0DI@MOLCLMEP@TXT_KEY_NOTIFICATION_NEED_NEW_AU@ ; `string'
PUBLIC	?GetBestCityFaithBuildingPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4BuildingTypes@@W4ReligionTypes@@@Z ; CvReligionAIHelpers::GetBestCityFaithBuildingPurchase
PUBLIC	??_C@_0DG@BPIOFBCA@TXT_KEY_NOTIFICATION_SUMMARY_AUT@ ; `string'
PUBLIC	??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z ; GetLocalizedText<CvString,char const *>
PUBLIC	??_C@_0CO@BNBNHNPD@TXT_KEY_NOTIFICATION_AUTOMATIC_F@ ; `string'
PUBLIC	?GetBestCityFaithUnitPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4UnitTypes@@W4ReligionTypes@@@Z ; CvReligionAIHelpers::GetBestCityFaithUnitPurchase
PUBLIC	??_C@_0BO@OCBLONKE@TXT_KEY_RO_AUTO_FAITH_PROPHET?$AA@ ; `string'
PUBLIC	?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsStillToFound
PUBLIC	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread
PUBLIC	??_C@_0DE@BLLFBHAB@TXT_KEY_NOTIFICATION_SUMMARY_ADD@ ; `string'
PUBLIC	??_C@_0CM@HAHHKCJJ@TXT_KEY_NOTIFICATION_ADD_REFORMA@ ; `string'
PUBLIC	?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z ; CvGameReligions::AddReformationBelief
PUBLIC	?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ; CvReligionAI::ChooseReformationBelief
PUBLIC	?HasAddedReformationBelief@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasAddedReformationBelief
PUBLIC	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
PUBLIC	?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z ; CvGameReligions::CheckSpawnGreatProphet
PUBLIC	?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z ; CvGameReligions::FoundPantheon
PUBLIC	?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ; CvReligionAI::ChoosePantheonBelief
PUBLIC	??_C@_0DH@FOACBNJ@TXT_KEY_NOTIFICATION_SUMMARY_ENO@ ; `string'
PUBLIC	??_C@_0CP@BKDIDBJL@TXT_KEY_NOTIFICATION_ENOUGH_FAIT@ ; `string'
PUBLIC	?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z ; CvGameReligions::CanCreatePantheon
PUBLIC	??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@		; `string'
PUBLIC	??_C@_0DJ@FLMCADBI@TXT_KEY_NOTIFICATION_SUMMARY_ENO@ ; `string'
PUBLIC	?GetLocalizedText@@YA?AVCvString@@PBD@Z		; GetLocalizedText
PUBLIC	??_C@_0DB@IEDKCBCD@TXT_KEY_NOTIFICATION_ENOUGH_FAIT@ ; `string'
PUBLIC	?CanAffordFaithPurchase@CvPlayerReligions@@QBE_NXZ ; CvPlayerReligions::CanAffordFaithPurchase
PUBLIC	__$ArrayPad$
PUBLIC	?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z ; CvGameReligions::DoPlayerTurn
EXTRN	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z:PROC ; CvGlobals::getBuildingInfo
EXTRN	?getNameKey@CvCity@@QBEPBDXZ:PROC		; CvCity::getNameKey
EXTRN	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z:PROC ; CvCity::Purchase
EXTRN	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z:PROC ; CvPlayer::IsCanPurchaseAnyCity
EXTRN	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z:PROC ; CvGlobals::getUnitInfo
EXTRN	?GetFaithPurchaseIndex@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetFaithPurchaseIndex
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	?HasPolicyGrantingReformationBelief@CvPlayerPolicies@@QBE_NXZ:PROC ; CvPlayerPolicies::HasPolicyGrantingReformationBelief
EXTRN	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ:PROC ; CvPlayer::GetPlayerPolicies
EXTRN	?GetReligionAI@CvPlayer@@QBEPAVCvReligionAI@@XZ:PROC ; CvPlayer::GetReligionAI
EXTRN	?isHuman@CvPlayer@@QBE_NXZ:PROC			; CvPlayer::isHuman
EXTRN	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z:PROC ; CvGlobals::getInfoTypeForString
EXTRN	?GetCurrentEra@CvPlayer@@QBE?AW4EraTypes@@XZ:PROC ; CvPlayer::GetCurrentEra
EXTRN	?isMinorCiv@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isMinorCiv
EXTRN	?GetFaith@CvPlayer@@QBEHXZ:PROC			; CvPlayer::GetFaith
EXTRN	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z:PROC ; CvNotifications::Add
EXTRN	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ:PROC ; CvPlayer::GetNotifications
EXTRN	?GetFaithPurchaseType@CvPlayer@@QBE?AW4FaithPurchaseTypes@@XZ:PROC ; CvPlayer::GetFaithPurchaseType
EXTRN	?ChangeFaith@CvPlayer@@QAEXH@Z:PROC		; CvPlayer::ChangeFaith
EXTRN	?GetTotalFaithPerTurn@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetTotalFaithPerTurn
;	COMDAT ??_C@_0EA@CIMBFLIJ@TXT_KEY_NOTIFICATION_SUMMARY_NEE@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0EA@CIMBFLIJ@TXT_KEY_NOTIFICATION_SUMMARY_NEE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_NEED_NEW_AUTOMATIC_FAITH_SELECTION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@MOLCLMEP@TXT_KEY_NOTIFICATION_NEED_NEW_AU@
CONST	SEGMENT
??_C@_0DI@MOLCLMEP@TXT_KEY_NOTIFICATION_NEED_NEW_AU@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_NEED_NEW_AUTOMATIC_FAITH_SELECTION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@BPIOFBCA@TXT_KEY_NOTIFICATION_SUMMARY_AUT@
CONST	SEGMENT
??_C@_0DG@BPIOFBCA@TXT_KEY_NOTIFICATION_SUMMARY_AUT@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_AUTOMATIC_FAITH_PURCHASE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@BNBNHNPD@TXT_KEY_NOTIFICATION_AUTOMATIC_F@
CONST	SEGMENT
??_C@_0CO@BNBNHNPD@TXT_KEY_NOTIFICATION_AUTOMATIC_F@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_AUTOMATIC_FAITH_PURCHASE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OCBLONKE@TXT_KEY_RO_AUTO_FAITH_PROPHET?$AA@
CONST	SEGMENT
??_C@_0BO@OCBLONKE@TXT_KEY_RO_AUTO_FAITH_PROPHET?$AA@ DB 'TXT_KEY_RO_AUTO'
	DB	'_FAITH_PROPHET', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@BLLFBHAB@TXT_KEY_NOTIFICATION_SUMMARY_ADD@
CONST	SEGMENT
??_C@_0DE@BLLFBHAB@TXT_KEY_NOTIFICATION_SUMMARY_ADD@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_ADD_REFORMATION_BELIEF', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@HAHHKCJJ@TXT_KEY_NOTIFICATION_ADD_REFORMA@
CONST	SEGMENT
??_C@_0CM@HAHHKCJJ@TXT_KEY_NOTIFICATION_ADD_REFORMA@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_ADD_REFORMATION_BELIEF', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@FOACBNJ@TXT_KEY_NOTIFICATION_SUMMARY_ENO@
CONST	SEGMENT
??_C@_0DH@FOACBNJ@TXT_KEY_NOTIFICATION_SUMMARY_ENO@ DB 'TXT_KEY_NOTIFICAT'
	DB	'ION_SUMMARY_ENOUGH_FAITH_FOR_PANTHEON', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@BKDIDBJL@TXT_KEY_NOTIFICATION_ENOUGH_FAIT@
CONST	SEGMENT
??_C@_0CP@BKDIDBJL@TXT_KEY_NOTIFICATION_ENOUGH_FAIT@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_ENOUGH_FAITH_FOR_PANTHEON', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@
CONST	SEGMENT
??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@ DB 'ERA_INDUSTRIAL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@FLMCADBI@TXT_KEY_NOTIFICATION_SUMMARY_ENO@
CONST	SEGMENT
??_C@_0DJ@FLMCADBI@TXT_KEY_NOTIFICATION_SUMMARY_ENO@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_ENOUGH_FAITH_FOR_MISSIONARY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@IEDKCBCD@TXT_KEY_NOTIFICATION_ENOUGH_FAIT@
CONST	SEGMENT
??_C@_0DB@IEDKCBCD@TXT_KEY_NOTIFICATION_ENOUGH_FAIT@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_ENOUGH_FAITH_FOR_MISSIONARY', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z DD 019930522H
	DD	0fH
	DD	FLAT:__unwindtable$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$7
	DD	06H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$8
	DD	06H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$10
	DD	06H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$12
	DD	06H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$14
	DD	0dH
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$15
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z
_TEXT	SEGMENT
tv512 = -632						; size = 4
tv537 = -628						; size = 4
tv536 = -624						; size = 4
tv233 = -620						; size = 4
tv237 = -616						; size = 4
tv263 = -612						; size = 4
tv610 = -608						; size = 4
tv198 = -604						; size = 4
_this$ = -600						; size = 4
$T231873 = -596						; size = 4
$T231864 = -592						; size = 4
$T231849 = -588						; size = 4
$T231845 = -584						; size = 4
$T231829 = -580						; size = 4
$T231825 = -576						; size = 4
$T231805 = -572						; size = 4
$T231801 = -568						; size = 4
$T231792 = -564						; size = 4
$T231783 = -560						; size = 4
$T231770 = -556						; size = 4
$T231762 = -552						; size = 4
$T231739 = -548						; size = 4
$T231724 = -544						; size = 4
$T231720 = -540						; size = 4
$T231700 = -536						; size = 4
$T231672 = -532						; size = 4
$T231671 = -528						; size = 4
$T231670 = -524						; size = 4
$T231669 = -520						; size = 28
$T231668 = -492						; size = 28
_strBuffer$224058 = -464				; size = 28
_strSummary$224067 = -436				; size = 28
_pNotifications$224056 = -408				; size = 4
_strBuffer$224049 = -404				; size = 28
_strSummary$224052 = -376				; size = 28
_pNotifications$224047 = -348				; size = 4
_pCity$224045 = -344					; size = 4
_pkBuilding$224040 = -340				; size = 4
_eBuilding$224038 = -336				; size = 4
_strBuffer$224022 = -332				; size = 28
_strSummary$224033 = -304				; size = 28
_pNotifications$224020 = -276				; size = 4
_pCity$224018 = -272					; size = 4
_pkUnit$224013 = -268					; size = 4
_eUnit$224011 = -264					; size = 4
_strBuffer$223990 = -260				; size = 28
_strSummary$223993 = -232				; size = 28
_pNotifications$223988 = -204				; size = 4
_eReformationBelief$223986 = -200			; size = 4
_eBelief$223977 = -196					; size = 4
_strBuffer$223970 = -192				; size = 28
_strSummary$223973 = -164				; size = 28
_pNotifications$223968 = -136				; size = 4
_strBuffer$223958 = -132				; size = 28
_strSummary$223961 = -104				; size = 28
_pNotifications$223956 = -76				; size = 4
_ePlayer$ = -72						; size = 4
_bSelectionStillValid$ = -65				; size = 1
_eReligion$ = -64					; size = 4
_eReligionCreated$ = -60				; size = 4
_bCouldAtStartAffordFaithPurchase$ = -53		; size = 1
_iFaithPerTurn$ = -52					; size = 4
_bCanNowAffordFaithPurchase$ = -45			; size = 1
_szItemName$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_kPlayer$ = 8						; size = 4
?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z PROC	; CvGameReligions::DoPlayerTurn, COMDAT
; _this$ = ecx

; 398  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 620				; 0000026cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 399  : 	AI_PERF_FORMAT("AI-perf.csv", ("CvGameReligions::DoPlayerTurn, Turn %03d, %s", GC.getGame().getElapsedGameTurns(), kPlayer.getCivilizationShortDescription()) );
; 400  : 	bool bCouldAtStartAffordFaithPurchase = kPlayer.GetReligions()->CanAffordFaithPurchase();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?CanAffordFaithPurchase@CvPlayerReligions@@QBE_NXZ ; CvPlayerReligions::CanAffordFaithPurchase
	mov	BYTE PTR _bCouldAtStartAffordFaithPurchase$[ebp], al

; 401  : 	const PlayerTypes ePlayer = kPlayer.GetID();

	mov	eax, DWORD PTR _kPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _ePlayer$[ebp], ecx

; 402  : 
; 403  : #ifndef AUI_YIELDS_APPLIED_AFTER_TURN_NOT_BEFORE
; 404  : 	int iFaithPerTurn = kPlayer.GetTotalFaithPerTurn();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetTotalFaithPerTurn@CvPlayer@@QBEHXZ	; CvPlayer::GetTotalFaithPerTurn
	mov	DWORD PTR _iFaithPerTurn$[ebp], eax

; 405  : 	if(iFaithPerTurn > 0)

	cmp	DWORD PTR _iFaithPerTurn$[ebp], 0
	jle	SHORT $LN39@DoPlayerTu

; 406  : 	{
; 407  : 		kPlayer.ChangeFaith(iFaithPerTurn);

	mov	edx, DWORD PTR _iFaithPerTurn$[ebp]
	push	edx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?ChangeFaith@CvPlayer@@QAEXH@Z		; CvPlayer::ChangeFaith
$LN39@DoPlayerTu:

; 408  : 	}
; 409  : #endif
; 410  : 
; 411  : 	// If just now can afford missionary, add a notification
; 412  : 	bool bCanNowAffordFaithPurchase = kPlayer.GetReligions()->CanAffordFaithPurchase();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?CanAffordFaithPurchase@CvPlayerReligions@@QBE_NXZ ; CvPlayerReligions::CanAffordFaithPurchase
	mov	BYTE PTR _bCanNowAffordFaithPurchase$[ebp], al

; 413  : 	if (kPlayer.GetFaithPurchaseType() == NO_AUTOMATIC_FAITH_PURCHASE && !bCouldAtStartAffordFaithPurchase && bCanNowAffordFaithPurchase)

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetFaithPurchaseType@CvPlayer@@QBE?AW4FaithPurchaseTypes@@XZ ; CvPlayer::GetFaithPurchaseType
	test	eax, eax
	jne	$LN38@DoPlayerTu
	movzx	eax, BYTE PTR _bCouldAtStartAffordFaithPurchase$[ebp]
	test	eax, eax
	jne	$LN38@DoPlayerTu
	movzx	ecx, BYTE PTR _bCanNowAffordFaithPurchase$[ebp]
	test	ecx, ecx
	je	$LN38@DoPlayerTu

; 414  : 	{
; 415  : 		CvNotifications* pNotifications = kPlayer.GetNotifications();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$223956[ebp], eax

; 416  : 		if(pNotifications)

	cmp	DWORD PTR _pNotifications$223956[ebp], 0
	je	$LN38@DoPlayerTu

; 417  : 		{
; 418  : 			CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_ENOUGH_FAITH_FOR_MISSIONARY");

	push	OFFSET ??_C@_0DB@IEDKCBCD@TXT_KEY_NOTIFICATION_ENOUGH_FAIT@
	lea	edx, DWORD PTR _strBuffer$223958[ebp]
	push	edx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 419  : 			CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_ENOUGH_FAITH_FOR_MISSIONARY");

	push	OFFSET ??_C@_0DJ@FLMCADBI@TXT_KEY_NOTIFICATION_SUMMARY_ENO@
	lea	eax, DWORD PTR _strSummary$223961[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 420  : 			pNotifications->Add(NOTIFICATION_CAN_BUILD_MISSIONARY, strBuffer, strSummary, -1, -1, -1);

	lea	ecx, DWORD PTR _strSummary$223961[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T231700[ebp], eax
	push	-1
	push	-1
	push	-1
	push	-1
	mov	ecx, DWORD PTR $T231700[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strBuffer$223958[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	-1487612968				; a754d3d8H
	mov	ecx, DWORD PTR _pNotifications$223956[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 421  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$223961[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strBuffer$223958[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN38@DoPlayerTu:

; 422  : 	}
; 423  : 
; 424  : 	// Check for pantheon or great prophet spawning (now restricted so must occur before Industrial era)
; 425  : 	if(kPlayer.GetFaith() > 0 && !kPlayer.isMinorCiv() && kPlayer.GetCurrentEra() < GC.getInfoTypeForString("ERA_INDUSTRIAL"))

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	test	eax, eax
	jle	$LN36@DoPlayerTu
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	movzx	edx, al
	test	edx, edx
	jne	$LN36@DoPlayerTu
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetCurrentEra@CvPlayer@@QBE?AW4EraTypes@@XZ ; CvPlayer::GetCurrentEra
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jge	$LN36@DoPlayerTu

; 426  : 	{
; 427  : 		if(CanCreatePantheon(kPlayer.GetID(), true) == FOUNDING_OK)

	mov	eax, DWORD PTR _kPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T231720[ebp], ecx
	push	1
	mov	edx, DWORD PTR $T231720[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z ; CvGameReligions::CanCreatePantheon
	test	eax, eax
	jne	$LN35@DoPlayerTu

; 428  : 		{
; 429  : 			// Create the pantheon
; 430  : 			if(kPlayer.isHuman())

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	eax, al
	test	eax, eax
	je	$LN34@DoPlayerTu

; 431  : 			{
; 432  : 				//If the player is human then a net message will be received which will pick the pantheon.
; 433  : 				CvNotifications* pNotifications = kPlayer.GetNotifications();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$223968[ebp], eax

; 434  : 				if(pNotifications)

	cmp	DWORD PTR _pNotifications$223968[ebp], 0
	je	$LN33@DoPlayerTu

; 435  : 				{
; 436  : 					CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_ENOUGH_FAITH_FOR_PANTHEON");

	push	OFFSET ??_C@_0CP@BKDIDBJL@TXT_KEY_NOTIFICATION_ENOUGH_FAIT@
	lea	ecx, DWORD PTR _strBuffer$223970[ebp]
	push	ecx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 2

; 437  : 
; 438  : 					CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_ENOUGH_FAITH_FOR_PANTHEON");

	push	OFFSET ??_C@_0DH@FOACBNJ@TXT_KEY_NOTIFICATION_SUMMARY_ENO@
	lea	edx, DWORD PTR _strSummary$223973[ebp]
	push	edx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 439  : 					pNotifications->Add(NOTIFICATION_FOUND_PANTHEON, strBuffer, strSummary, -1, -1, -1);

	lea	ecx, DWORD PTR _strSummary$223973[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T231724[ebp], eax
	push	-1
	push	-1
	push	-1
	push	-1
	mov	eax, DWORD PTR $T231724[ebp]
	push	eax
	lea	ecx, DWORD PTR _strBuffer$223970[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	1279997337				; 4c4b3599H
	mov	ecx, DWORD PTR _pNotifications$223968[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 440  : 				}

	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _strSummary$223973[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strBuffer$223970[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN33@DoPlayerTu:

; 441  : 			}
; 442  : 			else

	jmp	SHORT $LN35@DoPlayerTu
$LN34@DoPlayerTu:

; 443  : 			{
; 444  : 				const BeliefTypes eBelief = kPlayer.GetReligionAI()->ChoosePantheonBelief();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetReligionAI@CvPlayer@@QBEPAVCvReligionAI@@XZ ; CvPlayer::GetReligionAI
	mov	ecx, eax
	call	?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ; CvReligionAI::ChoosePantheonBelief
	mov	DWORD PTR _eBelief$223977[ebp], eax

; 445  : 
; 446  : 				FoundPantheon(ePlayer, eBelief);

	mov	ecx, DWORD PTR _eBelief$223977[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z ; CvGameReligions::FoundPantheon
$LN35@DoPlayerTu:

; 447  : 			}
; 448  : 		}
; 449  : 
; 450  : 		switch (kPlayer.GetFaithPurchaseType())

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetFaithPurchaseType@CvPlayer@@QBE?AW4FaithPurchaseTypes@@XZ ; CvPlayer::GetFaithPurchaseType
	mov	DWORD PTR tv198[ebp], eax
	cmp	DWORD PTR tv198[ebp], 0
	jl	SHORT $LN36@DoPlayerTu
	cmp	DWORD PTR tv198[ebp], 1
	jle	SHORT $LN29@DoPlayerTu
	jmp	SHORT $LN36@DoPlayerTu
$LN29@DoPlayerTu:

; 451  : 		{
; 452  : 		case NO_AUTOMATIC_FAITH_PURCHASE:
; 453  : 		case FAITH_PURCHASE_SAVE_PROPHET:
; 454  : 				CheckSpawnGreatProphet(kPlayer);

	mov	eax, DWORD PTR _kPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z ; CvGameReligions::CheckSpawnGreatProphet
$LN36@DoPlayerTu:

; 455  : 				break;
; 456  : 		}
; 457  : 	}
; 458  : 
; 459  : 	// Pick a Reformation belief?
; 460  : 	ReligionTypes eReligionCreated = GetReligionCreatedByPlayer(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eReligionCreated$[ebp], eax

; 461  : #ifdef AUI_RELIGION_FIX_NO_BELIEFS_AVAILABLE_CHECK_FOR_NON_PANTHEON_MOVED
; 462  : 	if (eReligionCreated > RELIGION_PANTHEON && CanAddReformationBelief(ePlayer) == FOUNDING_OK)
; 463  : #else
; 464  : 	if (eReligionCreated > RELIGION_PANTHEON && !HasAddedReformationBelief(ePlayer) && kPlayer.GetPlayerPolicies()->HasPolicyGrantingReformationBelief())

	cmp	DWORD PTR _eReligionCreated$[ebp], 0
	jle	$LN28@DoPlayerTu
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasAddedReformationBelief@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasAddedReformationBelief
	movzx	eax, al
	test	eax, eax
	jne	$LN28@DoPlayerTu
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?HasPolicyGrantingReformationBelief@CvPlayerPolicies@@QBE_NXZ ; CvPlayerPolicies::HasPolicyGrantingReformationBelief
	movzx	ecx, al
	test	ecx, ecx
	je	$LN28@DoPlayerTu

; 465  : #endif
; 466  : 	{
; 467  : 		if (!kPlayer.isHuman())

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN27@DoPlayerTu

; 468  : 		{
; 469  : 			BeliefTypes eReformationBelief = kPlayer.GetReligionAI()->ChooseReformationBelief();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetReligionAI@CvPlayer@@QBEPAVCvReligionAI@@XZ ; CvPlayer::GetReligionAI
	mov	ecx, eax
	call	?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ; CvReligionAI::ChooseReformationBelief
	mov	DWORD PTR _eReformationBelief$223986[ebp], eax

; 470  : 			AddReformationBelief(ePlayer, eReligionCreated, eReformationBelief);

	mov	eax, DWORD PTR _eReformationBelief$223986[ebp]
	push	eax
	mov	ecx, DWORD PTR _eReligionCreated$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z ; CvGameReligions::AddReformationBelief

; 471  : 		}
; 472  : 		else

	jmp	$LN28@DoPlayerTu
$LN27@DoPlayerTu:

; 473  : 		{
; 474  : 			CvNotifications* pNotifications;
; 475  : 			pNotifications = kPlayer.GetNotifications();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$223988[ebp], eax

; 476  : 			if(pNotifications)

	cmp	DWORD PTR _pNotifications$223988[ebp], 0
	je	$LN28@DoPlayerTu

; 477  : 			{
; 478  : 				CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_ADD_REFORMATION_BELIEF");

	push	OFFSET ??_C@_0CM@HAHHKCJJ@TXT_KEY_NOTIFICATION_ADD_REFORMA@
	lea	eax, DWORD PTR _strBuffer$223990[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 4

; 479  : 				CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_ADD_REFORMATION_BELIEF");

	push	OFFSET ??_C@_0DE@BLLFBHAB@TXT_KEY_NOTIFICATION_SUMMARY_ADD@
	lea	ecx, DWORD PTR _strSummary$223993[ebp]
	push	ecx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 480  : 				pNotifications->Add(NOTIFICATION_ADD_REFORMATION_BELIEF, strBuffer, strSummary, -1, -1, -1);

	lea	ecx, DWORD PTR _strSummary$223993[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T231739[ebp], eax
	push	-1
	push	-1
	push	-1
	push	-1
	mov	edx, DWORD PTR $T231739[ebp]
	push	edx
	lea	ecx, DWORD PTR _strBuffer$223990[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	84632199				; 050b6287H
	mov	ecx, DWORD PTR _pNotifications$223988[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 481  : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _strSummary$223993[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strBuffer$223990[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN28@DoPlayerTu:

; 482  : 		}
; 483  : 	}
; 484  : 
; 485  : 	// Automatic faith purchases?
; 486  : 	bool bSelectionStillValid = true;

	mov	BYTE PTR _bSelectionStillValid$[ebp], 1

; 487  : 	CvString szItemName = "";

	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
	test	eax, eax
	je	SHORT $LN98@DoPlayerTu
	mov	DWORD PTR tv610[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN99@DoPlayerTu
$LN98@DoPlayerTu:
	mov	DWORD PTR tv610[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN99@DoPlayerTu:
	mov	ecx, DWORD PTR tv610[ebp]
	push	ecx
	lea	ecx, DWORD PTR _szItemName$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 6

; 488  : 	ReligionTypes eReligion = kPlayer.GetReligionAI()->GetReligionToSpread();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetReligionAI@CvPlayer@@QBEPAVCvReligionAI@@XZ ; CvPlayer::GetReligionAI
	mov	ecx, eax
	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread
	mov	DWORD PTR _eReligion$[ebp], eax

; 489  : 
; 490  : 	switch (kPlayer.GetFaithPurchaseType())

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetFaithPurchaseType@CvPlayer@@QBE?AW4FaithPurchaseTypes@@XZ ; CvPlayer::GetFaithPurchaseType
	mov	DWORD PTR tv263[ebp], eax
	cmp	DWORD PTR tv263[ebp], 1
	je	SHORT $LN22@DoPlayerTu
	cmp	DWORD PTR tv263[ebp], 2
	je	$LN10@DoPlayerTu
	cmp	DWORD PTR tv263[ebp], 3
	je	$LN18@DoPlayerTu
	jmp	$LN23@DoPlayerTu
$LN22@DoPlayerTu:

; 491  : 	{
; 492  : 	case FAITH_PURCHASE_SAVE_PROPHET:
; 493  : 		if (eReligion <= RELIGION_PANTHEON && GetNumReligionsStillToFound() <= 0)

	cmp	DWORD PTR _eReligion$[ebp], 0
	jg	SHORT $LN21@DoPlayerTu
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsStillToFound
	test	eax, eax
	jg	SHORT $LN21@DoPlayerTu

; 494  : 		{
; 495  : 			szItemName = GetLocalizedText("TXT_KEY_RO_AUTO_FAITH_PROPHET");

	push	OFFSET ??_C@_0BO@OCBLONKE@TXT_KEY_RO_AUTO_FAITH_PROPHET?$AA@
	lea	edx, DWORD PTR $T231668[ebp]
	push	edx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv237[ebp], eax
	mov	eax, DWORD PTR tv237[ebp]
	mov	DWORD PTR $T231762[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR $T231762[ebp]
	push	ecx
	lea	ecx, DWORD PTR _szItemName$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T231668[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 496  : 			bSelectionStillValid = false;

	mov	BYTE PTR _bSelectionStillValid$[ebp], 0
	jmp	SHORT $LN20@DoPlayerTu
$LN21@DoPlayerTu:

; 497  : 		}
; 498  : 		else if (kPlayer.GetCurrentEra() >= GC.getInfoTypeForString("ERA_INDUSTRIAL"))

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetCurrentEra@CvPlayer@@QBE?AW4EraTypes@@XZ ; CvPlayer::GetCurrentEra
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jl	SHORT $LN20@DoPlayerTu

; 499  : 		{
; 500  : 			szItemName = GetLocalizedText("TXT_KEY_RO_AUTO_FAITH_PROPHET");

	push	OFFSET ??_C@_0BO@OCBLONKE@TXT_KEY_RO_AUTO_FAITH_PROPHET?$AA@
	lea	edx, DWORD PTR $T231669[ebp]
	push	edx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv233[ebp], eax
	mov	eax, DWORD PTR tv233[ebp]
	mov	DWORD PTR $T231770[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR $T231770[ebp]
	push	ecx
	lea	ecx, DWORD PTR _szItemName$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T231669[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 501  : 			bSelectionStillValid = false;

	mov	BYTE PTR _bSelectionStillValid$[ebp], 0
$LN20@DoPlayerTu:

; 502  : 		}
; 503  : 		break;

	jmp	$LN23@DoPlayerTu
$LN18@DoPlayerTu:

; 504  : 
; 505  : 	case FAITH_PURCHASE_UNIT:
; 506  : 		{
; 507  : 			UnitTypes eUnit = (UnitTypes)kPlayer.GetFaithPurchaseIndex();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetFaithPurchaseIndex@CvPlayer@@QBEHXZ	; CvPlayer::GetFaithPurchaseIndex
	mov	DWORD PTR _eUnit$224011[ebp], eax

; 508  : 			CvUnitEntry *pkUnit = GC.getUnitInfo(eUnit);

	mov	edx, DWORD PTR _eUnit$224011[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR _pkUnit$224013[ebp], eax

; 509  : 			if (pkUnit)

	cmp	DWORD PTR _pkUnit$224013[ebp], 0
	je	SHORT $LN17@DoPlayerTu

; 510  : 			{
; 511  : 				szItemName = pkUnit->GetDescriptionKey();

	mov	ecx, DWORD PTR _pkUnit$224013[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T231783[ebp], eax
	cmp	DWORD PTR $T231783[ebp], 0
	je	SHORT $LN114@DoPlayerTu
	mov	eax, DWORD PTR $T231783[ebp]
	push	eax
	lea	ecx, DWORD PTR _szItemName$[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN17@DoPlayerTu
$LN114@DoPlayerTu:
	lea	ecx, DWORD PTR _szItemName$[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN17@DoPlayerTu:

; 512  : 			}
; 513  : 
; 514  : 			if (!kPlayer.IsCanPurchaseAnyCity(false, false /* Don't worry about faith balance */, eUnit, NO_BUILDING, YIELD_FAITH))

	push	5
	push	-1
	mov	ecx, DWORD PTR _eUnit$224011[ebp]
	push	ecx
	push	0
	push	0
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z ; CvPlayer::IsCanPurchaseAnyCity
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN16@DoPlayerTu

; 515  : 			{
; 516  : 				bSelectionStillValid = false;

	mov	BYTE PTR _bSelectionStillValid$[ebp], 0

; 517  : 			}
; 518  : 			else

	jmp	$LN15@DoPlayerTu
$LN16@DoPlayerTu:

; 519  : 			{
; 520  : 				if (kPlayer.IsCanPurchaseAnyCity(true, true /* Check faith balance */, eUnit, NO_BUILDING, YIELD_FAITH))

	push	5
	push	-1
	mov	eax, DWORD PTR _eUnit$224011[ebp]
	push	eax
	push	1
	push	1
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z ; CvPlayer::IsCanPurchaseAnyCity
	movzx	ecx, al
	test	ecx, ecx
	je	$LN15@DoPlayerTu

; 521  : 				{
; 522  : 					CvCity *pCity = CvReligionAIHelpers::GetBestCityFaithUnitPurchase(kPlayer, eUnit, eReligion);

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	eax, DWORD PTR _eUnit$224011[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	push	ecx
	call	?GetBestCityFaithUnitPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4UnitTypes@@W4ReligionTypes@@@Z ; CvReligionAIHelpers::GetBestCityFaithUnitPurchase
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pCity$224018[ebp], eax

; 523  : 					if (pCity)

	cmp	DWORD PTR _pCity$224018[ebp], 0
	je	$LN13@DoPlayerTu

; 524  : 					{
; 525  : 						pCity->Purchase(eUnit, NO_BUILDING, NO_PROJECT, YIELD_FAITH);

	push	5
	push	-1
	push	-1
	mov	edx, DWORD PTR _eUnit$224011[ebp]
	push	edx
	mov	ecx, DWORD PTR _pCity$224018[ebp]
	call	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::Purchase

; 526  : 
; 527  : 						CvNotifications* pNotifications = kPlayer.GetNotifications();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$224020[ebp], eax

; 528  : 						if(pNotifications)

	cmp	DWORD PTR _pNotifications$224020[ebp], 0
	je	$LN12@DoPlayerTu

; 529  : 						{
; 530  : 							CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_AUTOMATIC_FAITH_PURCHASE", szItemName, pCity->getNameKey());

	mov	ecx, DWORD PTR _pCity$224018[ebp]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	DWORD PTR $T231670[ebp], eax
	lea	eax, DWORD PTR $T231670[ebp]
	push	eax
	lea	ecx, DWORD PTR _szItemName$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CO@BNBNHNPD@TXT_KEY_NOTIFICATION_AUTOMATIC_F@
	lea	edx, DWORD PTR _strBuffer$224022[ebp]
	push	edx
	call	??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z ; GetLocalizedText<CvString,char const *>
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 9

; 531  : 							CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_AUTOMATIC_FAITH_PURCHASE");

	push	OFFSET ??_C@_0DG@BPIOFBCA@TXT_KEY_NOTIFICATION_SUMMARY_AUT@
	lea	eax, DWORD PTR _strSummary$224033[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH

; 532  : 							pNotifications->Add(NOTIFICATION_CAN_BUILD_MISSIONARY, strBuffer, strSummary, pCity->getX(), pCity->getY(), -1);

	mov	ecx, DWORD PTR _pCity$224018[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T231792[ebp], edx
	mov	eax, DWORD PTR _pCity$224018[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T231801[ebp], ecx
	lea	ecx, DWORD PTR _strSummary$224033[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T231805[ebp], eax
	push	-1
	push	-1
	mov	edx, DWORD PTR $T231792[ebp]
	push	edx
	mov	eax, DWORD PTR $T231801[ebp]
	push	eax
	mov	ecx, DWORD PTR $T231805[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strBuffer$224022[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	-1487612968				; a754d3d8H
	mov	ecx, DWORD PTR _pNotifications$224020[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 533  : 						}

	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR _strSummary$224033[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _strBuffer$224022[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN12@DoPlayerTu:

; 534  : 					}
; 535  : 					else

	jmp	SHORT $LN15@DoPlayerTu
$LN13@DoPlayerTu:

; 536  : 					{
; 537  : 						bSelectionStillValid = false;

	mov	BYTE PTR _bSelectionStillValid$[ebp], 0
$LN15@DoPlayerTu:

; 538  : 					}
; 539  : 				}
; 540  : 			}
; 541  : 		}
; 542  : 		break;

	jmp	$LN23@DoPlayerTu
$LN10@DoPlayerTu:

; 543  : 	case FAITH_PURCHASE_BUILDING:
; 544  : 		{
; 545  : 			BuildingTypes eBuilding = (BuildingTypes)kPlayer.GetFaithPurchaseIndex();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetFaithPurchaseIndex@CvPlayer@@QBEHXZ	; CvPlayer::GetFaithPurchaseIndex
	mov	DWORD PTR _eBuilding$224038[ebp], eax

; 546  : 			CvBuildingEntry *pkBuilding = GC.getBuildingInfo(eBuilding);

	mov	edx, DWORD PTR _eBuilding$224038[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuilding$224040[ebp], eax

; 547  : 			if (pkBuilding)

	cmp	DWORD PTR _pkBuilding$224040[ebp], 0
	je	SHORT $LN9@DoPlayerTu

; 548  : 			{
; 549  : 				szItemName = pkBuilding->GetDescriptionKey();

	mov	ecx, DWORD PTR _pkBuilding$224040[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T231825[ebp], eax
	cmp	DWORD PTR $T231825[ebp], 0
	je	SHORT $LN138@DoPlayerTu
	mov	eax, DWORD PTR $T231825[ebp]
	push	eax
	lea	ecx, DWORD PTR _szItemName$[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN9@DoPlayerTu
$LN138@DoPlayerTu:
	lea	ecx, DWORD PTR _szItemName$[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN9@DoPlayerTu:

; 550  : 			}
; 551  : 
; 552  : 			if (!kPlayer.IsCanPurchaseAnyCity(false, false, NO_UNIT, eBuilding, YIELD_FAITH))

	push	5
	mov	ecx, DWORD PTR _eBuilding$224038[ebp]
	push	ecx
	push	-1
	push	0
	push	0
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z ; CvPlayer::IsCanPurchaseAnyCity
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN8@DoPlayerTu

; 553  : 			{
; 554  : 				bSelectionStillValid = false;

	mov	BYTE PTR _bSelectionStillValid$[ebp], 0

; 555  : 			}
; 556  : 			else

	jmp	$LN23@DoPlayerTu
$LN8@DoPlayerTu:

; 557  : 			{
; 558  : 				if (kPlayer.IsCanPurchaseAnyCity(true, true /* Check faith balance */, NO_UNIT, eBuilding, YIELD_FAITH))

	push	5
	mov	eax, DWORD PTR _eBuilding$224038[ebp]
	push	eax
	push	-1
	push	1
	push	1
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z ; CvPlayer::IsCanPurchaseAnyCity
	movzx	ecx, al
	test	ecx, ecx
	je	$LN23@DoPlayerTu

; 559  : 				{
; 560  : 					CvCity *pCity = CvReligionAIHelpers::GetBestCityFaithBuildingPurchase(kPlayer, eBuilding, eReligion);

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	eax, DWORD PTR _eBuilding$224038[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	push	ecx
	call	?GetBestCityFaithBuildingPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4BuildingTypes@@W4ReligionTypes@@@Z ; CvReligionAIHelpers::GetBestCityFaithBuildingPurchase
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pCity$224045[ebp], eax

; 561  : 					if (pCity)

	cmp	DWORD PTR _pCity$224045[ebp], 0
	je	$LN5@DoPlayerTu

; 562  : 					{
; 563  : 						pCity->Purchase(NO_UNIT, eBuilding, NO_PROJECT, YIELD_FAITH);

	push	5
	push	-1
	mov	edx, DWORD PTR _eBuilding$224038[ebp]
	push	edx
	push	-1
	mov	ecx, DWORD PTR _pCity$224045[ebp]
	call	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::Purchase

; 564  : 
; 565  : 						CvNotifications* pNotifications = kPlayer.GetNotifications();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$224047[ebp], eax

; 566  : 						if(pNotifications)

	cmp	DWORD PTR _pNotifications$224047[ebp], 0
	je	$LN4@DoPlayerTu

; 567  : 						{
; 568  : 							CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_AUTOMATIC_FAITH_PURCHASE", szItemName, pCity->getNameKey());

	mov	ecx, DWORD PTR _pCity$224045[ebp]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	DWORD PTR $T231671[ebp], eax
	lea	eax, DWORD PTR $T231671[ebp]
	push	eax
	lea	ecx, DWORD PTR _szItemName$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CO@BNBNHNPD@TXT_KEY_NOTIFICATION_AUTOMATIC_F@
	lea	edx, DWORD PTR _strBuffer$224049[ebp]
	push	edx
	call	??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z ; GetLocalizedText<CvString,char const *>
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH

; 569  : 							CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_AUTOMATIC_FAITH_PURCHASE");

	push	OFFSET ??_C@_0DG@BPIOFBCA@TXT_KEY_NOTIFICATION_SUMMARY_AUT@
	lea	eax, DWORD PTR _strSummary$224052[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH

; 570  : 							pNotifications->Add(NOTIFICATION_CAN_BUILD_MISSIONARY, strBuffer, strSummary, -1, -1, -1);

	lea	ecx, DWORD PTR _strSummary$224052[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T231829[ebp], eax
	push	-1
	push	-1
	push	-1
	push	-1
	mov	ecx, DWORD PTR $T231829[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strBuffer$224049[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	-1487612968				; a754d3d8H
	mov	ecx, DWORD PTR _pNotifications$224047[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 571  : 						}

	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR _strSummary$224052[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _strBuffer$224049[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN4@DoPlayerTu:

; 572  : 					}
; 573  : 					else

	jmp	SHORT $LN23@DoPlayerTu
$LN5@DoPlayerTu:

; 574  : 					{
; 575  : 						bSelectionStillValid = false;

	mov	BYTE PTR _bSelectionStillValid$[ebp], 0
$LN23@DoPlayerTu:

; 576  : 					}
; 577  : 				}
; 578  : 			}
; 579  : 		}
; 580  : 		break;
; 581  : 	}
; 582  : 
; 583  : 	if (!bSelectionStillValid)

	movzx	edx, BYTE PTR _bSelectionStillValid$[ebp]
	test	edx, edx
	jne	$LN2@DoPlayerTu

; 584  : 	{
; 585  : 		CvNotifications* pNotifications = kPlayer.GetNotifications();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$224056[ebp], eax

; 586  : 		if(pNotifications)

	cmp	DWORD PTR _pNotifications$224056[ebp], 0
	je	$LN1@DoPlayerTu

; 587  : 		{
; 588  : 			CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_NEED_NEW_AUTOMATIC_FAITH_SELECTION", szItemName);

	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T231672[ebp], esp
	mov	DWORD PTR $T231845[ebp], eax
	lea	ecx, DWORD PTR _szItemName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T231845[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T231845[ebp]
	mov	DWORD PTR tv536[ebp], edx
	push	OFFSET ??_C@_0DI@MOLCLMEP@TXT_KEY_NOTIFICATION_NEED_NEW_AU@
	lea	eax, DWORD PTR _strBuffer$224058[ebp]
	push	eax
	call	??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z ; GetLocalizedText<CvString>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv537[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH

; 589  : 			CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_NEED_NEW_AUTOMATIC_FAITH_SELECTION");

	push	OFFSET ??_C@_0EA@CIMBFLIJ@TXT_KEY_NOTIFICATION_SUMMARY_NEE@
	lea	ecx, DWORD PTR _strSummary$224067[ebp]
	push	ecx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH

; 590  : 			pNotifications->Add(NOTIFICATION_AUTOMATIC_FAITH_PURCHASE_STOPPED, strBuffer, strSummary, -1, -1, -1);

	lea	ecx, DWORD PTR _strSummary$224067[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T231849[ebp], eax
	push	-1
	push	-1
	push	-1
	push	-1
	mov	edx, DWORD PTR $T231849[ebp]
	push	edx
	lea	ecx, DWORD PTR _strBuffer$224058[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	-2062740077				; 850d1593H
	mov	ecx, DWORD PTR _pNotifications$224056[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 591  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR _strSummary$224067[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _strBuffer$224058[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@DoPlayerTu:

; 592  : 
; 593  : 		gDLL->SendFaithPurchase(kPlayer.GetID(), NO_AUTOMATIC_FAITH_PURCHASE, 0);

	mov	eax, DWORD PTR $T231864[ebp]
	mov	DWORD PTR tv512[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv512[ebp], ecx
	mov	edx, DWORD PTR _kPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T231873[ebp], eax
	push	0
	push	0
	mov	ecx, DWORD PTR $T231873[ebp]
	push	ecx
	mov	edx, DWORD PTR tv512[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv512[ebp]
	mov	edx, DWORD PTR [eax+116]
	call	edx
$LN2@DoPlayerTu:

; 594  : 	}
; 595  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _szItemName$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$0:
	lea	ecx, DWORD PTR _strBuffer$223958[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$1:
	lea	ecx, DWORD PTR _strSummary$223961[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$2:
	lea	ecx, DWORD PTR _strBuffer$223970[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$3:
	lea	ecx, DWORD PTR _strSummary$223973[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$4:
	lea	ecx, DWORD PTR _strBuffer$223990[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$5:
	lea	ecx, DWORD PTR _strSummary$223993[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$6:
	lea	ecx, DWORD PTR _szItemName$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$7:
	lea	ecx, DWORD PTR $T231668[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$8:
	lea	ecx, DWORD PTR $T231669[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$9:
	lea	ecx, DWORD PTR _strBuffer$224022[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$10:
	lea	ecx, DWORD PTR _strSummary$224033[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$11:
	lea	ecx, DWORD PTR _strBuffer$224049[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$12:
	lea	ecx, DWORD PTR _strSummary$224052[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$14:
	lea	ecx, DWORD PTR _strBuffer$224058[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$15:
	lea	ecx, DWORD PTR _strSummary$224067[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-628]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z ENDP	; CvGameReligions::DoPlayerTurn
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1String@Localization@@UAE@XZ:PROC
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z:PROC
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z:PROC
EXTRN	__imp_?Lookup@Localization@@YA?AVString@1@PBD@Z:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?GetLocalizedText@@YA?AVCvString@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$1
__ehfuncinfo$?GetLocalizedText@@YA?AVCvString@@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
xdata$x	ENDS
;	COMDAT ?GetLocalizedText@@YA?AVCvString@@PBD@Z
_TEXT	SEGMENT
$T231890 = -140						; size = 4
_str$ = -136						; size = 28
__$ArrayPad$ = -108					; size = 4
_bytes$ = -104						; size = 4
_text$ = -100						; size = 80
_szComposedString$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_szString$ = 12						; size = 4
?GetLocalizedText@@YA?AVCvString@@PBD@Z PROC		; GetLocalizedText, COMDAT

; 489  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T231890[ebp], 0

; 490  : 	Localization::String text = Localization::Lookup(szString);

	mov	eax, DWORD PTR _szString$[ebp]
	push	eax
	lea	ecx, DWORD PTR _text$[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 491  : 
; 492  : 	size_t bytes = 0;

	mov	DWORD PTR _bytes$[ebp], 0

; 493  : 	const char* szComposedString = text.toUTF8(bytes);

	push	1
	lea	edx, DWORD PTR _bytes$[ebp]
	push	edx
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z
	mov	DWORD PTR _szComposedString$[ebp], eax

; 494  : 	CvString str;

	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 495  : 	str.assign(szComposedString, bytes);

	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szComposedString$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z

; 496  : 	return str;

	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T231890[ebp]
	or	eax, 1
	mov	DWORD PTR $T231890[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 497  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$0:
	lea	ecx, DWORD PTR _text$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$2:
	mov	eax, DWORD PTR $T231890[ebp]
	and	eax, 1
	je	$LN6@GetLocaliz
	and	DWORD PTR $T231890[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN6@GetLocaliz:
	ret	0
__ehhandler$?GetLocalizedText@@YA?AVCvString@@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetLocalizedText@@YA?AVCvString@@PBD@Z ENDP		; GetLocalizedText
PUBLIC	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >
PUBLIC	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
PUBLIC	?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailablePantheonBeliefs
PUBLIC	??_C@_0BH@IEICLOEM@PlayerCanFoundPantheon?$AA@	; `string'
PUBLIC	?GetNumPantheonsCreated@CvGameReligions@@QBEHXZ	; CvGameReligions::GetNumPantheonsCreated
PUBLIC	?HasCreatedReligion@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasCreatedReligion
PUBLIC	?HasCreatedPantheon@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasCreatedPantheon
EXTRN	??1CvLuaArgsHandle@@QAE@XZ:PROC			; CvLuaArgsHandle::~CvLuaArgsHandle
EXTRN	?CallTestAll@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z:PROC ; LuaSupport::CallTestAll
EXTRN	??0CvLuaArgsHandle@@QAE@XZ:PROC			; CvLuaArgsHandle::CvLuaArgsHandle
EXTRN	?getMaxActiveReligions@CvWorldInfo@@QBEHXZ:PROC	; CvWorldInfo::getMaxActiveReligions
EXTRN	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ:PROC	; CvMap::getWorldInfo
;	COMDAT ??_C@_0BH@IEICLOEM@PlayerCanFoundPantheon?$AA@
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BH@IEICLOEM@PlayerCanFoundPantheon?$AA@ DB 'PlayerCanFoundPantheon'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z$2
__ehfuncinfo$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z
_TEXT	SEGMENT
tv168 = -124						; size = 4
tv157 = -120						; size = 4
_this$ = -116						; size = 4
$T231948 = -80						; size = 4
$T231944 = -76						; size = 4
$T231937 = -72						; size = 4
$T231933 = -68						; size = 4
$T231923 = -64						; size = 4
$T231914 = -60						; size = 16
$T231913 = -41						; size = 1
$T231912 = -40						; size = 4
_bResult$224091 = -33					; size = 1
_args$224090 = -32					; size = 4
_iFaith$ = -28						; size = 4
_pkScriptSystem$ = -24					; size = 4
_kPlayer$ = -20						; size = 4
_it$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_bCheckFaithTotal$ = 12					; size = 1
?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z PROC ; CvGameReligions::CanCreatePantheon, COMDAT
; _this$ = ecx

; 599  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 112				; 00000070H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 600  : 	if(ePlayer == NO_PLAYER)

	cmp	DWORD PTR _ePlayer$[ebp], -1
	jne	SHORT $LN19@CanCreateP

; 601  : 		return FOUNDING_INVALID_PLAYER;

	mov	eax, 5
	jmp	$LN15@CanCreateP

; 602  : 
; 603  : 	CvPlayer& kPlayer = GET_PLAYER(ePlayer);

$LN19@CanCreateP:
	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 604  : 	const int iFaith = kPlayer.GetFaith();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	mov	DWORD PTR _iFaith$[ebp], eax

; 605  : 
; 606  : 	if(kPlayer.isMinorCiv())

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN13@CanCreateP

; 607  : 	{
; 608  : 		return FOUNDING_INVALID_PLAYER;

	mov	eax, 5
	jmp	$LN15@CanCreateP
$LN13@CanCreateP:

; 609  : 	}
; 610  : 
; 611  : 	if(HasCreatedPantheon(ePlayer) || HasCreatedReligion(ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasCreatedPantheon@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasCreatedPantheon
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@CanCreateP
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasCreatedReligion@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasCreatedReligion
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN12@CanCreateP
$LN11@CanCreateP:

; 612  : 	{
; 613  : 		return FOUNDING_PLAYER_ALREADY_CREATED_PANTHEON;

	mov	eax, 7
	jmp	$LN15@CanCreateP
$LN12@CanCreateP:

; 614  : 	}
; 615  : 
; 616  : 	if(bCheckFaithTotal && iFaith < GetMinimumFaithNextPantheon())

	movzx	eax, BYTE PTR _bCheckFaithTotal$[ebp]
	test	eax, eax
	je	SHORT $LN10@CanCreateP
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+5264]
	mov	DWORD PTR $T231923[ebp], edx
	mov	eax, DWORD PTR _iFaith$[ebp]
	cmp	eax, DWORD PTR $T231923[ebp]
	jge	SHORT $LN10@CanCreateP

; 617  : 	{
; 618  : 		return FOUNDING_NOT_ENOUGH_FAITH;

	mov	eax, 3
	jmp	$LN15@CanCreateP
$LN10@CanCreateP:

; 619  : 	}
; 620  : 
; 621  : 	// Has a religion been enhanced yet (and total number of religions/pantheons is equal to number of religions allowed)?
; 622  : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 623  : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 624  : #else
; 625  : 	ReligionList::const_iterator it;
; 626  : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _it$[ebp], edx
	jmp	SHORT $LN25@CanCreateP
$LN8@CanCreateP:
	mov	eax, DWORD PTR _it$[ebp]
	add	eax, 328				; 00000148H
	mov	DWORD PTR _it$[ebp], eax
$LN25@CanCreateP:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 328				; 00000148H
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax]
	cmp	DWORD PTR _it$[ebp], edx
	je	SHORT $LN7@CanCreateP

; 627  : #endif
; 628  : 	{
; 629  : 		if(it->m_bEnhanced)

	mov	ecx, DWORD PTR _it$[ebp]
	movzx	edx, BYTE PTR [ecx+21]
	test	edx, edx
	je	SHORT $LN6@CanCreateP

; 630  : 		{
; 631  : 			if (GetNumPantheonsCreated() >= GC.getMap().getWorldInfo().getMaxActiveReligions())

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T231933[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumPantheonsCreated@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumPantheonsCreated
	mov	esi, eax
	mov	ecx, DWORD PTR $T231933[ebp]
	call	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ ; CvMap::getWorldInfo
	mov	ecx, eax
	call	?getMaxActiveReligions@CvWorldInfo@@QBEHXZ ; CvWorldInfo::getMaxActiveReligions
	cmp	esi, eax
	jl	SHORT $LN6@CanCreateP

; 632  : 			{
; 633  : 				return FOUNDING_RELIGION_ENHANCED;

	mov	eax, 9
	jmp	$LN15@CanCreateP
$LN6@CanCreateP:

; 634  : 			}
; 635  : 		}
; 636  : 	}

	jmp	SHORT $LN8@CanCreateP
$LN7@CanCreateP:

; 637  : 
; 638  : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	ecx, DWORD PTR $T231937[ebp]
	mov	DWORD PTR tv157[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv157[ebp], edx
	mov	eax, DWORD PTR tv157[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv157[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR _pkScriptSystem$[ebp], eax

; 639  : 	if(pkScriptSystem) 

	cmp	DWORD PTR _pkScriptSystem$[ebp], 0
	je	$LN4@CanCreateP

; 640  : 	{
; 641  : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$224090[ebp]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 642  : 		args->Push(ePlayer);

	mov	ecx, DWORD PTR _args$224090[ebp]
	mov	DWORD PTR tv168[ebp], ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	eax, DWORD PTR tv168[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv168[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 643  : 
; 644  : 		// Attempt to execute the game events.
; 645  : 		// Will return false if there are no registered listeners.
; 646  : 		bool bResult = false;

	mov	BYTE PTR _bResult$224091[ebp], 0

; 647  : 		if (LuaSupport::CallTestAll(pkScriptSystem, "PlayerCanFoundPantheon", args.get(), bResult))

	mov	ecx, DWORD PTR _args$224090[ebp]
	mov	DWORD PTR $T231944[ebp], ecx
	lea	edx, DWORD PTR _bResult$224091[ebp]
	push	edx
	mov	eax, DWORD PTR $T231944[ebp]
	push	eax
	push	OFFSET ??_C@_0BH@IEICLOEM@PlayerCanFoundPantheon?$AA@
	mov	ecx, DWORD PTR _pkScriptSystem$[ebp]
	push	ecx
	call	?CallTestAll@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallTestAll
	add	esp, 16					; 00000010H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@CanCreateP

; 648  : 		{
; 649  : 			if (bResult == false) 

	movzx	eax, BYTE PTR _bResult$224091[ebp]
	test	eax, eax
	jne	SHORT $LN3@CanCreateP

; 650  : 			{
; 651  : 				return FOUNDING_INVALID_PLAYER;

	mov	DWORD PTR $T231912[ebp], 5
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _args$224090[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
	mov	eax, DWORD PTR $T231912[ebp]
	jmp	SHORT $LN15@CanCreateP
$LN3@CanCreateP:

; 652  : 			}
; 653  : 		}
; 654  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _args$224090[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN4@CanCreateP:

; 655  : 
; 656  : #ifdef AUI_RELIGION_FIX_NO_BELIEFS_AVAILABLE_CHECK_FOR_NON_PANTHEON_MOVED
; 657  : 	if (!IsAnyAvailablePantheonBeliefs())
; 658  : #else
; 659  : 	if (GetAvailablePantheonBeliefs().size() == 0)

	lea	ecx, DWORD PTR $T231914[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailablePantheonBeliefs
	mov	DWORD PTR $T231948[ebp], eax
	mov	edx, DWORD PTR $T231948[ebp]
	mov	eax, DWORD PTR $T231948[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	BYTE PTR $T231913[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T231914[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	movzx	edx, BYTE PTR $T231913[ebp]
	test	edx, edx
	je	SHORT $LN1@CanCreateP

; 660  : #endif
; 661  : 		return FOUNDING_NO_BELIEFS_AVAILABLE;

	mov	eax, 10					; 0000000aH
	jmp	SHORT $LN15@CanCreateP
$LN1@CanCreateP:

; 662  : 
; 663  : 	return FOUNDING_OK;

	xor	eax, eax
$LN15@CanCreateP:

; 664  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z$0:
	lea	ecx, DWORD PTR _args$224090[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__unwindfunclet$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z$2:
	lea	ecx, DWORD PTR $T231914[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-120]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z ENDP ; CvGameReligions::CanCreatePantheon
PUBLIC	?IsPreferredByCivInGame@CvGameReligions@@AAE_NW4ReligionTypes@@@Z ; CvGameReligions::IsPreferredByCivInGame
PUBLIC	??_C@_0BD@JFJEDBCO@GetReligionToFound?$AA@	; `string'
PUBLIC	?HasBeenFounded@CvGameReligions@@AAE_NW4ReligionTypes@@@Z ; CvGameReligions::HasBeenFounded
PUBLIC	?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionToFound
EXTRN	?getNumReligionInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumReligionInfos
EXTRN	?CallAccumulator@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AAH@Z:PROC ; LuaSupport::CallAccumulator
EXTRN	?GetReligion@CvCivilizationInfo@@QBE?AW4ReligionTypes@@XZ:PROC ; CvCivilizationInfo::GetReligion
EXTRN	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ:PROC ; CvPlayer::getCivilizationInfo
;	COMDAT ??_C@_0BD@JFJEDBCO@GetReligionToFound?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvinfos.h
CONST	SEGMENT
??_C@_0BD@JFJEDBCO@GetReligionToFound?$AA@ DB 'GetReligionToFound', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z$0
__ehfuncinfo$?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
tv138 = -104						; size = 4
tv131 = -100						; size = 4
tv92 = -96						; size = 4
tv81 = -92						; size = 4
_this$ = -88						; size = 4
$T232079 = -84						; size = 4
$T232075 = -80						; size = 4
$T232071 = -76						; size = 4
$T232067 = -72						; size = 4
$T232063 = -68						; size = 4
$T232050 = -64						; size = 4
$T232046 = -60						; size = 4
_eReligion$224426 = -56					; size = 4
_pEntry$224428 = -52					; size = 4
_iI$224422 = -48					; size = 4
_eReligion$224414 = -44					; size = 4
_pEntry$224416 = -40					; size = 4
_iI$224410 = -36					; size = 4
_pEntry$224408 = -32					; size = 4
_iValue$224402 = -28					; size = 4
_args$224401 = -24					; size = 4
_pkScriptSystem$ = -20					; size = 4
_eCivReligion$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvGameReligions::GetReligionToFound, COMDAT
; _this$ = ecx

; 668  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 669  : 	ReligionTypes eCivReligion;
; 670  : 	eCivReligion = GET_PLAYER(ePlayer).getCivilizationInfo().GetReligion();

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T232046[ebp], eax
	mov	ecx, DWORD PTR $T232046[ebp]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?GetReligion@CvCivilizationInfo@@QBE?AW4ReligionTypes@@XZ ; CvCivilizationInfo::GetReligion
	mov	DWORD PTR _eCivReligion$[ebp], eax

; 671  : 
; 672  : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	ecx, DWORD PTR $T232050[ebp]
	mov	DWORD PTR tv81[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv81[ebp], edx
	mov	eax, DWORD PTR tv81[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv81[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR _pkScriptSystem$[ebp], eax

; 673  : 	if(pkScriptSystem) 

	cmp	DWORD PTR _pkScriptSystem$[ebp], 0
	je	$LN18@GetReligio

; 674  : 	{
; 675  : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$224401[ebp]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 676  : 		args->Push(ePlayer);

	mov	ecx, DWORD PTR _args$224401[ebp]
	mov	DWORD PTR tv92[ebp], ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	eax, DWORD PTR tv92[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv92[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 677  : 		args->Push(eCivReligion);

	mov	ecx, DWORD PTR _args$224401[ebp]
	mov	DWORD PTR tv131[ebp], ecx
	mov	edx, DWORD PTR _eCivReligion$[ebp]
	push	edx
	mov	eax, DWORD PTR tv131[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv131[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 678  : 		args->Push(HasBeenFounded(eCivReligion));

	mov	ecx, DWORD PTR _args$224401[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	edx, DWORD PTR _eCivReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBeenFounded@CvGameReligions@@AAE_NW4ReligionTypes@@@Z ; CvGameReligions::HasBeenFounded
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR tv138[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv138[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax

; 679  : 
; 680  : 		int iValue = 0;

	mov	DWORD PTR _iValue$224402[ebp], 0

; 681  : 		if (LuaSupport::CallAccumulator(pkScriptSystem, "GetReligionToFound", args.get(), iValue)) 

	mov	ecx, DWORD PTR _args$224401[ebp]
	mov	DWORD PTR $T232063[ebp], ecx
	lea	edx, DWORD PTR _iValue$224402[ebp]
	push	edx
	mov	eax, DWORD PTR $T232063[ebp]
	push	eax
	push	OFFSET ??_C@_0BD@JFJEDBCO@GetReligionToFound?$AA@
	mov	ecx, DWORD PTR _pkScriptSystem$[ebp]
	push	ecx
	call	?CallAccumulator@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AAH@Z ; LuaSupport::CallAccumulator
	add	esp, 16					; 00000010H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN17@GetReligio

; 682  : 		{
; 683  : #ifdef AUI_WARNING_FIXES
; 684  : 			if (uint(iValue) < GC.getNumReligionInfos() && iValue != RELIGION_PANTHEON)
; 685  : #else
; 686  : 			if (iValue >= 0 && iValue < GC.getNumReligionInfos() && iValue != RELIGION_PANTHEON)

	cmp	DWORD PTR _iValue$224402[ebp], 0
	jl	SHORT $LN17@GetReligio
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumReligionInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumReligionInfos
	cmp	DWORD PTR _iValue$224402[ebp], eax
	jge	SHORT $LN17@GetReligio
	cmp	DWORD PTR _iValue$224402[ebp], 0
	je	SHORT $LN17@GetReligio

; 687  : #endif
; 688  : 			{
; 689  : 				eCivReligion = (ReligionTypes)iValue;

	mov	eax, DWORD PTR _iValue$224402[ebp]
	mov	DWORD PTR _eCivReligion$[ebp], eax
$LN17@GetReligio:

; 690  : 			}
; 691  : 		}
; 692  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _args$224401[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN18@GetReligio:

; 693  : 
; 694  : 	if(!HasBeenFounded(eCivReligion))

	mov	ecx, DWORD PTR _eCivReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBeenFounded@CvGameReligions@@AAE_NW4ReligionTypes@@@Z ; CvGameReligions::HasBeenFounded
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN15@GetReligio

; 695  : 	{
; 696  : 		CvReligionEntry* pEntry = GC.getReligionInfo(eCivReligion);

	mov	eax, DWORD PTR _eCivReligion$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo
	mov	DWORD PTR _pEntry$224408[ebp], eax

; 697  : 		if(pEntry)

	cmp	DWORD PTR _pEntry$224408[ebp], 0
	je	SHORT $LN15@GetReligio

; 698  : 		{
; 699  : 			return eCivReligion;

	mov	eax, DWORD PTR _eCivReligion$[ebp]
	jmp	$LN19@GetReligio
$LN15@GetReligio:

; 700  : 		}
; 701  : 	}
; 702  : 
; 703  : 	// Need to "borrow" from another civ.  Loop through all religions looking for one that is eligible
; 704  : #ifdef AUI_WARNING_FIXES
; 705  : 	for (uint iI = 0; iI < GC.getNumReligionInfos(); iI++)
; 706  : #else
; 707  : 	for(int iI = 0; iI < GC.getNumReligionInfos(); iI++)

	mov	DWORD PTR _iI$224410[ebp], 0
	jmp	SHORT $LN13@GetReligio
$LN12@GetReligio:
	mov	ecx, DWORD PTR _iI$224410[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$224410[ebp], ecx
$LN13@GetReligio:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumReligionInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumReligionInfos
	cmp	DWORD PTR _iI$224410[ebp], eax
	jge	SHORT $LN11@GetReligio

; 708  : #endif
; 709  : 	{
; 710  : 		ReligionTypes eReligion = (ReligionTypes)iI;

	mov	edx, DWORD PTR _iI$224410[ebp]
	mov	DWORD PTR _eReligion$224414[ebp], edx

; 711  : 		CvReligionEntry* pEntry = GC.getReligionInfo(eReligion);

	mov	eax, DWORD PTR _eReligion$224414[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo
	mov	DWORD PTR _pEntry$224416[ebp], eax

; 712  : 		if(!pEntry)

	cmp	DWORD PTR _pEntry$224416[ebp], 0
	jne	SHORT $LN10@GetReligio

; 713  : 		{
; 714  : 			continue;

	jmp	SHORT $LN12@GetReligio
$LN10@GetReligio:

; 715  : 		}
; 716  : 
; 717  : 		if(pEntry->GetID() == RELIGION_PANTHEON)

	mov	ecx, DWORD PTR _pEntry$224416[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T232067[ebp], edx
	cmp	DWORD PTR $T232067[ebp], 0
	jne	SHORT $LN9@GetReligio

; 718  : 		{
; 719  : 			continue;

	jmp	SHORT $LN12@GetReligio
$LN9@GetReligio:

; 720  : 		}
; 721  : 
; 722  : 		if(HasBeenFounded((ReligionTypes)pEntry->GetID()))

	mov	eax, DWORD PTR _pEntry$224416[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T232071[ebp], ecx
	mov	edx, DWORD PTR $T232071[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBeenFounded@CvGameReligions@@AAE_NW4ReligionTypes@@@Z ; CvGameReligions::HasBeenFounded
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@GetReligio

; 723  : 		{
; 724  : 			continue;

	jmp	SHORT $LN12@GetReligio
$LN8@GetReligio:

; 725  : 		}
; 726  : 
; 727  : 		if(IsPreferredByCivInGame(eReligion))

	mov	ecx, DWORD PTR _eReligion$224414[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsPreferredByCivInGame@CvGameReligions@@AAE_NW4ReligionTypes@@@Z ; CvGameReligions::IsPreferredByCivInGame
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN7@GetReligio

; 728  : 		{
; 729  : 			continue;

	jmp	SHORT $LN12@GetReligio
$LN7@GetReligio:

; 730  : 		}
; 731  : 
; 732  : 		return (eReligion);

	mov	eax, DWORD PTR _eReligion$224414[ebp]
	jmp	SHORT $LN19@GetReligio

; 733  : 	}

	jmp	$LN12@GetReligio
$LN11@GetReligio:

; 734  : 
; 735  : 	// Will have to use a religion that someone else prefers
; 736  : #ifdef AUI_WARNING_FIXES
; 737  : 	for (uint iI = 0; iI < GC.getNumReligionInfos(); iI++)
; 738  : #else
; 739  : 	for(int iI = 0; iI < GC.getNumReligionInfos(); iI++)

	mov	DWORD PTR _iI$224422[ebp], 0
	jmp	SHORT $LN6@GetReligio
$LN5@GetReligio:
	mov	eax, DWORD PTR _iI$224422[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$224422[ebp], eax
$LN6@GetReligio:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumReligionInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumReligionInfos
	cmp	DWORD PTR _iI$224422[ebp], eax
	jge	SHORT $LN4@GetReligio

; 740  : #endif
; 741  : 	{
; 742  : 		ReligionTypes eReligion = (ReligionTypes)iI;

	mov	ecx, DWORD PTR _iI$224422[ebp]
	mov	DWORD PTR _eReligion$224426[ebp], ecx

; 743  : 		CvReligionEntry* pEntry = GC.getReligionInfo(eReligion);

	mov	edx, DWORD PTR _eReligion$224426[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo
	mov	DWORD PTR _pEntry$224428[ebp], eax

; 744  : 		if(!pEntry)

	cmp	DWORD PTR _pEntry$224428[ebp], 0
	jne	SHORT $LN3@GetReligio

; 745  : 		{
; 746  : 			continue;

	jmp	SHORT $LN5@GetReligio
$LN3@GetReligio:

; 747  : 		}
; 748  : 
; 749  : 		if(pEntry->GetID() == RELIGION_PANTHEON)

	mov	eax, DWORD PTR _pEntry$224428[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T232075[ebp], ecx
	cmp	DWORD PTR $T232075[ebp], 0
	jne	SHORT $LN2@GetReligio

; 750  : 		{
; 751  : 			continue;

	jmp	SHORT $LN5@GetReligio
$LN2@GetReligio:

; 752  : 		}
; 753  : 
; 754  : 		if(HasBeenFounded((ReligionTypes)pEntry->GetID()))

	mov	edx, DWORD PTR _pEntry$224428[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T232079[ebp], eax
	mov	ecx, DWORD PTR $T232079[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasBeenFounded@CvGameReligions@@AAE_NW4ReligionTypes@@@Z ; CvGameReligions::HasBeenFounded
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetReligio

; 755  : 		{
; 756  : 			continue;

	jmp	SHORT $LN5@GetReligio
$LN1@GetReligio:

; 757  : 		}
; 758  : 
; 759  : 		return (eReligion);

	mov	eax, DWORD PTR _eReligion$224426[ebp]
	jmp	SHORT $LN19@GetReligio

; 760  : 	}

	jmp	SHORT $LN5@GetReligio
$LN4@GetReligio:

; 761  : 
; 762  : 	return NO_RELIGION;

	or	eax, -1
$LN19@GetReligio:

; 763  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _args$224401[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__ehhandler$?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvGameReligions::GetReligionToFound
PUBLIC	??1CvReligion@@QAE@XZ				; CvReligion::~CvReligion
PUBLIC	?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z ; CvGameReligions::LogReligionMessage
PUBLIC	??_C@_0BF@CFACEIDB@?0?5PANTHEON?5FOUNDED?0?5?$AA@ ; `string'
PUBLIC	??_C@_0CO@GFBGMLAH@TXT_KEY_NOTIFICATION_PANTHEON_FO@ ; `string'
PUBLIC	??_C@_0DE@EILCMPBB@TXT_KEY_NOTIFICATION_PANTHEON_FO@ ; `string'
PUBLIC	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
PUBLIC	??_C@_0CG@BIKGNGGA@TXT_KEY_NOTIFICATION_PANTHEON_FO@ ; `string'
PUBLIC	??_C@_0CI@PMDLGDPK@TXT_KEY_NOTIFICATION_PANTHEON_FO@ ; `string'
PUBLIC	??_C@_0BA@LCGLGODN@PantheonFounded?$AA@		; `string'
PUBLIC	?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z ; FStaticVector<CvReligion,16,0,297,0>::push_back
PUBLIC	__$ArrayPad$
EXTRN	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ:PROC ; CvGame::getActivePlayer
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationShortDescription
EXTRN	?getLogging@CvGlobals@@QAE_NXZ:PROC		; CvGlobals::getLogging
EXTRN	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isHasMet
EXTRN	?m_aTeams@CvTeam@@1PAV1@A:DWORD			; CvTeam::m_aTeams
EXTRN	__imp_??0String@Localization@@QAE@PBD@Z:PROC
EXTRN	?addReplayMessage@CvGame@@QAEXW4ReplayMessageTypes@@W4PlayerTypes@@ABVCvString@@HH@Z:PROC ; CvGame::addReplayMessage
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDXZ:PROC
EXTRN	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationShortDescriptionKey
EXTRN	?getShortDescription@CvBeliefEntry@@QBEPBDXZ:PROC ; CvBeliefEntry::getShortDescription
EXTRN	?getBeliefInfo@CvGlobals@@QAEPAVCvBeliefEntry@@W4BeliefTypes@@@Z:PROC ; CvGlobals::getBeliefInfo
EXTRN	?getPopulation@CvCity@@QBEHXZ:PROC		; CvCity::getPopulation
EXTRN	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z:PROC ; LuaSupport::CallHook
EXTRN	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ:PROC	; CvPlayer::getCapitalCity
EXTRN	?UpdateReligion@CvPlayer@@QAEXXZ:PROC		; CvPlayer::UpdateReligion
EXTRN	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z:PROC ; CvReligionBeliefs::AddBelief
;	COMDAT ??_C@_0BF@CFACEIDB@?0?5PANTHEON?5FOUNDED?0?5?$AA@
CONST	SEGMENT
??_C@_0BF@CFACEIDB@?0?5PANTHEON?5FOUNDED?0?5?$AA@ DB ', PANTHEON FOUNDED,'
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@GFBGMLAH@TXT_KEY_NOTIFICATION_PANTHEON_FO@
CONST	SEGMENT
??_C@_0CO@GFBGMLAH@TXT_KEY_NOTIFICATION_PANTHEON_FO@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_PANTHEON_FOUNDED_UNKNOWN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@EILCMPBB@TXT_KEY_NOTIFICATION_PANTHEON_FO@
CONST	SEGMENT
??_C@_0DE@EILCMPBB@TXT_KEY_NOTIFICATION_PANTHEON_FO@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_PANTHEON_FOUNDED_ACTIVE_PLAYER', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BIKGNGGA@TXT_KEY_NOTIFICATION_PANTHEON_FO@
CONST	SEGMENT
??_C@_0CG@BIKGNGGA@TXT_KEY_NOTIFICATION_PANTHEON_FO@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_PANTHEON_FOUNDED', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@PMDLGDPK@TXT_KEY_NOTIFICATION_PANTHEON_FO@
CONST	SEGMENT
??_C@_0CI@PMDLGDPK@TXT_KEY_NOTIFICATION_PANTHEON_FO@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_PANTHEON_FOUNDED_S', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LCGLGODN@PantheonFounded?$AA@
CONST	SEGMENT
??_C@_0BA@LCGLGODN@PantheonFounded?$AA@ DB 'PantheonFounded', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$6
	DD	03H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$6
	DD	03H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$7
	DD	03H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$8
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z
_TEXT	SEGMENT
tv453 = -960						; size = 4
tv442 = -956						; size = 4
tv229 = -952						; size = 4
tv520 = -948						; size = 4
tv185 = -944						; size = 4
tv178 = -940						; size = 4
tv161 = -936						; size = 4
tv154 = -932						; size = 4
tv143 = -928						; size = 4
_this$ = -924						; size = 4
$T232260 = -920						; size = 4
$T232256 = -916						; size = 4
$T232252 = -912						; size = 4
$T232241 = -908						; size = 4
$T232228 = -904						; size = 4
$T232216 = -900						; size = 4
$T232200 = -896						; size = 4
$T232199 = -892						; size = 4
$T232188 = -888						; size = 4
$T232176 = -884						; size = 4
$T232163 = -880						; size = 4
$T232162 = -876						; size = 4
$T232153 = -872						; size = 4
$T232143 = -868						; size = 4
$T232136 = -864						; size = 4
$T232132 = -860						; size = 4
$T232125 = -856						; size = 4
$T232097 = -844						; size = 4
$T232096 = -840						; size = 4
$T232095 = -836						; size = 4
$T232094 = -832						; size = 4
$T232093 = -828						; size = 28
$T232092 = -800						; size = 28
$T232091 = -772						; size = 4
$T232090 = -768						; size = 4
$T232089 = -764						; size = 4
_strLogMsg$224495 = -760				; size = 28
_unknownFoundedText$224489 = -732			; size = 80
_kTeam$224486 = -648					; size = 4
_localizedText$224480 = -644				; size = 80
_pNotifications$224477 = -564				; size = 4
_eNotifyPlayer$224474 = -560				; size = 4
_kCurNotifyPlayer$224476 = -556				; size = 4
_iNotifyLoop$224470 = -552				; size = 4
_strSummary$224455 = -548				; size = 80
_replayText$224458 = -468				; size = 80
_bResult$224445 = -381					; size = 1
_args$224444 = -380					; size = 4
_iIncrement$ = -376					; size = 4
_newReligion$ = -372					; size = 328
__$ArrayPad$ = -44					; size = 4
_kGame$ = -40						; size = 4
_pBelief$ = -36						; size = 4
_pkScriptSystem$ = -32					; size = 4
_pEntry$ = -28						; size = 4
_pLoopCity$ = -24					; size = 4
_kPlayer$ = -20						; size = 4
_iLoop$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_eBelief$ = 12						; size = 4
?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z PROC ; CvGameReligions::FoundPantheon, COMDAT
; _this$ = ecx

; 767  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 948				; 000003b4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 768  : 	CvGame& kGame = GC.getGame();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _kGame$[ebp], eax

; 769  : 	CvPlayer& kPlayer = GET_PLAYER(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], ecx

; 770  : 
; 771  : 	CvReligion newReligion(RELIGION_PANTHEON, ePlayer, NULL, true);

	push	1
	push	0
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	push	0
	lea	ecx, DWORD PTR _newReligion$[ebp]
	call	??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z ; CvReligion::CvReligion
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 772  : 	newReligion.m_Beliefs.AddBelief(eBelief);

	mov	eax, DWORD PTR _eBelief$[ebp]
	push	eax
	lea	ecx, DWORD PTR _newReligion$[ebp+152]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief

; 773  : 
; 774  : 	// Found it
; 775  : 	m_CurrentReligions.push_back(newReligion);

	lea	ecx, DWORD PTR _newReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z ; FStaticVector<CvReligion,16,0,297,0>::push_back

; 776  : 
; 777  : 	// Update game systems
; 778  : 	kPlayer.UpdateReligion();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?UpdateReligion@CvPlayer@@QAEXXZ	; CvPlayer::UpdateReligion

; 779  : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 780  : 	kPlayer.doSelfConsistencyCheckAllCities();
; 781  : #endif
; 782  : 	kPlayer.ChangeFaith(-GetMinimumFaithNextPantheon());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+5264]
	mov	DWORD PTR $T232125[ebp], eax
	mov	ecx, DWORD PTR $T232125[ebp]
	neg	ecx
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?ChangeFaith@CvPlayer@@QAEXH@Z		; CvPlayer::ChangeFaith

; 783  : 
; 784  : 	int iIncrement = GC.getRELIGION_GAME_FAITH_DELTA_NEXT_PANTHEON();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7872
	mov	DWORD PTR _iIncrement$[ebp], edx

; 785  : 	iIncrement *= GC.getGame().getGameSpeedInfo().getTrainPercent();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T232132[ebp], eax
	mov	ecx, DWORD PTR $T232132[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getTrainPercent@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getTrainPercent
	imul	eax, DWORD PTR _iIncrement$[ebp]
	mov	DWORD PTR _iIncrement$[ebp], eax

; 786  : 	iIncrement /= 100;

	mov	eax, DWORD PTR _iIncrement$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iIncrement$[ebp], eax

; 787  : 	SetMinimumFaithNextPantheon(GetMinimumFaithNextPantheon() + iIncrement);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+5264]
	mov	DWORD PTR $T232136[ebp], eax
	mov	ecx, DWORD PTR $T232136[ebp]
	add	ecx, DWORD PTR _iIncrement$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+5264], ecx

; 788  : 
; 789  : #ifdef AUI_RELIGION_FIX_FOUND_PANTHEON_NULL_POINTER_DEREFERENCE
; 790  : 	CvCity* pCapitol = GET_PLAYER(ePlayer).getCapitalCity();
; 791  : 	if (pCapitol)
; 792  : 	{
; 793  : #endif
; 794  : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	eax, DWORD PTR $T232143[ebp]
	mov	DWORD PTR tv143[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv143[ebp], ecx
	mov	edx, DWORD PTR tv143[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv143[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR _pkScriptSystem$[ebp], eax

; 795  : 	if(pkScriptSystem) 

	cmp	DWORD PTR _pkScriptSystem$[ebp], 0
	je	$LN15@FoundPanth

; 796  : 	{
; 797  : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$224444[ebp]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 798  : 		args->Push(ePlayer);

	mov	eax, DWORD PTR _args$224444[ebp]
	mov	DWORD PTR tv154[ebp], eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv154[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv154[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 799  : #ifdef AUI_RELIGION_FIX_FOUND_PANTHEON_NULL_POINTER_DEREFERENCE
; 800  : 		args->Push(pCapitol->GetID());
; 801  : #else
; 802  : 		args->Push(GET_PLAYER(ePlayer).getCapitalCity()->GetID());

	mov	eax, DWORD PTR _args$224444[ebp]
	mov	DWORD PTR tv161[ebp], eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T232153[ebp], ecx
	mov	ecx, DWORD PTR $T232153[ebp]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR $T232162[ebp], eax
	mov	edx, DWORD PTR $T232162[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	DWORD PTR $T232163[ebp], eax
	mov	ecx, DWORD PTR $T232163[ebp]
	push	ecx
	mov	edx, DWORD PTR tv161[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv161[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 803  : #endif
; 804  : 		args->Push(RELIGION_PANTHEON);

	mov	eax, DWORD PTR _args$224444[ebp]
	mov	DWORD PTR tv178[ebp], eax
	push	0
	mov	ecx, DWORD PTR tv178[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv178[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 805  : 		args->Push(eBelief);

	mov	ecx, DWORD PTR _args$224444[ebp]
	mov	DWORD PTR tv185[ebp], ecx
	mov	edx, DWORD PTR _eBelief$[ebp]
	push	edx
	mov	eax, DWORD PTR tv185[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv185[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 806  : 
; 807  : 		bool bResult;
; 808  : 		LuaSupport::CallHook(pkScriptSystem, "PantheonFounded", args.get(), bResult);

	lea	ecx, DWORD PTR _bResult$224445[ebp]
	push	ecx
	mov	edx, DWORD PTR _args$224444[ebp]
	push	edx
	push	OFFSET ??_C@_0BA@LCGLGODN@PantheonFounded?$AA@
	mov	eax, DWORD PTR _pkScriptSystem$[ebp]
	push	eax
	call	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallHook
	add	esp, 16					; 00000010H

; 809  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _args$224444[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN15@FoundPanth:

; 810  : #ifdef AUI_RELIGION_FIX_FOUND_PANTHEON_NULL_POINTER_DEREFERENCE
; 811  : 	}
; 812  : #endif
; 813  : 
; 814  : 	// Spread the pantheon into each of their cities
; 815  : 	int iLoop;
; 816  : 	CvCity* pLoopCity;
; 817  : 	for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN14@FoundPanth
$LN13@FoundPanth:
	push	0
	lea	edx, DWORD PTR _iLoop$[ebp]
	push	edx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN14@FoundPanth:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	SHORT $LN12@FoundPanth

; 818  : 	{
; 819  : 		// Add enough pressure to make this the likely majority religion
; 820  : 		pLoopCity->GetCityReligions()->AddReligiousPressure(FOLLOWER_CHANGE_PANTHEON_FOUNDED, newReligion.m_eReligion, GC.getRELIGION_ATHEISM_PRESSURE_PER_POP() * pLoopCity->getPopulation() * 2);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7888
	mov	DWORD PTR $T232176[ebp], eax
	push	-1
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	imul	eax, DWORD PTR $T232176[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _newReligion$[ebp]
	push	ecx
	push	4
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?AddReligiousPressure@CvCityReligions@@QAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@HW4PlayerTypes@@@Z ; CvCityReligions::AddReligiousPressure

; 821  : 	}

	jmp	SHORT $LN13@FoundPanth
$LN12@FoundPanth:

; 822  : 
; 823  : 	// Send out messaging
; 824  : 	CvReligionEntry* pEntry = GC.getReligionInfo(newReligion.m_eReligion);

	mov	edx, DWORD PTR _newReligion$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo
	mov	DWORD PTR _pEntry$[ebp], eax

; 825  : 	CvBeliefEntry* pBelief = GC.getBeliefInfo(eBelief);

	mov	eax, DWORD PTR _eBelief$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBeliefInfo@CvGlobals@@QAEPAVCvBeliefEntry@@W4BeliefTypes@@@Z ; CvGlobals::getBeliefInfo
	mov	DWORD PTR _pBelief$[ebp], eax

; 826  : 	if(pEntry && pBelief)

	cmp	DWORD PTR _pEntry$[ebp], 0
	je	$LN11@FoundPanth
	cmp	DWORD PTR _pBelief$[ebp], 0
	je	$LN11@FoundPanth

; 827  : 	{
; 828  : 		//Add replay message.
; 829  : 		Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_PANTHEON_FOUNDED_S");

	push	OFFSET ??_C@_0CI@PMDLGDPK@TXT_KEY_NOTIFICATION_PANTHEON_FO@
	lea	ecx, DWORD PTR _strSummary$224455[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 830  : 		Localization::String replayText = Localization::Lookup("TXT_KEY_NOTIFICATION_PANTHEON_FOUNDED");

	push	OFFSET ??_C@_0CG@BIKGNGGA@TXT_KEY_NOTIFICATION_PANTHEON_FO@
	lea	edx, DWORD PTR _replayText$224458[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 831  : 		replayText << kPlayer.getCivilizationShortDescriptionKey() << pBelief->getShortDescription() << pBelief->GetDescriptionKey();

	mov	ecx, DWORD PTR _pBelief$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T232089[ebp], eax
	mov	ecx, DWORD PTR _pBelief$[ebp]
	call	?getShortDescription@CvBeliefEntry@@QBEPBDXZ ; CvBeliefEntry::getShortDescription
	mov	DWORD PTR $T232090[ebp], eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR $T232091[ebp], eax
	lea	eax, DWORD PTR $T232089[ebp]
	push	eax
	lea	ecx, DWORD PTR $T232090[ebp]
	push	ecx
	lea	edx, DWORD PTR $T232091[ebp]
	push	edx
	lea	eax, DWORD PTR _replayText$224458[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 832  : 
; 833  : 		kGame.addReplayMessage(REPLAY_MESSAGE_PANTHEON_FOUNDED, newReligion.m_eFounder, replayText.toUTF8());

	lea	ecx, DWORD PTR _replayText$224458[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T232188[ebp], eax
	cmp	DWORD PTR $T232188[ebp], 0
	je	SHORT $LN73@FoundPanth
	mov	ecx, DWORD PTR $T232188[ebp]
	mov	DWORD PTR tv520[ebp], ecx
	jmp	SHORT $LN74@FoundPanth
$LN73@FoundPanth:
	mov	DWORD PTR tv520[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN74@FoundPanth:
	mov	edx, DWORD PTR tv520[ebp]
	push	edx
	lea	ecx, DWORD PTR $T232092[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	push	-1
	push	-1
	lea	eax, DWORD PTR $T232092[ebp]
	push	eax
	mov	ecx, DWORD PTR _newReligion$[ebp+4]
	push	ecx
	push	6
	mov	ecx, DWORD PTR _kGame$[ebp]
	call	?addReplayMessage@CvGame@@QAEXW4ReplayMessageTypes@@W4PlayerTypes@@ABVCvString@@HH@Z ; CvGame::addReplayMessage
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T232092[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 834  : 
; 835  : 		for(int iNotifyLoop = 0; iNotifyLoop < MAX_MAJOR_CIVS; ++iNotifyLoop){

	mov	DWORD PTR _iNotifyLoop$224470[ebp], 0
	jmp	SHORT $LN10@FoundPanth
$LN9@FoundPanth:
	mov	edx, DWORD PTR _iNotifyLoop$224470[ebp]
	add	edx, 1
	mov	DWORD PTR _iNotifyLoop$224470[ebp], edx
$LN10@FoundPanth:
	cmp	DWORD PTR _iNotifyLoop$224470[ebp], 22	; 00000016H
	jge	$LN8@FoundPanth

; 836  : 			PlayerTypes eNotifyPlayer = (PlayerTypes) iNotifyLoop;

	mov	eax, DWORD PTR _iNotifyLoop$224470[ebp]
	mov	DWORD PTR _eNotifyPlayer$224474[ebp], eax

; 837  : 			CvPlayerAI& kCurNotifyPlayer = GET_PLAYER(eNotifyPlayer);

	mov	ecx, DWORD PTR _eNotifyPlayer$224474[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kCurNotifyPlayer$224476[ebp], ecx

; 838  : 			CvNotifications* pNotifications = kCurNotifyPlayer.GetNotifications();

	mov	ecx, DWORD PTR _kCurNotifyPlayer$224476[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$224477[ebp], eax

; 839  : 			if(pNotifications){

	cmp	DWORD PTR _pNotifications$224477[ebp], 0
	je	$LN7@FoundPanth

; 840  : 				// Message slightly different for founder player
; 841  : 				if(newReligion.m_eFounder == eNotifyPlayer)

	mov	edx, DWORD PTR _newReligion$[ebp+4]
	cmp	edx, DWORD PTR _eNotifyPlayer$224474[ebp]
	jne	$LN90@FoundPanth

; 842  : 				{
; 843  : 					Localization::String localizedText = GetLocalizedText("TXT_KEY_NOTIFICATION_PANTHEON_FOUNDED_ACTIVE_PLAYER");

	push	OFFSET ??_C@_0DE@EILCMPBB@TXT_KEY_NOTIFICATION_PANTHEON_FO@
	lea	eax, DWORD PTR $T232093[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv229[ebp], eax
	mov	ecx, DWORD PTR tv229[ebp]
	mov	DWORD PTR $T232199[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR $T232199[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T232200[ebp], eax
	mov	edx, DWORD PTR $T232200[ebp]
	push	edx
	lea	ecx, DWORD PTR _localizedText$224480[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T232093[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 844  : 					localizedText << pBelief->getShortDescription() << pBelief->GetDescriptionKey();

	mov	ecx, DWORD PTR _pBelief$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T232094[ebp], eax
	mov	ecx, DWORD PTR _pBelief$[ebp]
	call	?getShortDescription@CvBeliefEntry@@QBEPBDXZ ; CvBeliefEntry::getShortDescription
	mov	DWORD PTR $T232095[ebp], eax
	lea	eax, DWORD PTR $T232094[ebp]
	push	eax
	lea	ecx, DWORD PTR $T232095[ebp]
	push	ecx
	lea	edx, DWORD PTR _localizedText$224480[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 845  : 
; 846  : 					pNotifications->Add(NOTIFICATION_PANTHEON_FOUNDED_ACTIVE_PLAYER, localizedText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$224455[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _localizedText$224480[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	-381621422				; e940eb52H
	mov	ecx, DWORD PTR _pNotifications$224477[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 847  : 				}

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _localizedText$224480[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 848  : 				else

	jmp	$LN7@FoundPanth

; 849  : 				{
; 850  : 					//If the notify player has not met this civ yet, display a more ambiguous notification.
; 851  : 					CvTeam& kTeam = GET_TEAM(kCurNotifyPlayer.getTeam());

$LN90@FoundPanth:
	mov	eax, DWORD PTR _kCurNotifyPlayer$224476[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T232216[ebp], eax
	mov	edx, DWORD PTR $T232216[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _kTeam$224486[ebp], edx

; 852  : 					if(kTeam.isHasMet(kPlayer.getTeam()))

	mov	eax, DWORD PTR _kPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T232228[ebp], eax
	mov	edx, DWORD PTR $T232228[ebp]
	push	edx
	mov	ecx, DWORD PTR _kTeam$224486[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@FoundPanth

; 853  : 					{
; 854  : 						pNotifications->Add(NOTIFICATION_PANTHEON_FOUNDED, replayText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$224455[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _replayText$224458[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	1028207137				; 3d493221H
	mov	ecx, DWORD PTR _pNotifications$224477[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 855  : 					}
; 856  : 					else

	jmp	$LN7@FoundPanth
$LN4@FoundPanth:

; 857  : 					{
; 858  : 						Localization::String unknownFoundedText = Localization::Lookup("TXT_KEY_NOTIFICATION_PANTHEON_FOUNDED_UNKNOWN");

	push	OFFSET ??_C@_0CO@GFBGMLAH@TXT_KEY_NOTIFICATION_PANTHEON_FO@
	lea	ecx, DWORD PTR _unknownFoundedText$224489[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 8

; 859  : 						unknownFoundedText << pBelief->getShortDescription() << pBelief->GetDescriptionKey();

	mov	ecx, DWORD PTR _pBelief$[ebp]
	add	ecx, 64					; 00000040H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T232096[ebp], eax
	mov	ecx, DWORD PTR _pBelief$[ebp]
	call	?getShortDescription@CvBeliefEntry@@QBEPBDXZ ; CvBeliefEntry::getShortDescription
	mov	DWORD PTR $T232097[ebp], eax
	lea	edx, DWORD PTR $T232096[ebp]
	push	edx
	lea	eax, DWORD PTR $T232097[ebp]
	push	eax
	lea	ecx, DWORD PTR _unknownFoundedText$224489[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 860  : 
; 861  : 						pNotifications->Add(NOTIFICATION_PANTHEON_FOUNDED, unknownFoundedText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$224455[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _unknownFoundedText$224489[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	1028207137				; 3d493221H
	mov	ecx, DWORD PTR _pNotifications$224477[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 862  : 					}

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _unknownFoundedText$224489[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN7@FoundPanth:

; 863  : 				}
; 864  : 			}
; 865  : 		}

	jmp	$LN9@FoundPanth
$LN8@FoundPanth:

; 866  : 
; 867  : 		// Logging
; 868  : 		if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	edx, al
	test	edx, edx
	je	$LN2@FoundPanth

; 869  : 		{
; 870  : 			CvString strLogMsg;

	lea	ecx, DWORD PTR _strLogMsg$224495[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 9

; 871  : 			strLogMsg = kPlayer.getCivilizationShortDescription();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	mov	DWORD PTR $T232241[ebp], eax
	cmp	DWORD PTR $T232241[ebp], 0
	je	SHORT $LN104@FoundPanth
	mov	eax, DWORD PTR $T232241[ebp]
	push	eax
	lea	ecx, DWORD PTR _strLogMsg$224495[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN105@FoundPanth
$LN104@FoundPanth:
	lea	ecx, DWORD PTR _strLogMsg$224495[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN105@FoundPanth:

; 872  : 			strLogMsg += ", PANTHEON FOUNDED, ";

	push	OFFSET ??_C@_0BF@CFACEIDB@?0?5PANTHEON?5FOUNDED?0?5?$AA@
	lea	ecx, DWORD PTR _strLogMsg$224495[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 873  : 			strLogMsg += pEntry->GetDescription();

	mov	ecx, DWORD PTR _pEntry$[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strLogMsg$224495[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 874  : 			LogReligionMessage(strLogMsg);

	lea	ecx, DWORD PTR _strLogMsg$224495[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z ; CvGameReligions::LogReligionMessage

; 875  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _strLogMsg$224495[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@FoundPanth:

; 876  : 
; 877  : 		//Achievements!
; 878  : 		if(ePlayer == GC.getGame().getActivePlayer())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T232252[ebp], edx
	mov	ecx, DWORD PTR $T232252[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR _ePlayer$[ebp], eax
	jne	SHORT $LN1@FoundPanth

; 879  : 		{
; 880  : 			gDLL->UnlockAchievement(ACHIEVEMENT_XP1_10);

	mov	eax, DWORD PTR $T232256[ebp]
	mov	DWORD PTR tv442[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv442[ebp], ecx
	push	200					; 000000c8H
	mov	edx, DWORD PTR tv442[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv442[ebp]
	mov	edx, DWORD PTR [eax+828]
	call	edx
$LN1@FoundPanth:

; 881  : 		}
; 882  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _replayText$224458[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$224455[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN11@FoundPanth:

; 883  : 
; 884  : 	GC.GetEngineUserInterface()->setDirty(CityInfo_DIRTY_BIT, true);

	mov	eax, DWORD PTR $T232260[ebp]
	mov	DWORD PTR tv453[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv453[ebp], ecx
	push	1
	push	18					; 00000012H
	mov	edx, DWORD PTR tv453[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv453[ebp]
	mov	edx, DWORD PTR [eax+260]
	call	edx

; 885  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newReligion$[ebp+152]
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$0:
	lea	ecx, DWORD PTR _newReligion$[ebp]
	jmp	??1CvReligion@@QAE@XZ
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$1:
	lea	ecx, DWORD PTR _args$224444[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$2:
	lea	ecx, DWORD PTR _strSummary$224455[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$3:
	lea	ecx, DWORD PTR _replayText$224458[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$4:
	lea	ecx, DWORD PTR $T232092[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$5:
	lea	ecx, DWORD PTR $T232093[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$6:
	lea	ecx, DWORD PTR _localizedText$224480[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$7:
	lea	ecx, DWORD PTR _unknownFoundedText$224489[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$8:
	lea	ecx, DWORD PTR _strLogMsg$224495[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-952]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z ENDP ; CvGameReligions::FoundPantheon
; Function compile flags: /Odtp
;	COMDAT ??1CvReligion@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvReligion@@QAE@XZ PROC				; CvReligion::~CvReligion, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	mov	esp, ebp
	pop	ebp
	ret	0
??1CvReligion@@QAE@XZ ENDP				; CvReligion::~CvReligion
_TEXT	ENDS
PUBLIC	??_C@_02KEGNLNML@?0?5?$AA@			; `string'
PUBLIC	??_C@_0BF@BPDCCHHG@?0?5RELIGION?5FOUNDED?0?5?$AA@ ; `string'
PUBLIC	??_C@_0CO@LFPOIJKI@TXT_KEY_NOTIFICATION_RELIGION_FO@ ; `string'
PUBLIC	??_C@_0DE@BMIJDLOE@TXT_KEY_NOTIFICATION_RELIGION_FO@ ; `string'
PUBLIC	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
PUBLIC	??_C@_0CG@EDBPGPDC@TXT_KEY_NOTIFICATION_RELIGION_FO@ ; `string'
PUBLIC	??_C@_0CI@MGALAMLN@TXT_KEY_NOTIFICATION_RELIGION_FO@ ; `string'
PUBLIC	??_C@_0BA@NFHMCBIC@ReligionFounded?$AA@		; `string'
PUBLIC	?DoReligionFounded@CvCityReligions@@QAEXW4ReligionTypes@@@Z ; CvCityReligions::DoReligionFounded
PUBLIC	?GetBeliefInPantheon@CvGameReligions@@QBE?AW4BeliefTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetBeliefInPantheon
PUBLIC	__$ArrayPad$
PUBLIC	?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z ; CvGameReligions::FoundReligion
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	?getName@CvCity@@QBE?BVCvString@@XZ:PROC	; CvCity::getName
EXTRN	?GetReligiousStrength@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetReligiousStrength
EXTRN	?GetReligionSpreads@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetReligionSpreads
EXTRN	?IsFoundReligion@CvUnitEntry@@QBE_NXZ:PROC	; CvUnitEntry::IsFoundReligion
EXTRN	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ:PROC	; CvUnit::getUnitInfo
EXTRN	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z:PROC	; CvPlayer::nextUnit
EXTRN	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z:PROC	; CvPlayer::firstUnit
EXTRN	?DoReligionOneShots@CvPlayer@@QAEXW4ReligionTypes@@@Z:PROC ; CvPlayer::DoReligionOneShots
EXTRN	__imp__strcpy_s:PROC
EXTRN	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ:PROC ; CvGame::GetGameReligions
;	COMDAT ??_C@_02KEGNLNML@?0?5?$AA@
CONST	SEGMENT
??_C@_02KEGNLNML@?0?5?$AA@ DB ', ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BPDCCHHG@?0?5RELIGION?5FOUNDED?0?5?$AA@
CONST	SEGMENT
??_C@_0BF@BPDCCHHG@?0?5RELIGION?5FOUNDED?0?5?$AA@ DB ', RELIGION FOUNDED,'
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@LFPOIJKI@TXT_KEY_NOTIFICATION_RELIGION_FO@
CONST	SEGMENT
??_C@_0CO@LFPOIJKI@TXT_KEY_NOTIFICATION_RELIGION_FO@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_RELIGION_FOUNDED_UNKNOWN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@BMIJDLOE@TXT_KEY_NOTIFICATION_RELIGION_FO@
CONST	SEGMENT
??_C@_0DE@BMIJDLOE@TXT_KEY_NOTIFICATION_RELIGION_FO@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_RELIGION_FOUNDED_ACTIVE_PLAYER', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@EDBPGPDC@TXT_KEY_NOTIFICATION_RELIGION_FO@
CONST	SEGMENT
??_C@_0CG@EDBPGPDC@TXT_KEY_NOTIFICATION_RELIGION_FO@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_RELIGION_FOUNDED', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@MGALAMLN@TXT_KEY_NOTIFICATION_RELIGION_FO@
CONST	SEGMENT
??_C@_0CI@MGALAMLN@TXT_KEY_NOTIFICATION_RELIGION_FO@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_RELIGION_FOUNDED_S', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NFHMCBIC@ReligionFounded?$AA@
CONST	SEGMENT
??_C@_0BA@NFHMCBIC@ReligionFounded?$AA@ DB 'ReligionFounded', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$7
	DD	04H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$9
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z
_TEXT	SEGMENT
tv494 = -1008						; size = 4
tv483 = -1004						; size = 4
tv509 = -1000						; size = 4
tv390 = -996						; size = 4
tv215 = -992						; size = 4
tv255 = -988						; size = 4
tv248 = -984						; size = 4
tv241 = -980						; size = 4
tv234 = -976						; size = 4
tv227 = -972						; size = 4
tv220 = -968						; size = 4
tv211 = -964						; size = 4
tv204 = -960						; size = 4
tv193 = -956						; size = 4
tv134 = -952						; size = 4
tv675 = -945						; size = 1
tv672 = -944						; size = 4
tv637 = -940						; size = 4
_this$ = -936						; size = 4
$T232464 = -932						; size = 4
$T232456 = -928						; size = 4
$T232452 = -924						; size = 4
$T232437 = -920						; size = 4
$T232427 = -916						; size = 4
$T232415 = -912						; size = 4
$T232399 = -908						; size = 4
$T232395 = -904						; size = 4
$T232365 = -900						; size = 4
$T232350 = -896						; size = 4
$T232346 = -892						; size = 4
$T232342 = -888						; size = 4
$T232338 = -884						; size = 4
$T232334 = -880						; size = 4
$T232327 = -876						; size = 4
$T232323 = -872						; size = 4
$T232307 = -860						; size = 4
$T232303 = -856						; size = 4
$T232281 = -852						; size = 28
$T232280 = -824						; size = 4
$T232279 = -820						; size = 28
$T232278 = -792						; size = 4
$T232277 = -788						; size = 4
_strLogMsg$224569 = -784				; size = 28
_unknownCivText$224565 = -756				; size = 80
_kNotifyTeam$224562 = -672				; size = 4
_localizedText$224557 = -668				; size = 80
_pNotifications$224554 = -588				; size = 4
_eNotifyPlayer$224551 = -584				; size = 4
_kNotifyPlayer$224553 = -580				; size = 4
_iNotifyLoop$224547 = -576				; size = 4
_strSummary$224538 = -572				; size = 80
_replayText$224541 = -492				; size = 80
_szReligionName$224536 = -408				; size = 28
_bResult$224532 = -377					; size = 1
_args$224531 = -376					; size = 4
_kReligion$ = -372					; size = 328
__$ArrayPad$ = -40					; size = 4
_iLoopUnit$ = -36					; size = 4
_pLoopUnit$ = -32					; size = 4
_eBelief$ = -28						; size = 4
_pkScriptSystem$ = -24					; size = 4
_pEntry$ = -20						; size = 4
_kPlayer$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_eReligion$ = 12					; size = 4
_szCustomName$ = 16					; size = 4
_eBelief1$ = 20						; size = 4
_eBelief2$ = 24						; size = 4
_eBelief3$ = 28						; size = 4
_eBelief4$ = 32						; size = 4
_pkHolyCity$ = 36					; size = 4
?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z PROC ; CvGameReligions::FoundReligion, COMDAT
; _this$ = ecx

; 889  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 996				; 000003e4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 890  : 	CvPlayer& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 891  : 
; 892  : 	CvReligion kReligion(eReligion, ePlayer, pkHolyCity, false);

	push	0
	mov	ecx, DWORD PTR _pkHolyCity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	lea	ecx, DWORD PTR _kReligion$[ebp]
	call	??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z ; CvReligion::CvReligion
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 893  : 
; 894  : 	// Copy over belief from your pantheon
; 895  : 	BeliefTypes eBelief = GC.getGame().GetGameReligions()->GetBeliefInPantheon(kPlayer.GetID());

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T232303[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T232307[ebp], eax
	mov	ecx, DWORD PTR $T232303[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T232307[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetBeliefInPantheon@CvGameReligions@@QBE?AW4BeliefTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetBeliefInPantheon
	mov	DWORD PTR _eBelief$[ebp], eax

; 896  : 	if(eBelief != NO_BELIEF)

	cmp	DWORD PTR _eBelief$[ebp], -1
	je	SHORT $LN20@FoundRelig

; 897  : 		kReligion.m_Beliefs.AddBelief(eBelief);

	mov	edx, DWORD PTR _eBelief$[ebp]
	push	edx
	lea	ecx, DWORD PTR _kReligion$[ebp+152]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief
$LN20@FoundRelig:

; 898  : 
; 899  : 	kReligion.m_Beliefs.AddBelief(eBelief1);

	mov	eax, DWORD PTR _eBelief1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _kReligion$[ebp+152]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief

; 900  : 	kReligion.m_Beliefs.AddBelief(eBelief2);

	mov	ecx, DWORD PTR _eBelief2$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kReligion$[ebp+152]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief

; 901  : 
; 902  : 	if(eBelief3 != NO_BELIEF)

	cmp	DWORD PTR _eBelief3$[ebp], -1
	je	SHORT $LN19@FoundRelig

; 903  : 	{
; 904  : 		kReligion.m_Beliefs.AddBelief(eBelief3);

	mov	edx, DWORD PTR _eBelief3$[ebp]
	push	edx
	lea	ecx, DWORD PTR _kReligion$[ebp+152]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief
$LN19@FoundRelig:

; 905  : 	}
; 906  : 
; 907  : 	if(eBelief4 != NO_BELIEF)

	cmp	DWORD PTR _eBelief4$[ebp], -1
	je	SHORT $LN18@FoundRelig

; 908  : 	{
; 909  : 		kReligion.m_Beliefs.AddBelief(eBelief4);

	mov	eax, DWORD PTR _eBelief4$[ebp]
	push	eax
	lea	ecx, DWORD PTR _kReligion$[ebp+152]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief
$LN18@FoundRelig:

; 910  : 	}
; 911  : 
; 912  : 	if(szCustomName != NULL && strlen(szCustomName) <= sizeof(kReligion.m_szCustomName))

	cmp	DWORD PTR _szCustomName$[ebp], 0
	je	SHORT $LN17@FoundRelig
	mov	ecx, DWORD PTR _szCustomName$[ebp]
	mov	DWORD PTR tv637[ebp], ecx
	mov	edx, DWORD PTR tv637[ebp]
	add	edx, 1
	mov	DWORD PTR tv672[ebp], edx
$LL138@FoundRelig:
	mov	eax, DWORD PTR tv637[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv675[ebp], cl
	add	DWORD PTR tv637[ebp], 1
	cmp	BYTE PTR tv675[ebp], 0
	jne	SHORT $LL138@FoundRelig
	mov	edx, DWORD PTR tv637[ebp]
	sub	edx, DWORD PTR tv672[ebp]
	mov	DWORD PTR tv134[ebp], edx
	cmp	DWORD PTR tv134[ebp], 128		; 00000080H
	ja	SHORT $LN17@FoundRelig

; 913  : 	{
; 914  : 		strcpy_s(kReligion.m_szCustomName, szCustomName);

	mov	eax, DWORD PTR _szCustomName$[ebp]
	push	eax
	push	128					; 00000080H
	lea	ecx, DWORD PTR _kReligion$[ebp+22]
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	add	esp, 12					; 0000000cH
$LN17@FoundRelig:

; 915  : 	}
; 916  : 
; 917  : 	// Found it
; 918  : 	m_CurrentReligions.push_back(kReligion);

	lea	edx, DWORD PTR _kReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z ; FStaticVector<CvReligion,16,0,297,0>::push_back

; 919  : 
; 920  : 	// Inform the holy city
; 921  : 	pkHolyCity->GetCityReligions()->DoReligionFounded(kReligion.m_eReligion);

	mov	eax, DWORD PTR _kReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkHolyCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?DoReligionFounded@CvCityReligions@@QAEXW4ReligionTypes@@@Z ; CvCityReligions::DoReligionFounded

; 922  : 
; 923  : 	// Update game systems
; 924  : 	kPlayer.UpdateReligion();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?UpdateReligion@CvPlayer@@QAEXXZ	; CvPlayer::UpdateReligion

; 925  : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 926  : 	kPlayer.doSelfConsistencyCheckAllCities();
; 927  : #endif
; 928  : 	kPlayer.GetReligions()->SetFoundingReligion(false);

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	DWORD PTR $T232323[ebp], eax
	xor	ecx, ecx
	mov	edx, DWORD PTR $T232323[ebp]
	mov	DWORD PTR [edx+8], ecx

; 929  : 
; 930  : #ifdef NQ_ALLOW_RELIGION_ONE_SHOTS
; 931  : 	kPlayer.DoReligionOneShots(eReligion);

	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?DoReligionOneShots@CvPlayer@@QAEXW4ReligionTypes@@@Z ; CvPlayer::DoReligionOneShots

; 932  : #endif
; 933  : 
; 934  : 	// In case we have another prophet sitting around, make sure he's set to this religion
; 935  : 	int iLoopUnit;
; 936  : 	CvUnit* pLoopUnit;
; 937  : 	for(pLoopUnit = kPlayer.firstUnit(&iLoopUnit); pLoopUnit != NULL; pLoopUnit = kPlayer.nextUnit(&iLoopUnit))

	push	0
	lea	ecx, DWORD PTR _iLoopUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	mov	DWORD PTR _pLoopUnit$[ebp], eax
	jmp	SHORT $LN16@FoundRelig
$LN15@FoundRelig:
	push	0
	lea	edx, DWORD PTR _iLoopUnit$[ebp]
	push	edx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	mov	DWORD PTR _pLoopUnit$[ebp], eax
$LN16@FoundRelig:
	cmp	DWORD PTR _pLoopUnit$[ebp], 0
	je	$LN14@FoundRelig

; 938  : 	{
; 939  : 		if(pLoopUnit->getUnitInfo().IsFoundReligion())

	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?IsFoundReligion@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsFoundReligion
	movzx	eax, al
	test	eax, eax
	je	$LN13@FoundRelig

; 940  : 		{
; 941  : 			pLoopUnit->GetReligionData()->SetReligion(eReligion);

	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	mov	edx, DWORD PTR [ecx+1888]
	mov	DWORD PTR $T232327[ebp], edx
	mov	eax, DWORD PTR $T232327[ebp]
	mov	ecx, DWORD PTR _eReligion$[ebp]
	mov	DWORD PTR [eax], ecx

; 942  : 			pLoopUnit->GetReligionData()->SetSpreadsLeft(pLoopUnit->getUnitInfo().GetReligionSpreads());

	mov	edx, DWORD PTR _pLoopUnit$[ebp]
	mov	eax, DWORD PTR [edx+1888]
	mov	DWORD PTR $T232334[ebp], eax
	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?GetReligionSpreads@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetReligionSpreads
	mov	DWORD PTR $T232338[ebp], eax
	mov	ecx, DWORD PTR $T232334[ebp]
	mov	edx, DWORD PTR $T232338[ebp]
	mov	DWORD PTR [ecx+8], edx

; 943  : 			pLoopUnit->GetReligionData()->SetReligiousStrength(pLoopUnit->getUnitInfo().GetReligiousStrength());

	mov	eax, DWORD PTR _pLoopUnit$[ebp]
	mov	ecx, DWORD PTR [eax+1888]
	mov	DWORD PTR $T232342[ebp], ecx
	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?GetReligiousStrength@CvUnitEntry@@QBEHXZ ; CvUnitEntry::GetReligiousStrength
	mov	DWORD PTR $T232346[ebp], eax
	mov	edx, DWORD PTR $T232342[ebp]
	mov	eax, DWORD PTR $T232346[ebp]
	mov	DWORD PTR [edx+4], eax
$LN13@FoundRelig:

; 944  : 		}
; 945  : 	}

	jmp	$LN15@FoundRelig
$LN14@FoundRelig:

; 946  : 
; 947  : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	ecx, DWORD PTR $T232350[ebp]
	mov	DWORD PTR tv193[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv193[ebp], edx
	mov	eax, DWORD PTR tv193[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv193[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR _pkScriptSystem$[ebp], eax

; 948  : 	if(pkScriptSystem)

	cmp	DWORD PTR _pkScriptSystem$[ebp], 0
	je	$LN12@FoundRelig

; 949  : 	{
; 950  : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$224531[ebp]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 951  : 		args->Push(ePlayer);

	mov	ecx, DWORD PTR _args$224531[ebp]
	mov	DWORD PTR tv204[ebp], ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	eax, DWORD PTR tv204[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv204[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 952  : 		args->Push(pkHolyCity->GetID());

	mov	ecx, DWORD PTR _args$224531[ebp]
	mov	DWORD PTR tv211[ebp], ecx
	mov	edx, DWORD PTR _pkHolyCity$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	DWORD PTR $T232365[ebp], eax
	mov	ecx, DWORD PTR $T232365[ebp]
	push	ecx
	mov	edx, DWORD PTR tv211[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv211[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 953  : 		args->Push(eReligion);

	mov	eax, DWORD PTR _args$224531[ebp]
	mov	DWORD PTR tv220[ebp], eax
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv220[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv220[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 954  : 		args->Push(eBelief);

	mov	eax, DWORD PTR _args$224531[ebp]
	mov	DWORD PTR tv227[ebp], eax
	mov	ecx, DWORD PTR _eBelief$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv227[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv227[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 955  : 		args->Push(eBelief1);

	mov	eax, DWORD PTR _args$224531[ebp]
	mov	DWORD PTR tv234[ebp], eax
	mov	ecx, DWORD PTR _eBelief1$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv234[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv234[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 956  : 		args->Push(eBelief2);

	mov	eax, DWORD PTR _args$224531[ebp]
	mov	DWORD PTR tv241[ebp], eax
	mov	ecx, DWORD PTR _eBelief2$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv241[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv241[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 957  : 		args->Push(eBelief3);

	mov	eax, DWORD PTR _args$224531[ebp]
	mov	DWORD PTR tv248[ebp], eax
	mov	ecx, DWORD PTR _eBelief3$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv248[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv248[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 958  : 		args->Push(eBelief4);

	mov	eax, DWORD PTR _args$224531[ebp]
	mov	DWORD PTR tv255[ebp], eax
	mov	ecx, DWORD PTR _eBelief4$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv255[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv255[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 959  : 
; 960  : 		bool bResult;
; 961  : 		LuaSupport::CallHook(pkScriptSystem, "ReligionFounded", args.get(), bResult);

	lea	eax, DWORD PTR _bResult$224532[ebp]
	push	eax
	mov	ecx, DWORD PTR _args$224531[ebp]
	push	ecx
	push	OFFSET ??_C@_0BA@NFHMCBIC@ReligionFounded?$AA@
	mov	edx, DWORD PTR _pkScriptSystem$[ebp]
	push	edx
	call	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallHook
	add	esp, 16					; 00000010H

; 962  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _args$224531[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN12@FoundRelig:

; 963  : 
; 964  : 	// Send out messaging
; 965  : 	CvReligionEntry* pEntry = GC.getReligionInfo(kReligion.m_eReligion);

	mov	eax, DWORD PTR _kReligion$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo
	mov	DWORD PTR _pEntry$[ebp], eax

; 966  : 	if(pEntry)

	cmp	DWORD PTR _pEntry$[ebp], 0
	je	$LN11@FoundRelig

; 967  : 	{
; 968  : 		//Add replay message
; 969  : 		CvString szReligionName = kReligion.GetName();

	lea	ecx, DWORD PTR _szReligionName$224536[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kReligion$[ebp]
	call	?GetName@CvReligion@@QBE?AVCvString@@XZ	; CvReligion::GetName
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 970  : 		Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_FOUNDED_S");

	push	OFFSET ??_C@_0CI@MGALAMLN@TXT_KEY_NOTIFICATION_RELIGION_FO@
	lea	edx, DWORD PTR _strSummary$224538[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 971  : 		Localization::String replayText = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_FOUNDED");

	push	OFFSET ??_C@_0CG@EDBPGPDC@TXT_KEY_NOTIFICATION_RELIGION_FO@
	lea	eax, DWORD PTR _replayText$224541[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 972  : 		replayText << kPlayer.getCivilizationShortDescriptionKey() << szReligionName << pkHolyCity->getNameKey();

	mov	ecx, DWORD PTR _pkHolyCity$[ebp]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	DWORD PTR $T232277[ebp], eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR $T232278[ebp], eax
	lea	ecx, DWORD PTR $T232277[ebp]
	push	ecx
	lea	edx, DWORD PTR _szReligionName$224536[ebp]
	push	edx
	lea	eax, DWORD PTR $T232278[ebp]
	push	eax
	lea	ecx, DWORD PTR _replayText$224541[ebp]
	push	ecx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 973  : 
; 974  : 		GC.getGame().addReplayMessage(REPLAY_MESSAGE_RELIGION_FOUNDED, kReligion.m_eFounder, replayText.toUTF8(), kReligion.m_iHolyCityX, kReligion.m_iHolyCityY);

	lea	ecx, DWORD PTR _replayText$224541[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	DWORD PTR $T232395[ebp], eax
	cmp	DWORD PTR $T232395[ebp], 0
	je	SHORT $LN91@FoundRelig
	mov	edx, DWORD PTR $T232395[ebp]
	mov	DWORD PTR tv215[ebp], edx
	jmp	SHORT $LN92@FoundRelig
$LN91@FoundRelig:
	mov	DWORD PTR tv215[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN92@FoundRelig:
	mov	eax, DWORD PTR tv215[ebp]
	push	eax
	lea	ecx, DWORD PTR $T232279[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T232399[ebp], ecx
	mov	edx, DWORD PTR _kReligion$[ebp+12]
	push	edx
	mov	eax, DWORD PTR _kReligion$[ebp+8]
	push	eax
	lea	ecx, DWORD PTR $T232279[ebp]
	push	ecx
	mov	edx, DWORD PTR _kReligion$[ebp+4]
	push	edx
	push	5
	mov	ecx, DWORD PTR $T232399[ebp]
	call	?addReplayMessage@CvGame@@QAEXW4ReplayMessageTypes@@W4PlayerTypes@@ABVCvString@@HH@Z ; CvGame::addReplayMessage
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T232279[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 975  : 
; 976  : 		//Notify the masses
; 977  : 		for(int iNotifyLoop = 0; iNotifyLoop < MAX_MAJOR_CIVS; ++iNotifyLoop){

	mov	DWORD PTR _iNotifyLoop$224547[ebp], 0
	jmp	SHORT $LN10@FoundRelig
$LN9@FoundRelig:
	mov	eax, DWORD PTR _iNotifyLoop$224547[ebp]
	add	eax, 1
	mov	DWORD PTR _iNotifyLoop$224547[ebp], eax
$LN10@FoundRelig:
	cmp	DWORD PTR _iNotifyLoop$224547[ebp], 22	; 00000016H
	jge	$LN8@FoundRelig

; 978  : 			PlayerTypes eNotifyPlayer = (PlayerTypes) iNotifyLoop;

	mov	ecx, DWORD PTR _iNotifyLoop$224547[ebp]
	mov	DWORD PTR _eNotifyPlayer$224551[ebp], ecx

; 979  : 			CvPlayerAI& kNotifyPlayer = GET_PLAYER(eNotifyPlayer);

	mov	edx, DWORD PTR _eNotifyPlayer$224551[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kNotifyPlayer$224553[ebp], edx

; 980  : 			CvNotifications* pNotifications = kNotifyPlayer.GetNotifications();

	mov	ecx, DWORD PTR _kNotifyPlayer$224553[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$224554[ebp], eax

; 981  : 			if(pNotifications){

	cmp	DWORD PTR _pNotifications$224554[ebp], 0
	je	$LN7@FoundRelig

; 982  : 				// Message slightly different for founder player
; 983  : 				if(kReligion.m_eFounder == eNotifyPlayer)

	mov	eax, DWORD PTR _kReligion$[ebp+4]
	cmp	eax, DWORD PTR _eNotifyPlayer$224551[ebp]
	jne	$LN103@FoundRelig

; 984  : 				{
; 985  : 					Localization::String localizedText = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_FOUNDED_ACTIVE_PLAYER");

	push	OFFSET ??_C@_0DE@BMIJDLOE@TXT_KEY_NOTIFICATION_RELIGION_FO@
	lea	ecx, DWORD PTR _localizedText$224557[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 6

; 986  : 					localizedText << szReligionName << pkHolyCity->getNameKey();

	mov	ecx, DWORD PTR _pkHolyCity$[ebp]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	DWORD PTR $T232280[ebp], eax
	lea	edx, DWORD PTR $T232280[ebp]
	push	edx
	lea	eax, DWORD PTR _szReligionName$224536[ebp]
	push	eax
	lea	ecx, DWORD PTR _localizedText$224557[ebp]
	push	ecx
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 987  : 
; 988  : 					pNotifications->Add(NOTIFICATION_RELIGION_FOUNDED_ACTIVE_PLAYER, localizedText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$224538[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _localizedText$224557[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	216217508				; 0ce337a4H
	mov	ecx, DWORD PTR _pNotifications$224554[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 989  : 				}

	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _localizedText$224557[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 990  : 				else

	jmp	$LN7@FoundRelig

; 991  : 				{
; 992  : 					CvTeam& kNotifyTeam = GET_TEAM(kNotifyPlayer.getTeam());

$LN103@FoundRelig:
	mov	edx, DWORD PTR _kNotifyPlayer$224553[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T232415[ebp], eax
	mov	ecx, DWORD PTR $T232415[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _kNotifyTeam$224562[ebp], ecx

; 993  : 
; 994  : 					if(kNotifyTeam.isHasMet(kPlayer.getTeam()))

	mov	edx, DWORD PTR _kPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T232427[ebp], eax
	mov	ecx, DWORD PTR $T232427[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kNotifyTeam$224562[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@FoundRelig

; 995  : 					{
; 996  : 						pNotifications->Add(NOTIFICATION_RELIGION_FOUNDED, replayText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$224538[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _replayText$224541[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	1516141982				; 5a5e7d9eH
	mov	ecx, DWORD PTR _pNotifications$224554[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 997  : 					}
; 998  : 					else

	jmp	SHORT $LN7@FoundRelig
$LN4@FoundRelig:

; 999  : 					{
; 1000 : 						Localization::String unknownCivText = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_FOUNDED_UNKNOWN");

	push	OFFSET ??_C@_0CO@LFPOIJKI@TXT_KEY_NOTIFICATION_RELIGION_FO@
	lea	eax, DWORD PTR _unknownCivText$224565[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 7

; 1001 : 						unknownCivText << szReligionName;

	lea	ecx, DWORD PTR _szReligionName$224536[ebp]
	push	ecx
	lea	edx, DWORD PTR _unknownCivText$224565[ebp]
	push	edx
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8

; 1002 : 
; 1003 : 						pNotifications->Add(NOTIFICATION_RELIGION_FOUNDED, unknownCivText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$224538[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _unknownCivText$224565[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	1516141982				; 5a5e7d9eH
	mov	ecx, DWORD PTR _pNotifications$224554[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 1004 : 					}

	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _unknownCivText$224565[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN7@FoundRelig:

; 1005 : 				}
; 1006 : 			}
; 1007 : 		}

	jmp	$LN9@FoundRelig
$LN8@FoundRelig:

; 1008 : 
; 1009 : 		// Logging
; 1010 : 		if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	eax, al
	test	eax, eax
	je	$LN2@FoundRelig

; 1011 : 		{
; 1012 : 			CvString strLogMsg;

	lea	ecx, DWORD PTR _strLogMsg$224569[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 8

; 1013 : 			strLogMsg = kPlayer.getCivilizationShortDescription();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	mov	DWORD PTR $T232437[ebp], eax
	cmp	DWORD PTR $T232437[ebp], 0
	je	SHORT $LN115@FoundRelig
	mov	ecx, DWORD PTR $T232437[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strLogMsg$224569[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN116@FoundRelig
$LN115@FoundRelig:
	lea	ecx, DWORD PTR _strLogMsg$224569[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN116@FoundRelig:

; 1014 : 			strLogMsg += ", RELIGION FOUNDED, ";

	push	OFFSET ??_C@_0BF@BPDCCHHG@?0?5RELIGION?5FOUNDED?0?5?$AA@
	lea	ecx, DWORD PTR _strLogMsg$224569[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1015 : 			strLogMsg += pkHolyCity->getName();

	lea	edx, DWORD PTR $T232281[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkHolyCity$[ebp]
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	DWORD PTR tv390[ebp], eax
	mov	eax, DWORD PTR tv390[ebp]
	mov	DWORD PTR tv509[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR tv509[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strLogMsg$224569[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T232281[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1016 : 			strLogMsg += ", ";

	push	OFFSET ??_C@_02KEGNLNML@?0?5?$AA@
	lea	ecx, DWORD PTR _strLogMsg$224569[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1017 : 			strLogMsg += pEntry->GetDescription();

	mov	ecx, DWORD PTR _pEntry$[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strLogMsg$224569[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1018 : 			LogReligionMessage(strLogMsg);

	lea	edx, DWORD PTR _strLogMsg$224569[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z ; CvGameReligions::LogReligionMessage

; 1019 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _strLogMsg$224569[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@FoundRelig:

; 1020 : 
; 1021 : 		//Achievements!
; 1022 : 		if(ePlayer == GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T232452[ebp], eax
	mov	ecx, DWORD PTR $T232452[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR _ePlayer$[ebp], eax
	jne	SHORT $LN1@FoundRelig

; 1023 : 		{
; 1024 : 			gDLL->UnlockAchievement(ACHIEVEMENT_XP1_11);

	mov	ecx, DWORD PTR $T232456[ebp]
	mov	DWORD PTR tv483[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv483[ebp], edx
	push	201					; 000000c9H
	mov	eax, DWORD PTR tv483[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv483[ebp]
	mov	eax, DWORD PTR [edx+828]
	call	eax
$LN1@FoundRelig:

; 1025 : 		}
; 1026 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _replayText$224541[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _strSummary$224538[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _szReligionName$224536[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN11@FoundRelig:

; 1027 : 	GC.GetEngineUserInterface()->setDirty(CityInfo_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T232464[ebp]
	mov	DWORD PTR tv494[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv494[ebp], edx
	push	1
	push	18					; 00000012H
	mov	eax, DWORD PTR tv494[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv494[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax

; 1028 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kReligion$[ebp+152]
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$0:
	lea	ecx, DWORD PTR _kReligion$[ebp]
	jmp	??1CvReligion@@QAE@XZ
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$1:
	lea	ecx, DWORD PTR _args$224531[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$2:
	lea	ecx, DWORD PTR _szReligionName$224536[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$3:
	lea	ecx, DWORD PTR _strSummary$224538[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$4:
	lea	ecx, DWORD PTR _replayText$224541[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$5:
	lea	ecx, DWORD PTR $T232279[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$6:
	lea	ecx, DWORD PTR _localizedText$224557[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$7:
	lea	ecx, DWORD PTR _unknownCivText$224565[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$8:
	lea	ecx, DWORD PTR _strLogMsg$224569[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$9:
	lea	ecx, DWORD PTR $T232281[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1000]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z ENDP ; CvGameReligions::FoundReligion
PUBLIC	__$ArrayPad$
PUBLIC	?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z ; CvGameReligions::CanFoundReligion
EXTRN	?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z:PROC ; CvReligionBeliefs::GetBelief
EXTRN	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ:PROC	; CvReligionBeliefs::GetNumBeliefs
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$0
__ehfuncinfo$?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z
_TEXT	SEGMENT
tv143 = -416						; size = 4
tv228 = -409						; size = 1
tv225 = -408						; size = 4
tv222 = -404						; size = 4
_this$ = -400						; size = 4
$T232498 = -396						; size = 4
$T232494 = -392						; size = 4
$T232481 = -388						; size = 4
$T232480 = -384						; size = 4
$T232479 = -380						; size = 4
_eDestBelief$224612 = -376				; size = 4
_iDestBelief$224608 = -372				; size = 4
_eSrcBelief$224606 = -368				; size = 4
_iSrcBelief$224602 = -364				; size = 4
_it$224595 = -360					; size = 4
_kReligion$ = -356					; size = 328
__$ArrayPad$ = -24					; size = 4
_eBelief$ = -20						; size = 4
_kPlayer$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_eReligion$ = 12					; size = 4
_szCustomName$ = 16					; size = 4
_eBelief1$ = 20						; size = 4
_eBelief2$ = 24						; size = 4
_eBelief3$ = 28						; size = 4
_eBelief4$ = 32						; size = 4
_pkHolyCity$ = 36					; size = 4
?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z PROC ; CvGameReligions::CanFoundReligion, COMDAT
; _this$ = ecx

; 1032 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 404				; 00000194H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1033 : 	if(GetNumReligionsStillToFound() <= 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsStillToFound
	test	eax, eax
	jg	SHORT $LN18@CanFoundRe

; 1034 : 		return FOUNDING_NO_RELIGIONS_AVAILABLE;

	mov	eax, 4
	jmp	$LN19@CanFoundRe
$LN18@CanFoundRe:

; 1035 : 
; 1036 : 	if(ePlayer == NO_PLAYER)

	cmp	DWORD PTR _ePlayer$[ebp], -1
	jne	SHORT $LN17@CanFoundRe

; 1037 : 		return FOUNDING_INVALID_PLAYER;

	mov	eax, 5
	jmp	$LN19@CanFoundRe
$LN17@CanFoundRe:

; 1038 : 
; 1039 : 	if(HasCreatedReligion(ePlayer))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasCreatedReligion@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasCreatedReligion
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN22@CanFoundRe

; 1040 : 		return FOUNDING_PLAYER_ALREADY_CREATED_RELIGION;

	mov	eax, 6
	jmp	$LN19@CanFoundRe

; 1041 : 
; 1042 : 	CvPlayer& kPlayer = GET_PLAYER(ePlayer);

$LN22@CanFoundRe:
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], edx

; 1043 : 
; 1044 : #ifdef AUI_RELIGION_FIX_NO_BELIEFS_AVAILABLE_CHECK_FOR_NON_PANTHEON_MOVED
; 1045 : 	if (!IsAnyAvailableFounderBeliefs() || !IsAnyAvailableFollowerBeliefs())
; 1046 : 	{
; 1047 : 		return FOUNDING_NO_BELIEFS_AVAILABLE;
; 1048 : 	}
; 1049 : 	if (eReligion == NO_RELIGION || pkHolyCity == NULL || eBelief1 == NO_BELIEF || eBelief2 == NO_BELIEF)
; 1050 : 	{
; 1051 : 		if (kPlayer.GetReligions()->IsFoundingReligion())
; 1052 : 		{
; 1053 : 			return FOUNDING_PLAYER_ALREADY_CREATED_RELIGION;
; 1054 : 		}
; 1055 : 		return FOUNDING_OK;
; 1056 : 	}
; 1057 : #endif
; 1058 : 
; 1059 : 	CvReligion kReligion(eReligion, ePlayer, pkHolyCity, false);

	push	0
	mov	eax, DWORD PTR _pkHolyCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	lea	ecx, DWORD PTR _kReligion$[ebp]
	call	??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z ; CvReligion::CvReligion
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1060 : 
; 1061 : 	// Copy over belief from your pantheon
; 1062 : 	BeliefTypes eBelief = GC.getGame().GetGameReligions()->GetBeliefInPantheon(kPlayer.GetID());

	mov	eax, DWORD PTR _kPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T232494[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T232498[ebp], edx
	mov	eax, DWORD PTR $T232494[ebp]
	push	eax
	mov	ecx, DWORD PTR $T232498[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetBeliefInPantheon@CvGameReligions@@QBE?AW4BeliefTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetBeliefInPantheon
	mov	DWORD PTR _eBelief$[ebp], eax

; 1063 : 	if(eBelief != NO_BELIEF)

	cmp	DWORD PTR _eBelief$[ebp], -1
	je	SHORT $LN15@CanFoundRe

; 1064 : 		kReligion.m_Beliefs.AddBelief(eBelief);

	mov	ecx, DWORD PTR _eBelief$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kReligion$[ebp+152]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief
$LN15@CanFoundRe:

; 1065 : 
; 1066 : 	kReligion.m_Beliefs.AddBelief(eBelief1);

	mov	edx, DWORD PTR _eBelief1$[ebp]
	push	edx
	lea	ecx, DWORD PTR _kReligion$[ebp+152]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief

; 1067 : 	kReligion.m_Beliefs.AddBelief(eBelief2);

	mov	eax, DWORD PTR _eBelief2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _kReligion$[ebp+152]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief

; 1068 : 
; 1069 : 	if(eBelief3 != NO_BELIEF)

	cmp	DWORD PTR _eBelief3$[ebp], -1
	je	SHORT $LN14@CanFoundRe

; 1070 : 	{
; 1071 : 		kReligion.m_Beliefs.AddBelief(eBelief3);

	mov	ecx, DWORD PTR _eBelief3$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kReligion$[ebp+152]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief
$LN14@CanFoundRe:

; 1072 : 	}
; 1073 : 
; 1074 : 	if(eBelief4 != NO_BELIEF)

	cmp	DWORD PTR _eBelief4$[ebp], -1
	je	SHORT $LN13@CanFoundRe

; 1075 : 	{
; 1076 : 		kReligion.m_Beliefs.AddBelief(eBelief4);

	mov	edx, DWORD PTR _eBelief4$[ebp]
	push	edx
	lea	ecx, DWORD PTR _kReligion$[ebp+152]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief
$LN13@CanFoundRe:

; 1077 : 	}
; 1078 : 
; 1079 : 	if(szCustomName != NULL && strlen(szCustomName) <= sizeof(kReligion.m_szCustomName))

	cmp	DWORD PTR _szCustomName$[ebp], 0
	je	SHORT $LN12@CanFoundRe
	mov	eax, DWORD PTR _szCustomName$[ebp]
	mov	DWORD PTR tv222[ebp], eax
	mov	ecx, DWORD PTR tv222[ebp]
	add	ecx, 1
	mov	DWORD PTR tv225[ebp], ecx
$LL45@CanFoundRe:
	mov	edx, DWORD PTR tv222[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv228[ebp], al
	add	DWORD PTR tv222[ebp], 1
	cmp	BYTE PTR tv228[ebp], 0
	jne	SHORT $LL45@CanFoundRe
	mov	ecx, DWORD PTR tv222[ebp]
	sub	ecx, DWORD PTR tv225[ebp]
	mov	DWORD PTR tv143[ebp], ecx
	cmp	DWORD PTR tv143[ebp], 128		; 00000080H
	ja	SHORT $LN12@CanFoundRe

; 1080 : 	{
; 1081 : 		strcpy_s(kReligion.m_szCustomName, szCustomName);

	mov	edx, DWORD PTR _szCustomName$[ebp]
	push	edx
	push	128					; 00000080H
	lea	eax, DWORD PTR _kReligion$[ebp+22]
	push	eax
	call	DWORD PTR __imp__strcpy_s
	add	esp, 12					; 0000000cH
$LN12@CanFoundRe:

; 1082 : 	}
; 1083 : 
; 1084 : 	// Now see if there are any conflicts.
; 1085 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1086 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1087 : #else
; 1088 : 	for(ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _it$224595[ebp], edx
	jmp	SHORT $LN34@CanFoundRe
$LN10@CanFoundRe:
	mov	eax, DWORD PTR _it$224595[ebp]
	add	eax, 328				; 00000148H
	mov	DWORD PTR _it$224595[ebp], eax
$LN34@CanFoundRe:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 328				; 00000148H
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax]
	cmp	DWORD PTR _it$224595[ebp], edx
	je	$LN9@CanFoundRe

; 1089 : #endif
; 1090 : 	{
; 1091 : 		if ((*it).m_eFounder != ePlayer)	// Only check other player's religions

	mov	ecx, DWORD PTR _it$224595[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR _ePlayer$[ebp]
	je	$LN8@CanFoundRe

; 1092 : 		{
; 1093 : 			if(kReligion.m_eReligion == (*it).m_eReligion)

	mov	eax, DWORD PTR _it$224595[ebp]
	mov	ecx, DWORD PTR _kReligion$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN7@CanFoundRe

; 1094 : 				return FOUNDING_RELIGION_IN_USE;

	mov	DWORD PTR $T232479[ebp], 2
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kReligion$[ebp+152]
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	mov	eax, DWORD PTR $T232479[ebp]
	jmp	$LN19@CanFoundRe
$LN7@CanFoundRe:

; 1095 : 
; 1096 : 			for(int iSrcBelief = (*it).m_Beliefs.GetNumBeliefs(); iSrcBelief--;)

	mov	ecx, DWORD PTR _it$224595[ebp]
	add	ecx, 152				; 00000098H
	call	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetNumBeliefs
	mov	DWORD PTR _iSrcBelief$224602[ebp], eax
$LN6@CanFoundRe:
	mov	edx, DWORD PTR _iSrcBelief$224602[ebp]
	mov	eax, DWORD PTR _iSrcBelief$224602[ebp]
	sub	eax, 1
	mov	DWORD PTR _iSrcBelief$224602[ebp], eax
	test	edx, edx
	je	$LN8@CanFoundRe

; 1097 : 			{
; 1098 : 				BeliefTypes eSrcBelief = (*it).m_Beliefs.GetBelief(iSrcBelief);

	mov	ecx, DWORD PTR _iSrcBelief$224602[ebp]
	push	ecx
	mov	ecx, DWORD PTR _it$224595[ebp]
	add	ecx, 152				; 00000098H
	call	?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z ; CvReligionBeliefs::GetBelief
	mov	DWORD PTR _eSrcBelief$224606[ebp], eax

; 1099 : 				if(eSrcBelief != NO_BELIEF)

	cmp	DWORD PTR _eSrcBelief$224606[ebp], -1
	je	SHORT $LN4@CanFoundRe

; 1100 : 				{
; 1101 : 					for(int iDestBelief = kReligion.m_Beliefs.GetNumBeliefs(); iDestBelief--;)

	lea	ecx, DWORD PTR _kReligion$[ebp+152]
	call	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetNumBeliefs
	mov	DWORD PTR _iDestBelief$224608[ebp], eax
$LN3@CanFoundRe:
	mov	edx, DWORD PTR _iDestBelief$224608[ebp]
	mov	eax, DWORD PTR _iDestBelief$224608[ebp]
	sub	eax, 1
	mov	DWORD PTR _iDestBelief$224608[ebp], eax
	test	edx, edx
	je	SHORT $LN4@CanFoundRe

; 1102 : 					{
; 1103 : 						BeliefTypes eDestBelief = kReligion.m_Beliefs.GetBelief(iDestBelief);

	mov	ecx, DWORD PTR _iDestBelief$224608[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kReligion$[ebp+152]
	call	?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z ; CvReligionBeliefs::GetBelief
	mov	DWORD PTR _eDestBelief$224612[ebp], eax

; 1104 : 						if(eDestBelief != NO_BELIEF && eDestBelief == eSrcBelief)

	cmp	DWORD PTR _eDestBelief$224612[ebp], -1
	je	SHORT $LN1@CanFoundRe
	mov	edx, DWORD PTR _eDestBelief$224612[ebp]
	cmp	edx, DWORD PTR _eSrcBelief$224606[ebp]
	jne	SHORT $LN1@CanFoundRe

; 1105 : 							return FOUNDING_BELIEF_IN_USE;

	mov	DWORD PTR $T232480[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kReligion$[ebp+152]
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	mov	eax, DWORD PTR $T232480[ebp]
	jmp	SHORT $LN19@CanFoundRe
$LN1@CanFoundRe:

; 1106 : 					}

	jmp	SHORT $LN3@CanFoundRe
$LN4@CanFoundRe:

; 1107 : 				}
; 1108 : 			}

	jmp	$LN6@CanFoundRe
$LN8@CanFoundRe:

; 1109 : 		}
; 1110 : 	}

	jmp	$LN10@CanFoundRe
$LN9@CanFoundRe:

; 1111 : 
; 1112 : 	return FOUNDING_OK;

	mov	DWORD PTR $T232481[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kReligion$[ebp+152]
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	mov	eax, DWORD PTR $T232481[ebp]
$LN19@CanFoundRe:

; 1113 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$0:
	lea	ecx, DWORD PTR _kReligion$[ebp]
	jmp	??1CvReligion@@QAE@XZ
__ehhandler$?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-408]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z ENDP ; CvGameReligions::CanFoundReligion
PUBLIC	??_C@_0BE@BCIPIHHO@?0?5RELIGION?5ENHANCED?$AA@	; `string'
PUBLIC	??_C@_0CP@GDNKJFKJ@TXT_KEY_NOTIFICATION_RELIGION_EN@ ; `string'
PUBLIC	??_C@_0DF@NEJBODCJ@TXT_KEY_NOTIFICATION_RELIGION_EN@ ; `string'
PUBLIC	??_C@_0CH@DAOAJKCE@TXT_KEY_NOTIFICATION_RELIGION_EN@ ; `string'
PUBLIC	??_C@_0CJ@BHEEMMAG@TXT_KEY_NOTIFICATION_RELIGION_EN@ ; `string'
PUBLIC	??_C@_0BB@GOJDGOEE@ReligionEnhanced?$AA@	; `string'
PUBLIC	?UpdateAllCitiesThisReligion@CvGameReligions@@QAEXW4ReligionTypes@@@Z ; CvGameReligions::UpdateAllCitiesThisReligion
PUBLIC	__$ArrayPad$
PUBLIC	?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z ; CvGameReligions::EnhanceReligion
;	COMDAT ??_C@_0BE@BCIPIHHO@?0?5RELIGION?5ENHANCED?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_0BE@BCIPIHHO@?0?5RELIGION?5ENHANCED?$AA@ DB ', RELIGION ENHANCED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@GDNKJFKJ@TXT_KEY_NOTIFICATION_RELIGION_EN@
CONST	SEGMENT
??_C@_0CP@GDNKJFKJ@TXT_KEY_NOTIFICATION_RELIGION_EN@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_RELIGION_ENHANCED_UNKNOWN', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NEJBODCJ@TXT_KEY_NOTIFICATION_RELIGION_EN@
CONST	SEGMENT
??_C@_0DF@NEJBODCJ@TXT_KEY_NOTIFICATION_RELIGION_EN@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_RELIGION_ENHANCED_ACTIVE_PLAYER', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@DAOAJKCE@TXT_KEY_NOTIFICATION_RELIGION_EN@
CONST	SEGMENT
??_C@_0CH@DAOAJKCE@TXT_KEY_NOTIFICATION_RELIGION_EN@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_RELIGION_ENHANCED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@BHEEMMAG@TXT_KEY_NOTIFICATION_RELIGION_EN@
CONST	SEGMENT
??_C@_0CJ@BHEEMMAG@TXT_KEY_NOTIFICATION_RELIGION_EN@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_RELIGION_ENHANCED_S', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GOJDGOEE@ReligionEnhanced?$AA@
CONST	SEGMENT
??_C@_0BB@GOJDGOEE@ReligionEnhanced?$AA@ DB 'ReligionEnhanced', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$8
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z
_TEXT	SEGMENT
tv311 = -572						; size = 4
tv326 = -568						; size = 4
tv251 = -564						; size = 4
tv323 = -560						; size = 4
tv212 = -556						; size = 4
tv320 = -552						; size = 4
tv195 = -548						; size = 4
tv168 = -544						; size = 4
tv161 = -540						; size = 4
tv154 = -536						; size = 4
tv147 = -532						; size = 4
tv136 = -528						; size = 4
_this$ = -524						; size = 4
$T232624 = -520						; size = 4
$T232616 = -516						; size = 4
$T232602 = -512						; size = 4
$T232590 = -508						; size = 4
$T232555 = -504						; size = 4
$T232533 = -500						; size = 28
$T232532 = -472						; size = 28
$T232531 = -444						; size = 4
$T232530 = -440						; size = 28
_strLogMsg$224667 = -412				; size = 28
__$ArrayPad$ = -384					; size = 4
_unknownText$224662 = -380				; size = 80
_kNotifyTeam$224659 = -296				; size = 4
_localizedText$224654 = -292				; size = 80
_notificationText$224648 = -212				; size = 80
_strSummary$224645 = -132				; size = 80
_pNotifications$224643 = -52				; size = 4
_eNotifyPlayer$224640 = -48				; size = 4
_kNotifyPlayer$224642 = -44				; size = 4
_iNotifyLoop$224636 = -40				; size = 4
_bResult$224634 = -33					; size = 1
_args$224633 = -32					; size = 4
_bFoundIt$ = -25					; size = 1
_pkScriptSystem$ = -24					; size = 4
_kPlayer$ = -20						; size = 4
_it$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_eReligion$ = 12					; size = 4
_eBelief1$ = 16						; size = 4
_eBelief2$ = 20						; size = 4
?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z PROC ; CvGameReligions::EnhanceReligion, COMDAT
; _this$ = ecx

; 1117 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 560				; 00000230H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1118 : 	bool bFoundIt = false;

	mov	BYTE PTR _bFoundIt$[ebp], 0

; 1119 : 	CvPlayer& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 1120 : 	ReligionList::iterator it;
; 1121 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1122 : 	for (it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1123 : #else
; 1124 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _it$[ebp], edx
	jmp	SHORT $LN31@EnhanceRel
$LN14@EnhanceRel:
	mov	eax, DWORD PTR _it$[ebp]
	add	eax, 328				; 00000148H
	mov	DWORD PTR _it$[ebp], eax
$LN31@EnhanceRel:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 328				; 00000148H
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax]
	cmp	DWORD PTR _it$[ebp], edx
	je	SHORT $LN13@EnhanceRel

; 1125 : #endif
; 1126 : 	{
; 1127 : 		if(it->m_eReligion == eReligion)

	mov	ecx, DWORD PTR _it$[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN12@EnhanceRel

; 1128 : 		{
; 1129 : 			bFoundIt = true;

	mov	BYTE PTR _bFoundIt$[ebp], 1

; 1130 : 			break;

	jmp	SHORT $LN13@EnhanceRel
$LN12@EnhanceRel:

; 1131 : 		}
; 1132 : 	}

	jmp	SHORT $LN14@EnhanceRel
$LN13@EnhanceRel:

; 1133 : 	if(!bFoundIt)

	movzx	eax, BYTE PTR _bFoundIt$[ebp]
	test	eax, eax
	jne	SHORT $LN11@EnhanceRel

; 1134 : 	{
; 1135 : 		CvAssertMsg(false, "Internal error in religion code.");
; 1136 : 		return;

	jmp	$LN16@EnhanceRel
$LN11@EnhanceRel:

; 1137 : 	}
; 1138 : 
; 1139 : #ifdef AUI_WARNING_FIXES
; 1140 : 	it->m_bEnhanced = true;
; 1141 : #endif
; 1142 : 	it->m_Beliefs.AddBelief(eBelief1);

	mov	ecx, DWORD PTR _eBelief1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _it$[ebp]
	add	ecx, 152				; 00000098H
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief

; 1143 : 	it->m_Beliefs.AddBelief(eBelief2);

	mov	edx, DWORD PTR _eBelief2$[ebp]
	push	edx
	mov	ecx, DWORD PTR _it$[ebp]
	add	ecx, 152				; 00000098H
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief

; 1144 : #ifndef AUI_WARNING_FIXES
; 1145 : 	it->m_bEnhanced = true;

	mov	eax, DWORD PTR _it$[ebp]
	mov	BYTE PTR [eax+21], 1

; 1146 : #endif
; 1147 : 
; 1148 : 	// Update game systems
; 1149 : 	UpdateAllCitiesThisReligion(eReligion);

	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateAllCitiesThisReligion@CvGameReligions@@QAEXW4ReligionTypes@@@Z ; CvGameReligions::UpdateAllCitiesThisReligion

; 1150 : 	kPlayer.UpdateReligion();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?UpdateReligion@CvPlayer@@QAEXXZ	; CvPlayer::UpdateReligion

; 1151 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 1152 : 	kPlayer.doSelfConsistencyCheckAllCities();
; 1153 : #endif
; 1154 : #ifdef AUI_RELIGION_FIX_SIMULTANEOUS_ENHANCE_OR_FOUND_CAUSING_MULTIPLE
; 1155 : 	kPlayer.GetReligions()->SetFoundingReligion(false);
; 1156 : #endif
; 1157 : 
; 1158 : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	edx, DWORD PTR $T232555[ebp]
	mov	DWORD PTR tv136[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv136[ebp], eax
	mov	ecx, DWORD PTR tv136[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv136[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR _pkScriptSystem$[ebp], eax

; 1159 : 	if(pkScriptSystem) 

	cmp	DWORD PTR _pkScriptSystem$[ebp], 0
	je	$LN10@EnhanceRel

; 1160 : 	{
; 1161 : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$224633[ebp]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1162 : 		args->Push(ePlayer);

	mov	ecx, DWORD PTR _args$224633[ebp]
	mov	DWORD PTR tv147[ebp], ecx
	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	eax, DWORD PTR tv147[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv147[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 1163 : 		args->Push(eReligion);

	mov	ecx, DWORD PTR _args$224633[ebp]
	mov	DWORD PTR tv154[ebp], ecx
	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	eax, DWORD PTR tv154[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv154[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 1164 : 		args->Push(eBelief1);

	mov	ecx, DWORD PTR _args$224633[ebp]
	mov	DWORD PTR tv161[ebp], ecx
	mov	edx, DWORD PTR _eBelief1$[ebp]
	push	edx
	mov	eax, DWORD PTR tv161[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv161[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 1165 : 		args->Push(eBelief2);

	mov	ecx, DWORD PTR _args$224633[ebp]
	mov	DWORD PTR tv168[ebp], ecx
	mov	edx, DWORD PTR _eBelief2$[ebp]
	push	edx
	mov	eax, DWORD PTR tv168[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv168[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 1166 : 
; 1167 : 		bool bResult;
; 1168 : 		LuaSupport::CallHook(pkScriptSystem, "ReligionEnhanced", args.get(), bResult);

	lea	ecx, DWORD PTR _bResult$224634[ebp]
	push	ecx
	mov	edx, DWORD PTR _args$224633[ebp]
	push	edx
	push	OFFSET ??_C@_0BB@GOJDGOEE@ReligionEnhanced?$AA@
	mov	eax, DWORD PTR _pkScriptSystem$[ebp]
	push	eax
	call	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallHook
	add	esp, 16					; 00000010H

; 1169 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _args$224633[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN10@EnhanceRel:

; 1170 : 
; 1171 : #ifdef NQ_ALLOW_RELIGION_ONE_SHOTS
; 1172 : 	kPlayer.DoReligionOneShots(eReligion);

	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?DoReligionOneShots@CvPlayer@@QAEXW4ReligionTypes@@@Z ; CvPlayer::DoReligionOneShots

; 1173 : #endif
; 1174 : 
; 1175 : 	//Notify the masses
; 1176 : 	for(int iNotifyLoop = 0; iNotifyLoop < MAX_MAJOR_CIVS; ++iNotifyLoop){

	mov	DWORD PTR _iNotifyLoop$224636[ebp], 0
	jmp	SHORT $LN9@EnhanceRel
$LN8@EnhanceRel:
	mov	edx, DWORD PTR _iNotifyLoop$224636[ebp]
	add	edx, 1
	mov	DWORD PTR _iNotifyLoop$224636[ebp], edx
$LN9@EnhanceRel:
	cmp	DWORD PTR _iNotifyLoop$224636[ebp], 22	; 00000016H
	jge	$LN7@EnhanceRel

; 1177 : 		PlayerTypes eNotifyPlayer = (PlayerTypes) iNotifyLoop;

	mov	eax, DWORD PTR _iNotifyLoop$224636[ebp]
	mov	DWORD PTR _eNotifyPlayer$224640[ebp], eax

; 1178 : 		CvPlayerAI& kNotifyPlayer = GET_PLAYER(eNotifyPlayer);

	mov	ecx, DWORD PTR _eNotifyPlayer$224640[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kNotifyPlayer$224642[ebp], ecx

; 1179 : 		CvNotifications* pNotifications = kNotifyPlayer.GetNotifications();

	mov	ecx, DWORD PTR _kNotifyPlayer$224642[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$224643[ebp], eax

; 1180 : 		if(pNotifications){

	cmp	DWORD PTR _pNotifications$224643[ebp], 0
	je	$LN6@EnhanceRel

; 1181 : 			Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_ENHANCED_S");

	push	OFFSET ??_C@_0CJ@BHEEMMAG@TXT_KEY_NOTIFICATION_RELIGION_EN@
	lea	edx, DWORD PTR _strSummary$224645[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1182 : 			Localization::String notificationText = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_ENHANCED");

	push	OFFSET ??_C@_0CH@DAOAJKCE@TXT_KEY_NOTIFICATION_RELIGION_EN@
	lea	eax, DWORD PTR _notificationText$224648[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 1183 : 			notificationText << kPlayer.getCivilizationShortDescriptionKey() << it->GetName();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR $T232531[ebp], eax
	lea	ecx, DWORD PTR $T232530[ebp]
	push	ecx
	mov	ecx, DWORD PTR _it$[ebp]
	call	?GetName@CvReligion@@QBE?AVCvString@@XZ	; CvReligion::GetName
	mov	DWORD PTR tv195[ebp], eax
	mov	edx, DWORD PTR tv195[ebp]
	mov	DWORD PTR tv320[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv320[ebp]
	push	eax
	lea	ecx, DWORD PTR $T232531[ebp]
	push	ecx
	lea	edx, DWORD PTR _notificationText$224648[ebp]
	push	edx
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T232530[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1184 : 
; 1185 : 			// Message slightly different for enhancing player
; 1186 : 			if(ePlayer == eNotifyPlayer)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	cmp	eax, DWORD PTR _eNotifyPlayer$224640[ebp]
	jne	$LN55@EnhanceRel

; 1187 : 			{
; 1188 : 				Localization::String localizedText = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_ENHANCED_ACTIVE_PLAYER");

	push	OFFSET ??_C@_0DF@NEJBODCJ@TXT_KEY_NOTIFICATION_RELIGION_EN@
	lea	ecx, DWORD PTR _localizedText$224654[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 1189 : 				localizedText << it->GetName();

	lea	edx, DWORD PTR $T232532[ebp]
	push	edx
	mov	ecx, DWORD PTR _it$[ebp]
	call	?GetName@CvReligion@@QBE?AVCvString@@XZ	; CvReligion::GetName
	mov	DWORD PTR tv212[ebp], eax
	mov	eax, DWORD PTR tv212[ebp]
	mov	DWORD PTR tv323[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv323[ebp]
	push	ecx
	lea	edx, DWORD PTR _localizedText$224654[ebp]
	push	edx
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T232532[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1190 : 
; 1191 : 				pNotifications->Add(NOTIFICATION_RELIGION_ENHANCED_ACTIVE_PLAYER, localizedText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$224645[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _localizedText$224654[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	-403868607				; e7ed7441H
	mov	ecx, DWORD PTR _pNotifications$224643[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 1192 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _localizedText$224654[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1193 : 			else

	jmp	$LN4@EnhanceRel

; 1194 : 			{
; 1195 : 				CvTeam& kNotifyTeam = GET_TEAM(kNotifyPlayer.getTeam());

$LN55@EnhanceRel:
	mov	eax, DWORD PTR _kNotifyPlayer$224642[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T232590[ebp], eax
	mov	edx, DWORD PTR $T232590[ebp]
	imul	edx, 2984				; 00000ba8H
	add	edx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _kNotifyTeam$224659[ebp], edx

; 1196 : 				if(kNotifyTeam.isHasMet(kPlayer.getTeam()))

	mov	eax, DWORD PTR _kPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T232602[ebp], eax
	mov	edx, DWORD PTR $T232602[ebp]
	push	edx
	mov	ecx, DWORD PTR _kNotifyTeam$224659[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@EnhanceRel

; 1197 : 				{
; 1198 : 					pNotifications->Add(NOTIFICATION_RELIGION_ENHANCED, notificationText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$224645[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _notificationText$224648[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	26690275				; 019742e3H
	mov	ecx, DWORD PTR _pNotifications$224643[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 1199 : 				}
; 1200 : 				else

	jmp	$LN4@EnhanceRel
$LN3@EnhanceRel:

; 1201 : 				{
; 1202 : 					Localization::String unknownText = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_ENHANCED_UNKNOWN");

	push	OFFSET ??_C@_0CP@GDNKJFKJ@TXT_KEY_NOTIFICATION_RELIGION_EN@
	lea	ecx, DWORD PTR _unknownText$224662[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 6

; 1203 : 					unknownText << it->GetName();

	lea	edx, DWORD PTR $T232533[ebp]
	push	edx
	mov	ecx, DWORD PTR _it$[ebp]
	call	?GetName@CvReligion@@QBE?AVCvString@@XZ	; CvReligion::GetName
	mov	DWORD PTR tv251[ebp], eax
	mov	eax, DWORD PTR tv251[ebp]
	mov	DWORD PTR tv326[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv326[ebp]
	push	ecx
	lea	edx, DWORD PTR _unknownText$224662[ebp]
	push	edx
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T232533[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1204 : 
; 1205 : 					pNotifications->Add(NOTIFICATION_RELIGION_ENHANCED, unknownText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$224645[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _unknownText$224662[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	26690275				; 019742e3H
	mov	ecx, DWORD PTR _pNotifications$224643[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 1206 : 				}

	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _unknownText$224662[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN4@EnhanceRel:

; 1207 : 			}
; 1208 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _notificationText$224648[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strSummary$224645[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN6@EnhanceRel:

; 1209 : 
; 1210 : 		// Logging
; 1211 : 		if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	eax, al
	test	eax, eax
	je	$LN1@EnhanceRel

; 1212 : 		{
; 1213 : 			CvString strLogMsg;

	lea	ecx, DWORD PTR _strLogMsg$224667[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 8

; 1214 : 			strLogMsg = kPlayer.getCivilizationShortDescription();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	mov	DWORD PTR $T232616[ebp], eax
	cmp	DWORD PTR $T232616[ebp], 0
	je	SHORT $LN70@EnhanceRel
	mov	ecx, DWORD PTR $T232616[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strLogMsg$224667[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN71@EnhanceRel
$LN70@EnhanceRel:
	lea	ecx, DWORD PTR _strLogMsg$224667[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN71@EnhanceRel:

; 1215 : 			strLogMsg += ", RELIGION ENHANCED";

	push	OFFSET ??_C@_0BE@BCIPIHHO@?0?5RELIGION?5ENHANCED?$AA@
	lea	ecx, DWORD PTR _strLogMsg$224667[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1216 : 			LogReligionMessage(strLogMsg);

	lea	edx, DWORD PTR _strLogMsg$224667[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z ; CvGameReligions::LogReligionMessage

; 1217 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strLogMsg$224667[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@EnhanceRel:

; 1218 : 	}

	jmp	$LN8@EnhanceRel
$LN7@EnhanceRel:

; 1219 : 	GC.GetEngineUserInterface()->setDirty(CityInfo_DIRTY_BIT, true);

	mov	eax, DWORD PTR $T232624[ebp]
	mov	DWORD PTR tv311[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv311[ebp], ecx
	push	1
	push	18					; 00000012H
	mov	edx, DWORD PTR tv311[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv311[ebp]
	mov	edx, DWORD PTR [eax+260]
	call	edx
$LN16@EnhanceRel:

; 1220 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$0:
	lea	ecx, DWORD PTR _args$224633[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$1:
	lea	ecx, DWORD PTR _strSummary$224645[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$2:
	lea	ecx, DWORD PTR _notificationText$224648[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$3:
	lea	ecx, DWORD PTR $T232530[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$4:
	lea	ecx, DWORD PTR _localizedText$224654[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$5:
	lea	ecx, DWORD PTR $T232532[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$6:
	lea	ecx, DWORD PTR _unknownText$224662[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$7:
	lea	ecx, DWORD PTR $T232533[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$8:
	lea	ecx, DWORD PTR _strLogMsg$224667[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-564]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-372]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z ENDP ; CvGameReligions::EnhanceReligion
PUBLIC	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
PUBLIC	?CanEnhanceReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z ; CvGameReligions::CanEnhanceReligion
; Function compile flags: /Odtp
;	COMDAT ?CanEnhanceReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
_bFoundIt$ = -5						; size = 1
_it$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
_eReligion$ = 12					; size = 4
_eBelief1$ = 16						; size = 4
_eBelief2$ = 20						; size = 4
?CanEnhanceReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z PROC ; CvGameReligions::CanEnhanceReligion, COMDAT
; _this$ = ecx

; 1224 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1225 : #ifdef AUI_WARNING_FIXES
; 1226 : 	if (eBelief1 != NO_BELIEF && IsInSomeReligion(eBelief1))
; 1227 : 		return FOUNDING_BELIEF_IN_USE;
; 1228 : 	if (eBelief2 != NO_BELIEF && IsInSomeReligion(eBelief2))
; 1229 : 		return FOUNDING_BELIEF_IN_USE;
; 1230 : #else
; 1231 : 	bool bFoundIt = false;

	mov	BYTE PTR _bFoundIt$[ebp], 0

; 1232 : #endif
; 1233 : #ifdef AUI_RELIGION_FIX_NO_BELIEFS_AVAILABLE_CHECK_FOR_NON_PANTHEON_MOVED
; 1234 : 	if (eReligion == NO_RELIGION)
; 1235 : 		return FOUNDING_INVALID_PLAYER;
; 1236 : 	if (!IsAnyAvailableEnhancerBeliefs() || !IsAnyAvailableFollowerBeliefs())
; 1237 : 	{
; 1238 : 		return FOUNDING_NO_BELIEFS_AVAILABLE;
; 1239 : 	}
; 1240 : 	if (eBelief1 == NO_BELIEF || eBelief2 == NO_BELIEF)
; 1241 : 	{
; 1242 : 		if (GET_PLAYER(ePlayer).GetReligions()->IsFoundingReligion())
; 1243 : 		{
; 1244 : 			return FOUNDING_PLAYER_ALREADY_CREATED_RELIGION;
; 1245 : 		}
; 1246 : 	}
; 1247 : #endif
; 1248 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1249 : 	for (ReligionList::iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1250 : #else
; 1251 : 	ReligionList::iterator it;
; 1252 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN12@CanEnhance
$LN6@CanEnhance:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 328				; 00000148H
	mov	DWORD PTR _it$[ebp], edx
$LN12@CanEnhance:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 328				; 00000148H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN5@CanEnhance

; 1253 : #endif
; 1254 : 	{
; 1255 : 		if(it->m_eReligion == eReligion && it->m_eFounder == ePlayer)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN4@CanEnhance
	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR _ePlayer$[ebp]
	jne	SHORT $LN4@CanEnhance

; 1256 : 		{
; 1257 : #ifdef AUI_RELIGION_FIX_NO_BELIEFS_AVAILABLE_CHECK_FOR_NON_PANTHEON_MOVED
; 1258 : 			if (it->m_bEnhanced)
; 1259 : 				return FOUNDING_RELIGION_ENHANCED;
; 1260 : #endif
; 1261 : #ifdef AUI_WARNING_FIXES
; 1262 : 			return FOUNDING_OK;
; 1263 : #else
; 1264 : 			bFoundIt = true;

	mov	BYTE PTR _bFoundIt$[ebp], 1

; 1265 : 			break;

	jmp	SHORT $LN5@CanEnhance
$LN4@CanEnhance:

; 1266 : #endif
; 1267 : 		}
; 1268 : 	}

	jmp	SHORT $LN6@CanEnhance
$LN5@CanEnhance:

; 1269 : 
; 1270 : #ifndef AUI_WARNING_FIXES
; 1271 : 	if(bFoundIt)

	movzx	ecx, BYTE PTR _bFoundIt$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@CanEnhance

; 1272 : 	{
; 1273 : 		if(eBelief1 != NO_BELIEF && IsInSomeReligion(eBelief1))

	cmp	DWORD PTR _eBelief1$[ebp], -1
	je	SHORT $LN2@CanEnhance
	mov	edx, DWORD PTR _eBelief1$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@CanEnhance

; 1274 : 			return FOUNDING_BELIEF_IN_USE;

	mov	eax, 1
	jmp	SHORT $LN8@CanEnhance
$LN2@CanEnhance:

; 1275 : 		if(eBelief2 != NO_BELIEF && IsInSomeReligion(eBelief2))

	cmp	DWORD PTR _eBelief2$[ebp], -1
	je	SHORT $LN1@CanEnhance
	mov	ecx, DWORD PTR _eBelief2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@CanEnhance

; 1276 : 			return FOUNDING_BELIEF_IN_USE;

	mov	eax, 1
	jmp	SHORT $LN8@CanEnhance
$LN1@CanEnhance:

; 1277 : 
; 1278 : 		return FOUNDING_OK;

	xor	eax, eax
	jmp	SHORT $LN8@CanEnhance
$LN3@CanEnhance:

; 1279 : 	}
; 1280 : #endif
; 1281 : 
; 1282 : 	return FOUNDING_RELIGION_IN_USE;

	mov	eax, 2
$LN8@CanEnhance:

; 1283 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?CanEnhanceReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z ENDP ; CvGameReligions::CanEnhanceReligion
_TEXT	ENDS
PUBLIC	??_C@_0BL@HNGCODEC@?0?5REFORMATION?5BELIEF?5ADDED?$AA@ ; `string'
PUBLIC	??_C@_0DG@MOMFHIDJ@TXT_KEY_NOTIFICATION_REFORMATION@ ; `string'
PUBLIC	??_C@_0DM@MAGJHPPO@TXT_KEY_NOTIFICATION_REFORMATION@ ; `string'
PUBLIC	??_C@_0CO@FADLJJAA@TXT_KEY_NOTIFICATION_REFORMATION@ ; `string'
PUBLIC	??_C@_0DA@HPKFBMMB@TXT_KEY_NOTIFICATION_REFORMATION@ ; `string'
PUBLIC	??_C@_0BB@CCPOCNEI@ReformationAdded?$AA@	; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_0BL@HNGCODEC@?0?5REFORMATION?5BELIEF?5ADDED?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_0BL@HNGCODEC@?0?5REFORMATION?5BELIEF?5ADDED?$AA@ DB ', REFORMATION '
	DB	'BELIEF ADDED', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@MOMFHIDJ@TXT_KEY_NOTIFICATION_REFORMATION@
CONST	SEGMENT
??_C@_0DG@MOMFHIDJ@TXT_KEY_NOTIFICATION_REFORMATION@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_REFORMATION_BELIEF_ADDED_UNKNOWN', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@MAGJHPPO@TXT_KEY_NOTIFICATION_REFORMATION@
CONST	SEGMENT
??_C@_0DM@MAGJHPPO@TXT_KEY_NOTIFICATION_REFORMATION@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_REFORMATION_BELIEF_ADDED_ACTIVE_PLAYER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@FADLJJAA@TXT_KEY_NOTIFICATION_REFORMATION@
CONST	SEGMENT
??_C@_0CO@FADLJJAA@TXT_KEY_NOTIFICATION_REFORMATION@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_REFORMATION_BELIEF_ADDED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@HPKFBMMB@TXT_KEY_NOTIFICATION_REFORMATION@
CONST	SEGMENT
??_C@_0DA@HPKFBMMB@TXT_KEY_NOTIFICATION_REFORMATION@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_REFORMATION_BELIEF_ADDED_S', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CCPOCNEI@ReformationAdded?$AA@
CONST	SEGMENT
??_C@_0BB@CCPOCNEI@ReformationAdded?$AA@ DB 'ReformationAdded', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$8
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z
_TEXT	SEGMENT
tv298 = -568						; size = 4
tv313 = -564						; size = 4
tv238 = -560						; size = 4
tv310 = -556						; size = 4
tv199 = -552						; size = 4
tv307 = -548						; size = 4
tv182 = -544						; size = 4
tv157 = -540						; size = 4
tv150 = -536						; size = 4
tv143 = -532						; size = 4
tv132 = -528						; size = 4
_this$ = -524						; size = 4
$T232733 = -520						; size = 4
$T232725 = -516						; size = 4
$T232711 = -512						; size = 4
$T232699 = -508						; size = 4
$T232667 = -504						; size = 4
$T232645 = -500						; size = 28
$T232644 = -472						; size = 28
$T232643 = -444						; size = 4
$T232642 = -440						; size = 28
_strLogMsg$224735 = -412				; size = 28
__$ArrayPad$ = -384					; size = 4
_unknownText$224730 = -380				; size = 80
_kNotifyTeam$224727 = -296				; size = 4
_localizedText$224722 = -292				; size = 80
_notificationText$224716 = -212				; size = 80
_strSummary$224713 = -132				; size = 80
_pNotifications$224711 = -52				; size = 4
_eNotifyPlayer$224708 = -48				; size = 4
_kNotifyPlayer$224710 = -44				; size = 4
_iNotifyLoop$224704 = -40				; size = 4
_bResult$224702 = -33					; size = 1
_args$224701 = -32					; size = 4
_bFoundIt$ = -25					; size = 1
_pkScriptSystem$ = -24					; size = 4
_kPlayer$ = -20						; size = 4
_it$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_eReligion$ = 12					; size = 4
_eBelief1$ = 16						; size = 4
?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z PROC ; CvGameReligions::AddReformationBelief, COMDAT
; _this$ = ecx

; 1287 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 556				; 0000022cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1288 : 	bool bFoundIt = false;

	mov	BYTE PTR _bFoundIt$[ebp], 0

; 1289 : 	CvPlayer& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 1290 : 	ReligionList::iterator it;
; 1291 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1292 : 	for (it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1293 : #else
; 1294 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _it$[ebp], edx
	jmp	SHORT $LN31@AddReforma
$LN14@AddReforma:
	mov	eax, DWORD PTR _it$[ebp]
	add	eax, 328				; 00000148H
	mov	DWORD PTR _it$[ebp], eax
$LN31@AddReforma:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 328				; 00000148H
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax]
	cmp	DWORD PTR _it$[ebp], edx
	je	SHORT $LN13@AddReforma

; 1295 : #endif
; 1296 : 	{
; 1297 : 		if(it->m_eReligion == eReligion)

	mov	ecx, DWORD PTR _it$[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN12@AddReforma

; 1298 : 		{
; 1299 : 			bFoundIt = true;

	mov	BYTE PTR _bFoundIt$[ebp], 1

; 1300 : 			break;

	jmp	SHORT $LN13@AddReforma
$LN12@AddReforma:

; 1301 : 		}
; 1302 : 	}

	jmp	SHORT $LN14@AddReforma
$LN13@AddReforma:

; 1303 : 	if(!bFoundIt)

	movzx	eax, BYTE PTR _bFoundIt$[ebp]
	test	eax, eax
	jne	SHORT $LN11@AddReforma

; 1304 : 	{
; 1305 : 		CvAssertMsg(false, "Internal error in religion code.");
; 1306 : 		return;

	jmp	$LN16@AddReforma
$LN11@AddReforma:

; 1307 : 	}
; 1308 : 
; 1309 : 	it->m_Beliefs.AddBelief(eBelief1);

	mov	ecx, DWORD PTR _eBelief1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _it$[ebp]
	add	ecx, 152				; 00000098H
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief

; 1310 : 
; 1311 : 	// Update game systems
; 1312 : 	UpdateAllCitiesThisReligion(eReligion);

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateAllCitiesThisReligion@CvGameReligions@@QAEXW4ReligionTypes@@@Z ; CvGameReligions::UpdateAllCitiesThisReligion

; 1313 : 	kPlayer.UpdateReligion();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?UpdateReligion@CvPlayer@@QAEXXZ	; CvPlayer::UpdateReligion

; 1314 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 1315 : 	kPlayer.doSelfConsistencyCheckAllCities();
; 1316 : #endif
; 1317 : 
; 1318 : #ifdef NQ_ADD_REFORMATION_LUA_HOOK
; 1319 : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	eax, DWORD PTR $T232667[ebp]
	mov	DWORD PTR tv132[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv132[ebp], ecx
	mov	edx, DWORD PTR tv132[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv132[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR _pkScriptSystem$[ebp], eax

; 1320 : 	if(pkScriptSystem) 

	cmp	DWORD PTR _pkScriptSystem$[ebp], 0
	je	$LN10@AddReforma

; 1321 : 	{
; 1322 : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$224701[ebp]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1323 : 		args->Push(ePlayer);

	mov	eax, DWORD PTR _args$224701[ebp]
	mov	DWORD PTR tv143[ebp], eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv143[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv143[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 1324 : 		args->Push(eReligion);

	mov	eax, DWORD PTR _args$224701[ebp]
	mov	DWORD PTR tv150[ebp], eax
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv150[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv150[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 1325 : 		args->Push(eBelief1);

	mov	eax, DWORD PTR _args$224701[ebp]
	mov	DWORD PTR tv157[ebp], eax
	mov	ecx, DWORD PTR _eBelief1$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv157[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv157[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 1326 : 		bool bResult;
; 1327 : 		LuaSupport::CallHook(pkScriptSystem, "ReformationAdded", args.get(), bResult);

	lea	eax, DWORD PTR _bResult$224702[ebp]
	push	eax
	mov	ecx, DWORD PTR _args$224701[ebp]
	push	ecx
	push	OFFSET ??_C@_0BB@CCPOCNEI@ReformationAdded?$AA@
	mov	edx, DWORD PTR _pkScriptSystem$[ebp]
	push	edx
	call	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallHook
	add	esp, 16					; 00000010H

; 1328 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _args$224701[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN10@AddReforma:

; 1329 : #endif
; 1330 : 
; 1331 : 	//Notify the masses
; 1332 : 	for(int iNotifyLoop = 0; iNotifyLoop < MAX_MAJOR_CIVS; ++iNotifyLoop){

	mov	DWORD PTR _iNotifyLoop$224704[ebp], 0
	jmp	SHORT $LN9@AddReforma
$LN8@AddReforma:
	mov	eax, DWORD PTR _iNotifyLoop$224704[ebp]
	add	eax, 1
	mov	DWORD PTR _iNotifyLoop$224704[ebp], eax
$LN9@AddReforma:
	cmp	DWORD PTR _iNotifyLoop$224704[ebp], 22	; 00000016H
	jge	$LN7@AddReforma

; 1333 : 		PlayerTypes eNotifyPlayer = (PlayerTypes) iNotifyLoop;

	mov	ecx, DWORD PTR _iNotifyLoop$224704[ebp]
	mov	DWORD PTR _eNotifyPlayer$224708[ebp], ecx

; 1334 : 		CvPlayerAI& kNotifyPlayer = GET_PLAYER(eNotifyPlayer);

	mov	edx, DWORD PTR _eNotifyPlayer$224708[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kNotifyPlayer$224710[ebp], edx

; 1335 : 		CvNotifications* pNotifications = kNotifyPlayer.GetNotifications();

	mov	ecx, DWORD PTR _kNotifyPlayer$224710[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$224711[ebp], eax

; 1336 : 		if(pNotifications){

	cmp	DWORD PTR _pNotifications$224711[ebp], 0
	je	$LN6@AddReforma

; 1337 : 			Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_REFORMATION_BELIEF_ADDED_S");

	push	OFFSET ??_C@_0DA@HPKFBMMB@TXT_KEY_NOTIFICATION_REFORMATION@
	lea	eax, DWORD PTR _strSummary$224713[ebp]
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1338 : 			Localization::String notificationText = Localization::Lookup("TXT_KEY_NOTIFICATION_REFORMATION_BELIEF_ADDED");

	push	OFFSET ??_C@_0CO@FADLJJAA@TXT_KEY_NOTIFICATION_REFORMATION@
	lea	ecx, DWORD PTR _notificationText$224716[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 1339 : 			notificationText << kPlayer.getCivilizationShortDescriptionKey() << it->GetName();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	DWORD PTR $T232643[ebp], eax
	lea	edx, DWORD PTR $T232642[ebp]
	push	edx
	mov	ecx, DWORD PTR _it$[ebp]
	call	?GetName@CvReligion@@QBE?AVCvString@@XZ	; CvReligion::GetName
	mov	DWORD PTR tv182[ebp], eax
	mov	eax, DWORD PTR tv182[ebp]
	mov	DWORD PTR tv307[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv307[ebp]
	push	ecx
	lea	edx, DWORD PTR $T232643[ebp]
	push	edx
	lea	eax, DWORD PTR _notificationText$224716[ebp]
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8
	push	eax
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T232642[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1340 : 
; 1341 : 			// Message slightly different for reformation player
; 1342 : 			if(ePlayer == eNotifyPlayer)

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	cmp	ecx, DWORD PTR _eNotifyPlayer$224708[ebp]
	jne	$LN53@AddReforma

; 1343 : 			{
; 1344 : 				Localization::String localizedText = Localization::Lookup("TXT_KEY_NOTIFICATION_REFORMATION_BELIEF_ADDED_ACTIVE_PLAYER");

	push	OFFSET ??_C@_0DM@MAGJHPPO@TXT_KEY_NOTIFICATION_REFORMATION@
	lea	edx, DWORD PTR _localizedText$224722[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 1345 : 				localizedText << it->GetName();

	lea	eax, DWORD PTR $T232644[ebp]
	push	eax
	mov	ecx, DWORD PTR _it$[ebp]
	call	?GetName@CvReligion@@QBE?AVCvString@@XZ	; CvReligion::GetName
	mov	DWORD PTR tv199[ebp], eax
	mov	ecx, DWORD PTR tv199[ebp]
	mov	DWORD PTR tv310[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv310[ebp]
	push	edx
	lea	eax, DWORD PTR _localizedText$224722[ebp]
	push	eax
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T232644[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1346 : 
; 1347 : 				pNotifications->Add(NOTIFICATION_REFORMATION_BELIEF_ADDED_ACTIVE_PLAYER, localizedText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$224713[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _localizedText$224722[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	-90445226				; fa9bea56H
	mov	ecx, DWORD PTR _pNotifications$224711[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 1348 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _localizedText$224722[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 1349 : 			else

	jmp	$LN4@AddReforma

; 1350 : 			{
; 1351 : 				CvTeam& kNotifyTeam = GET_TEAM(kNotifyPlayer.getTeam());

$LN53@AddReforma:
	mov	ecx, DWORD PTR _kNotifyPlayer$224710[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T232699[ebp], eax
	mov	eax, DWORD PTR $T232699[ebp]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _kNotifyTeam$224727[ebp], eax

; 1352 : 				if(kNotifyTeam.isHasMet(kPlayer.getTeam()))

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T232711[ebp], eax
	mov	eax, DWORD PTR $T232711[ebp]
	push	eax
	mov	ecx, DWORD PTR _kNotifyTeam$224727[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@AddReforma

; 1353 : 				{
; 1354 : 					pNotifications->Add(NOTIFICATION_REFORMATION_BELIEF_ADDED, notificationText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$224713[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _notificationText$224716[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	1614113729				; 60356bc1H
	mov	ecx, DWORD PTR _pNotifications$224711[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 1355 : 				}
; 1356 : 				else

	jmp	$LN4@AddReforma
$LN3@AddReforma:

; 1357 : 				{
; 1358 : 					Localization::String unknownText = Localization::Lookup("TXT_KEY_NOTIFICATION_REFORMATION_BELIEF_ADDED_UNKNOWN");

	push	OFFSET ??_C@_0DG@MOMFHIDJ@TXT_KEY_NOTIFICATION_REFORMATION@
	lea	edx, DWORD PTR _unknownText$224730[ebp]
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 6

; 1359 : 					unknownText << it->GetName();

	lea	eax, DWORD PTR $T232645[ebp]
	push	eax
	mov	ecx, DWORD PTR _it$[ebp]
	call	?GetName@CvReligion@@QBE?AVCvString@@XZ	; CvReligion::GetName
	mov	DWORD PTR tv238[ebp], eax
	mov	ecx, DWORD PTR tv238[ebp]
	mov	DWORD PTR tv313[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR tv313[ebp]
	push	edx
	lea	eax, DWORD PTR _unknownText$224730[ebp]
	push	eax
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T232645[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1360 : 
; 1361 : 					pNotifications->Add(NOTIFICATION_REFORMATION_BELIEF_ADDED, unknownText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$224713[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _unknownText$224730[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	1614113729				; 60356bc1H
	mov	ecx, DWORD PTR _pNotifications$224711[ebp]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 1362 : 				}

	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _unknownText$224730[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN4@AddReforma:

; 1363 : 			}
; 1364 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _notificationText$224716[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strSummary$224713[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN6@AddReforma:

; 1365 : 
; 1366 : 		// Logging
; 1367 : 		if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	ecx, al
	test	ecx, ecx
	je	$LN1@AddReforma

; 1368 : 		{
; 1369 : 			CvString strLogMsg;

	lea	ecx, DWORD PTR _strLogMsg$224735[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 8

; 1370 : 			strLogMsg = kPlayer.getCivilizationShortDescription();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	mov	DWORD PTR $T232725[ebp], eax
	cmp	DWORD PTR $T232725[ebp], 0
	je	SHORT $LN68@AddReforma
	mov	edx, DWORD PTR $T232725[ebp]
	push	edx
	lea	ecx, DWORD PTR _strLogMsg$224735[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN69@AddReforma
$LN68@AddReforma:
	lea	ecx, DWORD PTR _strLogMsg$224735[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN69@AddReforma:

; 1371 : 			strLogMsg += ", REFORMATION BELIEF ADDED";

	push	OFFSET ??_C@_0BL@HNGCODEC@?0?5REFORMATION?5BELIEF?5ADDED?$AA@
	lea	ecx, DWORD PTR _strLogMsg$224735[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1372 : 			LogReligionMessage(strLogMsg);

	lea	eax, DWORD PTR _strLogMsg$224735[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z ; CvGameReligions::LogReligionMessage

; 1373 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strLogMsg$224735[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@AddReforma:

; 1374 : 	}

	jmp	$LN8@AddReforma
$LN7@AddReforma:

; 1375 : 
; 1376 : 	GC.GetEngineUserInterface()->setDirty(CityInfo_DIRTY_BIT, true);

	mov	ecx, DWORD PTR $T232733[ebp]
	mov	DWORD PTR tv298[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv298[ebp], edx
	push	1
	push	18					; 00000012H
	mov	eax, DWORD PTR tv298[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv298[ebp]
	mov	eax, DWORD PTR [edx+260]
	call	eax
$LN16@AddReforma:

; 1377 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$0:
	lea	ecx, DWORD PTR _args$224701[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$1:
	lea	ecx, DWORD PTR _strSummary$224713[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$2:
	lea	ecx, DWORD PTR _notificationText$224716[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$3:
	lea	ecx, DWORD PTR $T232642[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$4:
	lea	ecx, DWORD PTR _localizedText$224722[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$5:
	lea	ecx, DWORD PTR $T232644[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$6:
	lea	ecx, DWORD PTR _unknownText$224730[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$7:
	lea	ecx, DWORD PTR $T232645[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$8:
	lea	ecx, DWORD PTR _strLogMsg$224735[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-560]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-372]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z ENDP ; CvGameReligions::AddReformationBelief
PUBLIC	?SetHolyCity@CvGameReligions@@QAEXW4ReligionTypes@@PAVCvCity@@@Z ; CvGameReligions::SetHolyCity
; Function compile flags: /Odtp
;	COMDAT ?SetHolyCity@CvGameReligions@@QAEXW4ReligionTypes@@PAVCvCity@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T232765 = -12						; size = 4
$T232756 = -8						; size = 4
_it$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_pkHolyCity$ = 12					; size = 4
?SetHolyCity@CvGameReligions@@QAEXW4ReligionTypes@@PAVCvCity@@@Z PROC ; CvGameReligions::SetHolyCity, COMDAT
; _this$ = ecx

; 1413 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1414 : 	ReligionList::iterator it;
; 1415 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1416 : 	for (it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1417 : #else
; 1418 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN9@SetHolyCit
$LN3@SetHolyCit:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 328				; 00000148H
	mov	DWORD PTR _it$[ebp], edx
$LN9@SetHolyCit:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 328				; 00000148H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN5@SetHolyCit

; 1419 : #endif
; 1420 : 	{
; 1421 : 		// If talking about a pantheon, make sure to match the player
; 1422 : 		if(it->m_eReligion == eReligion)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN1@SetHolyCit

; 1423 : 		{
; 1424 : 			it->m_iHolyCityX = pkHolyCity->getX();

	mov	edx, DWORD PTR _pkHolyCity$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T232756[ebp], eax
	mov	ecx, DWORD PTR _it$[ebp]
	mov	edx, DWORD PTR $T232756[ebp]
	mov	DWORD PTR [ecx+8], edx

; 1425 : 			it->m_iHolyCityY = pkHolyCity->getY();

	mov	eax, DWORD PTR _pkHolyCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T232765[ebp], ecx
	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR $T232765[ebp]
	mov	DWORD PTR [edx+12], eax

; 1426 : 			break;

	jmp	SHORT $LN5@SetHolyCit
$LN1@SetHolyCit:

; 1427 : 		}

	jmp	SHORT $LN3@SetHolyCit
$LN5@SetHolyCit:

; 1428 : 	}
; 1429 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetHolyCity@CvGameReligions@@QAEXW4ReligionTypes@@PAVCvCity@@@Z ENDP ; CvGameReligions::SetHolyCity
_TEXT	ENDS
PUBLIC	?SetFounder@CvGameReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::SetFounder
; Function compile flags: /Odtp
;	COMDAT ?SetFounder@CvGameReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_it$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_eFounder$ = 12						; size = 4
?SetFounder@CvGameReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvGameReligions::SetFounder, COMDAT
; _this$ = ecx

; 1433 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1434 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1435 : 	for (ReligionList::iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1436 : #else
; 1437 : 	ReligionList::iterator it;
; 1438 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN9@SetFounder
$LN3@SetFounder:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 328				; 00000148H
	mov	DWORD PTR _it$[ebp], edx
$LN9@SetFounder:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 328				; 00000148H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN5@SetFounder

; 1439 : #endif
; 1440 : 	{
; 1441 : 		// If talking about a pantheon, make sure to match the player
; 1442 : 		if(it->m_eReligion == eReligion)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN1@SetFounder

; 1443 : 		{
; 1444 : 			it->m_eFounder = eFounder;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR _eFounder$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1445 : 			break;

	jmp	SHORT $LN5@SetFounder
$LN1@SetFounder:

; 1446 : 		}

	jmp	SHORT $LN3@SetFounder
$LN5@SetFounder:

; 1447 : 	}
; 1448 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SetFounder@CvGameReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvGameReligions::SetFounder
_TEXT	ENDS
EXTRN	?UpdateReligion@CvCity@@QAEXW4ReligionTypes@@@Z:PROC ; CvCity::UpdateReligion
; Function compile flags: /Odtp
;	COMDAT ?UpdateAllCitiesThisReligion@CvGameReligions@@QAEXW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T232787 = -21						; size = 1
_pCity$224770 = -20					; size = 4
_ePlayer$224766 = -16					; size = 4
_kPlayer$224768 = -12					; size = 4
_iPlayer$224762 = -8					; size = 4
_iLoop$ = -4						; size = 4
_eReligion$ = 8						; size = 4
?UpdateAllCitiesThisReligion@CvGameReligions@@QAEXW4ReligionTypes@@@Z PROC ; CvGameReligions::UpdateAllCitiesThisReligion, COMDAT
; _this$ = ecx

; 1452 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 1453 : 	int iLoop;
; 1454 : 
; 1455 : 	for(int iPlayer = 0; iPlayer < MAX_PLAYERS; iPlayer++)

	mov	DWORD PTR _iPlayer$224762[ebp], 0
	jmp	SHORT $LN8@UpdateAllC
$LN7@UpdateAllC:
	mov	eax, DWORD PTR _iPlayer$224762[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayer$224762[ebp], eax
$LN8@UpdateAllC:
	cmp	DWORD PTR _iPlayer$224762[ebp], 64	; 00000040H
	jge	SHORT $LN9@UpdateAllC

; 1456 : 	{
; 1457 : 		PlayerTypes ePlayer = (PlayerTypes)iPlayer;

	mov	ecx, DWORD PTR _iPlayer$224762[ebp]
	mov	DWORD PTR _ePlayer$224766[ebp], ecx

; 1458 : 		CvPlayer& kPlayer = GET_PLAYER(ePlayer);

	mov	edx, DWORD PTR _ePlayer$224766[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$224768[ebp], edx

; 1459 : 		if(kPlayer.isAlive())

	mov	eax, DWORD PTR _kPlayer$224768[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T232787[ebp], cl
	movzx	edx, BYTE PTR $T232787[ebp]
	test	edx, edx
	je	SHORT $LN5@UpdateAllC

; 1460 : 		{
; 1461 : 			for(CvCity* pCity = kPlayer.firstCity(&iLoop); pCity != NULL; pCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$224768[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pCity$224770[ebp], eax
	jmp	SHORT $LN4@UpdateAllC
$LN3@UpdateAllC:
	push	0
	lea	ecx, DWORD PTR _iLoop$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$224768[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pCity$224770[ebp], eax
$LN4@UpdateAllC:
	cmp	DWORD PTR _pCity$224770[ebp], 0
	je	SHORT $LN5@UpdateAllC

; 1462 : 			{
; 1463 : 				if(pCity->GetCityReligions()->GetReligiousMajority() == eReligion)

	mov	ecx, DWORD PTR _pCity$224770[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN1@UpdateAllC

; 1464 : 				{
; 1465 : 					pCity->UpdateReligion(eReligion);

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pCity$224770[ebp]
	call	?UpdateReligion@CvCity@@QAEXW4ReligionTypes@@@Z ; CvCity::UpdateReligion
$LN1@UpdateAllC:

; 1466 : 				}

	jmp	SHORT $LN3@UpdateAllC
$LN5@UpdateAllC:

; 1467 : 			}

	jmp	$LN7@UpdateAllC
$LN9@UpdateAllC:

; 1468 : 		}
; 1469 : 	}
; 1470 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?UpdateAllCitiesThisReligion@CvGameReligions@@QAEXW4ReligionTypes@@@Z ENDP ; CvGameReligions::UpdateAllCitiesThisReligion
_TEXT	ENDS
PUBLIC	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
; Function compile flags: /Odtp
;	COMDAT ?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_it$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvGameReligions::GetReligion, COMDAT
; _this$ = ecx

; 1474 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1475 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1476 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1477 : #else
; 1478 : 	ReligionList::const_iterator it;
; 1479 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN12@GetReligio@2
$LN6@GetReligio@2:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 328				; 00000148H
	mov	DWORD PTR _it$[ebp], edx
$LN12@GetReligio@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 328				; 00000148H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN5@GetReligio@2

; 1480 : #endif
; 1481 : 	{
; 1482 : 		// If talking about a pantheon, make sure to match the player
; 1483 : #ifdef AUI_WARNING_FIXES
; 1484 : 		if (it->m_eReligion == eReligion)
; 1485 : 		{
; 1486 : 			if (it->m_eReligion != RELIGION_PANTHEON || it->m_eFounder == ePlayer)
; 1487 : #else
; 1488 : 		if(it->m_eReligion == eReligion && it->m_eReligion == RELIGION_PANTHEON)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN4@GetReligio@2
	mov	edx, DWORD PTR _it$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN4@GetReligio@2

; 1489 : 		{
; 1490 : 			if(it->m_eFounder == ePlayer)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _ePlayer$[ebp]
	jne	SHORT $LN3@GetReligio@2

; 1491 : #endif
; 1492 : 			{
; 1493 : 				return it;

	mov	eax, DWORD PTR _it$[ebp]
	jmp	SHORT $LN8@GetReligio@2
$LN3@GetReligio@2:

; 1494 : 			}
; 1495 : 		}

	jmp	SHORT $LN2@GetReligio@2
$LN4@GetReligio@2:

; 1496 : #ifndef AUI_WARNING_FIXES
; 1497 : 		else if(it->m_eReligion == eReligion)

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN2@GetReligio@2

; 1498 : 		{
; 1499 : 			return it;

	mov	eax, DWORD PTR _it$[ebp]
	jmp	SHORT $LN8@GetReligio@2
$LN2@GetReligio@2:

; 1500 : 		}
; 1501 : #endif
; 1502 : 	}

	jmp	SHORT $LN6@GetReligio@2
$LN5@GetReligio@2:

; 1503 : 
; 1504 : 	return NULL;

	xor	eax, eax
$LN8@GetReligio@2:

; 1505 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvGameReligions::GetReligion
_TEXT	ENDS
EXTRN	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z:PROC ; CvReligionBeliefs::HasBelief
; Function compile flags: /Odtp
;	COMDAT ?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_it$ = -4						; size = 4
_eBelief$ = 8						; size = 4
?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z PROC ; CvGameReligions::IsInSomeReligion, COMDAT
; _this$ = ecx

; 1509 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1510 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1511 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1512 : #else
; 1513 : 	ReligionList::const_iterator it;
; 1514 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN9@IsInSomeRe
$LN3@IsInSomeRe:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 328				; 00000148H
	mov	DWORD PTR _it$[ebp], edx
$LN9@IsInSomeRe:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 328				; 00000148H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN2@IsInSomeRe

; 1515 : #endif
; 1516 : 	{
; 1517 : 		if(it->m_Beliefs.HasBelief(eBelief))

	mov	eax, DWORD PTR _eBelief$[ebp]
	push	eax
	mov	ecx, DWORD PTR _it$[ebp]
	add	ecx, 152				; 00000098H
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@IsInSomeRe

; 1518 : 		{
; 1519 : 			return true;

	mov	al, 1
	jmp	SHORT $LN5@IsInSomeRe
$LN1@IsInSomeRe:

; 1520 : 		}
; 1521 : 	}

	jmp	SHORT $LN3@IsInSomeRe
$LN2@IsInSomeRe:

; 1522 : 
; 1523 : 	return false;

	xor	al, al
$LN5@IsInSomeRe:

; 1524 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ENDP ; CvGameReligions::IsInSomeReligion
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetBeliefInPantheon@CvGameReligions@@QBE?AW4BeliefTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_it$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetBeliefInPantheon@CvGameReligions@@QBE?AW4BeliefTypes@@W4PlayerTypes@@@Z PROC ; CvGameReligions::GetBeliefInPantheon, COMDAT
; _this$ = ecx

; 1528 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1529 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1530 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1531 : #else
; 1532 : 	ReligionList::const_iterator it;
; 1533 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN9@GetBeliefI
$LN3@GetBeliefI:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 328				; 00000148H
	mov	DWORD PTR _it$[ebp], edx
$LN9@GetBeliefI:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 328				; 00000148H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN2@GetBeliefI

; 1534 : #endif
; 1535 : 	{
; 1536 : 		if(it->m_eFounder == ePlayer && it->m_bPantheon)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _ePlayer$[ebp]
	jne	SHORT $LN1@GetBeliefI
	mov	edx, DWORD PTR _it$[ebp]
	movzx	eax, BYTE PTR [edx+20]
	test	eax, eax
	je	SHORT $LN1@GetBeliefI

; 1537 : 		{
; 1538 : 			return (BeliefTypes)it->m_Beliefs.GetBelief(0);

	push	0
	mov	ecx, DWORD PTR _it$[ebp]
	add	ecx, 152				; 00000098H
	call	?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z ; CvReligionBeliefs::GetBelief
	jmp	SHORT $LN5@GetBeliefI
$LN1@GetBeliefI:

; 1539 : 		}
; 1540 : 	}

	jmp	SHORT $LN3@GetBeliefI
$LN2@GetBeliefI:

; 1541 : 
; 1542 : 	return NO_BELIEF;

	or	eax, -1
$LN5@GetBeliefI:

; 1543 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetBeliefInPantheon@CvGameReligions@@QBE?AW4BeliefTypes@@W4PlayerTypes@@@Z ENDP ; CvGameReligions::GetBeliefInPantheon
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?HasCreatedPantheon@CvGameReligions@@QBE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_it$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?HasCreatedPantheon@CvGameReligions@@QBE_NW4PlayerTypes@@@Z PROC ; CvGameReligions::HasCreatedPantheon, COMDAT
; _this$ = ecx

; 1547 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1548 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1549 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1550 : #else
; 1551 : 	ReligionList::const_iterator it;
; 1552 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN9@HasCreated
$LN3@HasCreated:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 328				; 00000148H
	mov	DWORD PTR _it$[ebp], edx
$LN9@HasCreated:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 328				; 00000148H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN2@HasCreated

; 1553 : #endif
; 1554 : 	{
; 1555 : 		if(it->m_eFounder == ePlayer && it->m_bPantheon)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _ePlayer$[ebp]
	jne	SHORT $LN1@HasCreated
	mov	edx, DWORD PTR _it$[ebp]
	movzx	eax, BYTE PTR [edx+20]
	test	eax, eax
	je	SHORT $LN1@HasCreated

; 1556 : 		{
; 1557 : 			return true;

	mov	al, 1
	jmp	SHORT $LN5@HasCreated
$LN1@HasCreated:

; 1558 : 		}
; 1559 : 	}

	jmp	SHORT $LN3@HasCreated
$LN2@HasCreated:

; 1560 : 
; 1561 : 	return false;

	xor	al, al
$LN5@HasCreated:

; 1562 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?HasCreatedPantheon@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ENDP ; CvGameReligions::HasCreatedPantheon
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetNumPantheonsCreated@CvGameReligions@@QBEHXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
_it$224824 = -12					; size = 4
_iI$224820 = -8						; size = 4
_iRtnValue$ = -4					; size = 4
?GetNumPantheonsCreated@CvGameReligions@@QBEHXZ PROC	; CvGameReligions::GetNumPantheonsCreated, COMDAT
; _this$ = ecx

; 1566 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1567 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 1568 : 
; 1569 : 	for(int iI = 0; iI < MAX_MAJOR_CIVS; iI++)

	mov	DWORD PTR _iI$224820[ebp], 0
	jmp	SHORT $LN7@GetNumPant
$LN6@GetNumPant:
	mov	eax, DWORD PTR _iI$224820[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$224820[ebp], eax
$LN7@GetNumPant:
	cmp	DWORD PTR _iI$224820[ebp], 22		; 00000016H
	jge	SHORT $LN5@GetNumPant

; 1570 : 	{
; 1571 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1572 : 		for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1573 : #else
; 1574 : 		ReligionList::const_iterator it;
; 1575 : 		for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _it$224824[ebp], edx
	jmp	SHORT $LN12@GetNumPant
$LN3@GetNumPant:
	mov	eax, DWORD PTR _it$224824[ebp]
	add	eax, 328				; 00000148H
	mov	DWORD PTR _it$224824[ebp], eax
$LN12@GetNumPant:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 328				; 00000148H
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax]
	cmp	DWORD PTR _it$224824[ebp], edx
	je	SHORT $LN2@GetNumPant

; 1576 : #endif
; 1577 : 		{
; 1578 : 			if (it->m_eFounder == iI)

	mov	ecx, DWORD PTR _it$224824[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR _iI$224820[ebp]
	jne	SHORT $LN1@GetNumPant

; 1579 : 			{
; 1580 : 				iRtnValue++;

	mov	eax, DWORD PTR _iRtnValue$[ebp]
	add	eax, 1
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 1581 : 				break;

	jmp	SHORT $LN2@GetNumPant
$LN1@GetNumPant:

; 1582 : 			}
; 1583 : 		}

	jmp	SHORT $LN3@GetNumPant
$LN2@GetNumPant:

; 1584 : 	}

	jmp	SHORT $LN6@GetNumPant
$LN5@GetNumPant:

; 1585 : 
; 1586 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]

; 1587 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumPantheonsCreated@CvGameReligions@@QBEHXZ ENDP	; CvGameReligions::GetNumPantheonsCreated
_TEXT	ENDS
PUBLIC	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
PUBLIC	??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
PUBLIC	?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back
PUBLIC	?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve
PUBLIC	??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
EXTRN	?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ:PROC	; CvBeliefEntry::IsPantheonBelief
EXTRN	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z:PROC ; CvBeliefXMLEntries::GetEntry
EXTRN	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ:PROC	; CvBeliefXMLEntries::GetNumBeliefs
EXTRN	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ:PROC ; CvGlobals::GetGameBeliefs
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$5
__ehfuncinfo$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
_TEXT	SEGMENT
_this$ = -236						; size = 4
$T232832 = -52						; size = 4
_pEntry$224851 = -48					; size = 4
_eBelief$224849 = -44					; size = 4
_iI$224844 = -40					; size = 4
_iNumBeleifs$ = -36					; size = 4
_pkBeliefs$ = -32					; size = 4
_availableBeliefs$ = -28				; size = 16
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ PROC ; CvGameReligions::GetAvailablePantheonBeliefs, COMDAT
; _this$ = ecx

; 1591 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T232832[ebp], 0

; 1592 : 	std::vector<BeliefTypes> availableBeliefs;

	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1593 : 
; 1594 : 	CvBeliefXMLEntries* pkBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pkBeliefs$[ebp], eax

; 1595 : 	const int iNumBeleifs = pkBeliefs->GetNumBeliefs();

	mov	ecx, DWORD PTR _pkBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	mov	DWORD PTR _iNumBeleifs$[ebp], eax

; 1596 : 
; 1597 : 	availableBeliefs.reserve(iNumBeleifs);

	mov	eax, DWORD PTR _iNumBeleifs$[ebp]
	push	eax
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve

; 1598 : 	for(int iI = 0; iI < iNumBeleifs; iI++)

	mov	DWORD PTR _iI$224844[ebp], 0
	jmp	SHORT $LN5@GetAvailab
$LN4@GetAvailab:
	mov	ecx, DWORD PTR _iI$224844[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$224844[ebp], ecx
$LN5@GetAvailab:
	mov	edx, DWORD PTR _iI$224844[ebp]
	cmp	edx, DWORD PTR _iNumBeleifs$[ebp]
	jge	SHORT $LN3@GetAvailab

; 1599 : 	{
; 1600 : 		const BeliefTypes eBelief(static_cast<BeliefTypes>(iI));

	mov	eax, DWORD PTR _iI$224844[ebp]
	mov	DWORD PTR _eBelief$224849[ebp], eax

; 1601 : #ifdef AUI_WARNING_FIXES
; 1602 : 		CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);
; 1603 : 		if (pEntry && pEntry->IsPantheonBelief())
; 1604 : 		{
; 1605 : 			if (!IsInSomeReligion(eBelief))
; 1606 : #else
; 1607 : 		if(!IsInSomeReligion(eBelief))

	mov	ecx, DWORD PTR _eBelief$224849[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@GetAvailab

; 1608 : 		{
; 1609 : 			CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);

	mov	eax, DWORD PTR _eBelief$224849[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	DWORD PTR _pEntry$224851[ebp], eax

; 1610 : 			if(pEntry && pEntry->IsPantheonBelief())

	cmp	DWORD PTR _pEntry$224851[ebp], 0
	je	SHORT $LN2@GetAvailab
	mov	ecx, DWORD PTR _pEntry$224851[ebp]
	call	?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsPantheonBelief
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetAvailab

; 1611 : #endif
; 1612 : 			{
; 1613 : 				availableBeliefs.push_back(eBelief);

	lea	edx, DWORD PTR _eBelief$224849[ebp]
	push	edx
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back
$LN2@GetAvailab:

; 1614 : 			}
; 1615 : 		}
; 1616 : 	}

	jmp	SHORT $LN4@GetAvailab
$LN3@GetAvailab:

; 1617 : 
; 1618 : 	return availableBeliefs;

	lea	eax, DWORD PTR _availableBeliefs$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
	mov	ecx, DWORD PTR $T232832[ebp]
	or	ecx, 1
	mov	DWORD PTR $T232832[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1619 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__unwindfunclet$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$1:
	mov	eax, DWORD PTR $T232832[ebp]
	and	eax, 1
	je	$LN10@GetAvailab
	and	DWORD PTR $T232832[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
$LN10@GetAvailab:
	ret	0
__unwindfunclet$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$5:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ENDP ; CvGameReligions::GetAvailablePantheonBeliefs
PUBLIC	?IsPantheonBeliefAvailable@CvGameReligions@@QAE_NW4BeliefTypes@@@Z ; CvGameReligions::IsPantheonBeliefAvailable
; Function compile flags: /Odtp
;	COMDAT ?IsPantheonBeliefAvailable@CvGameReligions@@QAE_NW4BeliefTypes@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
_pEntry$224859 = -8					; size = 4
_pkBeliefs$ = -4					; size = 4
_eBelief$ = 8						; size = 4
?IsPantheonBeliefAvailable@CvGameReligions@@QAE_NW4BeliefTypes@@@Z PROC ; CvGameReligions::IsPantheonBeliefAvailable, COMDAT
; _this$ = ecx

; 1627 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1628 : 	CvBeliefXMLEntries* pkBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pkBeliefs$[ebp], eax

; 1629 : #ifdef AUI_WARNING_FIXES
; 1630 : 	CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);
; 1631 : 	if (pEntry && pEntry->IsPantheonBelief())
; 1632 : 	{
; 1633 : 		if (!IsInSomeReligion(eBelief))
; 1634 : #else
; 1635 : 	if(!IsInSomeReligion(eBelief))

	mov	eax, DWORD PTR _eBelief$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@IsPantheon

; 1636 : 	{
; 1637 : 		CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);

	mov	edx, DWORD PTR _eBelief$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	DWORD PTR _pEntry$224859[ebp], eax

; 1638 : 		if(pEntry && pEntry->IsPantheonBelief())

	cmp	DWORD PTR _pEntry$224859[ebp], 0
	je	SHORT $LN2@IsPantheon
	mov	ecx, DWORD PTR _pEntry$224859[ebp]
	call	?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsPantheonBelief
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@IsPantheon

; 1639 : #endif
; 1640 : 		{
; 1641 : 			return true;

	mov	al, 1
	jmp	SHORT $LN3@IsPantheon
$LN2@IsPantheon:

; 1642 : 		}
; 1643 : 	}
; 1644 : 
; 1645 : 	return false;

	xor	al, al
$LN3@IsPantheon:

; 1646 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsPantheonBeliefAvailable@CvGameReligions@@QAE_NW4BeliefTypes@@@Z ENDP ; CvGameReligions::IsPantheonBeliefAvailable
_TEXT	ENDS
PUBLIC	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers
PUBLIC	?GetNumFollowers@CvGameReligions@@QBEHW4ReligionTypes@@@Z ; CvGameReligions::GetNumFollowers
; Function compile flags: /Odtp
;	COMDAT ?GetNumFollowers@CvGameReligions@@QBEHW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T233111 = -21						; size = 1
_pLoopCity$224874 = -20					; size = 4
_iLoop$224873 = -16					; size = 4
_kPlayer$224870 = -12					; size = 4
_iI$224866 = -8						; size = 4
_iRtnValue$ = -4					; size = 4
_eReligion$ = 8						; size = 4
?GetNumFollowers@CvGameReligions@@QBEHW4ReligionTypes@@@Z PROC ; CvGameReligions::GetNumFollowers, COMDAT
; _this$ = ecx

; 1650 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 1651 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 1652 : 
; 1653 : 	// Loop through all the players
; 1654 : 	for(int iI = 0; iI < MAX_PLAYERS; iI++)

	mov	DWORD PTR _iI$224866[ebp], 0
	jmp	SHORT $LN7@GetNumFoll
$LN6@GetNumFoll:
	mov	eax, DWORD PTR _iI$224866[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$224866[ebp], eax
$LN7@GetNumFoll:
	cmp	DWORD PTR _iI$224866[ebp], 64		; 00000040H
	jge	SHORT $LN5@GetNumFoll

; 1655 : 	{
; 1656 : 		CvPlayer& kPlayer = GET_PLAYER((PlayerTypes)iI);

	mov	ecx, DWORD PTR _iI$224866[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$224870[ebp], ecx

; 1657 : 		if(kPlayer.isAlive())

	mov	edx, DWORD PTR _kPlayer$224870[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T233111[ebp], al
	movzx	ecx, BYTE PTR $T233111[ebp]
	test	ecx, ecx
	je	SHORT $LN4@GetNumFoll

; 1658 : 		{
; 1659 : 			// Loop through each of their cities
; 1660 : 			int iLoop;
; 1661 : 			CvCity* pLoopCity;
; 1662 : 			for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$224873[ebp]
	push	edx
	mov	ecx, DWORD PTR _kPlayer$224870[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$224874[ebp], eax
	jmp	SHORT $LN3@GetNumFoll
$LN2@GetNumFoll:
	push	0
	lea	eax, DWORD PTR _iLoop$224873[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$224870[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$224874[ebp], eax
$LN3@GetNumFoll:
	cmp	DWORD PTR _pLoopCity$224874[ebp], 0
	je	SHORT $LN4@GetNumFoll

; 1663 : 			{
; 1664 : 				iRtnValue += pLoopCity->GetCityReligions()->GetNumFollowers(eReligion);

	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pLoopCity$224874[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 1665 : 			}

	jmp	SHORT $LN2@GetNumFoll
$LN4@GetNumFoll:

; 1666 : 		}
; 1667 : 	}

	jmp	SHORT $LN6@GetNumFoll
$LN5@GetNumFoll:

; 1668 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]

; 1669 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumFollowers@CvGameReligions@@QBEHW4ReligionTypes@@@Z ENDP ; CvGameReligions::GetNumFollowers
_TEXT	ENDS
PUBLIC	?GetNumCitiesFollowing@CvGameReligions@@QBEHW4ReligionTypes@@@Z ; CvGameReligions::GetNumCitiesFollowing
; Function compile flags: /Odtp
;	COMDAT ?GetNumCitiesFollowing@CvGameReligions@@QBEHW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T233125 = -21						; size = 1
_pLoopCity$224891 = -20					; size = 4
_iLoop$224890 = -16					; size = 4
_kPlayer$224887 = -12					; size = 4
_iI$224883 = -8						; size = 4
_iRtnValue$ = -4					; size = 4
_eReligion$ = 8						; size = 4
?GetNumCitiesFollowing@CvGameReligions@@QBEHW4ReligionTypes@@@Z PROC ; CvGameReligions::GetNumCitiesFollowing, COMDAT
; _this$ = ecx

; 1673 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 1674 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 1675 : 
; 1676 : 	// Loop through all the players
; 1677 : 	for(int iI = 0; iI < MAX_PLAYERS; iI++)

	mov	DWORD PTR _iI$224883[ebp], 0
	jmp	SHORT $LN8@GetNumCiti
$LN7@GetNumCiti:
	mov	eax, DWORD PTR _iI$224883[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$224883[ebp], eax
$LN8@GetNumCiti:
	cmp	DWORD PTR _iI$224883[ebp], 64		; 00000040H
	jge	SHORT $LN6@GetNumCiti

; 1678 : 	{
; 1679 : 		CvPlayer& kPlayer = GET_PLAYER((PlayerTypes)iI);

	mov	ecx, DWORD PTR _iI$224883[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$224887[ebp], ecx

; 1680 : 		if(kPlayer.isAlive())

	mov	edx, DWORD PTR _kPlayer$224887[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T233125[ebp], al
	movzx	ecx, BYTE PTR $T233125[ebp]
	test	ecx, ecx
	je	SHORT $LN5@GetNumCiti

; 1681 : 		{
; 1682 : 			// Loop through each of their cities
; 1683 : 			int iLoop;
; 1684 : 			CvCity* pLoopCity;
; 1685 : 			for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$224890[ebp]
	push	edx
	mov	ecx, DWORD PTR _kPlayer$224887[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$224891[ebp], eax
	jmp	SHORT $LN4@GetNumCiti
$LN3@GetNumCiti:
	push	0
	lea	eax, DWORD PTR _iLoop$224890[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$224887[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$224891[ebp], eax
$LN4@GetNumCiti:
	cmp	DWORD PTR _pLoopCity$224891[ebp], 0
	je	SHORT $LN5@GetNumCiti

; 1686 : 			{
; 1687 : 				if(pLoopCity->GetCityReligions()->GetReligiousMajority() == eReligion)

	mov	ecx, DWORD PTR _pLoopCity$224891[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN1@GetNumCiti

; 1688 : 				{
; 1689 : 					iRtnValue++;

	mov	ecx, DWORD PTR _iRtnValue$[ebp]
	add	ecx, 1
	mov	DWORD PTR _iRtnValue$[ebp], ecx
$LN1@GetNumCiti:

; 1690 : 				}
; 1691 : 			}

	jmp	SHORT $LN3@GetNumCiti
$LN5@GetNumCiti:

; 1692 : 		}
; 1693 : 	}

	jmp	SHORT $LN7@GetNumCiti
$LN6@GetNumCiti:

; 1694 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]

; 1695 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumCitiesFollowing@CvGameReligions@@QBEHW4ReligionTypes@@@Z ENDP ; CvGameReligions::GetNumCitiesFollowing
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?HasCreatedReligion@CvGameReligions@@QBE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?HasCreatedReligion@CvGameReligions@@QBE_NW4PlayerTypes@@@Z PROC ; CvGameReligions::HasCreatedReligion, COMDAT
; _this$ = ecx

; 1699 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1700 : #ifdef AUI_WARNING_FIXES
; 1701 : 	return GetReligionCreatedByPlayer(ePlayer) > RELIGION_PANTHEON;
; 1702 : #else
; 1703 :     if (GetReligionCreatedByPlayer(ePlayer) > RELIGION_PANTHEON)

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	test	eax, eax
	jle	SHORT $LN1@HasCreated@2

; 1704 : 	{
; 1705 : 		return true;

	mov	al, 1
	jmp	SHORT $LN2@HasCreated@2
$LN1@HasCreated@2:

; 1706 : 	}
; 1707 : 
; 1708 : 	return false;

	xor	al, al
$LN2@HasCreated@2:

; 1709 : #endif
; 1710 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?HasCreatedReligion@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ENDP ; CvGameReligions::HasCreatedReligion
_TEXT	ENDS
EXTRN	?IsReformationBelief@CvBeliefEntry@@QBE_NXZ:PROC ; CvBeliefEntry::IsReformationBelief
; Function compile flags: /Odtp
;	COMDAT ?HasAddedReformationBelief@CvGameReligions@@QBE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
_eBelief$224914 = -24					; size = 4
_pEntry$224915 = -20					; size = 4
_iI$224910 = -16					; size = 4
_pMyReligion$224908 = -12				; size = 4
_eReligion$ = -8					; size = 4
_pkBeliefs$ = -4					; size = 4
_ePlayer$ = 8						; size = 4
?HasAddedReformationBelief@CvGameReligions@@QBE_NW4PlayerTypes@@@Z PROC ; CvGameReligions::HasAddedReformationBelief, COMDAT
; _this$ = ecx

; 1714 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 1715 : 	CvBeliefXMLEntries* pkBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pkBeliefs$[ebp], eax

; 1716 : 
; 1717 : 	ReligionTypes eReligion = GetReligionCreatedByPlayer(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eReligion$[ebp], eax

; 1718 :     if (eReligion > RELIGION_PANTHEON)

	cmp	DWORD PTR _eReligion$[ebp], 0
	jle	SHORT $LN6@HasAddedRe

; 1719 : 	{
; 1720 : 		const CvReligion* pMyReligion = GetReligion(eReligion, ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pMyReligion$224908[ebp], eax

; 1721 : 		if (pMyReligion)

	cmp	DWORD PTR _pMyReligion$224908[ebp], 0
	je	SHORT $LN6@HasAddedRe

; 1722 : 		{
; 1723 : 			for(int iI = 0; iI < pMyReligion->m_Beliefs.GetNumBeliefs(); iI++)

	mov	DWORD PTR _iI$224910[ebp], 0
	jmp	SHORT $LN4@HasAddedRe
$LN3@HasAddedRe:
	mov	eax, DWORD PTR _iI$224910[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$224910[ebp], eax
$LN4@HasAddedRe:
	mov	ecx, DWORD PTR _pMyReligion$224908[ebp]
	add	ecx, 152				; 00000098H
	call	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetNumBeliefs
	cmp	DWORD PTR _iI$224910[ebp], eax
	jge	SHORT $LN6@HasAddedRe

; 1724 : 			{
; 1725 : 				const BeliefTypes eBelief = pMyReligion->m_Beliefs.GetBelief(iI);

	mov	ecx, DWORD PTR _iI$224910[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pMyReligion$224908[ebp]
	add	ecx, 152				; 00000098H
	call	?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z ; CvReligionBeliefs::GetBelief
	mov	DWORD PTR _eBelief$224914[ebp], eax

; 1726 : 				CvBeliefEntry* pEntry = pkBeliefs->GetEntry((int)eBelief);

	mov	edx, DWORD PTR _eBelief$224914[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	DWORD PTR _pEntry$224915[ebp], eax

; 1727 : 				if (pEntry && pEntry->IsReformationBelief())

	cmp	DWORD PTR _pEntry$224915[ebp], 0
	je	SHORT $LN1@HasAddedRe
	mov	ecx, DWORD PTR _pEntry$224915[ebp]
	call	?IsReformationBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsReformationBelief
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@HasAddedRe

; 1728 : 				{
; 1729 : 					return true;

	mov	al, 1
	jmp	SHORT $LN7@HasAddedRe
$LN1@HasAddedRe:

; 1730 : 				}
; 1731 : 			}

	jmp	SHORT $LN3@HasAddedRe
$LN6@HasAddedRe:

; 1732 : 		}
; 1733 : 	}
; 1734 : 
; 1735 : 	return false;

	xor	al, al
$LN7@HasAddedRe:

; 1736 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?HasAddedReformationBelief@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ENDP ; CvGameReligions::HasAddedReformationBelief
_TEXT	ENDS
PUBLIC	?IsEligibleForFounderBenefits@CvGameReligions@@QBE_NW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::IsEligibleForFounderBenefits
; Function compile flags: /Odtp
;	COMDAT ?IsEligibleForFounderBenefits@CvGameReligions@@QBE_NW4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
tv148 = -68						; size = 4
tv163 = -64						; size = 4
_this$ = -60						; size = 4
$T233238 = -56						; size = 4
$T233237 = -52						; size = 4
$T233192 = -48						; size = 4
$T233179 = -44						; size = 4
$T233175 = -40						; size = 4
$T233161 = -36						; size = 4
$T233157 = -29						; size = 1
$T233146 = -28						; size = 4
$T233142 = -21						; size = 1
_iMapY$233232 = -20					; size = 4
_iMapX$233231 = -16					; size = 4
$T233135 = -12						; size = 4
_pHolyCityPlot$224925 = -8				; size = 4
_religion$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
?IsEligibleForFounderBenefits@CvGameReligions@@QBE_NW4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvGameReligions::IsEligibleForFounderBenefits, COMDAT
; _this$ = ecx

; 1740 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	mov	DWORD PTR _this$[ebp], ecx

; 1741 : 	const CvReligion* religion = GetReligion(eReligion, NO_PLAYER);

	push	-1
	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _religion$[ebp], eax

; 1742 : 	if(religion)

	cmp	DWORD PTR _religion$[ebp], 0
	je	$LN4@IsEligible

; 1743 : 	{
; 1744 : 		CvPlot* pHolyCityPlot = NULL;

	mov	DWORD PTR _pHolyCityPlot$224925[ebp], 0

; 1745 : 		pHolyCityPlot = GC.getMap().plot(religion->m_iHolyCityX, religion->m_iHolyCityY);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T233135[ebp], ecx
	mov	edx, DWORD PTR _religion$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR $T233238[ebp], eax
	mov	ecx, DWORD PTR _religion$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T233237[ebp], edx
	cmp	DWORD PTR $T233237[ebp], -2147483647	; 80000001H
	je	SHORT $LN9@IsEligible
	cmp	DWORD PTR $T233238[ebp], -2147483647	; 80000001H
	jne	SHORT $LN10@IsEligible
$LN9@IsEligible:
	mov	DWORD PTR _pHolyCityPlot$224925[ebp], 0
	jmp	$LN11@IsEligible
$LN10@IsEligible:
	mov	eax, DWORD PTR $T233135[ebp]
	mov	cl, BYTE PTR [eax+4056]
	mov	BYTE PTR $T233142[ebp], cl
	mov	edx, DWORD PTR $T233135[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T233146[ebp], eax
	movzx	ecx, BYTE PTR $T233142[ebp]
	test	ecx, ecx
	je	SHORT $LN22@IsEligible
	cmp	DWORD PTR $T233237[ebp], 0
	jge	SHORT $LN21@IsEligible
	mov	eax, DWORD PTR $T233237[ebp]
	cdq
	idiv	DWORD PTR $T233146[ebp]
	add	edx, DWORD PTR $T233146[ebp]
	mov	DWORD PTR _iMapX$233231[ebp], edx
	jmp	SHORT $LN23@IsEligible
	jmp	SHORT $LN22@IsEligible
$LN21@IsEligible:
	mov	edx, DWORD PTR $T233237[ebp]
	cmp	edx, DWORD PTR $T233146[ebp]
	jl	SHORT $LN22@IsEligible
	mov	eax, DWORD PTR $T233237[ebp]
	cdq
	idiv	DWORD PTR $T233146[ebp]
	mov	DWORD PTR _iMapX$233231[ebp], edx
	jmp	SHORT $LN23@IsEligible
$LN22@IsEligible:
	mov	eax, DWORD PTR $T233237[ebp]
	mov	DWORD PTR _iMapX$233231[ebp], eax
$LN23@IsEligible:
	mov	ecx, DWORD PTR $T233135[ebp]
	mov	dl, BYTE PTR [ecx+4057]
	mov	BYTE PTR $T233157[ebp], dl
	mov	eax, DWORD PTR $T233135[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T233161[ebp], ecx
	movzx	edx, BYTE PTR $T233157[ebp]
	test	edx, edx
	je	SHORT $LN32@IsEligible
	cmp	DWORD PTR $T233238[ebp], 0
	jge	SHORT $LN31@IsEligible
	mov	eax, DWORD PTR $T233238[ebp]
	cdq
	idiv	DWORD PTR $T233161[ebp]
	add	edx, DWORD PTR $T233161[ebp]
	mov	DWORD PTR _iMapY$233232[ebp], edx
	jmp	SHORT $LN33@IsEligible
	jmp	SHORT $LN32@IsEligible
$LN31@IsEligible:
	mov	eax, DWORD PTR $T233238[ebp]
	cmp	eax, DWORD PTR $T233161[ebp]
	jl	SHORT $LN32@IsEligible
	mov	eax, DWORD PTR $T233238[ebp]
	cdq
	idiv	DWORD PTR $T233161[ebp]
	mov	DWORD PTR _iMapY$233232[ebp], edx
	jmp	SHORT $LN33@IsEligible
$LN32@IsEligible:
	mov	ecx, DWORD PTR $T233238[ebp]
	mov	DWORD PTR _iMapY$233232[ebp], ecx
$LN33@IsEligible:
	cmp	DWORD PTR _iMapX$233231[ebp], 0
	jl	SHORT $LN37@IsEligible
	mov	edx, DWORD PTR $T233135[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T233175[ebp], eax
	mov	ecx, DWORD PTR _iMapX$233231[ebp]
	cmp	ecx, DWORD PTR $T233175[ebp]
	jge	SHORT $LN37@IsEligible
	cmp	DWORD PTR _iMapY$233232[ebp], 0
	jl	SHORT $LN37@IsEligible
	mov	edx, DWORD PTR $T233135[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T233179[ebp], eax
	mov	ecx, DWORD PTR _iMapY$233232[ebp]
	cmp	ecx, DWORD PTR $T233179[ebp]
	jge	SHORT $LN37@IsEligible
	mov	DWORD PTR tv163[ebp], 1
	jmp	SHORT $LN35@IsEligible
$LN37@IsEligible:
	mov	DWORD PTR tv163[ebp], 0
$LN35@IsEligible:
	cmp	DWORD PTR tv163[ebp], 0
	je	SHORT $LN13@IsEligible
	mov	edx, DWORD PTR $T233135[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T233192[ebp], eax
	mov	ecx, DWORD PTR _iMapY$233232[ebp]
	imul	ecx, DWORD PTR $T233192[ebp]
	add	ecx, DWORD PTR _iMapX$233231[ebp]
	imul	ecx, 484				; 000001e4H
	mov	edx, DWORD PTR $T233135[ebp]
	add	ecx, DWORD PTR [edx+4068]
	mov	DWORD PTR tv148[ebp], ecx
	jmp	SHORT $LN14@IsEligible
$LN13@IsEligible:
	mov	DWORD PTR tv148[ebp], 0
$LN14@IsEligible:
	mov	eax, DWORD PTR tv148[ebp]
	mov	DWORD PTR _pHolyCityPlot$224925[ebp], eax
$LN11@IsEligible:

; 1746 : 
; 1747 : 		if(religion->m_eFounder == ePlayer)

	mov	ecx, DWORD PTR _religion$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR _ePlayer$[ebp]
	jne	SHORT $LN4@IsEligible

; 1748 : 		{
; 1749 : 			if(!religion->m_bPantheon)

	mov	eax, DWORD PTR _religion$[ebp]
	movzx	ecx, BYTE PTR [eax+20]
	test	ecx, ecx
	jne	SHORT $LN4@IsEligible

; 1750 : 			{
; 1751 : 				if(pHolyCityPlot && pHolyCityPlot->getOwner() == ePlayer)

	cmp	DWORD PTR _pHolyCityPlot$224925[ebp], 0
	je	SHORT $LN4@IsEligible
	mov	edx, DWORD PTR _pHolyCityPlot$224925[ebp]
	movsx	eax, BYTE PTR [edx+4]
	cmp	eax, DWORD PTR _ePlayer$[ebp]
	jne	SHORT $LN4@IsEligible

; 1752 : 				{
; 1753 : 					return true;

	mov	al, 1
	jmp	SHORT $LN5@IsEligible
$LN4@IsEligible:

; 1754 : 				}
; 1755 : 			}
; 1756 : 		}
; 1757 : 	}
; 1758 : 
; 1759 : 	return false;

	xor	al, al
$LN5@IsEligible:

; 1760 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?IsEligibleForFounderBenefits@CvGameReligions@@QBE_NW4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvGameReligions::IsEligibleForFounderBenefits
_TEXT	ENDS
PUBLIC	?IsCityStateFriendOfReligionFounder@CvGameReligions@@QAE_NW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::IsCityStateFriendOfReligionFounder
EXTRN	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsFriends
EXTRN	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ:PROC ; CvPlayer::GetMinorCivAI
; Function compile flags: /Odtp
;	COMDAT ?IsCityStateFriendOfReligionFounder@CvGameReligions@@QAE_NW4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_kFounder$224937 = -12					; size = 4
_kMinor$224936 = -8					; size = 4
_religion$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
?IsCityStateFriendOfReligionFounder@CvGameReligions@@QAE_NW4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvGameReligions::IsCityStateFriendOfReligionFounder, COMDAT
; _this$ = ecx

; 1768 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 1769 : 	const CvReligion* religion = GetReligion(eReligion, NO_PLAYER);

	push	-1
	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _religion$[ebp], eax

; 1770 : 	if(religion)

	cmp	DWORD PTR _religion$[ebp], 0
	je	SHORT $LN2@IsCityStat

; 1771 : 	{
; 1772 : 		CvPlayer& kMinor = GET_PLAYER(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kMinor$224936[ebp], ecx

; 1773 : 		CvPlayer& kFounder = GET_PLAYER(religion->m_eFounder);

	mov	edx, DWORD PTR _religion$[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kFounder$224937[ebp], eax

; 1774 : 		if(!kFounder.isMinorCiv() && kMinor.GetMinorCivAI()->IsFriends(religion->m_eFounder))

	mov	ecx, DWORD PTR _kFounder$224937[ebp]
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@IsCityStat
	mov	edx, DWORD PTR _religion$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _kMinor$224936[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@IsCityStat

; 1775 : 		{
; 1776 : 			return true;

	mov	al, 1
	jmp	SHORT $LN3@IsCityStat
$LN2@IsCityStat:

; 1777 : 		}
; 1778 : 	}
; 1779 : 
; 1780 : 	return false;

	xor	al, al
$LN3@IsCityStat:

; 1781 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?IsCityStateFriendOfReligionFounder@CvGameReligions@@QAE_NW4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvGameReligions::IsCityStateFriendOfReligionFounder
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
_eRtnValue$ = -8					; size = 4
_it$ = -4						; size = 4
_ePlayer$ = 8						; size = 4
?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvGameReligions::GetReligionCreatedByPlayer, COMDAT
; _this$ = ecx

; 1785 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1786 : 	ReligionTypes eRtnValue = NO_RELIGION;

	mov	DWORD PTR _eRtnValue$[ebp], -1

; 1787 : 
; 1788 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1789 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1790 : #else
; 1791 : 	ReligionList::const_iterator it;
; 1792 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN10@GetReligio@3
$LN4@GetReligio@3:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 328				; 00000148H
	mov	DWORD PTR _it$[ebp], edx
$LN10@GetReligio@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 328				; 00000148H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN3@GetReligio@3

; 1793 : #endif
; 1794 : 	{
; 1795 : 		if(it->m_eFounder == ePlayer)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _ePlayer$[ebp]
	jne	SHORT $LN2@GetReligio@3

; 1796 : 		{
; 1797 : 			if(!it->m_bPantheon)

	mov	edx, DWORD PTR _it$[ebp]
	movzx	eax, BYTE PTR [edx+20]
	test	eax, eax
	jne	SHORT $LN2@GetReligio@3

; 1798 : 			{
; 1799 : 				eRtnValue = it->m_eReligion;

	mov	ecx, DWORD PTR _it$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _eRtnValue$[ebp], edx
$LN2@GetReligio@3:

; 1800 : #ifdef AUI_WARNING_FIXES
; 1801 : 				break;
; 1802 : #endif
; 1803 : 			}
; 1804 : 		}
; 1805 : 	}

	jmp	SHORT $LN4@GetReligio@3
$LN3@GetReligio@3:

; 1806 : 
; 1807 : 	return eRtnValue;

	mov	eax, DWORD PTR _eRtnValue$[ebp]

; 1808 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvGameReligions::GetReligionCreatedByPlayer
_TEXT	ENDS
PUBLIC	??_C@_0BL@ODLKNBCI@GetFounderBenefitsReligion?$AA@ ; `string'
PUBLIC	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetFounderBenefitsReligion
;	COMDAT ??_C@_0BL@ODLKNBCI@GetFounderBenefitsReligion?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaargshandle.h
CONST	SEGMENT
??_C@_0BL@ODLKNBCI@GetFounderBenefitsReligion?$AA@ DB 'GetFounderBenefits'
	DB	'Religion', 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z$0
__ehfuncinfo$?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
tv82 = -52						; size = 4
tv71 = -48						; size = 4
_this$ = -44						; size = 4
$T233272 = -40						; size = 4
$T233265 = -36						; size = 4
$T233260 = -32						; size = 4
_iValue$224958 = -28					; size = 4
_args$224957 = -24					; size = 4
_eReligion$ = -20					; size = 4
_pkScriptSystem$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvGameReligions::GetFounderBenefitsReligion, COMDAT
; _this$ = ecx

; 1812 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1813 : 	ReligionTypes eReligion;
; 1814 : 
; 1815 : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	eax, DWORD PTR $T233265[ebp]
	mov	DWORD PTR tv71[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv71[ebp], ecx
	mov	edx, DWORD PTR tv71[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv71[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR _pkScriptSystem$[ebp], eax

; 1816 : 	if(pkScriptSystem)

	cmp	DWORD PTR _pkScriptSystem$[ebp], 0
	je	$LN3@GetFounder

; 1817 : 	{
; 1818 : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$224957[ebp]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1819 : 		args->Push(ePlayer);

	mov	eax, DWORD PTR _args$224957[ebp]
	mov	DWORD PTR tv82[ebp], eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv82[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv82[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 1820 : 
; 1821 : 		int iValue = 0;

	mov	DWORD PTR _iValue$224958[ebp], 0

; 1822 : 		if (LuaSupport::CallAccumulator(pkScriptSystem, "GetFounderBenefitsReligion", args.get(), iValue))

	mov	eax, DWORD PTR _args$224957[ebp]
	mov	DWORD PTR $T233272[ebp], eax
	lea	ecx, DWORD PTR _iValue$224958[ebp]
	push	ecx
	mov	edx, DWORD PTR $T233272[ebp]
	push	edx
	push	OFFSET ??_C@_0BL@ODLKNBCI@GetFounderBenefitsReligion?$AA@
	mov	eax, DWORD PTR _pkScriptSystem$[ebp]
	push	eax
	call	?CallAccumulator@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AAH@Z ; LuaSupport::CallAccumulator
	add	esp, 16					; 00000010H
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetFounder

; 1823 : 		{
; 1824 : 			eReligion = (ReligionTypes)iValue;

	mov	edx, DWORD PTR _iValue$224958[ebp]
	mov	DWORD PTR _eReligion$[ebp], edx

; 1825 : 			return eReligion;

	mov	eax, DWORD PTR _eReligion$[ebp]
	mov	DWORD PTR $T233260[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _args$224957[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
	mov	eax, DWORD PTR $T233260[ebp]
	jmp	SHORT $LN4@GetFounder
$LN2@GetFounder:

; 1826 : 		}
; 1827 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _args$224957[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN3@GetFounder:

; 1828 : 
; 1829 : 	eReligion = GetReligionCreatedByPlayer(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eReligion$[ebp], eax

; 1830 : 
; 1831 : 	if(IsEligibleForFounderBenefits(eReligion, ePlayer))

	mov	edx, DWORD PTR _ePlayer$[ebp]
	push	edx
	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsEligibleForFounderBenefits@CvGameReligions@@QBE_NW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::IsEligibleForFounderBenefits
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@GetFounder

; 1832 : 	{
; 1833 : 		return eReligion;

	mov	eax, DWORD PTR _eReligion$[ebp]
	jmp	SHORT $LN4@GetFounder
$LN1@GetFounder:

; 1834 : 	}
; 1835 : 
; 1836 : 	return NO_RELIGION;

	or	eax, -1
$LN4@GetFounder:

; 1837 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _args$224957[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__ehhandler$?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvGameReligions::GetFounderBenefitsReligion
PUBLIC	?GetNumReligionsFounded@CvGameReligions@@QBEHXZ	; CvGameReligions::GetNumReligionsFounded
; Function compile flags: /Odtp
;	COMDAT ?GetNumReligionsFounded@CvGameReligions@@QBEHXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_iRtnValue$ = -8					; size = 4
_it$ = -4						; size = 4
?GetNumReligionsFounded@CvGameReligions@@QBEHXZ PROC	; CvGameReligions::GetNumReligionsFounded, COMDAT
; _this$ = ecx

; 1841 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1842 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 1843 : 
; 1844 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1845 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1846 : #else
; 1847 : 	ReligionList::const_iterator it;
; 1848 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN9@GetNumReli
$LN3@GetNumReli:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 328				; 00000148H
	mov	DWORD PTR _it$[ebp], edx
$LN9@GetNumReli:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 328				; 00000148H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN2@GetNumReli

; 1849 : #endif
; 1850 : 	{
; 1851 : 		if(!it->m_bPantheon)

	mov	eax, DWORD PTR _it$[ebp]
	movzx	ecx, BYTE PTR [eax+20]
	test	ecx, ecx
	jne	SHORT $LN1@GetNumReli

; 1852 : 		{
; 1853 : 			iRtnValue++;

	mov	edx, DWORD PTR _iRtnValue$[ebp]
	add	edx, 1
	mov	DWORD PTR _iRtnValue$[ebp], edx
$LN1@GetNumReli:

; 1854 : 		}
; 1855 : 	}

	jmp	SHORT $LN3@GetNumReli
$LN2@GetNumReli:

; 1856 : 
; 1857 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]

; 1858 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumReligionsFounded@CvGameReligions@@QBEHXZ ENDP	; CvGameReligions::GetNumReligionsFounded
_TEXT	ENDS
PUBLIC	?GetNumReligionsEnhanced@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsEnhanced
; Function compile flags: /Odtp
;	COMDAT ?GetNumReligionsEnhanced@CvGameReligions@@QBEHXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_iRtnValue$ = -8					; size = 4
_it$ = -4						; size = 4
?GetNumReligionsEnhanced@CvGameReligions@@QBEHXZ PROC	; CvGameReligions::GetNumReligionsEnhanced, COMDAT
; _this$ = ecx

; 1862 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 1863 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 1864 : 
; 1865 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1866 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1867 : #else
; 1868 : 	ReligionList::const_iterator it;
; 1869 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN9@GetNumReli@2
$LN3@GetNumReli@2:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 328				; 00000148H
	mov	DWORD PTR _it$[ebp], edx
$LN9@GetNumReli@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 328				; 00000148H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN2@GetNumReli@2

; 1870 : #endif
; 1871 : 	{
; 1872 : 		if (it->m_bEnhanced)

	mov	eax, DWORD PTR _it$[ebp]
	movzx	ecx, BYTE PTR [eax+21]
	test	ecx, ecx
	je	SHORT $LN1@GetNumReli@2

; 1873 : 		{
; 1874 : 			iRtnValue++;

	mov	edx, DWORD PTR _iRtnValue$[ebp]
	add	edx, 1
	mov	DWORD PTR _iRtnValue$[ebp], edx
$LN1@GetNumReli@2:

; 1875 : 		}
; 1876 : 	}

	jmp	SHORT $LN3@GetNumReli@2
$LN2@GetNumReli@2:

; 1877 : 
; 1878 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]

; 1879 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumReligionsEnhanced@CvGameReligions@@QBEHXZ ENDP	; CvGameReligions::GetNumReligionsEnhanced
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T233300 = -4						; size = 4
?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ PROC ; CvGameReligions::GetNumReligionsStillToFound, COMDAT
; _this$ = ecx

; 1883 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 1884 : 	return (GC.getMap().getWorldInfo().getMaxActiveReligions() - GetNumReligionsFounded());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T233300[ebp], eax
	mov	ecx, DWORD PTR $T233300[ebp]
	call	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ ; CvMap::getWorldInfo
	mov	ecx, eax
	call	?getMaxActiveReligions@CvWorldInfo@@QBEHXZ ; CvWorldInfo::getMaxActiveReligions
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumReligionsFounded@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsFounded
	sub	esi, eax
	mov	eax, esi

; 1885 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ ENDP ; CvGameReligions::GetNumReligionsStillToFound
_TEXT	ENDS
PUBLIC	?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableFounderBeliefs
EXTRN	?IsFounderBelief@CvBeliefEntry@@QBE_NXZ:PROC	; CvBeliefEntry::IsFounderBelief
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$5
__ehfuncinfo$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
_TEXT	SEGMENT
_this$ = -236						; size = 4
$T233305 = -52						; size = 4
_pEntry$225007 = -48					; size = 4
_eBelief$225005 = -44					; size = 4
_iI$225000 = -40					; size = 4
_iNumBeleifs$ = -36					; size = 4
_pkBeliefs$ = -32					; size = 4
_availableBeliefs$ = -28				; size = 16
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ PROC ; CvGameReligions::GetAvailableFounderBeliefs, COMDAT
; _this$ = ecx

; 1889 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T233305[ebp], 0

; 1890 : 	std::vector<BeliefTypes> availableBeliefs;

	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1891 : 
; 1892 : 	CvBeliefXMLEntries* pkBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pkBeliefs$[ebp], eax

; 1893 : 	const int iNumBeleifs = pkBeliefs->GetNumBeliefs();

	mov	ecx, DWORD PTR _pkBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	mov	DWORD PTR _iNumBeleifs$[ebp], eax

; 1894 : 
; 1895 : 	availableBeliefs.reserve(iNumBeleifs);

	mov	eax, DWORD PTR _iNumBeleifs$[ebp]
	push	eax
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve

; 1896 : 	for(int iI = 0; iI < iNumBeleifs; iI++)

	mov	DWORD PTR _iI$225000[ebp], 0
	jmp	SHORT $LN5@GetAvailab@2
$LN4@GetAvailab@2:
	mov	ecx, DWORD PTR _iI$225000[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$225000[ebp], ecx
$LN5@GetAvailab@2:
	mov	edx, DWORD PTR _iI$225000[ebp]
	cmp	edx, DWORD PTR _iNumBeleifs$[ebp]
	jge	SHORT $LN3@GetAvailab@2

; 1897 : 	{
; 1898 : 		const BeliefTypes eBelief(static_cast<BeliefTypes>(iI));

	mov	eax, DWORD PTR _iI$225000[ebp]
	mov	DWORD PTR _eBelief$225005[ebp], eax

; 1899 : #ifdef AUI_WARNING_FIXES
; 1900 : 		CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);
; 1901 : 		if (pEntry && pEntry->IsFounderBelief())
; 1902 : 		{
; 1903 : 			if (!IsInSomeReligion(eBelief))
; 1904 : #else
; 1905 : 		if(!IsInSomeReligion(eBelief))

	mov	ecx, DWORD PTR _eBelief$225005[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@GetAvailab@2

; 1906 : 		{
; 1907 : 			CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);

	mov	eax, DWORD PTR _eBelief$225005[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	DWORD PTR _pEntry$225007[ebp], eax

; 1908 : 			if(pEntry && pEntry->IsFounderBelief())

	cmp	DWORD PTR _pEntry$225007[ebp], 0
	je	SHORT $LN2@GetAvailab@2
	mov	ecx, DWORD PTR _pEntry$225007[ebp]
	call	?IsFounderBelief@CvBeliefEntry@@QBE_NXZ	; CvBeliefEntry::IsFounderBelief
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetAvailab@2

; 1909 : #endif
; 1910 : 			{
; 1911 : 				availableBeliefs.push_back(eBelief);

	lea	edx, DWORD PTR _eBelief$225005[ebp]
	push	edx
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back
$LN2@GetAvailab@2:

; 1912 : 			}
; 1913 : 		}
; 1914 : 	}

	jmp	SHORT $LN4@GetAvailab@2
$LN3@GetAvailab@2:

; 1915 : 
; 1916 : 	return availableBeliefs;

	lea	eax, DWORD PTR _availableBeliefs$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
	mov	ecx, DWORD PTR $T233305[ebp]
	or	ecx, 1
	mov	DWORD PTR $T233305[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1917 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__unwindfunclet$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$1:
	mov	eax, DWORD PTR $T233305[ebp]
	and	eax, 1
	je	$LN10@GetAvailab@2
	and	DWORD PTR $T233305[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
$LN10@GetAvailab@2:
	ret	0
__unwindfunclet$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$5:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ENDP ; CvGameReligions::GetAvailableFounderBeliefs
PUBLIC	?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableFollowerBeliefs
EXTRN	?IsFollowerBelief@CvBeliefEntry@@QBE_NXZ:PROC	; CvBeliefEntry::IsFollowerBelief
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$5
__ehfuncinfo$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
_TEXT	SEGMENT
_this$ = -236						; size = 4
$T233573 = -52						; size = 4
_pEntry$225031 = -48					; size = 4
_eBelief$225029 = -44					; size = 4
_iI$225024 = -40					; size = 4
_iNumBeleifs$ = -36					; size = 4
_pkBeliefs$ = -32					; size = 4
_availableBeliefs$ = -28				; size = 16
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ PROC ; CvGameReligions::GetAvailableFollowerBeliefs, COMDAT
; _this$ = ecx

; 1921 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T233573[ebp], 0

; 1922 : 	std::vector<BeliefTypes> availableBeliefs;

	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1923 : 
; 1924 : 	CvBeliefXMLEntries* pkBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pkBeliefs$[ebp], eax

; 1925 : 	const int iNumBeleifs = pkBeliefs->GetNumBeliefs();

	mov	ecx, DWORD PTR _pkBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	mov	DWORD PTR _iNumBeleifs$[ebp], eax

; 1926 : 
; 1927 : 	availableBeliefs.reserve(iNumBeleifs);

	mov	eax, DWORD PTR _iNumBeleifs$[ebp]
	push	eax
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve

; 1928 : 	for(int iI = 0; iI < iNumBeleifs; iI++)

	mov	DWORD PTR _iI$225024[ebp], 0
	jmp	SHORT $LN5@GetAvailab@3
$LN4@GetAvailab@3:
	mov	ecx, DWORD PTR _iI$225024[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$225024[ebp], ecx
$LN5@GetAvailab@3:
	mov	edx, DWORD PTR _iI$225024[ebp]
	cmp	edx, DWORD PTR _iNumBeleifs$[ebp]
	jge	SHORT $LN3@GetAvailab@3

; 1929 : 	{
; 1930 : 		const BeliefTypes eBelief(static_cast<BeliefTypes>(iI));

	mov	eax, DWORD PTR _iI$225024[ebp]
	mov	DWORD PTR _eBelief$225029[ebp], eax

; 1931 : #ifdef AUI_WARNING_FIXES
; 1932 : 		CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);
; 1933 : 		if (pEntry && pEntry->IsFollowerBelief())
; 1934 : 		{
; 1935 : 			if (!IsInSomeReligion(eBelief))
; 1936 : #else
; 1937 : 		if(!IsInSomeReligion(eBelief))

	mov	ecx, DWORD PTR _eBelief$225029[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@GetAvailab@3

; 1938 : 		{
; 1939 : 			CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);

	mov	eax, DWORD PTR _eBelief$225029[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	DWORD PTR _pEntry$225031[ebp], eax

; 1940 : 			if(pEntry && pEntry->IsFollowerBelief())

	cmp	DWORD PTR _pEntry$225031[ebp], 0
	je	SHORT $LN2@GetAvailab@3
	mov	ecx, DWORD PTR _pEntry$225031[ebp]
	call	?IsFollowerBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsFollowerBelief
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetAvailab@3

; 1941 : #endif
; 1942 : 			{
; 1943 : 				availableBeliefs.push_back(eBelief);

	lea	edx, DWORD PTR _eBelief$225029[ebp]
	push	edx
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back
$LN2@GetAvailab@3:

; 1944 : 			}
; 1945 : 		}
; 1946 : 	}

	jmp	SHORT $LN4@GetAvailab@3
$LN3@GetAvailab@3:

; 1947 : 
; 1948 : 	return availableBeliefs;

	lea	eax, DWORD PTR _availableBeliefs$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
	mov	ecx, DWORD PTR $T233573[ebp]
	or	ecx, 1
	mov	DWORD PTR $T233573[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1949 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__unwindfunclet$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$1:
	mov	eax, DWORD PTR $T233573[ebp]
	and	eax, 1
	je	$LN10@GetAvailab@3
	and	DWORD PTR $T233573[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
$LN10@GetAvailab@3:
	ret	0
__unwindfunclet$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$5:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ENDP ; CvGameReligions::GetAvailableFollowerBeliefs
PUBLIC	?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableEnhancerBeliefs
EXTRN	?IsEnhancerBelief@CvBeliefEntry@@QBE_NXZ:PROC	; CvBeliefEntry::IsEnhancerBelief
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$5
__ehfuncinfo$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
_TEXT	SEGMENT
_this$ = -236						; size = 4
$T233841 = -52						; size = 4
_pEntry$225055 = -48					; size = 4
_eBelief$225053 = -44					; size = 4
_iI$225048 = -40					; size = 4
_iNumBeleifs$ = -36					; size = 4
_pkBeliefs$ = -32					; size = 4
_availableBeliefs$ = -28				; size = 16
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ PROC ; CvGameReligions::GetAvailableEnhancerBeliefs, COMDAT
; _this$ = ecx

; 1953 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T233841[ebp], 0

; 1954 : 	std::vector<BeliefTypes> availableBeliefs;

	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1955 : 
; 1956 : 	CvBeliefXMLEntries* pkBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pkBeliefs$[ebp], eax

; 1957 : 	const int iNumBeleifs = pkBeliefs->GetNumBeliefs();

	mov	ecx, DWORD PTR _pkBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	mov	DWORD PTR _iNumBeleifs$[ebp], eax

; 1958 : 
; 1959 : 	availableBeliefs.reserve(iNumBeleifs);

	mov	eax, DWORD PTR _iNumBeleifs$[ebp]
	push	eax
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve

; 1960 : 	for(int iI = 0; iI < iNumBeleifs; iI++)

	mov	DWORD PTR _iI$225048[ebp], 0
	jmp	SHORT $LN5@GetAvailab@4
$LN4@GetAvailab@4:
	mov	ecx, DWORD PTR _iI$225048[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$225048[ebp], ecx
$LN5@GetAvailab@4:
	mov	edx, DWORD PTR _iI$225048[ebp]
	cmp	edx, DWORD PTR _iNumBeleifs$[ebp]
	jge	SHORT $LN3@GetAvailab@4

; 1961 : 	{
; 1962 : 		const BeliefTypes eBelief(static_cast<BeliefTypes>(iI));

	mov	eax, DWORD PTR _iI$225048[ebp]
	mov	DWORD PTR _eBelief$225053[ebp], eax

; 1963 : #ifdef AUI_WARNING_FIXES
; 1964 : 		CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);
; 1965 : 		if (pEntry && pEntry->IsEnhancerBelief())
; 1966 : 		{
; 1967 : 			if (!IsInSomeReligion(eBelief))
; 1968 : #else
; 1969 : 		if(!IsInSomeReligion(eBelief))

	mov	ecx, DWORD PTR _eBelief$225053[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@GetAvailab@4

; 1970 : 		{
; 1971 : 			CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);

	mov	eax, DWORD PTR _eBelief$225053[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	DWORD PTR _pEntry$225055[ebp], eax

; 1972 : 			if(pEntry && pEntry->IsEnhancerBelief())

	cmp	DWORD PTR _pEntry$225055[ebp], 0
	je	SHORT $LN2@GetAvailab@4
	mov	ecx, DWORD PTR _pEntry$225055[ebp]
	call	?IsEnhancerBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsEnhancerBelief
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetAvailab@4

; 1973 : #endif
; 1974 : 			{
; 1975 : 				availableBeliefs.push_back(eBelief);

	lea	edx, DWORD PTR _eBelief$225053[ebp]
	push	edx
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back
$LN2@GetAvailab@4:

; 1976 : 			}
; 1977 : 		}
; 1978 : 	}

	jmp	SHORT $LN4@GetAvailab@4
$LN3@GetAvailab@4:

; 1979 : 
; 1980 : 	return availableBeliefs;

	lea	eax, DWORD PTR _availableBeliefs$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
	mov	ecx, DWORD PTR $T233841[ebp]
	or	ecx, 1
	mov	DWORD PTR $T233841[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1981 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__unwindfunclet$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$1:
	mov	eax, DWORD PTR $T233841[ebp]
	and	eax, 1
	je	$LN10@GetAvailab@4
	and	DWORD PTR $T233841[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
$LN10@GetAvailab@4:
	ret	0
__unwindfunclet$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$5:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ENDP ; CvGameReligions::GetAvailableEnhancerBeliefs
PUBLIC	?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableBonusBeliefs
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$5
__ehfuncinfo$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
_TEXT	SEGMENT
_this$ = -236						; size = 4
$T234109 = -52						; size = 4
_pEntry$225079 = -48					; size = 4
_eBelief$225077 = -44					; size = 4
_iI$225072 = -40					; size = 4
_iNumBeleifs$ = -36					; size = 4
_pkBeliefs$ = -32					; size = 4
_availableBeliefs$ = -28				; size = 16
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ PROC ; CvGameReligions::GetAvailableBonusBeliefs, COMDAT
; _this$ = ecx

; 1985 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T234109[ebp], 0

; 1986 : 	std::vector<BeliefTypes> availableBeliefs;

	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1987 : 
; 1988 : 	CvBeliefXMLEntries* pkBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pkBeliefs$[ebp], eax

; 1989 : 	const int iNumBeleifs = pkBeliefs->GetNumBeliefs();

	mov	ecx, DWORD PTR _pkBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	mov	DWORD PTR _iNumBeleifs$[ebp], eax

; 1990 : 
; 1991 : 	availableBeliefs.reserve(iNumBeleifs);

	mov	eax, DWORD PTR _iNumBeleifs$[ebp]
	push	eax
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve

; 1992 : 	for(int iI = 0; iI < iNumBeleifs; iI++)

	mov	DWORD PTR _iI$225072[ebp], 0
	jmp	SHORT $LN6@GetAvailab@5
$LN5@GetAvailab@5:
	mov	ecx, DWORD PTR _iI$225072[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$225072[ebp], ecx
$LN6@GetAvailab@5:
	mov	edx, DWORD PTR _iI$225072[ebp]
	cmp	edx, DWORD PTR _iNumBeleifs$[ebp]
	jge	SHORT $LN4@GetAvailab@5

; 1993 : 	{
; 1994 : 		const BeliefTypes eBelief(static_cast<BeliefTypes>(iI));

	mov	eax, DWORD PTR _iI$225072[ebp]
	mov	DWORD PTR _eBelief$225077[ebp], eax

; 1995 : #ifdef AUI_WARNING_FIXES
; 1996 : 		CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);
; 1997 : 		if (pEntry && (pEntry->IsEnhancerBelief() || pEntry->IsFollowerBelief() || pEntry->IsFounderBelief() || pEntry->IsPantheonBelief()))
; 1998 : 		{
; 1999 : 			if (!IsInSomeReligion(eBelief))
; 2000 : #else
; 2001 : 		if(!IsInSomeReligion(eBelief))

	mov	ecx, DWORD PTR _eBelief$225077[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@GetAvailab@5

; 2002 : 		{
; 2003 : 			CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);

	mov	eax, DWORD PTR _eBelief$225077[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	DWORD PTR _pEntry$225079[ebp], eax

; 2004 : 			if(pEntry && (pEntry->IsEnhancerBelief() || pEntry->IsFollowerBelief() || pEntry->IsFounderBelief() || pEntry->IsPantheonBelief()))

	cmp	DWORD PTR _pEntry$225079[ebp], 0
	je	SHORT $LN3@GetAvailab@5
	mov	ecx, DWORD PTR _pEntry$225079[ebp]
	call	?IsEnhancerBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsEnhancerBelief
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@GetAvailab@5
	mov	ecx, DWORD PTR _pEntry$225079[ebp]
	call	?IsFollowerBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsFollowerBelief
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@GetAvailab@5
	mov	ecx, DWORD PTR _pEntry$225079[ebp]
	call	?IsFounderBelief@CvBeliefEntry@@QBE_NXZ	; CvBeliefEntry::IsFounderBelief
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@GetAvailab@5
	mov	ecx, DWORD PTR _pEntry$225079[ebp]
	call	?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsPantheonBelief
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@GetAvailab@5
$LN1@GetAvailab@5:

; 2005 : #endif
; 2006 : 			{
; 2007 : 				availableBeliefs.push_back(eBelief);

	lea	edx, DWORD PTR _eBelief$225077[ebp]
	push	edx
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back
$LN3@GetAvailab@5:

; 2008 : 			}
; 2009 : 		}
; 2010 : 	}

	jmp	$LN5@GetAvailab@5
$LN4@GetAvailab@5:

; 2011 : 
; 2012 : 	return availableBeliefs;

	lea	eax, DWORD PTR _availableBeliefs$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
	mov	ecx, DWORD PTR $T234109[ebp]
	or	ecx, 1
	mov	DWORD PTR $T234109[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2013 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__unwindfunclet$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$1:
	mov	eax, DWORD PTR $T234109[ebp]
	and	eax, 1
	je	$LN11@GetAvailab@5
	and	DWORD PTR $T234109[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
$LN11@GetAvailab@5:
	ret	0
__unwindfunclet$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$5:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ENDP ; CvGameReligions::GetAvailableBonusBeliefs
PUBLIC	?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableReformationBeliefs
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$5
__ehfuncinfo$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
_TEXT	SEGMENT
_this$ = -236						; size = 4
$T234377 = -52						; size = 4
_pEntry$225104 = -48					; size = 4
_eBelief$225102 = -44					; size = 4
_iI$225097 = -40					; size = 4
_iNumBeleifs$ = -36					; size = 4
_pkBeliefs$ = -32					; size = 4
_availableBeliefs$ = -28				; size = 16
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ PROC ; CvGameReligions::GetAvailableReformationBeliefs, COMDAT
; _this$ = ecx

; 2017 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T234377[ebp], 0

; 2018 : 	std::vector<BeliefTypes> availableBeliefs;

	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 2019 : 
; 2020 : 	CvBeliefXMLEntries* pkBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	DWORD PTR _pkBeliefs$[ebp], eax

; 2021 : 	const int iNumBeleifs = pkBeliefs->GetNumBeliefs();

	mov	ecx, DWORD PTR _pkBeliefs$[ebp]
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	mov	DWORD PTR _iNumBeleifs$[ebp], eax

; 2022 : 
; 2023 : 	availableBeliefs.reserve(iNumBeleifs);

	mov	eax, DWORD PTR _iNumBeleifs$[ebp]
	push	eax
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve

; 2024 : 	for(int iI = 0; iI < iNumBeleifs; iI++)

	mov	DWORD PTR _iI$225097[ebp], 0
	jmp	SHORT $LN5@GetAvailab@6
$LN4@GetAvailab@6:
	mov	ecx, DWORD PTR _iI$225097[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$225097[ebp], ecx
$LN5@GetAvailab@6:
	mov	edx, DWORD PTR _iI$225097[ebp]
	cmp	edx, DWORD PTR _iNumBeleifs$[ebp]
	jge	SHORT $LN3@GetAvailab@6

; 2025 : 	{
; 2026 : 		const BeliefTypes eBelief(static_cast<BeliefTypes>(iI));

	mov	eax, DWORD PTR _iI$225097[ebp]
	mov	DWORD PTR _eBelief$225102[ebp], eax

; 2027 : #ifdef AUI_WARNING_FIXES
; 2028 : 		CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);
; 2029 : 		if (pEntry && pEntry->IsReformationBelief())
; 2030 : 		{
; 2031 : 			if (!IsInSomeReligion(eBelief))
; 2032 : #else
; 2033 : 		if(!IsInSomeReligion(eBelief))

	mov	ecx, DWORD PTR _eBelief$225102[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@GetAvailab@6

; 2034 : 		{
; 2035 : 			CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);

	mov	eax, DWORD PTR _eBelief$225102[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkBeliefs$[ebp]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	DWORD PTR _pEntry$225104[ebp], eax

; 2036 : 			if(pEntry && pEntry->IsReformationBelief())

	cmp	DWORD PTR _pEntry$225104[ebp], 0
	je	SHORT $LN2@GetAvailab@6
	mov	ecx, DWORD PTR _pEntry$225104[ebp]
	call	?IsReformationBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsReformationBelief
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetAvailab@6

; 2037 : #endif
; 2038 : 			{
; 2039 : 				availableBeliefs.push_back(eBelief);

	lea	edx, DWORD PTR _eBelief$225102[ebp]
	push	edx
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back
$LN2@GetAvailab@6:

; 2040 : 			}
; 2041 : 		}
; 2042 : 	}

	jmp	SHORT $LN4@GetAvailab@6
$LN3@GetAvailab@6:

; 2043 : 
; 2044 : 	return availableBeliefs;

	lea	eax, DWORD PTR _availableBeliefs$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
	mov	ecx, DWORD PTR $T234377[ebp]
	or	ecx, 1
	mov	DWORD PTR $T234377[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2045 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__unwindfunclet$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$1:
	mov	eax, DWORD PTR $T234377[ebp]
	and	eax, 1
	je	$LN10@GetAvailab@6
	and	DWORD PTR $T234377[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
$LN10@GetAvailab@6:
	ret	0
__unwindfunclet$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$5:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ENDP ; CvGameReligions::GetAvailableReformationBeliefs
PUBLIC	?plotDistance@@YAHHHHH@Z			; plotDistance
EXTRN	?GetReligionSpreadStrengthModifier@CvGameLeagues@@QAEHW4PlayerTypes@@W4ReligionTypes@@@Z:PROC ; CvGameLeagues::GetReligionSpreadStrengthModifier
EXTRN	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ:PROC ; CvGame::GetGameLeagues
EXTRN	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z:PROC	; CvTeamTechs::HasTech
EXTRN	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ:PROC ; CvTeam::GetTeamTechs
EXTRN	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ:PROC ; CvPlayer::GetPlayerTraits
EXTRN	?IsCityConnectedFromCityToCity@CvGameTrade@@QAE_NPAVCvCity@@0@Z:PROC ; CvGameTrade::IsCityConnectedFromCityToCity
EXTRN	?getReligiousPressureAdjacentCity@CvGameSpeedInfo@@QBEHXZ:PROC ; CvGameSpeedInfo::getReligiousPressureAdjacentCity
EXTRN	?IsCityConnectedToCity@CvGameTrade@@QAE_NPAVCvCity@@0@Z:PROC ; CvGameTrade::IsCityConnectedToCity
EXTRN	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ:PROC ; CvGame::GetGameTrade
; Function compile flags: /Odtp
;	COMDAT ?GetAdjacentCityReligiousPressure@CvGameReligions@@QAEHW4ReligionTypes@@PAVCvCity@@1AAH_N@Z
_TEXT	SEGMENT
tv141 = -180						; size = 4
_this$ = -176						; size = 4
$T234827 = -172						; size = 4
$T234823 = -168						; size = 4
$T234819 = -164						; size = 4
$T234804 = -160						; size = 4
$T234795 = -156						; size = 4
$T234791 = -152						; size = 4
$T234770 = -148						; size = 4
$T234761 = -144						; size = 4
$T234757 = -140						; size = 4
$T234753 = -136						; size = 4
$T234744 = -132						; size = 4
$T234740 = -128						; size = 4
$T234736 = -124						; size = 4
$T234695 = -76						; size = 4
$T234686 = -72						; size = 4
$T234677 = -68						; size = 4
$T234668 = -64						; size = 4
$T234653 = -60						; size = 4
_kPlayer$225140 = -56					; size = 4
_eDoublingTech$225138 = -52				; size = 4
_iFriendshipMod$225134 = -48				; size = 4
_iTradeReligionModifer$225130 = -44			; size = 4
_bIncrementTRInfluencing$225125 = -37			; size = 1
_iStrengthMod$225136 = -36				; size = 4
_iModifier$225148 = -32					; size = 4
_iLeaguesMod$225146 = -28				; size = 4
_iOwnedCityModifier$225142 = -24			; size = 4
_iDistanceMod$ = -20					; size = 4
_iPressure$ = -16					; size = 4
_iDistance$ = -12					; size = 4
_bConnectedWithTrade$ = -6				; size = 1
_bWithinDistance$ = -5					; size = 1
_pReligion$ = -4					; size = 4
_eReligion$ = 8						; size = 4
_pFromCity$ = 12					; size = 4
_pToCity$ = 16						; size = 4
_iNumTradeRoutesInfluencing$ = 20			; size = 4
_bPretendTradeConnection$ = 24				; size = 1
?GetAdjacentCityReligiousPressure@CvGameReligions@@QAEHW4ReligionTypes@@PAVCvCity@@1AAH_N@Z PROC ; CvGameReligions::GetAdjacentCityReligiousPressure, COMDAT
; _this$ = ecx

; 2170 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 180				; 000000b4H
	mov	DWORD PTR _this$[ebp], ecx

; 2171 : 	int iPressure = 0;

	mov	DWORD PTR _iPressure$[ebp], 0

; 2172 : 	iNumTradeRoutesInfluencing = 0;

	mov	eax, DWORD PTR _iNumTradeRoutesInfluencing$[ebp]
	mov	DWORD PTR [eax], 0

; 2173 : 
; 2174 : 	if (eReligion <= RELIGION_PANTHEON)

	cmp	DWORD PTR _eReligion$[ebp], 0
	jg	SHORT $LN28@GetAdjacen

; 2175 : 	{
; 2176 : 		return iPressure;

	mov	eax, DWORD PTR _iPressure$[ebp]
	jmp	$LN22@GetAdjacen

; 2177 : 	}
; 2178 : 
; 2179 : 	const CvReligion* pReligion = GetReligion(eReligion, pFromCity->getOwner());

$LN28@GetAdjacen:
	mov	ecx, DWORD PTR _pFromCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T234653[ebp], edx
	mov	eax, DWORD PTR $T234653[ebp]
	push	eax
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$[ebp], eax

; 2180 : 	if (!pReligion)

	cmp	DWORD PTR _pReligion$[ebp], 0
	jne	SHORT $LN20@GetAdjacen

; 2181 : 	{
; 2182 : 		return iPressure;

	mov	eax, DWORD PTR _iPressure$[ebp]
	jmp	$LN22@GetAdjacen
$LN20@GetAdjacen:

; 2183 : 	}
; 2184 : 
; 2185 : 	// Are the cities within the minimum distance?
; 2186 : 	int iDistance = GC.getRELIGION_ADJACENT_CITY_DISTANCE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7904
	mov	DWORD PTR _iDistance$[ebp], edx

; 2187 : 
; 2188 : 	// Boost to distance due to belief?
; 2189 : 	int iDistanceMod = pReligion->m_Beliefs.GetSpreadDistanceModifier();

	mov	eax, DWORD PTR _pReligion$[ebp]
	mov	ecx, DWORD PTR [eax+188]
	mov	DWORD PTR _iDistanceMod$[ebp], ecx

; 2190 : 	if(iDistanceMod > 0)

	cmp	DWORD PTR _iDistanceMod$[ebp], 0
	jle	SHORT $LN36@GetAdjacen

; 2191 : 	{
; 2192 : 		iDistance *= (100 + iDistanceMod);

	mov	edx, DWORD PTR _iDistanceMod$[ebp]
	add	edx, 100				; 00000064H
	imul	edx, DWORD PTR _iDistance$[ebp]
	mov	DWORD PTR _iDistance$[ebp], edx

; 2193 : 		iDistance /= 100;

	mov	eax, DWORD PTR _iDistance$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iDistance$[ebp], eax

; 2194 : 	}
; 2195 : 
; 2196 : 	bool bWithinDistance = (plotDistance(pFromCity->getX(), pFromCity->getY(), pToCity->getX(), pToCity->getY()) <= iDistance);

$LN36@GetAdjacen:
	mov	edx, DWORD PTR _pToCity$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T234668[ebp], eax
	mov	ecx, DWORD PTR _pToCity$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T234677[ebp], edx
	mov	eax, DWORD PTR _pFromCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T234686[ebp], ecx
	mov	edx, DWORD PTR _pFromCity$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T234695[ebp], eax
	mov	ecx, DWORD PTR $T234668[ebp]
	push	ecx
	mov	edx, DWORD PTR $T234677[ebp]
	push	edx
	mov	eax, DWORD PTR $T234686[ebp]
	push	eax
	mov	ecx, DWORD PTR $T234695[ebp]
	push	ecx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	xor	edx, edx
	cmp	eax, DWORD PTR _iDistance$[ebp]
	setle	dl
	mov	BYTE PTR _bWithinDistance$[ebp], dl

; 2197 : 	bool bConnectedWithTrade = GC.getGame().GetGameTrade()->IsCityConnectedToCity(pFromCity, pToCity) || bPretendTradeConnection;

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T234736[ebp], eax
	mov	ecx, DWORD PTR _pToCity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pFromCity$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T234736[ebp]
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ecx, eax
	call	?IsCityConnectedToCity@CvGameTrade@@QAE_NPAVCvCity@@0@Z ; CvGameTrade::IsCityConnectedToCity
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN24@GetAdjacen
	movzx	ecx, BYTE PTR _bPretendTradeConnection$[ebp]
	test	ecx, ecx
	jne	SHORT $LN24@GetAdjacen
	mov	DWORD PTR tv141[ebp], 0
	jmp	SHORT $LN25@GetAdjacen
$LN24@GetAdjacen:
	mov	DWORD PTR tv141[ebp], 1
$LN25@GetAdjacen:
	mov	dl, BYTE PTR tv141[ebp]
	mov	BYTE PTR _bConnectedWithTrade$[ebp], dl

; 2198 : 
; 2199 : 	if(bWithinDistance || bConnectedWithTrade)

	movzx	eax, BYTE PTR _bWithinDistance$[ebp]
	test	eax, eax
	jne	SHORT $LN17@GetAdjacen
	movzx	ecx, BYTE PTR _bConnectedWithTrade$[ebp]
	test	ecx, ecx
	je	$LN18@GetAdjacen
$LN17@GetAdjacen:

; 2200 : 	{
; 2201 : 		bool bIncrementTRInfluencing = false;

	mov	BYTE PTR _bIncrementTRInfluencing$225125[ebp], 0

; 2202 : 		iPressure = GC.getGame().getGameSpeedInfo().getReligiousPressureAdjacentCity();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T234740[ebp], edx
	mov	ecx, DWORD PTR $T234740[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getReligiousPressureAdjacentCity@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getReligiousPressureAdjacentCity
	mov	DWORD PTR _iPressure$[ebp], eax

; 2203 : 		if (bConnectedWithTrade && !bWithinDistance)

	movzx	eax, BYTE PTR _bConnectedWithTrade$[ebp]
	test	eax, eax
	je	SHORT $LN16@GetAdjacen
	movzx	ecx, BYTE PTR _bWithinDistance$[ebp]
	test	ecx, ecx
	jne	SHORT $LN16@GetAdjacen

; 2204 : 		{
; 2205 : 			if (!bIncrementTRInfluencing)

	movzx	edx, BYTE PTR _bIncrementTRInfluencing$225125[ebp]
	test	edx, edx
	jne	SHORT $LN16@GetAdjacen

; 2206 : 			{
; 2207 : 				iNumTradeRoutesInfluencing++;

	mov	eax, DWORD PTR _iNumTradeRoutesInfluencing$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _iNumTradeRoutesInfluencing$[ebp]
	mov	DWORD PTR [edx], ecx

; 2208 : 				bIncrementTRInfluencing = true;

	mov	BYTE PTR _bIncrementTRInfluencing$225125[ebp], 1
$LN16@GetAdjacen:

; 2209 : 			}
; 2210 : 		}
; 2211 : 
; 2212 : 		if (bConnectedWithTrade)

	movzx	eax, BYTE PTR _bConnectedWithTrade$[ebp]
	test	eax, eax
	je	$LN90@GetAdjacen

; 2213 : 		{
; 2214 : 			if (GC.getGame().GetGameTrade()->IsCityConnectedFromCityToCity(pFromCity, pToCity))

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T234744[ebp], ecx
	mov	edx, DWORD PTR _pToCity$[ebp]
	push	edx
	mov	eax, DWORD PTR _pFromCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T234744[ebp]
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ecx, eax
	call	?IsCityConnectedFromCityToCity@CvGameTrade@@QAE_NPAVCvCity@@0@Z ; CvGameTrade::IsCityConnectedFromCityToCity
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN90@GetAdjacen

; 2215 : 			{
; 2216 : 				int iTradeReligionModifer = GET_PLAYER(pFromCity->getOwner()).GetPlayerTraits()->GetTradeReligionModifier();

	mov	edx, DWORD PTR _pFromCity$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T234753[ebp], eax
	mov	ecx, DWORD PTR $T234753[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T234757[ebp], ecx
	mov	ecx, DWORD PTR $T234757[ebp]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T234761[ebp], eax
	mov	edx, DWORD PTR $T234761[ebp]
	mov	eax, DWORD PTR [edx+324]
	mov	DWORD PTR _iTradeReligionModifer$225130[ebp], eax

; 2217 : 				if (iTradeReligionModifer != 0)

	cmp	DWORD PTR _iTradeReligionModifer$225130[ebp], 0
	je	SHORT $LN90@GetAdjacen

; 2218 : 				{
; 2219 : 					iPressure *= 100 + iTradeReligionModifer;

	mov	ecx, DWORD PTR _iTradeReligionModifer$225130[ebp]
	add	ecx, 100				; 00000064H
	imul	ecx, DWORD PTR _iPressure$[ebp]
	mov	DWORD PTR _iPressure$[ebp], ecx

; 2220 : 					iPressure /= 100;

	mov	eax, DWORD PTR _iPressure$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iPressure$[ebp], eax

; 2221 : 
; 2222 : 					if (!bIncrementTRInfluencing)

	movzx	edx, BYTE PTR _bIncrementTRInfluencing$225125[ebp]
	test	edx, edx
	jne	SHORT $LN90@GetAdjacen

; 2223 : 					{
; 2224 : 						iNumTradeRoutesInfluencing++;

	mov	eax, DWORD PTR _iNumTradeRoutesInfluencing$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _iNumTradeRoutesInfluencing$[ebp]
	mov	DWORD PTR [edx], ecx

; 2225 : 						bIncrementTRInfluencing = true;

	mov	BYTE PTR _bIncrementTRInfluencing$225125[ebp], 1

; 2226 : 					}
; 2227 : 				}
; 2228 : 			}
; 2229 : 		}
; 2230 : 
; 2231 : 		// If we are spreading to a friendly city state, increase the effectiveness if we have the right belief
; 2232 : 		if(IsCityStateFriendOfReligionFounder(eReligion, pToCity->getOwner()))

$LN90@GetAdjacen:
	mov	eax, DWORD PTR _pToCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T234770[ebp], ecx
	mov	edx, DWORD PTR $T234770[ebp]
	push	edx
	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCityStateFriendOfReligionFounder@CvGameReligions@@QAE_NW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::IsCityStateFriendOfReligionFounder
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@GetAdjacen

; 2233 : 		{
; 2234 : 			int iFriendshipMod = pReligion->m_Beliefs.GetFriendlyCityStateSpreadModifier();

	mov	edx, DWORD PTR _pReligion$[ebp]
	mov	eax, DWORD PTR [edx+244]
	mov	DWORD PTR _iFriendshipMod$225134[ebp], eax

; 2235 : 			if(iFriendshipMod > 0)

	cmp	DWORD PTR _iFriendshipMod$225134[ebp], 0
	jle	SHORT $LN10@GetAdjacen

; 2236 : 			{
; 2237 : 				iPressure *= (100 + iFriendshipMod);

	mov	ecx, DWORD PTR _iFriendshipMod$225134[ebp]
	add	ecx, 100				; 00000064H
	imul	ecx, DWORD PTR _iPressure$[ebp]
	mov	DWORD PTR _iPressure$[ebp], ecx

; 2238 : 				iPressure /= 100;

	mov	eax, DWORD PTR _iPressure$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iPressure$[ebp], eax
$LN10@GetAdjacen:

; 2239 : 			}
; 2240 : 		}
; 2241 : 
; 2242 : 		// Have a belief that always strengthens spread?
; 2243 : 		int iStrengthMod = pReligion->m_Beliefs.GetSpreadStrengthModifier();

	mov	edx, DWORD PTR _pReligion$[ebp]
	mov	eax, DWORD PTR [edx+192]
	mov	DWORD PTR _iStrengthMod$225136[ebp], eax

; 2244 : 		if(iStrengthMod > 0)

	cmp	DWORD PTR _iStrengthMod$225136[ebp], 0
	jle	$LN8@GetAdjacen

; 2245 : 		{
; 2246 : 			TechTypes eDoublingTech = pReligion->m_Beliefs.GetSpreadModifierDoublingTech();

	mov	ecx, DWORD PTR _pReligion$[ebp]
	mov	edx, DWORD PTR [ecx+284]
	mov	DWORD PTR _eDoublingTech$225138[ebp], edx

; 2247 : 			if(eDoublingTech != NO_TECH)

	cmp	DWORD PTR _eDoublingTech$225138[ebp], -1
	je	SHORT $LN7@GetAdjacen

; 2248 : 			{
; 2249 : 				CvPlayer& kPlayer = GET_PLAYER(pReligion->m_eFounder);

	mov	eax, DWORD PTR _pReligion$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$225140[ebp], ecx

; 2250 : 				if(GET_TEAM(kPlayer.getTeam()).GetTeamTechs()->HasTech(eDoublingTech))

	mov	edx, DWORD PTR _kPlayer$225140[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T234791[ebp], eax
	mov	ecx, DWORD PTR $T234791[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T234795[ebp], ecx
	mov	edx, DWORD PTR _eDoublingTech$225138[ebp]
	push	edx
	mov	ecx, DWORD PTR $T234795[ebp]
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs
	mov	ecx, eax
	call	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z ; CvTeamTechs::HasTech
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@GetAdjacen

; 2251 : 				{
; 2252 : 					iStrengthMod *= 2;

	mov	ecx, DWORD PTR _iStrengthMod$225136[ebp]
	shl	ecx, 1
	mov	DWORD PTR _iStrengthMod$225136[ebp], ecx
$LN7@GetAdjacen:

; 2253 : 				}
; 2254 : 			}
; 2255 : 			iPressure *= (100 + iStrengthMod);

	mov	edx, DWORD PTR _iStrengthMod$225136[ebp]
	add	edx, 100				; 00000064H
	imul	edx, DWORD PTR _iPressure$[ebp]
	mov	DWORD PTR _iPressure$[ebp], edx

; 2256 : 			iPressure /= 100;

	mov	eax, DWORD PTR _iPressure$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iPressure$[ebp], eax
$LN8@GetAdjacen:

; 2257 : 		}
; 2258 : 
; 2259 : #ifdef NQ_SPREAD_MODIFIER_OWNED_CITIES
; 2260 : 		// modifier if this religion spreads to cities owned by founder or not owned by founder
; 2261 : 		int iOwnedCityModifier = 0;

	mov	DWORD PTR _iOwnedCityModifier$225142[ebp], 0

; 2262 : 		if (pToCity->getOwner() == pReligion->m_eFounder)

	mov	edx, DWORD PTR _pToCity$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T234804[ebp], eax
	mov	ecx, DWORD PTR _pReligion$[ebp]
	mov	edx, DWORD PTR $T234804[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN5@GetAdjacen

; 2263 : 		{
; 2264 : 			iOwnedCityModifier = pReligion->m_Beliefs.GetSpreadModifierOwnedCities();

	mov	eax, DWORD PTR _pReligion$[ebp]
	mov	ecx, DWORD PTR [eax+216]
	mov	DWORD PTR _iOwnedCityModifier$225142[ebp], ecx

; 2265 : 		}
; 2266 : 		else

	jmp	SHORT $LN4@GetAdjacen
$LN5@GetAdjacen:

; 2267 : 		{
; 2268 : 			iOwnedCityModifier = pReligion->m_Beliefs.GetSpreadModifierUnownedCities();

	mov	edx, DWORD PTR _pReligion$[ebp]
	mov	eax, DWORD PTR [edx+220]
	mov	DWORD PTR _iOwnedCityModifier$225142[ebp], eax
$LN4@GetAdjacen:

; 2269 : 		}
; 2270 : 		if (iOwnedCityModifier != 0)

	cmp	DWORD PTR _iOwnedCityModifier$225142[ebp], 0
	je	SHORT $LN116@GetAdjacen

; 2271 : 		{
; 2272 : 			iPressure *= (100 + iOwnedCityModifier);

	mov	ecx, DWORD PTR _iOwnedCityModifier$225142[ebp]
	add	ecx, 100				; 00000064H
	imul	ecx, DWORD PTR _iPressure$[ebp]
	mov	DWORD PTR _iPressure$[ebp], ecx

; 2273 : 			iPressure /= 100;

	mov	eax, DWORD PTR _iPressure$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iPressure$[ebp], eax

; 2274 : 		}
; 2275 : #endif
; 2276 : 
; 2277 : 		// Strengthened spread from World Congress? (World Religion)
; 2278 : 		int iLeaguesMod = GC.getGame().GetGameLeagues()->GetReligionSpreadStrengthModifier(pFromCity->getOwner(), eReligion);

$LN116@GetAdjacen:
	mov	edx, DWORD PTR _pFromCity$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T234819[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T234823[ebp], ecx
	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	eax, DWORD PTR $T234819[ebp]
	push	eax
	mov	ecx, DWORD PTR $T234823[ebp]
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetReligionSpreadStrengthModifier@CvGameLeagues@@QAEHW4PlayerTypes@@W4ReligionTypes@@@Z ; CvGameLeagues::GetReligionSpreadStrengthModifier
	mov	DWORD PTR _iLeaguesMod$225146[ebp], eax

; 2279 : 		if (iLeaguesMod > 0)

	cmp	DWORD PTR _iLeaguesMod$225146[ebp], 0
	jle	SHORT $LN2@GetAdjacen

; 2280 : 		{
; 2281 : 			iPressure *= (100 + iLeaguesMod);

	mov	ecx, DWORD PTR _iLeaguesMod$225146[ebp]
	add	ecx, 100				; 00000064H
	imul	ecx, DWORD PTR _iPressure$[ebp]
	mov	DWORD PTR _iPressure$[ebp], ecx

; 2282 : 			iPressure /= 100;

	mov	eax, DWORD PTR _iPressure$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iPressure$[ebp], eax
$LN2@GetAdjacen:

; 2283 : 		}
; 2284 : 
; 2285 : 		// Building that boosts pressure from originating city?
; 2286 : 		int iModifier = pFromCity->GetCityReligions()->GetReligiousPressureModifier();

	mov	ecx, DWORD PTR _pFromCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	DWORD PTR $T234827[ebp], eax
	mov	edx, DWORD PTR $T234827[ebp]
	mov	eax, DWORD PTR [edx+424]
	mov	DWORD PTR _iModifier$225148[ebp], eax

; 2287 : 		if (iModifier > 0)

	cmp	DWORD PTR _iModifier$225148[ebp], 0
	jle	SHORT $LN18@GetAdjacen

; 2288 : 		{
; 2289 : 			iPressure *= (100 + iModifier);

	mov	ecx, DWORD PTR _iModifier$225148[ebp]
	add	ecx, 100				; 00000064H
	imul	ecx, DWORD PTR _iPressure$[ebp]
	mov	DWORD PTR _iPressure$[ebp], ecx

; 2290 : 			iPressure /= 100;

	mov	eax, DWORD PTR _iPressure$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iPressure$[ebp], eax
$LN18@GetAdjacen:

; 2291 : 		}
; 2292 : 	}
; 2293 : 
; 2294 : 	return iPressure;

	mov	eax, DWORD PTR _iPressure$[ebp]
$LN22@GetAdjacen:

; 2295 : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?GetAdjacentCityReligiousPressure@CvGameReligions@@QAEHW4ReligionTypes@@PAVCvCity@@1AAH_N@Z ENDP ; CvGameReligions::GetAdjacentCityReligiousPressure
_TEXT	ENDS
PUBLIC	?dyWrap@@YAHH@Z					; dyWrap
PUBLIC	?dxWrap@@YAHH@Z					; dxWrap
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?plotDistance@@YAHHHHH@Z
_TEXT	SEGMENT
tv157 = -92						; size = 4
tv138 = -88						; size = 4
tv135 = -84						; size = 4
$T234910 = -80						; size = 4
$T234884 = -60						; size = 4
_iDY$ = -24						; size = 4
_iDX$ = -20						; size = 4
_iWrappedDX$ = -16					; size = 4
_iHX1$ = -12						; size = 4
_iHX2$ = -8						; size = 4
_iWrappedDY$ = -4					; size = 4
_iX1$ = 8						; size = 4
_iY1$ = 12						; size = 4
_iX2$ = 16						; size = 4
_iY2$ = 20						; size = 4
?plotDistance@@YAHHHHH@Z PROC				; plotDistance, COMDAT

; 144  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH

; 145  : 	int iDX;
; 146  : 	int iWrappedDX = dxWrap(iX2 - iX1);

	mov	eax, DWORD PTR _iX2$[ebp]
	sub	eax, DWORD PTR _iX1$[ebp]
	push	eax
	call	?dxWrap@@YAHH@Z				; dxWrap
	add	esp, 4
	mov	DWORD PTR _iWrappedDX$[ebp], eax

; 147  : 	int iWrappedDY = dyWrap(iY2 - iY1);

	mov	ecx, DWORD PTR _iY2$[ebp]
	sub	ecx, DWORD PTR _iY1$[ebp]
	push	ecx
	call	?dyWrap@@YAHH@Z				; dyWrap
	add	esp, 4
	mov	DWORD PTR _iWrappedDY$[ebp], eax

; 148  : 	int iDY = abs(iWrappedDY);

	mov	eax, DWORD PTR _iWrappedDY$[ebp]
	cdq
	xor	eax, edx
	sub	eax, edx
	mov	DWORD PTR _iDY$[ebp], eax

; 149  : 
; 150  : 	// convert to hex-space coordinates - the coordinate system axes are E and NE (not orthogonal)
; 151  : 	int iHX1 = xToHexspaceX(iX1, iY1);

	cmp	DWORD PTR _iY1$[ebp], 0
	jl	SHORT $LN35@plotDistan
	mov	edx, DWORD PTR _iY1$[ebp]
	sar	edx, 1
	mov	DWORD PTR tv135[ebp], edx
	jmp	SHORT $LN33@plotDistan
$LN35@plotDistan:
	mov	eax, DWORD PTR _iY1$[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR tv135[ebp], eax
$LN33@plotDistan:
	mov	eax, DWORD PTR _iX1$[ebp]
	sub	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR _iHX1$[ebp], eax

; 152  : 	int iHX2 = xToHexspaceX(iX1 + iWrappedDX, iY1 + iWrappedDY);

	mov	ecx, DWORD PTR _iY1$[ebp]
	add	ecx, DWORD PTR _iWrappedDY$[ebp]
	mov	DWORD PTR $T234884[ebp], ecx
	js	SHORT $LN39@plotDistan
	mov	edx, DWORD PTR $T234884[ebp]
	sar	edx, 1
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN37@plotDistan
$LN39@plotDistan:
	mov	eax, DWORD PTR $T234884[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR tv138[ebp], eax
$LN37@plotDistan:
	mov	eax, DWORD PTR _iX1$[ebp]
	add	eax, DWORD PTR _iWrappedDX$[ebp]
	sub	eax, DWORD PTR tv138[ebp]
	mov	DWORD PTR _iHX2$[ebp], eax

; 153  : 
; 154  : 	iDX = abs(dxWrap(iHX2 - iHX1));

	mov	ecx, DWORD PTR _iHX2$[ebp]
	sub	ecx, DWORD PTR _iHX1$[ebp]
	push	ecx
	call	?dxWrap@@YAHH@Z				; dxWrap
	add	esp, 4
	cdq
	xor	eax, edx
	sub	eax, edx
	mov	DWORD PTR _iDX$[ebp], eax

; 155  : 
; 156  : #ifdef NQM_GAME_CORE_UTILS_OPTIMIZATIONS
; 157  : 	if (((iHX2 - iHX1) ^ (iWrappedDY)) >= 0)  // the signs match
; 158  : #else
; 159  : 	if((iHX2 - iHX1 >= 0) == (iWrappedDY >= 0))  // the signs match

	mov	edx, DWORD PTR _iHX2$[ebp]
	sub	edx, DWORD PTR _iHX1$[ebp]
	xor	eax, eax
	test	edx, edx
	setge	al
	xor	ecx, ecx
	cmp	DWORD PTR _iWrappedDY$[ebp], 0
	setge	cl
	cmp	eax, ecx
	jne	SHORT $LN2@plotDistan

; 160  : #endif
; 161  : 	{
; 162  : 		return iDX + iDY;

	mov	eax, DWORD PTR _iDX$[ebp]
	add	eax, DWORD PTR _iDY$[ebp]
	jmp	SHORT $LN3@plotDistan

; 163  : 	}
; 164  : 	else

	jmp	SHORT $LN3@plotDistan
$LN2@plotDistan:

; 165  : 	{
; 166  : #ifdef NQM_FAST_COMP
; 167  : 		return (MAX(iDX, iDY));
; 168  : #else
; 169  : 		return (std::max(iDX, iDY));

	mov	edx, DWORD PTR _iDX$[ebp]
	cmp	edx, DWORD PTR _iDY$[ebp]
	jge	SHORT $LN57@plotDistan
	lea	eax, DWORD PTR _iDY$[ebp]
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $LN58@plotDistan
$LN57@plotDistan:
	lea	ecx, DWORD PTR _iDX$[ebp]
	mov	DWORD PTR tv157[ebp], ecx
$LN58@plotDistan:
	mov	edx, DWORD PTR tv157[ebp]
	mov	DWORD PTR $T234910[ebp], edx
	mov	eax, DWORD PTR $T234910[ebp]
	mov	eax, DWORD PTR [eax]
$LN3@plotDistan:

; 170  : #endif
; 171  : 	}
; 172  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?plotDistance@@YAHHHHH@Z ENDP				; plotDistance
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?dxWrap@@YAHH@Z
_TEXT	SEGMENT
$T234934 = -16						; size = 4
$T234926 = -12						; size = 4
$T234922 = -5						; size = 1
_kMap$ = -4						; size = 4
_iDX$ = 8						; size = 4
?dxWrap@@YAHH@Z PROC					; dxWrap, COMDAT

; 73   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 74   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR _kMap$[ebp], eax

; 75   : 	return wrapCoordDifference(iDX, kMap.getGridWidth(), kMap.isWrapX());

	mov	ecx, DWORD PTR _kMap$[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T234922[ebp], dl
	mov	eax, DWORD PTR _kMap$[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T234926[ebp], ecx
	movzx	edx, BYTE PTR $T234922[ebp]
	test	edx, edx
	je	SHORT $LN12@dxWrap
	mov	eax, DWORD PTR $T234926[ebp]
	shr	eax, 1
	cmp	DWORD PTR _iDX$[ebp], eax
	jle	SHORT $LN11@dxWrap
	mov	ecx, DWORD PTR _iDX$[ebp]
	sub	ecx, DWORD PTR $T234926[ebp]
	mov	DWORD PTR $T234934[ebp], ecx
	jmp	SHORT $LN13@dxWrap
	jmp	SHORT $LN12@dxWrap
$LN11@dxWrap:
	mov	edx, DWORD PTR $T234926[ebp]
	shr	edx, 1
	neg	edx
	cmp	DWORD PTR _iDX$[ebp], edx
	jge	SHORT $LN12@dxWrap
	mov	eax, DWORD PTR _iDX$[ebp]
	add	eax, DWORD PTR $T234926[ebp]
	mov	DWORD PTR $T234934[ebp], eax
	jmp	SHORT $LN13@dxWrap
$LN12@dxWrap:
	mov	ecx, DWORD PTR _iDX$[ebp]
	mov	DWORD PTR $T234934[ebp], ecx
$LN13@dxWrap:
	mov	eax, DWORD PTR $T234934[ebp]

; 76   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?dxWrap@@YAHH@Z ENDP					; dxWrap
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?dyWrap@@YAHH@Z
_TEXT	SEGMENT
$T234955 = -16						; size = 4
$T234947 = -12						; size = 4
$T234943 = -5						; size = 1
_kMap$ = -4						; size = 4
_iDY$ = 8						; size = 4
?dyWrap@@YAHH@Z PROC					; dyWrap, COMDAT

; 79   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 80   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR _kMap$[ebp], eax

; 81   : 	return wrapCoordDifference(iDY, kMap.getGridHeight(), kMap.isWrapY());

	mov	ecx, DWORD PTR _kMap$[ebp]
	mov	dl, BYTE PTR [ecx+4057]
	mov	BYTE PTR $T234943[ebp], dl
	mov	eax, DWORD PTR _kMap$[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T234947[ebp], ecx
	movzx	edx, BYTE PTR $T234943[ebp]
	test	edx, edx
	je	SHORT $LN12@dyWrap
	mov	eax, DWORD PTR $T234947[ebp]
	shr	eax, 1
	cmp	DWORD PTR _iDY$[ebp], eax
	jle	SHORT $LN11@dyWrap
	mov	ecx, DWORD PTR _iDY$[ebp]
	sub	ecx, DWORD PTR $T234947[ebp]
	mov	DWORD PTR $T234955[ebp], ecx
	jmp	SHORT $LN13@dyWrap
	jmp	SHORT $LN12@dyWrap
$LN11@dyWrap:
	mov	edx, DWORD PTR $T234947[ebp]
	shr	edx, 1
	neg	edx
	cmp	DWORD PTR _iDY$[ebp], edx
	jge	SHORT $LN12@dyWrap
	mov	eax, DWORD PTR _iDY$[ebp]
	add	eax, DWORD PTR $T234947[ebp]
	mov	DWORD PTR $T234955[ebp], eax
	jmp	SHORT $LN13@dyWrap
$LN12@dyWrap:
	mov	ecx, DWORD PTR _iDY$[ebp]
	mov	DWORD PTR $T234955[ebp], ecx
$LN13@dyWrap:
	mov	eax, DWORD PTR $T234955[ebp]

; 82   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?dyWrap@@YAHH@Z ENDP					; dyWrap
_TEXT	ENDS
PUBLIC	?GetFaithGreatProphetNumber@CvGameReligions@@QBEHH@Z ; CvGameReligions::GetFaithGreatProphetNumber
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
;	COMDAT ?GetFaithGreatProphetNumber@CvGameReligions@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T234964 = -8						; size = 4
_iRtnValue$ = -4					; size = 4
_iNum$ = 8						; size = 4
?GetFaithGreatProphetNumber@CvGameReligions@@QBEHH@Z PROC ; CvGameReligions::GetFaithGreatProphetNumber, COMDAT
; _this$ = ecx

; 2299 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 2300 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 2301 : 
; 2302 : 	if(iNum >= 1)

	cmp	DWORD PTR _iNum$[ebp], 1
	jl	SHORT $LN3@GetFaithGr

; 2303 : 	{
; 2304 : 		if(iNum == 1)

	cmp	DWORD PTR _iNum$[ebp], 1
	jne	SHORT $LN2@GetFaithGr

; 2305 : 		{
; 2306 : 			iRtnValue = GC.getRELIGION_MIN_FAITH_FIRST_PROPHET();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7864
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 2307 : 		}
; 2308 : 		else

	jmp	SHORT $LN3@GetFaithGr
$LN2@GetFaithGr:

; 2309 : 		{
; 2310 : 			iRtnValue = (GC.getRELIGION_FAITH_DELTA_NEXT_PROPHET() * (iNum - 1)) + GetFaithGreatProphetNumber(iNum - 1);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7876
	mov	DWORD PTR $T234964[ebp], ecx
	mov	edx, DWORD PTR _iNum$[ebp]
	sub	edx, 1
	mov	esi, edx
	imul	esi, DWORD PTR $T234964[ebp]
	mov	eax, DWORD PTR _iNum$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFaithGreatProphetNumber@CvGameReligions@@QBEHH@Z ; CvGameReligions::GetFaithGreatProphetNumber
	add	esi, eax
	mov	DWORD PTR _iRtnValue$[ebp], esi
$LN3@GetFaithGr:

; 2311 : 		}
; 2312 : 	}
; 2313 : 
; 2314 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]

; 2315 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?GetFaithGreatProphetNumber@CvGameReligions@@QBEHH@Z ENDP ; CvGameReligions::GetFaithGreatProphetNumber
_TEXT	ENDS
PUBLIC	?GetFaithGreatPersonNumber@CvGameReligions@@QBEHH@Z ; CvGameReligions::GetFaithGreatPersonNumber
; Function compile flags: /Odtp
;	COMDAT ?GetFaithGreatPersonNumber@CvGameReligions@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T234973 = -8						; size = 4
_iRtnValue$ = -4					; size = 4
_iNum$ = 8						; size = 4
?GetFaithGreatPersonNumber@CvGameReligions@@QBEHH@Z PROC ; CvGameReligions::GetFaithGreatPersonNumber, COMDAT
; _this$ = ecx

; 2319 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 2320 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 2321 : 
; 2322 : 	if(iNum >= 1)

	cmp	DWORD PTR _iNum$[ebp], 1
	jl	SHORT $LN3@GetFaithGr@2

; 2323 : 	{
; 2324 : 		if(iNum == 1)

	cmp	DWORD PTR _iNum$[ebp], 1
	jne	SHORT $LN2@GetFaithGr@2

; 2325 : 		{
; 2326 : 			iRtnValue = GC.getRELIGION_MIN_FAITH_FIRST_GREAT_PERSON();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7868
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 2327 : 		}
; 2328 : 		else

	jmp	SHORT $LN3@GetFaithGr@2
$LN2@GetFaithGr@2:

; 2329 : 		{
; 2330 : 			iRtnValue = (GC.getRELIGION_FAITH_DELTA_NEXT_GREAT_PERSON() * (iNum - 1)) + GetFaithGreatPersonNumber(iNum - 1);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7880
	mov	DWORD PTR $T234973[ebp], ecx
	mov	edx, DWORD PTR _iNum$[ebp]
	sub	edx, 1
	mov	esi, edx
	imul	esi, DWORD PTR $T234973[ebp]
	mov	eax, DWORD PTR _iNum$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFaithGreatPersonNumber@CvGameReligions@@QBEHH@Z ; CvGameReligions::GetFaithGreatPersonNumber
	add	esi, eax
	mov	DWORD PTR _iRtnValue$[ebp], esi
$LN3@GetFaithGr@2:

; 2331 : 		}
; 2332 : 	}
; 2333 : 
; 2334 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]

; 2335 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?GetFaithGreatPersonNumber@CvGameReligions@@QBEHH@Z ENDP ; CvGameReligions::GetFaithGreatPersonNumber
_TEXT	ENDS
PUBLIC	?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ ; CvCityReligions::GetSecondaryReligionPantheonBelief
PUBLIC	?GetBeliefYieldForKill@CvGameReligions@@QAEHW4YieldTypes@@HHW4PlayerTypes@@@Z ; CvGameReligions::GetBeliefYieldForKill
EXTRN	?GetMaxDistance@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetMaxDistance
EXTRN	?GetFaithFromKills@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetFaithFromKills
EXTRN	?GetFaithFromKills@CvReligionBeliefs@@QBEHH@Z:PROC ; CvReligionBeliefs::GetFaithFromKills
; Function compile flags: /Odtp
;	COMDAT ?GetBeliefYieldForKill@CvGameReligions@@QAEHW4YieldTypes@@HHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -128						; size = 4
$T235001 = -44						; size = 4
$T234992 = -40						; size = 4
$T234983 = -36						; size = 4
$T234979 = -32						; size = 4
_eSecondaryPantheon$225186 = -28			; size = 4
_iDistance$225183 = -24					; size = 4
_eReligion$225181 = -20					; size = 4
_iRtnValue$ = -16					; size = 4
_iMultiplier$ = -12					; size = 4
_pLoopCity$ = -8					; size = 4
_iLoop$ = -4						; size = 4
_eYield$ = 8						; size = 4
_iX$ = 12						; size = 4
_iY$ = 16						; size = 4
_eWinningPlayer$ = 20					; size = 4
?GetBeliefYieldForKill@CvGameReligions@@QAEHW4YieldTypes@@HHW4PlayerTypes@@@Z PROC ; CvGameReligions::GetBeliefYieldForKill, COMDAT
; _this$ = ecx

; 2343 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	mov	DWORD PTR _this$[ebp], ecx

; 2344 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 2345 : 	int iMultiplier;
; 2346 : 	int iLoop;
; 2347 : 	CvCity* pLoopCity;
; 2348 : 
; 2349 : 	// Only Faith supported for now
; 2350 : 	if(eYield != YIELD_FAITH)

	cmp	DWORD PTR _eYield$[ebp], 5
	je	SHORT $LN9@GetBeliefY

; 2351 : 	{
; 2352 : 		return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]
	jmp	$LN10@GetBeliefY
$LN9@GetBeliefY:

; 2353 : 	}
; 2354 : 
; 2355 : 	for(pLoopCity = GET_PLAYER(eWinningPlayer).firstCity(&iLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(eWinningPlayer).nextCity(&iLoop))

	mov	eax, DWORD PTR _eWinningPlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T234979[ebp], eax
	push	0
	lea	ecx, DWORD PTR _iLoop$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T234979[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN8@GetBeliefY
$LN7@GetBeliefY:
	mov	edx, DWORD PTR _eWinningPlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T234983[ebp], edx
	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T234983[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN8@GetBeliefY:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	$LN6@GetBeliefY

; 2356 : 	{
; 2357 : 		// Find religion in this city
; 2358 : 		ReligionTypes eReligion = pLoopCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eReligion$225181[ebp], eax

; 2359 : 
; 2360 : 		if(eReligion != NO_RELIGION)

	cmp	DWORD PTR _eReligion$225181[ebp], -1
	je	$LN5@GetBeliefY

; 2361 : 		{
; 2362 : 			// Find distance to this city
; 2363 : 			int iDistance = plotDistance(iX, iY, pLoopCity->getX(), pLoopCity->getY());

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T234992[ebp], edx
	mov	eax, DWORD PTR _pLoopCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T235001[ebp], ecx
	mov	edx, DWORD PTR $T234992[ebp]
	push	edx
	mov	eax, DWORD PTR $T235001[ebp]
	push	eax
	mov	ecx, DWORD PTR _iY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iX$[ebp]
	push	edx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	mov	DWORD PTR _iDistance$225183[ebp], eax

; 2364 : 
; 2365 : 			// Do we have a yield from this?
; 2366 : 			iMultiplier = GetReligion(eReligion, eWinningPlayer)->m_Beliefs.GetFaithFromKills(iDistance);

	mov	eax, DWORD PTR _iDistance$225183[ebp]
	push	eax
	mov	ecx, DWORD PTR _eWinningPlayer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eReligion$225181[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	add	eax, 152				; 00000098H
	mov	ecx, eax
	call	?GetFaithFromKills@CvReligionBeliefs@@QBEHH@Z ; CvReligionBeliefs::GetFaithFromKills
	mov	DWORD PTR _iMultiplier$[ebp], eax

; 2367 : 			if(iMultiplier > 0)

	cmp	DWORD PTR _iMultiplier$[ebp], 0
	jle	SHORT $LN4@GetBeliefY

; 2368 : 			{
; 2369 : 				// Just looking for one city providing this
; 2370 : 				iRtnValue = iMultiplier;

	mov	eax, DWORD PTR _iMultiplier$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 2371 : 				break;

	jmp	SHORT $LN6@GetBeliefY

; 2372 : 			}
; 2373 : 			else

	jmp	SHORT $LN5@GetBeliefY
$LN4@GetBeliefY:

; 2374 : 			{
; 2375 : 				BeliefTypes eSecondaryPantheon = pLoopCity->GetCityReligions()->GetSecondaryReligionPantheonBelief();

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ ; CvCityReligions::GetSecondaryReligionPantheonBelief
	mov	DWORD PTR _eSecondaryPantheon$225186[ebp], eax

; 2376 : 				if (eSecondaryPantheon != NO_BELIEF)

	cmp	DWORD PTR _eSecondaryPantheon$225186[ebp], -1
	je	SHORT $LN5@GetBeliefY

; 2377 : 				{
; 2378 : 					iMultiplier = GC.GetGameBeliefs()->GetEntry(eSecondaryPantheon)->GetFaithFromKills();

	mov	ecx, DWORD PTR _eSecondaryPantheon$225186[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ecx, eax
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetFaithFromKills@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFaithFromKills
	mov	DWORD PTR _iMultiplier$[ebp], eax

; 2379 : 					if(iMultiplier > 0 && iDistance <= GC.GetGameBeliefs()->GetEntry(eSecondaryPantheon)->GetMaxDistance())

	cmp	DWORD PTR _iMultiplier$[ebp], 0
	jle	SHORT $LN5@GetBeliefY
	mov	edx, DWORD PTR _eSecondaryPantheon$225186[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ecx, eax
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetMaxDistance@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetMaxDistance
	cmp	DWORD PTR _iDistance$225183[ebp], eax
	jg	SHORT $LN5@GetBeliefY

; 2380 : 					{
; 2381 : 						// Just looking for one city providing this
; 2382 : 						iRtnValue = iMultiplier;

	mov	eax, DWORD PTR _iMultiplier$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 2383 : 						break;

	jmp	SHORT $LN6@GetBeliefY
$LN5@GetBeliefY:

; 2384 : 					}	
; 2385 : 				}
; 2386 : 			}
; 2387 : 		}
; 2388 : 	}

	jmp	$LN7@GetBeliefY
$LN6@GetBeliefY:

; 2389 : 
; 2390 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]
$LN10@GetBeliefY:

; 2391 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetBeliefYieldForKill@CvGameReligions@@QAEHW4YieldTypes@@HHW4PlayerTypes@@@Z ENDP ; CvGameReligions::GetBeliefYieldForKill
_TEXT	ENDS
PUBLIC	??_C@_0BA@KPNJFBDL@ReligionLog?4csv?$AA@	; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ ; CvGameReligions::GetLogFileName
;	COMDAT ??_C@_0BA@KPNJFBDL@ReligionLog?4csv?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0BA@KPNJFBDL@ReligionLog?4csv?$AA@ DB 'ReligionLog.csv', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ$0
__ehfuncinfo$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ
_TEXT	SEGMENT
_this$ = -52						; size = 4
$T235092 = -48						; size = 4
_strLogName$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ PROC ; CvGameReligions::GetLogFileName, COMDAT
; _this$ = ecx

; 2395 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T235092[ebp], 0

; 2396 : 	CvString strLogName;

	lea	ecx, DWORD PTR _strLogName$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 2397 : 	strLogName = "ReligionLog.csv";

	mov	eax, OFFSET ??_C@_0BA@KPNJFBDL@ReligionLog?4csv?$AA@
	test	eax, eax
	je	SHORT $LN10@GetLogFile
	push	OFFSET ??_C@_0BA@KPNJFBDL@ReligionLog?4csv?$AA@
	lea	ecx, DWORD PTR _strLogName$[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN11@GetLogFile
$LN10@GetLogFile:
	lea	ecx, DWORD PTR _strLogName$[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN11@GetLogFile:

; 2398 : 	return strLogName;

	lea	ecx, DWORD PTR _strLogName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T235092[ebp]
	or	edx, 1
	mov	DWORD PTR $T235092[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strLogName$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2399 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ$0:
	lea	ecx, DWORD PTR _strLogName$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ$1:
	mov	eax, DWORD PTR $T235092[ebp]
	and	eax, 1
	je	$LN5@GetLogFile
	and	DWORD PTR $T235092[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN5@GetLogFile:
	ret	0
__ehhandler$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ ENDP ; CvGameReligions::GetLogFileName
; Function compile flags: /Odtp
;	COMDAT ?HasBeenFounded@CvGameReligions@@AAE_NW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_it$ = -4						; size = 4
_eReligion$ = 8						; size = 4
?HasBeenFounded@CvGameReligions@@AAE_NW4ReligionTypes@@@Z PROC ; CvGameReligions::HasBeenFounded, COMDAT
; _this$ = ecx

; 2409 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2410 : 	ReligionList::const_iterator it;
; 2411 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 2412 : 	for (it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 2413 : #else
; 2414 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN9@HasBeenFou
$LN3@HasBeenFou:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 328				; 00000148H
	mov	DWORD PTR _it$[ebp], edx
$LN9@HasBeenFou:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 328				; 00000148H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN2@HasBeenFou

; 2415 : #endif
; 2416 : 	{
; 2417 : 		if(it->m_eReligion == eReligion)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN1@HasBeenFou

; 2418 : 		{
; 2419 : 			return true;

	mov	al, 1
	jmp	SHORT $LN5@HasBeenFou
$LN1@HasBeenFou:

; 2420 : 		}
; 2421 : 	}

	jmp	SHORT $LN3@HasBeenFou
$LN2@HasBeenFou:

; 2422 : 
; 2423 : 	return false;

	xor	al, al
$LN5@HasBeenFou:

; 2424 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?HasBeenFounded@CvGameReligions@@AAE_NW4ReligionTypes@@@Z ENDP ; CvGameReligions::HasBeenFounded
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsPreferredByCivInGame@CvGameReligions@@AAE_NW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T235138 = -17						; size = 1
_loopPlayer$225214 = -16				; size = 4
_eCivReligion$225216 = -12				; size = 4
_iI$225209 = -8						; size = 4
_eLoopPlayer$ = -4					; size = 4
_eReligion$ = 8						; size = 4
?IsPreferredByCivInGame@CvGameReligions@@AAE_NW4ReligionTypes@@@Z PROC ; CvGameReligions::IsPreferredByCivInGame, COMDAT
; _this$ = ecx

; 2432 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 2433 : 	PlayerTypes eLoopPlayer;
; 2434 : 
; 2435 : 	for(int iI = 0; iI < MAX_MAJOR_CIVS; iI++)

	mov	DWORD PTR _iI$225209[ebp], 0
	jmp	SHORT $LN5@IsPreferre
$LN4@IsPreferre:
	mov	eax, DWORD PTR _iI$225209[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$225209[ebp], eax
$LN5@IsPreferre:
	cmp	DWORD PTR _iI$225209[ebp], 22		; 00000016H
	jge	SHORT $LN3@IsPreferre

; 2436 : 	{
; 2437 : 		eLoopPlayer = (PlayerTypes) iI;

	mov	ecx, DWORD PTR _iI$225209[ebp]
	mov	DWORD PTR _eLoopPlayer$[ebp], ecx

; 2438 : 		CvPlayer& loopPlayer = GET_PLAYER(eLoopPlayer);

	mov	edx, DWORD PTR _eLoopPlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _loopPlayer$225214[ebp], edx

; 2439 : 
; 2440 : 		if(!loopPlayer.isAlive())

	mov	eax, DWORD PTR _loopPlayer$225214[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T235138[ebp], cl
	movzx	edx, BYTE PTR $T235138[ebp]
	test	edx, edx
	jne	SHORT $LN2@IsPreferre

; 2441 : 		{
; 2442 : 			continue;

	jmp	SHORT $LN4@IsPreferre
$LN2@IsPreferre:

; 2443 : 		}
; 2444 : 
; 2445 : 		ReligionTypes eCivReligion = loopPlayer.getCivilizationInfo().GetReligion();

	mov	ecx, DWORD PTR _loopPlayer$225214[ebp]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?GetReligion@CvCivilizationInfo@@QBE?AW4ReligionTypes@@XZ ; CvCivilizationInfo::GetReligion
	mov	DWORD PTR _eCivReligion$225216[ebp], eax

; 2446 : 		if(eCivReligion == eReligion)

	mov	eax, DWORD PTR _eCivReligion$225216[ebp]
	cmp	eax, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN1@IsPreferre

; 2447 : 		{
; 2448 : 			return true;

	mov	al, 1
	jmp	SHORT $LN6@IsPreferre
$LN1@IsPreferre:

; 2449 : 		}
; 2450 : 	}

	jmp	SHORT $LN4@IsPreferre
$LN3@IsPreferre:

; 2451 : 
; 2452 : 	return false;

	xor	al, al
$LN6@IsPreferre:

; 2453 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsPreferredByCivInGame@CvGameReligions@@AAE_NW4ReligionTypes@@@Z ENDP ; CvGameReligions::IsPreferredByCivInGame
_TEXT	ENDS
PUBLIC	??_C@_0L@LJCIJIMA@?0?5Faith?3?50?$AA@		; `string'
PUBLIC	??_C@_0BE@GGBPOOIH@?0?5PROPHET?5SPAWNED?0?5?$AA@ ; `string'
PUBLIC	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ		; CvPlot::getPlotCity
PUBLIC	?isPlot@CvMap@@QBEHHH@Z				; CvMap::isPlot
PUBLIC	?coordRange@@YAHHH_N@Z				; coordRange
PUBLIC	??_C@_0CE@PMFLGKMB@Religion?3?5spawn?5Great?5Prophet?5ro@ ; `string'
PUBLIC	?GetCostNextProphet@CvPlayerReligions@@QBEH_N0@Z ; CvPlayerReligions::GetCostNextProphet
PUBLIC	??_C@_0BC@HNFIELJF@UNITCLASS_PROPHET?$AA@	; `string'
PUBLIC	__$ArrayPad$
EXTRN	?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z:PROC ; CvCityCitizens::DoSpawnGreatPerson
EXTRN	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ:PROC ; CvCity::GetCityCitizens
EXTRN	?getJonRandNum@CvGame@@QAEHHPBD@Z:PROC		; CvGame::getJonRandNum
EXTRN	?getCivilizationUnits@CvCivilizationInfo@@QBEHH@Z:PROC ; CvCivilizationInfo::getCivilizationUnits
;	COMDAT ??_C@_0L@LJCIJIMA@?0?5Faith?3?50?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0L@LJCIJIMA@?0?5Faith?3?50?$AA@ DB ', Faith: 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GGBPOOIH@?0?5PROPHET?5SPAWNED?0?5?$AA@
CONST	SEGMENT
??_C@_0BE@GGBPOOIH@?0?5PROPHET?5SPAWNED?0?5?$AA@ DB ', PROPHET SPAWNED, ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@PMFLGKMB@Religion?3?5spawn?5Great?5Prophet?5ro@
CONST	SEGMENT
??_C@_0CE@PMFLGKMB@Religion?3?5spawn?5Great?5Prophet?5ro@ DB 'Religion: s'
	DB	'pawn Great Prophet roll.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HNFIELJF@UNITCLASS_PROPHET?$AA@
CONST	SEGMENT
??_C@_0BC@HNFIELJF@UNITCLASS_PROPHET?$AA@ DB 'UNITCLASS_PROPHET', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z$1
__ehfuncinfo$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z
_TEXT	SEGMENT
tv223 = -196						; size = 4
tv145 = -192						; size = 4
tv257 = -188						; size = 4
_this$ = -184						; size = 4
$T235270 = -180						; size = 4
$T235260 = -176						; size = 4
$T235251 = -172						; size = 4
$T235237 = -164						; size = 4
$T235236 = -160						; size = 4
$T235235 = -156						; size = 4
$T235204 = -152						; size = 4
$T235199 = -148						; size = 4
$T235195 = -141						; size = 1
$T235184 = -140						; size = 4
$T235180 = -133						; size = 1
_iMapY$235234 = -132					; size = 4
_iMapX$235233 = -128					; size = 4
$T235173 = -124						; size = 4
$T235169 = -120						; size = 4
$T235162 = -116						; size = 4
$T235153 = -112						; size = 4
$T235142 = -108						; size = 28
_strLogMsg$225247 = -80					; size = 28
__$ArrayPad$ = -52					; size = 4
_eUnit$ = -48						; size = 4
_iRand$ = -44						; size = 4
_pSpawnCity$ = -40					; size = 4
_iFaith$ = -36						; size = 4
_iChance$ = -32						; size = 4
_ePlayerReligion$ = -28					; size = 4
_eUnitClass$ = -24					; size = 4
_pReligion$ = -20					; size = 4
_iCost$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_kPlayer$ = 8						; size = 4
?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z PROC ; CvGameReligions::CheckSpawnGreatProphet, COMDAT
; _this$ = ecx

; 2457 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 184				; 000000b8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2458 : #ifdef LEK_UNIQUE_FAITH_UNIT_FIX
; 2459 : 	UnitClassTypes eUnitClass = (UnitClassTypes) GC.getInfoTypeForString("UNITCLASS_PROPHET", true);

	push	1
	push	OFFSET ??_C@_0BC@HNFIELJF@UNITCLASS_PROPHET?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eUnitClass$[ebp], eax

; 2460 : 	UnitTypes eUnit = (UnitTypes) kPlayer.getCivilizationInfo().getCivilizationUnits(eUnitClass);

	mov	eax, DWORD PTR _eUnitClass$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationUnits@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationUnits
	mov	DWORD PTR _eUnit$[ebp], eax

; 2461 : #else
; 2462 : 	UnitTypes eUnit = (UnitTypes)GC.getInfoTypeForString("UNIT_PROPHET", true);
; 2463 : #endif
; 2464 : 
; 2465 : 
; 2466 : #ifdef LEK_UNIQUE_FAITH_UNIT_FIX
; 2467 : 	
; 2468 : 	if (eUnitClass == NO_UNITCLASS)

	cmp	DWORD PTR _eUnitClass$[ebp], -1
	jne	SHORT $LN12@CheckSpawn

; 2469 :     {
; 2470 :         return false;

	xor	al, al
	jmp	$LN13@CheckSpawn
$LN12@CheckSpawn:

; 2471 :     }
; 2472 : #endif
; 2473 : 	if (eUnit == NO_UNIT)

	cmp	DWORD PTR _eUnit$[ebp], -1
	jne	SHORT $LN11@CheckSpawn

; 2474 : 	{
; 2475 : 		return false;

	xor	al, al
	jmp	$LN13@CheckSpawn
$LN11@CheckSpawn:

; 2476 : 	}
; 2477 : 
; 2478 : 	const CvReligion* pReligion = NULL;

	mov	DWORD PTR _pReligion$[ebp], 0

; 2479 : 	const int iFaith = kPlayer.GetFaith();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	mov	DWORD PTR _iFaith$[ebp], eax

; 2480 : 	int iCost = kPlayer.GetReligions()->GetCostNextProphet(true /*bIncludeBeliefDiscounts*/, true /*bAdjustForSpeedDifficulty*/);

	push	1
	push	1
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetCostNextProphet@CvPlayerReligions@@QBEH_N0@Z ; CvPlayerReligions::GetCostNextProphet
	mov	DWORD PTR _iCost$[ebp], eax

; 2481 : 
; 2482 : 	ReligionTypes ePlayerReligion = GetReligionCreatedByPlayer(kPlayer.GetID());

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T235153[ebp], edx
	mov	eax, DWORD PTR $T235153[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _ePlayerReligion$[ebp], eax

; 2483 : 	if(ePlayerReligion > RELIGION_PANTHEON)

	cmp	DWORD PTR _ePlayerReligion$[ebp], 0
	jle	SHORT $LN10@CheckSpawn

; 2484 : 	{
; 2485 : 		pReligion = GetReligion(ePlayerReligion, kPlayer.GetID());

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T235162[ebp], edx
	mov	eax, DWORD PTR $T235162[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayerReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$[ebp], eax
	jmp	SHORT $LN9@CheckSpawn
$LN10@CheckSpawn:

; 2486 : 	}
; 2487 : 
; 2488 : 	// If player hasn't founded a religion yet, drop out of this if all religions have been founded
; 2489 : 	else if(GetNumReligionsStillToFound() <= 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsStillToFound
	test	eax, eax
	jg	SHORT $LN9@CheckSpawn

; 2490 : 	{
; 2491 : 		return false;

	xor	al, al
	jmp	$LN13@CheckSpawn
$LN9@CheckSpawn:

; 2492 : 	}
; 2493 : 
; 2494 : 	if(iFaith < iCost)

	mov	edx, DWORD PTR _iFaith$[ebp]
	cmp	edx, DWORD PTR _iCost$[ebp]
	jge	SHORT $LN7@CheckSpawn

; 2495 : 	{
; 2496 : 		return false;

	xor	al, al
	jmp	$LN13@CheckSpawn
$LN7@CheckSpawn:

; 2497 : 	}
; 2498 : 
; 2499 : 	int iChance = GC.getRELIGION_BASE_CHANCE_PROPHET_SPAWN();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7884
	mov	DWORD PTR _iChance$[ebp], eax

; 2500 : 	iChance += (iFaith - iCost);

	mov	ecx, DWORD PTR _iFaith$[ebp]
	sub	ecx, DWORD PTR _iCost$[ebp]
	add	ecx, DWORD PTR _iChance$[ebp]
	mov	DWORD PTR _iChance$[ebp], ecx

; 2501 : 
; 2502 : 	int iRand = GC.getGame().getJonRandNum(100, "Religion: spawn Great Prophet roll.");

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235169[ebp], edx
	push	OFFSET ??_C@_0CE@PMFLGKMB@Religion?3?5spawn?5Great?5Prophet?5ro@
	push	100					; 00000064H
	mov	ecx, DWORD PTR $T235169[ebp]
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	mov	DWORD PTR _iRand$[ebp], eax

; 2503 : 	if(iRand >= iChance)

	mov	eax, DWORD PTR _iRand$[ebp]
	cmp	eax, DWORD PTR _iChance$[ebp]
	jl	SHORT $LN6@CheckSpawn

; 2504 : 	{
; 2505 : 		return false;

	xor	al, al
	jmp	$LN13@CheckSpawn
$LN6@CheckSpawn:

; 2506 : 	}
; 2507 : 
; 2508 : 	CvCity* pSpawnCity = NULL;

	mov	DWORD PTR _pSpawnCity$[ebp], 0

; 2509 : 	if(pReligion)

	cmp	DWORD PTR _pReligion$[ebp], 0
	je	$LN5@CheckSpawn

; 2510 : 	{
; 2511 : 		pSpawnCity = GC.getMap().plot(pReligion->m_iHolyCityX, pReligion->m_iHolyCityY)->getPlotCity();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T235173[ebp], ecx
	mov	edx, DWORD PTR _pReligion$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR $T235236[ebp], eax
	mov	ecx, DWORD PTR _pReligion$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T235235[ebp], edx
	cmp	DWORD PTR $T235235[ebp], -2147483647	; 80000001H
	je	SHORT $LN31@CheckSpawn
	cmp	DWORD PTR $T235236[ebp], -2147483647	; 80000001H
	jne	SHORT $LN32@CheckSpawn
$LN31@CheckSpawn:
	mov	DWORD PTR $T235237[ebp], 0
	jmp	$LN33@CheckSpawn
$LN32@CheckSpawn:
	mov	eax, DWORD PTR $T235173[ebp]
	mov	cl, BYTE PTR [eax+4056]
	mov	BYTE PTR $T235180[ebp], cl
	mov	edx, DWORD PTR $T235173[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T235184[ebp], eax
	movzx	ecx, BYTE PTR $T235180[ebp]
	test	ecx, ecx
	je	SHORT $LN44@CheckSpawn
	cmp	DWORD PTR $T235235[ebp], 0
	jge	SHORT $LN43@CheckSpawn
	mov	eax, DWORD PTR $T235235[ebp]
	cdq
	idiv	DWORD PTR $T235184[ebp]
	add	edx, DWORD PTR $T235184[ebp]
	mov	DWORD PTR _iMapX$235233[ebp], edx
	jmp	SHORT $LN45@CheckSpawn
	jmp	SHORT $LN44@CheckSpawn
$LN43@CheckSpawn:
	mov	edx, DWORD PTR $T235235[ebp]
	cmp	edx, DWORD PTR $T235184[ebp]
	jl	SHORT $LN44@CheckSpawn
	mov	eax, DWORD PTR $T235235[ebp]
	cdq
	idiv	DWORD PTR $T235184[ebp]
	mov	DWORD PTR _iMapX$235233[ebp], edx
	jmp	SHORT $LN45@CheckSpawn
$LN44@CheckSpawn:
	mov	eax, DWORD PTR $T235235[ebp]
	mov	DWORD PTR _iMapX$235233[ebp], eax
$LN45@CheckSpawn:
	mov	ecx, DWORD PTR $T235173[ebp]
	mov	dl, BYTE PTR [ecx+4057]
	mov	BYTE PTR $T235195[ebp], dl
	mov	eax, DWORD PTR $T235173[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T235199[ebp], ecx
	movzx	edx, BYTE PTR $T235195[ebp]
	push	edx
	mov	eax, DWORD PTR $T235199[ebp]
	push	eax
	mov	ecx, DWORD PTR $T235236[ebp]
	push	ecx
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$235234[ebp], eax
	mov	edx, DWORD PTR _iMapY$235234[ebp]
	push	edx
	mov	eax, DWORD PTR _iMapX$235233[ebp]
	push	eax
	mov	ecx, DWORD PTR $T235173[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN35@CheckSpawn
	mov	ecx, DWORD PTR $T235173[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T235204[ebp], edx
	mov	eax, DWORD PTR _iMapY$235234[ebp]
	imul	eax, DWORD PTR $T235204[ebp]
	add	eax, DWORD PTR _iMapX$235233[ebp]
	imul	eax, 484				; 000001e4H
	mov	ecx, DWORD PTR $T235173[ebp]
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR tv257[ebp], eax
	jmp	SHORT $LN36@CheckSpawn
$LN35@CheckSpawn:
	mov	DWORD PTR tv257[ebp], 0
$LN36@CheckSpawn:
	mov	edx, DWORD PTR tv257[ebp]
	mov	DWORD PTR $T235237[ebp], edx
$LN33@CheckSpawn:
	mov	ecx, DWORD PTR $T235237[ebp]
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	DWORD PTR _pSpawnCity$[ebp], eax
$LN5@CheckSpawn:

; 2512 : 	}
; 2513 : 
; 2514 : 	if(pSpawnCity != NULL && pSpawnCity->getOwner() == kPlayer.GetID())

	cmp	DWORD PTR _pSpawnCity$[ebp], 0
	je	SHORT $LN4@CheckSpawn
	mov	eax, DWORD PTR _pSpawnCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T235251[ebp], ecx
	mov	edx, DWORD PTR _kPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T235260[ebp], eax
	mov	ecx, DWORD PTR $T235251[ebp]
	cmp	ecx, DWORD PTR $T235260[ebp]
	jne	SHORT $LN4@CheckSpawn

; 2515 : 	{
; 2516 : #ifdef LEK_UNIQUE_FAITH_UNIT_FIX
; 2517 : 		pSpawnCity->GetCityCitizens()->DoSpawnGreatPerson(eUnit, false /*bIncrementCount*/, true);

	push	1
	push	0
	mov	edx, DWORD PTR _eUnit$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pSpawnCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z ; CvCityCitizens::DoSpawnGreatPerson

; 2518 : #else
; 2519 : 		pSpawnCity->GetCityCitizens()->DoSpawnGreatPerson(eUnit, false /*bIncrementCount*/, true);
; 2520 : #endif
; 2521 : #ifdef NQ_SPAWN_PROPHETS_REMOVE_ONLY_REQUIRED_FAITH
; 2522 : 		kPlayer.ChangeFaith(-iCost);

	mov	eax, DWORD PTR _iCost$[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?ChangeFaith@CvPlayer@@QAEXH@Z		; CvPlayer::ChangeFaith

; 2523 : #else
; 2524 : 		kPlayer.SetFaith(0);
; 2525 : #endif
; 2526 : 	}
; 2527 : 	else

	jmp	SHORT $LN3@CheckSpawn
$LN4@CheckSpawn:

; 2528 : 	{
; 2529 : 		pSpawnCity = kPlayer.getCapitalCity();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pSpawnCity$[ebp], eax

; 2530 : 		if(pSpawnCity != NULL)

	cmp	DWORD PTR _pSpawnCity$[ebp], 0
	je	SHORT $LN3@CheckSpawn

; 2531 : 		{
; 2532 : #ifdef LEK_UNIQUE_FAITH_UNIT_FIX
; 2533 : 		pSpawnCity->GetCityCitizens()->DoSpawnGreatPerson(eUnit, false /*bIncrementCount*/, true);

	push	1
	push	0
	mov	ecx, DWORD PTR _eUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pSpawnCity$[ebp]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z ; CvCityCitizens::DoSpawnGreatPerson

; 2534 : #else
; 2535 : 		pSpawnCity->GetCityCitizens()->DoSpawnGreatPerson(eUnit, false /*bIncrementCount*/, true);
; 2536 : #endif
; 2537 : #ifdef NQ_SPAWN_PROPHETS_REMOVE_ONLY_REQUIRED_FAITH
; 2538 : 			kPlayer.ChangeFaith(-iCost);

	mov	edx, DWORD PTR _iCost$[ebp]
	neg	edx
	push	edx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?ChangeFaith@CvPlayer@@QAEXH@Z		; CvPlayer::ChangeFaith
$LN3@CheckSpawn:

; 2539 : #else
; 2540 : 			kPlayer.SetFaith(0);
; 2541 : #endif
; 2542 : 		}
; 2543 : 	}
; 2544 : 
; 2545 : 	// Logging
; 2546 : 	if(GC.getLogging() && pSpawnCity)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	eax, al
	test	eax, eax
	je	$LN1@CheckSpawn
	cmp	DWORD PTR _pSpawnCity$[ebp], 0
	je	$LN1@CheckSpawn

; 2547 : 	{
; 2548 : 		CvString strLogMsg;

	lea	ecx, DWORD PTR _strLogMsg$225247[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2549 : 		strLogMsg = kPlayer.getCivilizationShortDescription();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	mov	DWORD PTR $T235270[ebp], eax
	cmp	DWORD PTR $T235270[ebp], 0
	je	SHORT $LN72@CheckSpawn
	mov	ecx, DWORD PTR $T235270[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strLogMsg$225247[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN73@CheckSpawn
$LN72@CheckSpawn:
	lea	ecx, DWORD PTR _strLogMsg$225247[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN73@CheckSpawn:

; 2550 : 		strLogMsg += ", PROPHET SPAWNED, ";

	push	OFFSET ??_C@_0BE@GGBPOOIH@?0?5PROPHET?5SPAWNED?0?5?$AA@
	lea	ecx, DWORD PTR _strLogMsg$225247[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 2551 : 		strLogMsg += pSpawnCity->getName();

	lea	edx, DWORD PTR $T235142[ebp]
	push	edx
	mov	ecx, DWORD PTR _pSpawnCity$[ebp]
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	DWORD PTR tv145[ebp], eax
	mov	eax, DWORD PTR tv145[ebp]
	mov	DWORD PTR tv223[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv223[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strLogMsg$225247[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T235142[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2552 : 		strLogMsg += ", Faith: 0";

	push	OFFSET ??_C@_0L@LJCIJIMA@?0?5Faith?3?50?$AA@
	lea	ecx, DWORD PTR _strLogMsg$225247[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 2553 : 		LogReligionMessage(strLogMsg);

	lea	edx, DWORD PTR _strLogMsg$225247[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z ; CvGameReligions::LogReligionMessage

; 2554 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strLogMsg$225247[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@CheckSpawn:

; 2555 : 
; 2556 : 	return true;

	mov	al, 1
$LN13@CheckSpawn:

; 2557 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z$0:
	lea	ecx, DWORD PTR _strLogMsg$225247[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z$1:
	lea	ecx, DWORD PTR $T235142[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-188]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z ENDP ; CvGameReligions::CheckSpawnGreatProphet
PUBLIC	?Format@CvString@@QAAXPBDZZ			; CvString::Format
PUBLIC	??_C@_0L@FOFKLADA@?$CF03d?0?5?$CFd?0?5?$AA@	; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z:PROC
EXTRN	?getElapsedGameTurns@CvGame@@QBEHXZ:PROC	; CvGame::getElapsedGameTurns
EXTRN	?getGameTurnYear@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurnYear
EXTRN	?GetInstance@FILogFileMgr@@SAAAV1@XZ:PROC	; FILogFileMgr::GetInstance
EXTRN	?getAILogging@CvGlobals@@QAE_NXZ:PROC		; CvGlobals::getAILogging
;	COMDAT ??_C@_0L@FOFKLADA@?$CF03d?0?5?$CFd?0?5?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0L@FOFKLADA@?$CF03d?0?5?$CFd?0?5?$AA@ DB '%03d, %d, ', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z$3
__ehfuncinfo$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z
_TEXT	SEGMENT
tv171 = -172						; size = 4
tv182 = -168						; size = 4
tv80 = -164						; size = 4
_this$ = -160						; size = 4
$T235326 = -156						; size = 4
$T235322 = -152						; size = 4
$T235318 = -148						; size = 4
$T235314 = -144						; size = 4
$T235306 = -140						; size = 4
$T235305 = -136						; size = 4
$T235289 = -132						; size = 28
$T235288 = -104						; size = 28
_strOutBuf$225256 = -76					; size = 28
_pLog$225258 = -48					; size = 4
_strBaseString$225257 = -44				; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_strMsg$ = 8						; size = 4
?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z PROC ; CvGameReligions::LogReligionMessage, COMDAT
; _this$ = ecx

; 2561 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 160				; 000000a0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2562 : 	if(GC.getLogging() && GC.getAILogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	eax, al
	test	eax, eax
	je	$LN2@LogReligio
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getAILogging@CvGlobals@@QAE_NXZ	; CvGlobals::getAILogging
	movzx	ecx, al
	test	ecx, ecx
	je	$LN2@LogReligio

; 2563 : 	{
; 2564 : 		CvString strOutBuf;

	lea	ecx, DWORD PTR _strOutBuf$225256[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2565 : 		CvString strBaseString;

	lea	ecx, DWORD PTR _strBaseString$225257[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2566 : 		FILogFile* pLog;
; 2567 : 
; 2568 : 		pLog = LOGFILEMGR.GetLog(GetLogFileName(), FILogFile::kDontTimeStamp);

	call	?GetInstance@FILogFileMgr@@SAAAV1@XZ	; FILogFileMgr::GetInstance
	mov	DWORD PTR tv80[ebp], eax
	lea	edx, DWORD PTR $T235288[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ ; CvGameReligions::GetLogFileName
	mov	DWORD PTR tv182[ebp], eax
	mov	eax, DWORD PTR tv182[ebp]
	mov	DWORD PTR $T235305[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR $T235305[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T235306[ebp], eax
	push	0
	push	1
	mov	ecx, DWORD PTR $T235306[ebp]
	push	ecx
	mov	edx, DWORD PTR tv80[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv80[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR _pLog$225258[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235288[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2569 : 
; 2570 : 		// Get the leading info for this line
; 2571 : 		strBaseString.Format("%03d, %d, ", GC.getGame().getElapsedGameTurns(), GC.getGame().getGameTurnYear());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235314[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235318[ebp], ecx
	mov	ecx, DWORD PTR $T235314[ebp]
	call	?getGameTurnYear@CvGame@@QAEHXZ		; CvGame::getGameTurnYear
	push	eax
	mov	ecx, DWORD PTR $T235318[ebp]
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	push	eax
	push	OFFSET ??_C@_0L@FOFKLADA@?$CF03d?0?5?$CFd?0?5?$AA@
	lea	edx, DWORD PTR _strBaseString$225257[ebp]
	push	edx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format
	add	esp, 16					; 00000010H

; 2572 : 		strOutBuf = strBaseString + strMsg;

	mov	eax, DWORD PTR _strMsg$[ebp]
	push	eax
	lea	ecx, DWORD PTR _strBaseString$225257[ebp]
	push	ecx
	lea	edx, DWORD PTR $T235289[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv171[ebp], eax
	mov	eax, DWORD PTR tv171[ebp]
	mov	DWORD PTR $T235322[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR $T235322[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$225256[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235289[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2573 : 		pLog->Msg(strOutBuf);

	lea	ecx, DWORD PTR _strOutBuf$225256[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T235326[ebp], eax
	mov	ecx, DWORD PTR $T235326[ebp]
	push	ecx
	mov	edx, DWORD PTR _pLog$225258[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pLog$225258[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax]
	call	edx
	add	esp, 8

; 2574 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strBaseString$225257[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strOutBuf$225256[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@LogReligio:

; 2575 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z$0:
	lea	ecx, DWORD PTR _strOutBuf$225256[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z$1:
	lea	ecx, DWORD PTR _strBaseString$225257[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z$2:
	lea	ecx, DWORD PTR $T235288[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z$3:
	lea	ecx, DWORD PTR $T235289[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-164]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z ENDP ; CvGameReligions::LogReligionMessage
PUBLIC	??_C@_0DG@MMKJHEDH@TXT_KEY_NOTIFICATION_SUMMARY_ENH@ ; `string'
PUBLIC	??_C@_0CO@MODKFIOE@TXT_KEY_NOTIFICATION_ENHANCED_RE@ ; `string'
PUBLIC	??_C@_0DC@GDDMELBK@TXT_KEY_NOTIFICATION_SUMMARY_REL@ ; `string'
PUBLIC	??_C@_0CK@DLPOEIPG@TXT_KEY_NOTIFICATION_RELIGION_NA@ ; `string'
PUBLIC	??_C@_0DG@LCMHFBO@TXT_KEY_NOTIFICATION_SUMMARY_ALR@ ; `string'
PUBLIC	??_C@_0CO@JLPFJMN@TXT_KEY_NOTIFICATION_ALREADY_CRE@ ; `string'
PUBLIC	??_C@_0DG@EBMBHLGH@TXT_KEY_NOTIFICATION_SUMMARY_ALR@ ; `string'
PUBLIC	??_C@_0CO@EDFCFHLE@TXT_KEY_NOTIFICATION_ALREADY_CRE@ ; `string'
PUBLIC	??_C@_0DE@HKOPMOAI@TXT_KEY_NOTIFICATION_SUMMARY_NO_@ ; `string'
PUBLIC	??_C@_0CM@BBCNHLJA@TXT_KEY_NOTIFICATION_NO_RELIGION@ ; `string'
PUBLIC	??_C@_0DL@OMLFAIAP@TXT_KEY_NOTIFICATION_SUMMARY_NOT@ ; `string'
PUBLIC	??_C@_0DD@FGHHJCL@TXT_KEY_NOTIFICATION_NOT_ENOUGH_@ ; `string'
PUBLIC	??_C@_0CN@PGAOLLNA@TXT_KEY_NOTIFICATION_SUMMARY_REL@ ; `string'
PUBLIC	??_C@_0CF@OOOCADGH@TXT_KEY_NOTIFICATION_RELIGION_IN@ ; `string'
PUBLIC	??_C@_0DE@DCPEACOK@TXT_KEY_NOTIFICATION_SUMMARY_PAN@ ; `string'
PUBLIC	??_C@_0CM@FJDGLHHC@TXT_KEY_NOTIFICATION_PANTHEON_BE@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z ; CvGameReligions::NotifyPlayer
EXTRN	?AddToPlayer@CvNotifications@@SAXW4PlayerTypes@@W4NotificationTypes@@PBD2HHHH@Z:PROC ; CvNotifications::AddToPlayer
EXTRN	__imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ:PROC
;	COMDAT ??_C@_0DG@MMKJHEDH@TXT_KEY_NOTIFICATION_SUMMARY_ENH@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0DG@MMKJHEDH@TXT_KEY_NOTIFICATION_SUMMARY_ENH@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_ENHANCED_RELIGION_IN_USE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@MODKFIOE@TXT_KEY_NOTIFICATION_ENHANCED_RE@
CONST	SEGMENT
??_C@_0CO@MODKFIOE@TXT_KEY_NOTIFICATION_ENHANCED_RE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_ENHANCED_RELIGION_IN_USE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@GDDMELBK@TXT_KEY_NOTIFICATION_SUMMARY_REL@
CONST	SEGMENT
??_C@_0DC@GDDMELBK@TXT_KEY_NOTIFICATION_SUMMARY_REL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_RELIGION_NAME_IN_USE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@DLPOEIPG@TXT_KEY_NOTIFICATION_RELIGION_NA@
CONST	SEGMENT
??_C@_0CK@DLPOEIPG@TXT_KEY_NOTIFICATION_RELIGION_NA@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_RELIGION_NAME_IN_USE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@LCMHFBO@TXT_KEY_NOTIFICATION_SUMMARY_ALR@
CONST	SEGMENT
??_C@_0DG@LCMHFBO@TXT_KEY_NOTIFICATION_SUMMARY_ALR@ DB 'TXT_KEY_NOTIFICAT'
	DB	'ION_SUMMARY_ALREADY_CREATED_PANTHEON', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@JLPFJMN@TXT_KEY_NOTIFICATION_ALREADY_CRE@
CONST	SEGMENT
??_C@_0CO@JLPFJMN@TXT_KEY_NOTIFICATION_ALREADY_CRE@ DB 'TXT_KEY_NOTIFICAT'
	DB	'ION_ALREADY_CREATED_PANTHEON', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@EBMBHLGH@TXT_KEY_NOTIFICATION_SUMMARY_ALR@
CONST	SEGMENT
??_C@_0DG@EBMBHLGH@TXT_KEY_NOTIFICATION_SUMMARY_ALR@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_ALREADY_CREATED_RELIGION', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@EDFCFHLE@TXT_KEY_NOTIFICATION_ALREADY_CRE@
CONST	SEGMENT
??_C@_0CO@EDFCFHLE@TXT_KEY_NOTIFICATION_ALREADY_CRE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_ALREADY_CREATED_RELIGION', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@HKOPMOAI@TXT_KEY_NOTIFICATION_SUMMARY_NO_@
CONST	SEGMENT
??_C@_0DE@HKOPMOAI@TXT_KEY_NOTIFICATION_SUMMARY_NO_@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_NO_RELIGIONS_AVAILABLE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@BBCNHLJA@TXT_KEY_NOTIFICATION_NO_RELIGION@
CONST	SEGMENT
??_C@_0CM@BBCNHLJA@TXT_KEY_NOTIFICATION_NO_RELIGION@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_NO_RELIGIONS_AVAILABLE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@OMLFAIAP@TXT_KEY_NOTIFICATION_SUMMARY_NOT@
CONST	SEGMENT
??_C@_0DL@OMLFAIAP@TXT_KEY_NOTIFICATION_SUMMARY_NOT@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_NOT_ENOUGH_FAITH_FOR_PANTHEON', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@FGHHJCL@TXT_KEY_NOTIFICATION_NOT_ENOUGH_@
CONST	SEGMENT
??_C@_0DD@FGHHJCL@TXT_KEY_NOTIFICATION_NOT_ENOUGH_@ DB 'TXT_KEY_NOTIFICAT'
	DB	'ION_NOT_ENOUGH_FAITH_FOR_PANTHEON', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@PGAOLLNA@TXT_KEY_NOTIFICATION_SUMMARY_REL@
CONST	SEGMENT
??_C@_0CN@PGAOLLNA@TXT_KEY_NOTIFICATION_SUMMARY_REL@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_RELIGION_IN_USE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@OOOCADGH@TXT_KEY_NOTIFICATION_RELIGION_IN@
CONST	SEGMENT
??_C@_0CF@OOOCADGH@TXT_KEY_NOTIFICATION_RELIGION_IN@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_RELIGION_IN_USE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@DCPEACOK@TXT_KEY_NOTIFICATION_SUMMARY_PAN@
CONST	SEGMENT
??_C@_0DE@DCPEACOK@TXT_KEY_NOTIFICATION_SUMMARY_PAN@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_SUMMARY_PANTHEON_BELIEF_IN_USE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@FJDGLHHC@TXT_KEY_NOTIFICATION_PANTHEON_BE@
CONST	SEGMENT
??_C@_0CM@FJDGLHHC@TXT_KEY_NOTIFICATION_PANTHEON_BE@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_PANTHEON_BELIEF_IN_USE', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z DD 019930522H
	DD	012H
	DD	FLAT:__unwindtable$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$8
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$9
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$10
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$11
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$12
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$13
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$14
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$15
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$16
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$17
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z
_TEXT	SEGMENT
tv532 = -656						; size = 4
tv531 = -652						; size = 4
tv530 = -648						; size = 4
tv529 = -644						; size = 4
tv528 = -640						; size = 4
tv527 = -636						; size = 4
tv526 = -632						; size = 4
tv525 = -628						; size = 4
tv524 = -624						; size = 4
tv523 = -620						; size = 4
tv522 = -616						; size = 4
tv521 = -612						; size = 4
tv520 = -608						; size = 4
tv66 = -604						; size = 4
tv279 = -600						; size = 4
tv290 = -596						; size = 4
tv70 = -592						; size = 4
$T235509 = -588						; size = 4
$T235501 = -584						; size = 4
$T235493 = -580						; size = 4
$T235485 = -576						; size = 4
$T235477 = -572						; size = 4
$T235469 = -568						; size = 4
$T235461 = -564						; size = 4
$T235453 = -560						; size = 4
$T235445 = -556						; size = 4
$T235437 = -552						; size = 4
$T235429 = -548						; size = 4
$T235421 = -544						; size = 4
$T235413 = -540						; size = 4
$T235405 = -536						; size = 4
$T235397 = -532						; size = 4
$T235389 = -528						; size = 4
$T235359 = -524						; size = 28
$T235358 = -496						; size = 28
$T235357 = -468						; size = 28
$T235356 = -440						; size = 28
$T235355 = -412						; size = 28
$T235354 = -384						; size = 28
$T235353 = -356						; size = 28
$T235352 = -328						; size = 28
$T235351 = -300						; size = 28
$T235350 = -272						; size = 28
$T235349 = -244						; size = 28
$T235348 = -216						; size = 28
$T235347 = -188						; size = 28
$T235346 = -160						; size = 28
$T235345 = -132						; size = 28
$T235344 = -104						; size = 28
_strMessage$ = -76					; size = 28
_strSummary$ = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
_eNotificationType$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_eResult$ = 12						; size = 4
?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z PROC ; CvGameReligions::NotifyPlayer, COMDAT

; 2579 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 644				; 00000284H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2580 : 	CvString strMessage;

	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2581 : 	CvString strSummary;

	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 2582 : 
; 2583 : 	NotificationTypes eNotificationType = NOTIFICATION_RELIGION_ERROR;

	mov	DWORD PTR _eNotificationType$[ebp], 1903739133 ; 7178c0fdH

; 2584 : 
; 2585 : 	switch(eResult)

	mov	eax, DWORD PTR _eResult$[ebp]
	mov	DWORD PTR tv70[ebp], eax
	mov	ecx, DWORD PTR tv70[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	cmp	DWORD PTR tv70[ebp], 8
	ja	$LN120@NotifyPlay
	mov	edx, DWORD PTR tv70[ebp]
	jmp	DWORD PTR $LN129@NotifyPlay[edx*4]

; 2586 : 	{
; 2587 : 	case FOUNDING_OK:
; 2588 : 		break;

	jmp	$LN120@NotifyPlay
$LN10@NotifyPlay:

; 2589 : 	case FOUNDING_BELIEF_IN_USE:
; 2590 : 		strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_PANTHEON_BELIEF_IN_USE");

	push	OFFSET ??_C@_0CM@FJDGLHHC@TXT_KEY_NOTIFICATION_PANTHEON_BE@
	lea	eax, DWORD PTR $T235344[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv290[ebp], eax
	mov	ecx, DWORD PTR tv290[ebp]
	mov	DWORD PTR $T235389[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T235389[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235344[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2591 : 		strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_PANTHEON_BELIEF_IN_USE");

	push	OFFSET ??_C@_0DE@DCPEACOK@TXT_KEY_NOTIFICATION_SUMMARY_PAN@
	lea	eax, DWORD PTR $T235345[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv279[ebp], eax
	mov	ecx, DWORD PTR tv279[ebp]
	mov	DWORD PTR $T235397[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR $T235397[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235345[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2592 : 		break;

	jmp	$LN120@NotifyPlay
$LN9@NotifyPlay:

; 2593 : 	case FOUNDING_RELIGION_IN_USE:
; 2594 : 		strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_RELIGION_IN_USE");

	push	OFFSET ??_C@_0CF@OOOCADGH@TXT_KEY_NOTIFICATION_RELIGION_IN@
	lea	eax, DWORD PTR $T235346[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR tv66[ebp]
	mov	DWORD PTR $T235405[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR $T235405[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235346[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2595 : 		strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_RELIGION_IN_USE");

	push	OFFSET ??_C@_0CN@PGAOLLNA@TXT_KEY_NOTIFICATION_SUMMARY_REL@
	lea	eax, DWORD PTR $T235347[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv520[ebp], eax
	mov	ecx, DWORD PTR tv520[ebp]
	mov	DWORD PTR $T235413[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR $T235413[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235347[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2596 : 		break;

	jmp	$LN120@NotifyPlay
$LN8@NotifyPlay:

; 2597 : 	case FOUNDING_NOT_ENOUGH_FAITH:
; 2598 : 		strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_NOT_ENOUGH_FAITH_FOR_PANTHEON");

	push	OFFSET ??_C@_0DD@FGHHJCL@TXT_KEY_NOTIFICATION_NOT_ENOUGH_@
	lea	eax, DWORD PTR $T235348[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv521[ebp], eax
	mov	ecx, DWORD PTR tv521[ebp]
	mov	DWORD PTR $T235421[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR $T235421[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235348[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2599 : 		strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_NOT_ENOUGH_FAITH_FOR_PANTHEON");

	push	OFFSET ??_C@_0DL@OMLFAIAP@TXT_KEY_NOTIFICATION_SUMMARY_NOT@
	lea	eax, DWORD PTR $T235349[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv522[ebp], eax
	mov	ecx, DWORD PTR tv522[ebp]
	mov	DWORD PTR $T235429[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR $T235429[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235349[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2600 : 		break;

	jmp	$LN120@NotifyPlay
$LN7@NotifyPlay:

; 2601 : 	case FOUNDING_NO_RELIGIONS_AVAILABLE:
; 2602 : 		strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_NO_RELIGIONS_AVAILABLE");

	push	OFFSET ??_C@_0CM@BBCNHLJA@TXT_KEY_NOTIFICATION_NO_RELIGION@
	lea	eax, DWORD PTR $T235350[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv523[ebp], eax
	mov	ecx, DWORD PTR tv523[ebp]
	mov	DWORD PTR $T235437[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR $T235437[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235350[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2603 : 		strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_NO_RELIGIONS_AVAILABLE");

	push	OFFSET ??_C@_0DE@HKOPMOAI@TXT_KEY_NOTIFICATION_SUMMARY_NO_@
	lea	eax, DWORD PTR $T235351[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv524[ebp], eax
	mov	ecx, DWORD PTR tv524[ebp]
	mov	DWORD PTR $T235445[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	edx, DWORD PTR $T235445[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235351[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2604 : 		break;

	jmp	$LN120@NotifyPlay

; 2605 : 	case FOUNDING_INVALID_PLAYER:
; 2606 : 		break;

	jmp	$LN120@NotifyPlay
$LN5@NotifyPlay:

; 2607 : 	case FOUNDING_PLAYER_ALREADY_CREATED_RELIGION:
; 2608 : 		strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_ALREADY_CREATED_RELIGION");

	push	OFFSET ??_C@_0CO@EDFCFHLE@TXT_KEY_NOTIFICATION_ALREADY_CRE@
	lea	eax, DWORD PTR $T235352[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv525[ebp], eax
	mov	ecx, DWORD PTR tv525[ebp]
	mov	DWORD PTR $T235453[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	edx, DWORD PTR $T235453[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235352[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2609 : 		strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_ALREADY_CREATED_RELIGION");

	push	OFFSET ??_C@_0DG@EBMBHLGH@TXT_KEY_NOTIFICATION_SUMMARY_ALR@
	lea	eax, DWORD PTR $T235353[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv526[ebp], eax
	mov	ecx, DWORD PTR tv526[ebp]
	mov	DWORD PTR $T235461[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR $T235461[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235353[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2610 : 		break;

	jmp	$LN120@NotifyPlay
$LN4@NotifyPlay:

; 2611 : 	case FOUNDING_PLAYER_ALREADY_CREATED_PANTHEON:
; 2612 : 		strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_ALREADY_CREATED_PANTHEON");

	push	OFFSET ??_C@_0CO@JLPFJMN@TXT_KEY_NOTIFICATION_ALREADY_CRE@
	lea	eax, DWORD PTR $T235354[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv527[ebp], eax
	mov	ecx, DWORD PTR tv527[ebp]
	mov	DWORD PTR $T235469[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	edx, DWORD PTR $T235469[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235354[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2613 : 		strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_ALREADY_CREATED_PANTHEON");

	push	OFFSET ??_C@_0DG@LCMHFBO@TXT_KEY_NOTIFICATION_SUMMARY_ALR@
	lea	eax, DWORD PTR $T235355[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv528[ebp], eax
	mov	ecx, DWORD PTR tv528[ebp]
	mov	DWORD PTR $T235477[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	edx, DWORD PTR $T235477[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235355[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2614 : 		break;

	jmp	$LN120@NotifyPlay
$LN3@NotifyPlay:

; 2615 : 	case FOUNDING_NAME_IN_USE:
; 2616 : 		strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_RELIGION_NAME_IN_USE");

	push	OFFSET ??_C@_0CK@DLPOEIPG@TXT_KEY_NOTIFICATION_RELIGION_NA@
	lea	eax, DWORD PTR $T235356[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv529[ebp], eax
	mov	ecx, DWORD PTR tv529[ebp]
	mov	DWORD PTR $T235485[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	edx, DWORD PTR $T235485[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235356[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2617 : 		strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_RELIGION_NAME_IN_USE");

	push	OFFSET ??_C@_0DC@GDDMELBK@TXT_KEY_NOTIFICATION_SUMMARY_REL@
	lea	eax, DWORD PTR $T235357[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv530[ebp], eax
	mov	ecx, DWORD PTR tv530[ebp]
	mov	DWORD PTR $T235493[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	edx, DWORD PTR $T235493[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235357[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2618 : 		break;

	jmp	$LN120@NotifyPlay
$LN2@NotifyPlay:

; 2619 : 	case FOUNDING_RELIGION_ENHANCED:
; 2620 : 		strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_ENHANCED_RELIGION_IN_USE");

	push	OFFSET ??_C@_0CO@MODKFIOE@TXT_KEY_NOTIFICATION_ENHANCED_RE@
	lea	eax, DWORD PTR $T235358[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv531[ebp], eax
	mov	ecx, DWORD PTR tv531[ebp]
	mov	DWORD PTR $T235501[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	edx, DWORD PTR $T235501[ebp]
	push	edx
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235358[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2621 : 		strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_ENHANCED_RELIGION_IN_USE");

	push	OFFSET ??_C@_0DG@MMKJHEDH@TXT_KEY_NOTIFICATION_SUMMARY_ENH@
	lea	eax, DWORD PTR $T235359[ebp]
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv532[ebp], eax
	mov	ecx, DWORD PTR tv532[ebp]
	mov	DWORD PTR $T235509[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	edx, DWORD PTR $T235509[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T235359[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2622 : 		break;
; 2623 : 	}
; 2624 : 
; 2625 : 	if(strMessage.GetLength() != 0)

$LN120@NotifyPlay:
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	test	eax, eax
	je	SHORT $LN1@NotifyPlay

; 2626 : 		CvNotifications::AddToPlayer(ePlayer, eNotificationType, strMessage.c_str(), strSummary.c_str());

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _eNotificationType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	push	ecx
	call	?AddToPlayer@CvNotifications@@SAXW4PlayerTypes@@W4NotificationTypes@@PBD2HHHH@Z ; CvNotifications::AddToPlayer
	add	esp, 32					; 00000020H
$LN1@NotifyPlay:

; 2627 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN129@NotifyPlay:
	DD	$LN10@NotifyPlay
	DD	$LN9@NotifyPlay
	DD	$LN8@NotifyPlay
	DD	$LN7@NotifyPlay
	DD	$LN120@NotifyPlay
	DD	$LN5@NotifyPlay
	DD	$LN4@NotifyPlay
	DD	$LN3@NotifyPlay
	DD	$LN2@NotifyPlay
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$0:
	lea	ecx, DWORD PTR _strMessage$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$1:
	lea	ecx, DWORD PTR _strSummary$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$2:
	lea	ecx, DWORD PTR $T235344[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$3:
	lea	ecx, DWORD PTR $T235345[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$4:
	lea	ecx, DWORD PTR $T235346[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$5:
	lea	ecx, DWORD PTR $T235347[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$6:
	lea	ecx, DWORD PTR $T235348[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$7:
	lea	ecx, DWORD PTR $T235349[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$8:
	lea	ecx, DWORD PTR $T235350[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$9:
	lea	ecx, DWORD PTR $T235351[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$10:
	lea	ecx, DWORD PTR $T235352[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$11:
	lea	ecx, DWORD PTR $T235353[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$12:
	lea	ecx, DWORD PTR $T235354[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$13:
	lea	ecx, DWORD PTR $T235355[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$14:
	lea	ecx, DWORD PTR $T235356[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$15:
	lea	ecx, DWORD PTR $T235357[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$16:
	lea	ecx, DWORD PTR $T235358[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$17:
	lea	ecx, DWORD PTR $T235359[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-648]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z ENDP ; CvGameReligions::NotifyPlayer
PUBLIC	?clear@?$BaseVector@VCvReligion@@$0A@@@QAEXXZ	; BaseVector<CvReligion,0>::clear
PUBLIC	__$ArrayPad$
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z ; operator>>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z$0
__ehfuncinfo$??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z
_TEXT	SEGMENT
$T235545 = -368						; size = 4
_iI$225328 = -364					; size = 4
_iEntriesToRead$225326 = -360				; size = 4
_tempItem$225327 = -356					; size = 328
__$ArrayPad$ = -24					; size = 4
_iMinFaith$ = -20					; size = 4
_uiVersion$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z PROC	; operator>>, COMDAT

; 2633 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 400				; 00000190H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 2634 : 	uint uiVersion;
; 2635 : 	int iMinFaith;
; 2636 : 
; 2637 : 	loadFrom >> uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 2638 : 
; 2639 : 	if(uiVersion >= 3)

	cmp	DWORD PTR _uiVersion$[ebp], 3
	jb	SHORT $LN7@operator@3

; 2640 : 	{
; 2641 : 		loadFrom >> iMinFaith;

	lea	ecx, DWORD PTR _iMinFaith$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2642 : 		writeTo.SetMinimumFaithNextPantheon(iMinFaith);

	mov	edx, DWORD PTR _iMinFaith$[ebp]
	mov	DWORD PTR $T235545[ebp], edx
	mov	eax, DWORD PTR _writeTo$[ebp]
	mov	ecx, DWORD PTR $T235545[ebp]
	mov	DWORD PTR [eax+5264], ecx

; 2643 : 	}
; 2644 : 	else

	jmp	SHORT $LN6@operator@3
$LN7@operator@3:

; 2645 : 	{
; 2646 : 		writeTo.SetMinimumFaithNextPantheon(0);

	mov	edx, DWORD PTR _writeTo$[ebp]
	mov	DWORD PTR [edx+5264], 0
$LN6@operator@3:

; 2647 : 	}
; 2648 : 
; 2649 : 	if(uiVersion < 4)

	cmp	DWORD PTR _uiVersion$[ebp], 4
	jae	SHORT $LN5@operator@3

; 2650 : 	{
; 2651 : 		loadFrom >> iMinFaith;

	lea	eax, DWORD PTR _iMinFaith$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
$LN5@operator@3:

; 2652 : 		//	writeTo.SetMinimumFaithNextGreatProphet(iMinFaith);  -- eliminated in Version 4
; 2653 : 	}
; 2654 : 
; 2655 : 	if(uiVersion >= 2)

	cmp	DWORD PTR _uiVersion$[ebp], 2
	jb	$LN4@operator@3

; 2656 : 	{
; 2657 : 		int iEntriesToRead;
; 2658 : 		CvReligion tempItem;

	lea	ecx, DWORD PTR _tempItem$225327[ebp]
	call	??0CvReligion@@QAE@XZ			; CvReligion::CvReligion
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2659 : 
; 2660 : 		writeTo.m_CurrentReligions.clear();

	mov	ecx, DWORD PTR _writeTo$[ebp]
	call	?clear@?$BaseVector@VCvReligion@@$0A@@@QAEXXZ ; BaseVector<CvReligion,0>::clear

; 2661 : 		loadFrom >> iEntriesToRead;

	lea	ecx, DWORD PTR _iEntriesToRead$225326[ebp]
	push	ecx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2662 : 		for(int iI = 0; iI < iEntriesToRead; iI++)

	mov	DWORD PTR _iI$225328[ebp], 0
	jmp	SHORT $LN3@operator@3
$LN2@operator@3:
	mov	edx, DWORD PTR _iI$225328[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$225328[ebp], edx
$LN3@operator@3:
	mov	eax, DWORD PTR _iI$225328[ebp]
	cmp	eax, DWORD PTR _iEntriesToRead$225326[ebp]
	jge	SHORT $LN1@operator@3

; 2663 : 		{
; 2664 : 			loadFrom >> tempItem;

	lea	ecx, DWORD PTR _tempItem$225327[ebp]
	push	ecx
	mov	edx, DWORD PTR _loadFrom$[ebp]
	push	edx
	call	??5@YAAAVFDataStream@@AAV0@AAVCvReligion@@@Z ; operator>>
	add	esp, 8

; 2665 : 			writeTo.m_CurrentReligions.push_back(tempItem);

	lea	eax, DWORD PTR _tempItem$225327[ebp]
	push	eax
	mov	ecx, DWORD PTR _writeTo$[ebp]
	call	?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z ; FStaticVector<CvReligion,16,0,297,0>::push_back

; 2666 : 		}

	jmp	SHORT $LN2@operator@3
$LN1@operator@3:

; 2667 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tempItem$225327[ebp+152]
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
$LN4@operator@3:

; 2668 : 
; 2669 : 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[ebp]

; 2670 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z$0:
	lea	ecx, DWORD PTR _tempItem$225327[ebp]
	jmp	??1CvReligion@@QAE@XZ
__ehhandler$??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-404]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z ENDP	; operator>>
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABVCvGameReligions@@@Z ; operator<<
; Function compile flags: /Odtp
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABVCvGameReligions@@@Z
_TEXT	SEGMENT
$T235627 = -24						; size = 4
$T235620 = -20						; size = 4
$T235613 = -16						; size = 4
$T235612 = -12						; size = 4
_uiVersion$ = -8					; size = 4
_it$ = -4						; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??6@YAAAVFDataStream@@AAV0@ABVCvGameReligions@@@Z PROC	; operator<<, COMDAT

; 2674 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 2675 : 	uint uiVersion = 4;

	mov	DWORD PTR _uiVersion$[ebp], 4

; 2676 : 	saveTo << uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 2677 : 
; 2678 : 	saveTo << readFrom.GetMinimumFaithNextPantheon();

	mov	ecx, DWORD PTR _readFrom$[ebp]
	mov	edx, DWORD PTR [ecx+5264]
	mov	DWORD PTR $T235620[ebp], edx
	mov	eax, DWORD PTR $T235620[ebp]
	mov	DWORD PTR $T235612[ebp], eax
	lea	ecx, DWORD PTR $T235612[ebp]
	push	ecx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2679 : 
; 2680 : 	ReligionList::const_iterator it;
; 2681 : 	saveTo << readFrom.m_CurrentReligions.size();

	mov	edx, DWORD PTR _readFrom$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T235627[ebp], eax
	mov	ecx, DWORD PTR $T235627[ebp]
	mov	DWORD PTR $T235613[ebp], ecx
	lea	edx, DWORD PTR $T235613[ebp]
	push	edx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 2682 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 2683 : 	for (it = readFrom.m_CurrentReligions.begin(); it != readFrom.m_CurrentReligions.end(); ++it)
; 2684 : #else
; 2685 : 	for(it = readFrom.m_CurrentReligions.begin(); it != readFrom.m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR _readFrom$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN18@operator@4
$LN2@operator@4:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 328				; 00000148H
	mov	DWORD PTR _it$[ebp], edx
$LN18@operator@4:
	mov	eax, DWORD PTR _readFrom$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 328				; 00000148H
	mov	edx, DWORD PTR _readFrom$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN1@operator@4

; 2686 : #endif
; 2687 : 	{
; 2688 : 		saveTo << *it;

	mov	eax, DWORD PTR _it$[ebp]
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	push	ecx
	call	??6@YAAAVFDataStream@@AAV0@ABVCvReligion@@@Z ; operator<<
	add	esp, 8

; 2689 : 	}

	jmp	SHORT $LN2@operator@4
$LN1@operator@4:

; 2690 : 
; 2691 : 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[ebp]

; 2692 : }

	mov	esp, ebp
	pop	ebp
	ret	0
??6@YAAAVFDataStream@@AAV0@ABVCvGameReligions@@@Z ENDP	; operator<<
_TEXT	ENDS
PUBLIC	??0CvPlayerReligions@@QAE@XZ			; CvPlayerReligions::CvPlayerReligions
; Function compile flags: /Odtp
;	COMDAT ??0CvPlayerReligions@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CvPlayerReligions@@QAE@XZ PROC			; CvPlayerReligions::CvPlayerReligions, COMDAT
; _this$ = ecx

; 2702 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 2703 : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CvPlayerReligions@@QAE@XZ ENDP			; CvPlayerReligions::CvPlayerReligions
_TEXT	ENDS
PUBLIC	?Uninit@CvPlayerReligions@@QAEXXZ		; CvPlayerReligions::Uninit
PUBLIC	??1CvPlayerReligions@@QAE@XZ			; CvPlayerReligions::~CvPlayerReligions
; Function compile flags: /Odtp
;	COMDAT ??1CvPlayerReligions@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvPlayerReligions@@QAE@XZ PROC			; CvPlayerReligions::~CvPlayerReligions, COMDAT
; _this$ = ecx

; 2707 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2708 : 	Uninit();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Uninit@CvPlayerReligions@@QAEXXZ	; CvPlayerReligions::Uninit

; 2709 : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1CvPlayerReligions@@QAE@XZ ENDP			; CvPlayerReligions::~CvPlayerReligions
_TEXT	ENDS
PUBLIC	?Reset@CvPlayerReligions@@QAEXXZ		; CvPlayerReligions::Reset
PUBLIC	?Init@CvPlayerReligions@@QAEXPAVCvPlayer@@@Z	; CvPlayerReligions::Init
; Function compile flags: /Odtp
;	COMDAT ?Init@CvPlayerReligions@@QAEXPAVCvPlayer@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pPlayer$ = 8						; size = 4
?Init@CvPlayerReligions@@QAEXPAVCvPlayer@@@Z PROC	; CvPlayerReligions::Init, COMDAT
; _this$ = ecx

; 2713 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2714 : 	m_pPlayer = pPlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	mov	DWORD PTR [eax], ecx

; 2715 : 
; 2716 : 	Reset();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@CvPlayerReligions@@QAEXXZ	; CvPlayerReligions::Reset

; 2717 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Init@CvPlayerReligions@@QAEXPAVCvPlayer@@@Z ENDP	; CvPlayerReligions::Init
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Uninit@CvPlayerReligions@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Uninit@CvPlayerReligions@@QAEXXZ PROC			; CvPlayerReligions::Uninit, COMDAT
; _this$ = ecx

; 2721 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2722 : 
; 2723 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Uninit@CvPlayerReligions@@QAEXXZ ENDP			; CvPlayerReligions::Uninit
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Reset@CvPlayerReligions@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Reset@CvPlayerReligions@@QAEXXZ PROC			; CvPlayerReligions::Reset, COMDAT
; _this$ = ecx

; 2727 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2728 : 	m_bFoundingReligion = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 2729 : 	m_iNumProphetsSpawned = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 2730 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@CvPlayerReligions@@QAEXXZ ENDP			; CvPlayerReligions::Reset
_TEXT	ENDS
PUBLIC	?Read@CvPlayerReligions@@QAEXAAVFDataStream@@@Z	; CvPlayerReligions::Read
; Function compile flags: /Odtp
;	COMDAT ?Read@CvPlayerReligions@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_uiVersion$ = -4					; size = 4
_kStream$ = 8						; size = 4
?Read@CvPlayerReligions@@QAEXAAVFDataStream@@@Z PROC	; CvPlayerReligions::Read, COMDAT
; _this$ = ecx

; 2734 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2735 : 	// Version number to maintain backwards compatibility
; 2736 : 	uint uiVersion;
; 2737 : 	kStream >> uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 2738 : 	kStream >> m_iNumProphetsSpawned;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2739 : 	kStream >> m_bFoundingReligion;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2740 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Read@CvPlayerReligions@@QAEXAAVFDataStream@@@Z ENDP	; CvPlayerReligions::Read
_TEXT	ENDS
PUBLIC	?Write@CvPlayerReligions@@QAEXAAVFDataStream@@@Z ; CvPlayerReligions::Write
; Function compile flags: /Odtp
;	COMDAT ?Write@CvPlayerReligions@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_uiVersion$ = -4					; size = 4
_kStream$ = 8						; size = 4
?Write@CvPlayerReligions@@QAEXAAVFDataStream@@@Z PROC	; CvPlayerReligions::Write, COMDAT
; _this$ = ecx

; 2744 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 2745 : 	// Current version number
; 2746 : 	uint uiVersion = 1;

	mov	DWORD PTR _uiVersion$[ebp], 1

; 2747 : 	kStream << uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 2748 : 	kStream << m_iNumProphetsSpawned;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2749 : 	kStream << m_bFoundingReligion;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2750 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Write@CvPlayerReligions@@QAEXAAVFDataStream@@@Z ENDP	; CvPlayerReligions::Write
_TEXT	ENDS
PUBLIC	?GetNumProphetsSpawned@CvPlayerReligions@@QBEHXZ ; CvPlayerReligions::GetNumProphetsSpawned
; Function compile flags: /Odtp
;	COMDAT ?GetNumProphetsSpawned@CvPlayerReligions@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumProphetsSpawned@CvPlayerReligions@@QBEHXZ PROC	; CvPlayerReligions::GetNumProphetsSpawned, COMDAT
; _this$ = ecx

; 2754 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2755 : 	return m_iNumProphetsSpawned;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 2756 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumProphetsSpawned@CvPlayerReligions@@QBEHXZ ENDP	; CvPlayerReligions::GetNumProphetsSpawned
_TEXT	ENDS
PUBLIC	?ChangeNumProphetsSpawned@CvPlayerReligions@@QAEXH@Z ; CvPlayerReligions::ChangeNumProphetsSpawned
; Function compile flags: /Odtp
;	COMDAT ?ChangeNumProphetsSpawned@CvPlayerReligions@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iValue$ = 8						; size = 4
?ChangeNumProphetsSpawned@CvPlayerReligions@@QAEXH@Z PROC ; CvPlayerReligions::ChangeNumProphetsSpawned, COMDAT
; _this$ = ecx

; 2760 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2761 : 	m_iNumProphetsSpawned += iValue;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, DWORD PTR _iValue$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 2762 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ChangeNumProphetsSpawned@CvPlayerReligions@@QAEXH@Z ENDP ; CvPlayerReligions::ChangeNumProphetsSpawned
_TEXT	ENDS
EXTRN	?getAITrainPercent@CvHandicapInfo@@QBEHXZ:PROC	; CvHandicapInfo::getAITrainPercent
EXTRN	?getHandicapInfo@CvGame@@QBEAAVCvHandicapInfo@@XZ:PROC ; CvGame::getHandicapInfo
EXTRN	?isBarbarian@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isBarbarian
EXTRN	?IsAITeammateOfHuman@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::IsAITeammateOfHuman
; Function compile flags: /Odtp
;	COMDAT ?GetCostNextProphet@CvPlayerReligions@@QBEH_N0@Z
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T235702 = -40						; size = 4
$T235698 = -36						; size = 4
$T235691 = -32						; size = 4
$T235687 = -28						; size = 4
$T235678 = -24						; size = 4
_iProphetCostMod$225399 = -20				; size = 4
_pReligion$225397 = -16					; size = 4
_iDivisor$ = -12					; size = 4
_ePlayerReligion$ = -8					; size = 4
_iCost$ = -4						; size = 4
_bIncludeBeliefDiscounts$ = 8				; size = 1
_bAdjustForSpeedDifficulty$ = 12			; size = 1
?GetCostNextProphet@CvPlayerReligions@@QBEH_N0@Z PROC	; CvPlayerReligions::GetCostNextProphet, COMDAT
; _this$ = ecx

; 2766 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 2767 : 	int iCost = GC.getGame().GetGameReligions()->GetFaithGreatProphetNumber(m_iNumProphetsSpawned + 1);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235678[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR $T235678[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetFaithGreatProphetNumber@CvGameReligions@@QBEHH@Z ; CvGameReligions::GetFaithGreatProphetNumber
	mov	DWORD PTR _iCost$[ebp], eax

; 2768 : 
; 2769 : 	// Boost to faith due to belief?
; 2770 : 	ReligionTypes ePlayerReligion = GetReligionCreatedByPlayer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _ePlayerReligion$[ebp], eax

; 2771 : 	if (bIncludeBeliefDiscounts && ePlayerReligion > RELIGION_PANTHEON)

	movzx	eax, BYTE PTR _bIncludeBeliefDiscounts$[ebp]
	test	eax, eax
	je	SHORT $LN5@GetCostNex
	cmp	DWORD PTR _ePlayerReligion$[ebp], 0
	jle	SHORT $LN5@GetCostNex

; 2772 : 	{
; 2773 : 		const CvReligion* pReligion = NULL;

	mov	DWORD PTR _pReligion$225397[ebp], 0

; 2774 : 		pReligion = GC.getGame().GetGameReligions()->GetReligion(ePlayerReligion, m_pPlayer->GetID());

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T235687[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235691[ebp], ecx
	mov	edx, DWORD PTR $T235687[ebp]
	push	edx
	mov	eax, DWORD PTR _ePlayerReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T235691[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$225397[ebp], eax

; 2775 : 		if(pReligion)

	cmp	DWORD PTR _pReligion$225397[ebp], 0
	je	SHORT $LN5@GetCostNex

; 2776 : 		{
; 2777 : 			int iProphetCostMod = pReligion->m_Beliefs.GetProphetCostModifier();

	mov	ecx, DWORD PTR _pReligion$225397[ebp]
	mov	edx, DWORD PTR [ecx+200]
	mov	DWORD PTR _iProphetCostMod$225399[ebp], edx

; 2778 : 
; 2779 : 			if(iProphetCostMod != 0)

	cmp	DWORD PTR _iProphetCostMod$225399[ebp], 0
	je	SHORT $LN5@GetCostNex

; 2780 : 			{
; 2781 : 				iCost *= (100 + iProphetCostMod);

	mov	eax, DWORD PTR _iProphetCostMod$225399[ebp]
	add	eax, 100				; 00000064H
	imul	eax, DWORD PTR _iCost$[ebp]
	mov	DWORD PTR _iCost$[ebp], eax

; 2782 : 				iCost /= 100;

	mov	eax, DWORD PTR _iCost$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCost$[ebp], eax
$LN5@GetCostNex:

; 2783 : 			}
; 2784 : 		}
; 2785 : 	}
; 2786 : 
; 2787 : 	if (bAdjustForSpeedDifficulty)

	movzx	edx, BYTE PTR _bAdjustForSpeedDifficulty$[ebp]
	test	edx, edx
	je	$LN2@GetCostNex

; 2788 : 	{
; 2789 : 		// Adjust for game speed
; 2790 : 		iCost *= GC.getGame().getGameSpeedInfo().getTrainPercent();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235698[ebp], eax
	mov	ecx, DWORD PTR $T235698[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getTrainPercent@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getTrainPercent
	imul	eax, DWORD PTR _iCost$[ebp]
	mov	DWORD PTR _iCost$[ebp], eax

; 2791 : 		iCost /= 100;

	mov	eax, DWORD PTR _iCost$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCost$[ebp], eax

; 2792 : 
; 2793 : 		// Adjust for difficulty
; 2794 : 		if(!m_pPlayer->isHuman() && !m_pPlayer->IsAITeammateOfHuman() && !m_pPlayer->isBarbarian())

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@GetCostNex
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?IsAITeammateOfHuman@CvPlayer@@QBE_NXZ	; CvPlayer::IsAITeammateOfHuman
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@GetCostNex
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?isBarbarian@CvPlayer@@QBE_NXZ		; CvPlayer::isBarbarian
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@GetCostNex

; 2795 : 		{
; 2796 : 			iCost *= GC.getGame().getHandicapInfo().getAITrainPercent();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235702[ebp], edx
	mov	ecx, DWORD PTR $T235702[ebp]
	call	?getHandicapInfo@CvGame@@QBEAAVCvHandicapInfo@@XZ ; CvGame::getHandicapInfo
	mov	ecx, eax
	call	?getAITrainPercent@CvHandicapInfo@@QBEHXZ ; CvHandicapInfo::getAITrainPercent
	imul	eax, DWORD PTR _iCost$[ebp]
	mov	DWORD PTR _iCost$[ebp], eax

; 2797 : 			iCost /= 100;

	mov	eax, DWORD PTR _iCost$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iCost$[ebp], eax
$LN2@GetCostNex:

; 2798 : 		}
; 2799 : 	}
; 2800 : 
; 2801 : #ifdef NQ_SPAWN_PROPHETS_REMOVE_ONLY_REQUIRED_FAITH
; 2802 : 	// Make the number not be funky
; 2803 : 	int iDivisor = /*10*/ GC.getGOLD_PURCHASE_VISIBLE_DIVISOR();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+6992
	mov	DWORD PTR _iDivisor$[ebp], edx

; 2804 : 	iCost /= iDivisor;

	mov	eax, DWORD PTR _iCost$[ebp]
	cdq
	idiv	DWORD PTR _iDivisor$[ebp]
	mov	DWORD PTR _iCost$[ebp], eax

; 2805 : 	iCost *= iDivisor;

	mov	eax, DWORD PTR _iCost$[ebp]
	imul	eax, DWORD PTR _iDivisor$[ebp]
	mov	DWORD PTR _iCost$[ebp], eax

; 2806 : #endif
; 2807 : 
; 2808 : 	return iCost;

	mov	eax, DWORD PTR _iCost$[ebp]

; 2809 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetCostNextProphet@CvPlayerReligions@@QBEH_N0@Z ENDP	; CvPlayerReligions::GetCostNextProphet
_TEXT	ENDS
PUBLIC	?HasCreatedPantheon@CvPlayerReligions@@QBE_NXZ	; CvPlayerReligions::HasCreatedPantheon
; Function compile flags: /Odtp
;	COMDAT ?HasCreatedPantheon@CvPlayerReligions@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T235720 = -8						; size = 4
$T235716 = -4						; size = 4
?HasCreatedPantheon@CvPlayerReligions@@QBE_NXZ PROC	; CvPlayerReligions::HasCreatedPantheon, COMDAT
; _this$ = ecx

; 2813 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2814 : 	return GC.getGame().GetGameReligions()->HasCreatedPantheon(m_pPlayer->GetID());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T235716[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235720[ebp], eax
	mov	ecx, DWORD PTR $T235716[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T235720[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?HasCreatedPantheon@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasCreatedPantheon

; 2815 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HasCreatedPantheon@CvPlayerReligions@@QBE_NXZ ENDP	; CvPlayerReligions::HasCreatedPantheon
_TEXT	ENDS
PUBLIC	?HasCreatedReligion@CvPlayerReligions@@QBE_NXZ	; CvPlayerReligions::HasCreatedReligion
; Function compile flags: /Odtp
;	COMDAT ?HasCreatedReligion@CvPlayerReligions@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T235735 = -8						; size = 4
$T235731 = -4						; size = 4
?HasCreatedReligion@CvPlayerReligions@@QBE_NXZ PROC	; CvPlayerReligions::HasCreatedReligion, COMDAT
; _this$ = ecx

; 2819 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2820 : 	return GC.getGame().GetGameReligions()->HasCreatedReligion(m_pPlayer->GetID());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T235731[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235735[ebp], eax
	mov	ecx, DWORD PTR $T235731[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T235735[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?HasCreatedReligion@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasCreatedReligion

; 2821 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HasCreatedReligion@CvPlayerReligions@@QBE_NXZ ENDP	; CvPlayerReligions::HasCreatedReligion
_TEXT	ENDS
PUBLIC	?HasAddedReformationBelief@CvPlayerReligions@@QBE_NXZ ; CvPlayerReligions::HasAddedReformationBelief
; Function compile flags: /Odtp
;	COMDAT ?HasAddedReformationBelief@CvPlayerReligions@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T235750 = -8						; size = 4
$T235746 = -4						; size = 4
?HasAddedReformationBelief@CvPlayerReligions@@QBE_NXZ PROC ; CvPlayerReligions::HasAddedReformationBelief, COMDAT
; _this$ = ecx

; 2825 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2826 : 	return GC.getGame().GetGameReligions()->HasAddedReformationBelief(m_pPlayer->GetID());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T235746[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235750[ebp], eax
	mov	ecx, DWORD PTR $T235746[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T235750[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?HasAddedReformationBelief@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasAddedReformationBelief

; 2827 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HasAddedReformationBelief@CvPlayerReligions@@QBE_NXZ ENDP ; CvPlayerReligions::HasAddedReformationBelief
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T235765 = -8						; size = 4
$T235761 = -4						; size = 4
?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ PROC ; CvPlayerReligions::GetReligionCreatedByPlayer, COMDAT
; _this$ = ecx

; 2831 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2832 : 	return GC.getGame().GetGameReligions()->GetReligionCreatedByPlayer(m_pPlayer->GetID());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T235761[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235765[ebp], eax
	mov	ecx, DWORD PTR $T235761[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T235765[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer

; 2833 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ENDP ; CvPlayerReligions::GetReligionCreatedByPlayer
_TEXT	ENDS
EXTRN	?GetFaithPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z:PROC ; CvCity::GetFaithPurchaseCost
EXTRN	?getNumBuildingInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumBuildingInfos
EXTRN	?GetFaithPurchaseCost@CvCity@@QAEHW4UnitTypes@@_N@Z:PROC ; CvCity::GetFaithPurchaseCost
EXTRN	?getNumUnitInfos@CvGlobals@@QAEHXZ:PROC		; CvGlobals::getNumUnitInfos
; Function compile flags: /Odtp
;	COMDAT ?CanAffordFaithPurchase@CvPlayerReligions@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -44						; size = 4
_iCost$225442 = -40					; size = 4
_eBuilding$225437 = -36					; size = 4
_pkBuildingInfo$225439 = -32				; size = 4
_iI$225433 = -28					; size = 4
_iCost$225431 = -24					; size = 4
_eUnit$225426 = -20					; size = 4
_pkUnitInfo$225428 = -16				; size = 4
_iI$225422 = -12					; size = 4
_pCapital$ = -8						; size = 4
_iFaith$ = -4						; size = 4
?CanAffordFaithPurchase@CvPlayerReligions@@QBE_NXZ PROC	; CvPlayerReligions::CanAffordFaithPurchase, COMDAT
; _this$ = ecx

; 2837 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 2838 : 	int iFaith = m_pPlayer->GetFaith();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	mov	DWORD PTR _iFaith$[ebp], eax

; 2839 : 	CvCity* pCapital = m_pPlayer->getCapitalCity();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pCapital$[ebp], eax

; 2840 : 	if(pCapital)

	cmp	DWORD PTR _pCapital$[ebp], 0
	je	$LN13@CanAffordF

; 2841 : 	{
; 2842 : #ifdef AUI_WARNING_FIXES
; 2843 : 		for (uint iI = 0; iI < GC.getNumUnitInfos(); iI++)
; 2844 : #else
; 2845 : 		for (int iI = 0; iI < GC.getNumUnitInfos(); iI++)

	mov	DWORD PTR _iI$225422[ebp], 0
	jmp	SHORT $LN12@CanAffordF
$LN11@CanAffordF:
	mov	edx, DWORD PTR _iI$225422[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$225422[ebp], edx
$LN12@CanAffordF:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumUnitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitInfos
	cmp	DWORD PTR _iI$225422[ebp], eax
	jge	SHORT $LN10@CanAffordF

; 2846 : #endif
; 2847 : 		{
; 2848 : 			const UnitTypes eUnit = static_cast<UnitTypes>(iI);

	mov	eax, DWORD PTR _iI$225422[ebp]
	mov	DWORD PTR _eUnit$225426[ebp], eax

; 2849 : 			CvUnitEntry* pkUnitInfo = GC.getUnitInfo(eUnit);

	mov	ecx, DWORD PTR _eUnit$225426[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR _pkUnitInfo$225428[ebp], eax

; 2850 : 			if(pkUnitInfo)

	cmp	DWORD PTR _pkUnitInfo$225428[ebp], 0
	je	SHORT $LN9@CanAffordF

; 2851 : 			{
; 2852 : 				if (m_pPlayer->IsCanPurchaseAnyCity(false, false, eUnit, NO_BUILDING, YIELD_FAITH))

	push	5
	push	-1
	mov	edx, DWORD PTR _eUnit$225426[ebp]
	push	edx
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z ; CvPlayer::IsCanPurchaseAnyCity
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@CanAffordF

; 2853 : 				{
; 2854 : 					int iCost = pCapital->GetFaithPurchaseCost(eUnit, true);

	push	1
	mov	edx, DWORD PTR _eUnit$225426[ebp]
	push	edx
	mov	ecx, DWORD PTR _pCapital$[ebp]
	call	?GetFaithPurchaseCost@CvCity@@QAEHW4UnitTypes@@_N@Z ; CvCity::GetFaithPurchaseCost
	mov	DWORD PTR _iCost$225431[ebp], eax

; 2855 : 					if(iCost != 0 && iFaith > iCost)

	cmp	DWORD PTR _iCost$225431[ebp], 0
	je	SHORT $LN9@CanAffordF
	mov	eax, DWORD PTR _iFaith$[ebp]
	cmp	eax, DWORD PTR _iCost$225431[ebp]
	jle	SHORT $LN9@CanAffordF

; 2856 : 					{
; 2857 : 						return true;

	mov	al, 1
	jmp	$LN14@CanAffordF
$LN9@CanAffordF:

; 2858 : 					}
; 2859 : 				}
; 2860 : 			}
; 2861 : 		}

	jmp	SHORT $LN11@CanAffordF
$LN10@CanAffordF:

; 2862 : #ifdef AUI_WARNING_FIXES
; 2863 : 		for (uint iI = 0; iI < GC.getNumBuildingInfos(); iI++)
; 2864 : #else
; 2865 : 		for (int iI = 0; iI < GC.getNumBuildingInfos(); iI++)

	mov	DWORD PTR _iI$225433[ebp], 0
	jmp	SHORT $LN6@CanAffordF
$LN5@CanAffordF:
	mov	ecx, DWORD PTR _iI$225433[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$225433[ebp], ecx
$LN6@CanAffordF:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	DWORD PTR _iI$225433[ebp], eax
	jge	SHORT $LN13@CanAffordF

; 2866 : #endif
; 2867 : 		{
; 2868 : 			const BuildingTypes eBuilding = static_cast<BuildingTypes>(iI);

	mov	edx, DWORD PTR _iI$225433[ebp]
	mov	DWORD PTR _eBuilding$225437[ebp], edx

; 2869 : 			CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	mov	eax, DWORD PTR _eBuilding$225437[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pkBuildingInfo$225439[ebp], eax

; 2870 : 			if(pkBuildingInfo)

	cmp	DWORD PTR _pkBuildingInfo$225439[ebp], 0
	je	SHORT $LN3@CanAffordF

; 2871 : 			{
; 2872 : 				if (m_pPlayer->IsCanPurchaseAnyCity(false, false, NO_UNIT, eBuilding, YIELD_FAITH))

	push	5
	mov	ecx, DWORD PTR _eBuilding$225437[ebp]
	push	ecx
	push	-1
	push	0
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z ; CvPlayer::IsCanPurchaseAnyCity
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@CanAffordF

; 2873 : 				{
; 2874 : 					int iCost = pCapital->GetFaithPurchaseCost(eBuilding);

	mov	ecx, DWORD PTR _eBuilding$225437[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pCapital$[ebp]
	call	?GetFaithPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z ; CvCity::GetFaithPurchaseCost
	mov	DWORD PTR _iCost$225442[ebp], eax

; 2875 : 					if(iCost != 0 && iFaith > iCost)

	cmp	DWORD PTR _iCost$225442[ebp], 0
	je	SHORT $LN3@CanAffordF
	mov	edx, DWORD PTR _iFaith$[ebp]
	cmp	edx, DWORD PTR _iCost$225442[ebp]
	jle	SHORT $LN3@CanAffordF

; 2876 : 					{
; 2877 : 						return true;

	mov	al, 1
	jmp	SHORT $LN14@CanAffordF
$LN3@CanAffordF:

; 2878 : 					}
; 2879 : 				}
; 2880 : 			}
; 2881 : 		}

	jmp	SHORT $LN5@CanAffordF
$LN13@CanAffordF:

; 2882 : 	}
; 2883 : 
; 2884 : 	return false;

	xor	al, al
$LN14@CanAffordF:

; 2885 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CanAffordFaithPurchase@CvPlayerReligions@@QBE_NXZ ENDP	; CvPlayerReligions::CanAffordFaithPurchase
_TEXT	ENDS
PUBLIC	?HasReligiousCity@CvPlayerReligions@@QBE_NXZ	; CvPlayerReligions::HasReligiousCity
; Function compile flags: /Odtp
;	COMDAT ?HasReligiousCity@CvPlayerReligions@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_pCity$ = -8						; size = 4
_iLoop$ = -4						; size = 4
?HasReligiousCity@CvPlayerReligions@@QBE_NXZ PROC	; CvPlayerReligions::HasReligiousCity, COMDAT
; _this$ = ecx

; 2889 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2890 : 	int iLoop = 0;

	mov	DWORD PTR _iLoop$[ebp], 0

; 2891 : 	CvCity* pCity = NULL;

	mov	DWORD PTR _pCity$[ebp], 0

; 2892 : 
; 2893 : 	for(pCity = m_pPlayer->firstCity(&iLoop); pCity != NULL; pCity = m_pPlayer->nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pCity$[ebp], eax
	jmp	SHORT $LN5@HasReligio
$LN4@HasReligio:
	push	0
	lea	edx, DWORD PTR _iLoop$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pCity$[ebp], eax
$LN5@HasReligio:
	cmp	DWORD PTR _pCity$[ebp], 0
	je	SHORT $LN3@HasReligio

; 2894 : 	{
; 2895 : 		if(pCity)

	cmp	DWORD PTR _pCity$[ebp], 0
	je	SHORT $LN2@HasReligio

; 2896 : 		{
; 2897 : 			if(pCity->GetCityReligions()->GetReligiousMajority() > RELIGION_PANTHEON)

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	test	eax, eax
	jle	SHORT $LN2@HasReligio

; 2898 : 			{
; 2899 : 				return true;

	mov	al, 1
	jmp	SHORT $LN6@HasReligio
$LN2@HasReligio:

; 2900 : 			}
; 2901 : 		}
; 2902 : 	}

	jmp	SHORT $LN4@HasReligio
$LN3@HasReligio:

; 2903 : 
; 2904 : 	return false;

	xor	al, al
$LN6@HasReligio:

; 2905 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HasReligiousCity@CvPlayerReligions@@QBE_NXZ ENDP	; CvPlayerReligions::HasReligiousCity
_TEXT	ENDS
PUBLIC	?HasOthersReligionInMostCities@CvPlayerReligions@@QBE_NW4PlayerTypes@@@Z ; CvPlayerReligions::HasOthersReligionInMostCities
EXTRN	?getNumCities@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getNumCities
; Function compile flags: /Odtp
;	COMDAT ?HasOthersReligionInMostCities@CvPlayerReligions@@QBE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T235775 = -20						; size = 4
_eOtherReligion$ = -16					; size = 4
_pCity$ = -12						; size = 4
_iNumFollowingCities$ = -8				; size = 4
_iLoop$ = -4						; size = 4
_eOtherPlayer$ = 8					; size = 4
?HasOthersReligionInMostCities@CvPlayerReligions@@QBE_NW4PlayerTypes@@@Z PROC ; CvPlayerReligions::HasOthersReligionInMostCities, COMDAT
; _this$ = ecx

; 2909 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 2910 : 	// Not happy about it if have their own religion
; 2911 : 	if(HasCreatedReligion())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasCreatedReligion@CvPlayerReligions@@QBE_NXZ ; CvPlayerReligions::HasCreatedReligion
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@HasOthersR

; 2912 : 	{
; 2913 : 		return false;

	xor	al, al
	jmp	$LN8@HasOthersR
$LN7@HasOthersR:

; 2914 : 	}
; 2915 : 
; 2916 : 	ReligionTypes eOtherReligion = GC.getGame().GetGameReligions()->GetReligionCreatedByPlayer(eOtherPlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235775[ebp], ecx
	mov	edx, DWORD PTR _eOtherPlayer$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T235775[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eOtherReligion$[ebp], eax

; 2917 : 
; 2918 : 	if(eOtherReligion <= RELIGION_PANTHEON)

	cmp	DWORD PTR _eOtherReligion$[ebp], 0
	jg	SHORT $LN6@HasOthersR

; 2919 : 	{
; 2920 : 		return false;

	xor	al, al
	jmp	$LN8@HasOthersR
$LN6@HasOthersR:

; 2921 : 	}
; 2922 : 
; 2923 : 	int iNumFollowingCities = 0;

	mov	DWORD PTR _iNumFollowingCities$[ebp], 0

; 2924 : 	int iLoop = 0;

	mov	DWORD PTR _iLoop$[ebp], 0

; 2925 : 	CvCity* pCity = NULL;

	mov	DWORD PTR _pCity$[ebp], 0

; 2926 : 	for(pCity = m_pPlayer->firstCity(&iLoop); pCity != NULL; pCity = m_pPlayer->nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pCity$[ebp], eax
	jmp	SHORT $LN5@HasOthersR
$LN4@HasOthersR:
	push	0
	lea	edx, DWORD PTR _iLoop$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pCity$[ebp], eax
$LN5@HasOthersR:
	cmp	DWORD PTR _pCity$[ebp], 0
	je	SHORT $LN3@HasOthersR

; 2927 : 	{
; 2928 : 		if(pCity)

	cmp	DWORD PTR _pCity$[ebp], 0
	je	SHORT $LN2@HasOthersR

; 2929 : 		{
; 2930 : 			if(pCity->GetCityReligions()->GetReligiousMajority() == eOtherReligion)

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eOtherReligion$[ebp]
	jne	SHORT $LN2@HasOthersR

; 2931 : 			{
; 2932 : 				iNumFollowingCities++;

	mov	ecx, DWORD PTR _iNumFollowingCities$[ebp]
	add	ecx, 1
	mov	DWORD PTR _iNumFollowingCities$[ebp], ecx
$LN2@HasOthersR:

; 2933 : 			}
; 2934 : 		}
; 2935 : 	}

	jmp	SHORT $LN4@HasOthersR
$LN3@HasOthersR:

; 2936 : 
; 2937 : 	// Over half?
; 2938 : 	return (iNumFollowingCities * 2 > m_pPlayer->getNumCities());

	mov	esi, DWORD PTR _iNumFollowingCities$[ebp]
	shl	esi, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getNumCities@CvPlayer@@QBEHXZ		; CvPlayer::getNumCities
	xor	ecx, ecx
	cmp	esi, eax
	setg	cl
	mov	al, cl
$LN8@HasOthersR:

; 2939 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?HasOthersReligionInMostCities@CvPlayerReligions@@QBE_NW4PlayerTypes@@@Z ENDP ; CvPlayerReligions::HasOthersReligionInMostCities
_TEXT	ENDS
PUBLIC	?HasReligionInMostCities@CvPlayerReligions@@QBE_NW4ReligionTypes@@@Z ; CvPlayerReligions::HasReligionInMostCities
; Function compile flags: /Odtp
;	COMDAT ?HasReligionInMostCities@CvPlayerReligions@@QBE_NW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_pCity$ = -12						; size = 4
_iNumFollowingCities$ = -8				; size = 4
_iLoop$ = -4						; size = 4
_eReligion$ = 8						; size = 4
?HasReligionInMostCities@CvPlayerReligions@@QBE_NW4ReligionTypes@@@Z PROC ; CvPlayerReligions::HasReligionInMostCities, COMDAT
; _this$ = ecx

; 2943 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 2944 : 	if (eReligion <= RELIGION_PANTHEON)

	cmp	DWORD PTR _eReligion$[ebp], 0
	jg	SHORT $LN6@HasReligio@2

; 2945 : 	{
; 2946 : 		return false;

	xor	al, al
	jmp	$LN7@HasReligio@2
$LN6@HasReligio@2:

; 2947 : 	}
; 2948 : 
; 2949 : 	int iNumFollowingCities = 0;

	mov	DWORD PTR _iNumFollowingCities$[ebp], 0

; 2950 : 	int iLoop = 0;

	mov	DWORD PTR _iLoop$[ebp], 0

; 2951 : 	CvCity* pCity = NULL;

	mov	DWORD PTR _pCity$[ebp], 0

; 2952 : 	for(pCity = m_pPlayer->firstCity(&iLoop); pCity != NULL; pCity = m_pPlayer->nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pCity$[ebp], eax
	jmp	SHORT $LN5@HasReligio@2
$LN4@HasReligio@2:
	push	0
	lea	edx, DWORD PTR _iLoop$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pCity$[ebp], eax
$LN5@HasReligio@2:
	cmp	DWORD PTR _pCity$[ebp], 0
	je	SHORT $LN3@HasReligio@2

; 2953 : 	{
; 2954 : 		if(pCity)

	cmp	DWORD PTR _pCity$[ebp], 0
	je	SHORT $LN2@HasReligio@2

; 2955 : 		{
; 2956 : 			if(pCity->GetCityReligions()->GetReligiousMajority() == eReligion)

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN2@HasReligio@2

; 2957 : 			{
; 2958 : 				iNumFollowingCities++;

	mov	ecx, DWORD PTR _iNumFollowingCities$[ebp]
	add	ecx, 1
	mov	DWORD PTR _iNumFollowingCities$[ebp], ecx
$LN2@HasReligio@2:

; 2959 : 			}
; 2960 : 		}
; 2961 : 	}

	jmp	SHORT $LN4@HasReligio@2
$LN3@HasReligio@2:

; 2962 : 
; 2963 : 	// Over half?
; 2964 : 	return (iNumFollowingCities * 2 > m_pPlayer->getNumCities());

	mov	esi, DWORD PTR _iNumFollowingCities$[ebp]
	shl	esi, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getNumCities@CvPlayer@@QBEHXZ		; CvPlayer::getNumCities
	xor	ecx, ecx
	cmp	esi, eax
	setg	cl
	mov	al, cl
$LN7@HasReligio@2:

; 2965 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?HasReligionInMostCities@CvPlayerReligions@@QBE_NW4ReligionTypes@@@Z ENDP ; CvPlayerReligions::HasReligionInMostCities
_TEXT	ENDS
PUBLIC	?GetReligionInMostCities@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionInMostCities
EXTRN	?GetGameReligions@CvGlobals@@QBEPAVCvReligionXMLEntries@@XZ:PROC ; CvGlobals::GetGameReligions
; Function compile flags: /Odtp
;	COMDAT ?GetReligionInMostCities@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_eReligion$225489 = -8					; size = 4
_iI$225485 = -4						; size = 4
?GetReligionInMostCities@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ PROC ; CvPlayerReligions::GetReligionInMostCities, COMDAT
; _this$ = ecx

; 2969 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 2970 : 	for (int iI = RELIGION_PANTHEON + 1; iI < GC.GetGameReligions()->GetNumReligions(); iI++)

	mov	DWORD PTR _iI$225485[ebp], 1
	jmp	SHORT $LN4@GetReligio@4
$LN3@GetReligio@4:
	mov	eax, DWORD PTR _iI$225485[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$225485[ebp], eax
$LN4@GetReligio@4:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameReligions@CvGlobals@@QBEPAVCvReligionXMLEntries@@XZ ; CvGlobals::GetGameReligions
	mov	ecx, eax
	call	?GetNumReligions@CvReligionXMLEntries@@QAEHXZ ; CvReligionXMLEntries::GetNumReligions
	cmp	DWORD PTR _iI$225485[ebp], eax
	jge	SHORT $LN2@GetReligio@4

; 2971 : 	{
; 2972 : 		ReligionTypes eReligion = (ReligionTypes)iI;

	mov	ecx, DWORD PTR _iI$225485[ebp]
	mov	DWORD PTR _eReligion$225489[ebp], ecx

; 2973 : 		if (HasReligionInMostCities(eReligion))

	mov	edx, DWORD PTR _eReligion$225489[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HasReligionInMostCities@CvPlayerReligions@@QBE_NW4ReligionTypes@@@Z ; CvPlayerReligions::HasReligionInMostCities
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@GetReligio@4

; 2974 : 		{
; 2975 : 			return eReligion;

	mov	eax, DWORD PTR _eReligion$225489[ebp]
	jmp	SHORT $LN5@GetReligio@4
$LN1@GetReligio@4:

; 2976 : 		}
; 2977 : 	}

	jmp	SHORT $LN3@GetReligio@4
$LN2@GetReligio@4:

; 2978 : 	return NO_RELIGION;

	or	eax, -1
$LN5@GetReligio@4:

; 2979 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetReligionInMostCities@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ENDP ; CvPlayerReligions::GetReligionInMostCities
_TEXT	ENDS
PUBLIC	?GetCityStateMinimumInfluence@CvPlayerReligions@@QBEHW4ReligionTypes@@@Z ; CvPlayerReligions::GetCityStateMinimumInfluence
; Function compile flags: /Odtp
;	COMDAT ?GetCityStateMinimumInfluence@CvPlayerReligions@@QBEHW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T235802 = -32						; size = 4
$T235798 = -28						; size = 4
$T235794 = -24						; size = 4
$T235790 = -20						; size = 4
_pReligion$225501 = -16					; size = 4
_pReligions$225499 = -12				; size = 4
_eFounderBenefitReligion$ = -8				; size = 4
_iMinInfluence$ = -4					; size = 4
_eReligion$ = 8						; size = 4
?GetCityStateMinimumInfluence@CvPlayerReligions@@QBEHW4ReligionTypes@@@Z PROC ; CvPlayerReligions::GetCityStateMinimumInfluence, COMDAT
; _this$ = ecx

; 2983 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 2984 : 	int iMinInfluence = 0;

	mov	DWORD PTR _iMinInfluence$[ebp], 0

; 2985 : 
; 2986 : 	ReligionTypes eFounderBenefitReligion = GC.getGame().GetGameReligions()->GetFounderBenefitsReligion(m_pPlayer->GetID());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T235790[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235794[ebp], eax
	mov	ecx, DWORD PTR $T235790[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T235794[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetFounderBenefitsReligion
	mov	DWORD PTR _eFounderBenefitReligion$[ebp], eax

; 2987 : 	if (eReligion == eFounderBenefitReligion)

	mov	edx, DWORD PTR _eReligion$[ebp]
	cmp	edx, DWORD PTR _eFounderBenefitReligion$[ebp]
	jne	SHORT $LN3@GetCitySta

; 2988 : 	{
; 2989 : 		CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235798[ebp], eax
	mov	ecx, DWORD PTR $T235798[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pReligions$225499[ebp], eax

; 2990 : 		if(eFounderBenefitReligion != NO_RELIGION)

	cmp	DWORD PTR _eFounderBenefitReligion$[ebp], -1
	je	SHORT $LN3@GetCitySta

; 2991 : 		{
; 2992 : 			const CvReligion* pReligion = pReligions->GetReligion(eFounderBenefitReligion, NO_PLAYER);

	push	-1
	mov	ecx, DWORD PTR _eFounderBenefitReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pReligions$225499[ebp]
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$225501[ebp], eax

; 2993 : 			if(pReligion)

	cmp	DWORD PTR _pReligion$225501[ebp], 0
	je	SHORT $LN3@GetCitySta

; 2994 : 			{
; 2995 : 				iMinInfluence += pReligion->m_Beliefs.GetCityStateMinimumInfluence();

	mov	edx, DWORD PTR _pReligion$225501[ebp]
	mov	eax, DWORD PTR [edx+252]
	mov	DWORD PTR $T235802[ebp], eax
	mov	ecx, DWORD PTR _iMinInfluence$[ebp]
	add	ecx, DWORD PTR $T235802[ebp]
	mov	DWORD PTR _iMinInfluence$[ebp], ecx
$LN3@GetCitySta:

; 2996 : 			}
; 2997 : 		}
; 2998 : 	}
; 2999 : 
; 3000 : 	return iMinInfluence;

	mov	eax, DWORD PTR _iMinInfluence$[ebp]

; 3001 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetCityStateMinimumInfluence@CvPlayerReligions@@QBEHW4ReligionTypes@@@Z ENDP ; CvPlayerReligions::GetCityStateMinimumInfluence
_TEXT	ENDS
PUBLIC	?GetCityStateInfluenceModifier@CvPlayerReligions@@QBEHXZ ; CvPlayerReligions::GetCityStateInfluenceModifier
; Function compile flags: /Odtp
;	COMDAT ?GetCityStateInfluenceModifier@CvPlayerReligions@@QBEHXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T235812 = -20						; size = 4
$T235808 = -16						; size = 4
_pReligion$225509 = -12					; size = 4
_iRtnValue$ = -8					; size = 4
_eReligion$ = -4					; size = 4
?GetCityStateInfluenceModifier@CvPlayerReligions@@QBEHXZ PROC ; CvPlayerReligions::GetCityStateInfluenceModifier, COMDAT
; _this$ = ecx

; 3005 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 3006 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 3007 : 	ReligionTypes eReligion = GetReligionCreatedByPlayer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eReligion$[ebp], eax

; 3008 : 	if (eReligion != NO_RELIGION)

	cmp	DWORD PTR _eReligion$[ebp], -1
	je	SHORT $LN2@GetCitySta@2

; 3009 : 	{
; 3010 : 		const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, NO_PLAYER);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235808[ebp], eax
	push	-1
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T235808[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$225509[ebp], eax

; 3011 : 		if(pReligion)

	cmp	DWORD PTR _pReligion$225509[ebp], 0
	je	SHORT $LN2@GetCitySta@2

; 3012 : 		{
; 3013 : 			iRtnValue += pReligion->m_Beliefs.GetCityStateInfluenceModifier();

	mov	edx, DWORD PTR _pReligion$225509[ebp]
	mov	eax, DWORD PTR [edx+256]
	mov	DWORD PTR $T235812[ebp], eax
	mov	ecx, DWORD PTR _iRtnValue$[ebp]
	add	ecx, DWORD PTR $T235812[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], ecx
$LN2@GetCitySta@2:

; 3014 : 		}
; 3015 : 	}
; 3016 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]

; 3017 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCityStateInfluenceModifier@CvPlayerReligions@@QBEHXZ ENDP ; CvPlayerReligions::GetCityStateInfluenceModifier
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetSpyPressure@CvPlayerReligions@@QBEHXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T235822 = -20						; size = 4
$T235818 = -16						; size = 4
_pReligion$225517 = -12					; size = 4
_iRtnValue$ = -8					; size = 4
_eReligion$ = -4					; size = 4
?GetSpyPressure@CvPlayerReligions@@QBEHXZ PROC		; CvPlayerReligions::GetSpyPressure, COMDAT
; _this$ = ecx

; 3021 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 3022 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 3023 : 	ReligionTypes eReligion = GetReligionCreatedByPlayer();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eReligion$[ebp], eax

; 3024 : 	if (eReligion != NO_RELIGION)

	cmp	DWORD PTR _eReligion$[ebp], -1
	je	SHORT $LN2@GetSpyPres

; 3025 : 	{
; 3026 : 		const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, NO_PLAYER);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235818[ebp], eax
	push	-1
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T235818[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$225517[ebp], eax

; 3027 : 		if(pReligion)

	cmp	DWORD PTR _pReligion$225517[ebp], 0
	je	SHORT $LN2@GetSpyPres

; 3028 : 		{
; 3029 : 			iRtnValue += pReligion->m_Beliefs.GetSpyPressure();

	mov	edx, DWORD PTR _pReligion$225517[ebp]
	mov	eax, DWORD PTR [edx+264]
	mov	DWORD PTR $T235822[ebp], eax
	mov	ecx, DWORD PTR _iRtnValue$[ebp]
	add	ecx, DWORD PTR $T235822[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], ecx
$LN2@GetSpyPres:

; 3030 : 		}
; 3031 : 	}
; 3032 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]

; 3033 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSpyPressure@CvPlayerReligions@@QBEHXZ ENDP		; CvPlayerReligions::GetSpyPressure
_TEXT	ENDS
PUBLIC	?GetNumForeignCitiesFollowing@CvPlayerReligions@@QBEHXZ ; CvPlayerReligions::GetNumForeignCitiesFollowing
; Function compile flags: /Odtp
;	COMDAT ?GetNumForeignCitiesFollowing@CvPlayerReligions@@QBEHXZ
_TEXT	SEGMENT
_this$ = -52						; size = 4
$T235866 = -48						; size = 4
$T235862 = -44						; size = 4
$T235858 = -40						; size = 4
$T235849 = -33						; size = 1
$T235837 = -32						; size = 4
$T235833 = -28						; size = 4
_kLoopPlayer$225531 = -24				; size = 4
_iPlayerLoop$225527 = -20				; size = 4
_eFounderBenefitReligion$ = -16				; size = 4
_iCityLoop$ = -12					; size = 4
_iRtnValue$ = -8					; size = 4
_pLoopCity$ = -4					; size = 4
?GetNumForeignCitiesFollowing@CvPlayerReligions@@QBEHXZ PROC ; CvPlayerReligions::GetNumForeignCitiesFollowing, COMDAT
; _this$ = ecx

; 3037 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 3038 : 	CvCity *pLoopCity;
; 3039 : 	int iCityLoop;
; 3040 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 3041 : 
; 3042 : 	ReligionTypes eFounderBenefitReligion = GC.getGame().GetGameReligions()->GetFounderBenefitsReligion(m_pPlayer->GetID());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T235833[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235837[ebp], eax
	mov	ecx, DWORD PTR $T235833[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T235837[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetFounderBenefitsReligion
	mov	DWORD PTR _eFounderBenefitReligion$[ebp], eax

; 3043 : 	if (eFounderBenefitReligion > RELIGION_PANTHEON)

	cmp	DWORD PTR _eFounderBenefitReligion$[ebp], 0
	jle	$LN9@GetNumFore

; 3044 : 	{
; 3045 : 		for(int iPlayerLoop = 0; iPlayerLoop < MAX_CIV_PLAYERS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$225527[ebp], 0
	jmp	SHORT $LN8@GetNumFore
$LN7@GetNumFore:
	mov	edx, DWORD PTR _iPlayerLoop$225527[ebp]
	add	edx, 1
	mov	DWORD PTR _iPlayerLoop$225527[ebp], edx
$LN8@GetNumFore:
	cmp	DWORD PTR _iPlayerLoop$225527[ebp], 63	; 0000003fH
	jge	$LN9@GetNumFore

; 3046 : 		{
; 3047 : 			CvPlayer &kLoopPlayer = GET_PLAYER((PlayerTypes)iPlayerLoop);

	mov	eax, DWORD PTR _iPlayerLoop$225527[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kLoopPlayer$225531[ebp], eax

; 3048 : 			if(kLoopPlayer.isAlive() && iPlayerLoop != m_pPlayer->GetID())

	mov	ecx, DWORD PTR _kLoopPlayer$225531[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T235849[ebp], dl
	movzx	eax, BYTE PTR $T235849[ebp]
	test	eax, eax
	je	$LN5@GetNumFore
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T235858[ebp], eax
	mov	ecx, DWORD PTR _iPlayerLoop$225527[ebp]
	cmp	ecx, DWORD PTR $T235858[ebp]
	je	SHORT $LN5@GetNumFore

; 3049 : 			{
; 3050 : 				for(pLoopCity = GET_PLAYER((PlayerTypes)iPlayerLoop).firstCity(&iCityLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER((PlayerTypes)iPlayerLoop).nextCity(&iCityLoop))

	mov	edx, DWORD PTR _iPlayerLoop$225527[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T235862[ebp], edx
	push	0
	lea	eax, DWORD PTR _iCityLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T235862[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN4@GetNumFore
$LN3@GetNumFore:
	mov	ecx, DWORD PTR _iPlayerLoop$225527[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T235866[ebp], ecx
	push	0
	lea	edx, DWORD PTR _iCityLoop$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T235866[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN4@GetNumFore:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	SHORT $LN5@GetNumFore

; 3051 : 				{
; 3052 : 					if (pLoopCity->GetCityReligions()->GetReligiousMajority() == eFounderBenefitReligion)

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eFounderBenefitReligion$[ebp]
	jne	SHORT $LN1@GetNumFore

; 3053 : 					{
; 3054 : 						iRtnValue++;

	mov	eax, DWORD PTR _iRtnValue$[ebp]
	add	eax, 1
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN1@GetNumFore:

; 3055 : 					}
; 3056 : 				}

	jmp	SHORT $LN3@GetNumFore
$LN5@GetNumFore:

; 3057 : 			}
; 3058 : 		}

	jmp	$LN7@GetNumFore
$LN9@GetNumFore:

; 3059 : 	}
; 3060 : 
; 3061 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]

; 3062 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumForeignCitiesFollowing@CvPlayerReligions@@QBEHXZ ENDP ; CvPlayerReligions::GetNumForeignCitiesFollowing
_TEXT	ENDS
PUBLIC	?GetNumForeignFollowers@CvPlayerReligions@@QBEH_N@Z ; CvPlayerReligions::GetNumForeignFollowers
EXTRN	?atWar@@YA_NW4TeamTypes@@0@Z:PROC		; atWar
; Function compile flags: /Odtp
;	COMDAT ?GetNumForeignFollowers@CvPlayerReligions@@QBEH_N@Z
_TEXT	SEGMENT
_this$ = -64						; size = 4
$T235929 = -60						; size = 4
$T235925 = -56						; size = 4
$T235921 = -52						; size = 4
$T235920 = -48						; size = 4
$T235911 = -44						; size = 4
$T235902 = -40						; size = 4
$T235893 = -33						; size = 1
$T235881 = -32						; size = 4
$T235877 = -28						; size = 4
_kLoopPlayer$225553 = -24				; size = 4
_iPlayerLoop$225549 = -20				; size = 4
_eFounderBenefitReligion$ = -16				; size = 4
_iCityLoop$ = -12					; size = 4
_iRtnValue$ = -8					; size = 4
_pLoopCity$ = -4					; size = 4
_bAtPeace$ = 8						; size = 1
?GetNumForeignFollowers@CvPlayerReligions@@QBEH_N@Z PROC ; CvPlayerReligions::GetNumForeignFollowers, COMDAT
; _this$ = ecx

; 3066 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	DWORD PTR _this$[ebp], ecx

; 3067 : 	CvCity *pLoopCity;
; 3068 : 	int iCityLoop;
; 3069 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 3070 : 
; 3071 : 	ReligionTypes eFounderBenefitReligion = GC.getGame().GetGameReligions()->GetFounderBenefitsReligion(m_pPlayer->GetID());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T235877[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T235881[ebp], eax
	mov	ecx, DWORD PTR $T235877[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T235881[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetFounderBenefitsReligion
	mov	DWORD PTR _eFounderBenefitReligion$[ebp], eax

; 3072 : 	if (eFounderBenefitReligion > RELIGION_PANTHEON)

	cmp	DWORD PTR _eFounderBenefitReligion$[ebp], 0
	jle	$LN10@GetNumFore@2

; 3073 : 	{
; 3074 : 		for(int iPlayerLoop = 0; iPlayerLoop < MAX_CIV_PLAYERS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$225549[ebp], 0
	jmp	SHORT $LN9@GetNumFore@2
$LN8@GetNumFore@2:
	mov	edx, DWORD PTR _iPlayerLoop$225549[ebp]
	add	edx, 1
	mov	DWORD PTR _iPlayerLoop$225549[ebp], edx
$LN9@GetNumFore@2:
	cmp	DWORD PTR _iPlayerLoop$225549[ebp], 63	; 0000003fH
	jge	$LN10@GetNumFore@2

; 3075 : 		{
; 3076 : 			CvPlayer &kLoopPlayer = GET_PLAYER((PlayerTypes)iPlayerLoop);

	mov	eax, DWORD PTR _iPlayerLoop$225549[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kLoopPlayer$225553[ebp], eax

; 3077 : 			if(kLoopPlayer.isAlive() && iPlayerLoop != m_pPlayer->GetID())

	mov	ecx, DWORD PTR _kLoopPlayer$225553[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T235893[ebp], dl
	movzx	eax, BYTE PTR $T235893[ebp]
	test	eax, eax
	je	$LN6@GetNumFore@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T235902[ebp], eax
	mov	ecx, DWORD PTR _iPlayerLoop$225549[ebp]
	cmp	ecx, DWORD PTR $T235902[ebp]
	je	$LN6@GetNumFore@2

; 3078 : 			{
; 3079 : 				if (!bAtPeace || !atWar(m_pPlayer->getTeam(), kLoopPlayer.getTeam()))

	movzx	edx, BYTE PTR _bAtPeace$[ebp]
	test	edx, edx
	je	SHORT $LN4@GetNumFore@2
	mov	eax, DWORD PTR _kLoopPlayer$225553[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T235911[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T235920[ebp], eax
	mov	ecx, DWORD PTR $T235920[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T235921[ebp], eax
	mov	eax, DWORD PTR $T235911[ebp]
	push	eax
	mov	ecx, DWORD PTR $T235921[ebp]
	push	ecx
	call	?atWar@@YA_NW4TeamTypes@@0@Z		; atWar
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN6@GetNumFore@2
$LN4@GetNumFore@2:

; 3080 : 				{
; 3081 : 					for(pLoopCity = GET_PLAYER((PlayerTypes)iPlayerLoop).firstCity(&iCityLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER((PlayerTypes)iPlayerLoop).nextCity(&iCityLoop))

	mov	eax, DWORD PTR _iPlayerLoop$225549[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T235925[ebp], eax
	push	0
	lea	ecx, DWORD PTR _iCityLoop$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T235925[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN3@GetNumFore@2
$LN2@GetNumFore@2:
	mov	edx, DWORD PTR _iPlayerLoop$225549[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T235929[ebp], edx
	push	0
	lea	eax, DWORD PTR _iCityLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T235929[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN3@GetNumFore@2:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	SHORT $LN6@GetNumFore@2

; 3082 : 					{
; 3083 : 						iRtnValue += pLoopCity->GetCityReligions()->GetNumFollowers(eFounderBenefitReligion);

	mov	ecx, DWORD PTR _eFounderBenefitReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 3084 : 					}

	jmp	SHORT $LN2@GetNumFore@2
$LN6@GetNumFore@2:

; 3085 : 				}
; 3086 : 			}
; 3087 : 		}

	jmp	$LN8@GetNumFore@2
$LN10@GetNumFore@2:

; 3088 : 	}
; 3089 : 
; 3090 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]

; 3091 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumForeignFollowers@CvPlayerReligions@@QBEH_N@Z ENDP ; CvPlayerReligions::GetNumForeignFollowers
_TEXT	ENDS
PUBLIC	??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligionInCity,8,0,297,0>::~FStaticVector<CvReligionInCity,8,0,297,0>
PUBLIC	??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligionInCity,8,0,297,0>::FStaticVector<CvReligionInCity,8,0,297,0>
PUBLIC	??0CvCityReligions@@QAE@XZ			; CvCityReligions::CvCityReligions
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$??0CvCityReligions@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvCityReligions@@QAE@XZ$0
__ehfuncinfo$??0CvCityReligions@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CvCityReligions@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ??0CvCityReligions@@QAE@XZ
_TEXT	SEGMENT
_this$ = -36						; size = 4
_i$235970 = -32						; size = 4
__$EHRec$ = -12						; size = 12
??0CvCityReligions@@QAE@XZ PROC				; CvCityReligions::CvCityReligions, COMDAT
; _this$ = ecx

; 3105 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CvCityReligions@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligionInCity,8,0,297,0>::FStaticVector<CvReligionInCity,8,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligionInCity,8,0,297,0>::FStaticVector<CvReligionInCity,8,0,297,0>
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+420], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+424], 0

; 3106 : 	m_ReligionStatus.clear();

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN29@CvCityReli
	mov	DWORD PTR _i$235970[ebp], 0
	jmp	SHORT $LN27@CvCityReli
$LN26@CvCityReli:
	mov	eax, DWORD PTR _i$235970[ebp]
	add	eax, 1
	mov	DWORD PTR _i$235970[ebp], eax
$LN27@CvCityReli:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$235970[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jae	SHORT $LN29@CvCityReli
	jmp	SHORT $LN26@CvCityReli
$LN29@CvCityReli:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 3107 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvCityReligions@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligionInCity,8,0,297,0>::~FStaticVector<CvReligionInCity,8,0,297,0>
__ehhandler$??0CvCityReligions@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CvCityReligions@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvCityReligions@@QAE@XZ ENDP				; CvCityReligions::CvCityReligions
PUBLIC	??1CvCityReligions@@QAE@XZ			; CvCityReligions::~CvCityReligions
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$??1CvCityReligions@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvCityReligions@@QAE@XZ$0
__ehfuncinfo$??1CvCityReligions@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CvCityReligions@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ??1CvCityReligions@@QAE@XZ
_TEXT	SEGMENT
_this$ = -40						; size = 4
__$EHRec$ = -12						; size = 12
??1CvCityReligions@@QAE@XZ PROC				; CvCityReligions::~CvCityReligions, COMDAT
; _this$ = ecx

; 3111 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CvCityReligions@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 3112 : 
; 3113 : }

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligionInCity,8,0,297,0>::~FStaticVector<CvReligionInCity,8,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligionInCity,8,0,297,0>::~FStaticVector<CvReligionInCity,8,0,297,0>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvCityReligions@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligionInCity,8,0,297,0>::~FStaticVector<CvReligionInCity,8,0,297,0>
__ehhandler$??1CvCityReligions@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CvCityReligions@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvCityReligions@@QAE@XZ ENDP				; CvCityReligions::~CvCityReligions
PUBLIC	?Init@CvCityReligions@@QAEXPAVCvCity@@@Z	; CvCityReligions::Init
; Function compile flags: /Odtp
;	COMDAT ?Init@CvCityReligions@@QAEXPAVCvCity@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$236060 = -4						; size = 4
_pCity$ = 8						; size = 4
?Init@CvCityReligions@@QAEXPAVCvCity@@@Z PROC		; CvCityReligions::Init, COMDAT
; _this$ = ecx

; 3117 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 3118 : 	m_pCity = pCity;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pCity$[ebp]
	mov	DWORD PTR [eax+416], ecx

; 3119 : 	m_bHasPaidAdoptionBonus = false;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+420], 0

; 3120 : 	m_iReligiousPressureModifier = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+424], 0

; 3121 : 	m_ReligionStatus.clear();

	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN9@Init
	mov	DWORD PTR _i$236060[ebp], 0
	jmp	SHORT $LN7@Init
$LN6@Init:
	mov	edx, DWORD PTR _i$236060[ebp]
	add	edx, 1
	mov	DWORD PTR _i$236060[ebp], edx
$LN7@Init:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$236060[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN9@Init
	jmp	SHORT $LN6@Init
$LN9@Init:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 3122 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Init@CvCityReligions@@QAEXPAVCvCity@@@Z ENDP		; CvCityReligions::Init
_TEXT	ENDS
PUBLIC	?Uninit@CvCityReligions@@QAEXXZ			; CvCityReligions::Uninit
; Function compile flags: /Odtp
;	COMDAT ?Uninit@CvCityReligions@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Uninit@CvCityReligions@@QAEXXZ PROC			; CvCityReligions::Uninit, COMDAT
; _this$ = ecx

; 3126 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 3127 : 
; 3128 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Uninit@CvCityReligions@@QAEXXZ ENDP			; CvCityReligions::Uninit
_TEXT	ENDS
PUBLIC	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back
PUBLIC	?Copy@CvCityReligions@@QAEXPAV1@@Z		; CvCityReligions::Copy
; Function compile flags: /Odtp
;	COMDAT ?Copy@CvCityReligions@@QAEXPAV1@@Z
_TEXT	SEGMENT
_this$ = -60						; size = 4
$T236098 = -16						; size = 4
$T236091 = -9						; size = 1
_i$236082 = -8						; size = 4
_religionIt$ = -4					; size = 4
_pOldCity$ = 8						; size = 4
?Copy@CvCityReligions@@QAEXPAV1@@Z PROC			; CvCityReligions::Copy, COMDAT
; _this$ = ecx

; 3132 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 3133 : 	m_ReligionStatus.clear();

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN12@Copy
	mov	DWORD PTR _i$236082[ebp], 0
	jmp	SHORT $LN10@Copy
$LN9@Copy:
	mov	ecx, DWORD PTR _i$236082[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$236082[ebp], ecx
$LN10@Copy:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$236082[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jae	SHORT $LN12@Copy
	jmp	SHORT $LN9@Copy
$LN12@Copy:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 3134 : 
; 3135 : 	SetPaidAdoptionBonus(pOldCity->HasPaidAdoptionBonus());

	mov	edx, DWORD PTR _pOldCity$[ebp]
	mov	al, BYTE PTR [edx+420]
	mov	BYTE PTR $T236091[ebp], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR $T236091[ebp]
	mov	BYTE PTR [ecx+420], dl

; 3136 : 	SetReligiousPressureModifier(pOldCity->GetReligiousPressureModifier());

	mov	eax, DWORD PTR _pOldCity$[ebp]
	mov	ecx, DWORD PTR [eax+424]
	mov	DWORD PTR $T236098[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T236098[ebp]
	mov	DWORD PTR [edx+424], eax

; 3137 : 
; 3138 : 	ReligionInCityList::iterator religionIt;
; 3139 : 	for(religionIt = pOldCity->m_ReligionStatus.begin(); religionIt != pOldCity->m_ReligionStatus.end(); ++religionIt)

	mov	ecx, DWORD PTR _pOldCity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _religionIt$[ebp], edx
	jmp	SHORT $LN24@Copy
$LN2@Copy:
	mov	eax, DWORD PTR _religionIt$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR _religionIt$[ebp], eax
$LN24@Copy:
	mov	ecx, DWORD PTR _pOldCity$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 24					; 00000018H
	mov	eax, DWORD PTR _pOldCity$[ebp]
	add	edx, DWORD PTR [eax]
	cmp	DWORD PTR _religionIt$[ebp], edx
	je	SHORT $LN4@Copy

; 3140 : 	{
; 3141 : 		m_ReligionStatus.push_back(*religionIt);

	mov	ecx, DWORD PTR _religionIt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back
	jmp	SHORT $LN2@Copy
$LN4@Copy:

; 3142 : 	}
; 3143 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Copy@CvCityReligions@@QAEXPAV1@@Z ENDP			; CvCityReligions::Copy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_religionIt$ = -4					; size = 4
_eReligion$ = 8						; size = 4
?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z PROC ; CvCityReligions::GetNumFollowers, COMDAT
; _this$ = ecx

; 3152 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 3153 : 	ReligionInCityList::iterator religionIt;
; 3154 : #endif
; 3155 : 
; 3156 : 	// Find the religion in the list
; 3157 : 	for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _religionIt$[ebp], ecx
	jmp	SHORT $LN9@GetNumFoll@2
$LN3@GetNumFoll@2:
	mov	edx, DWORD PTR _religionIt$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _religionIt$[ebp], edx
$LN9@GetNumFoll@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _religionIt$[ebp], ecx
	je	SHORT $LN2@GetNumFoll@2

; 3158 : 	{
; 3159 : 		if(religionIt->m_eReligion == eReligion)

	mov	eax, DWORD PTR _religionIt$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN1@GetNumFoll@2

; 3160 : 		{
; 3161 : 			return religionIt->m_iFollowers;

	mov	edx, DWORD PTR _religionIt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	jmp	SHORT $LN5@GetNumFoll@2
$LN1@GetNumFoll@2:

; 3162 : 		}
; 3163 : 	}

	jmp	SHORT $LN3@GetNumFoll@2
$LN2@GetNumFoll@2:

; 3164 : 
; 3165 : 	return 0;

	xor	eax, eax
$LN5@GetNumFoll@2:

; 3166 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ENDP ; CvCityReligions::GetNumFollowers
_TEXT	ENDS
PUBLIC	?GetNumSimulatedFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumSimulatedFollowers
; Function compile flags: /Odtp
;	COMDAT ?GetNumSimulatedFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T236167 = -8						; size = 4
_religionIt$ = -4					; size = 4
_eReligion$ = 8						; size = 4
?GetNumSimulatedFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z PROC ; CvCityReligions::GetNumSimulatedFollowers, COMDAT
; _this$ = ecx

; 3175 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 3176 : 	ReligionInCityList::iterator religionIt;
; 3177 : #endif
; 3178 : 
; 3179 : 	// Find the religion in the list
; 3180 : 	for(religionIt = m_SimulatedStatus.begin(); religionIt != m_SimulatedStatus.end(); ++religionIt)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	mov	DWORD PTR _religionIt$[ebp], ecx
	jmp	SHORT $LN4@GetNumSimu
$LN3@GetNumSimu:
	mov	edx, DWORD PTR _religionIt$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _religionIt$[ebp], edx
$LN4@GetNumSimu:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 208				; 000000d0H
	mov	DWORD PTR $T236167[ebp], eax
	mov	ecx, DWORD PTR $T236167[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 24					; 00000018H
	mov	eax, DWORD PTR $T236167[ebp]
	add	edx, DWORD PTR [eax]
	cmp	DWORD PTR _religionIt$[ebp], edx
	je	SHORT $LN2@GetNumSimu

; 3181 : 	{
; 3182 : 		if(religionIt->m_eReligion == eReligion)

	mov	ecx, DWORD PTR _religionIt$[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN1@GetNumSimu

; 3183 : 		{
; 3184 : 			return religionIt->m_iFollowers;

	mov	eax, DWORD PTR _religionIt$[ebp]
	mov	eax, DWORD PTR [eax+8]
	jmp	SHORT $LN5@GetNumSimu
$LN1@GetNumSimu:

; 3185 : 		}
; 3186 : 	}

	jmp	SHORT $LN3@GetNumSimu
$LN2@GetNumSimu:

; 3187 : 
; 3188 : 	return 0;

	xor	eax, eax
$LN5@GetNumSimu:

; 3189 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumSimulatedFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ENDP ; CvCityReligions::GetNumSimulatedFollowers
_TEXT	ENDS
PUBLIC	?GetNumReligionsWithFollowers@CvCityReligions@@QAEHXZ ; CvCityReligions::GetNumReligionsWithFollowers
; Function compile flags: /Odtp
;	COMDAT ?GetNumReligionsWithFollowers@CvCityReligions@@QAEHXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_iRtnValue$ = -8					; size = 4
_religionIt$ = -4					; size = 4
?GetNumReligionsWithFollowers@CvCityReligions@@QAEHXZ PROC ; CvCityReligions::GetNumReligionsWithFollowers, COMDAT
; _this$ = ecx

; 3197 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 3198 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 3199 : #ifdef AUI_CONSTIFY
; 3200 : 	ReligionInCityList::const_iterator religionIt;
; 3201 : #else
; 3202 : 	ReligionInCityList::iterator religionIt;
; 3203 : #endif
; 3204 : 
; 3205 : 	// Find the religion in the list
; 3206 : 	for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _religionIt$[ebp], ecx
	jmp	SHORT $LN9@GetNumReli@3
$LN3@GetNumReli@3:
	mov	edx, DWORD PTR _religionIt$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _religionIt$[ebp], edx
$LN9@GetNumReli@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _religionIt$[ebp], ecx
	je	SHORT $LN2@GetNumReli@3

; 3207 : 	{
; 3208 : 		if(religionIt->m_iFollowers > 0 && religionIt->m_eReligion > RELIGION_PANTHEON)

	mov	eax, DWORD PTR _religionIt$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jle	SHORT $LN1@GetNumReli@3
	mov	ecx, DWORD PTR _religionIt$[ebp]
	cmp	DWORD PTR [ecx], 0
	jle	SHORT $LN1@GetNumReli@3

; 3209 : 		{
; 3210 : 			iRtnValue++;

	mov	edx, DWORD PTR _iRtnValue$[ebp]
	add	edx, 1
	mov	DWORD PTR _iRtnValue$[ebp], edx
$LN1@GetNumReli@3:

; 3211 : 		}
; 3212 : 	}

	jmp	SHORT $LN3@GetNumReli@3
$LN2@GetNumReli@3:

; 3213 : 
; 3214 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]

; 3215 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumReligionsWithFollowers@CvCityReligions@@QAEHXZ ENDP ; CvCityReligions::GetNumReligionsWithFollowers
_TEXT	ENDS
PUBLIC	?IsReligionInCity@CvCityReligions@@QAE_NXZ	; CvCityReligions::IsReligionInCity
; Function compile flags: /Odtp
;	COMDAT ?IsReligionInCity@CvCityReligions@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_religionIt$ = -4					; size = 4
?IsReligionInCity@CvCityReligions@@QAE_NXZ PROC		; CvCityReligions::IsReligionInCity, COMDAT
; _this$ = ecx

; 3224 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 3225 : 	ReligionInCityList::iterator religionIt;
; 3226 : #endif
; 3227 : 
; 3228 : 	for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _religionIt$[ebp], ecx
	jmp	SHORT $LN9@IsReligion
$LN3@IsReligion:
	mov	edx, DWORD PTR _religionIt$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _religionIt$[ebp], edx
$LN9@IsReligion:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _religionIt$[ebp], ecx
	je	SHORT $LN2@IsReligion

; 3229 : 	{
; 3230 : 		if(religionIt->m_eReligion != NO_RELIGION)

	mov	eax, DWORD PTR _religionIt$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN1@IsReligion

; 3231 : 		{
; 3232 : 			return true;

	mov	al, 1
	jmp	SHORT $LN5@IsReligion
$LN1@IsReligion:

; 3233 : 		}
; 3234 : 	}

	jmp	SHORT $LN3@IsReligion
$LN2@IsReligion:

; 3235 : 
; 3236 : 	return false;

	xor	al, al
$LN5@IsReligion:

; 3237 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsReligionInCity@CvCityReligions@@QAE_NXZ ENDP		; CvCityReligions::IsReligionInCity
_TEXT	ENDS
PUBLIC	?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsHolyCityForReligion
; Function compile flags: /Odtp
;	COMDAT ?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_religionIt$ = -4					; size = 4
_eReligion$ = 8						; size = 4
?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z PROC ; CvCityReligions::IsHolyCityForReligion, COMDAT
; _this$ = ecx

; 3246 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 3247 : 	ReligionInCityList::iterator religionIt;
; 3248 : #endif
; 3249 : 
; 3250 : 	// Find the religion in the list
; 3251 : 	for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _religionIt$[ebp], ecx
	jmp	SHORT $LN9@IsHolyCity
$LN3@IsHolyCity:
	mov	edx, DWORD PTR _religionIt$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _religionIt$[ebp], edx
$LN9@IsHolyCity:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _religionIt$[ebp], ecx
	je	SHORT $LN2@IsHolyCity

; 3252 : 	{
; 3253 : 		if(religionIt->m_eReligion == eReligion)

	mov	eax, DWORD PTR _religionIt$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN1@IsHolyCity

; 3254 : 		{
; 3255 : 			return religionIt->m_bFoundedHere;

	mov	edx, DWORD PTR _religionIt$[ebp]
	mov	al, BYTE PTR [edx+4]
	jmp	SHORT $LN5@IsHolyCity
$LN1@IsHolyCity:

; 3256 : 		}
; 3257 : 	}

	jmp	SHORT $LN3@IsHolyCity
$LN2@IsHolyCity:

; 3258 : 
; 3259 : 	return false;

	xor	al, al
$LN5@IsHolyCity:

; 3260 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ENDP ; CvCityReligions::IsHolyCityForReligion
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsHolyCityAnyReligion@CvCityReligions@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_religionIt$ = -4					; size = 4
?IsHolyCityAnyReligion@CvCityReligions@@QAE_NXZ PROC	; CvCityReligions::IsHolyCityAnyReligion, COMDAT
; _this$ = ecx

; 3269 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 3270 : 	ReligionInCityList::iterator religionIt;
; 3271 : #endif
; 3272 : 	for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _religionIt$[ebp], ecx
	jmp	SHORT $LN9@IsHolyCity@2
$LN3@IsHolyCity@2:
	mov	edx, DWORD PTR _religionIt$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _religionIt$[ebp], edx
$LN9@IsHolyCity@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _religionIt$[ebp], ecx
	je	SHORT $LN2@IsHolyCity@2

; 3273 : 	{
; 3274 : 		if(religionIt->m_bFoundedHere)

	mov	eax, DWORD PTR _religionIt$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN1@IsHolyCity@2

; 3275 : 		{
; 3276 : 			return true;

	mov	al, 1
	jmp	SHORT $LN5@IsHolyCity@2
$LN1@IsHolyCity@2:

; 3277 : 		}
; 3278 : 	}

	jmp	SHORT $LN3@IsHolyCity@2
$LN2@IsHolyCity@2:

; 3279 : 
; 3280 : 	return false;

	xor	al, al
$LN5@IsHolyCity@2:

; 3281 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsHolyCityAnyReligion@CvCityReligions@@QAE_NXZ ENDP	; CvCityReligions::IsHolyCityAnyReligion
_TEXT	ENDS
PUBLIC	?IsReligionHereOtherThan@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsReligionHereOtherThan
; Function compile flags: /Odtp
;	COMDAT ?IsReligionHereOtherThan@CvCityReligions@@QAE_NW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_it$ = -4						; size = 4
_eReligion$ = 8						; size = 4
?IsReligionHereOtherThan@CvCityReligions@@QAE_NW4ReligionTypes@@@Z PROC ; CvCityReligions::IsReligionHereOtherThan, COMDAT
; _this$ = ecx

; 3290 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 3291 : 	ReligionInCityList::iterator it;
; 3292 : #endif
; 3293 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3294 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 3295 : #else
; 3296 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN9@IsReligion@2
$LN3@IsReligion@2:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], edx
$LN9@IsReligion@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN2@IsReligion@2

; 3297 : #endif
; 3298 : 	{
; 3299 : 		if(it->m_eReligion != NO_RELIGION && it->m_eReligion != eReligion)

	mov	eax, DWORD PTR _it$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN1@IsReligion@2
	mov	ecx, DWORD PTR _it$[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _eReligion$[ebp]
	je	SHORT $LN1@IsReligion@2

; 3300 : 		{
; 3301 : 			return true;

	mov	al, 1
	jmp	SHORT $LN5@IsReligion@2
$LN1@IsReligion@2:

; 3302 : 		}
; 3303 : 	}

	jmp	SHORT $LN3@IsReligion@2
$LN2@IsReligion@2:

; 3304 : 	return false;

	xor	al, al
$LN5@IsReligion@2:

; 3305 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsReligionHereOtherThan@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ENDP ; CvCityReligions::IsReligionHereOtherThan
_TEXT	ENDS
PUBLIC	?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z ; plotDirection
PUBLIC	?IsDefendedAgainstSpread@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsDefendedAgainstSpread
EXTRN	?IsProhibitsSpread@CvUnitEntry@@QBE_NXZ:PROC	; CvUnitEntry::IsProhibitsSpread
EXTRN	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ:PROC	; CvUnit::getUnitType
EXTRN	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z:PROC	; CvPlot::getUnitByIndex
EXTRN	?getNumUnits@CvPlot@@QBEHXZ:PROC		; CvPlot::getNumUnits
EXTRN	?plot@CvCity@@QBEPAVCvPlot@@XZ:PROC		; CvCity::plot
; Function compile flags: /Odtp
;	COMDAT ?IsDefendedAgainstSpread@CvCityReligions@@QAE_NW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -156						; size = 4
$T236459 = -152						; size = 4
$T236455 = -148						; size = 4
$T236451 = -144						; size = 4
$T236442 = -140						; size = 4
$T236253 = -56						; size = 4
$T236244 = -52						; size = 4
$T236235 = -48						; size = 4
$T236231 = -44						; size = 4
$T236227 = -40						; size = 4
$T236218 = -36						; size = 4
_pkEntry$225672 = -32					; size = 4
_iUnitLoop$225668 = -28					; size = 4
_iDirectionLoop$225662 = -24				; size = 4
_pkEntry$225658 = -20					; size = 4
_iUnitLoop$225654 = -16					; size = 4
_pCityPlot$ = -12					; size = 4
_pLoopUnit$ = -8					; size = 4
_pAdjacentPlot$ = -4					; size = 4
_eReligion$ = 8						; size = 4
?IsDefendedAgainstSpread@CvCityReligions@@QAE_NW4ReligionTypes@@@Z PROC ; CvCityReligions::IsDefendedAgainstSpread, COMDAT
; _this$ = ecx

; 3313 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 156				; 0000009cH
	mov	DWORD PTR _this$[ebp], ecx

; 3314 : 	CvUnit* pLoopUnit;
; 3315 : 
; 3316 : 	CvPlot* pCityPlot = m_pCity->plot();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	DWORD PTR _pCityPlot$[ebp], eax

; 3317 : 	if(pCityPlot)

	cmp	DWORD PTR _pCityPlot$[ebp], 0
	je	$LN15@IsDefended

; 3318 : 	{
; 3319 : #ifdef AUI_WARNING_FIXES
; 3320 : 		for (uint iUnitLoop = 0; iUnitLoop < pCityPlot->getNumUnits(); iUnitLoop++)
; 3321 : #else
; 3322 : 		for(int iUnitLoop = 0; iUnitLoop < pCityPlot->getNumUnits(); iUnitLoop++)

	mov	DWORD PTR _iUnitLoop$225654[ebp], 0
	jmp	SHORT $LN14@IsDefended
$LN13@IsDefended:
	mov	ecx, DWORD PTR _iUnitLoop$225654[ebp]
	add	ecx, 1
	mov	DWORD PTR _iUnitLoop$225654[ebp], ecx
$LN14@IsDefended:
	mov	ecx, DWORD PTR _pCityPlot$[ebp]
	call	?getNumUnits@CvPlot@@QBEHXZ		; CvPlot::getNumUnits
	cmp	DWORD PTR _iUnitLoop$225654[ebp], eax
	jge	$LN15@IsDefended

; 3323 : #endif
; 3324 : 		{
; 3325 : 			pLoopUnit = pCityPlot->getUnitByIndex(iUnitLoop);

	mov	edx, DWORD PTR _iUnitLoop$225654[ebp]
	push	edx
	mov	ecx, DWORD PTR _pCityPlot$[ebp]
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex
	mov	DWORD PTR _pLoopUnit$[ebp], eax

; 3326 : 			CvUnitEntry* pkEntry = GC.getUnitInfo(pLoopUnit->getUnitType());

	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR _pkEntry$225658[ebp], eax

; 3327 : 			if(pkEntry && pkEntry->IsProhibitsSpread())

	cmp	DWORD PTR _pkEntry$225658[ebp], 0
	je	SHORT $LN11@IsDefended
	mov	ecx, DWORD PTR _pkEntry$225658[ebp]
	call	?IsProhibitsSpread@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsProhibitsSpread
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN11@IsDefended

; 3328 : 			{
; 3329 : 				if(pLoopUnit->getOwner() == m_pCity->getOwner() && pLoopUnit->GetReligionData()->GetReligion() != eReligion)

	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T236218[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T236227[ebp], edx
	mov	eax, DWORD PTR $T236218[ebp]
	cmp	eax, DWORD PTR $T236227[ebp]
	jne	SHORT $LN11@IsDefended
	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	mov	edx, DWORD PTR [ecx+1888]
	mov	DWORD PTR $T236231[ebp], edx
	mov	eax, DWORD PTR $T236231[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T236235[ebp], ecx
	mov	edx, DWORD PTR $T236235[ebp]
	cmp	edx, DWORD PTR _eReligion$[ebp]
	je	SHORT $LN11@IsDefended

; 3330 : 				{
; 3331 : 					return true;

	mov	al, 1
	jmp	$LN16@IsDefended
$LN11@IsDefended:

; 3332 : 				}
; 3333 : 			}
; 3334 : 		}

	jmp	$LN13@IsDefended
$LN15@IsDefended:

; 3335 : 	}
; 3336 : 
; 3337 : 	CvPlot* pAdjacentPlot;
; 3338 : 	for(int iDirectionLoop = 0; iDirectionLoop < NUM_DIRECTION_TYPES; iDirectionLoop++)

	mov	DWORD PTR _iDirectionLoop$225662[ebp], 0
	jmp	SHORT $LN9@IsDefended
$LN8@IsDefended:
	mov	eax, DWORD PTR _iDirectionLoop$225662[ebp]
	add	eax, 1
	mov	DWORD PTR _iDirectionLoop$225662[ebp], eax
$LN9@IsDefended:
	cmp	DWORD PTR _iDirectionLoop$225662[ebp], 6
	jge	$LN7@IsDefended

; 3339 : 	{
; 3340 : 		pAdjacentPlot = plotDirection(m_pCity->getX(), m_pCity->getY(), ((DirectionTypes)iDirectionLoop));

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+416]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T236244[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+416]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T236253[ebp], eax
	mov	ecx, DWORD PTR _iDirectionLoop$225662[ebp]
	push	ecx
	mov	edx, DWORD PTR $T236244[ebp]
	push	edx
	mov	eax, DWORD PTR $T236253[ebp]
	push	eax
	call	?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z ; plotDirection
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pAdjacentPlot$[ebp], eax

; 3341 : 
; 3342 : 		if(pAdjacentPlot != NULL)

	cmp	DWORD PTR _pAdjacentPlot$[ebp], 0
	je	$LN6@IsDefended

; 3343 : 		{
; 3344 : #ifdef AUI_WARNING_FIXES
; 3345 : 			for (uint iUnitLoop = 0; iUnitLoop < pAdjacentPlot->getNumUnits(); iUnitLoop++)
; 3346 : #else
; 3347 : 			for(int iUnitLoop = 0; iUnitLoop < pAdjacentPlot->getNumUnits(); iUnitLoop++)

	mov	DWORD PTR _iUnitLoop$225668[ebp], 0
	jmp	SHORT $LN5@IsDefended
$LN4@IsDefended:
	mov	ecx, DWORD PTR _iUnitLoop$225668[ebp]
	add	ecx, 1
	mov	DWORD PTR _iUnitLoop$225668[ebp], ecx
$LN5@IsDefended:
	mov	ecx, DWORD PTR _pAdjacentPlot$[ebp]
	call	?getNumUnits@CvPlot@@QBEHXZ		; CvPlot::getNumUnits
	cmp	DWORD PTR _iUnitLoop$225668[ebp], eax
	jge	$LN6@IsDefended

; 3348 : #endif
; 3349 : 			{
; 3350 : 				pLoopUnit = pAdjacentPlot->getUnitByIndex(iUnitLoop);

	mov	edx, DWORD PTR _iUnitLoop$225668[ebp]
	push	edx
	mov	ecx, DWORD PTR _pAdjacentPlot$[ebp]
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex
	mov	DWORD PTR _pLoopUnit$[ebp], eax

; 3351 : #ifdef AUI_CONSTIFY
; 3352 : 				if (pLoopUnit->getUnitInfo().IsProhibitsSpread())
; 3353 : #else
; 3354 : 				CvUnitEntry* pkEntry = GC.getUnitInfo(pLoopUnit->getUnitType());

	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR _pkEntry$225672[ebp], eax

; 3355 : 				if(pkEntry && pkEntry->IsProhibitsSpread())

	cmp	DWORD PTR _pkEntry$225672[ebp], 0
	je	SHORT $LN2@IsDefended
	mov	ecx, DWORD PTR _pkEntry$225672[ebp]
	call	?IsProhibitsSpread@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsProhibitsSpread
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@IsDefended

; 3356 : #endif
; 3357 : 				{
; 3358 : 					if(pLoopUnit->getOwner() == m_pCity->getOwner() && pLoopUnit->GetReligionData()->GetReligion() != eReligion)

	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T236442[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T236451[ebp], edx
	mov	eax, DWORD PTR $T236442[ebp]
	cmp	eax, DWORD PTR $T236451[ebp]
	jne	SHORT $LN2@IsDefended
	mov	ecx, DWORD PTR _pLoopUnit$[ebp]
	mov	edx, DWORD PTR [ecx+1888]
	mov	DWORD PTR $T236455[ebp], edx
	mov	eax, DWORD PTR $T236455[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T236459[ebp], ecx
	mov	edx, DWORD PTR $T236459[ebp]
	cmp	edx, DWORD PTR _eReligion$[ebp]
	je	SHORT $LN2@IsDefended

; 3359 : 					{
; 3360 : 						return true;

	mov	al, 1
	jmp	SHORT $LN16@IsDefended
$LN2@IsDefended:

; 3361 : 					}
; 3362 : 				}
; 3363 : 			}

	jmp	$LN4@IsDefended
$LN6@IsDefended:

; 3364 : 		}
; 3365 : 	}

	jmp	$LN8@IsDefended
$LN7@IsDefended:

; 3366 : 
; 3367 : 	return false;

	xor	al, al
$LN16@IsDefended:

; 3368 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsDefendedAgainstSpread@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ENDP ; CvCityReligions::IsDefendedAgainstSpread
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
_TEXT	ENDS
;	COMDAT ?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z
_TEXT	SEGMENT
tv198 = -100						; size = 4
tv213 = -96						; size = 4
tv168 = -92						; size = 4
tv151 = -88						; size = 4
tv155 = -84						; size = 4
$T236666 = -80						; size = 4
$T236621 = -76						; size = 4
$T236608 = -72						; size = 4
$T236604 = -68						; size = 4
$T236590 = -64						; size = 4
$T236586 = -57						; size = 1
$T236575 = -56						; size = 4
$T236571 = -49						; size = 1
_iMapY$236665 = -48					; size = 4
_iMapX$236664 = -44					; size = 4
$T236564 = -40						; size = 4
$T236540 = -36						; size = 4
$T236503 = -32						; size = 4
$T236491 = -28						; size = 4
$T236487 = -21						; size = 1
$T236476 = -20						; size = 4
$T236472 = -13						; size = 1
_iMapY$236512 = -12					; size = 4
_iMapX$236511 = -8					; size = 4
$T236465 = -4						; size = 4
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
_eDirection$ = 16					; size = 4
?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z PROC ; plotDirection, COMDAT

; 193  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 100				; 00000064H

; 194  : 	if(eDirection == NO_DIRECTION)

	cmp	DWORD PTR _eDirection$[ebp], -1
	jne	$LN2@plotDirect

; 195  : 	{
; 196  : 		return GC.getMap().plot(iX, iY);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T236465[ebp], eax
	cmp	DWORD PTR _iX$[ebp], -2147483647	; 80000001H
	je	SHORT $LN7@plotDirect
	cmp	DWORD PTR _iY$[ebp], -2147483647	; 80000001H
	jne	SHORT $LN8@plotDirect
$LN7@plotDirect:
	mov	DWORD PTR $T236540[ebp], 0
	jmp	$LN9@plotDirect
$LN8@plotDirect:
	mov	ecx, DWORD PTR $T236465[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T236472[ebp], dl
	mov	eax, DWORD PTR $T236465[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T236476[ebp], ecx
	movzx	edx, BYTE PTR $T236472[ebp]
	test	edx, edx
	je	SHORT $LN20@plotDirect
	cmp	DWORD PTR _iX$[ebp], 0
	jge	SHORT $LN19@plotDirect
	mov	eax, DWORD PTR _iX$[ebp]
	cdq
	idiv	DWORD PTR $T236476[ebp]
	add	edx, DWORD PTR $T236476[ebp]
	mov	DWORD PTR _iMapX$236511[ebp], edx
	jmp	SHORT $LN21@plotDirect
	jmp	SHORT $LN20@plotDirect
$LN19@plotDirect:
	mov	eax, DWORD PTR _iX$[ebp]
	cmp	eax, DWORD PTR $T236476[ebp]
	jl	SHORT $LN20@plotDirect
	mov	eax, DWORD PTR _iX$[ebp]
	cdq
	idiv	DWORD PTR $T236476[ebp]
	mov	DWORD PTR _iMapX$236511[ebp], edx
	jmp	SHORT $LN21@plotDirect
$LN20@plotDirect:
	mov	ecx, DWORD PTR _iX$[ebp]
	mov	DWORD PTR _iMapX$236511[ebp], ecx
$LN21@plotDirect:
	mov	edx, DWORD PTR $T236465[ebp]
	mov	al, BYTE PTR [edx+4057]
	mov	BYTE PTR $T236487[ebp], al
	mov	ecx, DWORD PTR $T236465[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T236491[ebp], edx
	movzx	eax, BYTE PTR $T236487[ebp]
	test	eax, eax
	je	SHORT $LN30@plotDirect
	cmp	DWORD PTR _iY$[ebp], 0
	jge	SHORT $LN29@plotDirect
	mov	eax, DWORD PTR _iY$[ebp]
	cdq
	idiv	DWORD PTR $T236491[ebp]
	add	edx, DWORD PTR $T236491[ebp]
	mov	DWORD PTR _iMapY$236512[ebp], edx
	jmp	SHORT $LN31@plotDirect
	jmp	SHORT $LN30@plotDirect
$LN29@plotDirect:
	mov	ecx, DWORD PTR _iY$[ebp]
	cmp	ecx, DWORD PTR $T236491[ebp]
	jl	SHORT $LN30@plotDirect
	mov	eax, DWORD PTR _iY$[ebp]
	cdq
	idiv	DWORD PTR $T236491[ebp]
	mov	DWORD PTR _iMapY$236512[ebp], edx
	jmp	SHORT $LN31@plotDirect
$LN30@plotDirect:
	mov	edx, DWORD PTR _iY$[ebp]
	mov	DWORD PTR _iMapY$236512[ebp], edx
$LN31@plotDirect:
	mov	eax, DWORD PTR _iMapY$236512[ebp]
	push	eax
	mov	ecx, DWORD PTR _iMapX$236511[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T236465[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN11@plotDirect
	mov	edx, DWORD PTR $T236465[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T236503[ebp], eax
	mov	ecx, DWORD PTR _iMapY$236512[ebp]
	imul	ecx, DWORD PTR $T236503[ebp]
	add	ecx, DWORD PTR _iMapX$236511[ebp]
	imul	ecx, 484				; 000001e4H
	mov	edx, DWORD PTR $T236465[ebp]
	add	ecx, DWORD PTR [edx+4068]
	mov	DWORD PTR tv155[ebp], ecx
	jmp	SHORT $LN12@plotDirect
$LN11@plotDirect:
	mov	DWORD PTR tv155[ebp], 0
$LN12@plotDirect:
	mov	eax, DWORD PTR tv155[ebp]
	mov	DWORD PTR $T236540[ebp], eax
$LN9@plotDirect:
	mov	eax, DWORD PTR $T236540[ebp]
	jmp	$LN3@plotDirect

; 197  : 	}
; 198  : 	else

	jmp	$LN3@plotDirect
$LN2@plotDirect:

; 199  : 	{
; 200  : 		// convert to hex-space coordinates - the coordinate system axes are E and NE (not orthogonal)
; 201  : 		iX = xToHexspaceX(iX , iY);

	cmp	DWORD PTR _iY$[ebp], 0
	jl	SHORT $LN39@plotDirect
	mov	ecx, DWORD PTR _iY$[ebp]
	sar	ecx, 1
	mov	DWORD PTR tv151[ebp], ecx
	jmp	SHORT $LN37@plotDirect
$LN39@plotDirect:
	mov	eax, DWORD PTR _iY$[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR tv151[ebp], eax
$LN37@plotDirect:
	mov	edx, DWORD PTR _iX$[ebp]
	sub	edx, DWORD PTR tv151[ebp]
	mov	DWORD PTR _iX$[ebp], edx

; 202  : 		iX += GC.getPlotDirectionX()[eDirection];

	mov	eax, DWORD PTR _eDirection$[ebp]
	mov	ecx, DWORD PTR _iX$[ebp]
	add	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A[eax*4+112]
	mov	DWORD PTR _iX$[ebp], ecx

; 203  : 		iY += GC.getPlotDirectionY()[eDirection];

	mov	edx, DWORD PTR _eDirection$[ebp]
	mov	eax, DWORD PTR _iY$[ebp]
	add	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A[edx*4+136]
	mov	DWORD PTR _iY$[ebp], eax

; 204  : 
; 205  : 		// convert from hex-space coordinates to the storage array
; 206  : 		iX = hexspaceXToX(iX, iY);

	js	SHORT $LN47@plotDirect
	mov	ecx, DWORD PTR _iY$[ebp]
	sar	ecx, 1
	mov	DWORD PTR tv168[ebp], ecx
	jmp	SHORT $LN45@plotDirect
$LN47@plotDirect:
	mov	eax, DWORD PTR _iY$[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR tv168[ebp], eax
$LN45@plotDirect:
	mov	edx, DWORD PTR _iX$[ebp]
	add	edx, DWORD PTR tv168[ebp]
	mov	DWORD PTR _iX$[ebp], edx

; 207  : 
; 208  : 		return GC.getMap().plot(iX, iY);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T236564[ebp], eax
	cmp	DWORD PTR _iX$[ebp], -2147483647	; 80000001H
	je	SHORT $LN51@plotDirect
	cmp	DWORD PTR _iY$[ebp], -2147483647	; 80000001H
	jne	SHORT $LN52@plotDirect
$LN51@plotDirect:
	mov	DWORD PTR $T236666[ebp], 0
	jmp	$LN53@plotDirect
$LN52@plotDirect:
	mov	ecx, DWORD PTR $T236564[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T236571[ebp], dl
	mov	eax, DWORD PTR $T236564[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T236575[ebp], ecx
	movzx	edx, BYTE PTR $T236571[ebp]
	test	edx, edx
	je	SHORT $LN64@plotDirect
	cmp	DWORD PTR _iX$[ebp], 0
	jge	SHORT $LN63@plotDirect
	mov	eax, DWORD PTR _iX$[ebp]
	cdq
	idiv	DWORD PTR $T236575[ebp]
	add	edx, DWORD PTR $T236575[ebp]
	mov	DWORD PTR _iMapX$236664[ebp], edx
	jmp	SHORT $LN65@plotDirect
	jmp	SHORT $LN64@plotDirect
$LN63@plotDirect:
	mov	eax, DWORD PTR _iX$[ebp]
	cmp	eax, DWORD PTR $T236575[ebp]
	jl	SHORT $LN64@plotDirect
	mov	eax, DWORD PTR _iX$[ebp]
	cdq
	idiv	DWORD PTR $T236575[ebp]
	mov	DWORD PTR _iMapX$236664[ebp], edx
	jmp	SHORT $LN65@plotDirect
$LN64@plotDirect:
	mov	ecx, DWORD PTR _iX$[ebp]
	mov	DWORD PTR _iMapX$236664[ebp], ecx
$LN65@plotDirect:
	mov	edx, DWORD PTR $T236564[ebp]
	mov	al, BYTE PTR [edx+4057]
	mov	BYTE PTR $T236586[ebp], al
	mov	ecx, DWORD PTR $T236564[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T236590[ebp], edx
	movzx	eax, BYTE PTR $T236586[ebp]
	test	eax, eax
	je	SHORT $LN74@plotDirect
	cmp	DWORD PTR _iY$[ebp], 0
	jge	SHORT $LN73@plotDirect
	mov	eax, DWORD PTR _iY$[ebp]
	cdq
	idiv	DWORD PTR $T236590[ebp]
	add	edx, DWORD PTR $T236590[ebp]
	mov	DWORD PTR _iMapY$236665[ebp], edx
	jmp	SHORT $LN75@plotDirect
	jmp	SHORT $LN74@plotDirect
$LN73@plotDirect:
	mov	ecx, DWORD PTR _iY$[ebp]
	cmp	ecx, DWORD PTR $T236590[ebp]
	jl	SHORT $LN74@plotDirect
	mov	eax, DWORD PTR _iY$[ebp]
	cdq
	idiv	DWORD PTR $T236590[ebp]
	mov	DWORD PTR _iMapY$236665[ebp], edx
	jmp	SHORT $LN75@plotDirect
$LN74@plotDirect:
	mov	edx, DWORD PTR _iY$[ebp]
	mov	DWORD PTR _iMapY$236665[ebp], edx
$LN75@plotDirect:
	cmp	DWORD PTR _iMapX$236664[ebp], 0
	jl	SHORT $LN79@plotDirect
	mov	eax, DWORD PTR $T236564[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T236604[ebp], ecx
	mov	edx, DWORD PTR _iMapX$236664[ebp]
	cmp	edx, DWORD PTR $T236604[ebp]
	jge	SHORT $LN79@plotDirect
	cmp	DWORD PTR _iMapY$236665[ebp], 0
	jl	SHORT $LN79@plotDirect
	mov	eax, DWORD PTR $T236564[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T236608[ebp], ecx
	mov	edx, DWORD PTR _iMapY$236665[ebp]
	cmp	edx, DWORD PTR $T236608[ebp]
	jge	SHORT $LN79@plotDirect
	mov	DWORD PTR tv213[ebp], 1
	jmp	SHORT $LN77@plotDirect
$LN79@plotDirect:
	mov	DWORD PTR tv213[ebp], 0
$LN77@plotDirect:
	cmp	DWORD PTR tv213[ebp], 0
	je	SHORT $LN55@plotDirect
	mov	eax, DWORD PTR $T236564[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T236621[ebp], ecx
	mov	edx, DWORD PTR _iMapY$236665[ebp]
	imul	edx, DWORD PTR $T236621[ebp]
	add	edx, DWORD PTR _iMapX$236664[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T236564[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv198[ebp], edx
	jmp	SHORT $LN56@plotDirect
$LN55@plotDirect:
	mov	DWORD PTR tv198[ebp], 0
$LN56@plotDirect:
	mov	ecx, DWORD PTR tv198[ebp]
	mov	DWORD PTR $T236666[ebp], ecx
$LN53@plotDirect:
	mov	eax, DWORD PTR $T236666[ebp]
$LN3@plotDirect:

; 209  : 	}
; 210  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z ENDP ; plotDirection
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
_TEXT	ENDS
;	COMDAT ?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
_eMostFollowers$ = -20					; size = 4
_iTotalFollowers$ = -16					; size = 4
_iMostFollowers$ = -12					; size = 4
_iMostFollowerPressure$ = -8				; size = 4
_religionIt$ = -4					; size = 4
?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ PROC ; CvCityReligions::GetReligiousMajority, COMDAT
; _this$ = ecx

; 3376 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 3377 : 	int iTotalFollowers = 0;

	mov	DWORD PTR _iTotalFollowers$[ebp], 0

; 3378 : 	int iMostFollowerPressure = 0;

	mov	DWORD PTR _iMostFollowerPressure$[ebp], 0

; 3379 : 	int iMostFollowers = -1;

	mov	DWORD PTR _iMostFollowers$[ebp], -1

; 3380 : 	ReligionTypes eMostFollowers = NO_RELIGION;

	mov	DWORD PTR _eMostFollowers$[ebp], -1

; 3381 : #ifdef AUI_CONSTIFY
; 3382 : 	ReligionInCityList::const_iterator religionIt;
; 3383 : #else
; 3384 : 	ReligionInCityList::iterator religionIt;
; 3385 : #endif
; 3386 : 
; 3387 : 	for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _religionIt$[ebp], ecx
	jmp	SHORT $LN12@GetReligio@5
$LN6@GetReligio@5:
	mov	edx, DWORD PTR _religionIt$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _religionIt$[ebp], edx
$LN12@GetReligio@5:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _religionIt$[ebp], ecx
	je	SHORT $LN5@GetReligio@5

; 3388 : 	{
; 3389 : 		iTotalFollowers += religionIt->m_iFollowers;

	mov	eax, DWORD PTR _religionIt$[ebp]
	mov	ecx, DWORD PTR _iTotalFollowers$[ebp]
	add	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _iTotalFollowers$[ebp], ecx

; 3390 : 
; 3391 : 		if(religionIt->m_iFollowers > iMostFollowers || religionIt->m_iFollowers == iMostFollowers && religionIt->m_iPressure > iMostFollowerPressure)

	mov	edx, DWORD PTR _religionIt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR _iMostFollowers$[ebp]
	jg	SHORT $LN3@GetReligio@5
	mov	ecx, DWORD PTR _religionIt$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR _iMostFollowers$[ebp]
	jne	SHORT $LN4@GetReligio@5
	mov	eax, DWORD PTR _religionIt$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _iMostFollowerPressure$[ebp]
	jle	SHORT $LN4@GetReligio@5
$LN3@GetReligio@5:

; 3392 : 		{
; 3393 : 			iMostFollowers = religionIt->m_iFollowers;

	mov	edx, DWORD PTR _religionIt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _iMostFollowers$[ebp], eax

; 3394 : 			iMostFollowerPressure = religionIt->m_iPressure;

	mov	ecx, DWORD PTR _religionIt$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _iMostFollowerPressure$[ebp], edx

; 3395 : 			eMostFollowers = religionIt->m_eReligion;

	mov	eax, DWORD PTR _religionIt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _eMostFollowers$[ebp], ecx
$LN4@GetReligio@5:

; 3396 : 		}
; 3397 : 	}

	jmp	SHORT $LN6@GetReligio@5
$LN5@GetReligio@5:

; 3398 : 
; 3399 : 	if ((iMostFollowers * 2) >= iTotalFollowers)

	mov	edx, DWORD PTR _iMostFollowers$[ebp]
	shl	edx, 1
	cmp	edx, DWORD PTR _iTotalFollowers$[ebp]
	jl	SHORT $LN2@GetReligio@5

; 3400 : 	{
; 3401 : 		return eMostFollowers;

	mov	eax, DWORD PTR _eMostFollowers$[ebp]
	jmp	SHORT $LN8@GetReligio@5

; 3402 : 	}
; 3403 : 	else

	jmp	SHORT $LN8@GetReligio@5
$LN2@GetReligio@5:

; 3404 : 	{
; 3405 : 		return NO_RELIGION;

	or	eax, -1
$LN8@GetReligio@5:

; 3406 : 	}
; 3407 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ENDP ; CvCityReligions::GetReligiousMajority
_TEXT	ENDS
PUBLIC	?GetSimulatedReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetSimulatedReligiousMajority
; Function compile flags: /Odtp
;	COMDAT ?GetSimulatedReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T236683 = -24						; size = 4
_eMostFollowers$ = -20					; size = 4
_iTotalFollowers$ = -16					; size = 4
_iMostFollowers$ = -12					; size = 4
_iMostFollowerPressure$ = -8				; size = 4
_religionIt$ = -4					; size = 4
?GetSimulatedReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ PROC ; CvCityReligions::GetSimulatedReligiousMajority, COMDAT
; _this$ = ecx

; 3415 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 3416 : 	int iTotalFollowers = 0;

	mov	DWORD PTR _iTotalFollowers$[ebp], 0

; 3417 : 	int iMostFollowerPressure = 0;

	mov	DWORD PTR _iMostFollowerPressure$[ebp], 0

; 3418 : 	int iMostFollowers = -1;

	mov	DWORD PTR _iMostFollowers$[ebp], -1

; 3419 : 	ReligionTypes eMostFollowers = NO_RELIGION;

	mov	DWORD PTR _eMostFollowers$[ebp], -1

; 3420 : #ifdef AUI_CONSTIFY
; 3421 : 	ReligionInCityList::const_iterator religionIt;
; 3422 : #else
; 3423 : 	ReligionInCityList::iterator religionIt;
; 3424 : #endif
; 3425 : 
; 3426 : 	for(religionIt = m_SimulatedStatus.begin(); religionIt != m_SimulatedStatus.end(); ++religionIt)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	mov	DWORD PTR _religionIt$[ebp], ecx
	jmp	SHORT $LN7@GetSimulat
$LN6@GetSimulat:
	mov	edx, DWORD PTR _religionIt$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _religionIt$[ebp], edx
$LN7@GetSimulat:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 208				; 000000d0H
	mov	DWORD PTR $T236683[ebp], eax
	mov	ecx, DWORD PTR $T236683[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 24					; 00000018H
	mov	eax, DWORD PTR $T236683[ebp]
	add	edx, DWORD PTR [eax]
	cmp	DWORD PTR _religionIt$[ebp], edx
	je	SHORT $LN5@GetSimulat

; 3427 : 	{
; 3428 : 		iTotalFollowers += religionIt->m_iFollowers;

	mov	ecx, DWORD PTR _religionIt$[ebp]
	mov	edx, DWORD PTR _iTotalFollowers$[ebp]
	add	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _iTotalFollowers$[ebp], edx

; 3429 : 
; 3430 : 		if(religionIt->m_iFollowers > iMostFollowers || religionIt->m_iFollowers == iMostFollowers && religionIt->m_iPressure > iMostFollowerPressure)

	mov	eax, DWORD PTR _religionIt$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _iMostFollowers$[ebp]
	jg	SHORT $LN3@GetSimulat
	mov	edx, DWORD PTR _religionIt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR _iMostFollowers$[ebp]
	jne	SHORT $LN4@GetSimulat
	mov	ecx, DWORD PTR _religionIt$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	cmp	edx, DWORD PTR _iMostFollowerPressure$[ebp]
	jle	SHORT $LN4@GetSimulat
$LN3@GetSimulat:

; 3431 : 		{
; 3432 : 			iMostFollowers = religionIt->m_iFollowers;

	mov	eax, DWORD PTR _religionIt$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _iMostFollowers$[ebp], ecx

; 3433 : 			iMostFollowerPressure = religionIt->m_iPressure;

	mov	edx, DWORD PTR _religionIt$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _iMostFollowerPressure$[ebp], eax

; 3434 : 			eMostFollowers = religionIt->m_eReligion;

	mov	ecx, DWORD PTR _religionIt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _eMostFollowers$[ebp], edx
$LN4@GetSimulat:

; 3435 : 		}
; 3436 : 	}

	jmp	SHORT $LN6@GetSimulat
$LN5@GetSimulat:

; 3437 : 
; 3438 : 	if ((iMostFollowers * 2) >= iTotalFollowers)

	mov	eax, DWORD PTR _iMostFollowers$[ebp]
	shl	eax, 1
	cmp	eax, DWORD PTR _iTotalFollowers$[ebp]
	jl	SHORT $LN2@GetSimulat

; 3439 : 	{
; 3440 : 		return eMostFollowers;

	mov	eax, DWORD PTR _eMostFollowers$[ebp]
	jmp	SHORT $LN8@GetSimulat

; 3441 : 	}
; 3442 : 	else

	jmp	SHORT $LN8@GetSimulat
$LN2@GetSimulat:

; 3443 : 	{
; 3444 : 		return NO_RELIGION;

	or	eax, -1
$LN8@GetSimulat:

; 3445 : 	}
; 3446 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSimulatedReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ENDP ; CvCityReligions::GetSimulatedReligiousMajority
_TEXT	ENDS
PUBLIC	?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetSecondaryReligion
; Function compile flags: /Odtp
;	COMDAT ?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
_eMajority$ = -20					; size = 4
_eMostFollowers$ = -16					; size = 4
_iMostPressure$ = -12					; size = 4
_iMostFollowers$ = -8					; size = 4
_religionIt$ = -4					; size = 4
?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ PROC ; CvCityReligions::GetSecondaryReligion, COMDAT
; _this$ = ecx

; 3454 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 3455 : 	int iMostFollowers = -1;

	mov	DWORD PTR _iMostFollowers$[ebp], -1

; 3456 : 	int iMostPressure = -1;

	mov	DWORD PTR _iMostPressure$[ebp], -1

; 3457 : 	ReligionTypes eMajority = GetReligiousMajority();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eMajority$[ebp], eax

; 3458 : 	ReligionTypes eMostFollowers = NO_RELIGION;

	mov	DWORD PTR _eMostFollowers$[ebp], -1

; 3459 : #ifdef AUI_CONSTIFY
; 3460 : 	ReligionInCityList::const_iterator religionIt;
; 3461 : #else
; 3462 : 	ReligionInCityList::iterator religionIt;
; 3463 : #endif
; 3464 : 
; 3465 : 	if (eMajority != NO_RELIGION)

	cmp	DWORD PTR _eMajority$[ebp], -1
	je	$LN8@GetSeconda

; 3466 : 	{	
; 3467 : 		for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _religionIt$[ebp], ecx
	jmp	SHORT $LN13@GetSeconda
$LN6@GetSeconda:
	mov	edx, DWORD PTR _religionIt$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _religionIt$[ebp], edx
$LN13@GetSeconda:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _religionIt$[ebp], ecx
	je	SHORT $LN8@GetSeconda

; 3468 : 		{
; 3469 : 			if (religionIt->m_eReligion != eMajority && religionIt->m_eReligion > RELIGION_PANTHEON && religionIt->m_iFollowers > 0)

	mov	eax, DWORD PTR _religionIt$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _eMajority$[ebp]
	je	SHORT $LN4@GetSeconda
	mov	edx, DWORD PTR _religionIt$[ebp]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN4@GetSeconda
	mov	eax, DWORD PTR _religionIt$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jle	SHORT $LN4@GetSeconda

; 3470 : 			{
; 3471 : 				if (religionIt->m_iFollowers > iMostFollowers)

	mov	ecx, DWORD PTR _religionIt$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR _iMostFollowers$[ebp]
	jle	SHORT $LN3@GetSeconda

; 3472 : 				{
; 3473 : 					iMostFollowers = religionIt->m_iFollowers;

	mov	eax, DWORD PTR _religionIt$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _iMostFollowers$[ebp], ecx

; 3474 : 					eMostFollowers = religionIt->m_eReligion;

	mov	edx, DWORD PTR _religionIt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _eMostFollowers$[ebp], eax

; 3475 : 					iMostPressure = religionIt->m_iPressure;

	mov	ecx, DWORD PTR _religionIt$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _iMostPressure$[ebp], edx
	jmp	SHORT $LN4@GetSeconda
$LN3@GetSeconda:

; 3476 : 				}
; 3477 : 				else if (religionIt->m_iFollowers == iMostFollowers && religionIt->m_iPressure > iMostPressure)

	mov	eax, DWORD PTR _religionIt$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _iMostFollowers$[ebp]
	jne	SHORT $LN4@GetSeconda
	mov	edx, DWORD PTR _religionIt$[ebp]
	mov	eax, DWORD PTR [edx+12]
	cmp	eax, DWORD PTR _iMostPressure$[ebp]
	jle	SHORT $LN4@GetSeconda

; 3478 : 				{
; 3479 : 					iMostFollowers = religionIt->m_iFollowers;

	mov	ecx, DWORD PTR _religionIt$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _iMostFollowers$[ebp], edx

; 3480 : 					eMostFollowers = religionIt->m_eReligion;

	mov	eax, DWORD PTR _religionIt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _eMostFollowers$[ebp], ecx

; 3481 : 					iMostPressure = religionIt->m_iPressure;

	mov	edx, DWORD PTR _religionIt$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _iMostPressure$[ebp], eax
$LN4@GetSeconda:

; 3482 : 				}
; 3483 : 			}
; 3484 : 		}

	jmp	$LN6@GetSeconda
$LN8@GetSeconda:

; 3485 : 	}
; 3486 : 
; 3487 : 	return eMostFollowers;

	mov	eax, DWORD PTR _eMostFollowers$[ebp]

; 3488 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ENDP ; CvCityReligions::GetSecondaryReligion
_TEXT	ENDS
EXTRN	?IsSecondReligionPantheon@CvPlayer@@QBE_NXZ:PROC ; CvPlayer::IsSecondReligionPantheon
; Function compile flags: /Odtp
;	COMDAT ?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T236719 = -40						; size = 4
$T236715 = -36						; size = 4
$T236706 = -32						; size = 4
$T236702 = -28						; size = 4
_eBelief$225734 = -24					; size = 4
_pEntry$225735 = -20					; size = 4
_iI$225730 = -16					; size = 4
_pReligion$225728 = -12					; size = 4
_eSecondary$225726 = -8					; size = 4
_eRtnValue$ = -4					; size = 4
?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ PROC ; CvCityReligions::GetSecondaryReligionPantheonBelief, COMDAT
; _this$ = ecx

; 3496 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 3497 : 	BeliefTypes eRtnValue = NO_BELIEF;

	mov	DWORD PTR _eRtnValue$[ebp], -1

; 3498 : 
; 3499 : 	// Check for the policy that allows a secondary religion to be active
; 3500 : 	if (GET_PLAYER(m_pCity->getOwner()).IsSecondReligionPantheon())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T236702[ebp], edx
	mov	eax, DWORD PTR $T236702[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T236706[ebp], eax
	mov	ecx, DWORD PTR $T236706[ebp]
	call	?IsSecondReligionPantheon@CvPlayer@@QBE_NXZ ; CvPlayer::IsSecondReligionPantheon
	movzx	ecx, al
	test	ecx, ecx
	je	$LN7@GetSeconda@2

; 3501 : 	{
; 3502 : 		ReligionTypes eSecondary = GetSecondaryReligion();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetSecondaryReligion
	mov	DWORD PTR _eSecondary$225726[ebp], eax

; 3503 : 		if (eSecondary != NO_RELIGION)

	cmp	DWORD PTR _eSecondary$225726[ebp], -1
	je	$LN7@GetSeconda@2

; 3504 : 		{
; 3505 : 			const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eSecondary, m_pCity->getOwner());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+416]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T236715[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T236719[ebp], edx
	mov	eax, DWORD PTR $T236715[ebp]
	push	eax
	mov	ecx, DWORD PTR _eSecondary$225726[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T236719[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$225728[ebp], eax

; 3506 : 			if(pReligion)

	cmp	DWORD PTR _pReligion$225728[ebp], 0
	je	SHORT $LN7@GetSeconda@2

; 3507 : 			{
; 3508 : 				for(int iI = 0; iI < pReligion->m_Beliefs.GetNumBeliefs(); iI++)

	mov	DWORD PTR _iI$225730[ebp], 0
	jmp	SHORT $LN4@GetSeconda@2
$LN3@GetSeconda@2:
	mov	edx, DWORD PTR _iI$225730[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$225730[ebp], edx
$LN4@GetSeconda@2:
	mov	ecx, DWORD PTR _pReligion$225728[ebp]
	add	ecx, 152				; 00000098H
	call	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetNumBeliefs
	cmp	DWORD PTR _iI$225730[ebp], eax
	jge	SHORT $LN7@GetSeconda@2

; 3509 : 				{
; 3510 : 					const BeliefTypes eBelief = pReligion->m_Beliefs.GetBelief(iI);

	mov	eax, DWORD PTR _iI$225730[ebp]
	push	eax
	mov	ecx, DWORD PTR _pReligion$225728[ebp]
	add	ecx, 152				; 00000098H
	call	?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z ; CvReligionBeliefs::GetBelief
	mov	DWORD PTR _eBelief$225734[ebp], eax

; 3511 : 					CvBeliefEntry* pEntry = GC.GetGameBeliefs()->GetEntry((int)eBelief);

	mov	ecx, DWORD PTR _eBelief$225734[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ecx, eax
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	DWORD PTR _pEntry$225735[ebp], eax

; 3512 : 					if(pEntry && pEntry->IsPantheonBelief())

	cmp	DWORD PTR _pEntry$225735[ebp], 0
	je	SHORT $LN1@GetSeconda@2
	mov	ecx, DWORD PTR _pEntry$225735[ebp]
	call	?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsPantheonBelief
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetSeconda@2

; 3513 : 					{
; 3514 : 						eRtnValue = eBelief;

	mov	eax, DWORD PTR _eBelief$225734[ebp]
	mov	DWORD PTR _eRtnValue$[ebp], eax

; 3515 : 						break;

	jmp	SHORT $LN7@GetSeconda@2
$LN1@GetSeconda@2:

; 3516 : 					}
; 3517 : 				}

	jmp	SHORT $LN3@GetSeconda@2
$LN7@GetSeconda@2:

; 3518 : 			}
; 3519 : 		}
; 3520 : 	}
; 3521 : 
; 3522 : 	return eRtnValue;

	mov	eax, DWORD PTR _eRtnValue$[ebp]

; 3523 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ ENDP ; CvCityReligions::GetSecondaryReligionPantheonBelief
_TEXT	ENDS
PUBLIC	?GetFollowersOtherReligions@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetFollowersOtherReligions
; Function compile flags: /Odtp
;	COMDAT ?GetFollowersOtherReligions@CvCityReligions@@QAEHW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
_iOtherFollowers$ = -8					; size = 4
_religionIt$ = -4					; size = 4
_eReligion$ = 8						; size = 4
?GetFollowersOtherReligions@CvCityReligions@@QAEHW4ReligionTypes@@@Z PROC ; CvCityReligions::GetFollowersOtherReligions, COMDAT
; _this$ = ecx

; 3531 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 3532 : 	int iOtherFollowers = 0;

	mov	DWORD PTR _iOtherFollowers$[ebp], 0

; 3533 : #ifdef AUI_CONSTIFY
; 3534 : 	ReligionInCityList::const_iterator religionIt;
; 3535 : #else
; 3536 : 	ReligionInCityList::iterator religionIt;
; 3537 : #endif
; 3538 : 
; 3539 : 	for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _religionIt$[ebp], ecx
	jmp	SHORT $LN9@GetFollowe
$LN3@GetFollowe:
	mov	edx, DWORD PTR _religionIt$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _religionIt$[ebp], edx
$LN9@GetFollowe:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _religionIt$[ebp], ecx
	je	SHORT $LN2@GetFollowe

; 3540 : 	{
; 3541 : 		if (religionIt->m_eReligion > RELIGION_PANTHEON && religionIt->m_eReligion != eReligion)

	mov	eax, DWORD PTR _religionIt$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN1@GetFollowe
	mov	ecx, DWORD PTR _religionIt$[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _eReligion$[ebp]
	je	SHORT $LN1@GetFollowe

; 3542 : 		{
; 3543 : 			iOtherFollowers += religionIt->m_iFollowers;

	mov	eax, DWORD PTR _religionIt$[ebp]
	mov	ecx, DWORD PTR _iOtherFollowers$[ebp]
	add	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _iOtherFollowers$[ebp], ecx
$LN1@GetFollowe:

; 3544 : 		}
; 3545 : 	}

	jmp	SHORT $LN3@GetFollowe
$LN2@GetFollowe:

; 3546 : 
; 3547 : 	return iOtherFollowers;

	mov	eax, DWORD PTR _iOtherFollowers$[ebp]

; 3548 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetFollowersOtherReligions@CvCityReligions@@QAEHW4ReligionTypes@@@Z ENDP ; CvCityReligions::GetFollowersOtherReligions
_TEXT	ENDS
PUBLIC	?GetTotalPressure@CvCityReligions@@QAEHXZ	; CvCityReligions::GetTotalPressure
; Function compile flags: /Odtp
;	COMDAT ?GetTotalPressure@CvCityReligions@@QAEHXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_iTotalPressure$ = -8					; size = 4
_it$ = -4						; size = 4
?GetTotalPressure@CvCityReligions@@QAEHXZ PROC		; CvCityReligions::GetTotalPressure, COMDAT
; _this$ = ecx

; 3556 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 3557 : 	int iTotalPressure = 0;

	mov	DWORD PTR _iTotalPressure$[ebp], 0

; 3558 : 
; 3559 : #ifdef AUI_CONSTIFY
; 3560 : 	ReligionInCityList::const_iterator it;
; 3561 : #else
; 3562 : 	ReligionInCityList::iterator it;
; 3563 : #endif
; 3564 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3565 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 3566 : #else
; 3567 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN8@GetTotalPr
$LN2@GetTotalPr:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], edx
$LN8@GetTotalPr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN1@GetTotalPr

; 3568 : #endif
; 3569 : 	{
; 3570 : 		iTotalPressure += it->m_iPressure;

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR _iTotalPressure$[ebp]
	add	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _iTotalPressure$[ebp], ecx

; 3571 : 	}

	jmp	SHORT $LN2@GetTotalPr
$LN1@GetTotalPr:

; 3572 : 
; 3573 : 	return iTotalPressure;

	mov	eax, DWORD PTR _iTotalPressure$[ebp]

; 3574 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetTotalPressure@CvCityReligions@@QAEHXZ ENDP		; CvCityReligions::GetTotalPressure
_TEXT	ENDS
PUBLIC	?GetPressure@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetPressure
; Function compile flags: /Odtp
;	COMDAT ?GetPressure@CvCityReligions@@QAEHW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_it$ = -4						; size = 4
_eReligion$ = 8						; size = 4
?GetPressure@CvCityReligions@@QAEHW4ReligionTypes@@@Z PROC ; CvCityReligions::GetPressure, COMDAT
; _this$ = ecx

; 3583 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 3584 : 	ReligionInCityList::iterator it;
; 3585 : #endif
; 3586 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3587 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 3588 : #else
; 3589 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN9@GetPressur
$LN3@GetPressur:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], edx
$LN9@GetPressur:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN2@GetPressur

; 3590 : #endif
; 3591 : 	{
; 3592 : 		if(it->m_eReligion == eReligion)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN1@GetPressur

; 3593 : 		{
; 3594 : 			return it->m_iPressure;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+12]
	jmp	SHORT $LN5@GetPressur
$LN1@GetPressur:

; 3595 : 		}
; 3596 : 	}

	jmp	SHORT $LN3@GetPressur
$LN2@GetPressur:

; 3597 : 
; 3598 : 	return 0;

	xor	eax, eax
$LN5@GetPressur:

; 3599 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetPressure@CvCityReligions@@QAEHW4ReligionTypes@@@Z ENDP ; CvCityReligions::GetPressure
_TEXT	ENDS
PUBLIC	?GetPressurePerTurn@CvCityReligions@@QAEHW4ReligionTypes@@AAH@Z ; CvCityReligions::GetPressurePerTurn
; Function compile flags: /Odtp
;	COMDAT ?GetPressurePerTurn@CvCityReligions@@QAEHW4ReligionTypes@@AAH@Z
_TEXT	SEGMENT
_this$ = -52						; size = 4
$T236769 = -48						; size = 4
$T236765 = -44						; size = 4
$T236761 = -40						; size = 4
$T236757 = -33						; size = 1
_iHolyCityPressure$225788 = -32				; size = 4
_iNumTradeRoutes$225786 = -28				; size = 4
_eMajorityReligion$225784 = -24				; size = 4
_pLoopCity$225779 = -20					; size = 4
_iLoop$225778 = -16					; size = 4
_kPlayer$225775 = -12					; size = 4
_iI$225771 = -8						; size = 4
_iPressure$ = -4					; size = 4
_eReligion$ = 8						; size = 4
_iNumTradeRoutesInvolved$ = 12				; size = 4
?GetPressurePerTurn@CvCityReligions@@QAEHW4ReligionTypes@@AAH@Z PROC ; CvCityReligions::GetPressurePerTurn, COMDAT
; _this$ = ecx

; 3607 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 3608 : 	int iPressure = 0;

	mov	DWORD PTR _iPressure$[ebp], 0

; 3609 : 	iNumTradeRoutesInvolved = 0;

	mov	eax, DWORD PTR _iNumTradeRoutesInvolved$[ebp]
	mov	DWORD PTR [eax], 0

; 3610 : 
; 3611 : 	// Loop through all the players
; 3612 : 	for(int iI = 0; iI < MAX_PLAYERS; iI++)

	mov	DWORD PTR _iI$225771[ebp], 0
	jmp	SHORT $LN10@GetPressur@2
$LN9@GetPressur@2:
	mov	ecx, DWORD PTR _iI$225771[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$225771[ebp], ecx
$LN10@GetPressur@2:
	cmp	DWORD PTR _iI$225771[ebp], 64		; 00000040H
	jge	$LN8@GetPressur@2

; 3613 : 	{
; 3614 : 		CvPlayer& kPlayer = GET_PLAYER((PlayerTypes)iI);

	mov	edx, DWORD PTR _iI$225771[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$225775[ebp], edx

; 3615 : 		if(kPlayer.isAlive())

	mov	eax, DWORD PTR _kPlayer$225775[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T236757[ebp], cl
	movzx	edx, BYTE PTR $T236757[ebp]
	test	edx, edx
	je	$LN7@GetPressur@2

; 3616 : 		{
; 3617 : 			// Loop through each of their cities
; 3618 : 			int iLoop;
; 3619 : 			CvCity* pLoopCity;
; 3620 : 			for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$225778[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$225775[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$225779[ebp], eax
	jmp	SHORT $LN6@GetPressur@2
$LN5@GetPressur@2:
	push	0
	lea	ecx, DWORD PTR _iLoop$225778[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$225775[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$225779[ebp], eax
$LN6@GetPressur@2:
	cmp	DWORD PTR _pLoopCity$225779[ebp], 0
	je	SHORT $LN7@GetPressur@2

; 3621 : 			{
; 3622 : 				// Ignore the same city
; 3623 : 				if (m_pCity == pLoopCity)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+416]
	cmp	eax, DWORD PTR _pLoopCity$225779[ebp]
	jne	SHORT $LN3@GetPressur@2

; 3624 : 				{
; 3625 : 					continue;

	jmp	SHORT $LN5@GetPressur@2
$LN3@GetPressur@2:

; 3626 : 				}
; 3627 : 
; 3628 : 				// Does this city have the matching majority religion?
; 3629 : 				ReligionTypes eMajorityReligion = pLoopCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, DWORD PTR _pLoopCity$225779[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eMajorityReligion$225784[ebp], eax

; 3630 : 				if(eMajorityReligion == eReligion)

	mov	ecx, DWORD PTR _eMajorityReligion$225784[ebp]
	cmp	ecx, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN2@GetPressur@2

; 3631 : 				{
; 3632 : 					int iNumTradeRoutes;
; 3633 : 					iPressure += GC.getGame().GetGameReligions()->GetAdjacentCityReligiousPressure (eMajorityReligion, pLoopCity, m_pCity, iNumTradeRoutes, false);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T236761[ebp], edx
	push	0
	lea	eax, DWORD PTR _iNumTradeRoutes$225786[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+416]
	push	edx
	mov	eax, DWORD PTR _pLoopCity$225779[ebp]
	push	eax
	mov	ecx, DWORD PTR _eMajorityReligion$225784[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T236761[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetAdjacentCityReligiousPressure@CvGameReligions@@QAEHW4ReligionTypes@@PAVCvCity@@1AAH_N@Z ; CvGameReligions::GetAdjacentCityReligiousPressure
	add	eax, DWORD PTR _iPressure$[ebp]
	mov	DWORD PTR _iPressure$[ebp], eax

; 3634 : 					iNumTradeRoutesInvolved += iNumTradeRoutes;

	mov	edx, DWORD PTR _iNumTradeRoutesInvolved$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _iNumTradeRoutes$225786[ebp]
	mov	ecx, DWORD PTR _iNumTradeRoutesInvolved$[ebp]
	mov	DWORD PTR [ecx], eax
$LN2@GetPressur@2:

; 3635 : 				}
; 3636 : 			}

	jmp	$LN5@GetPressur@2
$LN7@GetPressur@2:

; 3637 : 		}
; 3638 : 	}

	jmp	$LN9@GetPressur@2
$LN8@GetPressur@2:

; 3639 : 
; 3640 : 	// Holy city for this religion?
; 3641 : 	if (IsHolyCityForReligion(eReligion))

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsHolyCityForReligion
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@GetPressur@2

; 3642 : 	{
; 3643 : 		int iHolyCityPressure = GC.getGame().getGameSpeedInfo().getReligiousPressureAdjacentCity();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T236765[ebp], ecx
	mov	ecx, DWORD PTR $T236765[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getReligiousPressureAdjacentCity@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getReligiousPressureAdjacentCity
	mov	DWORD PTR _iHolyCityPressure$225788[ebp], eax

; 3644 : 		iHolyCityPressure *=  GC.getRELIGION_PER_TURN_FOUNDING_CITY_PRESSURE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7896
	mov	DWORD PTR $T236769[ebp], edx
	mov	eax, DWORD PTR _iHolyCityPressure$225788[ebp]
	imul	eax, DWORD PTR $T236769[ebp]
	mov	DWORD PTR _iHolyCityPressure$225788[ebp], eax

; 3645 : 		iPressure += iHolyCityPressure;

	mov	ecx, DWORD PTR _iPressure$[ebp]
	add	ecx, DWORD PTR _iHolyCityPressure$225788[ebp]
	mov	DWORD PTR _iPressure$[ebp], ecx
$LN1@GetPressur@2:

; 3646 : 	}
; 3647 : 
; 3648 : 	return iPressure;

	mov	eax, DWORD PTR _iPressure$[ebp]

; 3649 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetPressurePerTurn@CvCityReligions@@QAEHW4ReligionTypes@@AAH@Z ENDP ; CvCityReligions::GetPressurePerTurn
_TEXT	ENDS
PUBLIC	?GetNumTradeRouteConnections@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumTradeRouteConnections
; Function compile flags: /Odtp
;	COMDAT ?GetNumTradeRouteConnections@CvCityReligions@@QAEHW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_it$ = -4						; size = 4
_eReligion$ = 8						; size = 4
?GetNumTradeRouteConnections@CvCityReligions@@QAEHW4ReligionTypes@@@Z PROC ; CvCityReligions::GetNumTradeRouteConnections, COMDAT
; _this$ = ecx

; 3658 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 3659 : 	ReligionInCityList::iterator it;
; 3660 : #endif
; 3661 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3662 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 3663 : #else
; 3664 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN9@GetNumTrad
$LN3@GetNumTrad:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], edx
$LN9@GetNumTrad:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN2@GetNumTrad

; 3665 : #endif
; 3666 : 	{
; 3667 : 		if(it->m_eReligion == eReligion)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN1@GetNumTrad

; 3668 : 		{
; 3669 : 			return it->m_iNumTradeRoutesApplyingPressure;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+16]
	jmp	SHORT $LN5@GetNumTrad
$LN1@GetNumTrad:

; 3670 : 		}
; 3671 : 	}

	jmp	SHORT $LN3@GetNumTrad
$LN2@GetNumTrad:

; 3672 : 
; 3673 : 	return 0;

	xor	eax, eax
$LN5@GetNumTrad:

; 3674 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetNumTradeRouteConnections@CvCityReligions@@QAEHW4ReligionTypes@@@Z ENDP ; CvCityReligions::GetNumTradeRouteConnections
_TEXT	ENDS
PUBLIC	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward
; Function compile flags: /Odtp
;	COMDAT ?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z
_TEXT	SEGMENT
_this$ = -132						; size = 4
$T236915 = -128						; size = 4
$T236834 = -48						; size = 4
$T236825 = -44						; size = 4
$T236816 = -40						; size = 4
$T236807 = -36						; size = 4
$T236792 = -32						; size = 4
$T236788 = -28						; size = 4
_iNumTradeRoutes$225813 = -24				; size = 4
_iDistanceMod$ = -20					; size = 4
_iDistance$ = -16					; size = 4
_eReligiousMajority$ = -12				; size = 4
_bWithinDistance$ = -5					; size = 1
_pReligion$ = -4					; size = 4
_pTargetCity$ = 8					; size = 4
_eReligion$ = 12					; size = 4
_iAmount$ = 16						; size = 4
?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z PROC ; CvCityReligions::WouldExertTradeRoutePressureToward, COMDAT
; _this$ = ecx

; 3682 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 132				; 00000084H
	mov	DWORD PTR _this$[ebp], ecx

; 3683 : 	eReligion = NO_RELIGION;

	mov	eax, DWORD PTR _eReligion$[ebp]
	mov	DWORD PTR [eax], -1

; 3684 : 	iAmount = 0;

	mov	ecx, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR [ecx], 0

; 3685 : 
; 3686 : 	ReligionTypes eReligiousMajority = GetReligiousMajority();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eReligiousMajority$[ebp], eax

; 3687 : 
; 3688 : 	// if there isn't a religious connection, whatvz
; 3689 : 	if (eReligiousMajority == NO_RELIGION)

	cmp	DWORD PTR _eReligiousMajority$[ebp], -1
	jne	SHORT $LN9@WouldExert

; 3690 : 	{
; 3691 : 		return false;

	xor	al, al
	jmp	$LN5@WouldExert

; 3692 : 	}
; 3693 : 
; 3694 : 	const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eReligiousMajority, m_pCity->getOwner());

$LN9@WouldExert:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+416]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T236788[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T236792[ebp], edx
	mov	eax, DWORD PTR $T236788[ebp]
	push	eax
	mov	ecx, DWORD PTR _eReligiousMajority$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T236792[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$[ebp], eax

; 3695 : 	if (!pReligion)

	cmp	DWORD PTR _pReligion$[ebp], 0
	jne	SHORT $LN3@WouldExert

; 3696 : 	{
; 3697 : 		return false;

	xor	al, al
	jmp	$LN5@WouldExert
$LN3@WouldExert:

; 3698 : 	}
; 3699 : 
; 3700 : 	// Are the cities within the minimum distance?
; 3701 : 	int iDistance = GC.getRELIGION_ADJACENT_CITY_DISTANCE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7904
	mov	DWORD PTR _iDistance$[ebp], edx

; 3702 : 
; 3703 : 	// Boost to distance due to belief?
; 3704 : 	int iDistanceMod = pReligion->m_Beliefs.GetSpreadDistanceModifier();

	mov	eax, DWORD PTR _pReligion$[ebp]
	mov	ecx, DWORD PTR [eax+188]
	mov	DWORD PTR _iDistanceMod$[ebp], ecx

; 3705 : 	if(iDistanceMod > 0)

	cmp	DWORD PTR _iDistanceMod$[ebp], 0
	jle	SHORT $LN19@WouldExert

; 3706 : 	{
; 3707 : 		iDistance *= (100 + iDistanceMod);

	mov	edx, DWORD PTR _iDistanceMod$[ebp]
	add	edx, 100				; 00000064H
	imul	edx, DWORD PTR _iDistance$[ebp]
	mov	DWORD PTR _iDistance$[ebp], edx

; 3708 : 		iDistance /= 100;

	mov	eax, DWORD PTR _iDistance$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iDistance$[ebp], eax

; 3709 : 	}
; 3710 : 
; 3711 : 	bool bWithinDistance = (plotDistance(m_pCity->getX(), m_pCity->getY(), pTargetCity->getX(), pTargetCity->getY()) <= iDistance);

$LN19@WouldExert:
	mov	edx, DWORD PTR _pTargetCity$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T236807[ebp], eax
	mov	ecx, DWORD PTR _pTargetCity$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T236816[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T236825[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T236834[ebp], edx
	mov	eax, DWORD PTR $T236807[ebp]
	push	eax
	mov	ecx, DWORD PTR $T236816[ebp]
	push	ecx
	mov	edx, DWORD PTR $T236825[ebp]
	push	edx
	mov	eax, DWORD PTR $T236834[ebp]
	push	eax
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	xor	ecx, ecx
	cmp	eax, DWORD PTR _iDistance$[ebp]
	setle	cl
	mov	BYTE PTR _bWithinDistance$[ebp], cl

; 3712 : 
; 3713 : 	// if not within distance, then we're using a trade route
; 3714 : 	if (!bWithinDistance) 

	movzx	edx, BYTE PTR _bWithinDistance$[ebp]
	test	edx, edx
	jne	SHORT $LN1@WouldExert

; 3715 : 	{
; 3716 : 		eReligion = eReligiousMajority;

	mov	eax, DWORD PTR _eReligion$[ebp]
	mov	ecx, DWORD PTR _eReligiousMajority$[ebp]
	mov	DWORD PTR [eax], ecx

; 3717 : 		int iNumTradeRoutes = 0;

	mov	DWORD PTR _iNumTradeRoutes$225813[ebp], 0

; 3718 : 		iAmount = GC.getGame().GetGameReligions()->GetAdjacentCityReligiousPressure(eReligiousMajority, m_pCity, pTargetCity, iNumTradeRoutes, true);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T236915[ebp], edx
	push	1
	lea	eax, DWORD PTR _iNumTradeRoutes$225813[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTargetCity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+416]
	push	eax
	mov	ecx, DWORD PTR _eReligiousMajority$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T236915[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetAdjacentCityReligiousPressure@CvGameReligions@@QAEHW4ReligionTypes@@PAVCvCity@@1AAH_N@Z ; CvGameReligions::GetAdjacentCityReligiousPressure
	mov	edx, DWORD PTR _iAmount$[ebp]
	mov	DWORD PTR [edx], eax

; 3719 : 		return true;

	mov	al, 1
	jmp	SHORT $LN5@WouldExert
$LN1@WouldExert:

; 3720 : 	}
; 3721 : 
; 3722 : 	return false;

	xor	al, al
$LN5@WouldExert:

; 3723 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ENDP ; CvCityReligions::WouldExertTradeRoutePressureToward
_TEXT	ENDS
PUBLIC	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers
PUBLIC	?DoPopulationChange@CvCityReligions@@QAEXH@Z	; CvCityReligions::DoPopulationChange
; Function compile flags: /Odtp
;	COMDAT ?DoPopulationChange@CvCityReligions@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T236921 = -8						; size = 4
_eMajorityReligion$ = -4				; size = 4
_iChange$ = 8						; size = 4
?DoPopulationChange@CvCityReligions@@QAEXH@Z PROC	; CvCityReligions::DoPopulationChange, COMDAT
; _this$ = ecx

; 3728 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 3729 : 	ReligionTypes eMajorityReligion = GetReligiousMajority();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eMajorityReligion$[ebp], eax

; 3730 : 
; 3731 : 	// Only add pressure if the population went up; if starving, leave pressure alone (but recompute followers)
; 3732 : 	if(iChange > 0)

	cmp	DWORD PTR _iChange$[ebp], 0
	jle	SHORT $LN3@DoPopulati

; 3733 : 	{
; 3734 : 		AddReligiousPressure(FOLLOWER_CHANGE_POP_CHANGE, eMajorityReligion, iChange * GC.getRELIGION_ATHEISM_PRESSURE_PER_POP());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7888
	mov	DWORD PTR $T236921[ebp], eax
	push	-1
	mov	ecx, DWORD PTR _iChange$[ebp]
	imul	ecx, DWORD PTR $T236921[ebp]
	push	ecx
	mov	edx, DWORD PTR _eMajorityReligion$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddReligiousPressure@CvCityReligions@@QAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@HW4PlayerTypes@@@Z ; CvCityReligions::AddReligiousPressure
	jmp	SHORT $LN4@DoPopulati
$LN3@DoPopulati:

; 3735 : 	}
; 3736 : 	else if (iChange < 0)

	cmp	DWORD PTR _iChange$[ebp], 0
	jge	SHORT $LN4@DoPopulati

; 3737 : 	{
; 3738 : 		RecomputeFollowers(FOLLOWER_CHANGE_POP_CHANGE, eMajorityReligion);

	push	-1
	mov	eax, DWORD PTR _eMajorityReligion$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers
$LN4@DoPopulati:

; 3739 : 	}
; 3740 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?DoPopulationChange@CvCityReligions@@QAEXH@Z ENDP	; CvCityReligions::DoPopulationChange
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?DoReligionFounded@CvCityReligions@@QAEXW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -80						; size = 4
$T236927 = -36						; size = 4
_iInitialPressure$ = -32				; size = 4
_newReligion$ = -28					; size = 24
_eOldMajorityReligion$ = -4				; size = 4
_eReligion$ = 8						; size = 4
?DoReligionFounded@CvCityReligions@@QAEXW4ReligionTypes@@@Z PROC ; CvCityReligions::DoReligionFounded, COMDAT
; _this$ = ecx

; 3744 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	mov	DWORD PTR _this$[ebp], ecx

; 3745 : 	int iInitialPressure;
; 3746 : 	ReligionTypes eOldMajorityReligion = GetReligiousMajority();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eOldMajorityReligion$[ebp], eax

; 3747 : 
; 3748 : 	iInitialPressure = GC.getRELIGION_INITIAL_FOUNDING_CITY_PRESSURE() * m_pCity->getPopulation();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7892
	mov	DWORD PTR $T236927[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+416]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	imul	eax, DWORD PTR $T236927[ebp]
	mov	DWORD PTR _iInitialPressure$[ebp], eax

; 3749 : 	CvReligionInCity newReligion(eReligion, true, 0, iInitialPressure);

	mov	edx, DWORD PTR _iInitialPressure$[ebp]
	push	edx
	push	0
	push	1
	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	lea	ecx, DWORD PTR _newReligion$[ebp]
	call	??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z ; CvReligionInCity::CvReligionInCity

; 3750 : 	m_ReligionStatus.push_back(newReligion);

	lea	ecx, DWORD PTR _newReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back

; 3751 : 
; 3752 : 	RecomputeFollowers(FOLLOWER_CHANGE_RELIGION_FOUNDED, eOldMajorityReligion);

	push	-1
	mov	edx, DWORD PTR _eOldMajorityReligion$[ebp]
	push	edx
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers

; 3753 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?DoReligionFounded@CvCityReligions@@QAEXW4ReligionTypes@@@Z ENDP ; CvCityReligions::DoReligionFounded
_TEXT	ENDS
PUBLIC	?AddProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@HW4PlayerTypes@@@Z ; CvCityReligions::AddProphetSpread
; Function compile flags: /Odtp
;	COMDAT ?AddProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@HW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -192						; size = 4
_i$236998 = -168					; size = 4
$T236982 = -164						; size = 4
_pressureRetainedReligion$225864 = -160			; size = 24
_holyCityReligion$225862 = -136				; size = 24
_holyCityReligion$225860 = -112				; size = 24
_iPressureRetention$225854 = -88			; size = 4
_pReligion$225853 = -84					; size = 4
_eHolyCityReligion$ = -80				; size = 4
_iAtheismPressure$ = -76				; size = 4
_ePressureRetainedReligion$ = -72			; size = 4
_bProphetsReligionFoundedHere$ = -65			; size = 1
_atheism$ = -64						; size = 24
_eOldMajorityReligion$ = -40				; size = 4
_prophetReligion$ = -36					; size = 24
_iPressureRetained$ = -12				; size = 4
_iReligionPressure$ = -8				; size = 4
_it$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_iPressure$ = 12					; size = 4
_eResponsiblePlayer$ = 16				; size = 4
?AddProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@HW4PlayerTypes@@@Z PROC ; CvCityReligions::AddProphetSpread, COMDAT
; _this$ = ecx

; 3757 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	mov	DWORD PTR _this$[ebp], ecx

; 3758 : 	int iAtheismPressure = 0;

	mov	DWORD PTR _iAtheismPressure$[ebp], 0

; 3759 : 	int iReligionPressure = 0;

	mov	DWORD PTR _iReligionPressure$[ebp], 0

; 3760 : 	int iPressureRetained = 0;

	mov	DWORD PTR _iPressureRetained$[ebp], 0

; 3761 : 	ReligionTypes eOldMajorityReligion = GetReligiousMajority();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eOldMajorityReligion$[ebp], eax

; 3762 : 	ReligionTypes eHolyCityReligion = NO_RELIGION;

	mov	DWORD PTR _eHolyCityReligion$[ebp], -1

; 3763 : 	ReligionTypes ePressureRetainedReligion = NO_RELIGION;

	mov	DWORD PTR _ePressureRetainedReligion$[ebp], -1

; 3764 : 	bool bProphetsReligionFoundedHere = false;

	mov	BYTE PTR _bProphetsReligionFoundedHere$[ebp], 0

; 3765 : 
; 3766 : 	ReligionInCityList::iterator it;
; 3767 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3768 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 3769 : #else
; 3770 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN20@AddProphet
$LN14@AddProphet:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], edx
$LN20@AddProphet:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	$LN13@AddProphet

; 3771 : #endif
; 3772 : 	{
; 3773 : 		if (it->m_eReligion == NO_RELIGION)

	mov	eax, DWORD PTR _it$[ebp]
	cmp	DWORD PTR [eax], -1
	jne	SHORT $LN12@AddProphet

; 3774 : 		{
; 3775 : 			iAtheismPressure = it->m_iPressure;

	mov	ecx, DWORD PTR _it$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _iAtheismPressure$[ebp], edx
	jmp	SHORT $LN11@AddProphet
$LN12@AddProphet:

; 3776 : 		}
; 3777 : 		else if (eReligion == it->m_eReligion)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR _eReligion$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN10@AddProphet

; 3778 : 		{
; 3779 : 			iReligionPressure = it->m_iPressure;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _iReligionPressure$[ebp], eax

; 3780 : 			if (it->m_bFoundedHere)

	mov	ecx, DWORD PTR _it$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	test	edx, edx
	je	SHORT $LN9@AddProphet

; 3781 : 			{
; 3782 : 				bProphetsReligionFoundedHere = true;

	mov	BYTE PTR _bProphetsReligionFoundedHere$[ebp], 1
$LN9@AddProphet:

; 3783 : 			}
; 3784 : 		}

	jmp	SHORT $LN11@AddProphet
$LN10@AddProphet:

; 3785 : 		else if (it->m_bFoundedHere)

	mov	eax, DWORD PTR _it$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN11@AddProphet

; 3786 : 		{
; 3787 : 			eHolyCityReligion = it->m_eReligion;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _eHolyCityReligion$[ebp], eax
$LN11@AddProphet:

; 3788 : 		}
; 3789 : 
; 3790 : 		if (it->m_eReligion > RELIGION_PANTHEON &&  it->m_eReligion != eReligion)

	mov	ecx, DWORD PTR _it$[ebp]
	cmp	DWORD PTR [ecx], 0
	jle	SHORT $LN6@AddProphet
	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR _eReligion$[ebp]
	je	SHORT $LN6@AddProphet

; 3791 : 		{
; 3792 : 			const CvReligion *pReligion = GC.getGame().GetGameReligions()->GetReligion(it->m_eReligion, NO_PLAYER);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T236982[ebp], ecx
	push	-1
	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR $T236982[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$225853[ebp], eax

; 3793 : 			int iPressureRetention = pReligion->m_Beliefs.GetInquisitorPressureRetention();  // Normally 0

	mov	ecx, DWORD PTR _pReligion$225853[ebp]
	mov	edx, DWORD PTR [ecx+268]
	mov	DWORD PTR _iPressureRetention$225854[ebp], edx

; 3794 : 			if (iPressureRetention > 0)

	cmp	DWORD PTR _iPressureRetention$225854[ebp], 0
	jle	SHORT $LN6@AddProphet

; 3795 : 			{
; 3796 : 				ePressureRetainedReligion = it->m_eReligion;

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ePressureRetainedReligion$[ebp], ecx

; 3797 : 				iPressureRetained = it->m_iPressure * iPressureRetention / 100;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+12]
	imul	eax, DWORD PTR _iPressureRetention$225854[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iPressureRetained$[ebp], eax
$LN6@AddProphet:

; 3798 : 			}
; 3799 : 		}
; 3800 : 	}

	jmp	$LN14@AddProphet
$LN13@AddProphet:

; 3801 : 
; 3802 : 	// Clear list
; 3803 : 	m_ReligionStatus.clear();

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN32@AddProphet
	mov	DWORD PTR _i$236998[ebp], 0
	jmp	SHORT $LN30@AddProphet
$LN29@AddProphet:
	mov	eax, DWORD PTR _i$236998[ebp]
	add	eax, 1
	mov	DWORD PTR _i$236998[ebp], eax
$LN30@AddProphet:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$236998[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jae	SHORT $LN32@AddProphet
	jmp	SHORT $LN29@AddProphet
$LN32@AddProphet:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 3804 : 
; 3805 : 	// Add atheists and this back in
; 3806 : 	CvReligionInCity atheism(NO_RELIGION, false/*bFoundedHere*/, 0, iAtheismPressure);

	mov	ecx, DWORD PTR _iAtheismPressure$[ebp]
	push	ecx
	push	0
	push	0
	push	-1
	lea	ecx, DWORD PTR _atheism$[ebp]
	call	??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z ; CvReligionInCity::CvReligionInCity

; 3807 : 	m_ReligionStatus.push_back(atheism);

	lea	edx, DWORD PTR _atheism$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back

; 3808 : 	CvReligionInCity prophetReligion(eReligion, bProphetsReligionFoundedHere, 0, iReligionPressure + iPressure);

	mov	eax, DWORD PTR _iReligionPressure$[ebp]
	add	eax, DWORD PTR _iPressure$[ebp]
	push	eax
	push	0
	movzx	ecx, BYTE PTR _bProphetsReligionFoundedHere$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	lea	ecx, DWORD PTR _prophetReligion$[ebp]
	call	??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z ; CvReligionInCity::CvReligionInCity

; 3809 : 	m_ReligionStatus.push_back(prophetReligion);

	lea	eax, DWORD PTR _prophetReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back

; 3810 : 
; 3811 : 	// Reestablish Holy City religion
; 3812 : 	if (eHolyCityReligion != NO_RELIGION && !bProphetsReligionFoundedHere)

	cmp	DWORD PTR _eHolyCityReligion$[ebp], -1
	je	SHORT $LN4@AddProphet
	movzx	ecx, BYTE PTR _bProphetsReligionFoundedHere$[ebp]
	test	ecx, ecx
	jne	SHORT $LN4@AddProphet

; 3813 : 	{
; 3814 : 		if (eHolyCityReligion == ePressureRetainedReligion)

	mov	edx, DWORD PTR _eHolyCityReligion$[ebp]
	cmp	edx, DWORD PTR _ePressureRetainedReligion$[ebp]
	jne	SHORT $LN3@AddProphet

; 3815 : 		{
; 3816 : 			CvReligionInCity holyCityReligion(eHolyCityReligion, true/*bFoundedHere*/, 0, iPressureRetained);

	mov	eax, DWORD PTR _iPressureRetained$[ebp]
	push	eax
	push	0
	push	1
	mov	ecx, DWORD PTR _eHolyCityReligion$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _holyCityReligion$225860[ebp]
	call	??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z ; CvReligionInCity::CvReligionInCity

; 3817 : 			m_ReligionStatus.push_back(holyCityReligion);			

	lea	edx, DWORD PTR _holyCityReligion$225860[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back

; 3818 : 		}
; 3819 : 		else

	jmp	SHORT $LN4@AddProphet
$LN3@AddProphet:

; 3820 : 		{
; 3821 : 			CvReligionInCity holyCityReligion(eHolyCityReligion, true/*bFoundedHere*/, 0, 0);

	push	0
	push	0
	push	1
	mov	eax, DWORD PTR _eHolyCityReligion$[ebp]
	push	eax
	lea	ecx, DWORD PTR _holyCityReligion$225862[ebp]
	call	??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z ; CvReligionInCity::CvReligionInCity

; 3822 : 			m_ReligionStatus.push_back(holyCityReligion);

	lea	ecx, DWORD PTR _holyCityReligion$225862[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back
$LN4@AddProphet:

; 3823 : 		}
; 3824 : 	}
; 3825 : 
; 3826 : 	// Reestablish pressure-retained religion (if wasn't Holy City religion)
; 3827 : 	if (ePressureRetainedReligion != NO_RELIGION && eHolyCityReligion != ePressureRetainedReligion)

	cmp	DWORD PTR _ePressureRetainedReligion$[ebp], -1
	je	SHORT $LN1@AddProphet
	mov	edx, DWORD PTR _eHolyCityReligion$[ebp]
	cmp	edx, DWORD PTR _ePressureRetainedReligion$[ebp]
	je	SHORT $LN1@AddProphet

; 3828 : 	{
; 3829 : 		CvReligionInCity pressureRetainedReligion(ePressureRetainedReligion, false/*bFoundedHere*/, 0, iPressureRetained);

	mov	eax, DWORD PTR _iPressureRetained$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _ePressureRetainedReligion$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _pressureRetainedReligion$225864[ebp]
	call	??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z ; CvReligionInCity::CvReligionInCity

; 3830 : 		m_ReligionStatus.push_back(pressureRetainedReligion);

	lea	edx, DWORD PTR _pressureRetainedReligion$225864[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back
$LN1@AddProphet:

; 3831 : 	}
; 3832 : 
; 3833 : 	RecomputeFollowers(FOLLOWER_CHANGE_PROPHET, eOldMajorityReligion, eResponsiblePlayer);

	mov	eax, DWORD PTR _eResponsiblePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eOldMajorityReligion$[ebp]
	push	ecx
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers

; 3834 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?AddProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@HW4PlayerTypes@@@Z ENDP ; CvCityReligions::AddProphetSpread
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?AddReligiousPressure@CvCityReligions@@QAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@HW4PlayerTypes@@@Z
_TEXT	SEGMENT
tv135 = -128						; size = 4
tv160 = -124						; size = 4
_this$ = -120						; size = 4
$T237073 = -76						; size = 4
$T237063 = -72						; size = 4
$T237057 = -68						; size = 4
$T237044 = -64						; size = 4
$T237043 = -60						; size = 4
$T237042 = -56						; size = 4
$T237041 = -52						; size = 4
_newReligion$225892 = -48				; size = 24
_iErosionAmount$225888 = -24				; size = 4
_iPressureErosion$225886 = -20				; size = 4
_pReligion$225885 = -16					; size = 4
_bFoundIt$ = -9						; size = 1
_eOldMajorityReligion$ = -8				; size = 4
_it$ = -4						; size = 4
_eReason$ = 8						; size = 4
_eReligion$ = 12					; size = 4
_iPressure$ = 16					; size = 4
_eResponsiblePlayer$ = 20				; size = 4
?AddReligiousPressure@CvCityReligions@@QAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@HW4PlayerTypes@@@Z PROC ; CvCityReligions::AddReligiousPressure, COMDAT
; _this$ = ecx

; 3838 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	mov	DWORD PTR _this$[ebp], ecx

; 3839 : 	bool bFoundIt = false;

	mov	BYTE PTR _bFoundIt$[ebp], 0

; 3840 : 
; 3841 : 	ReligionTypes eOldMajorityReligion = GetReligiousMajority();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eOldMajorityReligion$[ebp], eax

; 3842 : 
; 3843 : 	ReligionInCityList::iterator it;
; 3844 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3845 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 3846 : #else
; 3847 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN15@AddReligio
$LN9@AddReligio:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], edx
$LN15@AddReligio:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	$LN8@AddReligio

; 3848 : #endif
; 3849 : 	{
; 3850 : 		if(it->m_eReligion == eReligion)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN7@AddReligio

; 3851 : 		{
; 3852 : 			it->m_iPressure += iPressure;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, DWORD PTR _iPressure$[ebp]
	mov	ecx, DWORD PTR _it$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 3853 : 			bFoundIt = true;

	mov	BYTE PTR _bFoundIt$[ebp], 1
	jmp	$LN6@AddReligio
$LN7@AddReligio:

; 3854 : 		}
; 3855 : 
; 3856 : 		//  If this is pressure from a real religion, reduce presence of pantheon by the same amount
; 3857 : 		else if(eReligion > RELIGION_PANTHEON && it->m_eReligion == RELIGION_PANTHEON)

	cmp	DWORD PTR _eReligion$[ebp], 0
	jle	SHORT $LN5@AddReligio
	mov	edx, DWORD PTR _it$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN5@AddReligio

; 3858 : 		{
; 3859 : 			it->m_iPressure = max(0, (it->m_iPressure - iPressure));

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, DWORD PTR _iPressure$[ebp]
	mov	DWORD PTR $T237041[ebp], ecx
	mov	DWORD PTR $T237042[ebp], 0
	mov	edx, DWORD PTR $T237042[ebp]
	cmp	edx, DWORD PTR $T237041[ebp]
	jge	SHORT $LN19@AddReligio
	lea	eax, DWORD PTR $T237041[ebp]
	mov	DWORD PTR tv160[ebp], eax
	jmp	SHORT $LN20@AddReligio
$LN19@AddReligio:
	lea	ecx, DWORD PTR $T237042[ebp]
	mov	DWORD PTR tv160[ebp], ecx
$LN20@AddReligio:
	mov	edx, DWORD PTR tv160[ebp]
	mov	DWORD PTR $T237057[ebp], edx
	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR $T237057[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+12], edx
	jmp	$LN6@AddReligio
$LN5@AddReligio:

; 3860 : 		}
; 3861 : 
; 3862 : 		else if (it->m_eReligion > RELIGION_PANTHEON && eReason == FOLLOWER_CHANGE_MISSIONARY)

	mov	eax, DWORD PTR _it$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	$LN6@AddReligio
	cmp	DWORD PTR _eReason$[ebp], 6
	jne	SHORT $LN6@AddReligio

; 3863 : 		{
; 3864 : 			const CvReligion *pReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, NO_PLAYER);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237063[ebp], ecx
	push	-1
	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T237063[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$225885[ebp], eax

; 3865 : 			int iPressureErosion = pReligion->m_Beliefs.GetOtherReligionPressureErosion();  // Normally 0

	mov	eax, DWORD PTR _pReligion$225885[ebp]
	mov	ecx, DWORD PTR [eax+260]
	mov	DWORD PTR _iPressureErosion$225886[ebp], ecx

; 3866 : 			if (iPressureErosion > 0)

	cmp	DWORD PTR _iPressureErosion$225886[ebp], 0
	jle	SHORT $LN6@AddReligio

; 3867 : 			{
; 3868 : 				int iErosionAmount = iPressureErosion * iPressure / 100;

	mov	eax, DWORD PTR _iPressureErosion$225886[ebp]
	imul	eax, DWORD PTR _iPressure$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iErosionAmount$225888[ebp], eax

; 3869 : 				it->m_iPressure = max(0, (it->m_iPressure - iErosionAmount));

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+12]
	sub	eax, DWORD PTR _iErosionAmount$225888[ebp]
	mov	DWORD PTR $T237043[ebp], eax
	mov	DWORD PTR $T237044[ebp], 0
	mov	ecx, DWORD PTR $T237044[ebp]
	cmp	ecx, DWORD PTR $T237043[ebp]
	jge	SHORT $LN27@AddReligio
	lea	edx, DWORD PTR $T237043[ebp]
	mov	DWORD PTR tv135[ebp], edx
	jmp	SHORT $LN28@AddReligio
$LN27@AddReligio:
	lea	eax, DWORD PTR $T237044[ebp]
	mov	DWORD PTR tv135[ebp], eax
$LN28@AddReligio:
	mov	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR $T237073[ebp], ecx
	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR $T237073[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+12], ecx
$LN6@AddReligio:

; 3870 : 			}
; 3871 : 		}
; 3872 : 	}

	jmp	$LN9@AddReligio
$LN8@AddReligio:

; 3873 : 
; 3874 : 	// Didn't find it, add new entry
; 3875 : 	if(!bFoundIt)

	movzx	edx, BYTE PTR _bFoundIt$[ebp]
	test	edx, edx
	jne	SHORT $LN1@AddReligio

; 3876 : 	{
; 3877 : 		CvReligionInCity newReligion(eReligion, false, 0, iPressure);

	mov	eax, DWORD PTR _iPressure$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _newReligion$225892[ebp]
	call	??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z ; CvReligionInCity::CvReligionInCity

; 3878 : 		m_ReligionStatus.push_back(newReligion);

	lea	edx, DWORD PTR _newReligion$225892[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back
$LN1@AddReligio:

; 3879 : 	}
; 3880 : 
; 3881 : 	RecomputeFollowers(eReason, eOldMajorityReligion, eResponsiblePlayer);

	mov	eax, DWORD PTR _eResponsiblePlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eOldMajorityReligion$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eReason$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers

; 3882 : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?AddReligiousPressure@CvCityReligions@@QAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@HW4PlayerTypes@@@Z ENDP ; CvCityReligions::AddReligiousPressure
_TEXT	ENDS
PUBLIC	?SimulateFollowers@CvCityReligions@@AAEXXZ	; CvCityReligions::SimulateFollowers
PUBLIC	?CopyToSimulatedStatus@CvCityReligions@@AAEXXZ	; CvCityReligions::CopyToSimulatedStatus
PUBLIC	?SimulateProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::SimulateProphetSpread
; Function compile flags: /Odtp
;	COMDAT ?SimulateProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@H@Z
_TEXT	SEGMENT
_this$ = -156						; size = 4
$T237153 = -116						; size = 4
_i$237147 = -112					; size = 4
$T237131 = -108						; size = 4
$T237127 = -104						; size = 4
_pressureRetainedReligion$225916 = -100			; size = 24
_iPressureRetention$225911 = -76			; size = 4
_pReligion$225910 = -72					; size = 4
_iAtheismPressure$ = -68				; size = 4
_ePressureRetainedReligion$ = -64			; size = 4
_atheism$ = -60						; size = 24
_prophetReligion$ = -36					; size = 24
_iPressureRetained$ = -12				; size = 4
_iReligionPressure$ = -8				; size = 4
_it$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_iPressure$ = 12					; size = 4
?SimulateProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@H@Z PROC ; CvCityReligions::SimulateProphetSpread, COMDAT
; _this$ = ecx

; 3886 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 156				; 0000009cH
	mov	DWORD PTR _this$[ebp], ecx

; 3887 : 	int iAtheismPressure = 0;

	mov	DWORD PTR _iAtheismPressure$[ebp], 0

; 3888 : 	int iReligionPressure = 0;

	mov	DWORD PTR _iReligionPressure$[ebp], 0

; 3889 : 	int iPressureRetained = 0;

	mov	DWORD PTR _iPressureRetained$[ebp], 0

; 3890 : 	ReligionTypes ePressureRetainedReligion = NO_RELIGION;

	mov	DWORD PTR _ePressureRetainedReligion$[ebp], -1

; 3891 : 
; 3892 : 	CopyToSimulatedStatus();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyToSimulatedStatus@CvCityReligions@@AAEXXZ ; CvCityReligions::CopyToSimulatedStatus

; 3893 : 
; 3894 : 	ReligionInCityList::iterator it;
; 3895 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3896 : 	for (it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); ++it)
; 3897 : #else
; 3898 : 	for(it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN9@SimulatePr
$LN8@SimulatePr:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], edx
$LN9@SimulatePr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 208				; 000000d0H
	mov	DWORD PTR $T237127[ebp], eax
	mov	ecx, DWORD PTR $T237127[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 24					; 00000018H
	mov	eax, DWORD PTR $T237127[ebp]
	add	edx, DWORD PTR [eax]
	cmp	DWORD PTR _it$[ebp], edx
	je	$LN7@SimulatePr

; 3899 : #endif
; 3900 : 	{
; 3901 : 		if(it->m_eReligion == NO_RELIGION)

	mov	ecx, DWORD PTR _it$[ebp]
	cmp	DWORD PTR [ecx], -1
	jne	SHORT $LN6@SimulatePr

; 3902 : 		{
; 3903 : 			iAtheismPressure = it->m_iPressure;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _iAtheismPressure$[ebp], eax
	jmp	SHORT $LN5@SimulatePr
$LN6@SimulatePr:

; 3904 : 		}
; 3905 : 		else if(eReligion == it->m_eReligion)

	mov	ecx, DWORD PTR _it$[ebp]
	mov	edx, DWORD PTR _eReligion$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN5@SimulatePr

; 3906 : 		{
; 3907 : 			iReligionPressure = it->m_iPressure;

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _iReligionPressure$[ebp], ecx
$LN5@SimulatePr:

; 3908 : 		}
; 3909 : 
; 3910 : 		if (it->m_eReligion > RELIGION_PANTHEON && eReligion != it->m_eReligion)

	mov	edx, DWORD PTR _it$[ebp]
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN3@SimulatePr
	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR _eReligion$[ebp]
	cmp	ecx, DWORD PTR [eax]
	je	SHORT $LN3@SimulatePr

; 3911 : 		{
; 3912 : 			const CvReligion *pReligion = GC.getGame().GetGameReligions()->GetReligion(it->m_eReligion, NO_PLAYER);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237131[ebp], edx
	push	-1
	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR $T237131[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$225910[ebp], eax

; 3913 : 			int iPressureRetention = pReligion->m_Beliefs.GetInquisitorPressureRetention();  // Normally 0

	mov	edx, DWORD PTR _pReligion$225910[ebp]
	mov	eax, DWORD PTR [edx+268]
	mov	DWORD PTR _iPressureRetention$225911[ebp], eax

; 3914 : 			if (iPressureRetention > 0)

	cmp	DWORD PTR _iPressureRetention$225911[ebp], 0
	jle	SHORT $LN3@SimulatePr

; 3915 : 			{
; 3916 : 				ePressureRetainedReligion = it->m_eReligion;

	mov	ecx, DWORD PTR _it$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _ePressureRetainedReligion$[ebp], edx

; 3917 : 				iPressureRetained = it->m_iPressure * iPressureRetention / 100;

	mov	eax, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [eax+12]
	imul	eax, DWORD PTR _iPressureRetention$225911[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iPressureRetained$[ebp], eax
$LN3@SimulatePr:

; 3918 : 			}
; 3919 : 		}
; 3920 : 	}

	jmp	$LN8@SimulatePr
$LN7@SimulatePr:

; 3921 : 
; 3922 : 	// Clear list
; 3923 : 	m_SimulatedStatus.clear();

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 208				; 000000d0H
	mov	DWORD PTR $T237153[ebp], edx
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN26@SimulatePr
	mov	DWORD PTR _i$237147[ebp], 0
	jmp	SHORT $LN24@SimulatePr
$LN23@SimulatePr:
	mov	ecx, DWORD PTR _i$237147[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$237147[ebp], ecx
$LN24@SimulatePr:
	mov	edx, DWORD PTR $T237153[ebp]
	mov	eax, DWORD PTR _i$237147[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jae	SHORT $LN26@SimulatePr
	jmp	SHORT $LN23@SimulatePr
$LN26@SimulatePr:
	mov	ecx, DWORD PTR $T237153[ebp]
	mov	DWORD PTR [ecx+4], 0

; 3924 : 
; 3925 : 	// Add atheists and this back in
; 3926 : 	CvReligionInCity atheism(NO_RELIGION, false, 0, iAtheismPressure);

	mov	edx, DWORD PTR _iAtheismPressure$[ebp]
	push	edx
	push	0
	push	0
	push	-1
	lea	ecx, DWORD PTR _atheism$[ebp]
	call	??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z ; CvReligionInCity::CvReligionInCity

; 3927 : 	m_SimulatedStatus.push_back(atheism);

	lea	eax, DWORD PTR _atheism$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back

; 3928 : 	CvReligionInCity prophetReligion(eReligion, false, 0, iReligionPressure + iPressure);

	mov	ecx, DWORD PTR _iReligionPressure$[ebp]
	add	ecx, DWORD PTR _iPressure$[ebp]
	push	ecx
	push	0
	push	0
	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	lea	ecx, DWORD PTR _prophetReligion$[ebp]
	call	??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z ; CvReligionInCity::CvReligionInCity

; 3929 : 	m_SimulatedStatus.push_back(prophetReligion);

	lea	eax, DWORD PTR _prophetReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back

; 3930 : 
; 3931 : 	if (ePressureRetainedReligion != NO_RELIGION)

	cmp	DWORD PTR _ePressureRetainedReligion$[ebp], -1
	je	SHORT $LN1@SimulatePr

; 3932 : 	{
; 3933 : 		CvReligionInCity pressureRetainedReligion(ePressureRetainedReligion, false, 0, iPressureRetained);

	mov	ecx, DWORD PTR _iPressureRetained$[ebp]
	push	ecx
	push	0
	push	0
	mov	edx, DWORD PTR _ePressureRetainedReligion$[ebp]
	push	edx
	lea	ecx, DWORD PTR _pressureRetainedReligion$225916[ebp]
	call	??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z ; CvReligionInCity::CvReligionInCity

; 3934 : 		m_SimulatedStatus.push_back(pressureRetainedReligion);

	lea	eax, DWORD PTR _pressureRetainedReligion$225916[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back
$LN1@SimulatePr:

; 3935 : 
; 3936 : 	}
; 3937 : 
; 3938 : 	SimulateFollowers();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SimulateFollowers@CvCityReligions@@AAEXXZ ; CvCityReligions::SimulateFollowers

; 3939 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SimulateProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ENDP ; CvCityReligions::SimulateProphetSpread
_TEXT	ENDS
PUBLIC	?SimulateReligiousPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::SimulateReligiousPressure
; Function compile flags: /Odtp
;	COMDAT ?SimulateReligiousPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z
_TEXT	SEGMENT
tv135 = -128						; size = 4
tv158 = -124						; size = 4
_this$ = -120						; size = 4
$T237224 = -76						; size = 4
$T237214 = -72						; size = 4
$T237208 = -68						; size = 4
$T237201 = -64						; size = 4
$T237194 = -60						; size = 4
$T237193 = -56						; size = 4
$T237192 = -52						; size = 4
$T237191 = -48						; size = 4
_newReligion$225941 = -44				; size = 24
_iErosionAmount$225937 = -20				; size = 4
_iPressureErosion$225935 = -16				; size = 4
_pReligion$225934 = -12					; size = 4
_bFoundIt$ = -5						; size = 1
_it$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_iPressure$ = 12					; size = 4
?SimulateReligiousPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z PROC ; CvCityReligions::SimulateReligiousPressure, COMDAT
; _this$ = ecx

; 3943 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	mov	DWORD PTR _this$[ebp], ecx

; 3944 : 	bool bFoundIt = false;

	mov	BYTE PTR _bFoundIt$[ebp], 0

; 3945 : 
; 3946 : 	CopyToSimulatedStatus();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyToSimulatedStatus@CvCityReligions@@AAEXXZ ; CvCityReligions::CopyToSimulatedStatus

; 3947 : 
; 3948 : 	ReligionInCityList::iterator it;
; 3949 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3950 : 	for (it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); ++it)
; 3951 : #else
; 3952 : 	for(it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN10@SimulateRe
$LN9@SimulateRe:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], edx
$LN10@SimulateRe:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 208				; 000000d0H
	mov	DWORD PTR $T237201[ebp], eax
	mov	ecx, DWORD PTR $T237201[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 24					; 00000018H
	mov	eax, DWORD PTR $T237201[ebp]
	add	edx, DWORD PTR [eax]
	cmp	DWORD PTR _it$[ebp], edx
	je	$LN8@SimulateRe

; 3953 : #endif
; 3954 : 	{
; 3955 : 		if(it->m_eReligion == eReligion)

	mov	ecx, DWORD PTR _it$[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN7@SimulateRe

; 3956 : 		{
; 3957 : 			it->m_iPressure += iPressure;

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, DWORD PTR _iPressure$[ebp]
	mov	edx, DWORD PTR _it$[ebp]
	mov	DWORD PTR [edx+12], ecx

; 3958 : 			bFoundIt = true;

	mov	BYTE PTR _bFoundIt$[ebp], 1
	jmp	$LN6@SimulateRe
$LN7@SimulateRe:

; 3959 : 		}
; 3960 : 
; 3961 : 		//  If this is pressure from a real religion, reduce presence of pantheon by the same amount
; 3962 : 		else if(eReligion > RELIGION_PANTHEON && it->m_eReligion == RELIGION_PANTHEON)

	cmp	DWORD PTR _eReligion$[ebp], 0
	jle	SHORT $LN5@SimulateRe
	mov	eax, DWORD PTR _it$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@SimulateRe

; 3963 : 		{
; 3964 : 			it->m_iPressure = max(0, (it->m_iPressure - iPressure));

	mov	ecx, DWORD PTR _it$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	sub	edx, DWORD PTR _iPressure$[ebp]
	mov	DWORD PTR $T237191[ebp], edx
	mov	DWORD PTR $T237192[ebp], 0
	mov	eax, DWORD PTR $T237192[ebp]
	cmp	eax, DWORD PTR $T237191[ebp]
	jge	SHORT $LN19@SimulateRe
	lea	ecx, DWORD PTR $T237191[ebp]
	mov	DWORD PTR tv158[ebp], ecx
	jmp	SHORT $LN20@SimulateRe
$LN19@SimulateRe:
	lea	edx, DWORD PTR $T237192[ebp]
	mov	DWORD PTR tv158[ebp], edx
$LN20@SimulateRe:
	mov	eax, DWORD PTR tv158[ebp]
	mov	DWORD PTR $T237208[ebp], eax
	mov	ecx, DWORD PTR _it$[ebp]
	mov	edx, DWORD PTR $T237208[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+12], eax
	jmp	$LN6@SimulateRe
$LN5@SimulateRe:

; 3965 : 		}
; 3966 : 
; 3967 : 		else if (it->m_eReligion > RELIGION_PANTHEON)

	mov	ecx, DWORD PTR _it$[ebp]
	cmp	DWORD PTR [ecx], 0
	jle	SHORT $LN6@SimulateRe

; 3968 : 		{
; 3969 : 			const CvReligion *pReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, NO_PLAYER);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237214[ebp], edx
	push	-1
	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T237214[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$225934[ebp], eax

; 3970 : 			int iPressureErosion = pReligion->m_Beliefs.GetOtherReligionPressureErosion();  // Normally 0

	mov	ecx, DWORD PTR _pReligion$225934[ebp]
	mov	edx, DWORD PTR [ecx+260]
	mov	DWORD PTR _iPressureErosion$225935[ebp], edx

; 3971 : 			if (iPressureErosion > 0)

	cmp	DWORD PTR _iPressureErosion$225935[ebp], 0
	jle	SHORT $LN6@SimulateRe

; 3972 : 			{
; 3973 : 				int iErosionAmount = iPressureErosion * iPressure / 100;

	mov	eax, DWORD PTR _iPressureErosion$225935[ebp]
	imul	eax, DWORD PTR _iPressure$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iErosionAmount$225937[ebp], eax

; 3974 : 				it->m_iPressure = max(0, (it->m_iPressure - iErosionAmount));

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+12]
	sub	eax, DWORD PTR _iErosionAmount$225937[ebp]
	mov	DWORD PTR $T237193[ebp], eax
	mov	DWORD PTR $T237194[ebp], 0
	mov	ecx, DWORD PTR $T237194[ebp]
	cmp	ecx, DWORD PTR $T237193[ebp]
	jge	SHORT $LN27@SimulateRe
	lea	edx, DWORD PTR $T237193[ebp]
	mov	DWORD PTR tv135[ebp], edx
	jmp	SHORT $LN28@SimulateRe
$LN27@SimulateRe:
	lea	eax, DWORD PTR $T237194[ebp]
	mov	DWORD PTR tv135[ebp], eax
$LN28@SimulateRe:
	mov	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR $T237224[ebp], ecx
	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR $T237224[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+12], ecx
$LN6@SimulateRe:

; 3975 : 			}
; 3976 : 		}
; 3977 : 	}

	jmp	$LN9@SimulateRe
$LN8@SimulateRe:

; 3978 : 
; 3979 : 	// Didn't find it, add new entry
; 3980 : 	if(!bFoundIt)

	movzx	edx, BYTE PTR _bFoundIt$[ebp]
	test	edx, edx
	jne	SHORT $LN1@SimulateRe

; 3981 : 	{
; 3982 : 		CvReligionInCity newReligion(eReligion, false, 0, iPressure);

	mov	eax, DWORD PTR _iPressure$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _newReligion$225941[ebp]
	call	??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z ; CvReligionInCity::CvReligionInCity

; 3983 : 		m_SimulatedStatus.push_back(newReligion);

	lea	edx, DWORD PTR _newReligion$225941[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back
$LN1@SimulateRe:

; 3984 : 	}
; 3985 : 
; 3986 : 	SimulateFollowers();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SimulateFollowers@CvCityReligions@@AAEXXZ ; CvCityReligions::SimulateFollowers

; 3987 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?SimulateReligiousPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ENDP ; CvCityReligions::SimulateReligiousPressure
_TEXT	ENDS
PUBLIC	?ConvertPercentFollowers@CvCityReligions@@QAEXW4ReligionTypes@@0H@Z ; CvCityReligions::ConvertPercentFollowers
; Function compile flags: /Odtp
;	COMDAT ?ConvertPercentFollowers@CvCityReligions@@QAEXW4ReligionTypes@@0H@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
_iPressureConverting$ = -8				; size = 4
_it$ = -4						; size = 4
_eToReligion$ = 8					; size = 4
_eFromReligion$ = 12					; size = 4
_iPercent$ = 16						; size = 4
?ConvertPercentFollowers@CvCityReligions@@QAEXW4ReligionTypes@@0H@Z PROC ; CvCityReligions::ConvertPercentFollowers, COMDAT
; _this$ = ecx

; 3991 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 3992 : 	int iPressureConverting = 0;

	mov	DWORD PTR _iPressureConverting$[ebp], 0

; 3993 : 
; 3994 : 	// Find old religion
; 3995 : 	ReligionInCityList::iterator it;
; 3996 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3997 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 3998 : #else
; 3999 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN10@ConvertPer
$LN4@ConvertPer:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], edx
$LN10@ConvertPer:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN3@ConvertPer

; 4000 : #endif
; 4001 : 	{
; 4002 : 		if(it->m_eReligion == eFromReligion)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _eFromReligion$[ebp]
	jne	SHORT $LN2@ConvertPer

; 4003 : 		{
; 4004 : 			iPressureConverting = it->m_iPressure * iPercent / 100;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+12]
	imul	eax, DWORD PTR _iPercent$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iPressureConverting$[ebp], eax

; 4005 : 			it->m_iPressure -= iPressureConverting;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+12]
	sub	eax, DWORD PTR _iPressureConverting$[ebp]
	mov	ecx, DWORD PTR _it$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 4006 : 			if (it->m_iPressure < 0)

	mov	edx, DWORD PTR _it$[ebp]
	cmp	DWORD PTR [edx+12], 0
	jge	SHORT $LN2@ConvertPer

; 4007 : 			{
; 4008 : 				it->m_iPressure = 0;

	mov	eax, DWORD PTR _it$[ebp]
	mov	DWORD PTR [eax+12], 0
$LN2@ConvertPer:

; 4009 : 			}
; 4010 : 		}
; 4011 : 	}

	jmp	SHORT $LN4@ConvertPer
$LN3@ConvertPer:

; 4012 : 	AddReligiousPressure(FOLLOWER_CHANGE_SCRIPTED_CONVERSION, eToReligion, iPressureConverting, NO_PLAYER);

	push	-1
	mov	ecx, DWORD PTR _iPressureConverting$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eToReligion$[ebp]
	push	edx
	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddReligiousPressure@CvCityReligions@@QAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@HW4PlayerTypes@@@Z ; CvCityReligions::AddReligiousPressure

; 4013 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ConvertPercentFollowers@CvCityReligions@@QAEXW4ReligionTypes@@0H@Z ENDP ; CvCityReligions::ConvertPercentFollowers
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?AddHolyCityPressure@CvCityReligions@@QAEXXZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T237293 = -24						; size = 4
$T237289 = -20						; size = 4
_iPressure$225965 = -16					; size = 4
_bRecompute$ = -9					; size = 1
_eOldMajorityReligion$ = -8				; size = 4
_it$ = -4						; size = 4
?AddHolyCityPressure@CvCityReligions@@QAEXXZ PROC	; CvCityReligions::AddHolyCityPressure, COMDAT
; _this$ = ecx

; 4017 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 4018 : 	bool bRecompute = false;

	mov	BYTE PTR _bRecompute$[ebp], 0

; 4019 : 	ReligionTypes eOldMajorityReligion = GetReligiousMajority();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eOldMajorityReligion$[ebp], eax

; 4020 : 
; 4021 : 	ReligionInCityList::iterator it;
; 4022 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4023 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4024 : #else
; 4025 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN10@AddHolyCit
$LN4@AddHolyCit:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], edx
$LN10@AddHolyCit:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN3@AddHolyCit

; 4026 : #endif
; 4027 : 	{
; 4028 : 		if(it->m_bFoundedHere)

	mov	eax, DWORD PTR _it$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN2@AddHolyCit

; 4029 : 		{
; 4030 : 			int iPressure = GC.getGame().getGameSpeedInfo().getReligiousPressureAdjacentCity();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237289[ebp], edx
	mov	ecx, DWORD PTR $T237289[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getReligiousPressureAdjacentCity@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getReligiousPressureAdjacentCity
	mov	DWORD PTR _iPressure$225965[ebp], eax

; 4031 : 			iPressure *=  GC.getRELIGION_PER_TURN_FOUNDING_CITY_PRESSURE();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7896
	mov	DWORD PTR $T237293[ebp], eax
	mov	ecx, DWORD PTR _iPressure$225965[ebp]
	imul	ecx, DWORD PTR $T237293[ebp]
	mov	DWORD PTR _iPressure$225965[ebp], ecx

; 4032 : 			it->m_iPressure += iPressure;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, DWORD PTR _iPressure$225965[ebp]
	mov	ecx, DWORD PTR _it$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 4033 : 
; 4034 : 			// Found it, so we're done
; 4035 : 			bRecompute = true;

	mov	BYTE PTR _bRecompute$[ebp], 1
$LN2@AddHolyCit:

; 4036 : 		}
; 4037 : 	}

	jmp	SHORT $LN4@AddHolyCit
$LN3@AddHolyCit:

; 4038 : 
; 4039 : 	// Didn't find it, add new entry
; 4040 : 	if(bRecompute)

	movzx	edx, BYTE PTR _bRecompute$[ebp]
	test	edx, edx
	je	SHORT $LN6@AddHolyCit

; 4041 : 	{
; 4042 : 		RecomputeFollowers(FOLLOWER_CHANGE_HOLY_CITY, eOldMajorityReligion);

	push	-1
	mov	eax, DWORD PTR _eOldMajorityReligion$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers
$LN6@AddHolyCit:

; 4043 : 	}
; 4044 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?AddHolyCityPressure@CvCityReligions@@QAEXXZ ENDP	; CvCityReligions::AddHolyCityPressure
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?AddSpyPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T237305 = -20						; size = 4
_iPressure$225979 = -16					; size = 4
_bRecompute$ = -9					; size = 1
_eOldMajorityReligion$ = -8				; size = 4
_it$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_iBasePressure$ = 12					; size = 4
?AddSpyPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z PROC ; CvCityReligions::AddSpyPressure, COMDAT
; _this$ = ecx

; 4048 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 4049 : 	bool bRecompute = false;

	mov	BYTE PTR _bRecompute$[ebp], 0

; 4050 : 	ReligionTypes eOldMajorityReligion = GetReligiousMajority();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eOldMajorityReligion$[ebp], eax

; 4051 : 
; 4052 : 	ReligionInCityList::iterator it;
; 4053 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4054 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4055 : #else
; 4056 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN10@AddSpyPres
$LN4@AddSpyPres:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], edx
$LN10@AddSpyPres:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN3@AddSpyPres

; 4057 : #endif
; 4058 : 	{
; 4059 : 		if(it->m_eReligion == eReligion)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN2@AddSpyPres

; 4060 : 		{
; 4061 : 			int iPressure = GC.getGame().getGameSpeedInfo().getReligiousPressureAdjacentCity();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237305[ebp], edx
	mov	ecx, DWORD PTR $T237305[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getReligiousPressureAdjacentCity@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getReligiousPressureAdjacentCity
	mov	DWORD PTR _iPressure$225979[ebp], eax

; 4062 : 			iPressure *= iBasePressure;

	mov	eax, DWORD PTR _iPressure$225979[ebp]
	imul	eax, DWORD PTR _iBasePressure$[ebp]
	mov	DWORD PTR _iPressure$225979[ebp], eax

; 4063 : 			it->m_iPressure += iPressure;

	mov	ecx, DWORD PTR _it$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	add	edx, DWORD PTR _iPressure$225979[ebp]
	mov	eax, DWORD PTR _it$[ebp]
	mov	DWORD PTR [eax+12], edx

; 4064 : 
; 4065 : 			// Found it, so we're done
; 4066 : 			bRecompute = true;

	mov	BYTE PTR _bRecompute$[ebp], 1
$LN2@AddSpyPres:

; 4067 : 		}
; 4068 : 	}

	jmp	SHORT $LN4@AddSpyPres
$LN3@AddSpyPres:

; 4069 : 
; 4070 : 	// Didn't find it, add new entry
; 4071 : 	if(bRecompute)

	movzx	ecx, BYTE PTR _bRecompute$[ebp]
	test	ecx, ecx
	je	SHORT $LN6@AddSpyPres

; 4072 : 	{
; 4073 : 		RecomputeFollowers(FOLLOWER_CHANGE_SPY_PRESSURE, eOldMajorityReligion);

	push	-1
	mov	edx, DWORD PTR _eOldMajorityReligion$[ebp]
	push	edx
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers
$LN6@AddSpyPres:

; 4074 : 	}
; 4075 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?AddSpyPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ENDP ; CvCityReligions::AddSpyPressure
_TEXT	ENDS
PUBLIC	?AdoptReligionFully@CvCityReligions@@QAEXW4ReligionTypes@@@Z ; CvCityReligions::AdoptReligionFully
; Function compile flags: /Odtp
;	COMDAT ?AdoptReligionFully@CvCityReligions@@QAEXW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -80						; size = 4
$T237340 = -40						; size = 4
$T237329 = -32						; size = 4
_i$237320 = -28						; size = 4
_religion$ = -24					; size = 24
_eReligion$ = 8						; size = 4
?AdoptReligionFully@CvCityReligions@@QAEXW4ReligionTypes@@@Z PROC ; CvCityReligions::AdoptReligionFully, COMDAT
; _this$ = ecx

; 4079 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	mov	DWORD PTR _this$[ebp], ecx

; 4080 : 	m_ReligionStatus.clear();

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN9@AdoptRelig
	mov	DWORD PTR _i$237320[ebp], 0
	jmp	SHORT $LN7@AdoptRelig
$LN6@AdoptRelig:
	mov	ecx, DWORD PTR _i$237320[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$237320[ebp], ecx
$LN7@AdoptRelig:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$237320[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jae	SHORT $LN9@AdoptRelig
	jmp	SHORT $LN6@AdoptRelig
$LN9@AdoptRelig:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 4081 : 
; 4082 : 	CvReligionInCity religion;

	lea	ecx, DWORD PTR _religion$[ebp]
	call	??0CvReligionInCity@@QAE@XZ		; CvReligionInCity::CvReligionInCity

; 4083 : 
; 4084 : 	// Add 1 pop of Atheism (needed in case other religions wiped out by an Inquisitor/Prophet
; 4085 : 	religion.m_bFoundedHere = false;

	mov	BYTE PTR _religion$[ebp+4], 0

; 4086 : 	religion.m_eReligion = NO_RELIGION;

	mov	DWORD PTR _religion$[ebp], -1

; 4087 : 	religion.m_iFollowers = 1;

	mov	DWORD PTR _religion$[ebp+8], 1

; 4088 : 	religion.m_iPressure = religion.m_iFollowers * GC.getRELIGION_ATHEISM_PRESSURE_PER_POP();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7888
	mov	DWORD PTR $T237329[ebp], edx
	mov	eax, DWORD PTR _religion$[ebp+8]
	imul	eax, DWORD PTR $T237329[ebp]
	mov	DWORD PTR _religion$[ebp+12], eax

; 4089 : 	m_ReligionStatus.push_back(religion);

	lea	ecx, DWORD PTR _religion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back

; 4090 : 
; 4091 : 	// Now add full pop of this religion
; 4092 : 	religion.m_bFoundedHere = false;

	mov	BYTE PTR _religion$[ebp+4], 0

; 4093 : 	religion.m_eReligion = eReligion;

	mov	edx, DWORD PTR _eReligion$[ebp]
	mov	DWORD PTR _religion$[ebp], edx

; 4094 : 	religion.m_iFollowers = m_pCity->getPopulation();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	mov	DWORD PTR _religion$[ebp+8], eax

; 4095 : 	religion.m_iPressure = religion.m_iFollowers * GC.getRELIGION_ATHEISM_PRESSURE_PER_POP();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7888
	mov	DWORD PTR $T237340[ebp], ecx
	mov	edx, DWORD PTR _religion$[ebp+8]
	imul	edx, DWORD PTR $T237340[ebp]
	mov	DWORD PTR _religion$[ebp+12], edx

; 4096 : 	m_ReligionStatus.push_back(religion);

	lea	eax, DWORD PTR _religion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back

; 4097 : 
; 4098 : 	m_pCity->UpdateReligion(eReligion);

	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+416]
	call	?UpdateReligion@CvCity@@QAEXW4ReligionTypes@@@Z ; CvCity::UpdateReligion

; 4099 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?AdoptReligionFully@CvCityReligions@@QAEXW4ReligionTypes@@@Z ENDP ; CvCityReligions::AdoptReligionFully
_TEXT	ENDS
PUBLIC	?erase@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEXPAVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::erase
PUBLIC	?RemoveFormerPantheon@CvCityReligions@@QAEXXZ	; CvCityReligions::RemoveFormerPantheon
; Function compile flags: /Odtp
;	COMDAT ?RemoveFormerPantheon@CvCityReligions@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
_bFoundIt$ = -9						; size = 1
_eOldMajorityReligion$ = -8				; size = 4
_it$ = -4						; size = 4
?RemoveFormerPantheon@CvCityReligions@@QAEXXZ PROC	; CvCityReligions::RemoveFormerPantheon, COMDAT
; _this$ = ecx

; 4103 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 4104 : #ifndef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4105 : 	bool bFoundIt = false;

	mov	BYTE PTR _bFoundIt$[ebp], 0

; 4106 : #endif
; 4107 : 	ReligionTypes eOldMajorityReligion = GetReligiousMajority();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eOldMajorityReligion$[ebp], eax

; 4108 : 
; 4109 : 	ReligionInCityList::iterator it;
; 4110 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4111 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4112 : #else
; 4113 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end() && !bFoundIt; it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN9@RemoveForm
$LN3@RemoveForm:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], edx
$LN9@RemoveForm:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN2@RemoveForm
	movzx	eax, BYTE PTR _bFoundIt$[ebp]
	test	eax, eax
	jne	SHORT $LN2@RemoveForm

; 4114 : #endif
; 4115 : 	{
; 4116 : 		if(it->m_eReligion == RELIGION_PANTHEON)

	mov	ecx, DWORD PTR _it$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN1@RemoveForm

; 4117 : 		{
; 4118 : 			m_ReligionStatus.erase(it);

	mov	edx, DWORD PTR _it$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEXPAVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::erase

; 4119 : 
; 4120 : 			// Found it, so we're done
; 4121 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4122 : 			break;
; 4123 : #else
; 4124 : 			bFoundIt = true;

	mov	BYTE PTR _bFoundIt$[ebp], 1
$LN1@RemoveForm:

; 4125 : #endif
; 4126 : 		}
; 4127 : 	}

	jmp	SHORT $LN3@RemoveForm
$LN2@RemoveForm:

; 4128 : 
; 4129 : 	RecomputeFollowers(FOLLOWER_CHANGE_CONQUEST, eOldMajorityReligion);

	push	-1
	mov	eax, DWORD PTR _eOldMajorityReligion$[ebp]
	push	eax
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers

; 4130 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RemoveFormerPantheon@CvCityReligions@@QAEXXZ ENDP	; CvCityReligions::RemoveFormerPantheon
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RemoveOtherReligions
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z$0
__ehfuncinfo$?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -276						; size = 4
$T237427 = -256						; size = 4
_i$237412 = -252					; size = 4
_pReligion$226013 = -244				; size = 4
_iPressureRetained$226010 = -240			; size = 4
_eLoopReligion$226011 = -236				; size = 4
_eOldMajorityReligion$ = -232				; size = 4
_tempList$ = -228					; size = 208
__$ArrayPad$ = -20					; size = 4
_it$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_eReligion$ = 8						; size = 4
_eResponsiblePlayer$ = 12				; size = 4
?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvCityReligions::RemoveOtherReligions, COMDAT
; _this$ = ecx

; 4134 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 4135 : 	ReligionTypes eOldMajorityReligion = GetReligiousMajority();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eOldMajorityReligion$[ebp], eax

; 4136 : 
; 4137 : 	// Copy list
; 4138 : 	ReligionInCityList tempList;

	lea	ecx, DWORD PTR _tempList$[ebp]
	call	??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligionInCity,8,0,297,0>::FStaticVector<CvReligionInCity,8,0,297,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 4139 : 	ReligionInCityList::iterator it;
; 4140 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4141 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4142 : #else
; 4143 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN21@RemoveOthe
$LN9@RemoveOthe:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], edx
$LN21@RemoveOthe:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN8@RemoveOthe

; 4144 : #endif
; 4145 : 	{
; 4146 : 		tempList.push_back(*it);

	mov	eax, DWORD PTR _it$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tempList$[ebp]
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back

; 4147 : 	}

	jmp	SHORT $LN9@RemoveOthe
$LN8@RemoveOthe:

; 4148 : 
; 4149 : 	// Erase old list
; 4150 : 	m_ReligionStatus.clear();

	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN36@RemoveOthe
	mov	DWORD PTR _i$237412[ebp], 0
	jmp	SHORT $LN34@RemoveOthe
$LN33@RemoveOthe:
	mov	edx, DWORD PTR _i$237412[ebp]
	add	edx, 1
	mov	DWORD PTR _i$237412[ebp], edx
$LN34@RemoveOthe:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$237412[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN36@RemoveOthe
	jmp	SHORT $LN33@RemoveOthe
$LN36@RemoveOthe:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 4151 : 
; 4152 : 	// Recopy just what we want to keep
; 4153 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4154 : 	for (it = tempList.begin(); it != tempList.end(); ++it)
; 4155 : #else
; 4156 : 	for(it = tempList.begin(); it != tempList.end(); it++)

	mov	eax, DWORD PTR _tempList$[ebp]
	mov	DWORD PTR _it$[ebp], eax
	jmp	SHORT $LN40@RemoveOthe
$LN6@RemoveOthe:
	mov	ecx, DWORD PTR _it$[ebp]
	add	ecx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], ecx
$LN40@RemoveOthe:
	mov	edx, DWORD PTR _tempList$[ebp+4]
	imul	edx, 24					; 00000018H
	add	edx, DWORD PTR _tempList$[ebp]
	cmp	DWORD PTR _it$[ebp], edx
	je	$LN5@RemoveOthe

; 4157 : #endif
; 4158 : 	{
; 4159 : 		int iPressureRetained = 0;

	mov	DWORD PTR _iPressureRetained$226010[ebp], 0

; 4160 : 
; 4161 : 		ReligionTypes eLoopReligion = it->m_eReligion;

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _eLoopReligion$226011[ebp], ecx

; 4162 : 		if (eLoopReligion > RELIGION_PANTHEON && eLoopReligion != eReligion)

	cmp	DWORD PTR _eLoopReligion$226011[ebp], 0
	jle	SHORT $LN4@RemoveOthe
	mov	edx, DWORD PTR _eLoopReligion$226011[ebp]
	cmp	edx, DWORD PTR _eReligion$[ebp]
	je	SHORT $LN4@RemoveOthe

; 4163 : 		{
; 4164 : 			const CvReligion *pReligion = GC.getGame().GetGameReligions()->GetReligion(eLoopReligion, NO_PLAYER);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237427[ebp], eax
	push	-1
	mov	ecx, DWORD PTR _eLoopReligion$226011[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T237427[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$226013[ebp], eax

; 4165 : 			iPressureRetained = pReligion->m_Beliefs.GetInquisitorPressureRetention();  // Normally 0

	mov	edx, DWORD PTR _pReligion$226013[ebp]
	mov	eax, DWORD PTR [edx+268]
	mov	DWORD PTR _iPressureRetained$226010[ebp], eax
$LN4@RemoveOthe:

; 4166 : 		}
; 4167 : 
; 4168 : 		if (eLoopReligion == NO_RELIGION || eLoopReligion == eReligion || iPressureRetained > 0)

	cmp	DWORD PTR _eLoopReligion$226011[ebp], -1
	je	SHORT $LN2@RemoveOthe
	mov	ecx, DWORD PTR _eLoopReligion$226011[ebp]
	cmp	ecx, DWORD PTR _eReligion$[ebp]
	je	SHORT $LN2@RemoveOthe
	cmp	DWORD PTR _iPressureRetained$226010[ebp], 0
	jle	SHORT $LN3@RemoveOthe
$LN2@RemoveOthe:

; 4169 : 		{
; 4170 : 			if (iPressureRetained > 0)

	cmp	DWORD PTR _iPressureRetained$226010[ebp], 0
	jle	SHORT $LN1@RemoveOthe

; 4171 : 			{
; 4172 : 				it->m_iPressure = it->m_iPressure * iPressureRetained / 100;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+12]
	imul	eax, DWORD PTR _iPressureRetained$226010[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	edx, DWORD PTR _it$[ebp]
	mov	DWORD PTR [edx+12], eax
$LN1@RemoveOthe:

; 4173 : 			}
; 4174 : 
; 4175 : 			m_ReligionStatus.push_back(*it);

	mov	eax, DWORD PTR _it$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back
$LN3@RemoveOthe:

; 4176 : 		}
; 4177 : 	}

	jmp	$LN6@RemoveOthe
$LN5@RemoveOthe:

; 4178 : 
; 4179 : 	RecomputeFollowers(FOLLOWER_CHANGE_REMOVE_HERESY, eOldMajorityReligion, eResponsiblePlayer);

	mov	ecx, DWORD PTR _eResponsiblePlayer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eOldMajorityReligion$[ebp]
	push	edx
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers

; 4180 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tempList$[ebp]
	call	??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligionInCity,8,0,297,0>::~FStaticVector<CvReligionInCity,8,0,297,0>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _tempList$[ebp]
	jmp	??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligionInCity,8,0,297,0>::~FStaticVector<CvReligionInCity,8,0,297,0>
__ehhandler$?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-268]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvCityReligions::RemoveOtherReligions
PUBLIC	?UpdateNumTradeRouteConnections@CvCityReligions@@QAEXPAVCvCity@@@Z ; CvCityReligions::UpdateNumTradeRouteConnections
; Function compile flags: /Odtp
;	COMDAT ?UpdateNumTradeRouteConnections@CvCityReligions@@QAEXPAVCvCity@@@Z
_TEXT	SEGMENT
_this$ = -128						; size = 4
$T237527 = -44						; size = 4
$T237518 = -40						; size = 4
$T237509 = -36						; size = 4
$T237500 = -32						; size = 4
$T237485 = -28						; size = 4
$T237481 = -24						; size = 4
_iDistanceMod$ = -20					; size = 4
_iDistance$ = -16					; size = 4
_eReligiousMajority$ = -12				; size = 4
_bWithinDistance$ = -5					; size = 1
_pReligion$ = -4					; size = 4
_pOtherCity$ = 8					; size = 4
?UpdateNumTradeRouteConnections@CvCityReligions@@QAEXPAVCvCity@@@Z PROC ; CvCityReligions::UpdateNumTradeRouteConnections, COMDAT
; _this$ = ecx

; 4184 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	mov	DWORD PTR _this$[ebp], ecx

; 4185 : 	ReligionTypes eReligiousMajority = GetReligiousMajority();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eReligiousMajority$[ebp], eax

; 4186 : 
; 4187 : 	// if there isn't a religious connection, whatvz
; 4188 : 	if (eReligiousMajority == NO_RELIGION)

	cmp	DWORD PTR _eReligiousMajority$[ebp], -1
	jne	SHORT $LN9@UpdateNumT

; 4189 : 	{
; 4190 : 		return;

	jmp	$LN5@UpdateNumT

; 4191 : 	}
; 4192 : 
; 4193 : 	const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eReligiousMajority, m_pCity->getOwner());

$LN9@UpdateNumT:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T237481[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237485[ebp], eax
	mov	ecx, DWORD PTR $T237481[ebp]
	push	ecx
	mov	edx, DWORD PTR _eReligiousMajority$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T237485[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$[ebp], eax

; 4194 : 	if (!pReligion)

	cmp	DWORD PTR _pReligion$[ebp], 0
	jne	SHORT $LN3@UpdateNumT

; 4195 : 	{
; 4196 : 		return;

	jmp	$LN5@UpdateNumT
$LN3@UpdateNumT:

; 4197 : 	}
; 4198 : 
; 4199 : 	// Are the cities within the minimum distance?
; 4200 : 	int iDistance = GC.getRELIGION_ADJACENT_CITY_DISTANCE();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7904
	mov	DWORD PTR _iDistance$[ebp], eax

; 4201 : 
; 4202 : 	// Boost to distance due to belief?
; 4203 : 	int iDistanceMod = pReligion->m_Beliefs.GetSpreadDistanceModifier();

	mov	ecx, DWORD PTR _pReligion$[ebp]
	mov	edx, DWORD PTR [ecx+188]
	mov	DWORD PTR _iDistanceMod$[ebp], edx

; 4204 : 	if(iDistanceMod > 0)

	cmp	DWORD PTR _iDistanceMod$[ebp], 0
	jle	SHORT $LN19@UpdateNumT

; 4205 : 	{
; 4206 : 		iDistance *= (100 + iDistanceMod);

	mov	eax, DWORD PTR _iDistanceMod$[ebp]
	add	eax, 100				; 00000064H
	imul	eax, DWORD PTR _iDistance$[ebp]
	mov	DWORD PTR _iDistance$[ebp], eax

; 4207 : 		iDistance /= 100;

	mov	eax, DWORD PTR _iDistance$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iDistance$[ebp], eax

; 4208 : 	}
; 4209 : 
; 4210 : 	bool bWithinDistance = (plotDistance(m_pCity->getX(), m_pCity->getY(), pOtherCity->getX(), pOtherCity->getY()) <= iDistance);

$LN19@UpdateNumT:
	mov	edx, DWORD PTR _pOtherCity$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T237500[ebp], eax
	mov	ecx, DWORD PTR _pOtherCity$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T237509[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T237518[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T237527[ebp], edx
	mov	eax, DWORD PTR $T237500[ebp]
	push	eax
	mov	ecx, DWORD PTR $T237509[ebp]
	push	ecx
	mov	edx, DWORD PTR $T237518[ebp]
	push	edx
	mov	eax, DWORD PTR $T237527[ebp]
	push	eax
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	xor	ecx, ecx
	cmp	eax, DWORD PTR _iDistance$[ebp]
	setle	cl
	mov	BYTE PTR _bWithinDistance$[ebp], cl

; 4211 : 
; 4212 : 	// if not within distance, then we're using a trade route
; 4213 : 	if (!bWithinDistance) 

	movzx	edx, BYTE PTR _bWithinDistance$[ebp]
	test	edx, edx
	jne	SHORT $LN5@UpdateNumT

; 4214 : 	{
; 4215 : 		pOtherCity->GetCityReligions()->IncrementNumTradeRouteConnections(eReligiousMajority, 1);

	push	1
	mov	eax, DWORD PTR _eReligiousMajority$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOtherCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IncrementNumTradeRouteConnections@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::IncrementNumTradeRouteConnections
$LN5@UpdateNumT:

; 4216 : 	}
; 4217 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?UpdateNumTradeRouteConnections@CvCityReligions@@QAEXPAVCvCity@@@Z ENDP ; CvCityReligions::UpdateNumTradeRouteConnections
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IncrementNumTradeRouteConnections@CvCityReligions@@QAEXW4ReligionTypes@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_it$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_iNum$ = 12						; size = 4
?IncrementNumTradeRouteConnections@CvCityReligions@@QAEXW4ReligionTypes@@H@Z PROC ; CvCityReligions::IncrementNumTradeRouteConnections, COMDAT
; _this$ = ecx

; 4221 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 4222 : 	ReligionInCityList::iterator it;
; 4223 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4224 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4225 : #else
; 4226 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN9@IncrementN
$LN3@IncrementN:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], edx
$LN9@IncrementN:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN5@IncrementN

; 4227 : #endif
; 4228 : 	{
; 4229 : 		if(it->m_eReligion == eReligion)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN1@IncrementN

; 4230 : 		{
; 4231 : 			it->m_iNumTradeRoutesApplyingPressure += iNum;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, DWORD PTR _iNum$[ebp]
	mov	ecx, DWORD PTR _it$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 4232 : 			break;

	jmp	SHORT $LN5@IncrementN
$LN1@IncrementN:

; 4233 : 		}

	jmp	SHORT $LN3@IncrementN
$LN5@IncrementN:

; 4234 : 	}
; 4235 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?IncrementNumTradeRouteConnections@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ENDP ; CvCityReligions::IncrementNumTradeRouteConnections
_TEXT	ENDS
PUBLIC	?GetNumFollowersAfterSpread@CvCityReligions@@QAEHW4ReligionTypes@@H@Z ; CvCityReligions::GetNumFollowersAfterSpread
; Function compile flags: /Odtp
;	COMDAT ?GetNumFollowersAfterSpread@CvCityReligions@@QAEHW4ReligionTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_iConversionStrength$ = 12				; size = 4
?GetNumFollowersAfterSpread@CvCityReligions@@QAEHW4ReligionTypes@@H@Z PROC ; CvCityReligions::GetNumFollowersAfterSpread, COMDAT
; _this$ = ecx

; 4239 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4240 : 	SimulateReligiousPressure(eReligion, iConversionStrength);

	mov	eax, DWORD PTR _iConversionStrength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SimulateReligiousPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::SimulateReligiousPressure

; 4241 : 	return GetNumSimulatedFollowers(eReligion);

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumSimulatedFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumSimulatedFollowers

; 4242 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetNumFollowersAfterSpread@CvCityReligions@@QAEHW4ReligionTypes@@H@Z ENDP ; CvCityReligions::GetNumFollowersAfterSpread
_TEXT	ENDS
PUBLIC	?GetNumFollowersAfterProphetSpread@CvCityReligions@@QAEHW4ReligionTypes@@H@Z ; CvCityReligions::GetNumFollowersAfterProphetSpread
; Function compile flags: /Odtp
;	COMDAT ?GetNumFollowersAfterProphetSpread@CvCityReligions@@QAEHW4ReligionTypes@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_iConversionStrength$ = 12				; size = 4
?GetNumFollowersAfterProphetSpread@CvCityReligions@@QAEHW4ReligionTypes@@H@Z PROC ; CvCityReligions::GetNumFollowersAfterProphetSpread, COMDAT
; _this$ = ecx

; 4246 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4247 : 	SimulateProphetSpread(eReligion, iConversionStrength);

	mov	eax, DWORD PTR _iConversionStrength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SimulateProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::SimulateProphetSpread

; 4248 : 	return GetNumSimulatedFollowers(eReligion);

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumSimulatedFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumSimulatedFollowers

; 4249 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetNumFollowersAfterProphetSpread@CvCityReligions@@QAEHW4ReligionTypes@@H@Z ENDP ; CvCityReligions::GetNumFollowersAfterProphetSpread
_TEXT	ENDS
PUBLIC	?GetMajorityReligionAfterSpread@CvCityReligions@@QAE?AW4ReligionTypes@@W42@H@Z ; CvCityReligions::GetMajorityReligionAfterSpread
; Function compile flags: /Odtp
;	COMDAT ?GetMajorityReligionAfterSpread@CvCityReligions@@QAE?AW4ReligionTypes@@W42@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_iConversionStrength$ = 12				; size = 4
?GetMajorityReligionAfterSpread@CvCityReligions@@QAE?AW4ReligionTypes@@W42@H@Z PROC ; CvCityReligions::GetMajorityReligionAfterSpread, COMDAT
; _this$ = ecx

; 4253 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4254 : 	SimulateReligiousPressure(eReligion, iConversionStrength);

	mov	eax, DWORD PTR _iConversionStrength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SimulateReligiousPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::SimulateReligiousPressure

; 4255 : 	return GetSimulatedReligiousMajority();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSimulatedReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetSimulatedReligiousMajority

; 4256 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetMajorityReligionAfterSpread@CvCityReligions@@QAE?AW4ReligionTypes@@W42@H@Z ENDP ; CvCityReligions::GetMajorityReligionAfterSpread
_TEXT	ENDS
PUBLIC	?GetMajorityReligionAfterProphetSpread@CvCityReligions@@QAE?AW4ReligionTypes@@W42@H@Z ; CvCityReligions::GetMajorityReligionAfterProphetSpread
; Function compile flags: /Odtp
;	COMDAT ?GetMajorityReligionAfterProphetSpread@CvCityReligions@@QAE?AW4ReligionTypes@@W42@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_iConversionStrength$ = 12				; size = 4
?GetMajorityReligionAfterProphetSpread@CvCityReligions@@QAE?AW4ReligionTypes@@W42@H@Z PROC ; CvCityReligions::GetMajorityReligionAfterProphetSpread, COMDAT
; _this$ = ecx

; 4260 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4261 : 	SimulateProphetSpread(eReligion, iConversionStrength);

	mov	eax, DWORD PTR _iConversionStrength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SimulateProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::SimulateProphetSpread

; 4262 : 	return GetSimulatedReligiousMajority();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSimulatedReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetSimulatedReligiousMajority

; 4263 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetMajorityReligionAfterProphetSpread@CvCityReligions@@QAE?AW4ReligionTypes@@W42@H@Z ENDP ; CvCityReligions::GetMajorityReligionAfterProphetSpread
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?ResetNumTradeRoutePressure@CvCityReligions@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_it$ = -4						; size = 4
?ResetNumTradeRoutePressure@CvCityReligions@@QAEXXZ PROC ; CvCityReligions::ResetNumTradeRoutePressure, COMDAT
; _this$ = ecx

; 4267 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 4268 : 	ReligionInCityList::iterator it;
; 4269 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4270 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4271 : #else
; 4272 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN8@ResetNumTr
$LN2@ResetNumTr:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], edx
$LN8@ResetNumTr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN4@ResetNumTr

; 4273 : #endif
; 4274 : 	{
; 4275 : 		it->m_iNumTradeRoutesApplyingPressure = 0;

	mov	eax, DWORD PTR _it$[ebp]
	mov	DWORD PTR [eax+16], 0
	jmp	SHORT $LN2@ResetNumTr
$LN4@ResetNumTr:

; 4276 : 	}
; 4277 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ResetNumTradeRoutePressure@CvCityReligions@@QAEXXZ ENDP ; CvCityReligions::ResetNumTradeRoutePressure
_TEXT	ENDS
PUBLIC	?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z ; CvCityReligions::LogFollowersChange
PUBLIC	?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z ; CvCityReligions::CityConvertsReligion
; Function compile flags: /Odtp
;	COMDAT ?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
tv201 = -88						; size = 4
_this$ = -84						; size = 4
$T237692 = -80						; size = 4
$T237666 = -72						; size = 4
_i$237658 = -68						; size = 4
_itLargestRemainder$226091 = -64			; size = 4
_iLargestRemainder$226092 = -60				; size = 4
_iI$226087 = -56					; size = 4
_religion$226083 = -52					; size = 24
_iFollowers$ = -28					; size = 4
_eMajority$ = -24					; size = 4
_iOldFollowers$ = -20					; size = 4
_iUnassignedFollowers$ = -16				; size = 4
_iPressurePerFollower$ = -12				; size = 4
_iTotalPressure$ = -8					; size = 4
_it$ = -4						; size = 4
_eReason$ = 8						; size = 4
_eOldMajorityReligion$ = 12				; size = 4
_eResponsibleParty$ = 16				; size = 4
?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvCityReligions::RecomputeFollowers, COMDAT
; _this$ = ecx

; 4283 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	mov	DWORD PTR _this$[ebp], ecx

; 4284 : 	int iOldFollowers = GetNumFollowers(eOldMajorityReligion);

	mov	eax, DWORD PTR _eOldMajorityReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers
	mov	DWORD PTR _iOldFollowers$[ebp], eax

; 4285 : 	int iUnassignedFollowers = m_pCity->getPopulation();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+416]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	mov	DWORD PTR _iUnassignedFollowers$[ebp], eax

; 4286 : 	int iPressurePerFollower;
; 4287 : 
; 4288 : 	// Safety check to avoid divide by zero
; 4289 : 	if (iUnassignedFollowers < 1)

	cmp	DWORD PTR _iUnassignedFollowers$[ebp], 1
	jge	SHORT $LN18@RecomputeF

; 4290 : 	{
; 4291 : 		CvAssertMsg (false, "Invalid city population when recomputing followers");
; 4292 : 		return;

	jmp	$LN19@RecomputeF
$LN18@RecomputeF:

; 4293 : 	}
; 4294 : 
; 4295 : 	// Find total pressure
; 4296 : 	int iTotalPressure = 0;

	mov	DWORD PTR _iTotalPressure$[ebp], 0

; 4297 : 	ReligionInCityList::iterator it;
; 4298 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4299 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4300 : #else
; 4301 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _it$[ebp], eax
	jmp	SHORT $LN23@RecomputeF
$LN16@RecomputeF:
	mov	ecx, DWORD PTR _it$[ebp]
	add	ecx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], ecx
$LN23@RecomputeF:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	cmp	DWORD PTR _it$[ebp], eax
	je	SHORT $LN15@RecomputeF

; 4302 : #endif
; 4303 : 	{
; 4304 : 		iTotalPressure += it->m_iPressure;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR _iTotalPressure$[ebp]
	add	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _iTotalPressure$[ebp], eax

; 4305 : 	}

	jmp	SHORT $LN16@RecomputeF
$LN15@RecomputeF:

; 4306 : 
; 4307 : 	// safety check - if pressure was wiped out somehow, just rebuild pressure of 1 atheist
; 4308 : 	if (iTotalPressure <= 0)

	cmp	DWORD PTR _iTotalPressure$[ebp], 0
	jg	SHORT $LN14@RecomputeF

; 4309 : 	{
; 4310 : 		m_ReligionStatus.clear();

	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN31@RecomputeF
	mov	DWORD PTR _i$237658[ebp], 0
	jmp	SHORT $LN29@RecomputeF
$LN28@RecomputeF:
	mov	edx, DWORD PTR _i$237658[ebp]
	add	edx, 1
	mov	DWORD PTR _i$237658[ebp], edx
$LN29@RecomputeF:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$237658[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN31@RecomputeF
	jmp	SHORT $LN28@RecomputeF
$LN31@RecomputeF:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 4311 : 
; 4312 : 		CvReligionInCity religion;

	lea	ecx, DWORD PTR _religion$226083[ebp]
	call	??0CvReligionInCity@@QAE@XZ		; CvReligionInCity::CvReligionInCity

; 4313 : 		religion.m_bFoundedHere = false;

	mov	BYTE PTR _religion$226083[ebp+4], 0

; 4314 : 		religion.m_eReligion = NO_RELIGION;

	mov	DWORD PTR _religion$226083[ebp], -1

; 4315 : 		religion.m_iFollowers = 1;

	mov	DWORD PTR _religion$226083[ebp+8], 1

; 4316 : 		religion.m_iPressure = GC.getRELIGION_ATHEISM_PRESSURE_PER_POP();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7888
	mov	DWORD PTR $T237666[ebp], eax
	mov	ecx, DWORD PTR $T237666[ebp]
	mov	DWORD PTR _religion$226083[ebp+12], ecx

; 4317 : 		m_ReligionStatus.push_back(religion);

	lea	edx, DWORD PTR _religion$226083[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back

; 4318 : 
; 4319 : 		iTotalPressure = GC.getRELIGION_ATHEISM_PRESSURE_PER_POP();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7888
	mov	DWORD PTR _iTotalPressure$[ebp], eax
$LN14@RecomputeF:

; 4320 : 	}
; 4321 : 
; 4322 : 	iPressurePerFollower = iTotalPressure / iUnassignedFollowers;

	mov	eax, DWORD PTR _iTotalPressure$[ebp]
	cdq
	idiv	DWORD PTR _iUnassignedFollowers$[ebp]
	mov	DWORD PTR _iPressurePerFollower$[ebp], eax

; 4323 : 
; 4324 : 	// Loop through each religion
; 4325 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4326 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4327 : #else
; 4328 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _it$[ebp], edx
	jmp	SHORT $LN46@RecomputeF
$LN12@RecomputeF:
	mov	eax, DWORD PTR _it$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], eax
$LN46@RecomputeF:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 24					; 00000018H
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax]
	cmp	DWORD PTR _it$[ebp], edx
	je	SHORT $LN11@RecomputeF

; 4329 : #endif
; 4330 : 	{
; 4331 : 		it->m_iFollowers = it->m_iPressure / iPressurePerFollower;

	mov	ecx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	cdq
	idiv	DWORD PTR _iPressurePerFollower$[ebp]
	mov	edx, DWORD PTR _it$[ebp]
	mov	DWORD PTR [edx+8], eax

; 4332 : 		iUnassignedFollowers -= it->m_iFollowers;

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR _iUnassignedFollowers$[ebp]
	sub	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _iUnassignedFollowers$[ebp], ecx

; 4333 : 		it->m_iTemp = it->m_iPressure - (it->m_iFollowers * iPressurePerFollower);  // Remainder

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+8]
	imul	eax, DWORD PTR _iPressurePerFollower$[ebp]
	mov	ecx, DWORD PTR _it$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	sub	edx, eax
	mov	eax, DWORD PTR _it$[ebp]
	mov	DWORD PTR [eax+20], edx

; 4334 : 	}

	jmp	SHORT $LN12@RecomputeF
$LN11@RecomputeF:

; 4335 : 
; 4336 : 	// Assign out the remainder
; 4337 : 	for (int iI = 0; iI < iUnassignedFollowers; iI++)

	mov	DWORD PTR _iI$226087[ebp], 0
	jmp	SHORT $LN10@RecomputeF
$LN9@RecomputeF:
	mov	ecx, DWORD PTR _iI$226087[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$226087[ebp], ecx
$LN10@RecomputeF:
	mov	edx, DWORD PTR _iI$226087[ebp]
	cmp	edx, DWORD PTR _iUnassignedFollowers$[ebp]
	jge	SHORT $LN8@RecomputeF

; 4338 : 	{
; 4339 : 		ReligionInCityList::iterator itLargestRemainder = NULL;

	mov	DWORD PTR _itLargestRemainder$226091[ebp], 0

; 4340 : 		int iLargestRemainder = 0;

	mov	DWORD PTR _iLargestRemainder$226092[ebp], 0

; 4341 : 
; 4342 : #ifdef AUI_WARNING_FIXES
; 4343 : 		for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end() && it; ++it)
; 4344 : #else
; 4345 : 		for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN50@RecomputeF
$LN6@RecomputeF:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], edx
$LN50@RecomputeF:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN5@RecomputeF

; 4346 : #endif
; 4347 : 		{
; 4348 : 			if (it->m_iTemp > iLargestRemainder)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR _iLargestRemainder$226092[ebp]
	jle	SHORT $LN4@RecomputeF

; 4349 : 			{
; 4350 : 				iLargestRemainder = it->m_iTemp;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _iLargestRemainder$226092[ebp], eax

; 4351 : 				itLargestRemainder = it;

	mov	ecx, DWORD PTR _it$[ebp]
	mov	DWORD PTR _itLargestRemainder$226091[ebp], ecx
$LN4@RecomputeF:

; 4352 : 			}
; 4353 : 		}

	jmp	SHORT $LN6@RecomputeF
$LN5@RecomputeF:

; 4354 : 
; 4355 : 		if (itLargestRemainder && iLargestRemainder > 0)

	cmp	DWORD PTR _itLargestRemainder$226091[ebp], 0
	je	SHORT $LN3@RecomputeF
	cmp	DWORD PTR _iLargestRemainder$226092[ebp], 0
	jle	SHORT $LN3@RecomputeF

; 4356 : 		{
; 4357 : 			itLargestRemainder->m_iFollowers++;

	mov	edx, DWORD PTR _itLargestRemainder$226091[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 1
	mov	ecx, DWORD PTR _itLargestRemainder$226091[ebp]
	mov	DWORD PTR [ecx+8], eax

; 4358 : 			itLargestRemainder->m_iTemp = 0;

	mov	edx, DWORD PTR _itLargestRemainder$226091[ebp]
	mov	DWORD PTR [edx+20], 0
$LN3@RecomputeF:

; 4359 : 		}
; 4360 : 	}

	jmp	$LN9@RecomputeF
$LN8@RecomputeF:

; 4361 : 
; 4362 : 	ReligionTypes eMajority = GetReligiousMajority();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eMajority$[ebp], eax

; 4363 : 	int iFollowers = GetNumFollowers(eMajority);

	mov	eax, DWORD PTR _eMajority$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers
	mov	DWORD PTR _iFollowers$[ebp], eax

; 4364 : 
; 4365 : 	if(eMajority != eOldMajorityReligion || iFollowers != iOldFollowers)

	mov	ecx, DWORD PTR _eMajority$[ebp]
	cmp	ecx, DWORD PTR _eOldMajorityReligion$[ebp]
	jne	SHORT $LN1@RecomputeF
	mov	edx, DWORD PTR _iFollowers$[ebp]
	cmp	edx, DWORD PTR _iOldFollowers$[ebp]
	je	SHORT $LN19@RecomputeF
$LN1@RecomputeF:

; 4366 : 	{
; 4367 : 		CityConvertsReligion(eMajority, eOldMajorityReligion, eResponsibleParty);

	mov	eax, DWORD PTR _eResponsibleParty$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eOldMajorityReligion$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eMajority$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z ; CvCityReligions::CityConvertsReligion

; 4368 : 		GC.GetEngineUserInterface()->setDirty(CityInfo_DIRTY_BIT, true);

	mov	eax, DWORD PTR $T237692[ebp]
	mov	DWORD PTR tv201[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv201[ebp], ecx
	push	1
	push	18					; 00000012H
	mov	edx, DWORD PTR tv201[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv201[ebp]
	mov	edx, DWORD PTR [eax+260]
	call	edx

; 4369 : 		LogFollowersChange(eReason);

	mov	eax, DWORD PTR _eReason$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z ; CvCityReligions::LogFollowersChange
$LN19@RecomputeF:

; 4370 : 	}
; 4371 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvCityReligions::RecomputeFollowers
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?SimulateFollowers@CvCityReligions@@AAEXXZ
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T237715 = -40						; size = 4
$T237708 = -36						; size = 4
$T237701 = -32						; size = 4
_itLargestRemainder$226121 = -28			; size = 4
_iLargestRemainder$226122 = -24				; size = 4
_iI$226117 = -20					; size = 4
_iUnassignedFollowers$ = -16				; size = 4
_iPressurePerFollower$ = -12				; size = 4
_iTotalPressure$ = -8					; size = 4
_it$ = -4						; size = 4
?SimulateFollowers@CvCityReligions@@AAEXXZ PROC		; CvCityReligions::SimulateFollowers, COMDAT
; _this$ = ecx

; 4375 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 4376 : 	int iUnassignedFollowers = m_pCity->getPopulation();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	mov	DWORD PTR _iUnassignedFollowers$[ebp], eax

; 4377 : 	int iPressurePerFollower;
; 4378 : 
; 4379 : 	// Find total pressure
; 4380 : 	int iTotalPressure = 0;

	mov	DWORD PTR _iTotalPressure$[ebp], 0

; 4381 : 	ReligionInCityList::iterator it;
; 4382 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4383 : 	for (it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); ++it)
; 4384 : #else
; 4385 : 	for(it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); it++)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+208]
	mov	DWORD PTR _it$[ebp], edx
	jmp	SHORT $LN16@SimulateFo
$LN15@SimulateFo:
	mov	eax, DWORD PTR _it$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], eax
$LN16@SimulateFo:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	mov	DWORD PTR $T237701[ebp], ecx
	mov	edx, DWORD PTR $T237701[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR $T237701[ebp]
	add	eax, DWORD PTR [ecx]
	cmp	DWORD PTR _it$[ebp], eax
	je	SHORT $LN14@SimulateFo

; 4386 : #endif
; 4387 : 	{
; 4388 : 		iTotalPressure += it->m_iPressure;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR _iTotalPressure$[ebp]
	add	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _iTotalPressure$[ebp], eax

; 4389 : 	}

	jmp	SHORT $LN15@SimulateFo
$LN14@SimulateFo:

; 4390 : 
; 4391 : 	// safety check
; 4392 : 	if (iTotalPressure == 0 || iUnassignedFollowers == 0)

	cmp	DWORD PTR _iTotalPressure$[ebp], 0
	je	SHORT $LN12@SimulateFo
	cmp	DWORD PTR _iUnassignedFollowers$[ebp], 0
	jne	SHORT $LN13@SimulateFo
$LN12@SimulateFo:

; 4393 : 	{
; 4394 : 		CvAssertMsg(false, "Internal religion data error. Send save to Ed");
; 4395 : 		return;

	jmp	$LN17@SimulateFo
$LN13@SimulateFo:

; 4396 : 	}
; 4397 : 
; 4398 : 	iPressurePerFollower = iTotalPressure / iUnassignedFollowers;

	mov	eax, DWORD PTR _iTotalPressure$[ebp]
	cdq
	idiv	DWORD PTR _iUnassignedFollowers$[ebp]
	mov	DWORD PTR _iPressurePerFollower$[ebp], eax

; 4399 : 
; 4400 : 	// Loop through each religion
; 4401 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4402 : 	for (it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); ++it)
; 4403 : #else
; 4404 : 	for(it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); it++)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+208]
	mov	DWORD PTR _it$[ebp], edx
	jmp	SHORT $LN11@SimulateFo
$LN10@SimulateFo:
	mov	eax, DWORD PTR _it$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], eax
$LN11@SimulateFo:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	mov	DWORD PTR $T237708[ebp], ecx
	mov	edx, DWORD PTR $T237708[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR $T237708[ebp]
	add	eax, DWORD PTR [ecx]
	cmp	DWORD PTR _it$[ebp], eax
	je	SHORT $LN9@SimulateFo

; 4405 : #endif
; 4406 : 	{
; 4407 : 		it->m_iFollowers = it->m_iPressure / iPressurePerFollower;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+12]
	cdq
	idiv	DWORD PTR _iPressurePerFollower$[ebp]
	mov	ecx, DWORD PTR _it$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 4408 : 		iUnassignedFollowers -= it->m_iFollowers;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR _iUnassignedFollowers$[ebp]
	sub	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _iUnassignedFollowers$[ebp], eax

; 4409 : 		it->m_iTemp = it->m_iPressure - (it->m_iFollowers * iPressurePerFollower);  // Remainder

	mov	ecx, DWORD PTR _it$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	imul	edx, DWORD PTR _iPressurePerFollower$[ebp]
	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, edx
	mov	edx, DWORD PTR _it$[ebp]
	mov	DWORD PTR [edx+20], ecx

; 4410 : 	}

	jmp	SHORT $LN10@SimulateFo
$LN9@SimulateFo:

; 4411 : 
; 4412 : 	// Assign out the remainder
; 4413 : 	for (int iI = 0; iI < iUnassignedFollowers; iI++)

	mov	DWORD PTR _iI$226117[ebp], 0
	jmp	SHORT $LN8@SimulateFo
$LN7@SimulateFo:
	mov	eax, DWORD PTR _iI$226117[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$226117[ebp], eax
$LN8@SimulateFo:
	mov	ecx, DWORD PTR _iI$226117[ebp]
	cmp	ecx, DWORD PTR _iUnassignedFollowers$[ebp]
	jge	$LN17@SimulateFo

; 4414 : 	{
; 4415 : 		ReligionInCityList::iterator itLargestRemainder = NULL;

	mov	DWORD PTR _itLargestRemainder$226121[ebp], 0

; 4416 : 		int iLargestRemainder = 0;

	mov	DWORD PTR _iLargestRemainder$226122[ebp], 0

; 4417 : 
; 4418 : #ifdef AUI_WARNING_FIXES
; 4419 : 		for (it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end() && it; ++it)
; 4420 : #else
; 4421 : 		for (it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); it++)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+208]
	mov	DWORD PTR _it$[ebp], eax
	jmp	SHORT $LN5@SimulateFo
$LN4@SimulateFo:
	mov	ecx, DWORD PTR _it$[ebp]
	add	ecx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], ecx
$LN5@SimulateFo:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 208				; 000000d0H
	mov	DWORD PTR $T237715[ebp], edx
	mov	eax, DWORD PTR $T237715[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR $T237715[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN3@SimulateFo

; 4422 : #endif
; 4423 : 		{
; 4424 : 			if (it->m_iTemp > iLargestRemainder)

	mov	eax, DWORD PTR _it$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR _iLargestRemainder$226122[ebp]
	jle	SHORT $LN2@SimulateFo

; 4425 : 			{
; 4426 : 				iLargestRemainder = it->m_iTemp;

	mov	edx, DWORD PTR _it$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _iLargestRemainder$226122[ebp], eax

; 4427 : 				itLargestRemainder = it;

	mov	ecx, DWORD PTR _it$[ebp]
	mov	DWORD PTR _itLargestRemainder$226121[ebp], ecx
$LN2@SimulateFo:

; 4428 : 			}
; 4429 : 		}

	jmp	SHORT $LN4@SimulateFo
$LN3@SimulateFo:

; 4430 : 
; 4431 : 		if (itLargestRemainder && iLargestRemainder > 0)

	cmp	DWORD PTR _itLargestRemainder$226121[ebp], 0
	je	SHORT $LN1@SimulateFo
	cmp	DWORD PTR _iLargestRemainder$226122[ebp], 0
	jle	SHORT $LN1@SimulateFo

; 4432 : 		{
; 4433 : 			itLargestRemainder->m_iFollowers++;

	mov	edx, DWORD PTR _itLargestRemainder$226121[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 1
	mov	ecx, DWORD PTR _itLargestRemainder$226121[ebp]
	mov	DWORD PTR [ecx+8], eax

; 4434 : 			itLargestRemainder->m_iTemp = 0;

	mov	edx, DWORD PTR _itLargestRemainder$226121[ebp]
	mov	DWORD PTR [edx+20], 0
$LN1@SimulateFo:

; 4435 : 		}

	jmp	$LN7@SimulateFo
$LN17@SimulateFo:

; 4436 : 	}
; 4437 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SimulateFollowers@CvCityReligions@@AAEXXZ ENDP		; CvCityReligions::SimulateFollowers
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?CopyToSimulatedStatus@CvCityReligions@@AAEXXZ
_TEXT	SEGMENT
_this$ = -56						; size = 4
$T237736 = -12						; size = 4
_i$237730 = -8						; size = 4
_it$ = -4						; size = 4
?CopyToSimulatedStatus@CvCityReligions@@AAEXXZ PROC	; CvCityReligions::CopyToSimulatedStatus, COMDAT
; _this$ = ecx

; 4441 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	mov	DWORD PTR _this$[ebp], ecx

; 4442 : 	m_SimulatedStatus.clear();

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 208				; 000000d0H
	mov	DWORD PTR $T237736[ebp], eax
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN12@CopyToSimu
	mov	DWORD PTR _i$237730[ebp], 0
	jmp	SHORT $LN10@CopyToSimu
$LN9@CopyToSimu:
	mov	edx, DWORD PTR _i$237730[ebp]
	add	edx, 1
	mov	DWORD PTR _i$237730[ebp], edx
$LN10@CopyToSimu:
	mov	eax, DWORD PTR $T237736[ebp]
	mov	ecx, DWORD PTR _i$237730[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN12@CopyToSimu
	jmp	SHORT $LN9@CopyToSimu
$LN12@CopyToSimu:
	mov	edx, DWORD PTR $T237736[ebp]
	mov	DWORD PTR [edx+4], 0

; 4443 : 
; 4444 : 	ReligionInCityList::iterator it;
; 4445 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4446 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4447 : #else
; 4448 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$[ebp], ecx
	jmp	SHORT $LN16@CopyToSimu
$LN2@CopyToSimu:
	mov	edx, DWORD PTR _it$[ebp]
	add	edx, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], edx
$LN16@CopyToSimu:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	cmp	DWORD PTR _it$[ebp], ecx
	je	SHORT $LN4@CopyToSimu

; 4449 : #endif
; 4450 : 	{
; 4451 : 		m_SimulatedStatus.push_back(*it);

	mov	eax, DWORD PTR _it$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back
	jmp	SHORT $LN2@CopyToSimu
$LN4@CopyToSimu:

; 4452 : 	}
; 4453 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CopyToSimulatedStatus@CvCityReligions@@AAEXXZ ENDP	; CvCityReligions::CopyToSimulatedStatus
_TEXT	ENDS
PUBLIC	??_C@_0BF@LIEFLGFG@CityConvertsReligion?$AA@	; `string'
PUBLIC	??_C@_02OLOABKKD@ID?$AA@			; `string'
PUBLIC	??_C@_06MEGNPIOK@Worlds?$AA@			; `string'
PUBLIC	??_C@_04KOACHJEN@Type?$AA@			; `string'
PUBLIC	??_C@_0BD@EKNEGCMD@WORLDSIZE_STANDARD?$AA@	; `string'
PUBLIC	??_C@_0DK@LHMFCLHP@TXT_KEY_NOTIFICATION_RELIGION_SP@ ; `string'
PUBLIC	??_C@_0DI@ILFJJAHO@TXT_KEY_NOTIFICATION_RELIGION_SP@ ; `string'
PUBLIC	??_C@_0DF@MNBPBGE@TXT_KEY_NOTIFICATION_RELIGION_SP@ ; `string'
PUBLIC	??_C@_0DD@MMMCELKN@TXT_KEY_NOTIFICATION_RELIGION_SP@ ; `string'
PUBLIC	__real@3f000000
PUBLIC	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ		; sprintf_s<256>
PUBLIC	??_C@_0CH@NDAFPEL@?$FLCOLOR_YELLOW?$FN?$CL?$CFd?$FLENDCOLOR?$FN?$FLICON@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	?ChangeNegativeReligiousConversionPoints@CvDiplomacyAI@@QAEXW4PlayerTypes@@H@Z:PROC ; CvDiplomacyAI::ChangeNegativeReligiousConversionPoints
EXTRN	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ:PROC ; CvPlayer::GetDiplomacyAI
EXTRN	__imp_??1Results@Database@@UAE@XZ:PROC
EXTRN	__imp_?GetInt@Results@Database@@QAEHH@Z:PROC
EXTRN	?getWorldSize@CvMap@@QAE?AW4WorldSizeTypes@@XZ:PROC ; CvMap::getWorldSize
EXTRN	__imp_?ColumnPosition@Results@Database@@QAEHPBD@Z:PROC
EXTRN	__imp_?Step@Results@Database@@QAE_NXZ:PROC
EXTRN	__imp_?SelectAt@Connection@Database@@QAE_NAAVResults@2@PBD11@Z:PROC
EXTRN	__imp_??0Results@Database@@QAE@PBD@Z:PROC
EXTRN	?isCapital@CvCity@@QBE_NXZ:PROC			; CvCity::isCapital
EXTRN	__imp_??4String@Localization@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_??4String@Localization@@QAEAAV01@PBD@Z:PROC
EXTRN	__imp_??0String@Localization@@QAE@XZ:PROC
EXTRN	?ChangeGold@CvTreasury@@QAEXH@Z:PROC		; CvTreasury::ChangeGold
EXTRN	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ:PROC ; CvPlayer::GetTreasury
EXTRN	?GetGoldWhenCityAdopts@CvReligionBeliefs@@QBEHXZ:PROC ; CvReligionBeliefs::GetGoldWhenCityAdopts
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0BF@LIEFLGFG@CityConvertsReligion?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaargshandle.h
CONST	SEGMENT
??_C@_0BF@LIEFLGFG@CityConvertsReligion?$AA@ DB 'CityConvertsReligion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02OLOABKKD@ID?$AA@
CONST	SEGMENT
??_C@_02OLOABKKD@ID?$AA@ DB 'ID', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06MEGNPIOK@Worlds?$AA@
CONST	SEGMENT
??_C@_06MEGNPIOK@Worlds?$AA@ DB 'Worlds', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KOACHJEN@Type?$AA@
CONST	SEGMENT
??_C@_04KOACHJEN@Type?$AA@ DB 'Type', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EKNEGCMD@WORLDSIZE_STANDARD?$AA@
CONST	SEGMENT
??_C@_0BD@EKNEGCMD@WORLDSIZE_STANDARD?$AA@ DB 'WORLDSIZE_STANDARD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@LHMFCLHP@TXT_KEY_NOTIFICATION_RELIGION_SP@
CONST	SEGMENT
??_C@_0DK@LHMFCLHP@TXT_KEY_NOTIFICATION_RELIGION_SP@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_RELIGION_SPREAD_INITIAL_CONVERSION_S', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@ILFJJAHO@TXT_KEY_NOTIFICATION_RELIGION_SP@
CONST	SEGMENT
??_C@_0DI@ILFJJAHO@TXT_KEY_NOTIFICATION_RELIGION_SP@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_RELIGION_SPREAD_INITIAL_CONVERSION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@MNBPBGE@TXT_KEY_NOTIFICATION_RELIGION_SP@
CONST	SEGMENT
??_C@_0DF@MNBPBGE@TXT_KEY_NOTIFICATION_RELIGION_SP@ DB 'TXT_KEY_NOTIFICAT'
	DB	'ION_RELIGION_SPREAD_ACTIVE_PLAYER_S', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@MMMCELKN@TXT_KEY_NOTIFICATION_RELIGION_SP@
CONST	SEGMENT
??_C@_0DD@MMMCELKN@TXT_KEY_NOTIFICATION_RELIGION_SP@ DB 'TXT_KEY_NOTIFICA'
	DB	'TION_RELIGION_SPREAD_ACTIVE_PLAYER', 00H	; `string'
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_C@_0CH@NDAFPEL@?$FLCOLOR_YELLOW?$FN?$CL?$CFd?$FLENDCOLOR?$FN?$FLICON@
CONST	SEGMENT
??_C@_0CH@NDAFPEL@?$FLCOLOR_YELLOW?$FN?$CL?$CFd?$FLENDCOLOR?$FN?$FLICON@ DB '['
	DB	'COLOR_YELLOW]+%d[ENDCOLOR][ICON_GOLD]', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$6
	DD	05H
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$8
	DD	05H
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$11
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z
_TEXT	SEGMENT
tv621 = -1184						; size = 4
tv611 = -1180						; size = 4
tv604 = -1176						; size = 4
tv594 = -1172						; size = 4
tv583 = -1168						; size = 4
tv531 = -1164						; size = 4
tv417 = -1160						; size = 4
tv651 = -1156						; size = 4
tv324 = -1152						; size = 4
tv647 = -1148						; size = 4
tv646 = -1144						; size = 4
tv306 = -1140						; size = 4
tv642 = -1136						; size = 4
tv218 = -1132						; size = 4
tv638 = -1128						; size = 4
tv637 = -1124						; size = 4
tv176 = -1120						; size = 4
_this$ = -1116						; size = 4
$T238067 = -1112					; size = 4
$T238055 = -1108					; size = 4
$T238040 = -1104					; size = 4
$T238028 = -1100					; size = 4
$T238012 = -1096					; size = 4
$T238003 = -1092					; size = 4
$T237994 = -1088					; size = 4
$T237990 = -1081					; size = 1
$T237978 = -1080					; size = 4
$T237971 = -1076					; size = 4
$T237967 = -1072					; size = 4
$T237963 = -1068					; size = 4
$T237959 = -1064					; size = 4
$T237955 = -1060					; size = 4
$T237946 = -1056					; size = 4
$T237937 = -1052					; size = 4
$T237924 = -1048					; size = 4
$T237920 = -1044					; size = 4
$T237916 = -1040					; size = 4
$T237907 = -1036					; size = 4
$T237898 = -1032					; size = 4
$T237894 = -1028					; size = 4
$T237890 = -1024					; size = 4
$T237881 = -1020					; size = 4
$T237868 = -1016					; size = 4
$T237853 = -1012					; size = 4
$T237844 = -1008					; size = 4
$T237835 = -1004					; size = 4
$T237831 = -1000					; size = 4
$T237824 = -996						; size = 4
$T237820 = -992						; size = 4
$T237810 = -988						; size = 4
$T237794 = -984						; size = 80
$T237793 = -904						; size = 28
$T237792 = -876						; size = 4
$T237791 = -872						; size = 80
$T237790 = -792						; size = 28
$T237789 = -764						; size = 4
_bResult$226230 = -757					; size = 1
_args$226229 = -756					; size = 4
_iPoints$226222 = -752					; size = 4
_kCityOwnerPlayer$226219 = -748				; size = 4
_eCityOwnerReligion$226220 = -744			; size = 4
_pCityReligions$226213 = -740				; size = 4
_pCapital$226211 = -736					; size = 4
_kPlayer$226208 = -732					; size = 4
_i$226204 = -728					; size = 4
_bSpreadToAllCapitals$226203 = -721			; size = 1
_standardWorldSize$226200 = -720			; size = 4
_eWorldSize$226199 = -716				; size = 4
_idColumn$226196 = -712					; size = 4
_bIsStandardOrLarger$226188 = -705			; size = 1
_pDB$226189 = -704					; size = 4
_kStandardSize$226190 = -700				; size = 64
_strMessage$226177 = -636				; size = 80
_strSummary$226178 = -556				; size = 80
_pkReligion$226171 = -472				; size = 4
_strMessage$226162 = -468				; size = 80
_strSummary$226163 = -388				; size = 80
_text$226150 = -308					; size = 256
__$ArrayPad$ = -48					; size = 4
_iGoldBonus$226147 = -44				; size = 4
_kOwnerPlayer$226158 = -40				; size = 4
_eOwnerPlayerReligion$226159 = -36			; size = 4
_eOwnerPlayer$226157 = -32				; size = 4
_pkScriptSystem$226227 = -28				; size = 4
_pNewReligion$226145 = -24				; size = 4
_pOldReligion$226143 = -20				; size = 4
_pReligions$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_eMajority$ = 8						; size = 4
_eOldMajority$ = 12					; size = 4
_eResponsibleParty$ = 16				; size = 4
?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z PROC ; CvCityReligions::CityConvertsReligion, COMDAT
; _this$ = ecx

; 4457 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1172				; 00000494H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 4458 : 	CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237810[ebp], eax
	mov	ecx, DWORD PTR $T237810[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pReligions$[ebp], eax

; 4459 : 
; 4460 : 	m_pCity->UpdateReligion(eMajority);

	mov	ecx, DWORD PTR _eMajority$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+416]
	call	?UpdateReligion@CvCity@@QAEXW4ReligionTypes@@@Z ; CvCity::UpdateReligion

; 4461 : 
; 4462 : 	if(eOldMajority > RELIGION_PANTHEON)

	cmp	DWORD PTR _eOldMajority$[ebp], 0
	jle	SHORT $LN37@CityConver

; 4463 : 	{
; 4464 : 		const CvReligion* pOldReligion = pReligions->GetReligion(eOldMajority, NO_PLAYER);

	push	-1
	mov	eax, DWORD PTR _eOldMajority$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pReligions$[ebp]
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pOldReligion$226143[ebp], eax

; 4465 : 		GET_PLAYER(pOldReligion->m_eFounder).UpdateReligion();

	mov	ecx, DWORD PTR _pOldReligion$226143[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?UpdateReligion@CvPlayer@@QAEXXZ	; CvPlayer::UpdateReligion
$LN37@CityConver:

; 4466 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 4467 : 		GET_PLAYER(pOldReligion->m_eFounder).doSelfConsistencyCheckAllCities();
; 4468 : #endif
; 4469 : 	}
; 4470 : 
; 4471 : 	if(eMajority > RELIGION_PANTHEON)

	cmp	DWORD PTR _eMajority$[ebp], 0
	jle	$LN1@CityConver

; 4472 : 	{
; 4473 : 		const CvReligion* pNewReligion = pReligions->GetReligion(eMajority, NO_PLAYER);

	push	-1
	mov	edx, DWORD PTR _eMajority$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pReligions$[ebp]
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pNewReligion$226145[ebp], eax

; 4474 : 		GET_PLAYER(pNewReligion->m_eFounder).UpdateReligion();

	mov	eax, DWORD PTR _pNewReligion$226145[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?UpdateReligion@CvPlayer@@QAEXXZ	; CvPlayer::UpdateReligion

; 4475 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 4476 : 		GET_PLAYER(pNewReligion->m_eFounder).doSelfConsistencyCheckAllCities();
; 4477 : #endif
; 4478 : 
; 4479 : 		// Pay adoption bonuses (if any)
; 4480 : 		if(!m_bHasPaidAdoptionBonus)

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+420]
	test	edx, edx
	jne	$LN33@CityConver

; 4481 : 		{
; 4482 : 			int iGoldBonus = pNewReligion->m_Beliefs.GetGoldWhenCityAdopts();

	mov	ecx, DWORD PTR _pNewReligion$226145[ebp]
	add	ecx, 152				; 00000098H
	call	?GetGoldWhenCityAdopts@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetGoldWhenCityAdopts
	mov	DWORD PTR _iGoldBonus$226147[ebp], eax

; 4483 : 			iGoldBonus *= GC.getGame().getGameSpeedInfo().getTrainPercent();;

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237820[ebp], eax
	mov	ecx, DWORD PTR $T237820[ebp]
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getTrainPercent@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getTrainPercent
	imul	eax, DWORD PTR _iGoldBonus$226147[ebp]
	mov	DWORD PTR _iGoldBonus$226147[ebp], eax

; 4484 : 			iGoldBonus /= 100;

	mov	eax, DWORD PTR _iGoldBonus$226147[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iGoldBonus$226147[ebp], eax

; 4485 : 
; 4486 : 			if(iGoldBonus > 0)

	cmp	DWORD PTR _iGoldBonus$226147[ebp], 0
	jle	$LN33@CityConver

; 4487 : 			{
; 4488 : 				GET_PLAYER(pNewReligion->m_eFounder).GetTreasury()->ChangeGold(iGoldBonus);

	mov	edx, DWORD PTR _pNewReligion$226145[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T237824[ebp], eax
	mov	ecx, DWORD PTR _iGoldBonus$226147[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T237824[ebp]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?ChangeGold@CvTreasury@@QAEXH@Z		; CvTreasury::ChangeGold

; 4489 : 				SetPaidAdoptionBonus(true);

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+420], 1

; 4490 : 
; 4491 : 				if(pNewReligion->m_eFounder == GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237831[ebp], eax
	mov	ecx, DWORD PTR $T237831[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	mov	ecx, DWORD PTR _pNewReligion$226145[ebp]
	cmp	DWORD PTR [ecx+4], eax
	jne	$LN33@CityConver

; 4492 : 				{
; 4493 : 					char text[256] = {0};

	mov	BYTE PTR _text$226150[ebp], 0
	push	255					; 000000ffH
	push	0
	lea	edx, DWORD PTR _text$226150[ebp+1]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH

; 4494 : 					sprintf_s(text, "[COLOR_YELLOW]+%d[ENDCOLOR][ICON_GOLD]", iGoldBonus);

	mov	eax, DWORD PTR _iGoldBonus$226147[ebp]
	push	eax
	push	OFFSET ??_C@_0CH@NDAFPEL@?$FLCOLOR_YELLOW?$FN?$CL?$CFd?$FLENDCOLOR?$FN?$FLICON@
	lea	ecx, DWORD PTR _text$226150[ebp]
	push	ecx
	call	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ	; sprintf_s<256>
	add	esp, 12					; 0000000cH

; 4495 : 					GC.GetEngineUserInterface()->AddPopupText(m_pCity->getX(), m_pCity->getY(), text, 0.5f);

	mov	edx, DWORD PTR $T237835[ebp]
	mov	DWORD PTR tv176[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv176[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+416]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T237844[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+416]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T237853[ebp], eax
	push	ecx
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR _text$226150[ebp]
	push	ecx
	mov	edx, DWORD PTR $T237844[ebp]
	push	edx
	mov	eax, DWORD PTR $T237853[ebp]
	push	eax
	mov	ecx, DWORD PTR tv176[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv176[ebp]
	mov	eax, DWORD PTR [edx+184]
	call	eax
$LN33@CityConver:

; 4496 : 				}
; 4497 : 			}
; 4498 : 		}
; 4499 : 
; 4500 : 		// Notification if the player's city was converted to a religion they didn't found
; 4501 : 		PlayerTypes eOwnerPlayer = m_pCity->getOwner();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+416]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR _eOwnerPlayer$226157[ebp], eax

; 4502 : 		CvPlayerAI& kOwnerPlayer = GET_PLAYER(eOwnerPlayer);

	mov	ecx, DWORD PTR _eOwnerPlayer$226157[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kOwnerPlayer$226158[ebp], ecx

; 4503 : 		const ReligionTypes eOwnerPlayerReligion = kOwnerPlayer.GetReligions()->GetReligionCreatedByPlayer();

	mov	ecx, DWORD PTR _kOwnerPlayer$226158[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eOwnerPlayerReligion$226159[ebp], eax

; 4504 : 
; 4505 : 		if(eOwnerPlayer != eResponsibleParty && eMajority != eOldMajority && pNewReligion->m_eFounder != eOwnerPlayer
; 4506 : 			&& eOwnerPlayerReligion > RELIGION_PANTHEON)

	mov	edx, DWORD PTR _eOwnerPlayer$226157[ebp]
	cmp	edx, DWORD PTR _eResponsibleParty$[ebp]
	je	$LN32@CityConver
	mov	eax, DWORD PTR _eMajority$[ebp]
	cmp	eax, DWORD PTR _eOldMajority$[ebp]
	je	$LN32@CityConver
	mov	ecx, DWORD PTR _pNewReligion$226145[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR _eOwnerPlayer$226157[ebp]
	je	$LN32@CityConver
	cmp	DWORD PTR _eOwnerPlayerReligion$226159[ebp], 0
	jle	$LN32@CityConver

; 4507 : 		{
; 4508 : 			if(kOwnerPlayer.GetNotifications())

	mov	ecx, DWORD PTR _kOwnerPlayer$226158[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	test	eax, eax
	je	$LN31@CityConver

; 4509 : 			{
; 4510 : 				Localization::String strMessage;

	lea	ecx, DWORD PTR _strMessage$226162[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 4511 : 				Localization::String strSummary;

	lea	ecx, DWORD PTR _strSummary$226163[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 4512 : 				strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_RELIGION_SPREAD_ACTIVE_PLAYER", m_pCity->getName());

	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T237789[ebp], esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+416]
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	DWORD PTR tv637[ebp], eax
	push	OFFSET ??_C@_0DD@MMMCELKN@TXT_KEY_NOTIFICATION_RELIGION_SP@
	lea	edx, DWORD PTR $T237790[ebp]
	push	edx
	call	??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z ; GetLocalizedText<CvString>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv638[ebp], eax
	mov	eax, DWORD PTR tv638[ebp]
	mov	DWORD PTR $T237868[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR $T237868[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$226162[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T237790[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4513 : 				strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_SPREAD_ACTIVE_PLAYER_S");

	push	OFFSET ??_C@_0DF@MNBPBGE@TXT_KEY_NOTIFICATION_RELIGION_SP@
	lea	ecx, DWORD PTR $T237791[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv218[ebp], eax
	mov	edx, DWORD PTR tv218[ebp]
	mov	DWORD PTR tv642[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv642[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$226163[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T237791[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 4514 : 				kOwnerPlayer.GetNotifications()->Add(NOTIFICATION_RELIGION_SPREAD, strMessage.toUTF8(), strSummary.toUTF8(), m_pCity->getX(), m_pCity->getY(), -1);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+416]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T237881[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+416]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T237890[ebp], eax
	push	-1
	push	-1
	mov	ecx, DWORD PTR $T237881[ebp]
	push	ecx
	mov	edx, DWORD PTR $T237890[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$226163[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$226162[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	1912276298				; 71fb054aH
	mov	ecx, DWORD PTR _kOwnerPlayer$226158[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 4515 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strSummary$226163[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$226162[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN31@CityConver:

; 4516 : 
; 4517 : 			//Achievements!
; 4518 : 			if(eOwnerPlayer == GC.getGame().getActivePlayer()){

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237894[ebp], eax
	mov	ecx, DWORD PTR $T237894[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR _eOwnerPlayer$226157[ebp], eax
	jne	$LN28@CityConver

; 4519 : 				const CvReligion* pkReligion = GC.getGame().GetGameReligions()->GetReligion(eOwnerPlayerReligion, eOwnerPlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237898[ebp], ecx
	mov	edx, DWORD PTR _eOwnerPlayer$226157[ebp]
	push	edx
	mov	eax, DWORD PTR _eOwnerPlayerReligion$226159[ebp]
	push	eax
	mov	ecx, DWORD PTR $T237898[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pkReligion$226171[ebp], eax

; 4520 : 				if(pkReligion != NULL)

	cmp	DWORD PTR _pkReligion$226171[ebp], 0
	je	SHORT $LN28@CityConver

; 4521 : 				{
; 4522 : 					if(m_pCity->getX() == pkReligion->m_iHolyCityX && m_pCity->getY() == pkReligion->m_iHolyCityY)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+416]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T237907[ebp], eax
	mov	ecx, DWORD PTR _pkReligion$226171[ebp]
	mov	edx, DWORD PTR $T237907[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN28@CityConver
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T237916[ebp], edx
	mov	eax, DWORD PTR _pkReligion$226171[ebp]
	mov	ecx, DWORD PTR $T237916[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN28@CityConver

; 4523 : 					{
; 4524 : 						gDLL->UnlockAchievement(ACHIEVEMENT_XP1_20);

	mov	edx, DWORD PTR $T237920[ebp]
	mov	DWORD PTR tv306[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv306[ebp], eax
	push	210					; 000000d2H
	mov	ecx, DWORD PTR tv306[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv306[ebp]
	mov	eax, DWORD PTR [edx+828]
	call	eax
$LN28@CityConver:

; 4525 : 					}
; 4526 : 				}
; 4527 : 			}
; 4528 : 		}

	jmp	$LN25@CityConver
$LN32@CityConver:

; 4529 : 
; 4530 : 		else if(eOwnerPlayer != eResponsibleParty && eMajority != eOldMajority && eOldMajority == NO_RELIGION)

	mov	ecx, DWORD PTR _eOwnerPlayer$226157[ebp]
	cmp	ecx, DWORD PTR _eResponsibleParty$[ebp]
	je	$LN25@CityConver
	mov	edx, DWORD PTR _eMajority$[ebp]
	cmp	edx, DWORD PTR _eOldMajority$[ebp]
	je	$LN25@CityConver
	cmp	DWORD PTR _eOldMajority$[ebp], -1
	jne	$LN25@CityConver

; 4531 : 		{
; 4532 : 			if(kOwnerPlayer.GetNotifications())

	mov	ecx, DWORD PTR _kOwnerPlayer$226158[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	test	eax, eax
	je	$LN25@CityConver

; 4533 : 			{
; 4534 : 				Localization::String strMessage;

	lea	ecx, DWORD PTR _strMessage$226177[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 4

; 4535 : 				Localization::String strSummary;

	lea	ecx, DWORD PTR _strSummary$226178[ebp]
	call	DWORD PTR __imp_??0String@Localization@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5

; 4536 : 				strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_RELIGION_SPREAD_INITIAL_CONVERSION", m_pCity->getName());

	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T237792[ebp], esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+416]
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	DWORD PTR tv646[ebp], eax
	push	OFFSET ??_C@_0DI@ILFJJAHO@TXT_KEY_NOTIFICATION_RELIGION_SP@
	lea	edx, DWORD PTR $T237793[ebp]
	push	edx
	call	??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z ; GetLocalizedText<CvString>
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv647[ebp], eax
	mov	eax, DWORD PTR tv647[ebp]
	mov	DWORD PTR $T237924[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR $T237924[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$226177[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T237793[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4537 : 				strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_SPREAD_INITIAL_CONVERSION_S");

	push	OFFSET ??_C@_0DK@LHMFCLHP@TXT_KEY_NOTIFICATION_RELIGION_SP@
	lea	ecx, DWORD PTR $T237794[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR tv324[ebp], eax
	mov	edx, DWORD PTR tv324[ebp]
	mov	DWORD PTR tv651[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR tv651[ebp]
	push	eax
	lea	ecx, DWORD PTR _strSummary$226178[ebp]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T237794[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 4538 : 				kOwnerPlayer.GetNotifications()->Add(NOTIFICATION_RELIGION_SPREAD_NATURAL, strMessage.toUTF8(), strSummary.toUTF8(), m_pCity->getX(), m_pCity->getY(), -1);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+416]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T237937[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+416]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T237946[ebp], eax
	push	-1
	push	-1
	mov	ecx, DWORD PTR $T237937[ebp]
	push	ecx
	mov	edx, DWORD PTR $T237946[ebp]
	push	edx
	lea	ecx, DWORD PTR _strSummary$226178[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$226177[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	eax
	push	-976947174				; c5c4f81aH
	mov	ecx, DWORD PTR _kOwnerPlayer$226158[ebp]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 4539 : 			}

	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _strSummary$226178[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strMessage$226177[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN25@CityConver:

; 4540 : 		}
; 4541 : 
; 4542 : 		//More Achievements
; 4543 : 		if(m_pCity->getOwner() != GC.getGame().getActivePlayer() && pNewReligion->m_eFounder == GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T237955[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237959[ebp], eax
	mov	ecx, DWORD PTR $T237959[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T237955[ebp], eax
	je	$LN23@CityConver
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237963[ebp], ecx
	mov	ecx, DWORD PTR $T237963[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	mov	edx, DWORD PTR _pNewReligion$226145[ebp]
	cmp	DWORD PTR [edx+4], eax
	jne	SHORT $LN23@CityConver

; 4544 : 		{
; 4545 : 			if(m_pCity->GetCityReligions()->IsHolyCityAnyReligion() && !m_pCity->GetCityReligions()->IsHolyCityForReligion(pNewReligion->m_eReligion))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsHolyCityAnyReligion@CvCityReligions@@QAE_NXZ ; CvCityReligions::IsHolyCityAnyReligion
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN23@CityConver
	mov	edx, DWORD PTR _pNewReligion$226145[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+416]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsHolyCityForReligion
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN23@CityConver

; 4546 : 			{
; 4547 : 				gDLL->UnlockAchievement(ACHIEVEMENT_XP1_18);

	mov	eax, DWORD PTR $T237967[ebp]
	mov	DWORD PTR tv417[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv417[ebp], ecx
	push	208					; 000000d0H
	mov	edx, DWORD PTR tv417[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv417[ebp]
	mov	edx, DWORD PTR [eax+828]
	call	edx
$LN23@CityConver:

; 4548 : 			}
; 4549 : 		}
; 4550 : 
; 4551 : #ifndef AUI_ACHIEVEMENT_FIX_RELIGION_WE_ARE_FAMILY_WORKING
; 4552 : 		if(m_pCity->isCapital() && pNewReligion->m_eFounder == GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	call	?isCapital@CvCity@@QBE_NXZ		; CvCity::isCapital
	movzx	ecx, al
	test	ecx, ecx
	je	$LN22@CityConver
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T237971[ebp], edx
	mov	ecx, DWORD PTR $T237971[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	mov	ecx, DWORD PTR _pNewReligion$226145[ebp]
	cmp	DWORD PTR [ecx+4], eax
	jne	$LN22@CityConver

; 4553 : 		{
; 4554 : 			//Determine if this is a standard size or larger map.
; 4555 : 			bool bIsStandardOrLarger = false;

	mov	BYTE PTR _bIsStandardOrLarger$226188[ebp], 0

; 4556 : 			Database::Connection* pDB = GC.GetGameDatabase();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+912
	mov	DWORD PTR _pDB$226189[ebp], edx

; 4557 : 			Database::Results kStandardSize;

	push	0
	lea	ecx, DWORD PTR _kStandardSize$226190[ebp]
	call	DWORD PTR __imp_??0Results@Database@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 8

; 4558 : 			if(pDB->SelectAt(kStandardSize, "Worlds", "Type", "WORLDSIZE_STANDARD"))

	push	OFFSET ??_C@_0BD@EKNEGCMD@WORLDSIZE_STANDARD?$AA@
	push	OFFSET ??_C@_04KOACHJEN@Type?$AA@
	push	OFFSET ??_C@_06MEGNPIOK@Worlds?$AA@
	lea	eax, DWORD PTR _kStandardSize$226190[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDB$226189[ebp]
	call	DWORD PTR __imp_?SelectAt@Connection@Database@@QAE_NAAVResults@2@PBD11@Z
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN18@CityConver

; 4559 : 			{
; 4560 : 				if(kStandardSize.Step())

	lea	ecx, DWORD PTR _kStandardSize$226190[ebp]
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN18@CityConver

; 4561 : 				{
; 4562 : 					int idColumn = kStandardSize.ColumnPosition("ID");

	push	OFFSET ??_C@_02OLOABKKD@ID?$AA@
	lea	ecx, DWORD PTR _kStandardSize$226190[ebp]
	call	DWORD PTR __imp_?ColumnPosition@Results@Database@@QAEHPBD@Z
	mov	DWORD PTR _idColumn$226196[ebp], eax

; 4563 : 					if(idColumn >= 0)

	cmp	DWORD PTR _idColumn$226196[ebp], 0
	jl	SHORT $LN18@CityConver

; 4564 : 					{
; 4565 : 						WorldSizeTypes eWorldSize = GC.getMap().getWorldSize();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T237978[ebp], eax
	mov	ecx, DWORD PTR $T237978[ebp]
	call	?getWorldSize@CvMap@@QAE?AW4WorldSizeTypes@@XZ ; CvMap::getWorldSize
	mov	DWORD PTR _eWorldSize$226199[ebp], eax

; 4566 : 						int standardWorldSize = kStandardSize.GetInt(idColumn);

	mov	ecx, DWORD PTR _idColumn$226196[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kStandardSize$226190[ebp]
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z
	mov	DWORD PTR _standardWorldSize$226200[ebp], eax

; 4567 : 						if(eWorldSize >= standardWorldSize)

	mov	edx, DWORD PTR _eWorldSize$226199[ebp]
	cmp	edx, DWORD PTR _standardWorldSize$226200[ebp]
	jl	SHORT $LN18@CityConver

; 4568 : 						{
; 4569 : 							bIsStandardOrLarger = true;

	mov	BYTE PTR _bIsStandardOrLarger$226188[ebp], 1
$LN18@CityConver:

; 4570 : 						}
; 4571 : 					}
; 4572 : 				}
; 4573 : 			}
; 4574 : 
; 4575 : 			if(bIsStandardOrLarger)

	movzx	eax, BYTE PTR _bIsStandardOrLarger$226188[ebp]
	test	eax, eax
	je	$LN14@CityConver

; 4576 : 			{
; 4577 : 				//Determine if this religion has spread to all capitals
; 4578 : 				bool bSpreadToAllCapitals = true;

	mov	BYTE PTR _bSpreadToAllCapitals$226203[ebp], 1

; 4579 : 				for(int i = 0; i < MAX_MAJOR_CIVS; ++i)

	mov	DWORD PTR _i$226204[ebp], 0
	jmp	SHORT $LN16@CityConver
$LN15@CityConver:
	mov	ecx, DWORD PTR _i$226204[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$226204[ebp], ecx
$LN16@CityConver:
	cmp	DWORD PTR _i$226204[ebp], 22		; 00000016H
	jge	$LN14@CityConver

; 4580 : 				{
; 4581 : 					CvPlayerAI& kPlayer = GET_PLAYER(static_cast<PlayerTypes>(i));

	mov	edx, DWORD PTR _i$226204[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$226208[ebp], edx

; 4582 : 					if(kPlayer.isAlive())

	mov	eax, DWORD PTR _kPlayer$226208[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T237990[ebp], cl
	movzx	edx, BYTE PTR $T237990[ebp]
	test	edx, edx
	je	SHORT $LN10@CityConver

; 4583 : 					{
; 4584 : 						CvCity* pCapital = kPlayer.getCapitalCity();

	mov	ecx, DWORD PTR _kPlayer$226208[ebp]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pCapital$226211[ebp], eax

; 4585 : 						if(pCapital != NULL)

	cmp	DWORD PTR _pCapital$226211[ebp], 0
	je	SHORT $LN10@CityConver

; 4586 : 						{
; 4587 : 							CvCityReligions* pCityReligions = pCapital->GetCityReligions();

	mov	ecx, DWORD PTR _pCapital$226211[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	DWORD PTR _pCityReligions$226213[ebp], eax

; 4588 : 							if(pCityReligions != NULL)

	cmp	DWORD PTR _pCityReligions$226213[ebp], 0
	je	SHORT $LN10@CityConver

; 4589 : 							{
; 4590 : 								if(pCityReligions->GetReligiousMajority() != pNewReligion->m_eFounder)

	mov	ecx, DWORD PTR _pCityReligions$226213[ebp]
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	ecx, DWORD PTR _pNewReligion$226145[ebp]
	cmp	eax, DWORD PTR [ecx+4]
	je	SHORT $LN10@CityConver

; 4591 : 								{
; 4592 : 									bSpreadToAllCapitals = false;

	mov	BYTE PTR _bSpreadToAllCapitals$226203[ebp], 0

; 4593 : 									break;

	jmp	SHORT $LN14@CityConver
$LN10@CityConver:

; 4594 : 								}
; 4595 : 							}
; 4596 : 						}
; 4597 : 					}
; 4598 : 
; 4599 : 					if(bSpreadToAllCapitals)

	movzx	edx, BYTE PTR _bSpreadToAllCapitals$226203[ebp]
	test	edx, edx
	je	SHORT $LN9@CityConver

; 4600 : 					{
; 4601 : 						gDLL->UnlockAchievement(ACHIEVEMENT_XP1_19);

	mov	eax, DWORD PTR $T237994[ebp]
	mov	DWORD PTR tv531[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv531[ebp], ecx
	push	209					; 000000d1H
	mov	edx, DWORD PTR tv531[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv531[ebp]
	mov	edx, DWORD PTR [eax+828]
	call	edx
$LN9@CityConver:

; 4602 : 					}
; 4603 : 				}

	jmp	$LN15@CityConver
$LN14@CityConver:

; 4604 : 			}
; 4605 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _kStandardSize$226190[ebp]
	call	DWORD PTR __imp_??1Results@Database@@UAE@XZ
$LN22@CityConver:

; 4606 : #endif
; 4607 : 
; 4608 : 		// Diplo implications (there must have been religion switch and a responsible party)
; 4609 : 		if(eMajority != eOldMajority && eResponsibleParty != NO_PLAYER)

	mov	eax, DWORD PTR _eMajority$[ebp]
	cmp	eax, DWORD PTR _eOldMajority$[ebp]
	je	$LN6@CityConver
	cmp	DWORD PTR _eResponsibleParty$[ebp], -1
	je	$LN6@CityConver

; 4610 : 		{
; 4611 : 			// Is the city owner not the founder of this religion?
; 4612 : 			if(pNewReligion->m_eFounder != m_pCity->getOwner())

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+416]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T238003[ebp], eax
	mov	ecx, DWORD PTR _pNewReligion$226145[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR $T238003[ebp]
	je	$LN6@CityConver

; 4613 : 			{
; 4614 : 				CvPlayer& kCityOwnerPlayer = GET_PLAYER(m_pCity->getOwner());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+416]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T238012[ebp], edx
	mov	eax, DWORD PTR $T238012[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kCityOwnerPlayer$226219[ebp], eax

; 4615 : 
; 4616 : 				// Did he found another religion?
; 4617 : 				ReligionTypes eCityOwnerReligion = kCityOwnerPlayer.GetReligions()->GetReligionCreatedByPlayer();

	mov	ecx, DWORD PTR _kCityOwnerPlayer$226219[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eCityOwnerReligion$226220[ebp], eax

; 4618 : 				if(eCityOwnerReligion >= RELIGION_PANTHEON)

	cmp	DWORD PTR _eCityOwnerReligion$226220[ebp], 0
	jl	SHORT $LN6@CityConver

; 4619 : 				{
; 4620 : 					int iPoints = 0;

	mov	DWORD PTR _iPoints$226222[ebp], 0

; 4621 : 
; 4622 : 					// His religion wasn't present here, minor hit
; 4623 : 					if(eOldMajority != eCityOwnerReligion)

	mov	ecx, DWORD PTR _eOldMajority$[ebp]
	cmp	ecx, DWORD PTR _eCityOwnerReligion$226220[ebp]
	je	SHORT $LN5@CityConver

; 4624 : 					{
; 4625 : 						iPoints = GC.getRELIGION_DIPLO_HIT_INITIAL_CONVERT_FRIENDLY_CITY(); /*1*/

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7908
	mov	DWORD PTR _iPoints$226222[ebp], edx

; 4626 : 					}
; 4627 : 
; 4628 : 					// This was his holy city; huge hit!
; 4629 : 					else if(m_pCity->GetCityReligions()->IsHolyCityForReligion(eCityOwnerReligion))

	jmp	SHORT $LN160@CityConver
$LN5@CityConver:
	mov	eax, DWORD PTR _eCityOwnerReligion$226220[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+416]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsHolyCityForReligion
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@CityConver

; 4630 : 					{
; 4631 : 						iPoints = GC.getRELIGION_DIPLO_HIT_CONVERT_HOLY_CITY(); /*25*/

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7916
	mov	DWORD PTR _iPoints$226222[ebp], eax

; 4632 : 					}
; 4633 : 
; 4634 : 					// He had established his religion here, major hit
; 4635 : 					else

	jmp	SHORT $LN160@CityConver
$LN3@CityConver:

; 4636 : 					{
; 4637 : 						iPoints = GC.getRELIGION_DIPLO_HIT_RELIGIOUS_FLIP_FRIENDLY_CITY(); /*3*/

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7912
	mov	DWORD PTR _iPoints$226222[ebp], ecx
$LN160@CityConver:

; 4638 : 					}
; 4639 : 
; 4640 : 					kCityOwnerPlayer.GetDiplomacyAI()->ChangeNegativeReligiousConversionPoints(eResponsibleParty, iPoints);

	mov	edx, DWORD PTR _iPoints$226222[ebp]
	push	edx
	mov	eax, DWORD PTR _eResponsibleParty$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kCityOwnerPlayer$226219[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?ChangeNegativeReligiousConversionPoints@CvDiplomacyAI@@QAEXW4PlayerTypes@@H@Z ; CvDiplomacyAI::ChangeNegativeReligiousConversionPoints
$LN6@CityConver:

; 4641 : 				}
; 4642 : 			}
; 4643 : 		}
; 4644 : 
; 4645 : 		ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	ecx, DWORD PTR $T238028[ebp]
	mov	DWORD PTR tv583[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv583[ebp], edx
	mov	eax, DWORD PTR tv583[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv583[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR _pkScriptSystem$226227[ebp], eax

; 4646 : 		if(pkScriptSystem)

	cmp	DWORD PTR _pkScriptSystem$226227[ebp], 0
	je	$LN1@CityConver

; 4647 : 		{
; 4648 : 			CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$226229[ebp]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle
	mov	DWORD PTR __$EHRec$[ebp+8], 9

; 4649 : 			args->Push(m_pCity->getOwner());

	mov	ecx, DWORD PTR _args$226229[ebp]
	mov	DWORD PTR tv594[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+416]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T238040[ebp], ecx
	mov	edx, DWORD PTR $T238040[ebp]
	push	edx
	mov	eax, DWORD PTR tv594[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv594[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 4650 : 			args->Push(eMajority);

	mov	ecx, DWORD PTR _args$226229[ebp]
	mov	DWORD PTR tv604[ebp], ecx
	mov	edx, DWORD PTR _eMajority$[ebp]
	push	edx
	mov	eax, DWORD PTR tv604[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv604[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 4651 : 			args->Push(m_pCity->getX());

	mov	ecx, DWORD PTR _args$226229[ebp]
	mov	DWORD PTR tv611[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+416]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T238055[ebp], ecx
	mov	edx, DWORD PTR $T238055[ebp]
	push	edx
	mov	eax, DWORD PTR tv611[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv611[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 4652 : 			args->Push(m_pCity->getY());

	mov	ecx, DWORD PTR _args$226229[ebp]
	mov	DWORD PTR tv621[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+416]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T238067[ebp], ecx
	mov	edx, DWORD PTR $T238067[ebp]
	push	edx
	mov	eax, DWORD PTR tv621[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv621[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 4653 : 
; 4654 : 			// Attempt to execute the game events.
; 4655 : 			// Will return false if there are no registered listeners.
; 4656 : 			bool bResult = false;

	mov	BYTE PTR _bResult$226230[ebp], 0

; 4657 : 			LuaSupport::CallHook(pkScriptSystem, "CityConvertsReligion", args.get(), bResult);

	lea	ecx, DWORD PTR _bResult$226230[ebp]
	push	ecx
	mov	edx, DWORD PTR _args$226229[ebp]
	push	edx
	push	OFFSET ??_C@_0BF@LIEFLGFG@CityConvertsReligion?$AA@
	mov	eax, DWORD PTR _pkScriptSystem$226227[ebp]
	push	eax
	call	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallHook
	add	esp, 16					; 00000010H

; 4658 : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _args$226229[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN1@CityConver:

; 4659 : 	}
; 4660 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _strMessage$226162[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$1:
	lea	ecx, DWORD PTR _strSummary$226163[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$3:
	lea	ecx, DWORD PTR $T237790[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$4:
	lea	ecx, DWORD PTR $T237791[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$5:
	lea	ecx, DWORD PTR _strMessage$226177[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$6:
	lea	ecx, DWORD PTR _strSummary$226178[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$8:
	lea	ecx, DWORD PTR $T237793[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$9:
	lea	ecx, DWORD PTR $T237794[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$10:
	lea	ecx, DWORD PTR _kStandardSize$226190[ebp]
	jmp	DWORD PTR __imp_??1Results@Database@@UAE@XZ
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$11:
	lea	ecx, DWORD PTR _args$226229[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__ehhandler$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1176]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z ENDP ; CvCityReligions::CityConvertsReligion
PUBLIC	??_C@_0BG@EMFGOBME@?0?5No?5religion?5in?5city?$AA@ ; `string'
PUBLIC	??_C@_0N@FJDPPMPL@Atheists?3?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0O@PJKKHJGF@?0?5Secondary?3?5?$AA@	; `string'
PUBLIC	??_C@_04FEBIMPDM@?$CI?$CFd?$CJ?$AA@		; `string'
PUBLIC	??_C@_0N@NABAGAGN@?0?5Majority?3?5?$AA@		; `string'
PUBLIC	??_C@_07MNJDMHCM@Pop?3?5?$CFd?$AA@		; `string'
PUBLIC	??_C@_0N@ENDBKMOI@Spy?5pressure?$AA@		; `string'
PUBLIC	??_C@_0BE@NJECNOGL@Scripted?5conversion?$AA@	; `string'
PUBLIC	??_C@_0O@FNDJIAHM@Remove?5heresy?$AA@		; `string'
PUBLIC	??_C@_0BC@FLNKBJDB@Prophet?5spreading?$AA@	; `string'
PUBLIC	??_C@_0BE@LGLLLLHB@Missionary?5expended?$AA@	; `string'
PUBLIC	??_C@_0O@MNHJHDPB@City?5captured?$AA@		; `string'
PUBLIC	??_C@_0BB@DAAMEOPC@Pantheon?5founded?$AA@	; `string'
PUBLIC	??_C@_0BB@GLLFPHKA@Religion?5founded?$AA@	; `string'
PUBLIC	??_C@_0BC@BDPDIAJO@Population?5change?$AA@	; `string'
PUBLIC	??_C@_0BD@GPOJBIBC@Holy?5city?5pressure?$AA@	; `string'
PUBLIC	??_C@_0BH@OMHEHFIJ@Adjacent?5city?5pressure?$AA@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z:PROC
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z:PROC
;	COMDAT ??_C@_0BG@EMFGOBME@?0?5No?5religion?5in?5city?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0BG@EMFGOBME@?0?5No?5religion?5in?5city?$AA@ DB ', No religion in c'
	DB	'ity', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FJDPPMPL@Atheists?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0N@FJDPPMPL@Atheists?3?5?$CFd?$AA@ DB 'Atheists: %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PJKKHJGF@?0?5Secondary?3?5?$AA@
CONST	SEGMENT
??_C@_0O@PJKKHJGF@?0?5Secondary?3?5?$AA@ DB ', Secondary: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04FEBIMPDM@?$CI?$CFd?$CJ?$AA@
CONST	SEGMENT
??_C@_04FEBIMPDM@?$CI?$CFd?$CJ?$AA@ DB '(%d)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NABAGAGN@?0?5Majority?3?5?$AA@
CONST	SEGMENT
??_C@_0N@NABAGAGN@?0?5Majority?3?5?$AA@ DB ', Majority: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MNJDMHCM@Pop?3?5?$CFd?$AA@
CONST	SEGMENT
??_C@_07MNJDMHCM@Pop?3?5?$CFd?$AA@ DB 'Pop: %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ENDBKMOI@Spy?5pressure?$AA@
CONST	SEGMENT
??_C@_0N@ENDBKMOI@Spy?5pressure?$AA@ DB 'Spy pressure', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NJECNOGL@Scripted?5conversion?$AA@
CONST	SEGMENT
??_C@_0BE@NJECNOGL@Scripted?5conversion?$AA@ DB 'Scripted conversion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FNDJIAHM@Remove?5heresy?$AA@
CONST	SEGMENT
??_C@_0O@FNDJIAHM@Remove?5heresy?$AA@ DB 'Remove heresy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FLNKBJDB@Prophet?5spreading?$AA@
CONST	SEGMENT
??_C@_0BC@FLNKBJDB@Prophet?5spreading?$AA@ DB 'Prophet spreading', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LGLLLLHB@Missionary?5expended?$AA@
CONST	SEGMENT
??_C@_0BE@LGLLLLHB@Missionary?5expended?$AA@ DB 'Missionary expended', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MNHJHDPB@City?5captured?$AA@
CONST	SEGMENT
??_C@_0O@MNHJHDPB@City?5captured?$AA@ DB 'City captured', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DAAMEOPC@Pantheon?5founded?$AA@
CONST	SEGMENT
??_C@_0BB@DAAMEOPC@Pantheon?5founded?$AA@ DB 'Pantheon founded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GLLFPHKA@Religion?5founded?$AA@
CONST	SEGMENT
??_C@_0BB@GLLFPHKA@Religion?5founded?$AA@ DB 'Religion founded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BDPDIAJO@Population?5change?$AA@
CONST	SEGMENT
??_C@_0BC@BDPDIAJO@Population?5change?$AA@ DB 'Population change', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GPOJBIBC@Holy?5city?5pressure?$AA@
CONST	SEGMENT
??_C@_0BD@GPOJBIBC@Holy?5city?5pressure?$AA@ DB 'Holy city pressure', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OMHEHFIJ@Adjacent?5city?5pressure?$AA@
CONST	SEGMENT
??_C@_0BH@OMHEHFIJ@Adjacent?5city?5pressure?$AA@ DB 'Adjacent city pressu'
	DB	're', 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$6
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z
_TEXT	SEGMENT
tv356 = -300						; size = 4
tv74 = -296						; size = 4
tv354 = -292						; size = 4
tv362 = -288						; size = 4
tv169 = -284						; size = 4
tv352 = -280						; size = 4
tv373 = -276						; size = 4
tv384 = -272						; size = 4
tv86 = -268						; size = 4
_this$ = -264						; size = 4
$T238195 = -260						; size = 4
$T238126 = -256						; size = 4
$T238122 = -252						; size = 4
$T238114 = -248						; size = 4
$T238113 = -244						; size = 4
$T238109 = -240						; size = 4
$T238086 = -236						; size = 28
$T238085 = -208						; size = 28
$T238084 = -180						; size = 28
$T238083 = -152						; size = 28
_pEntry$226281 = -124					; size = 4
_pEntry$226275 = -120					; size = 4
_eMajority$226273 = -116				; size = 4
_eSecondary$226279 = -112				; size = 4
_strOutBuf$226237 = -108				; size = 28
_strReasonString$226238 = -80				; size = 28
_temp$226239 = -52					; size = 28
__$ArrayPad$ = -24					; size = 4
_pLog$226240 = -20					; size = 4
_pCityRel$226241 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_eReason$ = 8						; size = 4
?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z PROC ; CvCityReligions::LogFollowersChange, COMDAT
; _this$ = ecx

; 4664 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 4665 : 	if(GC.getLogging() && GC.getAILogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	eax, al
	test	eax, eax
	je	$LN21@LogFollowe
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getAILogging@CvGlobals@@QAE_NXZ	; CvGlobals::getAILogging
	movzx	ecx, al
	test	ecx, ecx
	je	$LN21@LogFollowe

; 4666 : 	{
; 4667 : 		CvString strOutBuf;

	lea	ecx, DWORD PTR _strOutBuf$226237[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 4668 : 		CvString strReasonString;

	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 4669 : 		CvString temp;

	lea	ecx, DWORD PTR _temp$226239[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 4670 : 		FILogFile* pLog;
; 4671 : 		CvCityReligions* pCityRel = m_pCity->GetCityReligions();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+416]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	DWORD PTR _pCityRel$226241[ebp], eax

; 4672 : 
; 4673 : 		pLog = LOGFILEMGR.GetLog(GC.getGame().GetGameReligions()->GetLogFileName(), FILogFile::kDontTimeStamp);

	call	?GetInstance@FILogFileMgr@@SAAAV1@XZ	; FILogFileMgr::GetInstance
	mov	DWORD PTR tv86[ebp], eax
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T238109[ebp], eax
	lea	ecx, DWORD PTR $T238083[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T238109[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ ; CvGameReligions::GetLogFileName
	mov	DWORD PTR tv384[ebp], eax
	mov	edx, DWORD PTR tv384[ebp]
	mov	DWORD PTR $T238113[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR $T238113[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T238114[ebp], eax
	push	0
	push	1
	mov	eax, DWORD PTR $T238114[ebp]
	push	eax
	mov	ecx, DWORD PTR tv86[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv86[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	DWORD PTR _pLog$226240[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T238083[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4674 : 
; 4675 : 		// Get the leading info for this line
; 4676 : 		strOutBuf.Format("%03d, %d, ", GC.getGame().getElapsedGameTurns(), GC.getGame().getGameTurnYear());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T238122[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T238126[ebp], edx
	mov	ecx, DWORD PTR $T238122[ebp]
	call	?getGameTurnYear@CvGame@@QAEHXZ		; CvGame::getGameTurnYear
	push	eax
	mov	ecx, DWORD PTR $T238126[ebp]
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	push	eax
	push	OFFSET ??_C@_0L@FOFKLADA@?$CF03d?0?5?$CFd?0?5?$AA@
	lea	eax, DWORD PTR _strOutBuf$226237[ebp]
	push	eax
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format
	add	esp, 16					; 00000010H

; 4677 : 		strOutBuf += m_pCity->getName();

	lea	ecx, DWORD PTR $T238084[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+416]
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	mov	DWORD PTR tv373[ebp], eax
	mov	eax, DWORD PTR tv373[ebp]
	mov	DWORD PTR tv352[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv352[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strOutBuf$226237[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T238084[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4678 : 		strOutBuf += ", ";

	push	OFFSET ??_C@_02KEGNLNML@?0?5?$AA@
	lea	ecx, DWORD PTR _strOutBuf$226237[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 4679 : 
; 4680 : 		// Add a reason string
; 4681 : 		switch(eReason)

	mov	edx, DWORD PTR _eReason$[ebp]
	mov	DWORD PTR tv169[ebp], edx
	cmp	DWORD PTR tv169[ebp], 10		; 0000000aH
	ja	$LN18@LogFollowe
	mov	eax, DWORD PTR tv169[ebp]
	jmp	DWORD PTR $LN113@LogFollowe[eax*4]
$LN17@LogFollowe:

; 4682 : 		{
; 4683 : 		case FOLLOWER_CHANGE_ADJACENT_PRESSURE:
; 4684 : 			strReasonString = "Adjacent city pressure";

	mov	ecx, OFFSET ??_C@_0BH@OMHEHFIJ@Adjacent?5city?5pressure?$AA@
	test	ecx, ecx
	je	SHORT $LN54@LogFollowe
	push	OFFSET ??_C@_0BH@OMHEHFIJ@Adjacent?5city?5pressure?$AA@
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN55@LogFollowe
$LN54@LogFollowe:
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN55@LogFollowe:

; 4685 : 			break;

	jmp	$LN18@LogFollowe
$LN16@LogFollowe:

; 4686 : 		case FOLLOWER_CHANGE_HOLY_CITY:
; 4687 : 			strReasonString = "Holy city pressure";

	mov	edx, OFFSET ??_C@_0BD@GPOJBIBC@Holy?5city?5pressure?$AA@
	test	edx, edx
	je	SHORT $LN58@LogFollowe
	push	OFFSET ??_C@_0BD@GPOJBIBC@Holy?5city?5pressure?$AA@
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN59@LogFollowe
$LN58@LogFollowe:
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN59@LogFollowe:

; 4688 : 			break;

	jmp	$LN18@LogFollowe
$LN15@LogFollowe:

; 4689 : 		case FOLLOWER_CHANGE_POP_CHANGE:
; 4690 : 			strReasonString = "Population change";

	mov	eax, OFFSET ??_C@_0BC@BDPDIAJO@Population?5change?$AA@
	test	eax, eax
	je	SHORT $LN62@LogFollowe
	push	OFFSET ??_C@_0BC@BDPDIAJO@Population?5change?$AA@
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN63@LogFollowe
$LN62@LogFollowe:
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN63@LogFollowe:

; 4691 : 			break;

	jmp	$LN18@LogFollowe
$LN14@LogFollowe:

; 4692 : 		case FOLLOWER_CHANGE_RELIGION_FOUNDED:
; 4693 : 			strReasonString = "Religion founded";

	mov	ecx, OFFSET ??_C@_0BB@GLLFPHKA@Religion?5founded?$AA@
	test	ecx, ecx
	je	SHORT $LN66@LogFollowe
	push	OFFSET ??_C@_0BB@GLLFPHKA@Religion?5founded?$AA@
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN67@LogFollowe
$LN66@LogFollowe:
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN67@LogFollowe:

; 4694 : 			break;

	jmp	$LN18@LogFollowe
$LN13@LogFollowe:

; 4695 : 		case FOLLOWER_CHANGE_PANTHEON_FOUNDED:
; 4696 : 			strReasonString = "Pantheon founded";

	mov	edx, OFFSET ??_C@_0BB@DAAMEOPC@Pantheon?5founded?$AA@
	test	edx, edx
	je	SHORT $LN70@LogFollowe
	push	OFFSET ??_C@_0BB@DAAMEOPC@Pantheon?5founded?$AA@
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN71@LogFollowe
$LN70@LogFollowe:
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN71@LogFollowe:

; 4697 : 			break;

	jmp	$LN18@LogFollowe
$LN12@LogFollowe:

; 4698 : 		case FOLLOWER_CHANGE_CONQUEST:
; 4699 : 			strReasonString = "City captured";

	mov	eax, OFFSET ??_C@_0O@MNHJHDPB@City?5captured?$AA@
	test	eax, eax
	je	SHORT $LN74@LogFollowe
	push	OFFSET ??_C@_0O@MNHJHDPB@City?5captured?$AA@
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN75@LogFollowe
$LN74@LogFollowe:
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN75@LogFollowe:

; 4700 : 			break;

	jmp	$LN18@LogFollowe
$LN11@LogFollowe:

; 4701 : 		case FOLLOWER_CHANGE_MISSIONARY:
; 4702 : 			strReasonString = "Missionary expended";

	mov	ecx, OFFSET ??_C@_0BE@LGLLLLHB@Missionary?5expended?$AA@
	test	ecx, ecx
	je	SHORT $LN78@LogFollowe
	push	OFFSET ??_C@_0BE@LGLLLLHB@Missionary?5expended?$AA@
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN79@LogFollowe
$LN78@LogFollowe:
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN79@LogFollowe:

; 4703 : 			break;

	jmp	$LN18@LogFollowe
$LN10@LogFollowe:

; 4704 : 		case FOLLOWER_CHANGE_PROPHET:
; 4705 : 			strReasonString = "Prophet spreading";

	mov	edx, OFFSET ??_C@_0BC@FLNKBJDB@Prophet?5spreading?$AA@
	test	edx, edx
	je	SHORT $LN82@LogFollowe
	push	OFFSET ??_C@_0BC@FLNKBJDB@Prophet?5spreading?$AA@
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN83@LogFollowe
$LN82@LogFollowe:
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN83@LogFollowe:

; 4706 : 			break;

	jmp	SHORT $LN18@LogFollowe
$LN9@LogFollowe:

; 4707 : 		case FOLLOWER_CHANGE_REMOVE_HERESY:
; 4708 : 			strReasonString = "Remove heresy";

	mov	eax, OFFSET ??_C@_0O@FNDJIAHM@Remove?5heresy?$AA@
	test	eax, eax
	je	SHORT $LN86@LogFollowe
	push	OFFSET ??_C@_0O@FNDJIAHM@Remove?5heresy?$AA@
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN87@LogFollowe
$LN86@LogFollowe:
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN87@LogFollowe:

; 4709 : 			break;

	jmp	SHORT $LN18@LogFollowe
$LN8@LogFollowe:

; 4710 : 		case FOLLOWER_CHANGE_SCRIPTED_CONVERSION:
; 4711 : 			strReasonString = "Scripted conversion";

	mov	ecx, OFFSET ??_C@_0BE@NJECNOGL@Scripted?5conversion?$AA@
	test	ecx, ecx
	je	SHORT $LN90@LogFollowe
	push	OFFSET ??_C@_0BE@NJECNOGL@Scripted?5conversion?$AA@
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN91@LogFollowe
$LN90@LogFollowe:
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN91@LogFollowe:

; 4712 : 			break;

	jmp	SHORT $LN18@LogFollowe
$LN7@LogFollowe:

; 4713 : 		case FOLLOWER_CHANGE_SPY_PRESSURE:
; 4714 : 			strReasonString = "Spy pressure";

	mov	edx, OFFSET ??_C@_0N@ENDBKMOI@Spy?5pressure?$AA@
	test	edx, edx
	je	SHORT $LN94@LogFollowe
	push	OFFSET ??_C@_0N@ENDBKMOI@Spy?5pressure?$AA@
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN18@LogFollowe
$LN94@LogFollowe:
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN18@LogFollowe:

; 4715 : 			break;
; 4716 : 		}
; 4717 : 		strOutBuf += strReasonString + ", ";

	push	OFFSET ??_C@_02KEGNLNML@?0?5?$AA@
	lea	eax, DWORD PTR _strReasonString$226238[ebp]
	push	eax
	lea	ecx, DWORD PTR $T238085[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv362[ebp], eax
	mov	edx, DWORD PTR tv362[ebp]
	mov	DWORD PTR tv354[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR tv354[ebp]
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$226237[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T238085[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4718 : 		temp.Format("Pop: %d", m_pCity->getPopulation());

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+416]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	push	eax
	push	OFFSET ??_C@_07MNJDMHCM@Pop?3?5?$CFd?$AA@
	lea	edx, DWORD PTR _temp$226239[ebp]
	push	edx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format
	add	esp, 12					; 0000000cH

; 4719 : 		strOutBuf += temp;

	lea	eax, DWORD PTR _temp$226239[ebp]
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$226237[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 4720 : 		if(pCityRel->IsReligionInCity())

	mov	ecx, DWORD PTR _pCityRel$226241[ebp]
	call	?IsReligionInCity@CvCityReligions@@QAE_NXZ ; CvCityReligions::IsReligionInCity
	movzx	ecx, al
	test	ecx, ecx
	je	$LN6@LogFollowe

; 4721 : 		{
; 4722 : 			ReligionTypes eMajority = pCityRel->GetReligiousMajority();

	mov	ecx, DWORD PTR _pCityRel$226241[ebp]
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eMajority$226273[ebp], eax

; 4723 : 			if(eMajority != NO_RELIGION)

	cmp	DWORD PTR _eMajority$226273[ebp], -1
	je	SHORT $LN5@LogFollowe

; 4724 : 			{
; 4725 : 				CvReligionEntry* pEntry = GC.getReligionInfo(eMajority);

	mov	edx, DWORD PTR _eMajority$226273[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo
	mov	DWORD PTR _pEntry$226275[ebp], eax

; 4726 : 				if(pEntry)

	cmp	DWORD PTR _pEntry$226275[ebp], 0
	je	SHORT $LN5@LogFollowe

; 4727 : 				{
; 4728 : 					strOutBuf += ", Majority: ";

	push	OFFSET ??_C@_0N@NABAGAGN@?0?5Majority?3?5?$AA@
	lea	ecx, DWORD PTR _strOutBuf$226237[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 4729 : 					strOutBuf += pEntry->GetDescription();

	mov	ecx, DWORD PTR _pEntry$226275[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$226237[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 4730 : 					temp.Format("(%d)", pCityRel->GetNumFollowers(eMajority));

	mov	eax, DWORD PTR _eMajority$226273[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCityRel$226241[ebp]
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers
	push	eax
	push	OFFSET ??_C@_04FEBIMPDM@?$CI?$CFd?$CJ?$AA@
	lea	ecx, DWORD PTR _temp$226239[ebp]
	push	ecx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format
	add	esp, 12					; 0000000cH

; 4731 : 					strOutBuf += temp;

	lea	edx, DWORD PTR _temp$226239[ebp]
	push	edx
	lea	ecx, DWORD PTR _strOutBuf$226237[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
$LN5@LogFollowe:

; 4732 : 				}
; 4733 : 			}
; 4734 : 			
; 4735 : 			ReligionTypes eSecondary = pCityRel->GetSecondaryReligion();

	mov	ecx, DWORD PTR _pCityRel$226241[ebp]
	call	?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetSecondaryReligion
	mov	DWORD PTR _eSecondary$226279[ebp], eax

; 4736 : 			if (eSecondary != NO_RELIGION)

	cmp	DWORD PTR _eSecondary$226279[ebp], -1
	je	SHORT $LN3@LogFollowe

; 4737 : 			{
; 4738 : 				CvReligionEntry* pEntry = GC.getReligionInfo(eSecondary);

	mov	eax, DWORD PTR _eSecondary$226279[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo
	mov	DWORD PTR _pEntry$226281[ebp], eax

; 4739 : 				if(pEntry)

	cmp	DWORD PTR _pEntry$226281[ebp], 0
	je	SHORT $LN3@LogFollowe

; 4740 : 				{
; 4741 : 					strOutBuf += ", Secondary: ";

	push	OFFSET ??_C@_0O@PJKKHJGF@?0?5Secondary?3?5?$AA@
	lea	ecx, DWORD PTR _strOutBuf$226237[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 4742 : 					strOutBuf += pEntry->GetDescription();

	mov	ecx, DWORD PTR _pEntry$226281[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$226237[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 4743 : 					temp.Format("(%d)", pCityRel->GetNumFollowers(eSecondary));

	mov	ecx, DWORD PTR _eSecondary$226279[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pCityRel$226241[ebp]
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers
	push	eax
	push	OFFSET ??_C@_04FEBIMPDM@?$CI?$CFd?$CJ?$AA@
	lea	edx, DWORD PTR _temp$226239[ebp]
	push	edx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format
	add	esp, 12					; 0000000cH

; 4744 : 					strOutBuf += temp;

	lea	eax, DWORD PTR _temp$226239[ebp]
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$226237[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
$LN3@LogFollowe:

; 4745 : 				}
; 4746 : 			}
; 4747 : 
; 4748 : 			temp.Format("Atheists: %d", pCityRel->GetNumFollowers(NO_RELIGION));

	push	-1
	mov	ecx, DWORD PTR _pCityRel$226241[ebp]
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers
	push	eax
	push	OFFSET ??_C@_0N@FJDPPMPL@Atheists?3?5?$CFd?$AA@
	lea	ecx, DWORD PTR _temp$226239[ebp]
	push	ecx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format
	add	esp, 12					; 0000000cH

; 4749 : 			strOutBuf += ", " + temp;

	lea	edx, DWORD PTR _temp$226239[ebp]
	push	edx
	push	OFFSET ??_C@_02KEGNLNML@?0?5?$AA@
	lea	eax, DWORD PTR $T238086[ebp]
	push	eax
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv74[ebp], eax
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR tv356[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv356[ebp]
	push	edx
	lea	ecx, DWORD PTR _strOutBuf$226237[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T238086[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4750 : 		}
; 4751 : 		else

	jmp	SHORT $LN1@LogFollowe
$LN6@LogFollowe:

; 4752 : 		{
; 4753 : 			strOutBuf += ", No religion in city";

	push	OFFSET ??_C@_0BG@EMFGOBME@?0?5No?5religion?5in?5city?$AA@
	lea	ecx, DWORD PTR _strOutBuf$226237[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN1@LogFollowe:

; 4754 : 		}
; 4755 : 
; 4756 : 		pLog->Msg(strOutBuf);

	lea	ecx, DWORD PTR _strOutBuf$226237[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T238195[ebp], eax
	mov	eax, DWORD PTR $T238195[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLog$226240[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pLog$226240[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx]
	call	ecx
	add	esp, 8

; 4757 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _temp$226239[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strOutBuf$226237[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN21@LogFollowe:

; 4758 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN113@LogFollowe:
	DD	$LN15@LogFollowe
	DD	$LN16@LogFollowe
	DD	$LN17@LogFollowe
	DD	$LN14@LogFollowe
	DD	$LN13@LogFollowe
	DD	$LN12@LogFollowe
	DD	$LN11@LogFollowe
	DD	$LN10@LogFollowe
	DD	$LN9@LogFollowe
	DD	$LN8@LogFollowe
	DD	$LN7@LogFollowe
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$0:
	lea	ecx, DWORD PTR _strOutBuf$226237[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$1:
	lea	ecx, DWORD PTR _strReasonString$226238[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$2:
	lea	ecx, DWORD PTR _temp$226239[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$3:
	lea	ecx, DWORD PTR $T238083[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$4:
	lea	ecx, DWORD PTR $T238084[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$5:
	lea	ecx, DWORD PTR $T238085[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$6:
	lea	ecx, DWORD PTR $T238086[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-292]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z ENDP ; CvCityReligions::LogFollowersChange
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAVCvCityReligions@@@Z ; operator>>
; Function compile flags: /Odtp
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAVCvCityReligions@@@Z
_TEXT	SEGMENT
_i$238252 = -56						; size = 4
$T238236 = -52						; size = 4
$T238226 = -45						; size = 1
_iI$226301 = -44					; size = 4
_iTemp$226297 = -40					; size = 4
_bTemp$226294 = -33					; size = 1
_iEntriesToRead$ = -32					; size = 4
_uiVersion$ = -28					; size = 4
_tempItem$ = -24					; size = 24
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??5@YAAAVFDataStream@@AAV0@AAVCvCityReligions@@@Z PROC	; operator>>, COMDAT

; 4761 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H

; 4762 : 	uint uiVersion;
; 4763 : 
; 4764 : 	loadFrom >> uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 4765 : 
; 4766 : 	if(uiVersion >= 2)

	cmp	DWORD PTR _uiVersion$[ebp], 2
	jb	SHORT $LN7@operator@5

; 4767 : 	{
; 4768 : 		bool bTemp;
; 4769 : 		loadFrom >> bTemp;

	lea	ecx, DWORD PTR _bTemp$226294[ebp]
	push	ecx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 4770 : 		writeTo.SetPaidAdoptionBonus(bTemp);

	mov	dl, BYTE PTR _bTemp$226294[ebp]
	mov	BYTE PTR $T238226[ebp], dl
	mov	eax, DWORD PTR _writeTo$[ebp]
	mov	cl, BYTE PTR $T238226[ebp]
	mov	BYTE PTR [eax+420], cl

; 4771 : 	}
; 4772 : 	else

	jmp	SHORT $LN6@operator@5
$LN7@operator@5:

; 4773 : 	{
; 4774 : 		writeTo.SetPaidAdoptionBonus(false);

	mov	edx, DWORD PTR _writeTo$[ebp]
	mov	BYTE PTR [edx+420], 0
$LN6@operator@5:

; 4775 : 	}
; 4776 : 
; 4777 : 	if (uiVersion >= 3)

	cmp	DWORD PTR _uiVersion$[ebp], 3
	jb	SHORT $LN5@operator@5

; 4778 : 	{
; 4779 : 		int iTemp;
; 4780 : 		loadFrom >> iTemp;

	lea	eax, DWORD PTR _iTemp$226297[ebp]
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 4781 : 		writeTo.SetReligiousPressureModifier(iTemp);

	mov	ecx, DWORD PTR _iTemp$226297[ebp]
	mov	DWORD PTR $T238236[ebp], ecx
	mov	edx, DWORD PTR _writeTo$[ebp]
	mov	eax, DWORD PTR $T238236[ebp]
	mov	DWORD PTR [edx+424], eax

; 4782 : 	}
; 4783 : 	else

	jmp	SHORT $LN4@operator@5
$LN5@operator@5:

; 4784 : 	{
; 4785 : 		writeTo.SetReligiousPressureModifier(0);

	mov	ecx, DWORD PTR _writeTo$[ebp]
	mov	DWORD PTR [ecx+424], 0
$LN4@operator@5:

; 4786 : 	}
; 4787 : 
; 4788 : 	int iEntriesToRead;
; 4789 : 	CvReligionInCity tempItem;

	lea	ecx, DWORD PTR _tempItem$[ebp]
	call	??0CvReligionInCity@@QAE@XZ		; CvReligionInCity::CvReligionInCity

; 4790 : 
; 4791 : 	writeTo.m_ReligionStatus.clear();

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN30@operator@5
	mov	DWORD PTR _i$238252[ebp], 0
	jmp	SHORT $LN28@operator@5
$LN27@operator@5:
	mov	eax, DWORD PTR _i$238252[ebp]
	add	eax, 1
	mov	DWORD PTR _i$238252[ebp], eax
$LN28@operator@5:
	mov	ecx, DWORD PTR _writeTo$[ebp]
	mov	edx, DWORD PTR _i$238252[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jae	SHORT $LN30@operator@5
	jmp	SHORT $LN27@operator@5
$LN30@operator@5:
	mov	eax, DWORD PTR _writeTo$[ebp]
	mov	DWORD PTR [eax+4], 0

; 4792 : 	loadFrom >> iEntriesToRead;

	lea	ecx, DWORD PTR _iEntriesToRead$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 4793 : 	for(int iI = 0; iI < iEntriesToRead; iI++)

	mov	DWORD PTR _iI$226301[ebp], 0
	jmp	SHORT $LN3@operator@5
$LN2@operator@5:
	mov	edx, DWORD PTR _iI$226301[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$226301[ebp], edx
$LN3@operator@5:
	mov	eax, DWORD PTR _iI$226301[ebp]
	cmp	eax, DWORD PTR _iEntriesToRead$[ebp]
	jge	SHORT $LN1@operator@5

; 4794 : 	{
; 4795 : 		loadFrom >> tempItem;

	lea	ecx, DWORD PTR _tempItem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _loadFrom$[ebp]
	push	edx
	call	??5@YAAAVFDataStream@@AAV0@AAVCvReligionInCity@@@Z ; operator>>
	add	esp, 8

; 4796 : 		writeTo.m_ReligionStatus.push_back(tempItem);

	lea	eax, DWORD PTR _tempItem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writeTo$[ebp]
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back

; 4797 : 	}

	jmp	SHORT $LN2@operator@5
$LN1@operator@5:

; 4798 : 
; 4799 : 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[ebp]

; 4800 : }

	mov	esp, ebp
	pop	ebp
	ret	0
??5@YAAAVFDataStream@@AAV0@AAVCvCityReligions@@@Z ENDP	; operator>>
_TEXT	ENDS
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABVCvCityReligions@@@Z ; operator<<
; Function compile flags: /Odtp
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABVCvCityReligions@@@Z
_TEXT	SEGMENT
$T238329 = -32						; size = 4
$T238322 = -28						; size = 4
$T238315 = -21						; size = 1
$T238308 = -20						; size = 4
$T238307 = -16						; size = 4
$T238306 = -9						; size = 1
_uiVersion$ = -8					; size = 4
_it$ = -4						; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??6@YAAAVFDataStream@@AAV0@ABVCvCityReligions@@@Z PROC	; operator<<, COMDAT

; 4804 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 4805 : 	uint uiVersion = 3;

	mov	DWORD PTR _uiVersion$[ebp], 3

; 4806 : 
; 4807 : 	saveTo << uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 4808 : 
; 4809 : 	saveTo << readFrom.HasPaidAdoptionBonus();

	mov	ecx, DWORD PTR _readFrom$[ebp]
	mov	dl, BYTE PTR [ecx+420]
	mov	BYTE PTR $T238315[ebp], dl
	mov	al, BYTE PTR $T238315[ebp]
	mov	BYTE PTR $T238306[ebp], al
	lea	ecx, DWORD PTR $T238306[ebp]
	push	ecx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 4810 : 
; 4811 : 	saveTo << readFrom.GetReligiousPressureModifier();

	mov	edx, DWORD PTR _readFrom$[ebp]
	mov	eax, DWORD PTR [edx+424]
	mov	DWORD PTR $T238322[ebp], eax
	mov	ecx, DWORD PTR $T238322[ebp]
	mov	DWORD PTR $T238307[ebp], ecx
	lea	edx, DWORD PTR $T238307[ebp]
	push	edx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 4812 : 
; 4813 : 	ReligionInCityList::const_iterator it;
; 4814 : 	saveTo << readFrom.m_ReligionStatus.size();

	mov	eax, DWORD PTR _readFrom$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T238329[ebp], ecx
	mov	edx, DWORD PTR $T238329[ebp]
	mov	DWORD PTR $T238308[ebp], edx
	lea	eax, DWORD PTR $T238308[ebp]
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 4815 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4816 : 	for (it = readFrom.m_ReligionStatus.begin(); it != readFrom.m_ReligionStatus.end(); ++it)
; 4817 : #else
; 4818 : 	for(it = readFrom.m_ReligionStatus.begin(); it != readFrom.m_ReligionStatus.end(); it++)

	mov	ecx, DWORD PTR _readFrom$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _it$[ebp], edx
	jmp	SHORT $LN22@operator@6
$LN2@operator@6:
	mov	eax, DWORD PTR _it$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR _it$[ebp], eax
$LN22@operator@6:
	mov	ecx, DWORD PTR _readFrom$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 24					; 00000018H
	mov	eax, DWORD PTR _readFrom$[ebp]
	add	edx, DWORD PTR [eax]
	cmp	DWORD PTR _it$[ebp], edx
	je	SHORT $LN1@operator@6

; 4819 : #endif
; 4820 : 	{
; 4821 : 		saveTo << *it;

	mov	ecx, DWORD PTR _it$[ebp]
	push	ecx
	mov	edx, DWORD PTR _saveTo$[ebp]
	push	edx
	call	??6@YAAAVFDataStream@@AAV0@ABVCvReligionInCity@@@Z ; operator<<
	add	esp, 8

; 4822 : 	}

	jmp	SHORT $LN2@operator@6
$LN1@operator@6:

; 4823 : 
; 4824 : 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[ebp]

; 4825 : }

	mov	esp, ebp
	pop	ebp
	ret	0
??6@YAAAVFDataStream@@AAV0@ABVCvCityReligions@@@Z ENDP	; operator<<
_TEXT	ENDS
PUBLIC	??0CvUnitReligion@@QAE@XZ			; CvUnitReligion::CvUnitReligion
; Function compile flags: /Odtp
;	COMDAT ??0CvUnitReligion@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CvUnitReligion@@QAE@XZ PROC				; CvUnitReligion::CvUnitReligion, COMDAT
; _this$ = ecx

; 4835 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 4836 : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CvUnitReligion@@QAE@XZ ENDP				; CvUnitReligion::CvUnitReligion
_TEXT	ENDS
PUBLIC	?Init@CvUnitReligion@@QAEXXZ			; CvUnitReligion::Init
; Function compile flags: /Odtp
;	COMDAT ?Init@CvUnitReligion@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CvUnitReligion@@QAEXXZ PROC			; CvUnitReligion::Init, COMDAT
; _this$ = ecx

; 4840 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4841 : 	m_eReligion = NO_RELIGION;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1

; 4842 : 	m_iStrength = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 4843 : 	m_iSpreadsLeft = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0

; 4844 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CvUnitReligion@@QAEXXZ ENDP			; CvUnitReligion::Init
_TEXT	ENDS
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAVCvUnitReligion@@@Z ; operator>>
; Function compile flags: /Odtp
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAVCvUnitReligion@@@Z
_TEXT	SEGMENT
$T238368 = -20						; size = 4
$T238361 = -16						; size = 4
$T238354 = -12						; size = 4
_uiVersion$ = -8					; size = 4
_temp$ = -4						; size = 4
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??5@YAAAVFDataStream@@AAV0@AAVCvUnitReligion@@@Z PROC	; operator>>, COMDAT

; 4848 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 4849 : 	uint uiVersion;
; 4850 : 
; 4851 : 	loadFrom >> uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 4852 : 
; 4853 : 	int temp;
; 4854 : 	loadFrom >> temp;

	lea	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 4855 : 	writeTo.SetReligion((ReligionTypes)temp);

	mov	edx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR $T238354[ebp], edx
	mov	eax, DWORD PTR _writeTo$[ebp]
	mov	ecx, DWORD PTR $T238354[ebp]
	mov	DWORD PTR [eax], ecx

; 4856 : 	loadFrom >> temp;

	lea	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 4857 : 	writeTo.SetReligiousStrength(temp);

	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR $T238361[ebp], eax
	mov	ecx, DWORD PTR _writeTo$[ebp]
	mov	edx, DWORD PTR $T238361[ebp]
	mov	DWORD PTR [ecx+4], edx

; 4858 : 
; 4859 : 	if(uiVersion >= 2)

	cmp	DWORD PTR _uiVersion$[ebp], 2
	jb	SHORT $LN2@operator@7

; 4860 : 	{
; 4861 : 		loadFrom >> temp;

	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 4862 : 		writeTo.SetSpreadsLeft(temp);

	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR $T238368[ebp], ecx
	mov	edx, DWORD PTR _writeTo$[ebp]
	mov	eax, DWORD PTR $T238368[ebp]
	mov	DWORD PTR [edx+8], eax

; 4863 : 	}
; 4864 : 	else

	jmp	SHORT $LN1@operator@7
$LN2@operator@7:

; 4865 : 	{
; 4866 : 		writeTo.SetSpreadsLeft(0);

	mov	ecx, DWORD PTR _writeTo$[ebp]
	mov	DWORD PTR [ecx+8], 0
$LN1@operator@7:

; 4867 : 	}
; 4868 : 
; 4869 : 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[ebp]

; 4870 : }

	mov	esp, ebp
	pop	ebp
	ret	0
??5@YAAAVFDataStream@@AAV0@AAVCvUnitReligion@@@Z ENDP	; operator>>
_TEXT	ENDS
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABVCvUnitReligion@@@Z ; operator<<
; Function compile flags: /Odtp
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABVCvUnitReligion@@@Z
_TEXT	SEGMENT
$T238394 = -28						; size = 4
$T238387 = -24						; size = 4
$T238383 = -20						; size = 4
$T238376 = -16						; size = 4
$T238375 = -12						; size = 4
$T238374 = -8						; size = 4
_uiVersion$ = -4					; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??6@YAAAVFDataStream@@AAV0@ABVCvUnitReligion@@@Z PROC	; operator<<, COMDAT

; 4874 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 4875 : 	uint uiVersion = 2;

	mov	DWORD PTR _uiVersion$[ebp], 2

; 4876 : 
; 4877 : 	saveTo << uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 4878 : 
; 4879 : 	saveTo << readFrom.GetReligion();

	mov	ecx, DWORD PTR _readFrom$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T238383[ebp], edx
	mov	eax, DWORD PTR $T238383[ebp]
	mov	DWORD PTR $T238374[ebp], eax
	lea	ecx, DWORD PTR $T238374[ebp]
	push	ecx
	mov	edx, DWORD PTR _saveTo$[ebp]
	push	edx
	call	??6@YAAAVFDataStream@@AAV0@ABW4ReligionTypes@@@Z ; operator<<
	add	esp, 8

; 4880 : 	saveTo << readFrom.GetReligiousStrength();

	mov	eax, DWORD PTR _readFrom$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T238387[ebp], ecx
	mov	edx, DWORD PTR $T238387[ebp]
	mov	DWORD PTR $T238375[ebp], edx
	lea	eax, DWORD PTR $T238375[ebp]
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 4881 : 	saveTo << readFrom.GetSpreadsLeft();

	mov	ecx, DWORD PTR _readFrom$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T238394[ebp], edx
	mov	eax, DWORD PTR $T238394[ebp]
	mov	DWORD PTR $T238376[ebp], eax
	lea	ecx, DWORD PTR $T238376[ebp]
	push	ecx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 4882 : 
; 4883 : 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[ebp]

; 4884 : }

	mov	esp, ebp
	pop	ebp
	ret	0
??6@YAAAVFDataStream@@AAV0@ABVCvUnitReligion@@@Z ENDP	; operator<<
_TEXT	ENDS
PUBLIC	??0CvReligionAI@@QAE@XZ				; CvReligionAI::CvReligionAI
; Function compile flags: /Odtp
;	COMDAT ??0CvReligionAI@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CvReligionAI@@QAE@XZ PROC				; CvReligionAI::CvReligionAI, COMDAT
; _this$ = ecx

; 4895 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 4896 : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CvReligionAI@@QAE@XZ ENDP				; CvReligionAI::CvReligionAI
_TEXT	ENDS
PUBLIC	?Uninit@CvReligionAI@@QAEXXZ			; CvReligionAI::Uninit
PUBLIC	??1CvReligionAI@@QAE@XZ				; CvReligionAI::~CvReligionAI
; Function compile flags: /Odtp
;	COMDAT ??1CvReligionAI@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvReligionAI@@QAE@XZ PROC				; CvReligionAI::~CvReligionAI, COMDAT
; _this$ = ecx

; 4900 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4901 : 	Uninit();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Uninit@CvReligionAI@@QAEXXZ		; CvReligionAI::Uninit

; 4902 : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1CvReligionAI@@QAE@XZ ENDP				; CvReligionAI::~CvReligionAI
_TEXT	ENDS
PUBLIC	?Reset@CvReligionAI@@QAEXXZ			; CvReligionAI::Reset
PUBLIC	?Init@CvReligionAI@@QAEXPAVCvBeliefXMLEntries@@PAVCvPlayer@@@Z ; CvReligionAI::Init
; Function compile flags: /Odtp
;	COMDAT ?Init@CvReligionAI@@QAEXPAVCvBeliefXMLEntries@@PAVCvPlayer@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pBeliefs$ = 8						; size = 4
_pPlayer$ = 12						; size = 4
?Init@CvReligionAI@@QAEXPAVCvBeliefXMLEntries@@PAVCvPlayer@@@Z PROC ; CvReligionAI::Init, COMDAT
; _this$ = ecx

; 4906 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4907 : 	m_pBeliefs = pBeliefs;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pBeliefs$[ebp]
	mov	DWORD PTR [eax], ecx

; 4908 : 	m_pPlayer = pPlayer;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pPlayer$[ebp]
	mov	DWORD PTR [edx+4], eax

; 4909 : 
; 4910 : 	Reset();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reset@CvReligionAI@@QAEXXZ		; CvReligionAI::Reset

; 4911 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?Init@CvReligionAI@@QAEXPAVCvBeliefXMLEntries@@PAVCvPlayer@@@Z ENDP ; CvReligionAI::Init
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Uninit@CvReligionAI@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Uninit@CvReligionAI@@QAEXXZ PROC			; CvReligionAI::Uninit, COMDAT
; _this$ = ecx

; 4915 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4916 : 
; 4917 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Uninit@CvReligionAI@@QAEXXZ ENDP			; CvReligionAI::Uninit
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Reset@CvReligionAI@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Reset@CvReligionAI@@QAEXXZ PROC			; CvReligionAI::Reset, COMDAT
; _this$ = ecx

; 4921 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4922 : 
; 4923 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@CvReligionAI@@QAEXXZ ENDP			; CvReligionAI::Reset
_TEXT	ENDS
PUBLIC	?Read@CvReligionAI@@QAEXAAVFDataStream@@@Z	; CvReligionAI::Read
; Function compile flags: /Odtp
;	COMDAT ?Read@CvReligionAI@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_uiVersion$ = -4					; size = 4
_kStream$ = 8						; size = 4
?Read@CvReligionAI@@QAEXAAVFDataStream@@@Z PROC		; CvReligionAI::Read, COMDAT
; _this$ = ecx

; 4927 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 4928 : 	// Version number to maintain backwards compatibility
; 4929 : 	uint uiVersion;
; 4930 : 	kStream >> uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 4931 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Read@CvReligionAI@@QAEXAAVFDataStream@@@Z ENDP		; CvReligionAI::Read
_TEXT	ENDS
PUBLIC	?Write@CvReligionAI@@QAEXAAVFDataStream@@@Z	; CvReligionAI::Write
; Function compile flags: /Odtp
;	COMDAT ?Write@CvReligionAI@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_uiVersion$ = -4					; size = 4
_kStream$ = 8						; size = 4
?Write@CvReligionAI@@QAEXAAVFDataStream@@@Z PROC	; CvReligionAI::Write, COMDAT
; _this$ = ecx

; 4935 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 4936 : 	// Current version number
; 4937 : 	uint uiVersion = 1;

	mov	DWORD PTR _uiVersion$[ebp], 1

; 4938 : 	kStream << uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 4939 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Write@CvReligionAI@@QAEXAAVFDataStream@@@Z ENDP	; CvReligionAI::Write
_TEXT	ENDS
PUBLIC	?DoFaithPurchases@CvReligionAI@@AAEXXZ		; CvReligionAI::DoFaithPurchases
PUBLIC	?DoTurn@CvReligionAI@@QAEXXZ			; CvReligionAI::DoTurn
; Function compile flags: /Odtp
;	COMDAT ?DoTurn@CvReligionAI@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoTurn@CvReligionAI@@QAEXXZ PROC			; CvReligionAI::DoTurn, COMDAT
; _this$ = ecx

; 4943 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4944 : 	// Only AI players use this function for now
; 4945 : 	if(m_pPlayer->isHuman())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@DoTurn

; 4946 : 	{
; 4947 : 		return;

	jmp	SHORT $LN2@DoTurn
$LN1@DoTurn:

; 4948 : 	}
; 4949 : 
; 4950 : 	AI_PERF_FORMAT("AI-perf.csv", ("Religion AI, Turn %03d, %s", GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()) );
; 4951 : 
; 4952 : 	DoFaithPurchases();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoFaithPurchases@CvReligionAI@@AAEXXZ	; CvReligionAI::DoFaithPurchases
$LN2@DoTurn:

; 4953 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoTurn@CvReligionAI@@QAEXXZ ENDP			; CvReligionAI::DoTurn
_TEXT	ENDS
PUBLIC	??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>
PUBLIC	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
PUBLIC	?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z ; CvReligionAI::LogBeliefChoices
PUBLIC	?ChooseFromTopChoices@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE?AW4BeliefTypes@@HPAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z ; CvWeightedVector<enum BeliefTypes,100,1>::ChooseFromTopChoices
PUBLIC	??_C@_0CB@NACMGJPF@Choosing?5belief?5from?5Top?5Choices@ ; `string'
PUBLIC	??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z ; fastdelegate::MakeDelegate<CvGame,CvGame,int,char const *,int>
PUBLIC	?SortItems@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEXXZ ; CvWeightedVector<enum BeliefTypes,100,1>::SortItems
PUBLIC	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::push_back
PUBLIC	?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBelief
PUBLIC	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_0CB@NACMGJPF@Choosing?5belief?5from?5Top?5Choices@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0CB@NACMGJPF@Choosing?5belief?5from?5Top?5Choices@ DB 'Choosing bel'
	DB	'ief from Top Choices', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$3
__ehfuncinfo$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
_TEXT	SEGMENT
tv196 = -1032						; size = 4
_this$ = -1028						; size = 4
$T238535 = -944						; size = 4
$T238529 = -940						; size = 4
$T238518 = -936						; size = 4
_weightedElem$238501 = -924				; size = 8
$T238470 = -916						; size = 4
$T238446 = -912						; size = 4
$T238432 = -908						; size = 4
$T238426 = -904						; size = 4
$T238425 = -900						; size = 4
$T238424 = -896						; size = 4
$T238423 = -892						; size = 4
_iScore$226771 = -888					; size = 4
_eBelief$226768 = -884					; size = 4
_pEntry$226769 = -880					; size = 4
_it$226762 = -876					; size = 4
_fcn$ = -872						; size = 8
_pGameReligions$ = -864					; size = 4
_beliefChoices$ = -860					; size = 816
__$ArrayPad$ = -40					; size = 4
_rtnValue$ = -36					; size = 4
_availableBeliefs$ = -32				; size = 16
_iNumChoices$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ PROC ; CvReligionAI::ChoosePantheonBelief, COMDAT
; _this$ = ecx

; 4957 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1020				; 000003fcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 4958 : 	CvGameReligions* pGameReligions = GC.getGame().GetGameReligions();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T238432[ebp], eax
	mov	ecx, DWORD PTR $T238432[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pGameReligions$[ebp], eax

; 4959 : 	CvWeightedVector<BeliefTypes, SAFE_ESTIMATE_NUM_BELIEFS, true> beliefChoices;

	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 4960 : 
; 4961 : #ifdef AUI_WARNING_FIXES
; 4962 : 	const std::vector<BeliefTypes>& availableBeliefs = pGameReligions->GetAvailablePantheonBeliefs();
; 4963 : 
; 4964 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 4965 : #else
; 4966 : 	std::vector<BeliefTypes> availableBeliefs = pGameReligions->GetAvailablePantheonBeliefs();

	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pGameReligions$[ebp]
	call	?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailablePantheonBeliefs
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 4967 : 
; 4968 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	edx, DWORD PTR _availableBeliefs$[ebp+4]
	mov	DWORD PTR $T238446[ebp], edx
	mov	eax, DWORD PTR $T238446[ebp]
	mov	DWORD PTR _it$226762[ebp], eax

; 4969 : 	        it!= availableBeliefs.end(); ++it)

	jmp	SHORT $LN5@ChoosePant
$LN4@ChoosePant:
	mov	ecx, DWORD PTR _it$226762[ebp]
	add	ecx, 4
	mov	DWORD PTR _it$226762[ebp], ecx
$LN5@ChoosePant:
	mov	edx, DWORD PTR _availableBeliefs$[ebp+8]
	mov	DWORD PTR $T238470[ebp], edx
	mov	eax, DWORD PTR $T238470[ebp]
	mov	DWORD PTR $T238423[ebp], eax
	mov	ecx, DWORD PTR _it$226762[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR $T238423[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@ChoosePant

; 4970 : #endif
; 4971 : 	{
; 4972 : 		const BeliefTypes eBelief = (*it);

	mov	edx, DWORD PTR _it$226762[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _eBelief$226768[ebp], eax

; 4973 : 		CvBeliefEntry* pEntry = m_pBeliefs->GetEntry(eBelief);

	mov	ecx, DWORD PTR _eBelief$226768[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	DWORD PTR _pEntry$226769[ebp], eax

; 4974 : 		if(pEntry)

	cmp	DWORD PTR _pEntry$226769[ebp], 0
	je	SHORT $LN2@ChoosePant

; 4975 : 		{
; 4976 : 			const int iScore = ScoreBelief(pEntry);

	mov	eax, DWORD PTR _pEntry$226769[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBelief
	mov	DWORD PTR _iScore$226771[ebp], eax

; 4977 : 			if(iScore > 0)

	cmp	DWORD PTR _iScore$226771[ebp], 0
	jle	SHORT $LN2@ChoosePant

; 4978 : 			{
; 4979 : 				beliefChoices.push_back(eBelief, iScore);

	mov	DWORD PTR _weightedElem$238501[ebp], 0
	mov	DWORD PTR _weightedElem$238501[ebp+4], 0
	mov	ecx, DWORD PTR _eBelief$226768[ebp]
	mov	DWORD PTR _weightedElem$238501[ebp], ecx
	mov	edx, DWORD PTR _iScore$226771[ebp]
	mov	DWORD PTR _weightedElem$238501[ebp+4], edx
	lea	eax, DWORD PTR _weightedElem$238501[ebp]
	push	eax
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::push_back
$LN2@ChoosePant:

; 4980 : 			}
; 4981 : 		}
; 4982 : 	}

	jmp	$LN4@ChoosePant
$LN3@ChoosePant:

; 4983 : 
; 4984 : 	// Choose from weighted vector
; 4985 : 	beliefChoices.SortItems();

	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?SortItems@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEXXZ ; CvWeightedVector<enum BeliefTypes,100,1>::SortItems

; 4986 : 	int iNumChoices = MIN(beliefChoices.size(),3);   // Throw out two-thirds of the choices -- this was way too loose as choices way down were being selected now only top 3

	mov	DWORD PTR $T238424[ebp], 3
	mov	ecx, DWORD PTR _beliefChoices$[ebp+4]
	mov	DWORD PTR $T238518[ebp], ecx
	mov	edx, DWORD PTR $T238518[ebp]
	mov	DWORD PTR $T238425[ebp], edx
	mov	eax, DWORD PTR $T238424[ebp]
	cmp	eax, DWORD PTR $T238425[ebp]
	jge	SHORT $LN57@ChoosePant
	lea	ecx, DWORD PTR $T238424[ebp]
	mov	DWORD PTR tv196[ebp], ecx
	jmp	SHORT $LN58@ChoosePant
$LN57@ChoosePant:
	lea	edx, DWORD PTR $T238425[ebp]
	mov	DWORD PTR tv196[ebp], edx
$LN58@ChoosePant:
	mov	eax, DWORD PTR tv196[ebp]
	mov	DWORD PTR $T238529[ebp], eax
	mov	ecx, DWORD PTR $T238529[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _iNumChoices$[ebp], edx

; 4987 : 	RandomNumberDelegate fcn = MakeDelegate(&GC.getGame(), &CvGame::getJonRandNum);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T238535[ebp], eax
	push	OFFSET ?getJonRandNum@CvGame@@QAEHHPBD@Z ; CvGame::getJonRandNum
	mov	ecx, DWORD PTR $T238535[ebp]
	push	ecx
	lea	edx, DWORD PTR _fcn$[ebp]
	push	edx
	call	??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z ; fastdelegate::MakeDelegate<CvGame,CvGame,int,char const *,int>
	add	esp, 12					; 0000000cH

; 4988 : 	BeliefTypes rtnValue = beliefChoices.ChooseFromTopChoices(iNumChoices, &fcn, "Choosing belief from Top Choices");

	push	OFFSET ??_C@_0CB@NACMGJPF@Choosing?5belief?5from?5Top?5Choices@
	lea	eax, DWORD PTR _fcn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iNumChoices$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?ChooseFromTopChoices@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE?AW4BeliefTypes@@HPAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z ; CvWeightedVector<enum BeliefTypes,100,1>::ChooseFromTopChoices
	mov	DWORD PTR _rtnValue$[ebp], eax

; 4989 : 	LogBeliefChoices(beliefChoices, rtnValue);

	mov	edx, DWORD PTR _rtnValue$[ebp]
	push	edx
	lea	eax, DWORD PTR _beliefChoices$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z ; CvReligionAI::LogBeliefChoices

; 4990 : 
; 4991 : 	return rtnValue;

	mov	ecx, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR $T238426[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
	mov	eax, DWORD PTR $T238426[ebp]

; 4992 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0:
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	jmp	??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>
__unwindfunclet$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__unwindfunclet$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$3:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1024]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ENDP ; CvReligionAI::ChoosePantheonBelief
PUBLIC	__$ArrayPad$
PUBLIC	?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ; CvReligionAI::ChooseFounderBelief
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$3
__ehfuncinfo$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
_TEXT	SEGMENT
tv196 = -1032						; size = 4
_this$ = -1028						; size = 4
$T238806 = -944						; size = 4
$T238799 = -940						; size = 4
$T238789 = -936						; size = 4
_weightedElem$238772 = -924				; size = 8
$T238741 = -916						; size = 4
$T238717 = -912						; size = 4
$T238703 = -908						; size = 4
$T238697 = -904						; size = 4
$T238696 = -900						; size = 4
$T238695 = -896						; size = 4
$T238694 = -892						; size = 4
_iScore$226962 = -888					; size = 4
_eBelief$226959 = -884					; size = 4
_pEntry$226960 = -880					; size = 4
_it$226953 = -876					; size = 4
_fcn$ = -872						; size = 8
_pGameReligions$ = -864					; size = 4
_beliefChoices$ = -860					; size = 816
__$ArrayPad$ = -40					; size = 4
_rtnValue$ = -36					; size = 4
_availableBeliefs$ = -32				; size = 16
_iNumChoices$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ PROC ; CvReligionAI::ChooseFounderBelief, COMDAT
; _this$ = ecx

; 4996 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1020				; 000003fcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 4997 : 	CvGameReligions* pGameReligions = GC.getGame().GetGameReligions();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T238703[ebp], eax
	mov	ecx, DWORD PTR $T238703[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pGameReligions$[ebp], eax

; 4998 : 	CvWeightedVector<BeliefTypes, SAFE_ESTIMATE_NUM_BELIEFS, true> beliefChoices;

	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 4999 : 
; 5000 : #ifdef AUI_WARNING_FIXES
; 5001 : 	const std::vector<BeliefTypes>& availableBeliefs = pGameReligions->GetAvailableFounderBeliefs();
; 5002 : 
; 5003 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 5004 : #else
; 5005 : 	std::vector<BeliefTypes> availableBeliefs = pGameReligions->GetAvailableFounderBeliefs();

	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pGameReligions$[ebp]
	call	?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableFounderBeliefs
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 5006 : 
; 5007 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	edx, DWORD PTR _availableBeliefs$[ebp+4]
	mov	DWORD PTR $T238717[ebp], edx
	mov	eax, DWORD PTR $T238717[ebp]
	mov	DWORD PTR _it$226953[ebp], eax

; 5008 : 	        it!= availableBeliefs.end(); ++it)

	jmp	SHORT $LN5@ChooseFoun
$LN4@ChooseFoun:
	mov	ecx, DWORD PTR _it$226953[ebp]
	add	ecx, 4
	mov	DWORD PTR _it$226953[ebp], ecx
$LN5@ChooseFoun:
	mov	edx, DWORD PTR _availableBeliefs$[ebp+8]
	mov	DWORD PTR $T238741[ebp], edx
	mov	eax, DWORD PTR $T238741[ebp]
	mov	DWORD PTR $T238694[ebp], eax
	mov	ecx, DWORD PTR _it$226953[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR $T238694[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@ChooseFoun

; 5009 : #endif
; 5010 : 	{
; 5011 : 		const BeliefTypes eBelief = (*it);

	mov	edx, DWORD PTR _it$226953[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _eBelief$226959[ebp], eax

; 5012 : 		CvBeliefEntry* pEntry = m_pBeliefs->GetEntry(eBelief);

	mov	ecx, DWORD PTR _eBelief$226959[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	DWORD PTR _pEntry$226960[ebp], eax

; 5013 : 		if(pEntry)

	cmp	DWORD PTR _pEntry$226960[ebp], 0
	je	SHORT $LN2@ChooseFoun

; 5014 : 		{
; 5015 : 			const int iScore = ScoreBelief(pEntry);

	mov	eax, DWORD PTR _pEntry$226960[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBelief
	mov	DWORD PTR _iScore$226962[ebp], eax

; 5016 : 			if(iScore > 0)

	cmp	DWORD PTR _iScore$226962[ebp], 0
	jle	SHORT $LN2@ChooseFoun

; 5017 : 			{
; 5018 : 				beliefChoices.push_back(eBelief, iScore);

	mov	DWORD PTR _weightedElem$238772[ebp], 0
	mov	DWORD PTR _weightedElem$238772[ebp+4], 0
	mov	ecx, DWORD PTR _eBelief$226959[ebp]
	mov	DWORD PTR _weightedElem$238772[ebp], ecx
	mov	edx, DWORD PTR _iScore$226962[ebp]
	mov	DWORD PTR _weightedElem$238772[ebp+4], edx
	lea	eax, DWORD PTR _weightedElem$238772[ebp]
	push	eax
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::push_back
$LN2@ChooseFoun:

; 5019 : 			}
; 5020 : 		}
; 5021 : 	}

	jmp	$LN4@ChooseFoun
$LN3@ChooseFoun:

; 5022 : 
; 5023 : 	// Choose from weighted vector
; 5024 : 	beliefChoices.SortItems();

	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?SortItems@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEXXZ ; CvWeightedVector<enum BeliefTypes,100,1>::SortItems

; 5025 : 	int iNumChoices = MIN(beliefChoices.size(),3);   // this was way too loose as choices way down were being selected now only top 3

	mov	DWORD PTR $T238695[ebp], 3
	mov	ecx, DWORD PTR _beliefChoices$[ebp+4]
	mov	DWORD PTR $T238789[ebp], ecx
	mov	edx, DWORD PTR $T238789[ebp]
	mov	DWORD PTR $T238696[ebp], edx
	mov	eax, DWORD PTR $T238695[ebp]
	cmp	eax, DWORD PTR $T238696[ebp]
	jge	SHORT $LN57@ChooseFoun
	lea	ecx, DWORD PTR $T238695[ebp]
	mov	DWORD PTR tv196[ebp], ecx
	jmp	SHORT $LN58@ChooseFoun
$LN57@ChooseFoun:
	lea	edx, DWORD PTR $T238696[ebp]
	mov	DWORD PTR tv196[ebp], edx
$LN58@ChooseFoun:
	mov	eax, DWORD PTR tv196[ebp]
	mov	DWORD PTR $T238799[ebp], eax
	mov	ecx, DWORD PTR $T238799[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _iNumChoices$[ebp], edx

; 5026 : 	RandomNumberDelegate fcn = MakeDelegate(&GC.getGame(), &CvGame::getJonRandNum);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T238806[ebp], eax
	push	OFFSET ?getJonRandNum@CvGame@@QAEHHPBD@Z ; CvGame::getJonRandNum
	mov	ecx, DWORD PTR $T238806[ebp]
	push	ecx
	lea	edx, DWORD PTR _fcn$[ebp]
	push	edx
	call	??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z ; fastdelegate::MakeDelegate<CvGame,CvGame,int,char const *,int>
	add	esp, 12					; 0000000cH

; 5027 : 	BeliefTypes rtnValue = beliefChoices.ChooseFromTopChoices(iNumChoices, &fcn, "Choosing belief from Top Choices");

	push	OFFSET ??_C@_0CB@NACMGJPF@Choosing?5belief?5from?5Top?5Choices@
	lea	eax, DWORD PTR _fcn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iNumChoices$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?ChooseFromTopChoices@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE?AW4BeliefTypes@@HPAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z ; CvWeightedVector<enum BeliefTypes,100,1>::ChooseFromTopChoices
	mov	DWORD PTR _rtnValue$[ebp], eax

; 5028 : 	LogBeliefChoices(beliefChoices, rtnValue);

	mov	edx, DWORD PTR _rtnValue$[ebp]
	push	edx
	lea	eax, DWORD PTR _beliefChoices$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z ; CvReligionAI::LogBeliefChoices

; 5029 : 
; 5030 : 	return rtnValue;

	mov	ecx, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR $T238697[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
	mov	eax, DWORD PTR $T238697[ebp]

; 5031 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0:
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	jmp	??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>
__unwindfunclet$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__unwindfunclet$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$3:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1024]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ENDP ; CvReligionAI::ChooseFounderBelief
PUBLIC	__$ArrayPad$
PUBLIC	?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ; CvReligionAI::ChooseFollowerBelief
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$3
__ehfuncinfo$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
_TEXT	SEGMENT
tv196 = -1032						; size = 4
_this$ = -1028						; size = 4
$T239077 = -944						; size = 4
$T239071 = -940						; size = 4
$T239060 = -936						; size = 4
_weightedElem$239043 = -924				; size = 8
$T239012 = -916						; size = 4
$T238988 = -912						; size = 4
$T238974 = -908						; size = 4
$T238968 = -904						; size = 4
$T238967 = -900						; size = 4
$T238966 = -896						; size = 4
$T238965 = -892						; size = 4
_iScore$226996 = -888					; size = 4
_eBelief$226993 = -884					; size = 4
_pEntry$226994 = -880					; size = 4
_it$226987 = -876					; size = 4
_fcn$ = -872						; size = 8
_pGameReligions$ = -864					; size = 4
_beliefChoices$ = -860					; size = 816
__$ArrayPad$ = -40					; size = 4
_rtnValue$ = -36					; size = 4
_availableBeliefs$ = -32				; size = 16
_iNumChoices$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ PROC ; CvReligionAI::ChooseFollowerBelief, COMDAT
; _this$ = ecx

; 5035 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1020				; 000003fcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 5036 : 	CvGameReligions* pGameReligions = GC.getGame().GetGameReligions();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T238974[ebp], eax
	mov	ecx, DWORD PTR $T238974[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pGameReligions$[ebp], eax

; 5037 : 	CvWeightedVector<BeliefTypes, SAFE_ESTIMATE_NUM_BELIEFS, true> beliefChoices;

	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 5038 : 
; 5039 : #ifdef AUI_WARNING_FIXES
; 5040 : 	const std::vector<BeliefTypes>& availableBeliefs = pGameReligions->GetAvailableFollowerBeliefs();
; 5041 : 
; 5042 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 5043 : #else
; 5044 : 	std::vector<BeliefTypes> availableBeliefs = pGameReligions->GetAvailableFollowerBeliefs();

	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pGameReligions$[ebp]
	call	?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableFollowerBeliefs
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 5045 : 
; 5046 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	edx, DWORD PTR _availableBeliefs$[ebp+4]
	mov	DWORD PTR $T238988[ebp], edx
	mov	eax, DWORD PTR $T238988[ebp]
	mov	DWORD PTR _it$226987[ebp], eax

; 5047 : 	        it!= availableBeliefs.end(); ++it)

	jmp	SHORT $LN5@ChooseFoll
$LN4@ChooseFoll:
	mov	ecx, DWORD PTR _it$226987[ebp]
	add	ecx, 4
	mov	DWORD PTR _it$226987[ebp], ecx
$LN5@ChooseFoll:
	mov	edx, DWORD PTR _availableBeliefs$[ebp+8]
	mov	DWORD PTR $T239012[ebp], edx
	mov	eax, DWORD PTR $T239012[ebp]
	mov	DWORD PTR $T238965[ebp], eax
	mov	ecx, DWORD PTR _it$226987[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR $T238965[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@ChooseFoll

; 5048 : #endif
; 5049 : 	{
; 5050 : 		const BeliefTypes eBelief = (*it);

	mov	edx, DWORD PTR _it$226987[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _eBelief$226993[ebp], eax

; 5051 : 		CvBeliefEntry* pEntry = m_pBeliefs->GetEntry(eBelief);

	mov	ecx, DWORD PTR _eBelief$226993[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	DWORD PTR _pEntry$226994[ebp], eax

; 5052 : 		if(pEntry)

	cmp	DWORD PTR _pEntry$226994[ebp], 0
	je	SHORT $LN2@ChooseFoll

; 5053 : 		{
; 5054 : 			const int iScore = ScoreBelief(pEntry);

	mov	eax, DWORD PTR _pEntry$226994[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBelief
	mov	DWORD PTR _iScore$226996[ebp], eax

; 5055 : 			if(iScore > 0)

	cmp	DWORD PTR _iScore$226996[ebp], 0
	jle	SHORT $LN2@ChooseFoll

; 5056 : 			{
; 5057 : 				beliefChoices.push_back(eBelief, iScore);

	mov	DWORD PTR _weightedElem$239043[ebp], 0
	mov	DWORD PTR _weightedElem$239043[ebp+4], 0
	mov	ecx, DWORD PTR _eBelief$226993[ebp]
	mov	DWORD PTR _weightedElem$239043[ebp], ecx
	mov	edx, DWORD PTR _iScore$226996[ebp]
	mov	DWORD PTR _weightedElem$239043[ebp+4], edx
	lea	eax, DWORD PTR _weightedElem$239043[ebp]
	push	eax
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::push_back
$LN2@ChooseFoll:

; 5058 : 			}
; 5059 : 		}
; 5060 : 	}

	jmp	$LN4@ChooseFoll
$LN3@ChooseFoll:

; 5061 : 
; 5062 : 	// Choose from weighted vector
; 5063 : 	beliefChoices.SortItems();

	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?SortItems@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEXXZ ; CvWeightedVector<enum BeliefTypes,100,1>::SortItems

; 5064 : 	int iNumChoices = MIN(beliefChoices.size(),3);   // this was way too loose as choices way down were being selected now only top 3

	mov	DWORD PTR $T238966[ebp], 3
	mov	ecx, DWORD PTR _beliefChoices$[ebp+4]
	mov	DWORD PTR $T239060[ebp], ecx
	mov	edx, DWORD PTR $T239060[ebp]
	mov	DWORD PTR $T238967[ebp], edx
	mov	eax, DWORD PTR $T238966[ebp]
	cmp	eax, DWORD PTR $T238967[ebp]
	jge	SHORT $LN57@ChooseFoll
	lea	ecx, DWORD PTR $T238966[ebp]
	mov	DWORD PTR tv196[ebp], ecx
	jmp	SHORT $LN58@ChooseFoll
$LN57@ChooseFoll:
	lea	edx, DWORD PTR $T238967[ebp]
	mov	DWORD PTR tv196[ebp], edx
$LN58@ChooseFoll:
	mov	eax, DWORD PTR tv196[ebp]
	mov	DWORD PTR $T239071[ebp], eax
	mov	ecx, DWORD PTR $T239071[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _iNumChoices$[ebp], edx

; 5065 : 	RandomNumberDelegate fcn = MakeDelegate(&GC.getGame(), &CvGame::getJonRandNum);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T239077[ebp], eax
	push	OFFSET ?getJonRandNum@CvGame@@QAEHHPBD@Z ; CvGame::getJonRandNum
	mov	ecx, DWORD PTR $T239077[ebp]
	push	ecx
	lea	edx, DWORD PTR _fcn$[ebp]
	push	edx
	call	??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z ; fastdelegate::MakeDelegate<CvGame,CvGame,int,char const *,int>
	add	esp, 12					; 0000000cH

; 5066 : 	BeliefTypes rtnValue = beliefChoices.ChooseFromTopChoices(iNumChoices, &fcn, "Choosing belief from Top Choices");

	push	OFFSET ??_C@_0CB@NACMGJPF@Choosing?5belief?5from?5Top?5Choices@
	lea	eax, DWORD PTR _fcn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iNumChoices$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?ChooseFromTopChoices@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE?AW4BeliefTypes@@HPAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z ; CvWeightedVector<enum BeliefTypes,100,1>::ChooseFromTopChoices
	mov	DWORD PTR _rtnValue$[ebp], eax

; 5067 : 	LogBeliefChoices(beliefChoices, rtnValue);

	mov	edx, DWORD PTR _rtnValue$[ebp]
	push	edx
	lea	eax, DWORD PTR _beliefChoices$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z ; CvReligionAI::LogBeliefChoices

; 5068 : 
; 5069 : 	return rtnValue;

	mov	ecx, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR $T238968[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
	mov	eax, DWORD PTR $T238968[ebp]

; 5070 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0:
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	jmp	??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>
__unwindfunclet$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__unwindfunclet$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$3:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1024]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ENDP ; CvReligionAI::ChooseFollowerBelief
PUBLIC	__$ArrayPad$
PUBLIC	?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ; CvReligionAI::ChooseEnhancerBelief
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$3
__ehfuncinfo$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
_TEXT	SEGMENT
tv196 = -1032						; size = 4
_this$ = -1028						; size = 4
$T239348 = -944						; size = 4
$T239342 = -940						; size = 4
$T239331 = -936						; size = 4
_weightedElem$239314 = -924				; size = 8
$T239283 = -916						; size = 4
$T239259 = -912						; size = 4
$T239245 = -908						; size = 4
$T239239 = -904						; size = 4
$T239238 = -900						; size = 4
$T239237 = -896						; size = 4
$T239236 = -892						; size = 4
_iScore$227030 = -888					; size = 4
_eBelief$227027 = -884					; size = 4
_pEntry$227028 = -880					; size = 4
_it$227021 = -876					; size = 4
_fcn$ = -872						; size = 8
_pGameReligions$ = -864					; size = 4
_beliefChoices$ = -860					; size = 816
__$ArrayPad$ = -40					; size = 4
_rtnValue$ = -36					; size = 4
_availableBeliefs$ = -32				; size = 16
_iNumChoices$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ PROC ; CvReligionAI::ChooseEnhancerBelief, COMDAT
; _this$ = ecx

; 5074 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1020				; 000003fcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 5075 : 	CvGameReligions* pGameReligions = GC.getGame().GetGameReligions();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T239245[ebp], eax
	mov	ecx, DWORD PTR $T239245[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pGameReligions$[ebp], eax

; 5076 : 	CvWeightedVector<BeliefTypes, SAFE_ESTIMATE_NUM_BELIEFS, true> beliefChoices;

	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 5077 : 
; 5078 : #ifdef AUI_WARNING_FIXES
; 5079 : 	const std::vector<BeliefTypes>& availableBeliefs = pGameReligions->GetAvailableEnhancerBeliefs();
; 5080 : 
; 5081 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 5082 : #else
; 5083 : 	std::vector<BeliefTypes> availableBeliefs = pGameReligions->GetAvailableEnhancerBeliefs();

	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pGameReligions$[ebp]
	call	?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableEnhancerBeliefs
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 5084 : 
; 5085 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	edx, DWORD PTR _availableBeliefs$[ebp+4]
	mov	DWORD PTR $T239259[ebp], edx
	mov	eax, DWORD PTR $T239259[ebp]
	mov	DWORD PTR _it$227021[ebp], eax

; 5086 : 	        it!= availableBeliefs.end(); ++it)

	jmp	SHORT $LN5@ChooseEnha
$LN4@ChooseEnha:
	mov	ecx, DWORD PTR _it$227021[ebp]
	add	ecx, 4
	mov	DWORD PTR _it$227021[ebp], ecx
$LN5@ChooseEnha:
	mov	edx, DWORD PTR _availableBeliefs$[ebp+8]
	mov	DWORD PTR $T239283[ebp], edx
	mov	eax, DWORD PTR $T239283[ebp]
	mov	DWORD PTR $T239236[ebp], eax
	mov	ecx, DWORD PTR _it$227021[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR $T239236[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@ChooseEnha

; 5087 : #endif
; 5088 : 	{
; 5089 : 		const BeliefTypes eBelief = (*it);

	mov	edx, DWORD PTR _it$227021[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _eBelief$227027[ebp], eax

; 5090 : 		CvBeliefEntry* pEntry = m_pBeliefs->GetEntry(eBelief);

	mov	ecx, DWORD PTR _eBelief$227027[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	DWORD PTR _pEntry$227028[ebp], eax

; 5091 : 		if(pEntry)

	cmp	DWORD PTR _pEntry$227028[ebp], 0
	je	SHORT $LN2@ChooseEnha

; 5092 : 		{
; 5093 : 			const int iScore = ScoreBelief(pEntry);

	mov	eax, DWORD PTR _pEntry$227028[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBelief
	mov	DWORD PTR _iScore$227030[ebp], eax

; 5094 : 			if(iScore > 0)

	cmp	DWORD PTR _iScore$227030[ebp], 0
	jle	SHORT $LN2@ChooseEnha

; 5095 : 			{
; 5096 : 				beliefChoices.push_back(eBelief, iScore);

	mov	DWORD PTR _weightedElem$239314[ebp], 0
	mov	DWORD PTR _weightedElem$239314[ebp+4], 0
	mov	ecx, DWORD PTR _eBelief$227027[ebp]
	mov	DWORD PTR _weightedElem$239314[ebp], ecx
	mov	edx, DWORD PTR _iScore$227030[ebp]
	mov	DWORD PTR _weightedElem$239314[ebp+4], edx
	lea	eax, DWORD PTR _weightedElem$239314[ebp]
	push	eax
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::push_back
$LN2@ChooseEnha:

; 5097 : 			}
; 5098 : 		}
; 5099 : 	}

	jmp	$LN4@ChooseEnha
$LN3@ChooseEnha:

; 5100 : 
; 5101 : 	// Choose from weighted vector
; 5102 : 	beliefChoices.SortItems();

	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?SortItems@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEXXZ ; CvWeightedVector<enum BeliefTypes,100,1>::SortItems

; 5103 : 	int iNumChoices = MIN(beliefChoices.size(),3);   // this was way too loose as choices way down were being selected now only top 3

	mov	DWORD PTR $T239237[ebp], 3
	mov	ecx, DWORD PTR _beliefChoices$[ebp+4]
	mov	DWORD PTR $T239331[ebp], ecx
	mov	edx, DWORD PTR $T239331[ebp]
	mov	DWORD PTR $T239238[ebp], edx
	mov	eax, DWORD PTR $T239237[ebp]
	cmp	eax, DWORD PTR $T239238[ebp]
	jge	SHORT $LN57@ChooseEnha
	lea	ecx, DWORD PTR $T239237[ebp]
	mov	DWORD PTR tv196[ebp], ecx
	jmp	SHORT $LN58@ChooseEnha
$LN57@ChooseEnha:
	lea	edx, DWORD PTR $T239238[ebp]
	mov	DWORD PTR tv196[ebp], edx
$LN58@ChooseEnha:
	mov	eax, DWORD PTR tv196[ebp]
	mov	DWORD PTR $T239342[ebp], eax
	mov	ecx, DWORD PTR $T239342[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _iNumChoices$[ebp], edx

; 5104 : 	RandomNumberDelegate fcn = MakeDelegate(&GC.getGame(), &CvGame::getJonRandNum);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T239348[ebp], eax
	push	OFFSET ?getJonRandNum@CvGame@@QAEHHPBD@Z ; CvGame::getJonRandNum
	mov	ecx, DWORD PTR $T239348[ebp]
	push	ecx
	lea	edx, DWORD PTR _fcn$[ebp]
	push	edx
	call	??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z ; fastdelegate::MakeDelegate<CvGame,CvGame,int,char const *,int>
	add	esp, 12					; 0000000cH

; 5105 : 	BeliefTypes rtnValue = beliefChoices.ChooseFromTopChoices(iNumChoices, &fcn, "Choosing belief from Top Choices");

	push	OFFSET ??_C@_0CB@NACMGJPF@Choosing?5belief?5from?5Top?5Choices@
	lea	eax, DWORD PTR _fcn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iNumChoices$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?ChooseFromTopChoices@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE?AW4BeliefTypes@@HPAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z ; CvWeightedVector<enum BeliefTypes,100,1>::ChooseFromTopChoices
	mov	DWORD PTR _rtnValue$[ebp], eax

; 5106 : 	LogBeliefChoices(beliefChoices, rtnValue);

	mov	edx, DWORD PTR _rtnValue$[ebp]
	push	edx
	lea	eax, DWORD PTR _beliefChoices$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z ; CvReligionAI::LogBeliefChoices

; 5107 : 
; 5108 : 	return rtnValue;

	mov	ecx, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR $T239239[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
	mov	eax, DWORD PTR $T239239[ebp]

; 5109 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0:
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	jmp	??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>
__unwindfunclet$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__unwindfunclet$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$3:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1024]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ENDP ; CvReligionAI::ChooseEnhancerBelief
PUBLIC	__$ArrayPad$
PUBLIC	?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z ; CvReligionAI::ChooseBonusBelief
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z$3
__ehfuncinfo$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z
_TEXT	SEGMENT
tv217 = -1044						; size = 4
_this$ = -1040						; size = 4
$T239631 = -956						; size = 4
$T239624 = -952						; size = 4
$T239614 = -948						; size = 4
_weightedElem$239594 = -936				; size = 8
$T239588 = -928						; size = 4
$T239584 = -924						; size = 4
$T239580 = -920						; size = 4
$T239554 = -916						; size = 4
$T239530 = -912						; size = 4
$T239516 = -908						; size = 4
$T239510 = -904						; size = 4
$T239509 = -900						; size = 4
$T239508 = -896						; size = 4
$T239507 = -892						; size = 4
_iScore$227068 = -888					; size = 4
_eBelief$227064 = -884					; size = 4
_pEntry$227065 = -880					; size = 4
_it$227058 = -876					; size = 4
_fcn$ = -872						; size = 8
_pGameReligions$ = -864					; size = 4
_beliefChoices$ = -860					; size = 816
__$ArrayPad$ = -40					; size = 4
_rtnValue$ = -36					; size = 4
_availableBeliefs$ = -32				; size = 16
_iNumChoices$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iExcludeBelief1$ = 8					; size = 4
_iExcludeBelief2$ = 12					; size = 4
_iExcludeBelief3$ = 16					; size = 4
?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z PROC ; CvReligionAI::ChooseBonusBelief, COMDAT
; _this$ = ecx

; 5113 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1032				; 00000408H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 5114 : 	CvGameReligions* pGameReligions = GC.getGame().GetGameReligions();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T239516[ebp], eax
	mov	ecx, DWORD PTR $T239516[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pGameReligions$[ebp], eax

; 5115 : 	CvWeightedVector<BeliefTypes, SAFE_ESTIMATE_NUM_BELIEFS, true> beliefChoices;

	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 5116 : 
; 5117 : #ifdef AUI_WARNING_FIXES
; 5118 : 	const std::vector<BeliefTypes>& availableBeliefs = pGameReligions->GetAvailableBonusBeliefs();
; 5119 : 
; 5120 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 5121 : #else
; 5122 : 	std::vector<BeliefTypes> availableBeliefs = pGameReligions->GetAvailableBonusBeliefs();

	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pGameReligions$[ebp]
	call	?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableBonusBeliefs
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 5123 : 
; 5124 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	edx, DWORD PTR _availableBeliefs$[ebp+4]
	mov	DWORD PTR $T239530[ebp], edx
	mov	eax, DWORD PTR $T239530[ebp]
	mov	DWORD PTR _it$227058[ebp], eax

; 5125 : 	        it!= availableBeliefs.end(); ++it)

	jmp	SHORT $LN6@ChooseBonu
$LN5@ChooseBonu:
	mov	ecx, DWORD PTR _it$227058[ebp]
	add	ecx, 4
	mov	DWORD PTR _it$227058[ebp], ecx
$LN6@ChooseBonu:
	mov	edx, DWORD PTR _availableBeliefs$[ebp+8]
	mov	DWORD PTR $T239554[ebp], edx
	mov	eax, DWORD PTR $T239554[ebp]
	mov	DWORD PTR $T239507[ebp], eax
	mov	ecx, DWORD PTR _it$227058[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR $T239507[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@ChooseBonu

; 5126 : #endif
; 5127 : 	{
; 5128 : 		const BeliefTypes eBelief = (*it);

	mov	edx, DWORD PTR _it$227058[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _eBelief$227064[ebp], eax

; 5129 : 		CvBeliefEntry* pEntry = m_pBeliefs->GetEntry(eBelief);

	mov	ecx, DWORD PTR _eBelief$227064[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	DWORD PTR _pEntry$227065[ebp], eax

; 5130 : 		if(pEntry)

	cmp	DWORD PTR _pEntry$227065[ebp], 0
	je	$LN3@ChooseBonu

; 5131 : 		{
; 5132 : 			if (pEntry->GetID() != iExcludeBelief1 && pEntry->GetID() != iExcludeBelief2 && pEntry->GetID() != iExcludeBelief3)

	mov	eax, DWORD PTR _pEntry$227065[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T239580[ebp], ecx
	mov	edx, DWORD PTR $T239580[ebp]
	cmp	edx, DWORD PTR _iExcludeBelief1$[ebp]
	je	$LN3@ChooseBonu
	mov	eax, DWORD PTR _pEntry$227065[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T239584[ebp], ecx
	mov	edx, DWORD PTR $T239584[ebp]
	cmp	edx, DWORD PTR _iExcludeBelief2$[ebp]
	je	SHORT $LN3@ChooseBonu
	mov	eax, DWORD PTR _pEntry$227065[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T239588[ebp], ecx
	mov	edx, DWORD PTR $T239588[ebp]
	cmp	edx, DWORD PTR _iExcludeBelief3$[ebp]
	je	SHORT $LN3@ChooseBonu

; 5133 : 			{
; 5134 : 				const int iScore = ScoreBelief(pEntry);

	mov	eax, DWORD PTR _pEntry$227065[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBelief
	mov	DWORD PTR _iScore$227068[ebp], eax

; 5135 : 				if(iScore > 0)

	cmp	DWORD PTR _iScore$227068[ebp], 0
	jle	SHORT $LN3@ChooseBonu

; 5136 : 				{
; 5137 : 					beliefChoices.push_back(eBelief, iScore);

	mov	DWORD PTR _weightedElem$239594[ebp], 0
	mov	DWORD PTR _weightedElem$239594[ebp+4], 0
	mov	ecx, DWORD PTR _eBelief$227064[ebp]
	mov	DWORD PTR _weightedElem$239594[ebp], ecx
	mov	edx, DWORD PTR _iScore$227068[ebp]
	mov	DWORD PTR _weightedElem$239594[ebp+4], edx
	lea	eax, DWORD PTR _weightedElem$239594[ebp]
	push	eax
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::push_back
$LN3@ChooseBonu:

; 5138 : 				}
; 5139 : 			}
; 5140 : 		}
; 5141 : 	}

	jmp	$LN5@ChooseBonu
$LN4@ChooseBonu:

; 5142 : 
; 5143 : 	// Choose from weighted vector
; 5144 : 	beliefChoices.SortItems();

	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?SortItems@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEXXZ ; CvWeightedVector<enum BeliefTypes,100,1>::SortItems

; 5145 : 	int iNumChoices = MIN(beliefChoices.size(),3);   // this was way too loose as choices way down were being selected now only top 3

	mov	DWORD PTR $T239508[ebp], 3
	mov	ecx, DWORD PTR _beliefChoices$[ebp+4]
	mov	DWORD PTR $T239614[ebp], ecx
	mov	edx, DWORD PTR $T239614[ebp]
	mov	DWORD PTR $T239509[ebp], edx
	mov	eax, DWORD PTR $T239508[ebp]
	cmp	eax, DWORD PTR $T239509[ebp]
	jge	SHORT $LN64@ChooseBonu
	lea	ecx, DWORD PTR $T239508[ebp]
	mov	DWORD PTR tv217[ebp], ecx
	jmp	SHORT $LN65@ChooseBonu
$LN64@ChooseBonu:
	lea	edx, DWORD PTR $T239509[ebp]
	mov	DWORD PTR tv217[ebp], edx
$LN65@ChooseBonu:
	mov	eax, DWORD PTR tv217[ebp]
	mov	DWORD PTR $T239624[ebp], eax
	mov	ecx, DWORD PTR $T239624[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _iNumChoices$[ebp], edx

; 5146 : 	RandomNumberDelegate fcn = MakeDelegate(&GC.getGame(), &CvGame::getJonRandNum);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T239631[ebp], eax
	push	OFFSET ?getJonRandNum@CvGame@@QAEHHPBD@Z ; CvGame::getJonRandNum
	mov	ecx, DWORD PTR $T239631[ebp]
	push	ecx
	lea	edx, DWORD PTR _fcn$[ebp]
	push	edx
	call	??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z ; fastdelegate::MakeDelegate<CvGame,CvGame,int,char const *,int>
	add	esp, 12					; 0000000cH

; 5147 : 	BeliefTypes rtnValue = beliefChoices.ChooseFromTopChoices(iNumChoices, &fcn, "Choosing belief from Top Choices");

	push	OFFSET ??_C@_0CB@NACMGJPF@Choosing?5belief?5from?5Top?5Choices@
	lea	eax, DWORD PTR _fcn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iNumChoices$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?ChooseFromTopChoices@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE?AW4BeliefTypes@@HPAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z ; CvWeightedVector<enum BeliefTypes,100,1>::ChooseFromTopChoices
	mov	DWORD PTR _rtnValue$[ebp], eax

; 5148 : 	LogBeliefChoices(beliefChoices, rtnValue);

	mov	edx, DWORD PTR _rtnValue$[ebp]
	push	edx
	lea	eax, DWORD PTR _beliefChoices$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z ; CvReligionAI::LogBeliefChoices

; 5149 : 
; 5150 : 	return rtnValue;

	mov	ecx, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR $T239510[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
	mov	eax, DWORD PTR $T239510[ebp]

; 5151 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z$0:
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	jmp	??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>
__unwindfunclet$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__unwindfunclet$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z$3:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1036]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z ENDP ; CvReligionAI::ChooseBonusBelief
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$3
__ehfuncinfo$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
_TEXT	SEGMENT
tv196 = -1032						; size = 4
_this$ = -1028						; size = 4
$T239902 = -944						; size = 4
$T239895 = -940						; size = 4
$T239885 = -936						; size = 4
_weightedElem$239868 = -924				; size = 8
$T239837 = -916						; size = 4
$T239813 = -912						; size = 4
$T239799 = -908						; size = 4
$T239793 = -904						; size = 4
$T239792 = -900						; size = 4
$T239791 = -896						; size = 4
$T239790 = -892						; size = 4
_iScore$227102 = -888					; size = 4
_eBelief$227099 = -884					; size = 4
_pEntry$227100 = -880					; size = 4
_it$227093 = -876					; size = 4
_fcn$ = -872						; size = 8
_pGameReligions$ = -864					; size = 4
_beliefChoices$ = -860					; size = 816
__$ArrayPad$ = -40					; size = 4
_rtnValue$ = -36					; size = 4
_availableBeliefs$ = -32				; size = 16
_iNumChoices$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ PROC ; CvReligionAI::ChooseReformationBelief, COMDAT
; _this$ = ecx

; 5155 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1020				; 000003fcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 5156 : 	CvGameReligions* pGameReligions = GC.getGame().GetGameReligions();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T239799[ebp], eax
	mov	ecx, DWORD PTR $T239799[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pGameReligions$[ebp], eax

; 5157 : 	CvWeightedVector<BeliefTypes, SAFE_ESTIMATE_NUM_BELIEFS, true> beliefChoices;

	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 5158 : 
; 5159 : #ifdef AUI_WARNING_FIXES
; 5160 : 	const std::vector<BeliefTypes>& availableBeliefs = pGameReligions->GetAvailableReformationBeliefs();
; 5161 : 
; 5162 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 5163 : #else
; 5164 : 	std::vector<BeliefTypes> availableBeliefs = pGameReligions->GetAvailableReformationBeliefs();

	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pGameReligions$[ebp]
	call	?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableReformationBeliefs
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 5165 : 
; 5166 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	edx, DWORD PTR _availableBeliefs$[ebp+4]
	mov	DWORD PTR $T239813[ebp], edx
	mov	eax, DWORD PTR $T239813[ebp]
	mov	DWORD PTR _it$227093[ebp], eax

; 5167 : 	        it!= availableBeliefs.end(); ++it)

	jmp	SHORT $LN5@ChooseRefo
$LN4@ChooseRefo:
	mov	ecx, DWORD PTR _it$227093[ebp]
	add	ecx, 4
	mov	DWORD PTR _it$227093[ebp], ecx
$LN5@ChooseRefo:
	mov	edx, DWORD PTR _availableBeliefs$[ebp+8]
	mov	DWORD PTR $T239837[ebp], edx
	mov	eax, DWORD PTR $T239837[ebp]
	mov	DWORD PTR $T239790[ebp], eax
	mov	ecx, DWORD PTR _it$227093[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR $T239790[ebp]
	sete	dl
	movzx	eax, dl
	neg	eax
	sbb	eax, eax
	add	eax, 1
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@ChooseRefo

; 5168 : #endif
; 5169 : 	{
; 5170 : 		const BeliefTypes eBelief = (*it);

	mov	edx, DWORD PTR _it$227093[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _eBelief$227099[ebp], eax

; 5171 : 		CvBeliefEntry* pEntry = m_pBeliefs->GetEntry(eBelief);

	mov	ecx, DWORD PTR _eBelief$227099[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	DWORD PTR _pEntry$227100[ebp], eax

; 5172 : 		if(pEntry)

	cmp	DWORD PTR _pEntry$227100[ebp], 0
	je	SHORT $LN2@ChooseRefo

; 5173 : 		{
; 5174 : 			const int iScore = ScoreBelief(pEntry);

	mov	eax, DWORD PTR _pEntry$227100[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBelief
	mov	DWORD PTR _iScore$227102[ebp], eax

; 5175 : 			if(iScore > 0)

	cmp	DWORD PTR _iScore$227102[ebp], 0
	jle	SHORT $LN2@ChooseRefo

; 5176 : 			{
; 5177 : 				beliefChoices.push_back(eBelief, iScore);

	mov	DWORD PTR _weightedElem$239868[ebp], 0
	mov	DWORD PTR _weightedElem$239868[ebp+4], 0
	mov	ecx, DWORD PTR _eBelief$227099[ebp]
	mov	DWORD PTR _weightedElem$239868[ebp], ecx
	mov	edx, DWORD PTR _iScore$227102[ebp]
	mov	DWORD PTR _weightedElem$239868[ebp+4], edx
	lea	eax, DWORD PTR _weightedElem$239868[ebp]
	push	eax
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::push_back
$LN2@ChooseRefo:

; 5178 : 			}
; 5179 : 		}
; 5180 : 	}

	jmp	$LN4@ChooseRefo
$LN3@ChooseRefo:

; 5181 : 
; 5182 : 	// Choose from weighted vector
; 5183 : 	beliefChoices.SortItems();

	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?SortItems@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEXXZ ; CvWeightedVector<enum BeliefTypes,100,1>::SortItems

; 5184 : 	int iNumChoices = MIN(beliefChoices.size(),3);   // this was way too loose as choices way down were being selected now only top 3

	mov	DWORD PTR $T239791[ebp], 3
	mov	ecx, DWORD PTR _beliefChoices$[ebp+4]
	mov	DWORD PTR $T239885[ebp], ecx
	mov	edx, DWORD PTR $T239885[ebp]
	mov	DWORD PTR $T239792[ebp], edx
	mov	eax, DWORD PTR $T239791[ebp]
	cmp	eax, DWORD PTR $T239792[ebp]
	jge	SHORT $LN57@ChooseRefo
	lea	ecx, DWORD PTR $T239791[ebp]
	mov	DWORD PTR tv196[ebp], ecx
	jmp	SHORT $LN58@ChooseRefo
$LN57@ChooseRefo:
	lea	edx, DWORD PTR $T239792[ebp]
	mov	DWORD PTR tv196[ebp], edx
$LN58@ChooseRefo:
	mov	eax, DWORD PTR tv196[ebp]
	mov	DWORD PTR $T239895[ebp], eax
	mov	ecx, DWORD PTR $T239895[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _iNumChoices$[ebp], edx

; 5185 : 	RandomNumberDelegate fcn = MakeDelegate(&GC.getGame(), &CvGame::getJonRandNum);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T239902[ebp], eax
	push	OFFSET ?getJonRandNum@CvGame@@QAEHHPBD@Z ; CvGame::getJonRandNum
	mov	ecx, DWORD PTR $T239902[ebp]
	push	ecx
	lea	edx, DWORD PTR _fcn$[ebp]
	push	edx
	call	??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z ; fastdelegate::MakeDelegate<CvGame,CvGame,int,char const *,int>
	add	esp, 12					; 0000000cH

; 5186 : 	BeliefTypes rtnValue = beliefChoices.ChooseFromTopChoices(iNumChoices, &fcn, "Choosing belief from Top Choices");

	push	OFFSET ??_C@_0CB@NACMGJPF@Choosing?5belief?5from?5Top?5Choices@
	lea	eax, DWORD PTR _fcn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iNumChoices$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	?ChooseFromTopChoices@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE?AW4BeliefTypes@@HPAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z ; CvWeightedVector<enum BeliefTypes,100,1>::ChooseFromTopChoices
	mov	DWORD PTR _rtnValue$[ebp], eax

; 5187 : 	LogBeliefChoices(beliefChoices, rtnValue);

	mov	edx, DWORD PTR _rtnValue$[ebp]
	push	edx
	lea	eax, DWORD PTR _beliefChoices$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z ; CvReligionAI::LogBeliefChoices

; 5188 : 
; 5189 : 	return rtnValue;

	mov	ecx, DWORD PTR _rtnValue$[ebp]
	mov	DWORD PTR $T239793[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
	mov	eax, DWORD PTR $T239793[ebp]

; 5190 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0:
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	jmp	??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>
__unwindfunclet$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__unwindfunclet$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$3:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1024]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ENDP ; CvReligionAI::ChooseReformationBelief
PUBLIC	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
PUBLIC	?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvReligionAI::ScoreCityForMissionary
PUBLIC	?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvReligionAI::ChooseMissionaryTargetCity
EXTRN	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ:PROC ; CvUnit::getDestructionNotification
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z$0
__ehfuncinfo$?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
tv151 = -76						; size = 4
tv150 = -72						; size = 4
_this$ = -68						; size = 4
$T240095 = -64						; size = 4
$T240085 = -57						; size = 1
$T240062 = -56						; size = 4
$T240061 = -52						; size = 4
$T240060 = -48						; size = 4
_iScore$227134 = -44					; size = 4
_pLoopCity$227129 = -40					; size = 4
_iLoop$227128 = -36					; size = 4
_kPlayer$227125 = -32					; size = 4
_iI$227121 = -28					; size = 4
_eMyReligion$ = -24					; size = 4
_pBestCity$ = -20					; size = 4
_iBestScore$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pUnit$ = 8						; size = 8
?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvReligionAI::ChooseMissionaryTargetCity, COMDAT
; _this$ = ecx

; 5198 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 5199 : 	ReligionTypes eMyReligion = GetReligionToSpread();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread
	mov	DWORD PTR _eMyReligion$[ebp], eax

; 5200 : 	int iBestScore = 0;

	mov	DWORD PTR _iBestScore$[ebp], 0

; 5201 : 	CvCity* pBestCity = NULL;

	mov	DWORD PTR _pBestCity$[ebp], 0

; 5202 : 
; 5203 : 	if(eMyReligion <= RELIGION_PANTHEON)

	cmp	DWORD PTR _eMyReligion$[ebp], 0
	jg	SHORT $LN10@ChooseMiss

; 5204 : 	{
; 5205 : 		return NULL;

	mov	DWORD PTR $T240060[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN16@ChooseMiss
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN16@ChooseMiss:
	mov	eax, DWORD PTR $T240060[ebp]
	jmp	$LN11@ChooseMiss
$LN10@ChooseMiss:

; 5206 : 	}
; 5207 : 
; 5208 : #pragma warning ( push )
; 5209 : #pragma warning ( disable : 6011 ) // Dereferencing NULL pointer
; 5210 : 	AI_PERF_FORMAT("AI-perf-tact.csv", ("ChooseMissionaryTargetCity: %s %d, Turn %03d, %s", pUnit->getName().c_str(), pUnit->GetID(), GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()) );
; 5211 : #pragma warning ( pop )
; 5212 : 
; 5213 : 	// Loop through all the players
; 5214 : 	for(int iI = 0; iI < MAX_PLAYERS; iI++)

	mov	DWORD PTR _iI$227121[ebp], 0
	jmp	SHORT $LN9@ChooseMiss
$LN8@ChooseMiss:
	mov	eax, DWORD PTR _iI$227121[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$227121[ebp], eax
$LN9@ChooseMiss:
	cmp	DWORD PTR _iI$227121[ebp], 64		; 00000040H
	jge	$LN7@ChooseMiss

; 5215 : 	{
; 5216 : 		CvPlayer& kPlayer = GET_PLAYER((PlayerTypes)iI);

	mov	ecx, DWORD PTR _iI$227121[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$227125[ebp], ecx

; 5217 : 		if(kPlayer.isAlive())

	mov	edx, DWORD PTR _kPlayer$227125[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T240085[ebp], al
	movzx	ecx, BYTE PTR $T240085[ebp]
	test	ecx, ecx
	je	$LN6@ChooseMiss

; 5218 : 		{
; 5219 : 			// Loop through each of their cities
; 5220 : 			int iLoop;
; 5221 : 			CvCity* pLoopCity;
; 5222 : 			for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$227128[ebp]
	push	edx
	mov	ecx, DWORD PTR _kPlayer$227125[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$227129[ebp], eax
	jmp	SHORT $LN5@ChooseMiss
$LN4@ChooseMiss:
	push	0
	lea	eax, DWORD PTR _iLoop$227128[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$227125[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$227129[ebp], eax
$LN5@ChooseMiss:
	cmp	DWORD PTR _pLoopCity$227129[ebp], 0
	je	$LN6@ChooseMiss

; 5223 : 			{
; 5224 : 				if(pLoopCity && !pLoopCity->GetCityReligions()->IsDefendedAgainstSpread(eMyReligion))

	cmp	DWORD PTR _pLoopCity$227129[ebp], 0
	je	SHORT $LN2@ChooseMiss
	mov	ecx, DWORD PTR _eMyReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pLoopCity$227129[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsDefendedAgainstSpread@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsDefendedAgainstSpread
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@ChooseMiss

; 5225 : 				{
; 5226 : 					int iScore = ScoreCityForMissionary(pLoopCity, pUnit);

	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR $T240061[ebp], esp
	mov	DWORD PTR $T240095[ebp], eax
	mov	ecx, DWORD PTR $T240095[ebp]
	mov	edx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T240095[ebp]
	mov	cl, BYTE PTR _pUnit$[ebp+4]
	mov	BYTE PTR [eax+4], cl
	mov	edx, DWORD PTR $T240095[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN27@ChooseMiss
	mov	eax, DWORD PTR $T240095[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN27@ChooseMiss:
	mov	ecx, DWORD PTR $T240095[ebp]
	mov	DWORD PTR tv150[ebp], ecx
	mov	edx, DWORD PTR _pLoopCity$227129[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvReligionAI::ScoreCityForMissionary
	mov	DWORD PTR tv151[ebp], eax
	mov	eax, DWORD PTR tv151[ebp]
	mov	DWORD PTR _iScore$227134[ebp], eax

; 5227 : 					if(iScore > iBestScore)

	mov	ecx, DWORD PTR _iScore$227134[ebp]
	cmp	ecx, DWORD PTR _iBestScore$[ebp]
	jle	SHORT $LN2@ChooseMiss

; 5228 : 					{
; 5229 : 						iBestScore = iScore;

	mov	edx, DWORD PTR _iScore$227134[ebp]
	mov	DWORD PTR _iBestScore$[ebp], edx

; 5230 : 						pBestCity = pLoopCity;

	mov	eax, DWORD PTR _pLoopCity$227129[ebp]
	mov	DWORD PTR _pBestCity$[ebp], eax
$LN2@ChooseMiss:

; 5231 : 					}
; 5232 : 				}
; 5233 : 			}

	jmp	$LN4@ChooseMiss
$LN6@ChooseMiss:

; 5234 : 		}
; 5235 : 	}

	jmp	$LN8@ChooseMiss
$LN7@ChooseMiss:

; 5236 : 
; 5237 : 	return pBestCity;

	mov	ecx, DWORD PTR _pBestCity$[ebp]
	mov	DWORD PTR $T240062[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN32@ChooseMiss
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN32@ChooseMiss:
	mov	eax, DWORD PTR $T240062[ebp]
$LN11@ChooseMiss:

; 5238 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _pUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvReligionAI::ChooseMissionaryTargetCity
PUBLIC	?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z ; CvReligionAI::ChooseMissionaryTargetPlot
EXTRN	?CanSpreadReligion@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::CanSpreadReligion
EXTRN	?TurnsToReachTarget@@YAHV?$FObjectHandle@VCvUnit@@@@PAVCvPlot@@_N22@Z:PROC ; TurnsToReachTarget
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z$0
__ehfuncinfo$?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
_TEXT	SEGMENT
tv247 = -316						; size = 4
tv246 = -312						; size = 4
tv239 = -308						; size = 4
tv238 = -304						; size = 4
tv231 = -300						; size = 4
tv230 = -296						; size = 4
_this$ = -292						; size = 4
$T240424 = -220						; size = 4
$T240415 = -216						; size = 4
$T240411 = -212						; size = 4
$T240402 = -208						; size = 4
$T240398 = -204						; size = 4
$T240394 = -200						; size = 4
$T240390 = -196						; size = 4
$T240380 = -192						; size = 4
$T240376 = -188						; size = 4
$T240367 = -184						; size = 4
$T240204 = -100						; size = 4
$T240195 = -96						; size = 4
$T240177 = -92						; size = 4
$T240159 = -88						; size = 4
$T240150 = -84						; size = 4
$T240132 = -80						; size = 4
$T240118 = -76						; size = 4
$T240117 = -72						; size = 4
$T240116 = -68						; size = 4
$T240115 = -64						; size = 4
$T240114 = -60						; size = 4
$T240113 = -56						; size = 4
_pFirstUnit$227167 = -52				; size = 4
_iI$227161 = -48					; size = 4
_pFirstUnit$227153 = -44				; size = 4
_iDistance$ = -40					; size = 4
_iBestDistance$ = -36					; size = 4
_iBestNumTurns$ = -32					; size = 4
_pBestTarget$ = -28					; size = 4
_pCity$ = -24						; size = 4
_iTurns$ = -20						; size = 4
_pLoopPlot$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pUnit$ = 8						; size = 8
_piTurns$ = 16						; size = 4
?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z PROC ; CvReligionAI::ChooseMissionaryTargetPlot, COMDAT
; _this$ = ecx

; 5246 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 5247 : 	CvCity* pCity = ChooseMissionaryTargetCity(pUnit);

	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR $T240113[ebp], esp
	mov	DWORD PTR $T240132[ebp], eax
	mov	ecx, DWORD PTR $T240132[ebp]
	mov	edx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T240132[ebp]
	mov	cl, BYTE PTR _pUnit$[ebp+4]
	mov	BYTE PTR [eax+4], cl
	mov	edx, DWORD PTR $T240132[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN24@ChooseMiss@2
	mov	eax, DWORD PTR $T240132[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN24@ChooseMiss@2:
	mov	ecx, DWORD PTR $T240132[ebp]
	mov	DWORD PTR tv230[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvReligionAI::ChooseMissionaryTargetCity
	mov	DWORD PTR tv231[ebp], eax
	mov	edx, DWORD PTR tv231[ebp]
	mov	DWORD PTR _pCity$[ebp], edx

; 5248 : 	int iBestNumTurns = MAX_INT;

	mov	DWORD PTR _iBestNumTurns$[ebp], 2147483647 ; 7fffffffH

; 5249 : 	int iTurns;
; 5250 : 	int iBestDistance = MAX_INT;

	mov	DWORD PTR _iBestDistance$[ebp], 2147483647 ; 7fffffffH

; 5251 : 	int iDistance;
; 5252 : 	CvPlot* pBestTarget = NULL;

	mov	DWORD PTR _pBestTarget$[ebp], 0

; 5253 : 
; 5254 : 	if(pCity == NULL)

	cmp	DWORD PTR _pCity$[ebp], 0
	jne	SHORT $LN35@ChooseMiss@2

; 5255 : 	{
; 5256 : 		return NULL;

	mov	DWORD PTR $T240114[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN29@ChooseMiss@2
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN29@ChooseMiss@2:
	mov	eax, DWORD PTR $T240114[ebp]
	jmp	$LN17@ChooseMiss@2

; 5257 : 	}
; 5258 : 
; 5259 : 	// Our city with no civilian units?  If so go right in there
; 5260 : 	if(pCity->getOwner() == m_pPlayer->GetID())

$LN35@ChooseMiss@2:
	mov	eax, DWORD PTR _pCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T240150[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T240159[ebp], ecx
	mov	edx, DWORD PTR $T240150[ebp]
	cmp	edx, DWORD PTR $T240159[ebp]
	jne	$LN15@ChooseMiss@2

; 5261 : 	{
; 5262 : 		CvUnit* pFirstUnit = pCity->plot()->getUnitByIndex(0);

	push	0
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	ecx, eax
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex
	mov	DWORD PTR _pFirstUnit$227153[ebp], eax

; 5263 : 		if(!pFirstUnit || pFirstUnit->IsCombatUnit())

	cmp	DWORD PTR _pFirstUnit$227153[ebp], 0
	je	SHORT $LN13@ChooseMiss@2
	mov	eax, DWORD PTR _pFirstUnit$227153[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+1044], 0
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	$LN15@ChooseMiss@2
$LN13@ChooseMiss@2:

; 5264 : 		{
; 5265 : 			iTurns = TurnsToReachTarget(pUnit, pCity->plot(), true /* bReusePaths */);

	push	0
	push	0
	push	1
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	push	eax
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR $T240115[ebp], esp
	mov	DWORD PTR $T240177[ebp], eax
	mov	ecx, DWORD PTR $T240177[ebp]
	mov	edx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T240177[ebp]
	mov	cl, BYTE PTR _pUnit$[ebp+4]
	mov	BYTE PTR [eax+4], cl
	mov	edx, DWORD PTR $T240177[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN46@ChooseMiss@2
	mov	eax, DWORD PTR $T240177[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN46@ChooseMiss@2:
	mov	ecx, DWORD PTR $T240177[ebp]
	mov	DWORD PTR tv238[ebp], ecx
	call	?TurnsToReachTarget@@YAHV?$FObjectHandle@VCvUnit@@@@PAVCvPlot@@_N22@Z ; TurnsToReachTarget
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv239[ebp], eax
	mov	edx, DWORD PTR tv239[ebp]
	mov	DWORD PTR _iTurns$[ebp], edx

; 5266 : 			if(iTurns < MAX_INT)

	cmp	DWORD PTR _iTurns$[ebp], 2147483647	; 7fffffffH
	jge	SHORT $LN15@ChooseMiss@2

; 5267 : 			{
; 5268 : 				*piTurns = iTurns;

	mov	eax, DWORD PTR _piTurns$[ebp]
	mov	ecx, DWORD PTR _iTurns$[ebp]
	mov	DWORD PTR [eax], ecx

; 5269 : 				return pCity->plot();

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	DWORD PTR $T240116[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN51@ChooseMiss@2
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN51@ChooseMiss@2:
	mov	eax, DWORD PTR $T240116[ebp]
	jmp	$LN17@ChooseMiss@2
$LN15@ChooseMiss@2:

; 5270 : 			}
; 5271 : 		}
; 5272 : 	}
; 5273 : 
; 5274 : #pragma warning ( push )
; 5275 : #pragma warning ( disable : 6011 ) // Dereferencing NULL pointer
; 5276 : #ifdef AUI_PERF_LOGGING_FORMATTING_TWEAKS
; 5277 : 	AI_PERF_FORMAT("AI-perf-tact.csv", ("ChooseMissionaryTargetPlot: %s %d (Targeting %s), Turn %03d, %s", pUnit->getName().c_str(), pUnit->GetID(), pCity->getName().c_str(), GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()));
; 5278 : #else
; 5279 : 	AI_PERF_FORMAT("AI-perf-tact.csv", ("ChooseMissionaryTargetPlot: %s %d; %s, Turn %03d, %s", pUnit->getName().c_str(), pUnit->GetID(), pCity->getName().c_str(), GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()) );
; 5280 : #endif
; 5281 : #pragma warning ( pop )
; 5282 : 
; 5283 : 	// Find adjacent plot with no units (that aren't our own)
; 5284 : 	CvPlot* pLoopPlot;
; 5285 : 	for(int iI = 0; iI < NUM_DIRECTION_TYPES; iI++)

	mov	DWORD PTR _iI$227161[ebp], 0
	jmp	SHORT $LN11@ChooseMiss@2
$LN10@ChooseMiss@2:
	mov	edx, DWORD PTR _iI$227161[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$227161[ebp], edx
$LN11@ChooseMiss@2:
	cmp	DWORD PTR _iI$227161[ebp], 6
	jge	$LN9@ChooseMiss@2

; 5286 : 	{
; 5287 : 		pLoopPlot = plotDirection(pCity->getX(), pCity->getY(), ((DirectionTypes)iI));

	mov	eax, DWORD PTR _pCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T240195[ebp], ecx
	mov	edx, DWORD PTR _pCity$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T240204[ebp], eax
	mov	ecx, DWORD PTR _iI$227161[ebp]
	push	ecx
	mov	edx, DWORD PTR $T240195[ebp]
	push	edx
	mov	eax, DWORD PTR $T240204[ebp]
	push	eax
	call	?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z ; plotDirection
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLoopPlot$[ebp], eax

; 5288 : 
; 5289 : 		if(pLoopPlot != NULL)

	cmp	DWORD PTR _pLoopPlot$[ebp], 0
	je	$LN8@ChooseMiss@2

; 5290 : 		{
; 5291 : 			CvUnit* pFirstUnit = pLoopPlot->getUnitByIndex(0);

	push	0
	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex
	mov	DWORD PTR _pFirstUnit$227167[ebp], eax

; 5292 : 			if(pFirstUnit && pFirstUnit->getOwner() != m_pPlayer->GetID())

	cmp	DWORD PTR _pFirstUnit$227167[ebp], 0
	je	SHORT $LN7@ChooseMiss@2
	mov	ecx, DWORD PTR _pFirstUnit$227167[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T240367[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T240376[ebp], edx
	mov	eax, DWORD PTR $T240367[ebp]
	cmp	eax, DWORD PTR $T240376[ebp]
	je	SHORT $LN7@ChooseMiss@2

; 5293 : 			{
; 5294 : 				continue;

	jmp	$LN10@ChooseMiss@2
$LN7@ChooseMiss@2:

; 5295 : 			}
; 5296 : 
; 5297 : 			if(pUnit->CanSpreadReligion(pLoopPlot))

	mov	ecx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T240380[ebp], ecx
	mov	edx, DWORD PTR _pLoopPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T240380[ebp]
	call	?CanSpreadReligion@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::CanSpreadReligion
	movzx	eax, al
	test	eax, eax
	je	$LN8@ChooseMiss@2

; 5298 : 			{
; 5299 : 				iTurns = TurnsToReachTarget(pUnit, pLoopPlot, true /* bReusePaths */);

	push	0
	push	0
	push	1
	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	push	ecx
	sub	esp, 8
	mov	edx, esp
	mov	DWORD PTR $T240117[ebp], esp
	mov	DWORD PTR $T240390[ebp], edx
	mov	eax, DWORD PTR $T240390[ebp]
	mov	ecx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T240390[ebp]
	mov	al, BYTE PTR _pUnit$[ebp+4]
	mov	BYTE PTR [edx+4], al
	mov	ecx, DWORD PTR $T240390[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN138@ChooseMiss@2
	mov	edx, DWORD PTR $T240390[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN138@ChooseMiss@2:
	mov	eax, DWORD PTR $T240390[ebp]
	mov	DWORD PTR tv246[ebp], eax
	call	?TurnsToReachTarget@@YAHV?$FObjectHandle@VCvUnit@@@@PAVCvPlot@@_N22@Z ; TurnsToReachTarget
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv247[ebp], eax
	mov	ecx, DWORD PTR tv247[ebp]
	mov	DWORD PTR _iTurns$[ebp], ecx

; 5300 : 				if(iTurns < MAX_INT)

	cmp	DWORD PTR _iTurns$[ebp], 2147483647	; 7fffffffH
	jge	$LN8@ChooseMiss@2

; 5301 : 				{
; 5302 : 					iDistance = plotDistance(pUnit->getX(), pUnit->getY(), pLoopPlot->getX(), pLoopPlot->getY());

	mov	edx, DWORD PTR _pLoopPlot$[ebp]
	movsx	eax, WORD PTR [edx+2]
	mov	DWORD PTR $T240394[ebp], eax
	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	movsx	edx, WORD PTR [ecx]
	mov	DWORD PTR $T240398[ebp], edx
	mov	eax, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T240402[ebp], eax
	mov	ecx, DWORD PTR $T240402[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR $T240411[ebp], edx
	mov	eax, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T240415[ebp], eax
	mov	ecx, DWORD PTR $T240415[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR $T240424[ebp], edx
	mov	eax, DWORD PTR $T240394[ebp]
	push	eax
	mov	ecx, DWORD PTR $T240398[ebp]
	push	ecx
	mov	edx, DWORD PTR $T240411[ebp]
	push	edx
	mov	eax, DWORD PTR $T240424[ebp]
	push	eax
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	mov	DWORD PTR _iDistance$[ebp], eax

; 5303 : 
; 5304 : 					// Consider it to be twice as far if a water plot (those are dangerous!)
; 5305 : 					if(pLoopPlot->isWater())

	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	movsx	edx, BYTE PTR [ecx+5]
	xor	eax, eax
	cmp	edx, 3
	sete	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@ChooseMiss@2

; 5306 : 					{
; 5307 : 						iDistance *= 2;

	mov	edx, DWORD PTR _iDistance$[ebp]
	shl	edx, 1
	mov	DWORD PTR _iDistance$[ebp], edx
$LN4@ChooseMiss@2:

; 5308 : 					}
; 5309 : 
; 5310 : 					if(iTurns < iBestNumTurns || (iTurns == iBestNumTurns && iDistance < iBestDistance))

	mov	eax, DWORD PTR _iTurns$[ebp]
	cmp	eax, DWORD PTR _iBestNumTurns$[ebp]
	jl	SHORT $LN2@ChooseMiss@2
	mov	ecx, DWORD PTR _iTurns$[ebp]
	cmp	ecx, DWORD PTR _iBestNumTurns$[ebp]
	jne	SHORT $LN8@ChooseMiss@2
	mov	edx, DWORD PTR _iDistance$[ebp]
	cmp	edx, DWORD PTR _iBestDistance$[ebp]
	jge	SHORT $LN8@ChooseMiss@2
$LN2@ChooseMiss@2:

; 5311 : 					{
; 5312 : 						iBestNumTurns = iTurns;

	mov	eax, DWORD PTR _iTurns$[ebp]
	mov	DWORD PTR _iBestNumTurns$[ebp], eax

; 5313 : 						iBestDistance = iDistance;

	mov	ecx, DWORD PTR _iDistance$[ebp]
	mov	DWORD PTR _iBestDistance$[ebp], ecx

; 5314 : 						pBestTarget = pLoopPlot;

	mov	edx, DWORD PTR _pLoopPlot$[ebp]
	mov	DWORD PTR _pBestTarget$[ebp], edx
$LN8@ChooseMiss@2:

; 5315 : 					}
; 5316 : 				}
; 5317 : 			}
; 5318 : 		}
; 5319 : 	}

	jmp	$LN10@ChooseMiss@2
$LN9@ChooseMiss@2:

; 5320 : 
; 5321 : 	if(piTurns)

	cmp	DWORD PTR _piTurns$[ebp], 0
	je	SHORT $LN1@ChooseMiss@2

; 5322 : 		*piTurns = iBestNumTurns;

	mov	eax, DWORD PTR _piTurns$[ebp]
	mov	ecx, DWORD PTR _iBestNumTurns$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@ChooseMiss@2:

; 5323 : 	return pBestTarget;

	mov	edx, DWORD PTR _pBestTarget$[ebp]
	mov	DWORD PTR $T240118[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN201@ChooseMiss@2
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN201@ChooseMiss@2:
	mov	eax, DWORD PTR $T240118[ebp]
$LN17@ChooseMiss@2:

; 5324 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z$0:
	lea	ecx, DWORD PTR _pUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z ENDP ; CvReligionAI::ChooseMissionaryTargetPlot
PUBLIC	?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvReligionAI::ScoreCityForInquisitor
PUBLIC	?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvReligionAI::ChooseInquisitorTargetCity
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z$0
__ehfuncinfo$?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
tv134 = -64						; size = 4
tv133 = -60						; size = 4
_this$ = -56						; size = 4
$T240529 = -52						; size = 4
$T240508 = -48						; size = 4
$T240507 = -44						; size = 4
$T240506 = -40						; size = 4
_iScore$227193 = -36					; size = 4
_eMyReligion$ = -32					; size = 4
_pBestCity$ = -28					; size = 4
_iBestScore$ = -24					; size = 4
_pLoopCity$ = -20					; size = 4
_iLoop$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pUnit$ = 8						; size = 8
?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvReligionAI::ChooseInquisitorTargetCity, COMDAT
; _this$ = ecx

; 5332 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 5333 : 	ReligionTypes eMyReligion = GetReligionToSpread();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread
	mov	DWORD PTR _eMyReligion$[ebp], eax

; 5334 : 	int iBestScore = 0;

	mov	DWORD PTR _iBestScore$[ebp], 0

; 5335 : 	CvCity* pBestCity = NULL;

	mov	DWORD PTR _pBestCity$[ebp], 0

; 5336 : 
; 5337 : 	if(eMyReligion <= RELIGION_PANTHEON)

	cmp	DWORD PTR _eMyReligion$[ebp], 0
	jg	SHORT $LN6@ChooseInqu

; 5338 : 	{
; 5339 : 		return NULL;

	mov	DWORD PTR $T240506[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN12@ChooseInqu
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN12@ChooseInqu:
	mov	eax, DWORD PTR $T240506[ebp]
	jmp	$LN7@ChooseInqu
$LN6@ChooseInqu:

; 5340 : 	}
; 5341 : 
; 5342 : #pragma warning ( push )
; 5343 : #pragma warning ( disable : 6011 ) // Dereferencing NULL pointer
; 5344 : 	AI_PERF_FORMAT("AI-perf-tact.csv", ("ChooseInquisitorTargetCity: %s %d, Turn %03d, %s", pUnit->getName().c_str(), pUnit->GetID(), GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()) );
; 5345 : #pragma warning ( pop )
; 5346 : 
; 5347 : 	// Loop through each of my cities
; 5348 : 	int iLoop;
; 5349 : 	CvCity* pLoopCity;
; 5350 : 	for(pLoopCity = m_pPlayer->firstCity(&iLoop); pLoopCity != NULL; pLoopCity = m_pPlayer->nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN5@ChooseInqu
$LN4@ChooseInqu:
	push	0
	lea	edx, DWORD PTR _iLoop$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN5@ChooseInqu:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	SHORT $LN3@ChooseInqu

; 5351 : 	{
; 5352 : 		if(pLoopCity)

	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	SHORT $LN2@ChooseInqu

; 5353 : 		{
; 5354 : 			int iScore = ScoreCityForInquisitor(pLoopCity, pUnit);

	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR $T240507[ebp], esp
	mov	DWORD PTR $T240529[ebp], ecx
	mov	edx, DWORD PTR $T240529[ebp]
	mov	eax, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T240529[ebp]
	mov	dl, BYTE PTR _pUnit$[ebp+4]
	mov	BYTE PTR [ecx+4], dl
	mov	eax, DWORD PTR $T240529[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN17@ChooseInqu
	mov	ecx, DWORD PTR $T240529[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN17@ChooseInqu:
	mov	edx, DWORD PTR $T240529[ebp]
	mov	DWORD PTR tv133[ebp], edx
	mov	eax, DWORD PTR _pLoopCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvReligionAI::ScoreCityForInquisitor
	mov	DWORD PTR tv134[ebp], eax
	mov	ecx, DWORD PTR tv134[ebp]
	mov	DWORD PTR _iScore$227193[ebp], ecx

; 5355 : 			if(iScore > iBestScore)

	mov	edx, DWORD PTR _iScore$227193[ebp]
	cmp	edx, DWORD PTR _iBestScore$[ebp]
	jle	SHORT $LN2@ChooseInqu

; 5356 : 			{
; 5357 : 				iBestScore = iScore;

	mov	eax, DWORD PTR _iScore$227193[ebp]
	mov	DWORD PTR _iBestScore$[ebp], eax

; 5358 : 				pBestCity = pLoopCity;

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	mov	DWORD PTR _pBestCity$[ebp], ecx
$LN2@ChooseInqu:

; 5359 : 			}
; 5360 : 		}
; 5361 : 	}

	jmp	SHORT $LN4@ChooseInqu
$LN3@ChooseInqu:

; 5362 : 
; 5363 : 	return pBestCity;

	mov	edx, DWORD PTR _pBestCity$[ebp]
	mov	DWORD PTR $T240508[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN22@ChooseInqu
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN22@ChooseInqu:
	mov	eax, DWORD PTR $T240508[ebp]
$LN7@ChooseInqu:

; 5364 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _pUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvReligionAI::ChooseInquisitorTargetCity
PUBLIC	?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z ; CvReligionAI::ChooseInquisitorTargetPlot
EXTRN	?CanRemoveHeresy@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::CanRemoveHeresy
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z$0
__ehfuncinfo$?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
_TEXT	SEGMENT
tv247 = -316						; size = 4
tv246 = -312						; size = 4
tv239 = -308						; size = 4
tv238 = -304						; size = 4
tv231 = -300						; size = 4
tv230 = -296						; size = 4
_this$ = -292						; size = 4
$T240858 = -220						; size = 4
$T240849 = -216						; size = 4
$T240845 = -212						; size = 4
$T240836 = -208						; size = 4
$T240832 = -204						; size = 4
$T240828 = -200						; size = 4
$T240824 = -196						; size = 4
$T240814 = -192						; size = 4
$T240810 = -188						; size = 4
$T240801 = -184						; size = 4
$T240638 = -100						; size = 4
$T240629 = -96						; size = 4
$T240611 = -92						; size = 4
$T240593 = -88						; size = 4
$T240584 = -84						; size = 4
$T240566 = -80						; size = 4
$T240552 = -76						; size = 4
$T240551 = -72						; size = 4
$T240550 = -68						; size = 4
$T240549 = -64						; size = 4
$T240548 = -60						; size = 4
$T240547 = -56						; size = 4
_pFirstUnit$227226 = -52				; size = 4
_iI$227220 = -48					; size = 4
_pFirstUnit$227212 = -44				; size = 4
_iDistance$ = -40					; size = 4
_iBestDistance$ = -36					; size = 4
_iBestNumTurns$ = -32					; size = 4
_pBestTarget$ = -28					; size = 4
_pCity$ = -24						; size = 4
_iTurns$ = -20						; size = 4
_pLoopPlot$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pUnit$ = 8						; size = 8
_piTurns$ = 16						; size = 4
?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z PROC ; CvReligionAI::ChooseInquisitorTargetPlot, COMDAT
; _this$ = ecx

; 5372 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 5373 : 	CvCity* pCity = ChooseInquisitorTargetCity(pUnit);

	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR $T240547[ebp], esp
	mov	DWORD PTR $T240566[ebp], eax
	mov	ecx, DWORD PTR $T240566[ebp]
	mov	edx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T240566[ebp]
	mov	cl, BYTE PTR _pUnit$[ebp+4]
	mov	BYTE PTR [eax+4], cl
	mov	edx, DWORD PTR $T240566[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN24@ChooseInqu@2
	mov	eax, DWORD PTR $T240566[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN24@ChooseInqu@2:
	mov	ecx, DWORD PTR $T240566[ebp]
	mov	DWORD PTR tv230[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvReligionAI::ChooseInquisitorTargetCity
	mov	DWORD PTR tv231[ebp], eax
	mov	edx, DWORD PTR tv231[ebp]
	mov	DWORD PTR _pCity$[ebp], edx

; 5374 : 	int iBestNumTurns = MAX_INT;

	mov	DWORD PTR _iBestNumTurns$[ebp], 2147483647 ; 7fffffffH

; 5375 : 	int iTurns;
; 5376 : 	int iBestDistance = MAX_INT;

	mov	DWORD PTR _iBestDistance$[ebp], 2147483647 ; 7fffffffH

; 5377 : 	int iDistance;
; 5378 : 	CvPlot* pBestTarget = NULL;

	mov	DWORD PTR _pBestTarget$[ebp], 0

; 5379 : 
; 5380 : 	if(pCity == NULL)

	cmp	DWORD PTR _pCity$[ebp], 0
	jne	SHORT $LN35@ChooseInqu@2

; 5381 : 	{
; 5382 : 		return NULL;

	mov	DWORD PTR $T240548[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN29@ChooseInqu@2
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN29@ChooseInqu@2:
	mov	eax, DWORD PTR $T240548[ebp]
	jmp	$LN17@ChooseInqu@2

; 5383 : 	}
; 5384 : 
; 5385 : 	// Our city with no civilian units?  If so go right in there
; 5386 : 	if(pCity->getOwner() == m_pPlayer->GetID())

$LN35@ChooseInqu@2:
	mov	eax, DWORD PTR _pCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T240584[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T240593[ebp], ecx
	mov	edx, DWORD PTR $T240584[ebp]
	cmp	edx, DWORD PTR $T240593[ebp]
	jne	$LN15@ChooseInqu@2

; 5387 : 	{
; 5388 : 		CvUnit* pFirstUnit = pCity->plot()->getUnitByIndex(0);

	push	0
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	ecx, eax
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex
	mov	DWORD PTR _pFirstUnit$227212[ebp], eax

; 5389 : 		if(!pFirstUnit || pFirstUnit->IsCombatUnit())

	cmp	DWORD PTR _pFirstUnit$227212[ebp], 0
	je	SHORT $LN13@ChooseInqu@2
	mov	eax, DWORD PTR _pFirstUnit$227212[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+1044], 0
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	$LN15@ChooseInqu@2
$LN13@ChooseInqu@2:

; 5390 : 		{
; 5391 : 			iTurns = TurnsToReachTarget(pUnit, pCity->plot(), true /* bReusePaths */);

	push	0
	push	0
	push	1
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	push	eax
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR $T240549[ebp], esp
	mov	DWORD PTR $T240611[ebp], eax
	mov	ecx, DWORD PTR $T240611[ebp]
	mov	edx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T240611[ebp]
	mov	cl, BYTE PTR _pUnit$[ebp+4]
	mov	BYTE PTR [eax+4], cl
	mov	edx, DWORD PTR $T240611[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN46@ChooseInqu@2
	mov	eax, DWORD PTR $T240611[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN46@ChooseInqu@2:
	mov	ecx, DWORD PTR $T240611[ebp]
	mov	DWORD PTR tv238[ebp], ecx
	call	?TurnsToReachTarget@@YAHV?$FObjectHandle@VCvUnit@@@@PAVCvPlot@@_N22@Z ; TurnsToReachTarget
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv239[ebp], eax
	mov	edx, DWORD PTR tv239[ebp]
	mov	DWORD PTR _iTurns$[ebp], edx

; 5392 : 			if(iTurns < MAX_INT)

	cmp	DWORD PTR _iTurns$[ebp], 2147483647	; 7fffffffH
	jge	SHORT $LN15@ChooseInqu@2

; 5393 : 			{
; 5394 : 				*piTurns = iTurns;

	mov	eax, DWORD PTR _piTurns$[ebp]
	mov	ecx, DWORD PTR _iTurns$[ebp]
	mov	DWORD PTR [eax], ecx

; 5395 : 				return pCity->plot();

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	DWORD PTR $T240550[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN51@ChooseInqu@2
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN51@ChooseInqu@2:
	mov	eax, DWORD PTR $T240550[ebp]
	jmp	$LN17@ChooseInqu@2
$LN15@ChooseInqu@2:

; 5396 : 			}
; 5397 : 		}
; 5398 : 	}
; 5399 : 
; 5400 : #pragma warning ( push )
; 5401 : #pragma warning ( disable : 6011 ) // Dereferencing NULL pointer
; 5402 : 	AI_PERF_FORMAT("AI-perf-tact.csv", ("ChooseInquisitorTargetPlot: %s %d; %s, Turn %03d, %s", pUnit->getName().c_str(), pUnit->GetID(), pCity->getName().c_str(), GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()) );
; 5403 : #pragma warning ( pop )
; 5404 : 
; 5405 : 	// Find adjacent plot with no units (that aren't our own)
; 5406 : 	CvPlot* pLoopPlot;
; 5407 : 	for(int iI = 0; iI < NUM_DIRECTION_TYPES; iI++)

	mov	DWORD PTR _iI$227220[ebp], 0
	jmp	SHORT $LN11@ChooseInqu@2
$LN10@ChooseInqu@2:
	mov	edx, DWORD PTR _iI$227220[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$227220[ebp], edx
$LN11@ChooseInqu@2:
	cmp	DWORD PTR _iI$227220[ebp], 6
	jge	$LN9@ChooseInqu@2

; 5408 : 	{
; 5409 : 		pLoopPlot = plotDirection(pCity->getX(), pCity->getY(), ((DirectionTypes)iI));

	mov	eax, DWORD PTR _pCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T240629[ebp], ecx
	mov	edx, DWORD PTR _pCity$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T240638[ebp], eax
	mov	ecx, DWORD PTR _iI$227220[ebp]
	push	ecx
	mov	edx, DWORD PTR $T240629[ebp]
	push	edx
	mov	eax, DWORD PTR $T240638[ebp]
	push	eax
	call	?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z ; plotDirection
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLoopPlot$[ebp], eax

; 5410 : 
; 5411 : 		if(pLoopPlot != NULL)

	cmp	DWORD PTR _pLoopPlot$[ebp], 0
	je	$LN8@ChooseInqu@2

; 5412 : 		{
; 5413 : 			CvUnit* pFirstUnit = pLoopPlot->getUnitByIndex(0);

	push	0
	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex
	mov	DWORD PTR _pFirstUnit$227226[ebp], eax

; 5414 : 			if(pFirstUnit && pFirstUnit->getOwner() != m_pPlayer->GetID())

	cmp	DWORD PTR _pFirstUnit$227226[ebp], 0
	je	SHORT $LN7@ChooseInqu@2
	mov	ecx, DWORD PTR _pFirstUnit$227226[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T240801[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T240810[ebp], edx
	mov	eax, DWORD PTR $T240801[ebp]
	cmp	eax, DWORD PTR $T240810[ebp]
	je	SHORT $LN7@ChooseInqu@2

; 5415 : 			{
; 5416 : 				continue;

	jmp	$LN10@ChooseInqu@2
$LN7@ChooseInqu@2:

; 5417 : 			}
; 5418 : 
; 5419 : 			if(pUnit->CanRemoveHeresy(pLoopPlot))

	mov	ecx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T240814[ebp], ecx
	mov	edx, DWORD PTR _pLoopPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T240814[ebp]
	call	?CanRemoveHeresy@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::CanRemoveHeresy
	movzx	eax, al
	test	eax, eax
	je	$LN8@ChooseInqu@2

; 5420 : 			{
; 5421 : 				iTurns = TurnsToReachTarget(pUnit, pLoopPlot, true /* bReusePaths */);

	push	0
	push	0
	push	1
	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	push	ecx
	sub	esp, 8
	mov	edx, esp
	mov	DWORD PTR $T240551[ebp], esp
	mov	DWORD PTR $T240824[ebp], edx
	mov	eax, DWORD PTR $T240824[ebp]
	mov	ecx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T240824[ebp]
	mov	al, BYTE PTR _pUnit$[ebp+4]
	mov	BYTE PTR [edx+4], al
	mov	ecx, DWORD PTR $T240824[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN138@ChooseInqu@2
	mov	edx, DWORD PTR $T240824[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN138@ChooseInqu@2:
	mov	eax, DWORD PTR $T240824[ebp]
	mov	DWORD PTR tv246[ebp], eax
	call	?TurnsToReachTarget@@YAHV?$FObjectHandle@VCvUnit@@@@PAVCvPlot@@_N22@Z ; TurnsToReachTarget
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv247[ebp], eax
	mov	ecx, DWORD PTR tv247[ebp]
	mov	DWORD PTR _iTurns$[ebp], ecx

; 5422 : 				if(iTurns < MAX_INT)

	cmp	DWORD PTR _iTurns$[ebp], 2147483647	; 7fffffffH
	jge	$LN8@ChooseInqu@2

; 5423 : 				{
; 5424 : 					iDistance = plotDistance(pUnit->getX(), pUnit->getY(), pLoopPlot->getX(), pLoopPlot->getY());

	mov	edx, DWORD PTR _pLoopPlot$[ebp]
	movsx	eax, WORD PTR [edx+2]
	mov	DWORD PTR $T240828[ebp], eax
	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	movsx	edx, WORD PTR [ecx]
	mov	DWORD PTR $T240832[ebp], edx
	mov	eax, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T240836[ebp], eax
	mov	ecx, DWORD PTR $T240836[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR $T240845[ebp], edx
	mov	eax, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T240849[ebp], eax
	mov	ecx, DWORD PTR $T240849[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR $T240858[ebp], edx
	mov	eax, DWORD PTR $T240828[ebp]
	push	eax
	mov	ecx, DWORD PTR $T240832[ebp]
	push	ecx
	mov	edx, DWORD PTR $T240845[ebp]
	push	edx
	mov	eax, DWORD PTR $T240858[ebp]
	push	eax
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	mov	DWORD PTR _iDistance$[ebp], eax

; 5425 : 
; 5426 : 					// Consider it to be twice as far if a water plot (those are dangerous!)
; 5427 : 					if(pLoopPlot->isWater())

	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	movsx	edx, BYTE PTR [ecx+5]
	xor	eax, eax
	cmp	edx, 3
	sete	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@ChooseInqu@2

; 5428 : 					{
; 5429 : 						iDistance *= 2;

	mov	edx, DWORD PTR _iDistance$[ebp]
	shl	edx, 1
	mov	DWORD PTR _iDistance$[ebp], edx
$LN4@ChooseInqu@2:

; 5430 : 					}
; 5431 : 
; 5432 : 					if(iTurns < iBestNumTurns || (iTurns == iBestNumTurns && iDistance < iBestDistance))

	mov	eax, DWORD PTR _iTurns$[ebp]
	cmp	eax, DWORD PTR _iBestNumTurns$[ebp]
	jl	SHORT $LN2@ChooseInqu@2
	mov	ecx, DWORD PTR _iTurns$[ebp]
	cmp	ecx, DWORD PTR _iBestNumTurns$[ebp]
	jne	SHORT $LN8@ChooseInqu@2
	mov	edx, DWORD PTR _iDistance$[ebp]
	cmp	edx, DWORD PTR _iBestDistance$[ebp]
	jge	SHORT $LN8@ChooseInqu@2
$LN2@ChooseInqu@2:

; 5433 : 					{
; 5434 : 						iBestNumTurns = iTurns;

	mov	eax, DWORD PTR _iTurns$[ebp]
	mov	DWORD PTR _iBestNumTurns$[ebp], eax

; 5435 : 						iBestDistance = iDistance;

	mov	ecx, DWORD PTR _iDistance$[ebp]
	mov	DWORD PTR _iBestDistance$[ebp], ecx

; 5436 : 						pBestTarget = pLoopPlot;

	mov	edx, DWORD PTR _pLoopPlot$[ebp]
	mov	DWORD PTR _pBestTarget$[ebp], edx
$LN8@ChooseInqu@2:

; 5437 : 					}
; 5438 : 				}
; 5439 : 			}
; 5440 : 		}
; 5441 : 	}

	jmp	$LN10@ChooseInqu@2
$LN9@ChooseInqu@2:

; 5442 : 
; 5443 : 	if(piTurns)

	cmp	DWORD PTR _piTurns$[ebp], 0
	je	SHORT $LN1@ChooseInqu@2

; 5444 : 		*piTurns = iBestNumTurns;

	mov	eax, DWORD PTR _piTurns$[ebp]
	mov	ecx, DWORD PTR _iBestNumTurns$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@ChooseInqu@2:

; 5445 : 	return pBestTarget;

	mov	edx, DWORD PTR _pBestTarget$[ebp]
	mov	DWORD PTR $T240552[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN201@ChooseInqu@2
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN201@ChooseInqu@2:
	mov	eax, DWORD PTR $T240552[ebp]
$LN17@ChooseInqu@2:

; 5446 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z$0:
	lea	ecx, DWORD PTR _pUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z ENDP ; CvReligionAI::ChooseInquisitorTargetPlot
PUBLIC	??_C@_0CM@FBBIIAFC@GAMEOPTION_AI_GIMP_NO_MINOR_RELI@ ; `string'
PUBLIC	??_C@_0CG@ONKMJJDI@GAMEOPTION_AI_GIMP_NO_RELIGION_S@ ; `string'
PUBLIC	??_C@_0BF@FAPEFALO@GAMEOPTION_AI_TWEAKS?$AA@	; `string'
PUBLIC	?ChooseProphetConversionCity@CvReligionAI@@QBEPAVCvCity@@_N@Z ; CvReligionAI::ChooseProphetConversionCity
EXTRN	?isOption@CvGame@@QBE_NPBD@Z:PROC		; CvGame::isOption
;	COMDAT ??_C@_0CM@FBBIIAFC@GAMEOPTION_AI_GIMP_NO_MINOR_RELI@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fautovariable.h
CONST	SEGMENT
??_C@_0CM@FBBIIAFC@GAMEOPTION_AI_GIMP_NO_MINOR_RELI@ DB 'GAMEOPTION_AI_GI'
	DB	'MP_NO_MINOR_RELIGION_SPREAD', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@ONKMJJDI@GAMEOPTION_AI_GIMP_NO_RELIGION_S@
CONST	SEGMENT
??_C@_0CG@ONKMJJDI@GAMEOPTION_AI_GIMP_NO_RELIGION_S@ DB 'GAMEOPTION_AI_GI'
	DB	'MP_NO_RELIGION_SPREAD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FAPEFALO@GAMEOPTION_AI_TWEAKS?$AA@
CONST	SEGMENT
??_C@_0BF@FAPEFALO@GAMEOPTION_AI_TWEAKS?$AA@ DB 'GAMEOPTION_AI_TWEAKS', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
CONST	ENDS
;	COMDAT ?ChooseProphetConversionCity@CvReligionAI@@QBEPAVCvCity@@_N@Z
_TEXT	SEGMENT
tv342 = -336						; size = 4
_this$ = -332						; size = 4
$T241264 = -328						; size = 4
$T241255 = -324						; size = 4
$T241251 = -320						; size = 4
$T241178 = -244						; size = 4
$T241169 = -240						; size = 4
$T241160 = -236						; size = 4
$T241151 = -232						; size = 4
$T241142 = -228						; size = 4
$T241138 = -224						; size = 4
$T241134 = -220						; size = 4
$T241130 = -216						; size = 4
$T241126 = -212						; size = 4
$T241122 = -208						; size = 4
$T241118 = -204						; size = 4
$T241109 = -197						; size = 1
$T241060 = -152						; size = 4
$T241051 = -148						; size = 4
$T241042 = -144						; size = 4
$T241033 = -140						; size = 4
$T241019 = -132						; size = 4
$T241018 = -128						; size = 4
$T240987 = -124						; size = 4
$T240982 = -120						; size = 4
$T240978 = -113						; size = 1
$T240967 = -112						; size = 4
$T240963 = -105						; size = 1
_iMapY$241017 = -104					; size = 4
_iMapX$241016 = -100					; size = 4
$T240956 = -96						; size = 4
$T240952 = -92						; size = 4
$T240948 = -88						; size = 4
_iDistanceToHolyCity$227288 = -84			; size = 4
_eMajorityReligion$227286 = -80				; size = 4
_iHeretics$227287 = -76					; size = 4
_pkMajorityReligion$227294 = -72			; size = 4
_eCityOwnersReligion$227291 = -68			; size = 4
_iScore$227289 = -64					; size = 4
_iCityLoop$227279 = -60					; size = 4
_kLoopPlayer$227269 = -56				; size = 4
_iPlayerLoop$227265 = -52				; size = 4
_iDistanceToHolyCity$227257 = -48			; size = 4
_eMajorityReligion$227255 = -44				; size = 4
_iHeretics$227256 = -40					; size = 4
_iScore$227259 = -36					; size = 4
_pkPlot$227247 = -32					; size = 4
_eReligion$ = -28					; size = 4
_pBestCity$ = -24					; size = 4
_pHolyCity$ = -20					; size = 4
_iBestScore$ = -16					; size = 4
_pLoopCity$ = -12					; size = 4
_pkReligion$ = -8					; size = 4
_iLoop$ = -4						; size = 4
_bOnlyBetterThanEnhancingReligion$ = 8			; size = 1
?ChooseProphetConversionCity@CvReligionAI@@QBEPAVCvCity@@_N@Z PROC ; CvReligionAI::ChooseProphetConversionCity, COMDAT
; _this$ = ecx

; 5450 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 336				; 00000150H
	mov	DWORD PTR _this$[ebp], ecx

; 5451 : 	CvCity *pBestCity = NULL;

	mov	DWORD PTR _pBestCity$[ebp], 0

; 5452 : 	CvCity *pHolyCity = NULL;

	mov	DWORD PTR _pHolyCity$[ebp], 0

; 5453 : 	int iBestScore = 50;  // Not zero because we don't want prophets to ALWAYS pick something up

	mov	DWORD PTR _iBestScore$[ebp], 50		; 00000032H

; 5454 : 
; 5455 : 	// Make sure we're spreading a religion and find holy city
; 5456 : 	ReligionTypes eReligion = GetReligionToSpread();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread
	mov	DWORD PTR _eReligion$[ebp], eax

; 5457 : 	if (eReligion <= RELIGION_PANTHEON)

	cmp	DWORD PTR _eReligion$[ebp], 0
	jg	SHORT $LN34@ChooseProp

; 5458 : 	{
; 5459 : 		return pBestCity;

	mov	eax, DWORD PTR _pBestCity$[ebp]
	jmp	$LN30@ChooseProp

; 5460 : 	}
; 5461 : 
; 5462 : 	const CvReligion* pkReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, m_pPlayer->GetID());

$LN34@ChooseProp:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T240948[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T240952[ebp], eax
	mov	ecx, DWORD PTR $T240948[ebp]
	push	ecx
	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T240952[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pkReligion$[ebp], eax

; 5463 : 	if (pkReligion)

	cmp	DWORD PTR _pkReligion$[ebp], 0
	je	$LN28@ChooseProp

; 5464 : 	{
; 5465 : 		CvPlot* pkPlot = GC.getMap().plot(pkReligion->m_iHolyCityX, pkReligion->m_iHolyCityY);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T240956[ebp], eax
	mov	ecx, DWORD PTR _pkReligion$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR $T241019[ebp], edx
	mov	eax, DWORD PTR _pkReligion$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T241018[ebp], ecx
	cmp	DWORD PTR $T241018[ebp], -2147483647	; 80000001H
	je	SHORT $LN40@ChooseProp
	cmp	DWORD PTR $T241019[ebp], -2147483647	; 80000001H
	jne	SHORT $LN41@ChooseProp
$LN40@ChooseProp:
	mov	DWORD PTR _pkPlot$227247[ebp], 0
	jmp	$LN42@ChooseProp
$LN41@ChooseProp:
	mov	edx, DWORD PTR $T240956[ebp]
	mov	al, BYTE PTR [edx+4056]
	mov	BYTE PTR $T240963[ebp], al
	mov	ecx, DWORD PTR $T240956[ebp]
	mov	edx, DWORD PTR [ecx+4020]
	mov	DWORD PTR $T240967[ebp], edx
	movzx	eax, BYTE PTR $T240963[ebp]
	test	eax, eax
	je	SHORT $LN53@ChooseProp
	cmp	DWORD PTR $T241018[ebp], 0
	jge	SHORT $LN52@ChooseProp
	mov	eax, DWORD PTR $T241018[ebp]
	cdq
	idiv	DWORD PTR $T240967[ebp]
	add	edx, DWORD PTR $T240967[ebp]
	mov	DWORD PTR _iMapX$241016[ebp], edx
	jmp	SHORT $LN54@ChooseProp
	jmp	SHORT $LN53@ChooseProp
$LN52@ChooseProp:
	mov	ecx, DWORD PTR $T241018[ebp]
	cmp	ecx, DWORD PTR $T240967[ebp]
	jl	SHORT $LN53@ChooseProp
	mov	eax, DWORD PTR $T241018[ebp]
	cdq
	idiv	DWORD PTR $T240967[ebp]
	mov	DWORD PTR _iMapX$241016[ebp], edx
	jmp	SHORT $LN54@ChooseProp
$LN53@ChooseProp:
	mov	edx, DWORD PTR $T241018[ebp]
	mov	DWORD PTR _iMapX$241016[ebp], edx
$LN54@ChooseProp:
	mov	eax, DWORD PTR $T240956[ebp]
	mov	cl, BYTE PTR [eax+4057]
	mov	BYTE PTR $T240978[ebp], cl
	mov	edx, DWORD PTR $T240956[ebp]
	mov	eax, DWORD PTR [edx+4024]
	mov	DWORD PTR $T240982[ebp], eax
	movzx	ecx, BYTE PTR $T240978[ebp]
	push	ecx
	mov	edx, DWORD PTR $T240982[ebp]
	push	edx
	mov	eax, DWORD PTR $T241019[ebp]
	push	eax
	call	?coordRange@@YAHHH_N@Z			; coordRange
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iMapY$241017[ebp], eax
	mov	ecx, DWORD PTR _iMapY$241017[ebp]
	push	ecx
	mov	edx, DWORD PTR _iMapX$241016[ebp]
	push	edx
	mov	ecx, DWORD PTR $T240956[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN44@ChooseProp
	mov	eax, DWORD PTR $T240956[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T240987[ebp], ecx
	mov	edx, DWORD PTR _iMapY$241017[ebp]
	imul	edx, DWORD PTR $T240987[ebp]
	add	edx, DWORD PTR _iMapX$241016[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T240956[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv342[ebp], edx
	jmp	SHORT $LN45@ChooseProp
$LN44@ChooseProp:
	mov	DWORD PTR tv342[ebp], 0
$LN45@ChooseProp:
	mov	ecx, DWORD PTR tv342[ebp]
	mov	DWORD PTR _pkPlot$227247[ebp], ecx
$LN42@ChooseProp:

; 5466 : 		if(pkPlot)

	cmp	DWORD PTR _pkPlot$227247[ebp], 0
	je	SHORT $LN28@ChooseProp

; 5467 : 		{
; 5468 : 			pHolyCity = pkPlot->getPlotCity();

	mov	ecx, DWORD PTR _pkPlot$227247[ebp]
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	DWORD PTR _pHolyCity$[ebp], eax
$LN28@ChooseProp:

; 5469 : 		}
; 5470 : 	}
; 5471 : 	if (!pHolyCity)

	cmp	DWORD PTR _pHolyCity$[ebp], 0
	jne	SHORT $LN26@ChooseProp

; 5472 : 	{
; 5473 : 		return pBestCity;

	mov	eax, DWORD PTR _pBestCity$[ebp]
	jmp	$LN30@ChooseProp
$LN26@ChooseProp:

; 5474 : 	}
; 5475 : 
; 5476 : 	// Look at our cities first, checking them for followers of other religions
; 5477 : 	int iLoop;
; 5478 : 	CvCity* pLoopCity;
; 5479 : 	for(pLoopCity = m_pPlayer->firstCity(&iLoop); pLoopCity != NULL; pLoopCity = m_pPlayer->nextCity(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN25@ChooseProp
$LN24@ChooseProp:
	push	0
	lea	ecx, DWORD PTR _iLoop$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN25@ChooseProp:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	$LN23@ChooseProp

; 5480 : 	{
; 5481 : 		ReligionTypes eMajorityReligion = pLoopCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eMajorityReligion$227255[ebp], eax

; 5482 : 		int iHeretics = pLoopCity->GetCityReligions()->GetFollowersOtherReligions(eReligion);

	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetFollowersOtherReligions@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetFollowersOtherReligions
	mov	DWORD PTR _iHeretics$227256[ebp], eax

; 5483 : 		int iDistanceToHolyCity = plotDistance(pLoopCity->getX(), pLoopCity->getY(), pHolyCity->getX(), pHolyCity->getY());

	mov	ecx, DWORD PTR _pHolyCity$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T241033[ebp], edx
	mov	eax, DWORD PTR _pHolyCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T241042[ebp], ecx
	mov	edx, DWORD PTR _pLoopCity$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T241051[ebp], eax
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T241060[ebp], edx
	mov	eax, DWORD PTR $T241033[ebp]
	push	eax
	mov	ecx, DWORD PTR $T241042[ebp]
	push	ecx
	mov	edx, DWORD PTR $T241051[ebp]
	push	edx
	mov	eax, DWORD PTR $T241060[ebp]
	push	eax
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	mov	DWORD PTR _iDistanceToHolyCity$227257[ebp], eax

; 5484 : 
; 5485 : 		// If this is the holy city and it has been converted, want to go there no matter what
; 5486 : 		if (pLoopCity == pHolyCity && eMajorityReligion != eReligion)

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	cmp	ecx, DWORD PTR _pHolyCity$[ebp]
	jne	SHORT $LN22@ChooseProp
	mov	edx, DWORD PTR _eMajorityReligion$227255[ebp]
	cmp	edx, DWORD PTR _eReligion$[ebp]
	je	SHORT $LN22@ChooseProp

; 5487 : 		{
; 5488 : 			return pHolyCity;

	mov	eax, DWORD PTR _pHolyCity$[ebp]
	jmp	$LN30@ChooseProp
$LN22@ChooseProp:

; 5489 : 		}
; 5490 : 
; 5491 : 		// Otherwise score this city
; 5492 : 		int iScore = (iHeretics * 100) / (iDistanceToHolyCity + 1);

	mov	eax, DWORD PTR _iHeretics$227256[ebp]
	imul	eax, 100				; 00000064H
	mov	ecx, DWORD PTR _iDistanceToHolyCity$227257[ebp]
	add	ecx, 1
	cdq
	idiv	ecx
	mov	DWORD PTR _iScore$227259[ebp], eax

; 5493 : 		if (eMajorityReligion != eReligion && eMajorityReligion > RELIGION_PANTHEON)

	mov	edx, DWORD PTR _eMajorityReligion$227255[ebp]
	cmp	edx, DWORD PTR _eReligion$[ebp]
	je	SHORT $LN21@ChooseProp
	cmp	DWORD PTR _eMajorityReligion$227255[ebp], 0
	jle	SHORT $LN21@ChooseProp

; 5494 : 		{
; 5495 : 			iScore *= 3;

	mov	eax, DWORD PTR _iScore$227259[ebp]
	imul	eax, 3
	mov	DWORD PTR _iScore$227259[ebp], eax
	jmp	SHORT $LN20@ChooseProp
$LN21@ChooseProp:

; 5496 : 		}
; 5497 : 
; 5498 : 		// Don't give it any score if our religion hasn't been enhanced yet
; 5499 : 		else if (bOnlyBetterThanEnhancingReligion)

	movzx	ecx, BYTE PTR _bOnlyBetterThanEnhancingReligion$[ebp]
	test	ecx, ecx
	je	SHORT $LN20@ChooseProp

; 5500 : 		{
; 5501 : 			iScore = 0;

	mov	DWORD PTR _iScore$227259[ebp], 0
$LN20@ChooseProp:

; 5502 : 		}
; 5503 : 
; 5504 : 		if (iScore > iBestScore)

	mov	edx, DWORD PTR _iScore$227259[ebp]
	cmp	edx, DWORD PTR _iBestScore$[ebp]
	jle	SHORT $LN18@ChooseProp

; 5505 : 		{
; 5506 : 			iBestScore = iScore;

	mov	eax, DWORD PTR _iScore$227259[ebp]
	mov	DWORD PTR _iBestScore$[ebp], eax

; 5507 : 			pBestCity = pLoopCity;

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	mov	DWORD PTR _pBestCity$[ebp], ecx
$LN18@ChooseProp:

; 5508 : 		}
; 5509 : 	}

	jmp	$LN24@ChooseProp
$LN23@ChooseProp:

; 5510 : 
; 5511 : 	// Now try other players, assuming don't need to enhance religion
; 5512 : 	if (!bOnlyBetterThanEnhancingReligion)

	movzx	edx, BYTE PTR _bOnlyBetterThanEnhancingReligion$[ebp]
	test	edx, edx
	jne	$LN17@ChooseProp

; 5513 : 	{
; 5514 : 		for(int iPlayerLoop = 0; iPlayerLoop < MAX_CIV_PLAYERS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$227265[ebp], 0
	jmp	SHORT $LN16@ChooseProp
$LN15@ChooseProp:
	mov	eax, DWORD PTR _iPlayerLoop$227265[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$227265[ebp], eax
$LN16@ChooseProp:
	cmp	DWORD PTR _iPlayerLoop$227265[ebp], 63	; 0000003fH
	jge	$LN17@ChooseProp

; 5515 : 		{
; 5516 : 			CvPlayer &kLoopPlayer = GET_PLAYER((PlayerTypes)iPlayerLoop);

	mov	ecx, DWORD PTR _iPlayerLoop$227265[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kLoopPlayer$227269[ebp], ecx

; 5517 : 			if(kLoopPlayer.isAlive() && iPlayerLoop != m_pPlayer->GetID())

	mov	edx, DWORD PTR _kLoopPlayer$227269[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T241109[ebp], al
	movzx	ecx, BYTE PTR $T241109[ebp]
	test	ecx, ecx
	je	$LN13@ChooseProp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T241118[ebp], ecx
	mov	edx, DWORD PTR _iPlayerLoop$227265[ebp]
	cmp	edx, DWORD PTR $T241118[ebp]
	je	$LN13@ChooseProp

; 5518 : 			{
; 5519 : #ifdef NQM_AI_GIMP_NO_RELIGION_SPREAD
; 5520 : 				if ((GC.getGame().isOption("GAMEOPTION_AI_TWEAKS") || GC.getGame().isOption("GAMEOPTION_AI_GIMP_NO_RELIGION_SPREAD")) && kLoopPlayer.isHuman())

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241122[ebp], eax
	push	OFFSET ??_C@_0BF@FAPEFALO@GAMEOPTION_AI_TWEAKS?$AA@
	mov	ecx, DWORD PTR $T241122[ebp]
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN11@ChooseProp
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241126[ebp], edx
	push	OFFSET ??_C@_0CG@ONKMJJDI@GAMEOPTION_AI_GIMP_NO_RELIGION_S@
	mov	ecx, DWORD PTR $T241126[ebp]
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@ChooseProp
$LN11@ChooseProp:
	mov	ecx, DWORD PTR _kLoopPlayer$227269[ebp]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@ChooseProp

; 5521 : 					continue;

	jmp	$LN15@ChooseProp
$LN12@ChooseProp:

; 5522 : #endif
; 5523 : #ifdef NQ_AI_GIMP_NO_MINOR_SPREAD // NQMP_Bing - AI cannot spread religion to City-States
; 5524 : 				if ((GC.getGame().isOption("GAMEOPTION_AI_TWEAKS") || GC.getGame().isOption("GAMEOPTION_AI_GIMP_NO_MINOR_RELIGION_SPREAD")) && kLoopPlayer.isMinorCiv())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241130[ebp], edx
	push	OFFSET ??_C@_0BF@FAPEFALO@GAMEOPTION_AI_TWEAKS?$AA@
	mov	ecx, DWORD PTR $T241130[ebp]
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN9@ChooseProp
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241134[ebp], ecx
	push	OFFSET ??_C@_0CM@FBBIIAFC@GAMEOPTION_AI_GIMP_NO_MINOR_RELI@
	mov	ecx, DWORD PTR $T241134[ebp]
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN10@ChooseProp
$LN9@ChooseProp:
	mov	ecx, DWORD PTR _kLoopPlayer$227269[ebp]
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@ChooseProp

; 5525 : 					continue;

	jmp	$LN15@ChooseProp
$LN10@ChooseProp:

; 5526 : #endif
; 5527 : #ifdef AUI_RELIGION_FIX_CHOOSE_PROPHET_CONVERSION_CITY_HONOR_NONCONVERT_PROMISE
; 5528 : 				if (m_pPlayer->GetDiplomacyAI()->IsPlayerAgreeNotToConvert((PlayerTypes)iPlayerLoop))
; 5529 : 					continue;
; 5530 : #endif
; 5531 : 				int iCityLoop;
; 5532 : 				for(pLoopCity = GET_PLAYER((PlayerTypes)iPlayerLoop).firstCity(&iCityLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER((PlayerTypes)iPlayerLoop).nextCity(&iCityLoop))

	mov	ecx, DWORD PTR _iPlayerLoop$227265[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T241138[ebp], ecx
	push	0
	lea	edx, DWORD PTR _iCityLoop$227279[ebp]
	push	edx
	mov	ecx, DWORD PTR $T241138[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN8@ChooseProp
$LN7@ChooseProp:
	mov	eax, DWORD PTR _iPlayerLoop$227265[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T241142[ebp], eax
	push	0
	lea	ecx, DWORD PTR _iCityLoop$227279[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T241142[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN8@ChooseProp:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	$LN13@ChooseProp

; 5533 : 				{
; 5534 : 					if (!pLoopCity->GetCityReligions()->IsDefendedAgainstSpread(eReligion))

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsDefendedAgainstSpread@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsDefendedAgainstSpread
	movzx	eax, al
	test	eax, eax
	jne	$LN5@ChooseProp

; 5535 : 					{
; 5536 : 						ReligionTypes eMajorityReligion = pLoopCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eMajorityReligion$227286[ebp], eax

; 5537 : 						int iHeretics = pLoopCity->GetCityReligions()->GetFollowersOtherReligions(eReligion);

	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetFollowersOtherReligions@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetFollowersOtherReligions
	mov	DWORD PTR _iHeretics$227287[ebp], eax

; 5538 : 						int iDistanceToHolyCity = plotDistance(pLoopCity->getX(), pLoopCity->getY(), pHolyCity->getX(), pHolyCity->getY());

	mov	edx, DWORD PTR _pHolyCity$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T241151[ebp], eax
	mov	ecx, DWORD PTR _pHolyCity$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T241160[ebp], edx
	mov	eax, DWORD PTR _pLoopCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T241169[ebp], ecx
	mov	edx, DWORD PTR _pLoopCity$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T241178[ebp], eax
	mov	ecx, DWORD PTR $T241151[ebp]
	push	ecx
	mov	edx, DWORD PTR $T241160[ebp]
	push	edx
	mov	eax, DWORD PTR $T241169[ebp]
	push	eax
	mov	ecx, DWORD PTR $T241178[ebp]
	push	ecx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	mov	DWORD PTR _iDistanceToHolyCity$227288[ebp], eax

; 5539 : 
; 5540 : 						// Score this city
; 5541 : 						int iScore = (iHeretics * 50) / (iDistanceToHolyCity + 1);

	mov	eax, DWORD PTR _iHeretics$227287[ebp]
	imul	eax, 50					; 00000032H
	mov	ecx, DWORD PTR _iDistanceToHolyCity$227288[ebp]
	add	ecx, 1
	cdq
	idiv	ecx
	mov	DWORD PTR _iScore$227289[ebp], eax

; 5542 : 
; 5543 : 						//    - high score if this city has another religion as its majority
; 5544 : 						if (eMajorityReligion != eReligion)

	mov	edx, DWORD PTR _eMajorityReligion$227286[ebp]
	cmp	edx, DWORD PTR _eReligion$[ebp]
	je	SHORT $LN4@ChooseProp

; 5545 : 						{
; 5546 : 							iScore *= 3;

	mov	eax, DWORD PTR _iScore$227289[ebp]
	imul	eax, 3
	mov	DWORD PTR _iScore$227289[ebp], eax
$LN4@ChooseProp:

; 5547 : 						}
; 5548 : 
; 5549 : 						//    - Holy city will anger folks, let's not do that one right away
; 5550 : 						ReligionTypes eCityOwnersReligion = GET_PLAYER((PlayerTypes)iPlayerLoop).GetReligions()->GetReligionCreatedByPlayer();

	mov	ecx, DWORD PTR _iPlayerLoop$227265[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T241251[ebp], ecx
	mov	ecx, DWORD PTR $T241251[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eCityOwnersReligion$227291[ebp], eax

; 5551 : 						if (eCityOwnersReligion > RELIGION_PANTHEON && pLoopCity->GetCityReligions()->IsHolyCityForReligion(eCityOwnersReligion))

	cmp	DWORD PTR _eCityOwnersReligion$227291[ebp], 0
	jle	SHORT $LN3@ChooseProp
	mov	edx, DWORD PTR _eCityOwnersReligion$227291[ebp]
	push	edx
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsHolyCityForReligion
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@ChooseProp

; 5552 : 						{
; 5553 : 							iScore /= 2;

	mov	eax, DWORD PTR _iScore$227289[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _iScore$227289[ebp], eax
$LN3@ChooseProp:

; 5554 : 						}
; 5555 : 
; 5556 : 						//    - City not owned by religion founder, won't anger folks as much
; 5557 : 						const CvReligion* pkMajorityReligion = GC.getGame().GetGameReligions()->GetReligion(eMajorityReligion, NO_PLAYER);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241255[ebp], ecx
	push	-1
	mov	edx, DWORD PTR _eMajorityReligion$227286[ebp]
	push	edx
	mov	ecx, DWORD PTR $T241255[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pkMajorityReligion$227294[ebp], eax

; 5558 : 						if (pkMajorityReligion && pkMajorityReligion->m_eFounder != pLoopCity->getOwner())

	cmp	DWORD PTR _pkMajorityReligion$227294[ebp], 0
	je	SHORT $LN2@ChooseProp
	mov	eax, DWORD PTR _pLoopCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T241264[ebp], ecx
	mov	edx, DWORD PTR _pkMajorityReligion$227294[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR $T241264[ebp]
	je	SHORT $LN2@ChooseProp

; 5559 : 						{
; 5560 : 							iScore *= 2;

	mov	ecx, DWORD PTR _iScore$227289[ebp]
	shl	ecx, 1
	mov	DWORD PTR _iScore$227289[ebp], ecx
$LN2@ChooseProp:

; 5561 : 						}
; 5562 : 
; 5563 : 						if (iScore > iBestScore)

	mov	edx, DWORD PTR _iScore$227289[ebp]
	cmp	edx, DWORD PTR _iBestScore$[ebp]
	jle	SHORT $LN5@ChooseProp

; 5564 : 						{
; 5565 : 							iBestScore = iScore;

	mov	eax, DWORD PTR _iScore$227289[ebp]
	mov	DWORD PTR _iBestScore$[ebp], eax

; 5566 : 							pBestCity = pLoopCity;

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	mov	DWORD PTR _pBestCity$[ebp], ecx
$LN5@ChooseProp:

; 5567 : 						}
; 5568 : 					}
; 5569 : 				}

	jmp	$LN7@ChooseProp
$LN13@ChooseProp:

; 5570 : 			}
; 5571 : 		}

	jmp	$LN15@ChooseProp
$LN17@ChooseProp:

; 5572 : 	}
; 5573 : 
; 5574 : 	return pBestCity;

	mov	eax, DWORD PTR _pBestCity$[ebp]
$LN30@ChooseProp:

; 5575 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ChooseProphetConversionCity@CvReligionAI@@QBEPAVCvCity@@_N@Z ENDP ; CvReligionAI::ChooseProphetConversionCity
_TEXT	ENDS
PUBLIC	?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z ; CvReligionAI::ChooseProphetTargetPlot
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z$0
__ehfuncinfo$?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
_TEXT	SEGMENT
tv231 = -300						; size = 4
tv230 = -296						; size = 4
tv223 = -292						; size = 4
tv222 = -288						; size = 4
_this$ = -284						; size = 4
$T241566 = -212						; size = 4
$T241557 = -208						; size = 4
$T241553 = -204						; size = 4
$T241544 = -200						; size = 4
$T241540 = -196						; size = 4
$T241536 = -192						; size = 4
$T241532 = -188						; size = 4
$T241522 = -184						; size = 4
$T241518 = -180						; size = 4
$T241509 = -176						; size = 4
$T241346 = -92						; size = 4
$T241337 = -88						; size = 4
$T241319 = -84						; size = 4
$T241301 = -80						; size = 4
$T241292 = -76						; size = 4
$T241271 = -72						; size = 4
$T241270 = -68						; size = 4
$T241269 = -64						; size = 4
$T241268 = -60						; size = 4
$T241267 = -56						; size = 4
_pFirstUnit$227325 = -52				; size = 4
_iI$227319 = -48					; size = 4
_pFirstUnit$227311 = -44				; size = 4
_iDistance$ = -40					; size = 4
_iBestDistance$ = -36					; size = 4
_iBestNumTurns$ = -32					; size = 4
_pBestTarget$ = -28					; size = 4
_pCity$ = -24						; size = 4
_iTurns$ = -20						; size = 4
_pLoopPlot$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pUnit$ = 8						; size = 8
_piTurns$ = 16						; size = 4
?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z PROC ; CvReligionAI::ChooseProphetTargetPlot, COMDAT
; _this$ = ecx

; 5583 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 5584 : 	CvCity* pCity = ChooseProphetConversionCity(false/*bOnlyBetterThanEnhancingReligion*/);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChooseProphetConversionCity@CvReligionAI@@QBEPAVCvCity@@_N@Z ; CvReligionAI::ChooseProphetConversionCity
	mov	DWORD PTR _pCity$[ebp], eax

; 5585 : 	int iBestNumTurns = MAX_INT;

	mov	DWORD PTR _iBestNumTurns$[ebp], 2147483647 ; 7fffffffH

; 5586 : 	int iTurns;
; 5587 : 	int iBestDistance = MAX_INT;

	mov	DWORD PTR _iBestDistance$[ebp], 2147483647 ; 7fffffffH

; 5588 : 	int iDistance;
; 5589 : 	CvPlot* pBestTarget = NULL;

	mov	DWORD PTR _pBestTarget$[ebp], 0

; 5590 : 
; 5591 : 	if(pCity == NULL)

	cmp	DWORD PTR _pCity$[ebp], 0
	jne	SHORT $LN29@ChooseProp@2

; 5592 : 	{
; 5593 : 		return NULL;

	mov	DWORD PTR $T241267[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN23@ChooseProp@2
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN23@ChooseProp@2:
	mov	eax, DWORD PTR $T241267[ebp]
	jmp	$LN17@ChooseProp@2

; 5594 : 	}
; 5595 : 
; 5596 : 	// Our city with no civilian units?  If so go right in there
; 5597 : 	if(pCity->getOwner() == m_pPlayer->GetID())

$LN29@ChooseProp@2:
	mov	eax, DWORD PTR _pCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T241292[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T241301[ebp], ecx
	mov	edx, DWORD PTR $T241292[ebp]
	cmp	edx, DWORD PTR $T241301[ebp]
	jne	$LN15@ChooseProp@2

; 5598 : 	{
; 5599 : 		CvUnit* pFirstUnit = pCity->plot()->getUnitByIndex(0);

	push	0
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	ecx, eax
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex
	mov	DWORD PTR _pFirstUnit$227311[ebp], eax

; 5600 : 		if(!pFirstUnit || pFirstUnit->IsCombatUnit())

	cmp	DWORD PTR _pFirstUnit$227311[ebp], 0
	je	SHORT $LN13@ChooseProp@2
	mov	eax, DWORD PTR _pFirstUnit$227311[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+1044], 0
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	$LN15@ChooseProp@2
$LN13@ChooseProp@2:

; 5601 : 		{
; 5602 : 			iTurns = TurnsToReachTarget(pUnit, pCity->plot(), true /* bReusePaths */);

	push	0
	push	0
	push	1
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	push	eax
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR $T241268[ebp], esp
	mov	DWORD PTR $T241319[ebp], eax
	mov	ecx, DWORD PTR $T241319[ebp]
	mov	edx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T241319[ebp]
	mov	cl, BYTE PTR _pUnit$[ebp+4]
	mov	BYTE PTR [eax+4], cl
	mov	edx, DWORD PTR $T241319[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN40@ChooseProp@2
	mov	eax, DWORD PTR $T241319[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN40@ChooseProp@2:
	mov	ecx, DWORD PTR $T241319[ebp]
	mov	DWORD PTR tv222[ebp], ecx
	call	?TurnsToReachTarget@@YAHV?$FObjectHandle@VCvUnit@@@@PAVCvPlot@@_N22@Z ; TurnsToReachTarget
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv223[ebp], eax
	mov	edx, DWORD PTR tv223[ebp]
	mov	DWORD PTR _iTurns$[ebp], edx

; 5603 : 			if(iTurns < MAX_INT)

	cmp	DWORD PTR _iTurns$[ebp], 2147483647	; 7fffffffH
	jge	SHORT $LN15@ChooseProp@2

; 5604 : 			{
; 5605 : 				*piTurns = iTurns;

	mov	eax, DWORD PTR _piTurns$[ebp]
	mov	ecx, DWORD PTR _iTurns$[ebp]
	mov	DWORD PTR [eax], ecx

; 5606 : 				return pCity->plot();

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	DWORD PTR $T241269[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN45@ChooseProp@2
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN45@ChooseProp@2:
	mov	eax, DWORD PTR $T241269[ebp]
	jmp	$LN17@ChooseProp@2
$LN15@ChooseProp@2:

; 5607 : 			}
; 5608 : 		}
; 5609 : 	}
; 5610 : 
; 5611 : #pragma warning ( push )
; 5612 : #pragma warning ( disable : 6011 ) // Dereferencing NULL pointer
; 5613 : 	AI_PERF_FORMAT("AI-perf-tact.csv", ("ChooseProphetTargetPlot: %s %d; %s, Turn %03d, %s", pUnit->getName().c_str(), pUnit->GetID(), pCity->getName().c_str(), GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()) );
; 5614 : #pragma warning ( pop )
; 5615 : 
; 5616 : 	// Find adjacent plot with no units (that aren't our own)
; 5617 : 	CvPlot* pLoopPlot;
; 5618 : 	for(int iI = 0; iI < NUM_DIRECTION_TYPES; iI++)

	mov	DWORD PTR _iI$227319[ebp], 0
	jmp	SHORT $LN11@ChooseProp@2
$LN10@ChooseProp@2:
	mov	edx, DWORD PTR _iI$227319[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$227319[ebp], edx
$LN11@ChooseProp@2:
	cmp	DWORD PTR _iI$227319[ebp], 6
	jge	$LN9@ChooseProp@2

; 5619 : 	{
; 5620 : 		pLoopPlot = plotDirection(pCity->getX(), pCity->getY(), ((DirectionTypes)iI));

	mov	eax, DWORD PTR _pCity$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T241337[ebp], ecx
	mov	edx, DWORD PTR _pCity$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T241346[ebp], eax
	mov	ecx, DWORD PTR _iI$227319[ebp]
	push	ecx
	mov	edx, DWORD PTR $T241337[ebp]
	push	edx
	mov	eax, DWORD PTR $T241346[ebp]
	push	eax
	call	?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z ; plotDirection
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pLoopPlot$[ebp], eax

; 5621 : 
; 5622 : 		if(pLoopPlot != NULL)

	cmp	DWORD PTR _pLoopPlot$[ebp], 0
	je	$LN8@ChooseProp@2

; 5623 : 		{
; 5624 : 			CvUnit* pFirstUnit = pLoopPlot->getUnitByIndex(0);

	push	0
	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex
	mov	DWORD PTR _pFirstUnit$227325[ebp], eax

; 5625 : 			if(pFirstUnit && pFirstUnit->getOwner() != m_pPlayer->GetID())

	cmp	DWORD PTR _pFirstUnit$227325[ebp], 0
	je	SHORT $LN7@ChooseProp@2
	mov	ecx, DWORD PTR _pFirstUnit$227325[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR $T241509[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T241518[ebp], edx
	mov	eax, DWORD PTR $T241509[ebp]
	cmp	eax, DWORD PTR $T241518[ebp]
	je	SHORT $LN7@ChooseProp@2

; 5626 : 			{
; 5627 : 				continue;

	jmp	$LN10@ChooseProp@2
$LN7@ChooseProp@2:

; 5628 : 			}
; 5629 : 
; 5630 : 			if(pUnit->CanSpreadReligion(pLoopPlot))

	mov	ecx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T241522[ebp], ecx
	mov	edx, DWORD PTR _pLoopPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T241522[ebp]
	call	?CanSpreadReligion@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::CanSpreadReligion
	movzx	eax, al
	test	eax, eax
	je	$LN8@ChooseProp@2

; 5631 : 			{
; 5632 : 				iTurns = TurnsToReachTarget(pUnit, pLoopPlot, true /* bReusePaths */);

	push	0
	push	0
	push	1
	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	push	ecx
	sub	esp, 8
	mov	edx, esp
	mov	DWORD PTR $T241270[ebp], esp
	mov	DWORD PTR $T241532[ebp], edx
	mov	eax, DWORD PTR $T241532[ebp]
	mov	ecx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T241532[ebp]
	mov	al, BYTE PTR _pUnit$[ebp+4]
	mov	BYTE PTR [edx+4], al
	mov	ecx, DWORD PTR $T241532[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN132@ChooseProp@2
	mov	edx, DWORD PTR $T241532[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN132@ChooseProp@2:
	mov	eax, DWORD PTR $T241532[ebp]
	mov	DWORD PTR tv230[ebp], eax
	call	?TurnsToReachTarget@@YAHV?$FObjectHandle@VCvUnit@@@@PAVCvPlot@@_N22@Z ; TurnsToReachTarget
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv231[ebp], eax
	mov	ecx, DWORD PTR tv231[ebp]
	mov	DWORD PTR _iTurns$[ebp], ecx

; 5633 : 				if(iTurns < MAX_INT)

	cmp	DWORD PTR _iTurns$[ebp], 2147483647	; 7fffffffH
	jge	$LN8@ChooseProp@2

; 5634 : 				{
; 5635 : 					iDistance = plotDistance(pUnit->getX(), pUnit->getY(), pLoopPlot->getX(), pLoopPlot->getY());

	mov	edx, DWORD PTR _pLoopPlot$[ebp]
	movsx	eax, WORD PTR [edx+2]
	mov	DWORD PTR $T241536[ebp], eax
	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	movsx	edx, WORD PTR [ecx]
	mov	DWORD PTR $T241540[ebp], edx
	mov	eax, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T241544[ebp], eax
	mov	ecx, DWORD PTR $T241544[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR $T241553[ebp], edx
	mov	eax, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T241557[ebp], eax
	mov	ecx, DWORD PTR $T241557[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR $T241566[ebp], edx
	mov	eax, DWORD PTR $T241536[ebp]
	push	eax
	mov	ecx, DWORD PTR $T241540[ebp]
	push	ecx
	mov	edx, DWORD PTR $T241553[ebp]
	push	edx
	mov	eax, DWORD PTR $T241566[ebp]
	push	eax
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	mov	DWORD PTR _iDistance$[ebp], eax

; 5636 : 
; 5637 : 					// Consider it to be twice as far if a water plot (those are dangerous!)
; 5638 : 					if(pLoopPlot->isWater())

	mov	ecx, DWORD PTR _pLoopPlot$[ebp]
	movsx	edx, BYTE PTR [ecx+5]
	xor	eax, eax
	cmp	edx, 3
	sete	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@ChooseProp@2

; 5639 : 					{
; 5640 : 						iDistance *= 2;

	mov	edx, DWORD PTR _iDistance$[ebp]
	shl	edx, 1
	mov	DWORD PTR _iDistance$[ebp], edx
$LN4@ChooseProp@2:

; 5641 : 					}
; 5642 : 
; 5643 : 					if(iTurns < iBestNumTurns || (iTurns == iBestNumTurns && iDistance < iBestDistance))

	mov	eax, DWORD PTR _iTurns$[ebp]
	cmp	eax, DWORD PTR _iBestNumTurns$[ebp]
	jl	SHORT $LN2@ChooseProp@2
	mov	ecx, DWORD PTR _iTurns$[ebp]
	cmp	ecx, DWORD PTR _iBestNumTurns$[ebp]
	jne	SHORT $LN8@ChooseProp@2
	mov	edx, DWORD PTR _iDistance$[ebp]
	cmp	edx, DWORD PTR _iBestDistance$[ebp]
	jge	SHORT $LN8@ChooseProp@2
$LN2@ChooseProp@2:

; 5644 : 					{
; 5645 : 						iBestNumTurns = iTurns;

	mov	eax, DWORD PTR _iTurns$[ebp]
	mov	DWORD PTR _iBestNumTurns$[ebp], eax

; 5646 : 						iBestDistance = iDistance;

	mov	ecx, DWORD PTR _iDistance$[ebp]
	mov	DWORD PTR _iBestDistance$[ebp], ecx

; 5647 : 						pBestTarget = pLoopPlot;

	mov	edx, DWORD PTR _pLoopPlot$[ebp]
	mov	DWORD PTR _pBestTarget$[ebp], edx
$LN8@ChooseProp@2:

; 5648 : 					}
; 5649 : 				}
; 5650 : 			}
; 5651 : 		}
; 5652 : 	}

	jmp	$LN10@ChooseProp@2
$LN9@ChooseProp@2:

; 5653 : 
; 5654 : 	if(piTurns)

	cmp	DWORD PTR _piTurns$[ebp], 0
	je	SHORT $LN1@ChooseProp@2

; 5655 : 		*piTurns = iBestNumTurns;

	mov	eax, DWORD PTR _piTurns$[ebp]
	mov	ecx, DWORD PTR _iBestNumTurns$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@ChooseProp@2:

; 5656 : 	return pBestTarget;

	mov	edx, DWORD PTR _pBestTarget$[ebp]
	mov	DWORD PTR $T241271[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN195@ChooseProp@2
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN195@ChooseProp@2:
	mov	eax, DWORD PTR $T241271[ebp]
$LN17@ChooseProp@2:

; 5657 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z$0:
	lea	ecx, DWORD PTR _pUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-292]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z ENDP ; CvReligionAI::ChooseProphetTargetPlot
PUBLIC	??_C@_0BE@HJFOKNIA@GetReligionToSpread?$AA@	; `string'
;	COMDAT ??_C@_0BE@HJFOKNIA@GetReligionToSpread?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fautovariable.h
CONST	SEGMENT
??_C@_0BE@HJFOKNIA@GetReligionToSpread?$AA@ DB 'GetReligionToSpread', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ$0
__ehfuncinfo$?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ
_TEXT	SEGMENT
tv82 = -68						; size = 4
tv71 = -64						; size = 4
_this$ = -60						; size = 4
$T241682 = -56						; size = 4
$T241673 = -52						; size = 4
$T241669 = -48						; size = 4
$T241665 = -44						; size = 4
$T241653 = -40						; size = 4
$T241648 = -36						; size = 4
_iValue$227342 = -32					; size = 4
_args$227341 = -28					; size = 4
_eRtnValue$ = -24					; size = 4
_pReligions$ = -20					; size = 4
_pkScriptSystem$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ PROC ; CvReligionAI::GetReligionToSpread, COMDAT
; _this$ = ecx

; 5661 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 5662 : 	ReligionTypes eRtnValue = NO_RELIGION;

	mov	DWORD PTR _eRtnValue$[ebp], -1

; 5663 : 
; 5664 : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	eax, DWORD PTR $T241653[ebp]
	mov	DWORD PTR tv71[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv71[ebp], ecx
	mov	edx, DWORD PTR tv71[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv71[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR _pkScriptSystem$[ebp], eax

; 5665 : 	if(pkScriptSystem)

	cmp	DWORD PTR _pkScriptSystem$[ebp], 0
	je	$LN3@GetReligio@6

; 5666 : 	{
; 5667 : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$227341[ebp]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 5668 : 		args->Push(m_pPlayer->GetID());

	mov	eax, DWORD PTR _args$227341[ebp]
	mov	DWORD PTR tv82[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T241665[ebp], eax
	mov	ecx, DWORD PTR $T241665[ebp]
	push	ecx
	mov	edx, DWORD PTR tv82[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv82[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx

; 5669 : 
; 5670 : 		int iValue = 0;

	mov	DWORD PTR _iValue$227342[ebp], 0

; 5671 : 		if (LuaSupport::CallAccumulator(pkScriptSystem, "GetReligionToSpread", args.get(), iValue))

	mov	eax, DWORD PTR _args$227341[ebp]
	mov	DWORD PTR $T241669[ebp], eax
	lea	ecx, DWORD PTR _iValue$227342[ebp]
	push	ecx
	mov	edx, DWORD PTR $T241669[ebp]
	push	edx
	push	OFFSET ??_C@_0BE@HJFOKNIA@GetReligionToSpread?$AA@
	mov	eax, DWORD PTR _pkScriptSystem$[ebp]
	push	eax
	call	?CallAccumulator@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AAH@Z ; LuaSupport::CallAccumulator
	add	esp, 16					; 00000010H
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetReligio@6

; 5672 : 		{
; 5673 : 			eRtnValue = (ReligionTypes)iValue;

	mov	edx, DWORD PTR _iValue$227342[ebp]
	mov	DWORD PTR _eRtnValue$[ebp], edx

; 5674 : 			return eRtnValue;

	mov	eax, DWORD PTR _eRtnValue$[ebp]
	mov	DWORD PTR $T241648[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _args$227341[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
	mov	eax, DWORD PTR $T241648[ebp]
	jmp	SHORT $LN4@GetReligio@6
$LN2@GetReligio@6:

; 5675 : 		}
; 5676 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _args$227341[ebp]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN3@GetReligio@6:

; 5677 : 
; 5678 : 	CvGameReligions *pReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241673[ebp], ecx
	mov	ecx, DWORD PTR $T241673[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pReligions$[ebp], eax

; 5679 : 	eRtnValue = pReligions->GetReligionCreatedByPlayer(m_pPlayer->GetID());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T241682[ebp], ecx
	mov	edx, DWORD PTR $T241682[ebp]
	push	edx
	mov	ecx, DWORD PTR _pReligions$[ebp]
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eRtnValue$[ebp], eax

; 5680 : 	if(eRtnValue > RELIGION_PANTHEON)

	cmp	DWORD PTR _eRtnValue$[ebp], 0
	jle	SHORT $LN1@GetReligio@6

; 5681 : 	{
; 5682 : 		return eRtnValue;

	mov	eax, DWORD PTR _eRtnValue$[ebp]
	jmp	SHORT $LN4@GetReligio@6
$LN1@GetReligio@6:

; 5683 : 	}
; 5684 : 
; 5685 : 	return NO_RELIGION;

	or	eax, -1
$LN4@GetReligio@6:

; 5686 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ$0:
	lea	ecx, DWORD PTR _args$227341[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__ehhandler$?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ENDP ; CvReligionAI::GetReligionToSpread
PUBLIC	??_C@_0M@IAKBCFBA@?0?5Faith?3?5?$CFd?$AA@	; `string'
PUBLIC	??_C@_0EF@BOFLHOOL@?0?5Saving?5for?5Missionary?0?5Need?5to@ ; `string'
PUBLIC	??_C@_0DE@EDOPMIBN@?0?5Saving?5for?5Inquisitors?0?5Need?5t@ ; `string'
PUBLIC	?BuyInquisitor@CvReligionAI@@AAEXW4ReligionTypes@@@Z ; CvReligionAI::BuyInquisitor
PUBLIC	?HaveEnoughInquisitors@CvReligionAI@@ABE_NW4ReligionTypes@@@Z ; CvReligionAI::HaveEnoughInquisitors
PUBLIC	??_C@_0EJ@HNPFGNIA@?0?5Saving?5for?5Missionary?0?5Need?5to@ ; `string'
PUBLIC	?HaveNearbyConversionTarget@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::HaveNearbyConversionTarget
PUBLIC	??_C@_0DH@NGFAMOPN@?0?5Saving?5for?5Missionary?0?5Need?5to@ ; `string'
PUBLIC	??_C@_0DH@GICFDILN@?0?5Saving?5for?5Science?5Building?0?5H@ ; `string'
PUBLIC	?BuyAnyAvailableNonFaithBuilding@CvReligionAI@@AAE_NXZ ; CvReligionAI::BuyAnyAvailableNonFaithBuilding
PUBLIC	?CanBuyNonFaithBuilding@CvReligionAI@@ABE_NXZ	; CvReligionAI::CanBuyNonFaithBuilding
PUBLIC	??_C@_0DH@BBEDKODI@?0?5Saving?5for?5Faith?5Building?0?5For@ ; `string'
PUBLIC	?BuyFaithBuilding@CvReligionAI@@AAEXW4ReligionTypes@@W4BuildingClassTypes@@@Z ; CvReligionAI::BuyFaithBuilding
PUBLIC	?AreAllOurCitiesHaveFaithBuilding@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::AreAllOurCitiesHaveFaithBuilding
PUBLIC	??_C@_0DL@MBFLEEBN@?0?5Saving?5for?5Missionary?0?5Need?5to@ ; `string'
PUBLIC	?BuyMissionary@CvReligionAI@@AAEXW4ReligionTypes@@@Z ; CvReligionAI::BuyMissionary
PUBLIC	?AreAllOurCitiesConverted@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::AreAllOurCitiesConverted
PUBLIC	??_C@_0BH@GJLGKCBE@?0?5Saving?5for?5Prophet?0?5?$AA@ ; `string'
PUBLIC	??_C@_0N@FMDKANIN@UNIT_PROPHET?$AA@		; `string'
PUBLIC	??_C@_0BM@BNGLAJJK@?0?5Saving?5for?5Great?5Person?0?5?$AA@ ; `string'
PUBLIC	?BuyGreatPerson@CvReligionAI@@AAEXW4UnitTypes@@@Z ; CvReligionAI::BuyGreatPerson
PUBLIC	?GetDesiredFaithGreatPerson@CvReligionAI@@ABE?AW4UnitTypes@@XZ ; CvReligionAI::GetDesiredFaithGreatPerson
PUBLIC	?BuyAnyAvailableFaithBuilding@CvReligionAI@@AAE_NXZ ; CvReligionAI::BuyAnyAvailableFaithBuilding
PUBLIC	?FaithBuildingAvailable@CvReligionAI@@ABE?AW4BuildingClassTypes@@W4ReligionTypes@@@Z ; CvReligionAI::FaithBuildingAvailable
PUBLIC	__$ArrayPad$
EXTRN	?GetNumUnitsWithUnitAI@CvPlayer@@QAEHW4UnitAITypes@@_N1@Z:PROC ; CvPlayer::GetNumUnitsWithUnitAI
;	COMDAT ??_C@_0M@IAKBCFBA@?0?5Faith?3?5?$CFd?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0M@IAKBCFBA@?0?5Faith?3?5?$CFd?$AA@ DB ', Faith: %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@BOFLHOOL@?0?5Saving?5for?5Missionary?0?5Need?5to@
CONST	SEGMENT
??_C@_0EF@BOFLHOOL@?0?5Saving?5for?5Missionary?0?5Need?5to@ DB ', Saving '
	DB	'for Missionary, Need to Convert Cities of Religion Starters', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@EDOPMIBN@?0?5Saving?5for?5Inquisitors?0?5Need?5t@
CONST	SEGMENT
??_C@_0DE@EDOPMIBN@?0?5Saving?5for?5Inquisitors?0?5Need?5t@ DB ', Saving '
	DB	'for Inquisitors, Need to Defend Our Cities', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@HNPFGNIA@?0?5Saving?5for?5Missionary?0?5Need?5to@
CONST	SEGMENT
??_C@_0EJ@HNPFGNIA@?0?5Saving?5for?5Missionary?0?5Need?5to@ DB ', Saving '
	DB	'for Missionary, Need to Convert Cities of Non-Religion Starte'
	DB	'rs', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@NGFAMOPN@?0?5Saving?5for?5Missionary?0?5Need?5to@
CONST	SEGMENT
??_C@_0DH@NGFAMOPN@?0?5Saving?5for?5Missionary?0?5Need?5to@ DB ', Saving '
	DB	'for Missionary, Need to Convert Puppet Cities', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@GICFDILN@?0?5Saving?5for?5Science?5Building?0?5H@
CONST	SEGMENT
??_C@_0DH@GICFDILN@?0?5Saving?5for?5Science?5Building?0?5H@ DB ', Saving '
	DB	'for Science Building, Have Reformation Belief', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@BBEDKODI@?0?5Saving?5for?5Faith?5Building?0?5For@
CONST	SEGMENT
??_C@_0DH@BBEDKODI@?0?5Saving?5for?5Faith?5Building?0?5For@ DB ', Saving '
	DB	'for Faith Building, For Our Non-Puppet Cities', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@MBFLEEBN@?0?5Saving?5for?5Missionary?0?5Need?5to@
CONST	SEGMENT
??_C@_0DL@MBFLEEBN@?0?5Saving?5for?5Missionary?0?5Need?5to@ DB ', Saving '
	DB	'for Missionary, Need to Convert Non-Puppet Cities', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GJLGKCBE@?0?5Saving?5for?5Prophet?0?5?$AA@
CONST	SEGMENT
??_C@_0BH@GJLGKCBE@?0?5Saving?5for?5Prophet?0?5?$AA@ DB ', Saving for Pro'
	DB	'phet, ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FMDKANIN@UNIT_PROPHET?$AA@
CONST	SEGMENT
??_C@_0N@FMDKANIN@UNIT_PROPHET?$AA@ DB 'UNIT_PROPHET', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BNGLAJJK@?0?5Saving?5for?5Great?5Person?0?5?$AA@
CONST	SEGMENT
??_C@_0BM@BNGLAJJK@?0?5Saving?5for?5Great?5Person?0?5?$AA@ DB ', Saving f'
	DB	'or Great Person, ', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?DoFaithPurchases@CvReligionAI@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoFaithPurchases@CvReligionAI@@AAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoFaithPurchases@CvReligionAI@@AAEXXZ$1
__ehfuncinfo$?DoFaithPurchases@CvReligionAI@@AAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?DoFaithPurchases@CvReligionAI@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?DoFaithPurchases@CvReligionAI@@AAEXXZ
_TEXT	SEGMENT
_this$ = -140						; size = 4
$T241739 = -136						; size = 4
$T241731 = -132						; size = 4
$T241727 = -128						; size = 4
$T241720 = -124						; size = 4
$T241710 = -120						; size = 4
$T241706 = -116						; size = 4
$T241697 = -112						; size = 4
_strFaith$227412 = -108					; size = 28
_eGPType$227392 = -80					; size = 4
_eProphetType$227371 = -76				; size = 4
_pkEntry$227368 = -72					; size = 4
_eGPType$227364 = -68					; size = 4
_eFaithBuilding$ = -64					; size = 4
_eReligion$ = -60					; size = 4
_strLogMsg$ = -56					; size = 28
__$ArrayPad$ = -28					; size = 4
_pReligions$ = -24					; size = 4
_pMyReligion$ = -20					; size = 4
_bTooManyMissionaries$ = -13				; size = 1
__$EHRec$ = -12						; size = 12
?DoFaithPurchases@CvReligionAI@@AAEXXZ PROC		; CvReligionAI::DoFaithPurchases, COMDAT
; _this$ = ecx

; 5692 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoFaithPurchases@CvReligionAI@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 5693 : 	ReligionTypes eReligion = GetReligionToSpread();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread
	mov	DWORD PTR _eReligion$[ebp], eax

; 5694 : 
; 5695 : 	CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241697[ebp], eax
	mov	ecx, DWORD PTR $T241697[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pReligions$[ebp], eax

; 5696 : 	const CvReligion* pMyReligion = pReligions->GetReligion(eReligion, m_pPlayer->GetID());

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T241706[ebp], eax
	mov	ecx, DWORD PTR $T241706[ebp]
	push	ecx
	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pReligions$[ebp]
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pMyReligion$[ebp], eax

; 5697 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 5698 : 	std::vector<BuildingClassTypes> eFaithBuilding = FaithBuildingAvailable(eReligion);
; 5699 : #else
; 5700 : 	BuildingClassTypes eFaithBuilding = FaithBuildingAvailable(eReligion);

	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FaithBuildingAvailable@CvReligionAI@@ABE?AW4BuildingClassTypes@@W4ReligionTypes@@@Z ; CvReligionAI::FaithBuildingAvailable
	mov	DWORD PTR _eFaithBuilding$[ebp], eax

; 5701 : #endif
; 5702 : 	bool bTooManyMissionaries = m_pPlayer->GetNumUnitsWithUnitAI(UNITAI_MISSIONARY) > GC.getRELIGION_MAX_MISSIONARIES();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3436
	mov	DWORD PTR $T241710[ebp], ecx
	push	1
	push	0
	push	35					; 00000023H
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?GetNumUnitsWithUnitAI@CvPlayer@@QAEHW4UnitAITypes@@_N1@Z ; CvPlayer::GetNumUnitsWithUnitAI
	xor	ecx, ecx
	cmp	eax, DWORD PTR $T241710[ebp]
	setg	cl
	mov	BYTE PTR _bTooManyMissionaries$[ebp], cl

; 5703 : 
; 5704 : 	CvString strLogMsg;

	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 5705 : 	if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN39@DoFaithPur

; 5706 : 	{
; 5707 : 		strLogMsg = m_pPlayer->getCivilizationShortDescription();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	mov	DWORD PTR $T241720[ebp], eax
	cmp	DWORD PTR $T241720[ebp], 0
	je	SHORT $LN56@DoFaithPur
	mov	ecx, DWORD PTR $T241720[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN39@DoFaithPur
$LN56@DoFaithPur:
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN39@DoFaithPur:

; 5708 : 	}
; 5709 : 
; 5710 : 	// Save for another prophet if haven't enhanced religion yet
; 5711 : 	if(pMyReligion == NULL || !pMyReligion->m_bEnhanced)

	cmp	DWORD PTR _pMyReligion$[ebp], 0
	je	SHORT $LN37@DoFaithPur
	mov	edx, DWORD PTR _pMyReligion$[ebp]
	movzx	eax, BYTE PTR [edx+21]
	test	eax, eax
	jne	$LN38@DoFaithPur
$LN37@DoFaithPur:

; 5712 : 	{
; 5713 : 		// Unless all religions gone and we didn't start one
; 5714 : 		if(pMyReligion == NULL && pReligions->GetNumReligionsStillToFound() <= 0)

	cmp	DWORD PTR _pMyReligion$[ebp], 0
	jne	$LN36@DoFaithPur
	mov	ecx, DWORD PTR _pReligions$[ebp]
	call	?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsStillToFound
	test	eax, eax
	jg	$LN36@DoFaithPur

; 5715 : 		{
; 5716 : 			// Fill our cities with any Faith buildings possible
; 5717 : 			if(!BuyAnyAvailableFaithBuilding())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?BuyAnyAvailableFaithBuilding@CvReligionAI@@AAE_NXZ ; CvReligionAI::BuyAnyAvailableFaithBuilding
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN36@DoFaithPur

; 5718 : 			{
; 5719 : 				if(m_pPlayer->GetCurrentEra() >= GC.getInfoTypeForString("ERA_INDUSTRIAL"))

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?GetCurrentEra@CvPlayer@@QBE?AW4EraTypes@@XZ ; CvPlayer::GetCurrentEra
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jl	SHORT $LN36@DoFaithPur

; 5720 : 				{
; 5721 : 					UnitTypes eGPType = GetDesiredFaithGreatPerson();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDesiredFaithGreatPerson@CvReligionAI@@ABE?AW4UnitTypes@@XZ ; CvReligionAI::GetDesiredFaithGreatPerson
	mov	DWORD PTR _eGPType$227364[ebp], eax

; 5722 : 					if (eGPType != NO_UNIT)

	cmp	DWORD PTR _eGPType$227364[ebp], -1
	je	SHORT $LN36@DoFaithPur

; 5723 : 					{
; 5724 : 						BuyGreatPerson(eGPType);

	mov	eax, DWORD PTR _eGPType$227364[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?BuyGreatPerson@CvReligionAI@@AAEXW4UnitTypes@@@Z ; CvReligionAI::BuyGreatPerson

; 5725 : 
; 5726 : 						if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN36@DoFaithPur

; 5727 : 						{
; 5728 : 							strLogMsg += ", Saving for Great Person, ";

	push	OFFSET ??_C@_0BM@BNGLAJJK@?0?5Saving?5for?5Great?5Person?0?5?$AA@
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 5729 : 							CvUnitEntry *pkEntry = GC.getUnitInfo(eGPType);

	mov	edx, DWORD PTR _eGPType$227364[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR _pkEntry$227368[ebp], eax

; 5730 : 							if (pkEntry)

	cmp	DWORD PTR _pkEntry$227368[ebp], 0
	je	SHORT $LN36@DoFaithPur

; 5731 : 							{
; 5732 : 								strLogMsg += pkEntry->GetDescription();

	mov	ecx, DWORD PTR _pkEntry$227368[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN36@DoFaithPur:

; 5733 : 							}
; 5734 : 						}				
; 5735 : 					}
; 5736 : 				}
; 5737 : 			}
; 5738 : 		}
; 5739 : 	}
; 5740 : 	else

	jmp	$LN30@DoFaithPur
$LN38@DoFaithPur:

; 5741 : 	{
; 5742 : 		// Do we need a prophet pronto to reestablish our religion?
; 5743 : 		UnitTypes eProphetType = (UnitTypes)GC.getInfoTypeForString("UNIT_PROPHET", true);

	push	1
	push	OFFSET ??_C@_0N@FMDKANIN@UNIT_PROPHET?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eProphetType$227371[ebp], eax

; 5744 : 		if (eProphetType != NO_UNIT && ChooseProphetConversionCity(true/*bOnlyBetterThanEnhancingReligion*/) && m_pPlayer->GetReligions()->GetNumProphetsSpawned() <= 5)

	cmp	DWORD PTR _eProphetType$227371[ebp], -1
	je	$LN29@DoFaithPur
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChooseProphetConversionCity@CvReligionAI@@QBEPAVCvCity@@_N@Z ; CvReligionAI::ChooseProphetConversionCity
	test	eax, eax
	je	SHORT $LN29@DoFaithPur
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetNumProphetsSpawned@CvPlayerReligions@@QBEHXZ ; CvPlayerReligions::GetNumProphetsSpawned
	cmp	eax, 5
	jg	SHORT $LN29@DoFaithPur

; 5745 : 		{
; 5746 : 			BuyGreatPerson(eProphetType);

	mov	ecx, DWORD PTR _eProphetType$227371[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?BuyGreatPerson@CvReligionAI@@AAEXW4UnitTypes@@@Z ; CvReligionAI::BuyGreatPerson

; 5747 : 
; 5748 : 			if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN28@DoFaithPur

; 5749 : 			{
; 5750 : 				strLogMsg += ", Saving for Prophet, ";

	push	OFFSET ??_C@_0BH@GJLGKCBE@?0?5Saving?5for?5Prophet?0?5?$AA@
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 5751 : 				strLogMsg += GC.getUnitInfo(eProphetType)->GetDescription();

	mov	eax, DWORD PTR _eProphetType$227371[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR $T241727[ebp], eax
	mov	ecx, DWORD PTR $T241727[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN28@DoFaithPur:

; 5752 : 			}				
; 5753 : 		}

	jmp	$LN27@DoFaithPur
$LN29@DoFaithPur:

; 5754 : 
; 5755 : 		// Besides prophets, first priority is to convert all our non-puppet cities
; 5756 : 		else if(!bTooManyMissionaries && !AreAllOurCitiesConverted(eReligion, false /*bIncludePuppets*/))

	movzx	ecx, BYTE PTR _bTooManyMissionaries$[ebp]
	test	ecx, ecx
	jne	SHORT $LN26@DoFaithPur
	push	0
	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AreAllOurCitiesConverted@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::AreAllOurCitiesConverted
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN26@DoFaithPur

; 5757 : 		{
; 5758 : 			BuyMissionary(eReligion);

	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?BuyMissionary@CvReligionAI@@AAEXW4ReligionTypes@@@Z ; CvReligionAI::BuyMissionary

; 5759 : 
; 5760 : 			if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN25@DoFaithPur

; 5761 : 			{
; 5762 : 				strLogMsg += ", Saving for Missionary, Need to Convert Non-Puppet Cities";

	push	OFFSET ??_C@_0DL@MBFLEEBN@?0?5Saving?5for?5Missionary?0?5Need?5to@
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN25@DoFaithPur:

; 5763 : 			}
; 5764 : 		}

	jmp	$LN27@DoFaithPur
$LN26@DoFaithPur:

; 5765 : 
; 5766 : 		// Next priority is to establish our faith building in every non-puppet city
; 5767 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 5768 : 		else if (eFaithBuilding.size() > 0 && !AreAllOurCitiesHaveFaithBuilding(eReligion, false /*bIncludePuppets*/))
; 5769 : 		{
; 5770 : 			for (std::vector<BuildingClassTypes>::iterator it = eFaithBuilding.begin(); it != eFaithBuilding.end(); ++it)
; 5771 : 			{
; 5772 : 				BuyFaithBuilding(eReligion, (*it));
; 5773 : 			}
; 5774 : #else
; 5775 : 		else if(eFaithBuilding != NO_BUILDINGCLASS && !AreAllOurCitiesHaveFaithBuilding(eReligion, false /*bIncludePuppets*/))

	cmp	DWORD PTR _eFaithBuilding$[ebp], -1
	je	SHORT $LN23@DoFaithPur
	push	0
	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AreAllOurCitiesHaveFaithBuilding@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::AreAllOurCitiesHaveFaithBuilding
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN23@DoFaithPur

; 5776 : 		{
; 5777 : 			BuyFaithBuilding(eReligion, eFaithBuilding);

	mov	edx, DWORD PTR _eFaithBuilding$[ebp]
	push	edx
	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?BuyFaithBuilding@CvReligionAI@@AAEXW4ReligionTypes@@W4BuildingClassTypes@@@Z ; CvReligionAI::BuyFaithBuilding

; 5778 : #endif
; 5779 : 
; 5780 : 			if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN22@DoFaithPur

; 5781 : 			{
; 5782 : 				strLogMsg += ", Saving for Faith Building, For Our Non-Puppet Cities";

	push	OFFSET ??_C@_0DH@BBEDKODI@?0?5Saving?5for?5Faith?5Building?0?5For@
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN22@DoFaithPur:

; 5783 : 			}
; 5784 : 		}

	jmp	$LN27@DoFaithPur
$LN23@DoFaithPur:

; 5785 : 
; 5786 : 		// Try to build other buildings with Faith if we took that belief
; 5787 : 		else if (CanBuyNonFaithBuilding())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?CanBuyNonFaithBuilding@CvReligionAI@@ABE_NXZ ; CvReligionAI::CanBuyNonFaithBuilding
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN20@DoFaithPur

; 5788 : 		{
; 5789 : 			if (!BuyAnyAvailableNonFaithBuilding())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?BuyAnyAvailableNonFaithBuilding@CvReligionAI@@AAE_NXZ ; CvReligionAI::BuyAnyAvailableNonFaithBuilding
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN19@DoFaithPur

; 5790 : 			{
; 5791 : 				if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN19@DoFaithPur

; 5792 : 				{
; 5793 : 					strLogMsg += ", Saving for Science Building, Have Reformation Belief";

	push	OFFSET ??_C@_0DH@GICFDILN@?0?5Saving?5for?5Science?5Building?0?5H@
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN19@DoFaithPur:

; 5794 : 				}
; 5795 : 			}
; 5796 : 		}

	jmp	$LN27@DoFaithPur
$LN20@DoFaithPur:

; 5797 : 
; 5798 : 		// If in Industrial, see if we want to save for buying a great person
; 5799 : 		else if (m_pPlayer->GetCurrentEra() >= GC.getInfoTypeForString("ERA_INDUSTRIAL") && GetDesiredFaithGreatPerson() != NO_UNIT)

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?GetCurrentEra@CvPlayer@@QBE?AW4EraTypes@@XZ ; CvPlayer::GetCurrentEra
	mov	esi, eax
	push	0
	push	OFFSET ??_C@_0P@IGHGNBHE@ERA_INDUSTRIAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jl	SHORT $LN16@DoFaithPur
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDesiredFaithGreatPerson@CvReligionAI@@ABE?AW4UnitTypes@@XZ ; CvReligionAI::GetDesiredFaithGreatPerson
	cmp	eax, -1
	je	SHORT $LN16@DoFaithPur

; 5800 : 		{
; 5801 : 			UnitTypes eGPType = GetDesiredFaithGreatPerson();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDesiredFaithGreatPerson@CvReligionAI@@ABE?AW4UnitTypes@@XZ ; CvReligionAI::GetDesiredFaithGreatPerson
	mov	DWORD PTR _eGPType$227392[ebp], eax

; 5802 : 			BuyGreatPerson(eGPType);

	mov	eax, DWORD PTR _eGPType$227392[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?BuyGreatPerson@CvReligionAI@@AAEXW4UnitTypes@@@Z ; CvReligionAI::BuyGreatPerson

; 5803 : 
; 5804 : 			if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@DoFaithPur

; 5805 : 			{
; 5806 : 				strLogMsg += ", Saving for Great Person, ";

	push	OFFSET ??_C@_0BM@BNGLAJJK@?0?5Saving?5for?5Great?5Person?0?5?$AA@
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 5807 : #ifdef AUI_WARNING_FIXES
; 5808 : 				CvUnitEntry* pGPInfo = GC.getUnitInfo(eGPType);
; 5809 : 				if (pGPInfo)
; 5810 : 					strLogMsg += pGPInfo->GetDescription();
; 5811 : #else
; 5812 : 				strLogMsg += GC.getUnitInfo(eGPType)->GetDescription();

	mov	edx, DWORD PTR _eGPType$227392[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR $T241731[ebp], eax
	mov	ecx, DWORD PTR $T241731[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN15@DoFaithPur:

; 5813 : #endif
; 5814 : 			}				
; 5815 : 		}

	jmp	$LN27@DoFaithPur
$LN16@DoFaithPur:

; 5816 : 
; 5817 : 		// Might as well convert puppet-cities to build our religious strength
; 5818 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 5819 : 		else if (!bTooManyMissionaries && eFaithBuilding.size() > 0 && !AreAllOurCitiesHaveFaithBuilding(eReligion, true /*bIncludePuppets*/))
; 5820 : #else
; 5821 : 		else if(!bTooManyMissionaries && eFaithBuilding != NO_BUILDINGCLASS && !AreAllOurCitiesHaveFaithBuilding(eReligion, true /*bIncludePuppets*/))

	movzx	eax, BYTE PTR _bTooManyMissionaries$[ebp]
	test	eax, eax
	jne	SHORT $LN13@DoFaithPur
	cmp	DWORD PTR _eFaithBuilding$[ebp], -1
	je	SHORT $LN13@DoFaithPur
	push	1
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AreAllOurCitiesHaveFaithBuilding@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::AreAllOurCitiesHaveFaithBuilding
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN13@DoFaithPur

; 5822 : #endif
; 5823 : 		{
; 5824 : 			BuyMissionary(eReligion);

	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?BuyMissionary@CvReligionAI@@AAEXW4ReligionTypes@@@Z ; CvReligionAI::BuyMissionary

; 5825 : 
; 5826 : 			if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@DoFaithPur

; 5827 : 			{
; 5828 : 				strLogMsg += ", Saving for Missionary, Need to Convert Puppet Cities";

	push	OFFSET ??_C@_0DH@NGFAMOPN@?0?5Saving?5for?5Missionary?0?5Need?5to@
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN12@DoFaithPur:

; 5829 : 			}
; 5830 : 		}

	jmp	$LN27@DoFaithPur
$LN13@DoFaithPur:

; 5831 : 
; 5832 : 		// Have civs nearby to target who didn't start a religion?
; 5833 : 		else if(!bTooManyMissionaries && HaveNearbyConversionTarget(eReligion, false /*bCanIncludeReligionStarter*/))

	movzx	edx, BYTE PTR _bTooManyMissionaries$[ebp]
	test	edx, edx
	jne	SHORT $LN10@DoFaithPur
	push	0
	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HaveNearbyConversionTarget@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::HaveNearbyConversionTarget
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@DoFaithPur

; 5834 : 		{
; 5835 : 			BuyMissionary(eReligion);

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?BuyMissionary@CvReligionAI@@AAEXW4ReligionTypes@@@Z ; CvReligionAI::BuyMissionary

; 5836 : 
; 5837 : 			if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@DoFaithPur

; 5838 : 			{
; 5839 : 				strLogMsg += ", Saving for Missionary, Need to Convert Cities of Non-Religion Starters";

	push	OFFSET ??_C@_0EJ@HNPFGNIA@?0?5Saving?5for?5Missionary?0?5Need?5to@
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN9@DoFaithPur:

; 5840 : 			}
; 5841 : 		}

	jmp	$LN27@DoFaithPur
$LN10@DoFaithPur:

; 5842 : 
; 5843 : 		// Have cities Inquisitors can defend?
; 5844 : 		else if(!HaveEnoughInquisitors(eReligion))

	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HaveEnoughInquisitors@CvReligionAI@@ABE_NW4ReligionTypes@@@Z ; CvReligionAI::HaveEnoughInquisitors
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN7@DoFaithPur

; 5845 : 		{
; 5846 : 			BuyInquisitor(eReligion);

	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?BuyInquisitor@CvReligionAI@@AAEXW4ReligionTypes@@@Z ; CvReligionAI::BuyInquisitor

; 5847 : 
; 5848 : 			if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@DoFaithPur

; 5849 : 			{
; 5850 : 				strLogMsg += ", Saving for Inquisitors, Need to Defend Our Cities";

	push	OFFSET ??_C@_0DE@EDOPMIBN@?0?5Saving?5for?5Inquisitors?0?5Need?5t@
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN6@DoFaithPur:

; 5851 : 			}
; 5852 : 		}

	jmp	SHORT $LN27@DoFaithPur
$LN7@DoFaithPur:

; 5853 : 
; 5854 : 		// Have civs nearby to target who did start a religion?
; 5855 : 		else if(!bTooManyMissionaries && HaveNearbyConversionTarget(eReligion, true /*bCanIncludeReligionStarter*/))

	movzx	edx, BYTE PTR _bTooManyMissionaries$[ebp]
	test	edx, edx
	jne	SHORT $LN4@DoFaithPur
	push	1
	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HaveNearbyConversionTarget@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::HaveNearbyConversionTarget
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@DoFaithPur

; 5856 : 		{
; 5857 : 			BuyMissionary(eReligion);

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?BuyMissionary@CvReligionAI@@AAEXW4ReligionTypes@@@Z ; CvReligionAI::BuyMissionary

; 5858 : 
; 5859 : 			if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@DoFaithPur

; 5860 : 			{
; 5861 : 				strLogMsg += ", Saving for Missionary, Need to Convert Cities of Religion Starters";

	push	OFFSET ??_C@_0EF@BOFLHOOL@?0?5Saving?5for?5Missionary?0?5Need?5to@
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN3@DoFaithPur:

; 5862 : 			}
; 5863 : 		}
; 5864 : 
; 5865 : 		// Any faith buildings from other religions we can buy?
; 5866 : 		else

	jmp	SHORT $LN27@DoFaithPur
$LN4@DoFaithPur:

; 5867 : 		{
; 5868 : 			BuyAnyAvailableFaithBuilding();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?BuyAnyAvailableFaithBuilding@CvReligionAI@@AAE_NXZ ; CvReligionAI::BuyAnyAvailableFaithBuilding
$LN27@DoFaithPur:

; 5869 : 		}
; 5870 : 
; 5871 : 		if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN30@DoFaithPur

; 5872 : 		{
; 5873 : 			CvString strFaith;

	lea	ecx, DWORD PTR _strFaith$227412[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 5874 : 			strFaith.Format(", Faith: %d", m_pPlayer->GetFaith());

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	push	eax
	push	OFFSET ??_C@_0M@IAKBCFBA@?0?5Faith?3?5?$CFd?$AA@
	lea	eax, DWORD PTR _strFaith$227412[ebp]
	push	eax
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format
	add	esp, 12					; 0000000cH

; 5875 : 			strLogMsg += strFaith;

	lea	ecx, DWORD PTR _strFaith$227412[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 5876 : 			GC.getGame().GetGameReligions()->LogReligionMessage(strLogMsg);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241739[ebp], edx
	lea	eax, DWORD PTR _strLogMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T241739[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z ; CvGameReligions::LogReligionMessage

; 5877 : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strFaith$227412[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN30@DoFaithPur:

; 5878 : 	}
; 5879 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoFaithPurchases@CvReligionAI@@AAEXXZ$0:
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoFaithPurchases@CvReligionAI@@AAEXXZ$1:
	lea	ecx, DWORD PTR _strFaith$227412[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoFaithPurchases@CvReligionAI@@AAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-136]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoFaithPurchases@CvReligionAI@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoFaithPurchases@CvReligionAI@@AAEXXZ ENDP		; CvReligionAI::DoFaithPurchases
PUBLIC	??_C@_0BA@OOENOOEP@UNIT_MISSIONARY?$AA@		; `string'
;	COMDAT ??_C@_0BA@OOENOOEP@UNIT_MISSIONARY?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
CONST	SEGMENT
??_C@_0BA@OOENOOEP@UNIT_MISSIONARY?$AA@ DB 'UNIT_MISSIONARY', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
CONST	ENDS
;	COMDAT ?BuyMissionary@CvReligionAI@@AAEXW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T241764 = -24						; size = 4
_pBestCity$227426 = -20					; size = 4
_iCost$227424 = -16					; size = 4
_pCapital$ = -12					; size = 4
_eMissionary$ = -8					; size = 4
_kPlayer$ = -4						; size = 4
_eReligion$ = 8						; size = 4
?BuyMissionary@CvReligionAI@@AAEXW4ReligionTypes@@@Z PROC ; CvReligionAI::BuyMissionary, COMDAT
; _this$ = ecx

; 5883 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 5884 : 	CvPlayer &kPlayer = GET_PLAYER(m_pPlayer->GetID());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T241764[ebp], edx
	mov	eax, DWORD PTR $T241764[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 5885 : 	UnitTypes eMissionary = (UnitTypes)GC.getInfoTypeForString("UNIT_MISSIONARY");

	push	0
	push	OFFSET ??_C@_0BA@OOENOOEP@UNIT_MISSIONARY?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eMissionary$[ebp], eax

; 5886 : 	CvCity *pCapital = kPlayer.getCapitalCity();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pCapital$[ebp], eax

; 5887 : 	if (pCapital)

	cmp	DWORD PTR _pCapital$[ebp], 0
	je	SHORT $LN4@BuyMission

; 5888 : 	{
; 5889 : 		int iCost = pCapital->GetFaithPurchaseCost(eMissionary, true /*bIncludeBeliefDiscounts*/);

	push	1
	mov	ecx, DWORD PTR _eMissionary$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pCapital$[ebp]
	call	?GetFaithPurchaseCost@CvCity@@QAEHW4UnitTypes@@_N@Z ; CvCity::GetFaithPurchaseCost
	mov	DWORD PTR _iCost$227424[ebp], eax

; 5890 : 		if (iCost <= kPlayer.GetFaith())

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	cmp	DWORD PTR _iCost$227424[ebp], eax
	jg	SHORT $LN4@BuyMission

; 5891 : 		{
; 5892 : 			CvCity *pBestCity = CvReligionAIHelpers::GetBestCityFaithUnitPurchase(kPlayer, eMissionary, eReligion);

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	eax, DWORD PTR _eMissionary$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	push	ecx
	call	?GetBestCityFaithUnitPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4UnitTypes@@W4ReligionTypes@@@Z ; CvReligionAIHelpers::GetBestCityFaithUnitPurchase
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pBestCity$227426[ebp], eax

; 5893 : 			if (pBestCity)

	cmp	DWORD PTR _pBestCity$227426[ebp], 0
	je	SHORT $LN4@BuyMission

; 5894 : 			{
; 5895 : 				pBestCity->Purchase(eMissionary, (BuildingTypes)-1, (ProjectTypes)-1, YIELD_FAITH);

	push	5
	push	-1
	push	-1
	mov	edx, DWORD PTR _eMissionary$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pBestCity$227426[ebp]
	call	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::Purchase
$LN4@BuyMission:

; 5896 : 			}
; 5897 : 		}
; 5898 : 	}
; 5899 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?BuyMissionary@CvReligionAI@@AAEXW4ReligionTypes@@@Z ENDP ; CvReligionAI::BuyMissionary
_TEXT	ENDS
PUBLIC	??_C@_0BA@CCIPHAA@UNIT_INQUISITOR?$AA@		; `string'
;	COMDAT ??_C@_0BA@CCIPHAA@UNIT_INQUISITOR?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
CONST	SEGMENT
??_C@_0BA@CCIPHAA@UNIT_INQUISITOR?$AA@ DB 'UNIT_INQUISITOR', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
CONST	ENDS
;	COMDAT ?BuyInquisitor@CvReligionAI@@AAEXW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T241778 = -24						; size = 4
_pBestCity$227442 = -20					; size = 4
_iCost$227440 = -16					; size = 4
_pCapital$ = -12					; size = 4
_eInquisitor$ = -8					; size = 4
_kPlayer$ = -4						; size = 4
_eReligion$ = 8						; size = 4
?BuyInquisitor@CvReligionAI@@AAEXW4ReligionTypes@@@Z PROC ; CvReligionAI::BuyInquisitor, COMDAT
; _this$ = ecx

; 5903 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 5904 : 	CvPlayer &kPlayer = GET_PLAYER(m_pPlayer->GetID());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T241778[ebp], edx
	mov	eax, DWORD PTR $T241778[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 5905 : 	UnitTypes eInquisitor = (UnitTypes)GC.getInfoTypeForString("UNIT_INQUISITOR");

	push	0
	push	OFFSET ??_C@_0BA@CCIPHAA@UNIT_INQUISITOR?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eInquisitor$[ebp], eax

; 5906 : 	CvCity *pCapital = kPlayer.getCapitalCity();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pCapital$[ebp], eax

; 5907 : 	if (pCapital)

	cmp	DWORD PTR _pCapital$[ebp], 0
	je	SHORT $LN4@BuyInquisi

; 5908 : 	{
; 5909 : 		int iCost = pCapital->GetFaithPurchaseCost(eInquisitor, true /*bIncludeBeliefDiscounts*/);

	push	1
	mov	ecx, DWORD PTR _eInquisitor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pCapital$[ebp]
	call	?GetFaithPurchaseCost@CvCity@@QAEHW4UnitTypes@@_N@Z ; CvCity::GetFaithPurchaseCost
	mov	DWORD PTR _iCost$227440[ebp], eax

; 5910 : 		if (iCost <= kPlayer.GetFaith())

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	cmp	DWORD PTR _iCost$227440[ebp], eax
	jg	SHORT $LN4@BuyInquisi

; 5911 : 		{
; 5912 : 			CvCity *pBestCity = CvReligionAIHelpers::GetBestCityFaithUnitPurchase(kPlayer, eInquisitor, eReligion);

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	eax, DWORD PTR _eInquisitor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	push	ecx
	call	?GetBestCityFaithUnitPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4UnitTypes@@W4ReligionTypes@@@Z ; CvReligionAIHelpers::GetBestCityFaithUnitPurchase
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pBestCity$227442[ebp], eax

; 5913 : 			if (pBestCity)

	cmp	DWORD PTR _pBestCity$227442[ebp], 0
	je	SHORT $LN4@BuyInquisi

; 5914 : 			{
; 5915 : 				pBestCity->Purchase(eInquisitor, (BuildingTypes)-1, (ProjectTypes)-1, YIELD_FAITH);

	push	5
	push	-1
	push	-1
	mov	edx, DWORD PTR _eInquisitor$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pBestCity$227442[ebp]
	call	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::Purchase
$LN4@BuyInquisi:

; 5916 : 			}
; 5917 : 		}
; 5918 : 	}
; 5919 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?BuyInquisitor@CvReligionAI@@AAEXW4ReligionTypes@@@Z ENDP ; CvReligionAI::BuyInquisitor
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?BuyGreatPerson@CvReligionAI@@AAEXW4UnitTypes@@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T241792 = -20						; size = 4
_pBestCity$227455 = -16					; size = 4
_iCost$227453 = -12					; size = 4
_pCapital$ = -8						; size = 4
_kPlayer$ = -4						; size = 4
_eUnit$ = 8						; size = 4
?BuyGreatPerson@CvReligionAI@@AAEXW4UnitTypes@@@Z PROC	; CvReligionAI::BuyGreatPerson, COMDAT
; _this$ = ecx

; 5923 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 5924 : 	CvPlayer &kPlayer = GET_PLAYER(m_pPlayer->GetID());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T241792[ebp], edx
	mov	eax, DWORD PTR $T241792[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 5925 : 	CvCity *pCapital = kPlayer.getCapitalCity();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pCapital$[ebp], eax

; 5926 : 	if (pCapital)

	cmp	DWORD PTR _pCapital$[ebp], 0
	je	SHORT $LN4@BuyGreatPe

; 5927 : 	{
; 5928 : 		int iCost = pCapital->GetFaithPurchaseCost(eUnit, true /*bIncludeBeliefDiscounts*/);

	push	1
	mov	ecx, DWORD PTR _eUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pCapital$[ebp]
	call	?GetFaithPurchaseCost@CvCity@@QAEHW4UnitTypes@@_N@Z ; CvCity::GetFaithPurchaseCost
	mov	DWORD PTR _iCost$227453[ebp], eax

; 5929 : 		if (iCost <= kPlayer.GetFaith())

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	cmp	DWORD PTR _iCost$227453[ebp], eax
	jg	SHORT $LN4@BuyGreatPe

; 5930 : 		{
; 5931 : 			CvCity *pBestCity = CvReligionAIHelpers::GetBestCityFaithUnitPurchase(kPlayer, eUnit, NO_RELIGION);

	push	-1
	mov	edx, DWORD PTR _eUnit$[ebp]
	push	edx
	mov	eax, DWORD PTR _kPlayer$[ebp]
	push	eax
	call	?GetBestCityFaithUnitPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4UnitTypes@@W4ReligionTypes@@@Z ; CvReligionAIHelpers::GetBestCityFaithUnitPurchase
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pBestCity$227455[ebp], eax

; 5932 : 			if (pBestCity)

	cmp	DWORD PTR _pBestCity$227455[ebp], 0
	je	SHORT $LN4@BuyGreatPe

; 5933 : 			{
; 5934 : 				pBestCity->Purchase(eUnit, (BuildingTypes)-1, (ProjectTypes)-1, YIELD_FAITH);

	push	5
	push	-1
	push	-1
	mov	ecx, DWORD PTR _eUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBestCity$227455[ebp]
	call	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::Purchase
$LN4@BuyGreatPe:

; 5935 : 			}
; 5936 : 		}
; 5937 : 	}
; 5938 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?BuyGreatPerson@CvReligionAI@@AAEXW4UnitTypes@@@Z ENDP	; CvReligionAI::BuyGreatPerson
_TEXT	ENDS
EXTRN	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z:PROC ; CvCivilizationInfo::getCivilizationBuildings
; Function compile flags: /Odtp
;	COMDAT ?BuyFaithBuilding@CvReligionAI@@AAEXW4ReligionTypes@@W4BuildingClassTypes@@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T241806 = -24						; size = 4
_pBestCity$227471 = -20					; size = 4
_iCost$227469 = -16					; size = 4
_pCapital$ = -12					; size = 4
_eBuilding$ = -8					; size = 4
_kPlayer$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_eBuildingClass$ = 12					; size = 4
?BuyFaithBuilding@CvReligionAI@@AAEXW4ReligionTypes@@W4BuildingClassTypes@@@Z PROC ; CvReligionAI::BuyFaithBuilding, COMDAT
; _this$ = ecx

; 5942 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 5943 : 	CvPlayer &kPlayer = GET_PLAYER(m_pPlayer->GetID());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T241806[ebp], edx
	mov	eax, DWORD PTR $T241806[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 5944 : 	BuildingTypes eBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings(eBuildingClass);

	mov	ecx, DWORD PTR _eBuildingClass$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings
	mov	DWORD PTR _eBuilding$[ebp], eax

; 5945 : 	CvCity *pCapital = kPlayer.getCapitalCity();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pCapital$[ebp], eax

; 5946 : 	if (pCapital)

	cmp	DWORD PTR _pCapital$[ebp], 0
	je	SHORT $LN4@BuyFaithBu

; 5947 : 	{
; 5948 : 		int iCost = pCapital->GetFaithPurchaseCost(eBuilding);

	mov	eax, DWORD PTR _eBuilding$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCapital$[ebp]
	call	?GetFaithPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z ; CvCity::GetFaithPurchaseCost
	mov	DWORD PTR _iCost$227469[ebp], eax

; 5949 : 		if (iCost <= kPlayer.GetFaith())

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	cmp	DWORD PTR _iCost$227469[ebp], eax
	jg	SHORT $LN4@BuyFaithBu

; 5950 : 		{
; 5951 : 			CvCity *pBestCity = CvReligionAIHelpers::GetBestCityFaithBuildingPurchase(kPlayer, eBuilding, eReligion);

	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eBuilding$[ebp]
	push	edx
	mov	eax, DWORD PTR _kPlayer$[ebp]
	push	eax
	call	?GetBestCityFaithBuildingPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4BuildingTypes@@W4ReligionTypes@@@Z ; CvReligionAIHelpers::GetBestCityFaithBuildingPurchase
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pBestCity$227471[ebp], eax

; 5952 : 			if (pBestCity)

	cmp	DWORD PTR _pBestCity$227471[ebp], 0
	je	SHORT $LN4@BuyFaithBu

; 5953 : 			{
; 5954 : 				pBestCity->Purchase((UnitTypes)-1, eBuilding, (ProjectTypes)-1, YIELD_FAITH);

	push	5
	push	-1
	mov	ecx, DWORD PTR _eBuilding$[ebp]
	push	ecx
	push	-1
	mov	ecx, DWORD PTR _pBestCity$227471[ebp]
	call	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::Purchase
$LN4@BuyFaithBu:

; 5955 : 			}
; 5956 : 		}
; 5957 : 	}
; 5958 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?BuyFaithBuilding@CvReligionAI@@AAEXW4ReligionTypes@@W4BuildingClassTypes@@@Z ENDP ; CvReligionAI::BuyFaithBuilding
_TEXT	ENDS
EXTRN	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z:PROC ; CvCity::IsCanPurchase
EXTRN	?GetYieldChange@CvBuildingEntry@@QBEHH@Z:PROC	; CvBuildingEntry::GetYieldChange
EXTRN	?GetEntry@CvBuildingXMLEntries@@QAEPAVCvBuildingEntry@@H@Z:PROC ; CvBuildingXMLEntries::GetEntry
EXTRN	?GetGameBuildings@CvGlobals@@QBEPAVCvBuildingXMLEntries@@XZ:PROC ; CvGlobals::GetGameBuildings
EXTRN	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ:PROC ; CvGlobals::getNumBuildingClassInfos
; Function compile flags: /Odtp
;	COMDAT ?BuyAnyAvailableNonFaithBuilding@CvReligionAI@@AAE_NXZ
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T241827 = -32						; size = 4
$T241823 = -28						; size = 4
_pBuildingEntry$227491 = -24				; size = 4
_eBuilding$227488 = -20					; size = 4
_iI$227484 = -16					; size = 4
_ePlayer$ = -12						; size = 4
_pLoopCity$ = -8					; size = 4
_iLoop$ = -4						; size = 4
?BuyAnyAvailableNonFaithBuilding@CvReligionAI@@AAE_NXZ PROC ; CvReligionAI::BuyAnyAvailableNonFaithBuilding, COMDAT
; _this$ = ecx

; 5962 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 5963 : 	PlayerTypes ePlayer = m_pPlayer->GetID();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR _ePlayer$[ebp], edx

; 5964 : 
; 5965 : 	int iLoop;
; 5966 : 	CvCity* pLoopCity;
; 5967 : 	for(pLoopCity = GET_PLAYER(ePlayer).firstCity(&iLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(ePlayer).nextCity(&iLoop))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T241823[ebp], eax
	push	0
	lea	ecx, DWORD PTR _iLoop$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T241823[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN9@BuyAnyAvai
$LN8@BuyAnyAvai:
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T241827[ebp], edx
	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T241827[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN9@BuyAnyAvai:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	$LN7@BuyAnyAvai

; 5968 : 	{
; 5969 : #ifdef AUI_WARNING_FIXES
; 5970 : 		for (uint iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)
; 5971 : #else
; 5972 : 		for (int iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)

	mov	DWORD PTR _iI$227484[ebp], 0
	jmp	SHORT $LN6@BuyAnyAvai
$LN5@BuyAnyAvai:
	mov	ecx, DWORD PTR _iI$227484[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$227484[ebp], ecx
$LN6@BuyAnyAvai:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	DWORD PTR _iI$227484[ebp], eax
	jge	$LN4@BuyAnyAvai

; 5973 : #endif
; 5974 : 		{
; 5975 : 			BuildingTypes eBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings(iI);

	mov	edx, DWORD PTR _iI$227484[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings
	mov	DWORD PTR _eBuilding$227488[ebp], eax

; 5976 : 			if(eBuilding != NO_BUILDING)

	cmp	DWORD PTR _eBuilding$227488[ebp], -1
	je	SHORT $LN3@BuyAnyAvai

; 5977 : 			{
; 5978 : 				CvBuildingEntry* pBuildingEntry = GC.GetGameBuildings()->GetEntry(eBuilding);

	mov	ecx, DWORD PTR _eBuilding$227488[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBuildings@CvGlobals@@QBEPAVCvBuildingXMLEntries@@XZ ; CvGlobals::GetGameBuildings
	mov	ecx, eax
	call	?GetEntry@CvBuildingXMLEntries@@QAEPAVCvBuildingEntry@@H@Z ; CvBuildingXMLEntries::GetEntry
	mov	DWORD PTR _pBuildingEntry$227491[ebp], eax

; 5979 : 
; 5980 : 				// Check to make sure this isn't a Faith-generating building
; 5981 : 				if(pBuildingEntry && pBuildingEntry->GetYieldChange(YIELD_FAITH) == 0)

	cmp	DWORD PTR _pBuildingEntry$227491[ebp], 0
	je	SHORT $LN3@BuyAnyAvai
	push	5
	mov	ecx, DWORD PTR _pBuildingEntry$227491[ebp]
	call	?GetYieldChange@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetYieldChange
	test	eax, eax
	jne	SHORT $LN3@BuyAnyAvai

; 5982 : 				{
; 5983 : 					if(pLoopCity->IsCanPurchase(true, true, (UnitTypes)-1, eBuilding, (ProjectTypes)-1, YIELD_FAITH))

	push	5
	push	-1
	mov	edx, DWORD PTR _eBuilding$227488[ebp]
	push	edx
	push	-1
	push	1
	push	1
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@BuyAnyAvai

; 5984 : 					{
; 5985 : 						pLoopCity->Purchase((UnitTypes)-1, eBuilding, (ProjectTypes)-1, YIELD_FAITH);

	push	5
	push	-1
	mov	ecx, DWORD PTR _eBuilding$227488[ebp]
	push	ecx
	push	-1
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::Purchase

; 5986 : 						return true;

	mov	al, 1
	jmp	SHORT $LN10@BuyAnyAvai
$LN3@BuyAnyAvai:

; 5987 : 					}
; 5988 : 				}
; 5989 : 			}
; 5990 : 		}

	jmp	$LN5@BuyAnyAvai
$LN4@BuyAnyAvai:

; 5991 : 	}

	jmp	$LN8@BuyAnyAvai
$LN7@BuyAnyAvai:

; 5992 : 	return false;

	xor	al, al
$LN10@BuyAnyAvai:

; 5993 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?BuyAnyAvailableNonFaithBuilding@CvReligionAI@@AAE_NXZ ENDP ; CvReligionAI::BuyAnyAvailableNonFaithBuilding
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?BuyAnyAvailableFaithBuilding@CvReligionAI@@AAE_NXZ
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T241845 = -32						; size = 4
$T241841 = -28						; size = 4
_eBuilding$227511 = -24					; size = 4
_eBuildingClass$227509 = -20				; size = 4
_eReligion$227507 = -16					; size = 4
_ePlayer$ = -12						; size = 4
_pLoopCity$ = -8					; size = 4
_iLoop$ = -4						; size = 4
?BuyAnyAvailableFaithBuilding@CvReligionAI@@AAE_NXZ PROC ; CvReligionAI::BuyAnyAvailableFaithBuilding, COMDAT
; _this$ = ecx

; 5997 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 5998 : 	PlayerTypes ePlayer = m_pPlayer->GetID();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR _ePlayer$[ebp], edx

; 5999 : 
; 6000 : 	int iLoop;
; 6001 : 	CvCity* pLoopCity;
; 6002 : 	for(pLoopCity = GET_PLAYER(ePlayer).firstCity(&iLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(ePlayer).nextCity(&iLoop))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T241841[ebp], eax
	push	0
	lea	ecx, DWORD PTR _iLoop$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T241841[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN7@BuyAnyAvai@2
$LN6@BuyAnyAvai@2:
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T241845[ebp], edx
	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T241845[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN7@BuyAnyAvai@2:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	$LN5@BuyAnyAvai@2

; 6003 : 	{
; 6004 : 		ReligionTypes eReligion = pLoopCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eReligion$227507[ebp], eax

; 6005 : 		if(eReligion > RELIGION_PANTHEON)

	cmp	DWORD PTR _eReligion$227507[ebp], 0
	jle	SHORT $LN4@BuyAnyAvai@2

; 6006 : 		{
; 6007 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 6008 : 			std::vector<BuildingClassTypes> eBuildingClass = FaithBuildingAvailable(eReligion);
; 6009 : 			if (eBuildingClass.size() > 0)
; 6010 : 			{
; 6011 : 				for (std::vector<BuildingClassTypes>::iterator it = eBuildingClass.begin(); it != eBuildingClass.end(); ++it)
; 6012 : 				{
; 6013 : 					BuildingTypes eBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings((*it));
; 6014 : #else
; 6015 : 			BuildingClassTypes eBuildingClass = FaithBuildingAvailable(eReligion);

	mov	ecx, DWORD PTR _eReligion$227507[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FaithBuildingAvailable@CvReligionAI@@ABE?AW4BuildingClassTypes@@W4ReligionTypes@@@Z ; CvReligionAI::FaithBuildingAvailable
	mov	DWORD PTR _eBuildingClass$227509[ebp], eax

; 6016 : 			if(eBuildingClass != NO_BUILDINGCLASS)

	cmp	DWORD PTR _eBuildingClass$227509[ebp], -1
	je	SHORT $LN4@BuyAnyAvai@2

; 6017 : 			{
; 6018 : 				BuildingTypes eBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings(eBuildingClass);

	mov	edx, DWORD PTR _eBuildingClass$227509[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings
	mov	DWORD PTR _eBuilding$227511[ebp], eax

; 6019 : #endif
; 6020 : 				if(eBuilding != NO_BUILDING)

	cmp	DWORD PTR _eBuilding$227511[ebp], -1
	je	SHORT $LN4@BuyAnyAvai@2

; 6021 : 				{
; 6022 : 					if(pLoopCity->IsCanPurchase(true, true, (UnitTypes)-1, eBuilding, (ProjectTypes)-1, YIELD_FAITH))

	push	5
	push	-1
	mov	ecx, DWORD PTR _eBuilding$227511[ebp]
	push	ecx
	push	-1
	push	1
	push	1
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@BuyAnyAvai@2

; 6023 : 					{
; 6024 : 						pLoopCity->Purchase((UnitTypes)-1, eBuilding, (ProjectTypes)-1, YIELD_FAITH);

	push	5
	push	-1
	mov	eax, DWORD PTR _eBuilding$227511[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::Purchase

; 6025 : 						return true;

	mov	al, 1
	jmp	SHORT $LN8@BuyAnyAvai@2
$LN4@BuyAnyAvai@2:

; 6026 : 					}
; 6027 : 				}
; 6028 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 6029 : 				}
; 6030 : #endif
; 6031 : 			}
; 6032 : 		}
; 6033 : 	}

	jmp	$LN6@BuyAnyAvai@2
$LN5@BuyAnyAvai@2:

; 6034 : 	return false;

	xor	al, al
$LN8@BuyAnyAvai@2:

; 6035 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?BuyAnyAvailableFaithBuilding@CvReligionAI@@AAE_NXZ ENDP ; CvReligionAI::BuyAnyAvailableFaithBuilding
_TEXT	ENDS
PUBLIC	?ScoreBeliefForPlayer@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBeliefForPlayer
PUBLIC	?ScoreBeliefAtCity@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvCity@@@Z ; CvReligionAI::ScoreBeliefAtCity
PUBLIC	?ScoreBeliefAtPlot@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvPlot@@@Z ; CvReligionAI::ScoreBeliefAtPlot
EXTRN	?isBeingWorked@CvPlot@@QBE_NXZ:PROC		; CvPlot::isBeingWorked
EXTRN	?GetClosestFriendlyCity@CvPlayer@@QAEPAVCvCity@@AAVCvPlot@@H@Z:PROC ; CvPlayer::GetClosestFriendlyCity
; Function compile flags: /Odtp
;	COMDAT ?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z
_TEXT	SEGMENT
_this$ = -84						; size = 4
$T241910 = -80						; size = 4
$T241906 = -76						; size = 4
$T241902 = -72						; size = 4
$T241898 = -68						; size = 4
$T241894 = -64						; size = 4
_uiOffset$241884 = -60					; size = 4
$T241875 = -56						; size = 4
$T241874 = -52						; size = 4
$T241859 = -48						; size = 4
$T241855 = -44						; size = 4
$T241851 = -40						; size = 4
_iScoreAtCity$227544 = -36				; size = 4
_iScoreAtPlot$227534 = -32				; size = 4
_pClosestCity$227532 = -28				; size = 4
_ePlotOwner$227529 = -24				; size = 4
_iRtnValue$ = -20					; size = 4
_pPlot$ = -16						; size = 4
_iPlotLoop$ = -12					; size = 4
_pLoopCity$ = -8					; size = 4
_iLoop$ = -4						; size = 4
_pEntry$ = 8						; size = 4
?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z PROC ; CvReligionAI::ScoreBelief, COMDAT
; _this$ = ecx

; 6043 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	mov	DWORD PTR _this$[ebp], ecx

; 6044 : 	int iRtnValue = 5;  // Base value since everything has SOME value

	mov	DWORD PTR _iRtnValue$[ebp], 5

; 6045 : 
; 6046 : 	// Loop through each plot on map
; 6047 : #ifdef AUI_WARNING_FIXES
; 6048 : 	CvPlot* pPlot;
; 6049 : 	for (uint iPlotLoop = 0; iPlotLoop < GC.getMap().numPlots(); iPlotLoop++)
; 6050 : #else
; 6051 : 	int iPlotLoop;
; 6052 : 	CvPlot* pPlot;
; 6053 : 	for(iPlotLoop = 0; iPlotLoop < GC.getMap().numPlots(); iPlotLoop++)

	mov	DWORD PTR _iPlotLoop$[ebp], 0
	jmp	SHORT $LN14@ScoreBelie
$LN13@ScoreBelie:
	mov	eax, DWORD PTR _iPlotLoop$[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlotLoop$[ebp], eax
$LN14@ScoreBelie:
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T241851[ebp], ecx
	mov	edx, DWORD PTR $T241851[ebp]
	mov	eax, DWORD PTR [edx+4028]
	mov	DWORD PTR $T241855[ebp], eax
	mov	ecx, DWORD PTR _iPlotLoop$[ebp]
	cmp	ecx, DWORD PTR $T241855[ebp]
	jge	$LN12@ScoreBelie

; 6054 : #endif
; 6055 : 	{
; 6056 : 		pPlot = GC.getMap().plotByIndexUnchecked(iPlotLoop);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T241859[ebp], edx
	mov	eax, DWORD PTR _iPlotLoop$[ebp]
	imul	eax, 484				; 000001e4H
	mov	ecx, DWORD PTR $T241859[ebp]
	add	eax, DWORD PTR [ecx+4068]
	mov	DWORD PTR _pPlot$[ebp], eax

; 6057 : 
; 6058 : 		// Skip if not revealed or in enemy territory
; 6059 : 		PlayerTypes ePlotOwner = pPlot->getOwner();

	mov	edx, DWORD PTR _pPlot$[ebp]
	movsx	eax, BYTE PTR [edx+4]
	mov	DWORD PTR _ePlotOwner$227529[ebp], eax

; 6060 : 		if(pPlot->isRevealed(m_pPlayer->getTeam()) && (ePlotOwner == NO_PLAYER || ePlotOwner == m_pPlayer->GetID()))

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T241874[ebp], edx
	mov	eax, DWORD PTR $T241874[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T241875[ebp], eax
	mov	edx, DWORD PTR $T241875[ebp]
	shr	edx, 5
	mov	DWORD PTR _uiOffset$241884[ebp], edx
	mov	eax, DWORD PTR _uiOffset$241884[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR $T241875[ebp]
	sub	ecx, eax
	mov	edx, 1
	shl	edx, cl
	mov	eax, DWORD PTR _uiOffset$241884[ebp]
	mov	ecx, DWORD PTR _pPlot$[ebp]
	and	edx, DWORD PTR [ecx+eax*4+8]
	setne	dl
	movzx	eax, dl
	test	eax, eax
	je	$LN11@ScoreBelie
	cmp	DWORD PTR _ePlotOwner$227529[ebp], -1
	je	SHORT $LN10@ScoreBelie
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T241894[ebp], eax
	mov	ecx, DWORD PTR _ePlotOwner$227529[ebp]
	cmp	ecx, DWORD PTR $T241894[ebp]
	jne	$LN11@ScoreBelie
$LN10@ScoreBelie:

; 6061 : 		{
; 6062 : 			// Also skip if closest city of ours is not within 3
; 6063 : 			CvCity* pClosestCity = m_pPlayer->GetClosestFriendlyCity(*pPlot, 3);

	push	3
	mov	edx, DWORD PTR _pPlot$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?GetClosestFriendlyCity@CvPlayer@@QAEPAVCvCity@@AAVCvPlot@@H@Z ; CvPlayer::GetClosestFriendlyCity
	mov	DWORD PTR _pClosestCity$227532[ebp], eax

; 6064 : 			if(pClosestCity)

	cmp	DWORD PTR _pClosestCity$227532[ebp], 0
	je	SHORT $LN11@ScoreBelie

; 6065 : 			{
; 6066 : 				// Score it
; 6067 : 				int iScoreAtPlot = ScoreBeliefAtPlot(pEntry, pPlot);

	mov	ecx, DWORD PTR _pPlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pEntry$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ScoreBeliefAtPlot@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvPlot@@@Z ; CvReligionAI::ScoreBeliefAtPlot
	mov	DWORD PTR _iScoreAtPlot$227534[ebp], eax

; 6068 : 
; 6069 : 				// Apply multiplier based on whether or not being worked, within culture borders, or not
; 6070 : 				if(pPlot->isBeingWorked())

	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?isBeingWorked@CvPlot@@QBE_NXZ		; CvPlot::isBeingWorked
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@ScoreBelie

; 6071 : 				{
; 6072 : 					iScoreAtPlot *= GC.getRELIGION_BELIEF_SCORE_WORKED_PLOT_MULTIPLIER();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3420
	mov	DWORD PTR $T241898[ebp], ecx
	mov	edx, DWORD PTR _iScoreAtPlot$227534[ebp]
	imul	edx, DWORD PTR $T241898[ebp]
	mov	DWORD PTR _iScoreAtPlot$227534[ebp], edx
	jmp	SHORT $LN7@ScoreBelie
$LN8@ScoreBelie:

; 6073 : 				}
; 6074 : 				else if(ePlotOwner != NO_PLAYER)

	cmp	DWORD PTR _ePlotOwner$227529[ebp], -1
	je	SHORT $LN6@ScoreBelie

; 6075 : 				{
; 6076 : 					iScoreAtPlot *= GC.getRELIGION_BELIEF_SCORE_OWNED_PLOT_MULTIPLIER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3424
	mov	DWORD PTR $T241902[ebp], eax
	mov	ecx, DWORD PTR _iScoreAtPlot$227534[ebp]
	imul	ecx, DWORD PTR $T241902[ebp]
	mov	DWORD PTR _iScoreAtPlot$227534[ebp], ecx

; 6077 : 				}
; 6078 : 				else

	jmp	SHORT $LN7@ScoreBelie
$LN6@ScoreBelie:

; 6079 : 				{
; 6080 : 					iScoreAtPlot *= GC.getRELIGION_BELIEF_SCORE_UNOWNED_PLOT_MULTIPLIER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3428
	mov	DWORD PTR $T241906[ebp], edx
	mov	eax, DWORD PTR _iScoreAtPlot$227534[ebp]
	imul	eax, DWORD PTR $T241906[ebp]
	mov	DWORD PTR _iScoreAtPlot$227534[ebp], eax
$LN7@ScoreBelie:

; 6081 : 				}
; 6082 : 
; 6083 : 				iRtnValue += iScoreAtPlot;

	mov	ecx, DWORD PTR _iRtnValue$[ebp]
	add	ecx, DWORD PTR _iScoreAtPlot$227534[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], ecx
$LN11@ScoreBelie:

; 6084 : 			}
; 6085 : 		}
; 6086 : 	}

	jmp	$LN13@ScoreBelie
$LN12@ScoreBelie:

; 6087 : 
; 6088 : 	// Add in value at city level
; 6089 : 	int iLoop;
; 6090 : 	CvCity* pLoopCity;
; 6091 : 	for(pLoopCity = m_pPlayer->firstCity(&iLoop); pLoopCity != NULL; pLoopCity = m_pPlayer->nextCity(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN4@ScoreBelie
$LN3@ScoreBelie:
	push	0
	lea	ecx, DWORD PTR _iLoop$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN4@ScoreBelie:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	SHORT $LN2@ScoreBelie

; 6092 : 	{
; 6093 : 		int iScoreAtCity = ScoreBeliefAtCity(pEntry, pLoopCity);

	mov	eax, DWORD PTR _pLoopCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pEntry$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ScoreBeliefAtCity@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvCity@@@Z ; CvReligionAI::ScoreBeliefAtCity
	mov	DWORD PTR _iScoreAtCity$227544[ebp], eax

; 6094 : 		iScoreAtCity *= GC.getRELIGION_BELIEF_SCORE_CITY_MULTIPLIER();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3416
	mov	DWORD PTR $T241910[ebp], edx
	mov	eax, DWORD PTR _iScoreAtCity$227544[ebp]
	imul	eax, DWORD PTR $T241910[ebp]
	mov	DWORD PTR _iScoreAtCity$227544[ebp], eax

; 6095 : 
; 6096 : 		iRtnValue += iScoreAtCity;

	mov	ecx, DWORD PTR _iRtnValue$[ebp]
	add	ecx, DWORD PTR _iScoreAtCity$227544[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], ecx

; 6097 : 	}

	jmp	SHORT $LN3@ScoreBelie
$LN2@ScoreBelie:

; 6098 : 
; 6099 : 	// Add in player-level value
; 6100 : 	iRtnValue += ScoreBeliefForPlayer(pEntry);

	mov	edx, DWORD PTR _pEntry$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ScoreBeliefForPlayer@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBeliefForPlayer
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6101 : 
; 6102 : 	// Divide by 2 if a Pantheon belief (to deemphasize these to Byzantine bonus belief)
; 6103 : 	if (pEntry->IsPantheonBelief())

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsPantheonBelief
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@ScoreBelie

; 6104 : 	{
; 6105 : 		iRtnValue /= 2;

	mov	eax, DWORD PTR _iRtnValue$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN1@ScoreBelie:

; 6106 : 	}
; 6107 : 
; 6108 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]

; 6109 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ENDP ; CvReligionAI::ScoreBelief
_TEXT	ENDS
EXTRN	?GetImprovementYieldChange@CvBeliefEntry@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z:PROC ; CvBeliefEntry::GetImprovementYieldChange
EXTRN	?canHaveImprovement@CvPlot@@QBE_NW4ImprovementTypes@@W4TeamTypes@@_N@Z:PROC ; CvPlot::canHaveImprovement
EXTRN	?getNumImprovementInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumImprovementInfos
EXTRN	?GetResourceYieldChange@CvBeliefEntry@@QBEHHH@Z:PROC ; CvBeliefEntry::GetResourceYieldChange
EXTRN	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z:PROC ; CvPlot::getResourceType
EXTRN	?GetYieldModifierNaturalWonder@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetYieldModifierNaturalWonder
EXTRN	?GetYieldChangeNaturalWonder@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetYieldChangeNaturalWonder
EXTRN	?IsNaturalWonder@CvPlot@@QBE_NXZ:PROC		; CvPlot::IsNaturalWonder
EXTRN	?GetFeatureYieldChange@CvBeliefEntry@@QBEHHH@Z:PROC ; CvBeliefEntry::GetFeatureYieldChange
EXTRN	?GetTerrainYieldChange@CvBeliefEntry@@QBEHHH@Z:PROC ; CvBeliefEntry::GetTerrainYieldChange
; Function compile flags: /Odtp
;	COMDAT ?ScoreBeliefAtPlot@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvPlot@@@Z
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T241934 = -40						; size = 4
$T241933 = -36						; size = 4
_f$241924 = -29						; size = 1
_jJ$227564 = -28					; size = 4
_iNumImprovementInfos$227563 = -24			; size = 4
_eTerrain$227556 = -20					; size = 4
_eFeature$227558 = -16					; size = 4
_eResource$227561 = -12					; size = 4
_iI$227552 = -8						; size = 4
_iRtnValue$ = -4					; size = 4
_pEntry$ = 8						; size = 4
_pPlot$ = 12						; size = 4
?ScoreBeliefAtPlot@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvPlot@@@Z PROC ; CvReligionAI::ScoreBeliefAtPlot, COMDAT
; _this$ = ecx

; 6117 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 6118 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 6119 : 
; 6120 : 	for(int iI = 0; iI < NUM_YIELD_TYPES; iI++)

	mov	DWORD PTR _iI$227552[ebp], 0
	jmp	SHORT $LN11@ScoreBelie@2
$LN10@ScoreBelie@2:
	mov	eax, DWORD PTR _iI$227552[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$227552[ebp], eax
$LN11@ScoreBelie@2:
	cmp	DWORD PTR _iI$227552[ebp], 6
	jge	$LN9@ScoreBelie@2

; 6121 : 	{
; 6122 : 		// Terrain
; 6123 : 		TerrainTypes eTerrain = pPlot->getTerrainType();

	mov	ecx, DWORD PTR _pPlot$[ebp]
	movsx	edx, BYTE PTR [ecx+6]
	mov	DWORD PTR _eTerrain$227556[ebp], edx

; 6124 : 		if(eTerrain != NO_TERRAIN)

	cmp	DWORD PTR _eTerrain$227556[ebp], -1
	je	SHORT $LN18@ScoreBelie@2

; 6125 : 		{
; 6126 : 			iRtnValue += pEntry->GetTerrainYieldChange(eTerrain, iI);

	mov	eax, DWORD PTR _iI$227552[ebp]
	push	eax
	mov	ecx, DWORD PTR _eTerrain$227556[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetTerrainYieldChange@CvBeliefEntry@@QBEHHH@Z ; CvBeliefEntry::GetTerrainYieldChange
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6127 : 		}
; 6128 : 
; 6129 : 		// Feature
; 6130 : 		FeatureTypes eFeature = pPlot->getFeatureType();

$LN18@ScoreBelie@2:
	mov	edx, DWORD PTR _pPlot$[ebp]
	mov	al, BYTE PTR [edx+432]
	mov	BYTE PTR _f$241924[ebp], al
	movsx	ecx, BYTE PTR _f$241924[ebp]
	mov	DWORD PTR _eFeature$227558[ebp], ecx

; 6131 : 		if(eFeature != NO_FEATURE)

	cmp	DWORD PTR _eFeature$227558[ebp], -1
	je	SHORT $LN7@ScoreBelie@2

; 6132 : 		{
; 6133 : 			iRtnValue += pEntry->GetFeatureYieldChange(eFeature, iI);

	mov	edx, DWORD PTR _iI$227552[ebp]
	push	edx
	mov	eax, DWORD PTR _eFeature$227558[ebp]
	push	eax
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetFeatureYieldChange@CvBeliefEntry@@QBEHHH@Z ; CvBeliefEntry::GetFeatureYieldChange
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6134 : 
; 6135 : 			if(pPlot->IsNaturalWonder())

	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?IsNaturalWonder@CvPlot@@QBE_NXZ	; CvPlot::IsNaturalWonder
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@ScoreBelie@2

; 6136 : 			{
; 6137 : 				iRtnValue += pEntry->GetYieldChangeNaturalWonder(iI);

	mov	edx, DWORD PTR _iI$227552[ebp]
	push	edx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetYieldChangeNaturalWonder@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangeNaturalWonder
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6138 : 				iRtnValue += (pEntry->GetYieldModifierNaturalWonder(iI) / 25);

	mov	eax, DWORD PTR _iI$227552[ebp]
	push	eax
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetYieldModifierNaturalWonder@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldModifierNaturalWonder
	cdq
	mov	ecx, 25					; 00000019H
	idiv	ecx
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN7@ScoreBelie@2:

; 6139 : 			}
; 6140 : 		}
; 6141 : 
; 6142 : 		// Resource
; 6143 : 		ResourceTypes eResource = pPlot->getResourceType();

	push	-1
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType
	mov	DWORD PTR _eResource$227561[ebp], eax

; 6144 : 		if(eResource != NO_RESOURCE)

	cmp	DWORD PTR _eResource$227561[ebp], -1
	je	$LN5@ScoreBelie@2

; 6145 : 		{
; 6146 : 			iRtnValue += pEntry->GetResourceYieldChange(eResource, iI);

	mov	edx, DWORD PTR _iI$227552[ebp]
	push	edx
	mov	eax, DWORD PTR _eResource$227561[ebp]
	push	eax
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetResourceYieldChange@CvBeliefEntry@@QBEHHH@Z ; CvBeliefEntry::GetResourceYieldChange
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6147 : 
; 6148 : 			// Improvement
; 6149 : #ifdef AUI_WARNING_FIXES
; 6150 : 			for (uint jJ = 0; jJ < GC.getNumImprovementInfos(); jJ++)
; 6151 : #else
; 6152 : 			int iNumImprovementInfos = GC.getNumImprovementInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumImprovementInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumImprovementInfos
	mov	DWORD PTR _iNumImprovementInfos$227563[ebp], eax

; 6153 : 			for(int jJ = 0; jJ < iNumImprovementInfos; jJ++)

	mov	DWORD PTR _jJ$227564[ebp], 0
	jmp	SHORT $LN4@ScoreBelie@2
$LN3@ScoreBelie@2:
	mov	ecx, DWORD PTR _jJ$227564[ebp]
	add	ecx, 1
	mov	DWORD PTR _jJ$227564[ebp], ecx
$LN4@ScoreBelie@2:
	mov	edx, DWORD PTR _jJ$227564[ebp]
	cmp	edx, DWORD PTR _iNumImprovementInfos$227563[ebp]
	jge	SHORT $LN5@ScoreBelie@2

; 6154 : #endif
; 6155 : 			{
; 6156 : 				if(pPlot->canHaveImprovement((ImprovementTypes)jJ, m_pPlayer->getTeam()))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T241933[ebp], ecx
	mov	edx, DWORD PTR $T241933[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T241934[ebp], eax
	push	0
	mov	ecx, DWORD PTR $T241934[ebp]
	push	ecx
	mov	edx, DWORD PTR _jJ$227564[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?canHaveImprovement@CvPlot@@QBE_NW4ImprovementTypes@@W4TeamTypes@@_N@Z ; CvPlot::canHaveImprovement
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@ScoreBelie@2

; 6157 : 				{
; 6158 : 					iRtnValue += (pEntry->GetImprovementYieldChange((ImprovementTypes)jJ, (YieldTypes)iI) * 2);

	mov	ecx, DWORD PTR _iI$227552[ebp]
	push	ecx
	mov	edx, DWORD PTR _jJ$227564[ebp]
	push	edx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetImprovementYieldChange@CvBeliefEntry@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z ; CvBeliefEntry::GetImprovementYieldChange
	mov	ecx, DWORD PTR _iRtnValue$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _iRtnValue$[ebp], edx
$LN1@ScoreBelie@2:

; 6159 : 				}
; 6160 : 			}

	jmp	SHORT $LN3@ScoreBelie@2
$LN5@ScoreBelie@2:

; 6161 : 		}
; 6162 : 	}

	jmp	$LN10@ScoreBelie@2
$LN9@ScoreBelie@2:

; 6163 : 
; 6164 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]

; 6165 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?ScoreBeliefAtPlot@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvPlot@@@Z ENDP ; CvReligionAI::ScoreBeliefAtPlot
_TEXT	ENDS
PUBLIC	??_C@_0BB@OGEJLBEB@FLAVOR_HAPPINESS?$AA@	; `string'
PUBLIC	??_C@_0BE@EEBBMCFH@FLAVOR_CITY_DEFENSE?$AA@	; `string'
PUBLIC	??_C@_0P@CHEPBLFE@FLAVOR_DEFENSE?$AA@		; `string'
PUBLIC	??_C@_0P@ELMNBNJP@FLAVOR_OFFENSE?$AA@		; `string'
EXTRN	?GetMaxYieldModifierPerFollower@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetMaxYieldModifierPerFollower
EXTRN	?GetYieldChangeWorldWonder@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetYieldChangeWorldWonder
EXTRN	?getMaxPlayerInstances@CvBuildingClassInfo@@QBEHXZ:PROC ; CvBuildingClassInfo::getMaxPlayerInstances
EXTRN	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetNumBuilding
EXTRN	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ:PROC ; CvCity::GetCityBuildings
EXTRN	?GetBuildingClassYieldChange@CvBeliefEntry@@QBEHHH@Z:PROC ; CvBeliefEntry::GetBuildingClassYieldChange
EXTRN	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z:PROC ; CvGlobals::getBuildingClassInfo
EXTRN	?GetYieldChangeAnySpecialist@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetYieldChangeAnySpecialist
EXTRN	?IsRouteToCapitalConnected@CvCity@@QAE_NXZ:PROC	; CvCity::IsRouteToCapitalConnected
EXTRN	?GetYieldChangeTradeRoute@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetYieldChangeTradeRoute
EXTRN	?GetCityYieldChange@CvBeliefEntry@@QBEHH@Z:PROC	; CvBeliefEntry::GetCityYieldChange
EXTRN	?GetBuildingClassHappiness@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetBuildingClassHappiness
EXTRN	?GetHappinessPerCity@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetHappinessPerCity
EXTRN	?GetRiverHappiness@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetRiverHappiness
EXTRN	?GetWonderProductionModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetWonderProductionModifier
EXTRN	?getCurrentEra@CvGame@@QBE?AW4EraTypes@@XZ:PROC	; CvGame::getCurrentEra
EXTRN	?GetObsoleteEra@CvBeliefEntry@@QBE?AW4EraTypes@@XZ:PROC ; CvBeliefEntry::GetObsoleteEra
EXTRN	?GetFriendlyHealChange@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetFriendlyHealChange
EXTRN	?GetCityRangeStrikeModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetCityRangeStrikeModifier
EXTRN	?GetPlotCultureCostModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetPlotCultureCostModifier
EXTRN	?RequiresPeace@CvBeliefEntry@@QBE_NXZ:PROC	; CvBeliefEntry::RequiresPeace
EXTRN	?GetCityGrowthModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetCityGrowthModifier
EXTRN	?GetMinFollowers@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetMinFollowers
EXTRN	?GetMinPopulation@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetMinPopulation
EXTRN	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z:PROC ; CvFlavorManager::GetPersonalityIndividualFlavor
EXTRN	?GetFlavorManager@CvPlayer@@QBEPAVCvFlavorManager@@XZ:PROC ; CvPlayer::GetFlavorManager
;	COMDAT ??_C@_0BB@OGEJLBEB@FLAVOR_HAPPINESS?$AA@
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BB@OGEJLBEB@FLAVOR_HAPPINESS?$AA@ DB 'FLAVOR_HAPPINESS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EEBBMCFH@FLAVOR_CITY_DEFENSE?$AA@
CONST	SEGMENT
??_C@_0BE@EEBBMCFH@FLAVOR_CITY_DEFENSE?$AA@ DB 'FLAVOR_CITY_DEFENSE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CHEPBLFE@FLAVOR_DEFENSE?$AA@
CONST	SEGMENT
??_C@_0P@CHEPBLFE@FLAVOR_DEFENSE?$AA@ DB 'FLAVOR_DEFENSE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ELMNBNJP@FLAVOR_OFFENSE?$AA@
CONST	SEGMENT
??_C@_0P@ELMNBNJP@FLAVOR_OFFENSE?$AA@ DB 'FLAVOR_OFFENSE', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
CONST	ENDS
;	COMDAT ?ScoreBeliefAtCity@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvCity@@@Z
_TEXT	SEGMENT
tv156 = -96						; size = 4
tv306 = -92						; size = 4
_this$ = -88						; size = 4
$T241957 = -84						; size = 4
$T241951 = -80						; size = 4
$T241944 = -76						; size = 4
$T241938 = -72						; size = 4
$T241937 = -68						; size = 4
_eBuilding$227632 = -64					; size = 4
_pkBuildingClassInfo$227627 = -60			; size = 4
_jJ$227623 = -56					; size = 4
_iI$227613 = -52					; size = 4
_jJ$227607 = -48					; size = 4
_iHappinessMultiplier$ = -44				; size = 4
_iMinPop$ = -40						; size = 4
_iMinFollowers$ = -36					; size = 4
_iRtnValue$ = -32					; size = 4
_pFlavorManager$ = -28					; size = 4
_iFlavorOffense$ = -24					; size = 4
_iFlavorCityDefense$ = -20				; size = 4
_iTempValue$ = -16					; size = 4
_iFlavorHappiness$ = -12				; size = 4
_iHappinessNeedFactor$ = -8				; size = 4
_iFlavorDefense$ = -4					; size = 4
_pEntry$ = 8						; size = 4
_pCity$ = 12						; size = 4
?ScoreBeliefAtCity@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvCity@@@Z PROC ; CvReligionAI::ScoreBeliefAtCity, COMDAT
; _this$ = ecx

; 6173 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 6174 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 6175 : 	int iTempValue;
; 6176 : 	int iMinPop;
; 6177 : 	int iMinFollowers;
; 6178 : 	int iHappinessMultiplier = 2;

	mov	DWORD PTR _iHappinessMultiplier$[ebp], 2

; 6179 : 
; 6180 : 	CvFlavorManager* pFlavorManager = m_pPlayer->GetFlavorManager();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?GetFlavorManager@CvPlayer@@QBEPAVCvFlavorManager@@XZ ; CvPlayer::GetFlavorManager
	mov	DWORD PTR _pFlavorManager$[ebp], eax

; 6181 : 	int iFlavorOffense = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_OFFENSE"));

	push	0
	push	OFFSET ??_C@_0P@ELMNBNJP@FLAVOR_OFFENSE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	mov	DWORD PTR _iFlavorOffense$[ebp], eax

; 6182 : 	int iFlavorDefense = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_DEFENSE"));

	push	0
	push	OFFSET ??_C@_0P@CHEPBLFE@FLAVOR_DEFENSE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	mov	DWORD PTR _iFlavorDefense$[ebp], eax

; 6183 : 	int iFlavorCityDefense = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_CITY_DEFENSE"));

	push	0
	push	OFFSET ??_C@_0BE@EEBBMCFH@FLAVOR_CITY_DEFENSE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	mov	DWORD PTR _iFlavorCityDefense$[ebp], eax

; 6184 : 	int iFlavorHappiness = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_HAPPINESS"));

	push	0
	push	OFFSET ??_C@_0BB@OGEJLBEB@FLAVOR_HAPPINESS?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	mov	DWORD PTR _iFlavorHappiness$[ebp], eax

; 6185 : 
; 6186 : 	int iHappinessNeedFactor = iFlavorOffense * 2 + iFlavorHappiness - iFlavorDefense;

	mov	ecx, DWORD PTR _iFlavorOffense$[ebp]
	mov	edx, DWORD PTR _iFlavorHappiness$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	sub	eax, DWORD PTR _iFlavorDefense$[ebp]
	mov	DWORD PTR _iHappinessNeedFactor$[ebp], eax

; 6187 : 	if (iHappinessNeedFactor > 15)

	cmp	DWORD PTR _iHappinessNeedFactor$[ebp], 15 ; 0000000fH
	jle	SHORT $LN35@ScoreBelie@3

; 6188 : 	{
; 6189 : 		iHappinessMultiplier = 3;

	mov	DWORD PTR _iHappinessMultiplier$[ebp], 3
	jmp	SHORT $LN34@ScoreBelie@3
$LN35@ScoreBelie@3:

; 6190 : 	}
; 6191 : 	else if (iHappinessNeedFactor < 6)

	cmp	DWORD PTR _iHappinessNeedFactor$[ebp], 6
	jge	SHORT $LN34@ScoreBelie@3

; 6192 : 	{
; 6193 : 		iHappinessMultiplier = 1;

	mov	DWORD PTR _iHappinessMultiplier$[ebp], 1
$LN34@ScoreBelie@3:

; 6194 : 	}
; 6195 : 
; 6196 : 	iMinPop = pEntry->GetMinPopulation();

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetMinPopulation@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetMinPopulation
	mov	DWORD PTR _iMinPop$[ebp], eax

; 6197 : 	iMinFollowers = pEntry->GetMinFollowers();

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetMinFollowers@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetMinFollowers
	mov	DWORD PTR _iMinFollowers$[ebp], eax

; 6198 : 
; 6199 : 	// Simple ones
; 6200 : 	iRtnValue += pEntry->GetCityGrowthModifier() / 3;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetCityGrowthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityGrowthModifier
	cdq
	mov	ecx, 3
	idiv	ecx
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6201 : 	if(pEntry->RequiresPeace())

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?RequiresPeace@CvBeliefEntry@@QBE_NXZ	; CvBeliefEntry::RequiresPeace
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN32@ScoreBelie@3

; 6202 : 	{
; 6203 : 		iRtnValue /= 2;

	mov	eax, DWORD PTR _iRtnValue$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN32@ScoreBelie@3:

; 6204 : 	}
; 6205 : 	iRtnValue += (-pEntry->GetPlotCultureCostModifier() * 2) / 10;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetPlotCultureCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetPlotCultureCostModifier
	neg	eax
	shl	eax, 1
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6206 : 	iRtnValue += (pEntry->GetCityRangeStrikeModifier() / 10) * MAX(iFlavorDefense,iFlavorCityDefense);

	mov	edx, DWORD PTR _iFlavorDefense$[ebp]
	cmp	edx, DWORD PTR _iFlavorCityDefense$[ebp]
	jge	SHORT $LN40@ScoreBelie@3
	lea	eax, DWORD PTR _iFlavorCityDefense$[ebp]
	mov	DWORD PTR tv306[ebp], eax
	jmp	SHORT $LN41@ScoreBelie@3
$LN40@ScoreBelie@3:
	lea	ecx, DWORD PTR _iFlavorDefense$[ebp]
	mov	DWORD PTR tv306[ebp], ecx
$LN41@ScoreBelie@3:
	mov	edx, DWORD PTR tv306[ebp]
	mov	DWORD PTR $T241944[ebp], edx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetCityRangeStrikeModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityRangeStrikeModifier
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	edx, DWORD PTR $T241944[ebp]
	imul	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6207 : 	iRtnValue += pEntry->GetFriendlyHealChange() / 10;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetFriendlyHealChange@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFriendlyHealChange
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6208 : 
; 6209 : 	// Wonder production multiplier
; 6210 : 	if(pEntry->GetObsoleteEra() > 0)

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetObsoleteEra@CvBeliefEntry@@QBE?AW4EraTypes@@XZ ; CvBeliefEntry::GetObsoleteEra
	test	eax, eax
	jle	SHORT $LN31@ScoreBelie@3

; 6211 : 	{	
; 6212 : 		if (pEntry->GetObsoleteEra() > GC.getGame().getCurrentEra())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241951[ebp], edx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetObsoleteEra@CvBeliefEntry@@QBE?AW4EraTypes@@XZ ; CvBeliefEntry::GetObsoleteEra
	mov	esi, eax
	mov	ecx, DWORD PTR $T241951[ebp]
	call	?getCurrentEra@CvGame@@QBE?AW4EraTypes@@XZ ; CvGame::getCurrentEra
	cmp	esi, eax
	jle	SHORT $LN30@ScoreBelie@3

; 6213 : 		{
; 6214 : 			iRtnValue += (pEntry->GetWonderProductionModifier() * pEntry->GetObsoleteEra()) / 10;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetWonderProductionModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetWonderProductionModifier
	mov	esi, eax
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetObsoleteEra@CvBeliefEntry@@QBE?AW4EraTypes@@XZ ; CvBeliefEntry::GetObsoleteEra
	imul	eax, esi
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN30@ScoreBelie@3:

; 6215 : 		}
; 6216 : 	}
; 6217 : 	else

	jmp	SHORT $LN29@ScoreBelie@3
$LN31@ScoreBelie@3:

; 6218 : 	{
; 6219 : 		iRtnValue += pEntry->GetWonderProductionModifier() / 3;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetWonderProductionModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetWonderProductionModifier
	cdq
	mov	ecx, 3
	idiv	ecx
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN29@ScoreBelie@3:

; 6220 : 	}
; 6221 : 
; 6222 : 	// River happiness
; 6223 : 	iTempValue = pEntry->GetRiverHappiness() * iHappinessMultiplier;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetRiverHappiness@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetRiverHappiness
	imul	eax, DWORD PTR _iHappinessMultiplier$[ebp]
	mov	DWORD PTR _iTempValue$[ebp], eax

; 6224 : 	if(iMinPop > 0)

	cmp	DWORD PTR _iMinPop$[ebp], 0
	jle	SHORT $LN28@ScoreBelie@3

; 6225 : 	{
; 6226 : 		if(pCity->getPopulation() >= iMinPop)

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, DWORD PTR _iMinPop$[ebp]
	jl	SHORT $LN28@ScoreBelie@3

; 6227 : 		{
; 6228 : 			iTempValue *= 2;

	mov	edx, DWORD PTR _iTempValue$[ebp]
	shl	edx, 1
	mov	DWORD PTR _iTempValue$[ebp], edx
$LN28@ScoreBelie@3:

; 6229 : 		}
; 6230 : 	}
; 6231 : 	iRtnValue += iTempValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]
	add	eax, DWORD PTR _iTempValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6232 : 
; 6233 : 	// Happiness per city
; 6234 : 	iTempValue = pEntry->GetHappinessPerCity() * iHappinessMultiplier;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetHappinessPerCity@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetHappinessPerCity
	imul	eax, DWORD PTR _iHappinessMultiplier$[ebp]
	mov	DWORD PTR _iTempValue$[ebp], eax

; 6235 : 	if(iMinPop > 0)

	cmp	DWORD PTR _iMinPop$[ebp], 0
	jle	SHORT $LN26@ScoreBelie@3

; 6236 : 	{
; 6237 : 		if(pCity->getPopulation() >= iMinPop)

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, DWORD PTR _iMinPop$[ebp]
	jl	SHORT $LN26@ScoreBelie@3

; 6238 : 		{
; 6239 : 			iTempValue *= 2;

	mov	ecx, DWORD PTR _iTempValue$[ebp]
	shl	ecx, 1
	mov	DWORD PTR _iTempValue$[ebp], ecx
$LN26@ScoreBelie@3:

; 6240 : 		}
; 6241 : 	}
; 6242 : 	iRtnValue += iTempValue;

	mov	edx, DWORD PTR _iRtnValue$[ebp]
	add	edx, DWORD PTR _iTempValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], edx

; 6243 : 
; 6244 : 	// Building class happiness
; 6245 : #ifdef AUI_WARNING_FIXES
; 6246 : 	for (uint jJ = 0; jJ < GC.getNumBuildingClassInfos(); jJ++)
; 6247 : #else
; 6248 : 	for(int jJ = 0; jJ < GC.getNumBuildingClassInfos(); jJ++)

	mov	DWORD PTR _jJ$227607[ebp], 0
	jmp	SHORT $LN24@ScoreBelie@3
$LN23@ScoreBelie@3:
	mov	eax, DWORD PTR _jJ$227607[ebp]
	add	eax, 1
	mov	DWORD PTR _jJ$227607[ebp], eax
$LN24@ScoreBelie@3:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	DWORD PTR _jJ$227607[ebp], eax
	jge	SHORT $LN22@ScoreBelie@3

; 6249 : #endif
; 6250 : 	{
; 6251 : 		iTempValue = pEntry->GetBuildingClassHappiness(jJ) * iHappinessMultiplier;

	mov	ecx, DWORD PTR _jJ$227607[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetBuildingClassHappiness@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetBuildingClassHappiness
	imul	eax, DWORD PTR _iHappinessMultiplier$[ebp]
	mov	DWORD PTR _iTempValue$[ebp], eax

; 6252 : 		if(iMinFollowers > 0)

	cmp	DWORD PTR _iMinFollowers$[ebp], 0
	jle	SHORT $LN21@ScoreBelie@3

; 6253 : 		{
; 6254 : 			if(pCity->getPopulation() >= iMinFollowers)

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, DWORD PTR _iMinFollowers$[ebp]
	jl	SHORT $LN21@ScoreBelie@3

; 6255 : 			{
; 6256 : 				iTempValue *= 2;

	mov	edx, DWORD PTR _iTempValue$[ebp]
	shl	edx, 1
	mov	DWORD PTR _iTempValue$[ebp], edx
$LN21@ScoreBelie@3:

; 6257 : 			}
; 6258 : 		}
; 6259 : 		iRtnValue += iTempValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]
	add	eax, DWORD PTR _iTempValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6260 : 	}

	jmp	SHORT $LN23@ScoreBelie@3
$LN22@ScoreBelie@3:

; 6261 : 
; 6262 : 	for(int iI = 0; iI < NUM_YIELD_TYPES; iI++)

	mov	DWORD PTR _iI$227613[ebp], 0
	jmp	SHORT $LN19@ScoreBelie@3
$LN18@ScoreBelie@3:
	mov	ecx, DWORD PTR _iI$227613[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$227613[ebp], ecx
$LN19@ScoreBelie@3:
	cmp	DWORD PTR _iI$227613[ebp], 6
	jge	$LN17@ScoreBelie@3

; 6263 : 	{
; 6264 : 		// City yield change
; 6265 : 		iTempValue = pEntry->GetCityYieldChange(iI);

	mov	edx, DWORD PTR _iI$227613[ebp]
	push	edx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetCityYieldChange@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetCityYieldChange
	mov	DWORD PTR _iTempValue$[ebp], eax

; 6266 : 		if(iMinPop > 0)

	cmp	DWORD PTR _iMinPop$[ebp], 0
	jle	SHORT $LN16@ScoreBelie@3

; 6267 : 		{
; 6268 : 			if(pCity->getPopulation() >= iMinPop)

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, DWORD PTR _iMinPop$[ebp]
	jl	SHORT $LN16@ScoreBelie@3

; 6269 : 			{
; 6270 : 				iTempValue *= 2;

	mov	eax, DWORD PTR _iTempValue$[ebp]
	shl	eax, 1
	mov	DWORD PTR _iTempValue$[ebp], eax
$LN16@ScoreBelie@3:

; 6271 : 			}
; 6272 : 		}
; 6273 : 		iRtnValue += iTempValue;

	mov	ecx, DWORD PTR _iRtnValue$[ebp]
	add	ecx, DWORD PTR _iTempValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], ecx

; 6274 : 
; 6275 : 		// Trade route yield change
; 6276 : 		iTempValue = pEntry->GetYieldChangeTradeRoute(iI);

	mov	edx, DWORD PTR _iI$227613[ebp]
	push	edx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetYieldChangeTradeRoute@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangeTradeRoute
	mov	DWORD PTR _iTempValue$[ebp], eax

; 6277 : 		if(iMinPop > 0)

	cmp	DWORD PTR _iMinPop$[ebp], 0
	jle	SHORT $LN14@ScoreBelie@3

; 6278 : 		{
; 6279 : 			if(pCity->getPopulation() >= iMinPop)

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, DWORD PTR _iMinPop$[ebp]
	jl	SHORT $LN14@ScoreBelie@3

; 6280 : 			{
; 6281 : 				iTempValue *= 2;

	mov	eax, DWORD PTR _iTempValue$[ebp]
	shl	eax, 1
	mov	DWORD PTR _iTempValue$[ebp], eax
$LN14@ScoreBelie@3:

; 6282 : 			}
; 6283 : 		}
; 6284 : 		if(pCity->IsRouteToCapitalConnected())

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?IsRouteToCapitalConnected@CvCity@@QAE_NXZ ; CvCity::IsRouteToCapitalConnected
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@ScoreBelie@3

; 6285 : 		{
; 6286 : 			iTempValue *= 2;

	mov	edx, DWORD PTR _iTempValue$[ebp]
	shl	edx, 1
	mov	DWORD PTR _iTempValue$[ebp], edx
$LN12@ScoreBelie@3:

; 6287 : 		}
; 6288 : 		iRtnValue += iTempValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]
	add	eax, DWORD PTR _iTempValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6289 : 
; 6290 : 		// Specialist yield change
; 6291 : 		iTempValue = pEntry->GetYieldChangeAnySpecialist(iI);

	mov	ecx, DWORD PTR _iI$227613[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetYieldChangeAnySpecialist@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangeAnySpecialist
	mov	DWORD PTR _iTempValue$[ebp], eax

; 6292 : 		if(pCity->getPopulation() >= 8)  // Like it more with large cities

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, 8
	jl	SHORT $LN11@ScoreBelie@3

; 6293 : 		{
; 6294 : 			iTempValue *= 3;

	mov	edx, DWORD PTR _iTempValue$[ebp]
	imul	edx, 3
	mov	DWORD PTR _iTempValue$[ebp], edx
$LN11@ScoreBelie@3:

; 6295 : 		}
; 6296 : 		iRtnValue += iTempValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]
	add	eax, DWORD PTR _iTempValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6297 : 
; 6298 : 		// Building class yield change
; 6299 : #ifdef AUI_WARNING_FIXES
; 6300 : 		for (uint jJ = 0; jJ < GC.getNumBuildingClassInfos(); jJ++)
; 6301 : #else
; 6302 : 		for(int jJ = 0; jJ < GC.getNumBuildingClassInfos(); jJ++)

	mov	DWORD PTR _jJ$227623[ebp], 0
	jmp	SHORT $LN10@ScoreBelie@3
$LN9@ScoreBelie@3:
	mov	ecx, DWORD PTR _jJ$227623[ebp]
	add	ecx, 1
	mov	DWORD PTR _jJ$227623[ebp], ecx
$LN10@ScoreBelie@3:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	DWORD PTR _jJ$227623[ebp], eax
	jge	$LN8@ScoreBelie@3

; 6303 : #endif
; 6304 : 		{
; 6305 : 			CvBuildingClassInfo* pkBuildingClassInfo = GC.getBuildingClassInfo((BuildingClassTypes)jJ);

	mov	edx, DWORD PTR _jJ$227623[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z ; CvGlobals::getBuildingClassInfo
	mov	DWORD PTR _pkBuildingClassInfo$227627[ebp], eax

; 6306 : 			if(!pkBuildingClassInfo)

	cmp	DWORD PTR _pkBuildingClassInfo$227627[ebp], 0
	jne	SHORT $LN7@ScoreBelie@3

; 6307 : 			{
; 6308 : 				continue;

	jmp	SHORT $LN9@ScoreBelie@3
$LN7@ScoreBelie@3:

; 6309 : 			}
; 6310 : 
; 6311 : 			iTempValue = pEntry->GetBuildingClassYieldChange(jJ, iI);

	mov	eax, DWORD PTR _iI$227613[ebp]
	push	eax
	mov	ecx, DWORD PTR _jJ$227623[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetBuildingClassYieldChange@CvBeliefEntry@@QBEHHH@Z ; CvBeliefEntry::GetBuildingClassYieldChange
	mov	DWORD PTR _iTempValue$[ebp], eax

; 6312 : 			if(iMinFollowers > 0)

	cmp	DWORD PTR _iMinFollowers$[ebp], 0
	jle	SHORT $LN6@ScoreBelie@3

; 6313 : 			{
; 6314 : 				if(pCity->getPopulation() < iMinFollowers)

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, DWORD PTR _iMinFollowers$[ebp]
	jge	SHORT $LN6@ScoreBelie@3

; 6315 : 				{
; 6316 : 					iTempValue /= 2;

	mov	eax, DWORD PTR _iTempValue$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _iTempValue$[ebp], eax
$LN6@ScoreBelie@3:

; 6317 : 				}
; 6318 : 			}
; 6319 : 
; 6320 : 			BuildingTypes eBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings(jJ);

	mov	edx, DWORD PTR _jJ$227623[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings
	mov	DWORD PTR _eBuilding$227632[ebp], eax

; 6321 : 			if (eBuilding != NO_BUILDING)

	cmp	DWORD PTR _eBuilding$227632[ebp], -1
	je	SHORT $LN4@ScoreBelie@3

; 6322 : 			{
; 6323 : 				if(pCity->GetCityBuildings()->GetNumBuilding(eBuilding) > 0)

	mov	ecx, DWORD PTR _eBuilding$227632[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN4@ScoreBelie@3

; 6324 : 				{
; 6325 : 					iTempValue *= 2;

	mov	edx, DWORD PTR _iTempValue$[ebp]
	shl	edx, 1
	mov	DWORD PTR _iTempValue$[ebp], edx
$LN4@ScoreBelie@3:

; 6326 : 				}
; 6327 : 			}
; 6328 : 
; 6329 : 			if(pkBuildingClassInfo->getMaxPlayerInstances() == 1)

	mov	ecx, DWORD PTR _pkBuildingClassInfo$227627[ebp]
	call	?getMaxPlayerInstances@CvBuildingClassInfo@@QBEHXZ ; CvBuildingClassInfo::getMaxPlayerInstances
	cmp	eax, 1
	jne	SHORT $LN2@ScoreBelie@3

; 6330 : 			{
; 6331 : 				iTempValue /= 2;

	mov	eax, DWORD PTR _iTempValue$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _iTempValue$[ebp], eax
$LN2@ScoreBelie@3:

; 6332 : 			}
; 6333 : 
; 6334 : 			iRtnValue += iTempValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]
	add	eax, DWORD PTR _iTempValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6335 : 		}

	jmp	$LN9@ScoreBelie@3
$LN8@ScoreBelie@3:

; 6336 : 
; 6337 : 		// World wonder change
; 6338 : 		iRtnValue += pEntry->GetYieldChangeWorldWonder(iI) * 3 / 2;

	mov	ecx, DWORD PTR _iI$227613[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetYieldChangeWorldWonder@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangeWorldWonder
	imul	eax, 3
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6339 : 
; 6340 : 		// Production per follower
; 6341 : 		if (pEntry->GetMaxYieldModifierPerFollower(iI) > 0)

	mov	edx, DWORD PTR _iI$227613[ebp]
	push	edx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetMaxYieldModifierPerFollower@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetMaxYieldModifierPerFollower
	test	eax, eax
	jle	SHORT $LN1@ScoreBelie@3

; 6342 : 		{
; 6343 : 			iTempValue = min(pEntry->GetMaxYieldModifierPerFollower(iI), pCity->getPopulation());

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	mov	DWORD PTR $T241937[ebp], eax
	mov	eax, DWORD PTR _iI$227613[ebp]
	push	eax
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetMaxYieldModifierPerFollower@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetMaxYieldModifierPerFollower
	mov	DWORD PTR $T241938[ebp], eax
	mov	ecx, DWORD PTR $T241937[ebp]
	cmp	ecx, DWORD PTR $T241938[ebp]
	jge	SHORT $LN46@ScoreBelie@3
	lea	edx, DWORD PTR $T241937[ebp]
	mov	DWORD PTR tv156[ebp], edx
	jmp	SHORT $LN47@ScoreBelie@3
$LN46@ScoreBelie@3:
	lea	eax, DWORD PTR $T241938[ebp]
	mov	DWORD PTR tv156[ebp], eax
$LN47@ScoreBelie@3:
	mov	ecx, DWORD PTR tv156[ebp]
	mov	DWORD PTR $T241957[ebp], ecx
	mov	edx, DWORD PTR $T241957[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _iTempValue$[ebp], eax

; 6344 : 			iTempValue /= 2;

	mov	eax, DWORD PTR _iTempValue$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _iTempValue$[ebp], eax

; 6345 : 			iRtnValue += iTempValue;

	mov	ecx, DWORD PTR _iRtnValue$[ebp]
	add	ecx, DWORD PTR _iTempValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], ecx
$LN1@ScoreBelie@3:

; 6346 : 		}
; 6347 : 	}

	jmp	$LN18@ScoreBelie@3
$LN17@ScoreBelie@3:

; 6348 : 
; 6349 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]

; 6350 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?ScoreBeliefAtCity@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvCity@@@Z ENDP ; CvReligionAI::ScoreBeliefAtCity
_TEXT	ENDS
PUBLIC	??_C@_0CI@KLGEGGDE@MILITARYAISTRATEGY_ERADICATE_BAR@ ; `string'
PUBLIC	??_C@_0BK@LFLBMNOF@POLICY_BRANCH_RATIONALISM?$AA@ ; `string'
PUBLIC	??_C@_0BK@JFAJPFMD@POLICY_BRANCH_EXPLORATION?$AA@ ; `string'
PUBLIC	??_C@_0BH@GHHDNEFO@POLICY_BRANCH_COMMERCE?$AA@	; `string'
PUBLIC	??_C@_0BJ@OJGGABEI@POLICY_BRANCH_AESTHETICS?$AA@ ; `string'
PUBLIC	??_C@_0BE@NMDDMAON@POLICY_BRANCH_HONOR?$AA@	; `string'
PUBLIC	??_C@_0BI@CCCMFCOO@POLICY_BRANCH_TRADITION?$AA@	; `string'
PUBLIC	??_C@_0BB@PHIOLDJK@FLAVOR_EXPANSION?$AA@	; `string'
PUBLIC	??_C@_0BB@BPIBEAAN@FLAVOR_DIPLOMACY?$AA@	; `string'
PUBLIC	??_C@_0P@NPJBAHPJ@FLAVOR_SCIENCE?$AA@		; `string'
PUBLIC	??_C@_0BE@FPNJJFAD@FLAVOR_GREAT_PEOPLE?$AA@	; `string'
PUBLIC	??_C@_0M@IKAIFEKA@FLAVOR_GOLD?$AA@		; `string'
PUBLIC	??_C@_0P@DAJFKJHO@FLAVOR_CULTURE?$AA@		; `string'
EXTRN	?GetFaithBuildingTourism@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetFaithBuildingTourism
EXTRN	?GetSpyPressure@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetSpyPressure
EXTRN	?GetInquisitorPressureRetention@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetInquisitorPressureRetention
EXTRN	?GetCityStateInfluenceModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetCityStateInfluenceModifier
EXTRN	?IsUsingStrategy@CvMilitaryAI@@QAE_NW4MilitaryAIStrategyTypes@@@Z:PROC ; CvMilitaryAI::IsUsingStrategy
EXTRN	?GetMilitaryAI@CvPlayer@@QBEPAVCvMilitaryAI@@XZ:PROC ; CvPlayer::GetMilitaryAI
EXTRN	?ConvertsBarbarians@CvBeliefEntry@@QBE_NXZ:PROC	; CvBeliefEntry::ConvertsBarbarians
EXTRN	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::IsPolicyBranchBlocked
EXTRN	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::IsPolicyBranchFinished
EXTRN	?FaithPurchaseAllGreatPeople@CvBeliefEntry@@QBE_NXZ:PROC ; CvBeliefEntry::FaithPurchaseAllGreatPeople
EXTRN	?GetProphetCostModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetProphetCostModifier
EXTRN	?GetProphetStrengthModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetProphetStrengthModifier
EXTRN	?GetMissionaryCostModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetMissionaryCostModifier
EXTRN	?GetMissionaryStrengthModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetMissionaryStrengthModifier
EXTRN	?GetSpreadStrengthModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetSpreadStrengthModifier
EXTRN	?GetSpreadDistanceModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetSpreadDistanceModifier
EXTRN	?GetGoldenAgeTurns@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetGoldenAgeTurns
EXTRN	?DeusVult@CvBeliefEntry@@QBE_NXZ:PROC		; CvBeliefEntry::DeusVult
EXTRN	?GetCombatModifierEnemyCities@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetCombatModifierEnemyCities
EXTRN	?GetCombatModifierFriendlyCities@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetCombatModifierFriendlyCities
EXTRN	?GetFriendlyCityStateSpreadModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetFriendlyCityStateSpreadModifier
EXTRN	?GetGreatPersonExpendedFaith@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetGreatPersonExpendedFaith
EXTRN	?GetNumFreeSettlers@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetNumFreeSettlers
EXTRN	?GetYieldChangePerXForeignFollowers@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetYieldChangePerXForeignFollowers
EXTRN	?GetYieldChangePerForeignCity@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetYieldChangePerForeignCity
EXTRN	?GetCityStateMinimumInfluence@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetCityStateMinimumInfluence
EXTRN	?GetGoldWhenCityAdopts@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetGoldWhenCityAdopts
EXTRN	?GetGoldPerXFollowers@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetGoldPerXFollowers
EXTRN	?GetGoldPerFollowingCity@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetGoldPerFollowingCity
EXTRN	?GetSciencePerOtherReligionFollower@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetSciencePerOtherReligionFollower
EXTRN	?GetHappinessPerXPeacefulForeignFollowers@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetHappinessPerXPeacefulForeignFollowers
EXTRN	?GetHappinessPerFollowingCity@CvBeliefEntry@@QBEMXZ:PROC ; CvBeliefEntry::GetHappinessPerFollowingCity
EXTRN	?IsFaithUnitPurchaseEra@CvBeliefEntry@@QBE_NH@Z:PROC ; CvBeliefEntry::IsFaithUnitPurchaseEra
EXTRN	?getNumEraInfos@CvGlobals@@QAEHXZ:PROC		; CvGlobals::getNumEraInfos
EXTRN	?GetProductionCost@CvBuildingEntry@@QBEHXZ:PROC	; CvBuildingEntry::GetProductionCost
EXTRN	?GetFlavorValue@CvBuildingEntry@@QBEHH@Z:PROC	; CvBuildingEntry::GetFlavorValue
EXTRN	?IsBuildingClassEnabled@CvBeliefEntry@@QBE_NH@Z:PROC ; CvBeliefEntry::IsBuildingClassEnabled
EXTRN	?GetPlayerCultureModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetPlayerCultureModifier
EXTRN	?GetPlayerHappiness@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetPlayerHappiness
EXTRN	?IsGoingForWorldConquest@CvDiplomacyAI@@QAE_NXZ:PROC ; CvDiplomacyAI::IsGoingForWorldConquest
EXTRN	__ftol2_sse:PROC
;	COMDAT ??_C@_0CI@KLGEGGDE@MILITARYAISTRATEGY_ERADICATE_BAR@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_0CI@KLGEGGDE@MILITARYAISTRATEGY_ERADICATE_BAR@ DB 'MILITARYAISTRATE'
	DB	'GY_ERADICATE_BARBARIANS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LFLBMNOF@POLICY_BRANCH_RATIONALISM?$AA@
CONST	SEGMENT
??_C@_0BK@LFLBMNOF@POLICY_BRANCH_RATIONALISM?$AA@ DB 'POLICY_BRANCH_RATIO'
	DB	'NALISM', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JFAJPFMD@POLICY_BRANCH_EXPLORATION?$AA@
CONST	SEGMENT
??_C@_0BK@JFAJPFMD@POLICY_BRANCH_EXPLORATION?$AA@ DB 'POLICY_BRANCH_EXPLO'
	DB	'RATION', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GHHDNEFO@POLICY_BRANCH_COMMERCE?$AA@
CONST	SEGMENT
??_C@_0BH@GHHDNEFO@POLICY_BRANCH_COMMERCE?$AA@ DB 'POLICY_BRANCH_COMMERCE'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OJGGABEI@POLICY_BRANCH_AESTHETICS?$AA@
CONST	SEGMENT
??_C@_0BJ@OJGGABEI@POLICY_BRANCH_AESTHETICS?$AA@ DB 'POLICY_BRANCH_AESTHE'
	DB	'TICS', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NMDDMAON@POLICY_BRANCH_HONOR?$AA@
CONST	SEGMENT
??_C@_0BE@NMDDMAON@POLICY_BRANCH_HONOR?$AA@ DB 'POLICY_BRANCH_HONOR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CCCMFCOO@POLICY_BRANCH_TRADITION?$AA@
CONST	SEGMENT
??_C@_0BI@CCCMFCOO@POLICY_BRANCH_TRADITION?$AA@ DB 'POLICY_BRANCH_TRADITI'
	DB	'ON', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PHIOLDJK@FLAVOR_EXPANSION?$AA@
CONST	SEGMENT
??_C@_0BB@PHIOLDJK@FLAVOR_EXPANSION?$AA@ DB 'FLAVOR_EXPANSION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BPIBEAAN@FLAVOR_DIPLOMACY?$AA@
CONST	SEGMENT
??_C@_0BB@BPIBEAAN@FLAVOR_DIPLOMACY?$AA@ DB 'FLAVOR_DIPLOMACY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NPJBAHPJ@FLAVOR_SCIENCE?$AA@
CONST	SEGMENT
??_C@_0P@NPJBAHPJ@FLAVOR_SCIENCE?$AA@ DB 'FLAVOR_SCIENCE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FPNJJFAD@FLAVOR_GREAT_PEOPLE?$AA@
CONST	SEGMENT
??_C@_0BE@FPNJJFAD@FLAVOR_GREAT_PEOPLE?$AA@ DB 'FLAVOR_GREAT_PEOPLE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IKAIFEKA@FLAVOR_GOLD?$AA@
CONST	SEGMENT
??_C@_0M@IKAIFEKA@FLAVOR_GOLD?$AA@ DB 'FLAVOR_GOLD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DAJFKJHO@FLAVOR_CULTURE?$AA@
CONST	SEGMENT
??_C@_0P@DAJFKJHO@FLAVOR_CULTURE?$AA@ DB 'FLAVOR_CULTURE', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
CONST	ENDS
;	COMDAT ?ScoreBeliefForPlayer@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z
_TEXT	SEGMENT
tv737 = -124						; size = 4
_this$ = -120						; size = 4
$T241974 = -116						; size = 4
$T241970 = -112						; size = 4
$T241966 = -108						; size = 4
_eStrategyBarbs$227744 = -104				; size = 4
_eBranch$227718 = -100					; size = 4
_iTemp$227717 = -96					; size = 4
_iI$227703 = -92					; size = 4
_iTemp$227697 = -88					; size = 4
_i$227692 = -84						; size = 4
_iFlavorValue$227689 = -80				; size = 4
_iFlavorLoop$227685 = -76				; size = 4
_eBuilding$227681 = -72					; size = 4
_pBuildingEntry$227683 = -68				; size = 4
_iI$227676 = -64					; size = 4
_iTemp$227674 = -60					; size = 4
_pGameReligions$ = -56					; size = 4
_iReligionsEnhancedPercent$ = -52			; size = 4
_iFlavorCulture$ = -48					; size = 4
_iRtnValue$ = -44					; size = 4
_pFlavorManager$ = -40					; size = 4
_iFlavorOffense$ = -36					; size = 4
_iFlavorGP$ = -32					; size = 4
_iFlavorDiplomacy$ = -28				; size = 4
_iFlavorExpansion$ = -24				; size = 4
_iFlavorScience$ = -20					; size = 4
_iNumEnhancedReligions$ = -16				; size = 4
_iFlavorHappiness$ = -12				; size = 4
_iFlavorGold$ = -8					; size = 4
_iFlavorDefense$ = -4					; size = 4
_pEntry$ = 8						; size = 4
?ScoreBeliefForPlayer@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z PROC ; CvReligionAI::ScoreBeliefForPlayer, COMDAT
; _this$ = ecx

; 6358 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 6359 : 	int iRtnValue = 0;

	mov	DWORD PTR _iRtnValue$[ebp], 0

; 6360 : 	CvFlavorManager* pFlavorManager = m_pPlayer->GetFlavorManager();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?GetFlavorManager@CvPlayer@@QBEPAVCvFlavorManager@@XZ ; CvPlayer::GetFlavorManager
	mov	DWORD PTR _pFlavorManager$[ebp], eax

; 6361 : 	CvGameReligions* pGameReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T241966[ebp], ecx
	mov	ecx, DWORD PTR $T241966[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pGameReligions$[ebp], eax

; 6362 : 
; 6363 : 	//--------------------
; 6364 : 	// GET BACKGROUND DATA
; 6365 : 	//--------------------
; 6366 : 	int iFlavorOffense = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_OFFENSE"));

	push	0
	push	OFFSET ??_C@_0P@ELMNBNJP@FLAVOR_OFFENSE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	mov	DWORD PTR _iFlavorOffense$[ebp], eax

; 6367 : 	int iFlavorDefense = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_DEFENSE"));

	push	0
	push	OFFSET ??_C@_0P@CHEPBLFE@FLAVOR_DEFENSE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	mov	DWORD PTR _iFlavorDefense$[ebp], eax

; 6368 : 	int iFlavorHappiness = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_HAPPINESS"));

	push	0
	push	OFFSET ??_C@_0BB@OGEJLBEB@FLAVOR_HAPPINESS?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	mov	DWORD PTR _iFlavorHappiness$[ebp], eax

; 6369 : 	int iFlavorCulture = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_CULTURE"));

	push	0
	push	OFFSET ??_C@_0P@DAJFKJHO@FLAVOR_CULTURE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	mov	DWORD PTR _iFlavorCulture$[ebp], eax

; 6370 : 	int iFlavorGold = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_GOLD"));

	push	0
	push	OFFSET ??_C@_0M@IKAIFEKA@FLAVOR_GOLD?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	mov	DWORD PTR _iFlavorGold$[ebp], eax

; 6371 : 	int iFlavorGP = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_GREAT_PEOPLE"));

	push	0
	push	OFFSET ??_C@_0BE@FPNJJFAD@FLAVOR_GREAT_PEOPLE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	mov	DWORD PTR _iFlavorGP$[ebp], eax

; 6372 : 	int iFlavorScience = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_SCIENCE"));

	push	0
	push	OFFSET ??_C@_0P@NPJBAHPJ@FLAVOR_SCIENCE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	mov	DWORD PTR _iFlavorScience$[ebp], eax

; 6373 : 	int iFlavorDiplomacy = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_DIPLOMACY"));

	push	0
	push	OFFSET ??_C@_0BB@BPIBEAAN@FLAVOR_DIPLOMACY?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	mov	DWORD PTR _iFlavorDiplomacy$[ebp], eax

; 6374 : 	int iFlavorExpansion = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_EXPANSION"));

	push	0
	push	OFFSET ??_C@_0BB@PHIOLDJK@FLAVOR_EXPANSION?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	mov	DWORD PTR _iFlavorExpansion$[ebp], eax

; 6375 : 
; 6376 : 	int iNumEnhancedReligions = pGameReligions->GetNumReligionsEnhanced();

	mov	ecx, DWORD PTR _pGameReligions$[ebp]
	call	?GetNumReligionsEnhanced@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsEnhanced
	mov	DWORD PTR _iNumEnhancedReligions$[ebp], eax

; 6377 : 	int iReligionsEnhancedPercent = (100 * iNumEnhancedReligions) / GC.getMap().getWorldInfo().getMaxActiveReligions();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T241970[ebp], edx
	mov	esi, DWORD PTR _iNumEnhancedReligions$[ebp]
	imul	esi, 100				; 00000064H
	mov	ecx, DWORD PTR $T241970[ebp]
	call	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ ; CvMap::getWorldInfo
	mov	ecx, eax
	call	?getMaxActiveReligions@CvWorldInfo@@QBEHXZ ; CvWorldInfo::getMaxActiveReligions
	mov	ecx, eax
	mov	eax, esi
	cdq
	idiv	ecx
	mov	DWORD PTR _iReligionsEnhancedPercent$[ebp], eax

; 6378 : 
; 6379 : 	//------------------------------
; 6380 : 	// PLAYER-LEVEL PANTHEON BELIEFS
; 6381 : 	//------------------------------
; 6382 : 	if(pEntry->GetFaithFromKills() > 0)

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetFaithFromKills@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFaithFromKills
	test	eax, eax
	jle	SHORT $LN50@ScoreBelie@4

; 6383 : 	{
; 6384 : 		int iTemp = pEntry->GetFaithFromKills() * pEntry->GetMaxDistance() * iFlavorOffense / 100;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetFaithFromKills@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFaithFromKills
	mov	esi, eax
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetMaxDistance@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetMaxDistance
	imul	esi, eax
	imul	esi, DWORD PTR _iFlavorOffense$[ebp]
	mov	eax, esi
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _iTemp$227674[ebp], eax

; 6385 : 		if (m_pPlayer->GetDiplomacyAI()->IsGoingForWorldConquest())

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsGoingForWorldConquest@CvDiplomacyAI@@QAE_NXZ ; CvDiplomacyAI::IsGoingForWorldConquest
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN49@ScoreBelie@4

; 6386 : 		{
; 6387 : 			iTemp *= 2;

	mov	ecx, DWORD PTR _iTemp$227674[ebp]
	shl	ecx, 1
	mov	DWORD PTR _iTemp$227674[ebp], ecx
$LN49@ScoreBelie@4:

; 6388 : 		}
; 6389 : 		iRtnValue += iTemp;

	mov	edx, DWORD PTR _iRtnValue$[ebp]
	add	edx, DWORD PTR _iTemp$227674[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], edx
$LN50@ScoreBelie@4:

; 6390 : 	}
; 6391 : 
; 6392 : 	//-------
; 6393 : 	// UNUSED
; 6394 : 	//-------
; 6395 : 	iRtnValue += pEntry->GetPlayerHappiness() * iFlavorHappiness;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetPlayerHappiness@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetPlayerHappiness
	imul	eax, DWORD PTR _iFlavorHappiness$[ebp]
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6396 : 	iRtnValue += pEntry->GetPlayerCultureModifier() * iFlavorCulture;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetPlayerCultureModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetPlayerCultureModifier
	imul	eax, DWORD PTR _iFlavorCulture$[ebp]
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6397 : 
; 6398 : 	//-----------------
; 6399 : 	// FOLLOWER BELIEFS
; 6400 : 	//-----------------
; 6401 : 	// Unlocks a building
; 6402 : #ifdef AUI_WARNING_FIXES
; 6403 : 	for (uint iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)
; 6404 : #else
; 6405 : 	for (int iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)

	mov	DWORD PTR _iI$227676[ebp], 0
	jmp	SHORT $LN48@ScoreBelie@4
$LN47@ScoreBelie@4:
	mov	eax, DWORD PTR _iI$227676[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$227676[ebp], eax
$LN48@ScoreBelie@4:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	DWORD PTR _iI$227676[ebp], eax
	jge	$LN46@ScoreBelie@4

; 6406 : #endif
; 6407 : 	{
; 6408 : 		if (pEntry->IsBuildingClassEnabled(iI))

	mov	ecx, DWORD PTR _iI$227676[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?IsBuildingClassEnabled@CvBeliefEntry@@QBE_NH@Z ; CvBeliefEntry::IsBuildingClassEnabled
	movzx	edx, al
	test	edx, edx
	je	$LN41@ScoreBelie@4

; 6409 : 		{
; 6410 : 			BuildingTypes eBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings(iI);

	mov	eax, DWORD PTR _iI$227676[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings
	mov	DWORD PTR _eBuilding$227681[ebp], eax

; 6411 : 			CvBuildingEntry* pBuildingEntry = GC.GetGameBuildings()->GetEntry(eBuilding);

	mov	edx, DWORD PTR _eBuilding$227681[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBuildings@CvGlobals@@QBEPAVCvBuildingXMLEntries@@XZ ; CvGlobals::GetGameBuildings
	mov	ecx, eax
	call	?GetEntry@CvBuildingXMLEntries@@QAEPAVCvBuildingEntry@@H@Z ; CvBuildingXMLEntries::GetEntry
	mov	DWORD PTR _pBuildingEntry$227683[ebp], eax

; 6412 : 
; 6413 : 			if(pBuildingEntry && pFlavorManager)

	cmp	DWORD PTR _pBuildingEntry$227683[ebp], 0
	je	SHORT $LN41@ScoreBelie@4
	cmp	DWORD PTR _pFlavorManager$[ebp], 0
	je	SHORT $LN41@ScoreBelie@4

; 6414 : 			{
; 6415 : 				for(int iFlavorLoop = 0; iFlavorLoop < GC.getNumFlavorTypes(); iFlavorLoop++)

	mov	DWORD PTR _iFlavorLoop$227685[ebp], 0
	jmp	SHORT $LN43@ScoreBelie@4
$LN42@ScoreBelie@4:
	mov	eax, DWORD PTR _iFlavorLoop$227685[ebp]
	add	eax, 1
	mov	DWORD PTR _iFlavorLoop$227685[ebp], eax
$LN43@ScoreBelie@4:
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	mov	DWORD PTR $T241974[ebp], ecx
	mov	edx, DWORD PTR _iFlavorLoop$227685[ebp]
	cmp	edx, DWORD PTR $T241974[ebp]
	jge	SHORT $LN41@ScoreBelie@4

; 6416 : 				{
; 6417 : 					int iFlavorValue = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)iFlavorLoop) * pBuildingEntry->GetFlavorValue(iFlavorLoop);

	mov	eax, DWORD PTR _iFlavorLoop$227685[ebp]
	push	eax
	mov	ecx, DWORD PTR _pFlavorManager$[ebp]
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	mov	esi, eax
	mov	ecx, DWORD PTR _iFlavorLoop$227685[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBuildingEntry$227683[ebp]
	call	?GetFlavorValue@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetFlavorValue
	imul	esi, eax
	mov	DWORD PTR _iFlavorValue$227689[ebp], esi

; 6418 : 
; 6419 : 					// If can also be built with hammers, much less valuable
; 6420 : 					if (pBuildingEntry->GetProductionCost() > 0)

	mov	ecx, DWORD PTR _pBuildingEntry$227683[ebp]
	call	?GetProductionCost@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetProductionCost
	test	eax, eax
	jle	SHORT $LN40@ScoreBelie@4

; 6421 : 					{
; 6422 : 						iFlavorValue /= 10;

	mov	eax, DWORD PTR _iFlavorValue$227689[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	DWORD PTR _iFlavorValue$227689[ebp], eax
$LN40@ScoreBelie@4:

; 6423 : 					}
; 6424 : 					iRtnValue += iFlavorValue;

	mov	edx, DWORD PTR _iRtnValue$[ebp]
	add	edx, DWORD PTR _iFlavorValue$227689[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], edx

; 6425 : 				}

	jmp	SHORT $LN42@ScoreBelie@4
$LN41@ScoreBelie@4:

; 6426 : 			}
; 6427 : 		}
; 6428 : 	}

	jmp	$LN47@ScoreBelie@4
$LN46@ScoreBelie@4:

; 6429 : 
; 6430 : 	// Unlocks units?	
; 6431 : #ifdef AUI_WARNING_FIXES
; 6432 : 	for (uint i = 0; i < GC.getNumEraInfos(); i++)
; 6433 : #else
; 6434 : 	for(int i = 0; i < GC.getNumEraInfos(); i++)

	mov	DWORD PTR _i$227692[ebp], 0
	jmp	SHORT $LN39@ScoreBelie@4
$LN38@ScoreBelie@4:
	mov	eax, DWORD PTR _i$227692[ebp]
	add	eax, 1
	mov	DWORD PTR _i$227692[ebp], eax
$LN39@ScoreBelie@4:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumEraInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumEraInfos
	cmp	DWORD PTR _i$227692[ebp], eax
	jge	SHORT $LN37@ScoreBelie@4

; 6435 : #endif
; 6436 : 	{
; 6437 : 		// Add in for each era enabled
; 6438 : 		if (pEntry->IsFaithUnitPurchaseEra(i))

	mov	ecx, DWORD PTR _i$227692[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?IsFaithUnitPurchaseEra@CvBeliefEntry@@QBE_NH@Z ; CvBeliefEntry::IsFaithUnitPurchaseEra
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN36@ScoreBelie@4

; 6439 : 		{
; 6440 : 			int iTemp = (iFlavorOffense) + (iFlavorDefense / 2);

	mov	eax, DWORD PTR _iFlavorDefense$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _iFlavorOffense$[ebp]
	mov	DWORD PTR _iTemp$227697[ebp], eax

; 6441 : 			if (m_pPlayer->GetDiplomacyAI()->IsGoingForWorldConquest())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsGoingForWorldConquest@CvDiplomacyAI@@QAE_NXZ ; CvDiplomacyAI::IsGoingForWorldConquest
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN35@ScoreBelie@4

; 6442 : 			{
; 6443 : 				iTemp *= 2;

	mov	edx, DWORD PTR _iTemp$227697[ebp]
	shl	edx, 1
	mov	DWORD PTR _iTemp$227697[ebp], edx
$LN35@ScoreBelie@4:

; 6444 : 			}
; 6445 : 			iRtnValue += iTemp;

	mov	eax, DWORD PTR _iRtnValue$[ebp]
	add	eax, DWORD PTR _iTemp$227697[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN36@ScoreBelie@4:

; 6446 : 		}
; 6447 : 	}

	jmp	SHORT $LN38@ScoreBelie@4
$LN37@ScoreBelie@4:

; 6448 : 
; 6449 : 	//----------------
; 6450 : 	// FOUNDER BELIEFS
; 6451 : 	//----------------
; 6452 : 	iRtnValue += (int)(pEntry->GetHappinessPerFollowingCity() * (float)(iFlavorHappiness + 2 * iFlavorOffense - iFlavorDefense));

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetHappinessPerFollowingCity@CvBeliefEntry@@QBEMXZ ; CvBeliefEntry::GetHappinessPerFollowingCity
	mov	ecx, DWORD PTR _iFlavorOffense$[ebp]
	mov	edx, DWORD PTR _iFlavorHappiness$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	sub	eax, DWORD PTR _iFlavorDefense$[ebp]
	mov	DWORD PTR tv737[ebp], eax
	fimul	DWORD PTR tv737[ebp]
	call	__ftol2_sse
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6453 : 	if (pEntry->GetHappinessPerXPeacefulForeignFollowers() > 0 && iFlavorDefense > 0)

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetHappinessPerXPeacefulForeignFollowers@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetHappinessPerXPeacefulForeignFollowers
	test	eax, eax
	jle	SHORT $LN34@ScoreBelie@4
	cmp	DWORD PTR _iFlavorDefense$[ebp], 0
	jle	SHORT $LN34@ScoreBelie@4

; 6454 : 	{
; 6455 : 		iRtnValue += (iFlavorHappiness * 10 * iFlavorDefense) / (pEntry->GetHappinessPerXPeacefulForeignFollowers() * iFlavorDefense);

	mov	esi, DWORD PTR _iFlavorHappiness$[ebp]
	imul	esi, 10					; 0000000aH
	imul	esi, DWORD PTR _iFlavorDefense$[ebp]
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetHappinessPerXPeacefulForeignFollowers@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetHappinessPerXPeacefulForeignFollowers
	mov	ecx, eax
	imul	ecx, DWORD PTR _iFlavorDefense$[ebp]
	mov	eax, esi
	cdq
	idiv	ecx
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN34@ScoreBelie@4:

; 6456 : 	}
; 6457 : 	iRtnValue += iFlavorScience * pEntry->GetSciencePerOtherReligionFollower() / 5;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetSciencePerOtherReligionFollower@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSciencePerOtherReligionFollower
	imul	eax, DWORD PTR _iFlavorScience$[ebp]
	cdq
	mov	ecx, 5
	idiv	ecx
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6458 : 	iRtnValue += pEntry->GetGoldPerFollowingCity() * iFlavorGold;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetGoldPerFollowingCity@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGoldPerFollowingCity
	imul	eax, DWORD PTR _iFlavorGold$[ebp]
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6459 : 	if(pEntry->GetGoldPerXFollowers() > 0)

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetGoldPerXFollowers@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGoldPerXFollowers
	test	eax, eax
	jle	SHORT $LN33@ScoreBelie@4

; 6460 : 	{
; 6461 : 		iRtnValue += (iFlavorGold * 4 / pEntry->GetGoldPerXFollowers());

	mov	esi, DWORD PTR _iFlavorGold$[ebp]
	shl	esi, 2
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetGoldPerXFollowers@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGoldPerXFollowers
	mov	ecx, eax
	mov	eax, esi
	cdq
	idiv	ecx
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN33@ScoreBelie@4:

; 6462 : 	}
; 6463 : 	iRtnValue += iFlavorGold * pEntry->GetGoldWhenCityAdopts() / 50;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetGoldWhenCityAdopts@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGoldWhenCityAdopts
	imul	eax, DWORD PTR _iFlavorGold$[ebp]
	cdq
	mov	ecx, 50					; 00000032H
	idiv	ecx
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6464 : 
; 6465 : 	// Minimum influence with city states
; 6466 : 	iRtnValue += iFlavorDiplomacy * pEntry->GetCityStateMinimumInfluence() / 7;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetCityStateMinimumInfluence@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityStateMinimumInfluence
	imul	eax, DWORD PTR _iFlavorDiplomacy$[ebp]
	cdq
	mov	ecx, 7
	idiv	ecx
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6467 : 
; 6468 : 	// Yields for foreign followers
; 6469 : 	for(int iI = 0; iI < NUM_YIELD_TYPES; iI++)

	mov	DWORD PTR _iI$227703[ebp], 0
	jmp	SHORT $LN32@ScoreBelie@4
$LN31@ScoreBelie@4:
	mov	edx, DWORD PTR _iI$227703[ebp]
	add	edx, 1
	mov	DWORD PTR _iI$227703[ebp], edx
$LN32@ScoreBelie@4:
	cmp	DWORD PTR _iI$227703[ebp], 6
	jge	$LN30@ScoreBelie@4

; 6470 : 	{
; 6471 : 		if (iI == YIELD_CULTURE)

	cmp	DWORD PTR _iI$227703[ebp], 4
	jne	SHORT $LN29@ScoreBelie@4

; 6472 : 		{
; 6473 : 			iRtnValue += pEntry->GetYieldChangePerForeignCity(iI) * 2 * iFlavorCulture;

	mov	eax, DWORD PTR _iI$227703[ebp]
	push	eax
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetYieldChangePerForeignCity@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangePerForeignCity
	shl	eax, 1
	imul	eax, DWORD PTR _iFlavorCulture$[ebp]
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6474 : 			if (pEntry->GetYieldChangePerXForeignFollowers(iI) > 0)

	mov	ecx, DWORD PTR _iI$227703[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetYieldChangePerXForeignFollowers@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangePerXForeignFollowers
	test	eax, eax
	jle	SHORT $LN28@ScoreBelie@4

; 6475 : 			{
; 6476 : 				iRtnValue += 10 * iFlavorCulture / pEntry->GetYieldChangePerXForeignFollowers(iI);

	mov	esi, DWORD PTR _iFlavorCulture$[ebp]
	imul	esi, 10					; 0000000aH
	mov	edx, DWORD PTR _iI$227703[ebp]
	push	edx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetYieldChangePerXForeignFollowers@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangePerXForeignFollowers
	mov	ecx, eax
	mov	eax, esi
	cdq
	idiv	ecx
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN28@ScoreBelie@4:

; 6477 : 			}
; 6478 : 		}
; 6479 : 		else

	jmp	SHORT $LN26@ScoreBelie@4
$LN29@ScoreBelie@4:

; 6480 : 		{
; 6481 : 			iRtnValue += pEntry->GetYieldChangePerForeignCity(iI) * 10;

	mov	edx, DWORD PTR _iI$227703[ebp]
	push	edx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetYieldChangePerForeignCity@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangePerForeignCity
	imul	eax, 10					; 0000000aH
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6482 : 			if (pEntry->GetYieldChangePerXForeignFollowers(iI) > 0)

	mov	eax, DWORD PTR _iI$227703[ebp]
	push	eax
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetYieldChangePerXForeignFollowers@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangePerXForeignFollowers
	test	eax, eax
	jle	SHORT $LN26@ScoreBelie@4

; 6483 : 			{
; 6484 : 				iRtnValue += 50 / pEntry->GetYieldChangePerXForeignFollowers(iI);

	mov	ecx, DWORD PTR _iI$227703[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetYieldChangePerXForeignFollowers@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangePerXForeignFollowers
	mov	ecx, eax
	mov	eax, 50					; 00000032H
	cdq
	idiv	ecx
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN26@ScoreBelie@4:

; 6485 : 			}
; 6486 : 		}
; 6487 : 	}

	jmp	$LN31@ScoreBelie@4
$LN30@ScoreBelie@4:

; 6488 : 
; 6489 : #ifdef NQ_FREE_SETTLERS_FROM_BELIEF
; 6490 : 	// extra value for expansionist civs
; 6491 : 	iRtnValue += pEntry->GetNumFreeSettlers() * iFlavorExpansion;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetNumFreeSettlers@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetNumFreeSettlers
	imul	eax, DWORD PTR _iFlavorExpansion$[ebp]
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6492 : #endif
; 6493 : 
; 6494 : 	//-----------------
; 6495 : 	// ENHANCER BELIEFS
; 6496 : 	//-----------------
; 6497 : 	iRtnValue += iFlavorGP * pEntry->GetGreatPersonExpendedFaith() / 10;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetGreatPersonExpendedFaith@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGreatPersonExpendedFaith
	imul	eax, DWORD PTR _iFlavorGP$[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6498 : 	iRtnValue += iFlavorDiplomacy * pEntry->GetFriendlyCityStateSpreadModifier() / 20;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetFriendlyCityStateSpreadModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFriendlyCityStateSpreadModifier
	imul	eax, DWORD PTR _iFlavorDiplomacy$[ebp]
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6499 : 	iRtnValue += iFlavorDefense * pEntry->GetCombatModifierFriendlyCities() / 4;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetCombatModifierFriendlyCities@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCombatModifierFriendlyCities
	imul	eax, DWORD PTR _iFlavorDefense$[ebp]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6500 : 	iRtnValue += iFlavorOffense * pEntry->GetCombatModifierEnemyCities() / 4;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetCombatModifierEnemyCities@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCombatModifierEnemyCities
	imul	eax, DWORD PTR _iFlavorOffense$[ebp]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6501 : #ifdef NQ_DEUS_VULT
; 6502 : 	if (pEntry->DeusVult())

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?DeusVult@CvBeliefEntry@@QBE_NXZ	; CvBeliefEntry::DeusVult
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN25@ScoreBelie@4

; 6503 : 	{
; 6504 : 		iRtnValue += (iFlavorOffense + iFlavorDefense) * 3;

	mov	eax, DWORD PTR _iFlavorOffense$[ebp]
	add	eax, DWORD PTR _iFlavorDefense$[ebp]
	imul	eax, 3
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN25@ScoreBelie@4:

; 6505 : 	}
; 6506 : #endif
; 6507 : #ifdef NQ_GOLDEN_AGE_TURNS_FROM_BELIEF
; 6508 : 	iRtnValue += pEntry->GetGoldenAgeTurns() * (iFlavorGold + iFlavorCulture) / 5;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetGoldenAgeTurns@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGoldenAgeTurns
	mov	ecx, DWORD PTR _iFlavorGold$[ebp]
	add	ecx, DWORD PTR _iFlavorCulture$[ebp]
	imul	eax, ecx
	cdq
	mov	ecx, 5
	idiv	ecx
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6509 : #endif
; 6510 : 
; 6511 : 	// Chosen EARLY?
; 6512 : 	if (iReligionsEnhancedPercent < 33)

	cmp	DWORD PTR _iReligionsEnhancedPercent$[ebp], 33 ; 00000021H
	jge	$LN24@ScoreBelie@4

; 6513 : 	{
; 6514 : 		// Good early
; 6515 : 		iRtnValue += (2 * iFlavorExpansion) + pEntry->GetSpreadDistanceModifier();

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetSpreadDistanceModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadDistanceModifier
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	edx, DWORD PTR _iFlavorExpansion$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6516 : 		iRtnValue += (2 * iFlavorScience) + pEntry->GetSpreadStrengthModifier();

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetSpreadStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadStrengthModifier
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	ecx, DWORD PTR _iFlavorScience$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR _iRtnValue$[ebp], edx

; 6517 : 		iRtnValue += pEntry->GetMissionaryStrengthModifier() * 2;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetMissionaryStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryStrengthModifier
	mov	ecx, DWORD PTR _iRtnValue$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _iRtnValue$[ebp], edx

; 6518 : 		iRtnValue += (-1 * pEntry->GetMissionaryCostModifier()) * 2;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetMissionaryCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryCostModifier
	imul	eax, -1
	mov	ecx, DWORD PTR _iRtnValue$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _iRtnValue$[ebp], edx

; 6519 : 
; 6520 : 		// Poor early
; 6521 : 		iRtnValue += pEntry->GetProphetStrengthModifier() / 4;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetProphetStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetProphetStrengthModifier
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6522 : 		iRtnValue += (-1 * pEntry->GetProphetCostModifier()) / 4;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetProphetCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetProphetCostModifier
	imul	eax, -1
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax
	jmp	$LN21@ScoreBelie@4
$LN24@ScoreBelie@4:

; 6523 : 	}
; 6524 : 
; 6525 : 	// Chosen in the MIDDLE?
; 6526 : 	else if (iReligionsEnhancedPercent < 66)

	cmp	DWORD PTR _iReligionsEnhancedPercent$[ebp], 66 ; 00000042H
	jge	SHORT $LN22@ScoreBelie@4

; 6527 : 	{
; 6528 : 		iRtnValue += iFlavorExpansion + pEntry->GetSpreadDistanceModifier() / 2;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetSpreadDistanceModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadDistanceModifier
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _iFlavorExpansion$[ebp]
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6529 : 		iRtnValue += iFlavorScience + pEntry->GetSpreadStrengthModifier() / 2;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetSpreadStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadStrengthModifier
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _iFlavorScience$[ebp]
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6530 : 		iRtnValue += pEntry->GetProphetStrengthModifier() / 2;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetProphetStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetProphetStrengthModifier
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6531 : 		iRtnValue += (-1 * pEntry->GetProphetCostModifier()) / 2;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetProphetCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetProphetCostModifier
	imul	eax, -1
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6532 : 		iRtnValue += pEntry->GetMissionaryStrengthModifier();

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetMissionaryStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryStrengthModifier
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6533 : 		iRtnValue += (-1 * pEntry->GetMissionaryCostModifier());

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetMissionaryCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryCostModifier
	imul	eax, -1
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6534 : 	}
; 6535 : 
; 6536 : 	// Chosen LATE?
; 6537 : 	else

	jmp	$LN21@ScoreBelie@4
$LN22@ScoreBelie@4:

; 6538 : 	{
; 6539 : 		// Poor late
; 6540 : 		iRtnValue += ((2 * iFlavorExpansion) + pEntry->GetSpreadDistanceModifier()) / 4;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetSpreadDistanceModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadDistanceModifier
	mov	ecx, DWORD PTR _iFlavorExpansion$[ebp]
	lea	eax, DWORD PTR [eax+ecx*2]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6541 : 		iRtnValue += ((2 * iFlavorScience) + pEntry->GetSpreadStrengthModifier()) / 4;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetSpreadStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadStrengthModifier
	mov	edx, DWORD PTR _iFlavorScience$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6542 : 		iRtnValue += pEntry->GetMissionaryStrengthModifier() / 2;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetMissionaryStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryStrengthModifier
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6543 : 		iRtnValue += (-1 * pEntry->GetMissionaryCostModifier()) / 2;

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetMissionaryCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryCostModifier
	imul	eax, -1
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6544 : 
; 6545 : 		// Good late
; 6546 : 		iRtnValue += pEntry->GetProphetStrengthModifier();

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetProphetStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetProphetStrengthModifier
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6547 : 		iRtnValue += (-1 * pEntry->GetProphetCostModifier());

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetProphetCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetProphetCostModifier
	imul	eax, -1
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN21@ScoreBelie@4:

; 6548 : 	}
; 6549 : 
; 6550 : 	//-----------------
; 6551 : 	// REFORMATION BELIEFS
; 6552 : 	//-----------------
; 6553 : 	if (pEntry->FaithPurchaseAllGreatPeople())

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?FaithPurchaseAllGreatPeople@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::FaithPurchaseAllGreatPeople
	movzx	eax, al
	test	eax, eax
	je	$LN20@ScoreBelie@4

; 6554 : 	{
; 6555 : 		// Count number of GP branches we have still to open and score based on that
; 6556 : 		int iTemp = 0;

	mov	DWORD PTR _iTemp$227717[ebp], 0

; 6557 : 		PolicyBranchTypes eBranch;
; 6558 : 		eBranch = (PolicyBranchTypes)GC.getInfoTypeForString("POLICY_BRANCH_TRADITION", true /*bHideAssert*/);

	push	1
	push	OFFSET ??_C@_0BI@CCCMFCOO@POLICY_BRANCH_TRADITION?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eBranch$227718[ebp], eax

; 6559 : 		if (eBranch != NO_POLICY_BRANCH_TYPE && (!m_pPlayer->GetPlayerPolicies()->IsPolicyBranchFinished(eBranch) || m_pPlayer->GetPlayerPolicies()->IsPolicyBranchBlocked(eBranch)))

	cmp	DWORD PTR _eBranch$227718[ebp], -1
	je	SHORT $LN19@ScoreBelie@4
	mov	ecx, DWORD PTR _eBranch$227718[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchFinished
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@ScoreBelie@4
	mov	ecx, DWORD PTR _eBranch$227718[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchBlocked
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN19@ScoreBelie@4
$LN18@ScoreBelie@4:

; 6560 : 		{
; 6561 : 			iTemp++;

	mov	ecx, DWORD PTR _iTemp$227717[ebp]
	add	ecx, 1
	mov	DWORD PTR _iTemp$227717[ebp], ecx
$LN19@ScoreBelie@4:

; 6562 : 		}
; 6563 : 		eBranch = (PolicyBranchTypes)GC.getInfoTypeForString("POLICY_BRANCH_HONOR", true /*bHideAssert*/);

	push	1
	push	OFFSET ??_C@_0BE@NMDDMAON@POLICY_BRANCH_HONOR?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eBranch$227718[ebp], eax

; 6564 : 		if (eBranch != NO_POLICY_BRANCH_TYPE && (!m_pPlayer->GetPlayerPolicies()->IsPolicyBranchFinished(eBranch) || m_pPlayer->GetPlayerPolicies()->IsPolicyBranchBlocked(eBranch)))

	cmp	DWORD PTR _eBranch$227718[ebp], -1
	je	SHORT $LN17@ScoreBelie@4
	mov	edx, DWORD PTR _eBranch$227718[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchFinished
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN16@ScoreBelie@4
	mov	edx, DWORD PTR _eBranch$227718[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchBlocked
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN17@ScoreBelie@4
$LN16@ScoreBelie@4:

; 6565 : 		{
; 6566 : 			iTemp++;

	mov	edx, DWORD PTR _iTemp$227717[ebp]
	add	edx, 1
	mov	DWORD PTR _iTemp$227717[ebp], edx
$LN17@ScoreBelie@4:

; 6567 : 		}
; 6568 : 		eBranch = (PolicyBranchTypes)GC.getInfoTypeForString("POLICY_BRANCH_AESTHETICS", true /*bHideAssert*/);

	push	1
	push	OFFSET ??_C@_0BJ@OJGGABEI@POLICY_BRANCH_AESTHETICS?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eBranch$227718[ebp], eax

; 6569 : 		if (eBranch != NO_POLICY_BRANCH_TYPE && (!m_pPlayer->GetPlayerPolicies()->IsPolicyBranchFinished(eBranch) || m_pPlayer->GetPlayerPolicies()->IsPolicyBranchBlocked(eBranch)))

	cmp	DWORD PTR _eBranch$227718[ebp], -1
	je	SHORT $LN15@ScoreBelie@4
	mov	eax, DWORD PTR _eBranch$227718[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchFinished
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN14@ScoreBelie@4
	mov	eax, DWORD PTR _eBranch$227718[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchBlocked
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN15@ScoreBelie@4
$LN14@ScoreBelie@4:

; 6570 : 		{
; 6571 : 			iTemp++;

	mov	eax, DWORD PTR _iTemp$227717[ebp]
	add	eax, 1
	mov	DWORD PTR _iTemp$227717[ebp], eax
$LN15@ScoreBelie@4:

; 6572 : 		}
; 6573 : 		eBranch = (PolicyBranchTypes)GC.getInfoTypeForString("POLICY_BRANCH_COMMERCE", true /*bHideAssert*/);

	push	1
	push	OFFSET ??_C@_0BH@GHHDNEFO@POLICY_BRANCH_COMMERCE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eBranch$227718[ebp], eax

; 6574 : 		if (eBranch != NO_POLICY_BRANCH_TYPE && (!m_pPlayer->GetPlayerPolicies()->IsPolicyBranchFinished(eBranch) || m_pPlayer->GetPlayerPolicies()->IsPolicyBranchBlocked(eBranch)))

	cmp	DWORD PTR _eBranch$227718[ebp], -1
	je	SHORT $LN13@ScoreBelie@4
	mov	ecx, DWORD PTR _eBranch$227718[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchFinished
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@ScoreBelie@4
	mov	ecx, DWORD PTR _eBranch$227718[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchBlocked
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@ScoreBelie@4
$LN12@ScoreBelie@4:

; 6575 : 		{
; 6576 : 			iTemp++;

	mov	ecx, DWORD PTR _iTemp$227717[ebp]
	add	ecx, 1
	mov	DWORD PTR _iTemp$227717[ebp], ecx
$LN13@ScoreBelie@4:

; 6577 : 		}
; 6578 : 		eBranch = (PolicyBranchTypes)GC.getInfoTypeForString("POLICY_BRANCH_EXPLORATION", true /*bHideAssert*/);

	push	1
	push	OFFSET ??_C@_0BK@JFAJPFMD@POLICY_BRANCH_EXPLORATION?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eBranch$227718[ebp], eax

; 6579 : 		if (eBranch != NO_POLICY_BRANCH_TYPE && (!m_pPlayer->GetPlayerPolicies()->IsPolicyBranchFinished(eBranch) || m_pPlayer->GetPlayerPolicies()->IsPolicyBranchBlocked(eBranch)))

	cmp	DWORD PTR _eBranch$227718[ebp], -1
	je	SHORT $LN11@ScoreBelie@4
	mov	edx, DWORD PTR _eBranch$227718[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchFinished
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@ScoreBelie@4
	mov	edx, DWORD PTR _eBranch$227718[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchBlocked
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@ScoreBelie@4
$LN10@ScoreBelie@4:

; 6580 : 		{
; 6581 : 			iTemp++;

	mov	edx, DWORD PTR _iTemp$227717[ebp]
	add	edx, 1
	mov	DWORD PTR _iTemp$227717[ebp], edx
$LN11@ScoreBelie@4:

; 6582 : 		}
; 6583 : 		eBranch = (PolicyBranchTypes)GC.getInfoTypeForString("POLICY_BRANCH_RATIONALISM", true /*bHideAssert*/);

	push	1
	push	OFFSET ??_C@_0BK@LFLBMNOF@POLICY_BRANCH_RATIONALISM?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eBranch$227718[ebp], eax

; 6584 : 		if (eBranch != NO_POLICY_BRANCH_TYPE && (!m_pPlayer->GetPlayerPolicies()->IsPolicyBranchFinished(eBranch) || m_pPlayer->GetPlayerPolicies()->IsPolicyBranchBlocked(eBranch)))

	cmp	DWORD PTR _eBranch$227718[ebp], -1
	je	SHORT $LN9@ScoreBelie@4
	mov	eax, DWORD PTR _eBranch$227718[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchFinished
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@ScoreBelie@4
	mov	eax, DWORD PTR _eBranch$227718[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchBlocked
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@ScoreBelie@4
$LN8@ScoreBelie@4:

; 6585 : 		{
; 6586 : 			iTemp++;

	mov	eax, DWORD PTR _iTemp$227717[ebp]
	add	eax, 1
	mov	DWORD PTR _iTemp$227717[ebp], eax
$LN9@ScoreBelie@4:

; 6587 : 		}
; 6588 : 
; 6589 : 		iRtnValue += (iTemp * 6);

	mov	ecx, DWORD PTR _iTemp$227717[ebp]
	imul	ecx, 6
	add	ecx, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], ecx
$LN20@ScoreBelie@4:

; 6590 : 	}
; 6591 : 	if (pEntry->ConvertsBarbarians())

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?ConvertsBarbarians@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::ConvertsBarbarians
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@ScoreBelie@4

; 6592 : 	{
; 6593 : 		MilitaryAIStrategyTypes eStrategyBarbs = (MilitaryAIStrategyTypes) GC.getInfoTypeForString("MILITARYAISTRATEGY_ERADICATE_BARBARIANS");

	push	0
	push	OFFSET ??_C@_0CI@KLGEGGDE@MILITARYAISTRATEGY_ERADICATE_BAR@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eStrategyBarbs$227744[ebp], eax

; 6594 : 		if (m_pPlayer->GetMilitaryAI()->IsUsingStrategy(eStrategyBarbs))

	mov	eax, DWORD PTR _eStrategyBarbs$227744[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?GetMilitaryAI@CvPlayer@@QBEPAVCvMilitaryAI@@XZ ; CvPlayer::GetMilitaryAI
	mov	ecx, eax
	call	?IsUsingStrategy@CvMilitaryAI@@QAE_NW4MilitaryAIStrategyTypes@@@Z ; CvMilitaryAI::IsUsingStrategy
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@ScoreBelie@4

; 6595 : 		{
; 6596 : 			iRtnValue += 40;

	mov	eax, DWORD PTR _iRtnValue$[ebp]
	add	eax, 40					; 00000028H
	mov	DWORD PTR _iRtnValue$[ebp], eax

; 6597 : 		}
; 6598 : 		else

	jmp	SHORT $LN5@ScoreBelie@4
$LN6@ScoreBelie@4:

; 6599 : 		{
; 6600 : 			iRtnValue += 15;

	mov	ecx, DWORD PTR _iRtnValue$[ebp]
	add	ecx, 15					; 0000000fH
	mov	DWORD PTR _iRtnValue$[ebp], ecx
$LN5@ScoreBelie@4:

; 6601 : 		}
; 6602 : 	}
; 6603 : 	if (pEntry->GetCityStateInfluenceModifier() > 0)

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetCityStateInfluenceModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityStateInfluenceModifier
	test	eax, eax
	jle	SHORT $LN4@ScoreBelie@4

; 6604 : 	{
; 6605 : 		iRtnValue += (pEntry->GetCityStateInfluenceModifier() * iFlavorDiplomacy / 5);

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetCityStateInfluenceModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityStateInfluenceModifier
	imul	eax, DWORD PTR _iFlavorDiplomacy$[ebp]
	cdq
	mov	ecx, 5
	idiv	ecx
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN4@ScoreBelie@4:

; 6606 : 	}
; 6607 : 	if (pEntry->GetInquisitorPressureRetention() > 0)

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetInquisitorPressureRetention@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetInquisitorPressureRetention
	test	eax, eax
	jle	SHORT $LN3@ScoreBelie@4

; 6608 : 	{
; 6609 : 		iRtnValue += (pEntry->GetInquisitorPressureRetention() / 2);

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetInquisitorPressureRetention@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetInquisitorPressureRetention
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN3@ScoreBelie@4:

; 6610 : 	}
; 6611 : 	if (pEntry->GetSpyPressure() > 0)

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetSpyPressure@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetSpyPressure
	test	eax, eax
	jle	SHORT $LN2@ScoreBelie@4

; 6612 : 	{
; 6613 : 		iRtnValue += (pEntry->GetSpyPressure()* 5);

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetSpyPressure@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetSpyPressure
	imul	eax, 5
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN2@ScoreBelie@4:

; 6614 : 	}
; 6615 : 	if (pEntry->GetFaithBuildingTourism() > 0)

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetFaithBuildingTourism@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFaithBuildingTourism
	test	eax, eax
	jle	SHORT $LN1@ScoreBelie@4

; 6616 : 	{
; 6617 : 		iRtnValue += (pEntry->GetFaithBuildingTourism() * 20);

	mov	ecx, DWORD PTR _pEntry$[ebp]
	call	?GetFaithBuildingTourism@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFaithBuildingTourism
	imul	eax, 20					; 00000014H
	add	eax, DWORD PTR _iRtnValue$[ebp]
	mov	DWORD PTR _iRtnValue$[ebp], eax
$LN1@ScoreBelie@4:

; 6618 : 	}
; 6619 : 
; 6620 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[ebp]

; 6621 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?ScoreBeliefForPlayer@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ENDP ; CvReligionAI::ScoreBeliefForPlayer
_TEXT	ENDS
PUBLIC	?ShouldBecomeNewMajority@CvReligionAI@@ABE_NPAVCvCity@@W4ReligionTypes@@H@Z ; CvReligionAI::ShouldBecomeNewMajority
PUBLIC	?GetBit@PlotBoolField@CvPlot@@QBE_NI@Z		; CvPlot::PlotBoolField::GetBit
EXTRN	?IsPlayerAgreeNotToConvert@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerAgreeNotToConvert
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z$0
__ehfuncinfo$?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
_this$ = -236						; size = 4
$T242264 = -232						; size = 4
$T242263 = -228						; size = 4
$T242254 = -224						; size = 4
$T242184 = -152						; size = 4
$T242175 = -148						; size = 4
$T242171 = -144						; size = 4
$T242162 = -140						; size = 4
$T242158 = -136						; size = 4
$T242149 = -132						; size = 4
$T242140 = -128						; size = 4
$T242131 = -124						; size = 4
$T242119 = -120						; size = 4
$T242101 = -116						; size = 4
$T242097 = -112						; size = 4
$T242084 = -108						; size = 4
$T242066 = -104						; size = 4
$T242062 = -100						; size = 4
$T242053 = -96						; size = 4
$T242049 = -92						; size = 4
$T242045 = -88						; size = 4
$T242041 = -84						; size = 4
$T242032 = -80						; size = 4
$T242028 = -76						; size = 4
$T242024 = -72						; size = 4
$T242020 = -68						; size = 4
$T241998 = -64						; size = 4
$T241994 = -60						; size = 4
$T241993 = -56						; size = 4
$T241983 = -52						; size = 4
$T241982 = -48						; size = 4
$T241981 = -44						; size = 4
$T241980 = -40						; size = 4
$T241979 = -36						; size = 4
$T241978 = -32						; size = 4
_eMyReligion$ = -28					; size = 4
_kCityPlayer$ = -24					; size = 4
_eCityOwnersReligion$ = -20				; size = 4
_iScore$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pCity$ = 8						; size = 4
_pUnit$ = 12						; size = 8
?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvReligionAI::ScoreCityForMissionary, COMDAT
; _this$ = ecx

; 6629 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 6630 : 	int iScore = 0;

	mov	DWORD PTR _iScore$[ebp], 0

; 6631 : 
; 6632 : 	ReligionTypes eMyReligion = GetReligionToSpread();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread
	mov	DWORD PTR _eMyReligion$[ebp], eax

; 6633 : 
; 6634 : 	// Skip if not revealed
; 6635 : 	if(!pCity->plot()->isRevealed(m_pPlayer->getTeam()))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T241993[ebp], ecx
	mov	edx, DWORD PTR $T241993[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T241994[ebp], eax
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	DWORD PTR $T241998[ebp], eax
	mov	ecx, DWORD PTR $T241994[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T241998[ebp]
	add	ecx, 8
	call	?GetBit@PlotBoolField@CvPlot@@QBE_NI@Z	; CvPlot::PlotBoolField::GetBit
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN15@ScoreCityF

; 6636 : 	{
; 6637 : 		return iScore;

	mov	eax, DWORD PTR _iScore$[ebp]
	mov	DWORD PTR $T241978[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN26@ScoreCityF
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN26@ScoreCityF:
	mov	eax, DWORD PTR $T241978[ebp]
	jmp	$LN16@ScoreCityF
$LN15@ScoreCityF:

; 6638 : 	}
; 6639 : 
; 6640 : 	// Skip if already our religion
; 6641 : 	if(pCity->GetCityReligions()->GetReligiousMajority() == eMyReligion)

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eMyReligion$[ebp]
	jne	SHORT $LN14@ScoreCityF

; 6642 : 	{
; 6643 : 		return iScore;

	mov	ecx, DWORD PTR _iScore$[ebp]
	mov	DWORD PTR $T241979[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN31@ScoreCityF
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN31@ScoreCityF:
	mov	eax, DWORD PTR $T241979[ebp]
	jmp	$LN16@ScoreCityF
$LN14@ScoreCityF:

; 6644 : 	}
; 6645 : 
; 6646 : 	// Base score based on if we are establishing majority
; 6647 : 	iScore = 100;

	mov	DWORD PTR _iScore$[ebp], 100		; 00000064H

; 6648 : 	if(ShouldBecomeNewMajority(pCity, eMyReligion, pUnit->GetReligionData()->GetReligiousStrength() * GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER()))

	mov	edx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T242020[ebp], edx
	mov	eax, DWORD PTR $T242020[ebp]
	mov	ecx, DWORD PTR [eax+1888]
	mov	DWORD PTR $T242024[ebp], ecx
	mov	edx, DWORD PTR $T242024[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T242028[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7900
	mov	DWORD PTR $T242032[ebp], ecx
	mov	edx, DWORD PTR $T242028[ebp]
	imul	edx, DWORD PTR $T242032[ebp]
	push	edx
	mov	eax, DWORD PTR _eMyReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShouldBecomeNewMajority@CvReligionAI@@ABE_NPAVCvCity@@W4ReligionTypes@@H@Z ; CvReligionAI::ShouldBecomeNewMajority
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN45@ScoreCityF

; 6649 : 	{
; 6650 : 		iScore *= 2;

	mov	eax, DWORD PTR _iScore$[ebp]
	shl	eax, 1
	mov	DWORD PTR _iScore$[ebp], eax

; 6651 : 	}
; 6652 : 
; 6653 : 	if (!GET_PLAYER(pCity->getOwner()).isMinorCiv())

$LN45@ScoreCityF:
	mov	ecx, DWORD PTR _pCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T242041[ebp], edx
	mov	eax, DWORD PTR $T242041[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242045[ebp], eax
	mov	ecx, DWORD PTR $T242045[ebp]
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN12@ScoreCityF

; 6654 : 	{
; 6655 : #ifdef NQM_AI_GIMP_NO_RELIGION_SPREAD
; 6656 : 		if ((GC.getGame().isOption("GAMEOPTION_AI_TWEAKS") || GC.getGame().isOption("GAMEOPTION_AI_GIMP_NO_RELIGION_SPREAD")) && GET_PLAYER(pCity->getOwner()).isHuman())

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242049[ebp], edx
	push	OFFSET ??_C@_0BF@FAPEFALO@GAMEOPTION_AI_TWEAKS?$AA@
	mov	ecx, DWORD PTR $T242049[ebp]
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN55@ScoreCityF
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242053[ebp], ecx
	push	OFFSET ??_C@_0CG@ONKMJJDI@GAMEOPTION_AI_GIMP_NO_RELIGION_S@
	mov	ecx, DWORD PTR $T242053[ebp]
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN66@ScoreCityF
$LN55@ScoreCityF:
	mov	eax, DWORD PTR _pCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T242062[ebp], ecx
	mov	edx, DWORD PTR $T242062[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242066[ebp], edx
	mov	ecx, DWORD PTR $T242066[ebp]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN66@ScoreCityF

; 6657 : 			return 0;

	mov	DWORD PTR $T241980[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN60@ScoreCityF
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN60@ScoreCityF:
	mov	eax, DWORD PTR $T241980[ebp]
	jmp	$LN16@ScoreCityF

; 6658 : #endif
; 6659 : 		if (m_pPlayer->GetDiplomacyAI()->IsPlayerAgreeNotToConvert(pCity->getOwner()))

$LN66@ScoreCityF:
	mov	ecx, DWORD PTR _pCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T242084[ebp], edx
	mov	eax, DWORD PTR $T242084[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerAgreeNotToConvert@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerAgreeNotToConvert
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@ScoreCityF

; 6660 : 		{
; 6661 : 			return 0;

	mov	DWORD PTR $T241981[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN69@ScoreCityF
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN69@ScoreCityF:
	mov	eax, DWORD PTR $T241981[ebp]
	jmp	$LN16@ScoreCityF
$LN9@ScoreCityF:

; 6662 : 		}
; 6663 : 	}
; 6664 : #ifdef NQ_AI_GIMP_NO_MINOR_SPREAD //EAP: From Bing with love - AI cannot spread religion to City-States
; 6665 : 	else

	jmp	SHORT $LN84@ScoreCityF
$LN12@ScoreCityF:

; 6666 : 	{
; 6667 : 		if (GC.getGame().isOption("GAMEOPTION_AI_TWEAKS") || GC.getGame().isOption("GAMEOPTION_AI_GIMP_NO_MINOR_RELIGION_SPREAD"))

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242097[ebp], eax
	push	OFFSET ??_C@_0BF@FAPEFALO@GAMEOPTION_AI_TWEAKS?$AA@
	mov	ecx, DWORD PTR $T242097[ebp]
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN6@ScoreCityF
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242101[ebp], edx
	push	OFFSET ??_C@_0CM@FBBIIAFC@GAMEOPTION_AI_GIMP_NO_MINOR_RELI@
	mov	ecx, DWORD PTR $T242101[ebp]
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN84@ScoreCityF
$LN6@ScoreCityF:

; 6668 : 		{
; 6669 : 			return 0;

	mov	DWORD PTR $T241982[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN78@ScoreCityF
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN78@ScoreCityF:
	mov	eax, DWORD PTR $T241982[ebp]
	jmp	$LN16@ScoreCityF

; 6670 : 		}
; 6671 : 	}
; 6672 : #endif
; 6673 : 
; 6674 : 	CvPlayer& kCityPlayer = GET_PLAYER(pCity->getOwner());

$LN84@ScoreCityF:
	mov	ecx, DWORD PTR _pCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T242119[ebp], edx
	mov	eax, DWORD PTR $T242119[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kCityPlayer$[ebp], eax

; 6675 : 	// Much better score if our own city or if this city owner isn't starting a religion
; 6676 : 	if(pCity->getOwner() == m_pPlayer->GetID())

	mov	ecx, DWORD PTR _pCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T242131[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T242140[ebp], edx
	mov	eax, DWORD PTR $T242131[ebp]
	cmp	eax, DWORD PTR $T242140[ebp]
	jne	SHORT $LN5@ScoreCityF

; 6677 : 	{
; 6678 : 		iScore *= 5;

	mov	ecx, DWORD PTR _iScore$[ebp]
	imul	ecx, 5
	mov	DWORD PTR _iScore$[ebp], ecx
	jmp	SHORT $LN98@ScoreCityF
$LN5@ScoreCityF:

; 6679 : 	}
; 6680 : 	else if(!kCityPlayer.GetReligions()->HasCreatedReligion())

	mov	ecx, DWORD PTR _kCityPlayer$[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?HasCreatedReligion@CvPlayerReligions@@QBE_NXZ ; CvPlayerReligions::HasCreatedReligion
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN98@ScoreCityF

; 6681 : 	{
; 6682 : 		iScore *= 3;

	mov	eax, DWORD PTR _iScore$[ebp]
	imul	eax, 3
	mov	DWORD PTR _iScore$[ebp], eax

; 6683 : 	}
; 6684 : 
; 6685 : 	// Then subtract distance
; 6686 : 	iScore -= plotDistance(pUnit->getX(), pUnit->getY(), pCity->getX(), pCity->getY());

$LN98@ScoreCityF:
	mov	ecx, DWORD PTR _pCity$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T242149[ebp], edx
	mov	eax, DWORD PTR _pCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T242158[ebp], ecx
	mov	edx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T242162[ebp], edx
	mov	eax, DWORD PTR $T242162[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR $T242171[ebp], ecx
	mov	edx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T242175[ebp], edx
	mov	eax, DWORD PTR $T242175[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR $T242184[ebp], ecx
	mov	edx, DWORD PTR $T242149[ebp]
	push	edx
	mov	eax, DWORD PTR $T242158[ebp]
	push	eax
	mov	ecx, DWORD PTR $T242171[ebp]
	push	ecx
	mov	edx, DWORD PTR $T242184[ebp]
	push	edx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _iScore$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _iScore$[ebp], ecx

; 6687 : 
; 6688 : 	// Multiplier by how safe it is
; 6689 : 	if(!atWar(m_pPlayer->getTeam(), kCityPlayer.getTeam()))

	mov	edx, DWORD PTR _kCityPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T242254[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T242263[ebp], edx
	mov	eax, DWORD PTR $T242263[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T242264[ebp], eax
	mov	edx, DWORD PTR $T242254[ebp]
	push	edx
	mov	eax, DWORD PTR $T242264[ebp]
	push	eax
	call	?atWar@@YA_NW4TeamTypes@@0@Z		; atWar
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@ScoreCityF

; 6690 : 	{
; 6691 : 		iScore *= 2;

	mov	edx, DWORD PTR _iScore$[ebp]
	shl	edx, 1
	mov	DWORD PTR _iScore$[ebp], edx
$LN2@ScoreCityF:

; 6692 : 	}
; 6693 : 
; 6694 : 	// Holy city will anger folks, let's not do that one right away
; 6695 : 	ReligionTypes eCityOwnersReligion = kCityPlayer.GetReligions()->GetReligionCreatedByPlayer();

	mov	ecx, DWORD PTR _kCityPlayer$[ebp]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eCityOwnersReligion$[ebp], eax

; 6696 : 	if (eCityOwnersReligion > RELIGION_PANTHEON && pCity->GetCityReligions()->IsHolyCityForReligion(eCityOwnersReligion))

	cmp	DWORD PTR _eCityOwnersReligion$[ebp], 0
	jle	SHORT $LN1@ScoreCityF
	mov	eax, DWORD PTR _eCityOwnersReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsHolyCityForReligion
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@ScoreCityF

; 6697 : 	{
; 6698 : 		iScore /= 2;

	mov	eax, DWORD PTR _iScore$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _iScore$[ebp], eax
$LN1@ScoreCityF:

; 6699 : 	}
; 6700 : 
; 6701 : 	return iScore;

	mov	edx, DWORD PTR _iScore$[ebp]
	mov	DWORD PTR $T241983[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN165@ScoreCityF
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN165@ScoreCityF:
	mov	eax, DWORD PTR $T241983[ebp]
$LN16@ScoreCityF:

; 6702 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _pUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvReligionAI::ScoreCityForMissionary
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z$0
__ehfuncinfo$?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
_this$ = -128						; size = 4
$T242337 = -52						; size = 4
$T242328 = -48						; size = 4
$T242324 = -44						; size = 4
$T242315 = -40						; size = 4
$T242311 = -36						; size = 4
$T242302 = -32						; size = 4
$T242283 = -28						; size = 4
$T242282 = -24						; size = 4
_eMyReligion$ = -20					; size = 4
_iScore$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pCity$ = 8						; size = 4
_pUnit$ = 12						; size = 8
?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvReligionAI::ScoreCityForInquisitor, COMDAT
; _this$ = ecx

; 6710 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 116				; 00000074H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 6711 : 	int iScore = 0;

	mov	DWORD PTR _iScore$[ebp], 0

; 6712 : 	ReligionTypes eMyReligion = GetReligionToSpread();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread
	mov	DWORD PTR _eMyReligion$[ebp], eax

; 6713 : 
; 6714 : 	// Skip if already our religion
; 6715 : 	if(pCity->GetCityReligions()->GetReligiousMajority() == eMyReligion)

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eMyReligion$[ebp]
	jne	SHORT $LN1@ScoreCityF@2

; 6716 : 	{
; 6717 : 		return iScore;

	mov	eax, DWORD PTR _iScore$[ebp]
	mov	DWORD PTR $T242282[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN6@ScoreCityF@2
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN6@ScoreCityF@2:
	mov	eax, DWORD PTR $T242282[ebp]
	jmp	SHORT $LN2@ScoreCityF@2
$LN1@ScoreCityF@2:

; 6718 : 	}
; 6719 : 
; 6720 : 	// Base score based on if we are establishing majority
; 6721 : 	iScore = 100;

	mov	DWORD PTR _iScore$[ebp], 100		; 00000064H

; 6722 : 
; 6723 : 	// Then subtract distance
; 6724 : 	iScore -= plotDistance(pUnit->getX(), pUnit->getY(), pCity->getX(), pCity->getY());

	mov	ecx, DWORD PTR _pCity$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T242302[ebp], edx
	mov	eax, DWORD PTR _pCity$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T242311[ebp], ecx
	mov	edx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T242315[ebp], edx
	mov	eax, DWORD PTR $T242315[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR $T242324[ebp], ecx
	mov	edx, DWORD PTR _pUnit$[ebp]
	mov	DWORD PTR $T242328[ebp], edx
	mov	eax, DWORD PTR $T242328[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR $T242337[ebp], ecx
	mov	edx, DWORD PTR $T242302[ebp]
	push	edx
	mov	eax, DWORD PTR $T242311[ebp]
	push	eax
	mov	ecx, DWORD PTR $T242324[ebp]
	push	ecx
	mov	edx, DWORD PTR $T242337[ebp]
	push	edx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _iScore$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _iScore$[ebp], ecx

; 6725 : 
; 6726 : 	return iScore;

	mov	edx, DWORD PTR _iScore$[ebp]
	mov	DWORD PTR $T242283[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _pUnit$[ebp], 0
	je	SHORT $LN77@ScoreCityF@2
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN77@ScoreCityF@2:
	mov	eax, DWORD PTR $T242283[ebp]
$LN2@ScoreCityF@2:

; 6727 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _pUnit$[ebp]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-120]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvReligionAI::ScoreCityForInquisitor
; Function compile flags: /Odtp
;	COMDAT ?ShouldBecomeNewMajority@CvReligionAI@@ABE_NPAVCvCity@@W4ReligionTypes@@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_pCityReligions$ = -12					; size = 4
_iTotalPressure$ = -8					; size = 4
_iReligionPressure$ = -4				; size = 4
_pCity$ = 8						; size = 4
_eReligion$ = 12					; size = 4
_iNewPressure$ = 16					; size = 4
?ShouldBecomeNewMajority@CvReligionAI@@ABE_NPAVCvCity@@W4ReligionTypes@@H@Z PROC ; CvReligionAI::ShouldBecomeNewMajority, COMDAT
; _this$ = ecx

; 6735 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 6736 : 	CvCityReligions* pCityReligions = pCity->GetCityReligions();

	mov	ecx, DWORD PTR _pCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	DWORD PTR _pCityReligions$[ebp], eax

; 6737 : 	int iTotalPressure = pCityReligions->GetTotalPressure() + iNewPressure;

	mov	ecx, DWORD PTR _pCityReligions$[ebp]
	call	?GetTotalPressure@CvCityReligions@@QAEHXZ ; CvCityReligions::GetTotalPressure
	add	eax, DWORD PTR _iNewPressure$[ebp]
	mov	DWORD PTR _iTotalPressure$[ebp], eax

; 6738 : 	int iReligionPressure = pCityReligions->GetPressure(eReligion) + iNewPressure;

	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCityReligions$[ebp]
	call	?GetPressure@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetPressure
	add	eax, DWORD PTR _iNewPressure$[ebp]
	mov	DWORD PTR _iReligionPressure$[ebp], eax

; 6739 : 
; 6740 : 	return (iReligionPressure * 2) > iTotalPressure;

	mov	ecx, DWORD PTR _iReligionPressure$[ebp]
	shl	ecx, 1
	xor	eax, eax
	cmp	ecx, DWORD PTR _iTotalPressure$[ebp]
	setg	al

; 6741 : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ShouldBecomeNewMajority@CvReligionAI@@ABE_NPAVCvCity@@W4ReligionTypes@@H@Z ENDP ; CvReligionAI::ShouldBecomeNewMajority
_TEXT	ENDS
EXTRN	?IsPuppet@CvCity@@QBE_NXZ:PROC			; CvCity::IsPuppet
; Function compile flags: /Odtp
;	COMDAT ?AreAllOurCitiesConverted@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_bRtnValue$ = -9					; size = 1
_pLoopCity$ = -8					; size = 4
_iLoop$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_bIncludePuppets$ = 12					; size = 1
?AreAllOurCitiesConverted@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z PROC ; CvReligionAI::AreAllOurCitiesConverted, COMDAT
; _this$ = ecx

; 6745 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 6746 : 	bool bRtnValue = true;

	mov	BYTE PTR _bRtnValue$[ebp], 1

; 6747 : 
; 6748 : 	int iLoop;
; 6749 : 	CvCity* pLoopCity;
; 6750 : 	for(pLoopCity = m_pPlayer->firstCity(&iLoop); pLoopCity != NULL; pLoopCity = m_pPlayer->nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN6@AreAllOurC
$LN5@AreAllOurC:
	push	0
	lea	edx, DWORD PTR _iLoop$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN6@AreAllOurC:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	SHORT $LN4@AreAllOurC

; 6751 : 	{
; 6752 : 		if(pLoopCity->GetCityReligions()->GetReligiousMajority() != eReligion)

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eReligion$[ebp]
	je	SHORT $LN3@AreAllOurC

; 6753 : 		{
; 6754 : 			if(bIncludePuppets || !pLoopCity->IsPuppet())

	movzx	ecx, BYTE PTR _bIncludePuppets$[ebp]
	test	ecx, ecx
	jne	SHORT $LN1@AreAllOurC
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?IsPuppet@CvCity@@QBE_NXZ		; CvCity::IsPuppet
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@AreAllOurC
$LN1@AreAllOurC:

; 6755 : 			{
; 6756 : 				bRtnValue = false;

	mov	BYTE PTR _bRtnValue$[ebp], 0

; 6757 : 				break;

	jmp	SHORT $LN4@AreAllOurC
$LN3@AreAllOurC:

; 6758 : 			}
; 6759 : 		}
; 6760 : 	}

	jmp	SHORT $LN5@AreAllOurC
$LN4@AreAllOurC:

; 6761 : 
; 6762 : 	return bRtnValue;

	mov	al, BYTE PTR _bRtnValue$[ebp]

; 6763 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?AreAllOurCitiesConverted@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ENDP ; CvReligionAI::AreAllOurCitiesConverted
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?AreAllOurCitiesHaveFaithBuilding@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
_eFaithBuilding$ = -20					; size = 4
_bRtnValue$ = -13					; size = 1
_eFaithBuildingClass$ = -12				; size = 4
_pLoopCity$ = -8					; size = 4
_iLoop$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_bIncludePuppets$ = 12					; size = 1
?AreAllOurCitiesHaveFaithBuilding@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z PROC ; CvReligionAI::AreAllOurCitiesHaveFaithBuilding, COMDAT
; _this$ = ecx

; 6767 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 6768 : 	bool bRtnValue = true;

	mov	BYTE PTR _bRtnValue$[ebp], 1

; 6769 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 6770 : 	std::vector<BuildingClassTypes> eFaithBuildingClass = FaithBuildingAvailable(eReligion);
; 6771 : 	if (eFaithBuildingClass.size() == 0)
; 6772 : 	{
; 6773 : 		return true;
; 6774 : 	}
; 6775 : 	for (std::vector<BuildingClassTypes>::iterator it = eFaithBuildingClass.begin(); it != eFaithBuildingClass.end() && bRtnValue; ++it)
; 6776 : 	{
; 6777 : 		BuildingTypes eFaithBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings((*it));
; 6778 : 
; 6779 : 		if (eFaithBuilding == NO_BUILDING)
; 6780 : 		{
; 6781 : 			continue;
; 6782 : 		}
; 6783 : #else
; 6784 : 	BuildingClassTypes eFaithBuildingClass = FaithBuildingAvailable(eReligion);

	mov	eax, DWORD PTR _eReligion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FaithBuildingAvailable@CvReligionAI@@ABE?AW4BuildingClassTypes@@W4ReligionTypes@@@Z ; CvReligionAI::FaithBuildingAvailable
	mov	DWORD PTR _eFaithBuildingClass$[ebp], eax

; 6785 : 	BuildingTypes eFaithBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings(eFaithBuildingClass);

	mov	ecx, DWORD PTR _eFaithBuildingClass$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings
	mov	DWORD PTR _eFaithBuilding$[ebp], eax

; 6786 : 
; 6787 : 	if(eFaithBuildingClass == NO_BUILDINGCLASS || eFaithBuilding == NO_BUILDING)

	cmp	DWORD PTR _eFaithBuildingClass$[ebp], -1
	je	SHORT $LN8@AreAllOurC@2
	cmp	DWORD PTR _eFaithBuilding$[ebp], -1
	jne	SHORT $LN9@AreAllOurC@2
$LN8@AreAllOurC@2:

; 6788 : 	{
; 6789 : 		return true;

	mov	al, 1
	jmp	SHORT $LN10@AreAllOurC@2
$LN9@AreAllOurC@2:

; 6790 : 	}
; 6791 : #endif
; 6792 : 
; 6793 : 	int iLoop;
; 6794 : 	CvCity* pLoopCity;
; 6795 : 	for(pLoopCity = m_pPlayer->firstCity(&iLoop); pLoopCity != NULL; pLoopCity = m_pPlayer->nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN7@AreAllOurC@2
$LN6@AreAllOurC@2:
	push	0
	lea	edx, DWORD PTR _iLoop$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN7@AreAllOurC@2:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	SHORT $LN5@AreAllOurC@2

; 6796 : 	{
; 6797 : 		if(pLoopCity->GetCityReligions()->GetReligiousMajority() == eReligion)

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN4@AreAllOurC@2

; 6798 : 		{
; 6799 : 			if(bIncludePuppets || !pLoopCity->IsPuppet())

	movzx	ecx, BYTE PTR _bIncludePuppets$[ebp]
	test	ecx, ecx
	jne	SHORT $LN2@AreAllOurC@2
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?IsPuppet@CvCity@@QBE_NXZ		; CvCity::IsPuppet
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@AreAllOurC@2
$LN2@AreAllOurC@2:

; 6800 : 			{
; 6801 : 				if(pLoopCity->GetCityBuildings()->GetNumBuilding(eFaithBuilding) < 1)

	mov	eax, DWORD PTR _eFaithBuilding$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	cmp	eax, 1
	jge	SHORT $LN4@AreAllOurC@2

; 6802 : 				{
; 6803 : 					bRtnValue = false;

	mov	BYTE PTR _bRtnValue$[ebp], 0

; 6804 : 					break;

	jmp	SHORT $LN5@AreAllOurC@2
$LN4@AreAllOurC@2:

; 6805 : 				}
; 6806 : 			}
; 6807 : 		}
; 6808 : 	}

	jmp	SHORT $LN6@AreAllOurC@2
$LN5@AreAllOurC@2:

; 6809 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 6810 : 	}
; 6811 : #endif
; 6812 : 
; 6813 : 	return bRtnValue;

	mov	al, BYTE PTR _bRtnValue$[ebp]
$LN10@AreAllOurC@2:

; 6814 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?AreAllOurCitiesHaveFaithBuilding@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ENDP ; CvReligionAI::AreAllOurCitiesHaveFaithBuilding
_TEXT	ENDS
EXTRN	?isRevealed@CvCity@@QBE_NW4TeamTypes@@_N@Z:PROC	; CvCity::isRevealed
EXTRN	?GetMoves@CvUnitEntry@@QBEHXZ:PROC		; CvUnitEntry::GetMoves
; Function compile flags: /Odtp
;	COMDAT ?HaveNearbyConversionTarget@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z
_TEXT	SEGMENT
_this$ = -168						; size = 4
$T242592 = -164						; size = 4
$T242511 = -84						; size = 4
$T242502 = -80						; size = 4
$T242493 = -76						; size = 4
$T242484 = -72						; size = 4
$T242475 = -68						; size = 4
$T242471 = -64						; size = 4
$T242467 = -60						; size = 4
$T242463 = -56						; size = 4
$T242459 = -49						; size = 1
$T242447 = -48						; size = 4
$T242438 = -44						; size = 4
_pCity$227870 = -40					; size = 4
_ePlayer$227853 = -36					; size = 4
_kPlayer$227856 = -32					; size = 4
_iPlayer$227849 = -28					; size = 4
_pCapital$ = -24					; size = 4
_eMissionary$ = -20					; size = 4
_iMissionaryMoves$ = -16				; size = 4
_bStartedOwnReligion$ = -9				; size = 1
_eTeam$ = -8						; size = 4
_iLoop$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_bCanIncludeReligionStarter$ = 12			; size = 1
?HaveNearbyConversionTarget@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z PROC ; CvReligionAI::HaveNearbyConversionTarget, COMDAT
; _this$ = ecx

; 6818 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 168				; 000000a8H
	mov	DWORD PTR _this$[ebp], ecx

; 6819 : 	int iLoop;
; 6820 : 	bool bStartedOwnReligion;
; 6821 : 	TeamTypes eTeam = m_pPlayer->getTeam();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T242438[ebp], ecx
	mov	edx, DWORD PTR $T242438[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR _eTeam$[ebp], eax

; 6822 : 	UnitTypes eMissionary = (UnitTypes)GC.getInfoTypeForString("UNIT_MISSIONARY");

	push	0
	push	OFFSET ??_C@_0BA@OOENOOEP@UNIT_MISSIONARY?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eMissionary$[ebp], eax

; 6823 : #ifdef AUI_WARNING_FIXES
; 6824 : 	CvUnitEntry* pMissionaryInfo = GC.getUnitInfo(eMissionary);
; 6825 : 	if (!pMissionaryInfo)
; 6826 : 	{
; 6827 : 		return false;
; 6828 : 	}
; 6829 : 	int iMissionaryMoves = pMissionaryInfo->GetMoves();
; 6830 : #else
; 6831 : 	int iMissionaryMoves = GC.getUnitInfo(eMissionary)->GetMoves();

	mov	ecx, DWORD PTR _eMissionary$[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	ecx, eax
	call	?GetMoves@CvUnitEntry@@QBEHXZ		; CvUnitEntry::GetMoves
	mov	DWORD PTR _iMissionaryMoves$[ebp], eax

; 6832 : #endif
; 6833 : 
; 6834 : 	CvCity* pCapital = m_pPlayer->getCapitalCity();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pCapital$[ebp], eax

; 6835 : 	if(pCapital == NULL)

	cmp	DWORD PTR _pCapital$[ebp], 0
	jne	SHORT $LN23@HaveNearby

; 6836 : 	{
; 6837 : 		return false;

	xor	al, al
	jmp	$LN24@HaveNearby
$LN23@HaveNearby:

; 6838 : 	}
; 6839 : 
; 6840 : 	for(int iPlayer = 0; iPlayer < MAX_PLAYERS; iPlayer++)

	mov	DWORD PTR _iPlayer$227849[ebp], 0
	jmp	SHORT $LN22@HaveNearby
$LN21@HaveNearby:
	mov	eax, DWORD PTR _iPlayer$227849[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayer$227849[ebp], eax
$LN22@HaveNearby:
	cmp	DWORD PTR _iPlayer$227849[ebp], 64	; 00000040H
	jge	$LN20@HaveNearby

; 6841 : 	{
; 6842 : 		PlayerTypes ePlayer = (PlayerTypes)iPlayer;

	mov	ecx, DWORD PTR _iPlayer$227849[ebp]
	mov	DWORD PTR _ePlayer$227853[ebp], ecx

; 6843 : 
; 6844 : 		// Must be someone else
; 6845 : 		if(ePlayer == m_pPlayer->GetID())

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T242447[ebp], ecx
	mov	edx, DWORD PTR _ePlayer$227853[ebp]
	cmp	edx, DWORD PTR $T242447[ebp]
	jne	SHORT $LN34@HaveNearby

; 6846 : 		{
; 6847 : 			continue;

	jmp	SHORT $LN21@HaveNearby

; 6848 : 
; 6849 : 		}
; 6850 : 		CvPlayer& kPlayer = GET_PLAYER(ePlayer);

$LN34@HaveNearby:
	mov	eax, DWORD PTR _ePlayer$227853[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$227856[ebp], eax

; 6851 : 		if(kPlayer.isAlive())

	mov	ecx, DWORD PTR _kPlayer$227856[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T242459[ebp], dl
	movzx	eax, BYTE PTR $T242459[ebp]
	test	eax, eax
	je	$LN18@HaveNearby

; 6852 : 		{
; 6853 : 			if(kPlayer.isMinorCiv())

	mov	ecx, DWORD PTR _kPlayer$227856[ebp]
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN17@HaveNearby

; 6854 : 			{
; 6855 : #ifdef NQ_AI_GIMP_NO_MINOR_SPREAD //EAP:  NQMP_Bing - AI cannot spread religion to City-States
; 6856 : 				if (GC.getGame().isOption("GAMEOPTION_AI_TWEAKS") || GC.getGame().isOption("GAMEOPTION_AI_GIMP_NO_MINOR_RELIGION_SPREAD"))

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242463[ebp], edx
	push	OFFSET ??_C@_0BF@FAPEFALO@GAMEOPTION_AI_TWEAKS?$AA@
	mov	ecx, DWORD PTR $T242463[ebp]
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN15@HaveNearby
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242467[ebp], ecx
	push	OFFSET ??_C@_0CM@FBBIIAFC@GAMEOPTION_AI_GIMP_NO_MINOR_RELI@
	mov	ecx, DWORD PTR $T242467[ebp]
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN16@HaveNearby
$LN15@HaveNearby:

; 6857 : 					continue;

	jmp	$LN21@HaveNearby
$LN16@HaveNearby:

; 6858 : #endif
; 6859 : 				bStartedOwnReligion = false;

	mov	BYTE PTR _bStartedOwnReligion$[ebp], 0

; 6860 : 			}
; 6861 : 			else

	jmp	$LN14@HaveNearby
$LN17@HaveNearby:

; 6862 : 			{
; 6863 : 				if (!kPlayer.isBarbarian())

	mov	ecx, DWORD PTR _kPlayer$227856[ebp]
	call	?isBarbarian@CvPlayer@@QBE_NXZ		; CvPlayer::isBarbarian
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN13@HaveNearby

; 6864 : 				{
; 6865 : #ifdef NQM_AI_GIMP_NO_RELIGION_SPREAD
; 6866 : 					if ((GC.getGame().isOption("GAMEOPTION_AI_TWEAKS") || GC.getGame().isOption("GAMEOPTION_AI_GIMP_NO_RELIGION_SPREAD")) && kPlayer.isHuman())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242471[ebp], ecx
	push	OFFSET ??_C@_0BF@FAPEFALO@GAMEOPTION_AI_TWEAKS?$AA@
	mov	ecx, DWORD PTR $T242471[ebp]
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN11@HaveNearby
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242475[ebp], eax
	push	OFFSET ??_C@_0CG@ONKMJJDI@GAMEOPTION_AI_GIMP_NO_RELIGION_S@
	mov	ecx, DWORD PTR $T242475[ebp]
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@HaveNearby
$LN11@HaveNearby:
	mov	ecx, DWORD PTR _kPlayer$227856[ebp]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN12@HaveNearby

; 6867 : 						continue;

	jmp	$LN21@HaveNearby
$LN12@HaveNearby:

; 6868 : #endif
; 6869 : 					if (m_pPlayer->GetDiplomacyAI()->IsPlayerAgreeNotToConvert(ePlayer))

	mov	eax, DWORD PTR _ePlayer$227853[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerAgreeNotToConvert@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerAgreeNotToConvert
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN13@HaveNearby

; 6870 : 					{
; 6871 : 						continue;

	jmp	$LN21@HaveNearby
$LN13@HaveNearby:

; 6872 : 					}
; 6873 : 				}
; 6874 : 
; 6875 : 				if(kPlayer.GetReligionAI()->GetReligionToSpread() > RELIGION_PANTHEON)

	mov	ecx, DWORD PTR _kPlayer$227856[ebp]
	call	?GetReligionAI@CvPlayer@@QBEPAVCvReligionAI@@XZ ; CvPlayer::GetReligionAI
	mov	ecx, eax
	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread
	test	eax, eax
	jle	SHORT $LN9@HaveNearby

; 6876 : 				{
; 6877 : 					bStartedOwnReligion = true;

	mov	BYTE PTR _bStartedOwnReligion$[ebp], 1

; 6878 : 				}
; 6879 : 				else

	jmp	SHORT $LN14@HaveNearby
$LN9@HaveNearby:

; 6880 : 				{
; 6881 : 					bStartedOwnReligion = false;

	mov	BYTE PTR _bStartedOwnReligion$[ebp], 0
$LN14@HaveNearby:

; 6882 : 				}
; 6883 : 			}
; 6884 : 
; 6885 : 			if(!bStartedOwnReligion || bCanIncludeReligionStarter)

	movzx	eax, BYTE PTR _bStartedOwnReligion$[ebp]
	test	eax, eax
	je	SHORT $LN6@HaveNearby
	movzx	ecx, BYTE PTR _bCanIncludeReligionStarter$[ebp]
	test	ecx, ecx
	je	$LN18@HaveNearby
$LN6@HaveNearby:

; 6886 : 			{
; 6887 : 				for(CvCity* pCity = kPlayer.firstCity(&iLoop); pCity != NULL; pCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$[ebp]
	push	edx
	mov	ecx, DWORD PTR _kPlayer$227856[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pCity$227870[ebp], eax
	jmp	SHORT $LN5@HaveNearby
$LN4@HaveNearby:
	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$227856[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pCity$227870[ebp], eax
$LN5@HaveNearby:
	cmp	DWORD PTR _pCity$227870[ebp], 0
	je	$LN18@HaveNearby

; 6888 : 				{
; 6889 : 					// Revealed and not currently our religion
; 6890 : 					if(pCity->isRevealed(eTeam, false) && pCity->GetCityReligions()->GetReligiousMajority() != eReligion)

	push	0
	mov	ecx, DWORD PTR _eTeam$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pCity$227870[ebp]
	call	?isRevealed@CvCity@@QBE_NW4TeamTypes@@_N@Z ; CvCity::isRevealed
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@HaveNearby
	mov	ecx, DWORD PTR _pCity$227870[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eReligion$[ebp]
	je	SHORT $LN2@HaveNearby

; 6891 : 					{
; 6892 : 						// Within 10 times Missionary movement allowance of our
; 6893 : 						if(plotDistance(pCapital->getX(), pCapital->getY(), pCity->getX(), pCity->getY()) <= (iMissionaryMoves * GC.getRELIGION_MISSIONARY_RANGE_IN_TURNS()))

	mov	eax, DWORD PTR _pCity$227870[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T242484[ebp], ecx
	mov	edx, DWORD PTR _pCity$227870[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR $T242493[ebp], eax
	mov	ecx, DWORD PTR _pCapital$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T242502[ebp], edx
	mov	eax, DWORD PTR _pCapital$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR $T242511[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3432
	mov	DWORD PTR $T242592[ebp], edx
	mov	eax, DWORD PTR $T242484[ebp]
	push	eax
	mov	ecx, DWORD PTR $T242493[ebp]
	push	ecx
	mov	edx, DWORD PTR $T242502[ebp]
	push	edx
	mov	eax, DWORD PTR $T242511[ebp]
	push	eax
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _iMissionaryMoves$[ebp]
	imul	ecx, DWORD PTR $T242592[ebp]
	cmp	eax, ecx
	jg	SHORT $LN2@HaveNearby

; 6894 : 						{
; 6895 : 							return true;

	mov	al, 1
	jmp	SHORT $LN24@HaveNearby
$LN2@HaveNearby:

; 6896 : 						}
; 6897 : 					}
; 6898 : 				}

	jmp	$LN4@HaveNearby
$LN18@HaveNearby:

; 6899 : 			}
; 6900 : 		}
; 6901 : 	}

	jmp	$LN21@HaveNearby
$LN20@HaveNearby:

; 6902 : 	return false;

	xor	al, al
$LN24@HaveNearby:

; 6903 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?HaveNearbyConversionTarget@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ENDP ; CvReligionAI::HaveNearbyConversionTarget
_TEXT	ENDS
EXTRN	?IsRemoveHeresy@CvUnitEntry@@QBE_NXZ:PROC	; CvUnitEntry::IsRemoveHeresy
; Function compile flags: /Odtp
;	COMDAT ?HaveEnoughInquisitors@CvReligionAI@@ABE_NW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T242602 = -32						; size = 4
$T242598 = -28						; size = 4
_pUnit$227889 = -24					; size = 4
_eCityReligion$227886 = -20				; size = 4
_pCity$227882 = -16					; size = 4
_iNumNeeded$ = -12					; size = 4
_iNumInquisitors$ = -8					; size = 4
_iLoop$ = -4						; size = 4
_eReligion$ = 8						; size = 4
?HaveEnoughInquisitors@CvReligionAI@@ABE_NW4ReligionTypes@@@Z PROC ; CvReligionAI::HaveEnoughInquisitors, COMDAT
; _this$ = ecx

; 6907 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 6908 : 	int iLoop;
; 6909 : 
; 6910 : 	// Need one for every city in our realm that is of another religion, plus one for defense
; 6911 : 	int iNumNeeded = 1;

	mov	DWORD PTR _iNumNeeded$[ebp], 1

; 6912 : 	for(CvCity* pCity = m_pPlayer->firstCity(&iLoop); pCity != NULL; pCity = m_pPlayer->nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pCity$227882[ebp], eax
	jmp	SHORT $LN9@HaveEnough
$LN8@HaveEnough:
	push	0
	lea	edx, DWORD PTR _iLoop$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pCity$227882[ebp], eax
$LN9@HaveEnough:
	cmp	DWORD PTR _pCity$227882[ebp], 0
	je	SHORT $LN7@HaveEnough

; 6913 : 	{
; 6914 : 		ReligionTypes eCityReligion = pCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, DWORD PTR _pCity$227882[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	DWORD PTR _eCityReligion$227886[ebp], eax

; 6915 : 		if(eCityReligion > RELIGION_PANTHEON && eCityReligion != eReligion)

	cmp	DWORD PTR _eCityReligion$227886[ebp], 0
	jle	SHORT $LN6@HaveEnough
	mov	ecx, DWORD PTR _eCityReligion$227886[ebp]
	cmp	ecx, DWORD PTR _eReligion$[ebp]
	je	SHORT $LN6@HaveEnough

; 6916 : 		{
; 6917 : 			iNumNeeded++;

	mov	edx, DWORD PTR _iNumNeeded$[ebp]
	add	edx, 1
	mov	DWORD PTR _iNumNeeded$[ebp], edx
$LN6@HaveEnough:

; 6918 : 		}
; 6919 : 	}

	jmp	SHORT $LN8@HaveEnough
$LN7@HaveEnough:

; 6920 : 
; 6921 : 	// Count Inquisitors of our religion
; 6922 : 	int iNumInquisitors = 0;

	mov	DWORD PTR _iNumInquisitors$[ebp], 0

; 6923 : 	for(CvUnit* pUnit = m_pPlayer->firstUnit(&iLoop); pUnit != NULL; pUnit = m_pPlayer->nextUnit(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	mov	DWORD PTR _pUnit$227889[ebp], eax
	jmp	SHORT $LN5@HaveEnough
$LN4@HaveEnough:
	push	0
	lea	edx, DWORD PTR _iLoop$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	mov	DWORD PTR _pUnit$227889[ebp], eax
$LN5@HaveEnough:
	cmp	DWORD PTR _pUnit$227889[ebp], 0
	je	SHORT $LN3@HaveEnough

; 6924 : 	{
; 6925 : 		if(pUnit->getUnitInfo().IsRemoveHeresy())

	mov	ecx, DWORD PTR _pUnit$227889[ebp]
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?IsRemoveHeresy@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsRemoveHeresy
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@HaveEnough

; 6926 : 		{
; 6927 : 			if(pUnit->GetReligionData()->GetReligion() == eReligion)

	mov	edx, DWORD PTR _pUnit$227889[ebp]
	mov	eax, DWORD PTR [edx+1888]
	mov	DWORD PTR $T242598[ebp], eax
	mov	ecx, DWORD PTR $T242598[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T242602[ebp], edx
	mov	eax, DWORD PTR $T242602[ebp]
	cmp	eax, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN2@HaveEnough

; 6928 : 			{
; 6929 : 				iNumInquisitors++;

	mov	ecx, DWORD PTR _iNumInquisitors$[ebp]
	add	ecx, 1
	mov	DWORD PTR _iNumInquisitors$[ebp], ecx
$LN2@HaveEnough:

; 6930 : 			}
; 6931 : 		}
; 6932 : 	}

	jmp	SHORT $LN4@HaveEnough
$LN3@HaveEnough:

; 6933 : 
; 6934 : 	return iNumInquisitors >= iNumNeeded;

	mov	edx, DWORD PTR _iNumInquisitors$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR _iNumNeeded$[ebp]
	setge	al

; 6935 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?HaveEnoughInquisitors@CvReligionAI@@ABE_NW4ReligionTypes@@@Z ENDP ; CvReligionAI::HaveEnoughInquisitors
_TEXT	ENDS
EXTRN	?IsBuildingClassEnabled@CvReligionBeliefs@@QBE_NW4BuildingClassTypes@@@Z:PROC ; CvReligionBeliefs::IsBuildingClassEnabled
; Function compile flags: /Odtp
;	COMDAT ?FaithBuildingAvailable@CvReligionAI@@ABE?AW4BuildingClassTypes@@W4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T242617 = -28						; size = 4
$T242608 = -24						; size = 4
_pBuildingEntry$227912 = -20				; size = 4
_eBuilding$227908 = -16					; size = 4
_iI$227902 = -12					; size = 4
_pReligions$ = -8					; size = 4
_pMyReligion$ = -4					; size = 4
_eReligion$ = 8						; size = 4
?FaithBuildingAvailable@CvReligionAI@@ABE?AW4BuildingClassTypes@@W4ReligionTypes@@@Z PROC ; CvReligionAI::FaithBuildingAvailable, COMDAT
; _this$ = ecx

; 6943 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 6944 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 6945 : 	std::vector<BuildingClassTypes> aeFaithBuildings;
; 6946 : #endif
; 6947 : 	CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242608[ebp], eax
	mov	ecx, DWORD PTR $T242608[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pReligions$[ebp], eax

; 6948 : 	const CvReligion* pMyReligion = pReligions->GetReligion(eReligion, m_pPlayer->GetID());

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T242617[ebp], eax
	mov	ecx, DWORD PTR $T242617[ebp]
	push	ecx
	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pReligions$[ebp]
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pMyReligion$[ebp], eax

; 6949 : 
; 6950 : 	if (pMyReligion)

	cmp	DWORD PTR _pMyReligion$[ebp], 0
	je	$LN7@FaithBuild

; 6951 : 	{
; 6952 : #ifdef AUI_WARNING_FIXES
; 6953 : 		for (uint iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)
; 6954 : #else
; 6955 : 		for (int iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)

	mov	DWORD PTR _iI$227902[ebp], 0
	jmp	SHORT $LN6@FaithBuild
$LN5@FaithBuild:
	mov	eax, DWORD PTR _iI$227902[ebp]
	add	eax, 1
	mov	DWORD PTR _iI$227902[ebp], eax
$LN6@FaithBuild:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	DWORD PTR _iI$227902[ebp], eax
	jge	SHORT $LN7@FaithBuild

; 6956 : #endif
; 6957 : 		{
; 6958 : 			if (pMyReligion->m_Beliefs.IsBuildingClassEnabled((BuildingClassTypes)iI))

	mov	ecx, DWORD PTR _iI$227902[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pMyReligion$[ebp]
	add	ecx, 152				; 00000098H
	call	?IsBuildingClassEnabled@CvReligionBeliefs@@QBE_NW4BuildingClassTypes@@@Z ; CvReligionBeliefs::IsBuildingClassEnabled
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@FaithBuild

; 6959 : 			{
; 6960 : 				BuildingTypes eBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings((BuildingClassTypes)iI);

	mov	eax, DWORD PTR _iI$227902[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings
	mov	DWORD PTR _eBuilding$227908[ebp], eax

; 6961 : 				if(eBuilding != NO_BUILDING)

	cmp	DWORD PTR _eBuilding$227908[ebp], -1
	je	SHORT $LN3@FaithBuild

; 6962 : 				{
; 6963 : 					CvBuildingEntry* pBuildingEntry = GC.getBuildingInfo(eBuilding);

	mov	edx, DWORD PTR _eBuilding$227908[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo
	mov	DWORD PTR _pBuildingEntry$227912[ebp], eax

; 6964 : 					if (pBuildingEntry && pBuildingEntry->GetYieldChange(YIELD_FAITH) > 0)

	cmp	DWORD PTR _pBuildingEntry$227912[ebp], 0
	je	SHORT $LN3@FaithBuild
	push	5
	mov	ecx, DWORD PTR _pBuildingEntry$227912[ebp]
	call	?GetYieldChange@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetYieldChange
	test	eax, eax
	jle	SHORT $LN3@FaithBuild

; 6965 : 					{
; 6966 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 6967 : 						aeFaithBuildings.push_back((BuildingClassTypes)iI);
; 6968 : #else
; 6969 : 						return (BuildingClassTypes)iI;

	mov	eax, DWORD PTR _iI$227902[ebp]
	jmp	SHORT $LN8@FaithBuild
$LN3@FaithBuild:

; 6970 : #endif
; 6971 : 					}
; 6972 : 				}
; 6973 : 			}
; 6974 : 		}

	jmp	SHORT $LN5@FaithBuild
$LN7@FaithBuild:

; 6975 : 	}
; 6976 : 
; 6977 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 6978 : 	return aeFaithBuildings;
; 6979 : #else
; 6980 : 	return NO_BUILDINGCLASS;

	or	eax, -1
$LN8@FaithBuild:

; 6981 : #endif
; 6982 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?FaithBuildingAvailable@CvReligionAI@@ABE?AW4BuildingClassTypes@@W4ReligionTypes@@@Z ENDP ; CvReligionAI::FaithBuildingAvailable
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?CanBuyNonFaithBuilding@CvReligionAI@@ABE_NXZ
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T242635 = -32						; size = 4
$T242631 = -28						; size = 4
_pBuildingEntry$227931 = -24				; size = 4
_eBuilding$227928 = -20					; size = 4
_iI$227924 = -16					; size = 4
_ePlayer$ = -12						; size = 4
_pLoopCity$ = -8					; size = 4
_iLoop$ = -4						; size = 4
?CanBuyNonFaithBuilding@CvReligionAI@@ABE_NXZ PROC	; CvReligionAI::CanBuyNonFaithBuilding, COMDAT
; _this$ = ecx

; 6986 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 6987 : 	PlayerTypes ePlayer = m_pPlayer->GetID();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR _ePlayer$[ebp], edx

; 6988 : 
; 6989 : 	int iLoop;
; 6990 : 	CvCity* pLoopCity;
; 6991 : 	for(pLoopCity = GET_PLAYER(ePlayer).firstCity(&iLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(ePlayer).nextCity(&iLoop))

	mov	eax, DWORD PTR _ePlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242631[ebp], eax
	push	0
	lea	ecx, DWORD PTR _iLoop$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T242631[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN9@CanBuyNonF
$LN8@CanBuyNonF:
	mov	edx, DWORD PTR _ePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T242635[ebp], edx
	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T242635[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN9@CanBuyNonF:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	$LN7@CanBuyNonF

; 6992 : 	{
; 6993 : #ifdef AUI_WARNING_FIXES
; 6994 : 		for (uint iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)
; 6995 : #else
; 6996 : 		for (int iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)

	mov	DWORD PTR _iI$227924[ebp], 0
	jmp	SHORT $LN6@CanBuyNonF
$LN5@CanBuyNonF:
	mov	ecx, DWORD PTR _iI$227924[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$227924[ebp], ecx
$LN6@CanBuyNonF:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	DWORD PTR _iI$227924[ebp], eax
	jge	SHORT $LN4@CanBuyNonF

; 6997 : #endif
; 6998 : 		{
; 6999 : 			BuildingTypes eBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings(iI);

	mov	edx, DWORD PTR _iI$227924[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings
	mov	DWORD PTR _eBuilding$227928[ebp], eax

; 7000 : 			if(eBuilding != NO_BUILDING)

	cmp	DWORD PTR _eBuilding$227928[ebp], -1
	je	SHORT $LN3@CanBuyNonF

; 7001 : 			{
; 7002 : 				CvBuildingEntry* pBuildingEntry = GC.GetGameBuildings()->GetEntry(eBuilding);

	mov	ecx, DWORD PTR _eBuilding$227928[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBuildings@CvGlobals@@QBEPAVCvBuildingXMLEntries@@XZ ; CvGlobals::GetGameBuildings
	mov	ecx, eax
	call	?GetEntry@CvBuildingXMLEntries@@QAEPAVCvBuildingEntry@@H@Z ; CvBuildingXMLEntries::GetEntry
	mov	DWORD PTR _pBuildingEntry$227931[ebp], eax

; 7003 : 
; 7004 : 				// Check to make sure this isn't a Faith-generating building
; 7005 : 				if(pBuildingEntry && pBuildingEntry->GetYieldChange(YIELD_FAITH) == 0)

	cmp	DWORD PTR _pBuildingEntry$227931[ebp], 0
	je	SHORT $LN3@CanBuyNonF
	push	5
	mov	ecx, DWORD PTR _pBuildingEntry$227931[ebp]
	call	?GetYieldChange@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetYieldChange
	test	eax, eax
	jne	SHORT $LN3@CanBuyNonF

; 7006 : 				{
; 7007 : 					if(pLoopCity->IsCanPurchase(true, true, (UnitTypes)-1, eBuilding, (ProjectTypes)-1, YIELD_FAITH))

	push	5
	push	-1
	mov	edx, DWORD PTR _eBuilding$227928[ebp]
	push	edx
	push	-1
	push	1
	push	1
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@CanBuyNonF

; 7008 : 					{
; 7009 : 						return true;

	mov	al, 1
	jmp	SHORT $LN10@CanBuyNonF
$LN3@CanBuyNonF:

; 7010 : 					}
; 7011 : 				}
; 7012 : 			}
; 7013 : 		}

	jmp	$LN5@CanBuyNonF
$LN4@CanBuyNonF:

; 7014 : 	}

	jmp	$LN8@CanBuyNonF
$LN7@CanBuyNonF:

; 7015 : 	return false;

	xor	al, al
$LN10@CanBuyNonF:

; 7016 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?CanBuyNonFaithBuilding@CvReligionAI@@ABE_NXZ ENDP	; CvReligionAI::CanBuyNonFaithBuilding
_TEXT	ENDS
PUBLIC	??_C@_0BF@BFICONBO@UNITCLASS_INQUISITOR?$AA@	; `string'
PUBLIC	??_C@_0BF@PJOHPEFB@UNITCLASS_MISSIONARY?$AA@	; `string'
PUBLIC	??_C@_0BI@JMPOJDNB@UNITCLASS_GREAT_ADMIRAL?$AA@	; `string'
PUBLIC	??_C@_0BJ@GCKPAHPE@AIGRANDSTRATEGY_CONQUEST?$AA@ ; `string'
PUBLIC	??_C@_0BI@LPICAOEN@UNITCLASS_GREAT_GENERAL?$AA@	; `string'
PUBLIC	??_C@_0CM@MOIMHCNJ@ECONOMICAISTRATEGY_GS_SPACESHIP_@ ; `string'
PUBLIC	??_C@_0BD@EAEEACNP@UNITCLASS_ENGINEER?$AA@	; `string'
PUBLIC	??_C@_0BP@DOCBNDKB@AIGRANDSTRATEGY_UNITED_NATIONS?$AA@ ; `string'
PUBLIC	??_C@_0BD@GIKGAGAO@UNITCLASS_MERCHANT?$AA@	; `string'
PUBLIC	??_C@_0BK@CCPNHFB@AIGRANDSTRATEGY_SPACESHIP?$AA@ ; `string'
PUBLIC	??_C@_0BE@NHLKBGBE@UNITCLASS_SCIENTIST?$AA@	; `string'
PUBLIC	??_C@_0BD@BKOELLOP@UNITCLASS_MUSICIAN?$AA@	; `string'
PUBLIC	??_C@_0BB@ILPBPHBP@UNITCLASS_ARTIST?$AA@	; `string'
PUBLIC	??_C@_0BI@FNGLFDGI@AIGRANDSTRATEGY_CULTURE?$AA@	; `string'
PUBLIC	??_C@_0BB@PLANPKNO@UNITCLASS_WRITER?$AA@	; `string'
PUBLIC	??_C@_0BD@NNACGNOP@SPECIALUNIT_PEOPLE?$AA@	; `string'
EXTRN	?getAdmiralsFromFaith@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getAdmiralsFromFaith
EXTRN	?getGeneralsFromFaith@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGeneralsFromFaith
EXTRN	?GetAIMapHint@CvMap@@QAEHXZ:PROC		; CvMap::GetAIMapHint
EXTRN	?getEngineersFromFaith@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getEngineersFromFaith
EXTRN	?IsUsingStrategy@CvEconomicAI@@QAE_NW4EconomicAIStrategyTypes@@@Z:PROC ; CvEconomicAI::IsUsingStrategy
EXTRN	?GetEconomicAI@CvPlayer@@QBEPAVCvEconomicAI@@XZ:PROC ; CvPlayer::GetEconomicAI
EXTRN	?getMerchantsFromFaith@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getMerchantsFromFaith
EXTRN	?getScientistsFromFaith@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getScientistsFromFaith
EXTRN	?getMusiciansFromFaith@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getMusiciansFromFaith
EXTRN	?getArtistsFromFaith@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getArtistsFromFaith
EXTRN	?getWritersFromFaith@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getWritersFromFaith
EXTRN	?GetActiveGrandStrategy@CvGrandStrategyAI@@QBE?AW4AIGrandStrategyTypes@@XZ:PROC ; CvGrandStrategyAI::GetActiveGrandStrategy
EXTRN	?GetGrandStrategyAI@CvPlayer@@QBEPAVCvGrandStrategyAI@@XZ:PROC ; CvPlayer::GetGrandStrategyAI
EXTRN	?canTrain@CvPlayer@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z:PROC ; CvPlayer::canTrain
EXTRN	?GetSpecialUnitType@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetSpecialUnitType
EXTRN	?GetProductionCost@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetProductionCost
EXTRN	?GetUnitClassType@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetUnitClassType
;	COMDAT ??_C@_0BF@BFICONBO@UNITCLASS_INQUISITOR?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_0BF@BFICONBO@UNITCLASS_INQUISITOR?$AA@ DB 'UNITCLASS_INQUISITOR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PJOHPEFB@UNITCLASS_MISSIONARY?$AA@
CONST	SEGMENT
??_C@_0BF@PJOHPEFB@UNITCLASS_MISSIONARY?$AA@ DB 'UNITCLASS_MISSIONARY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JMPOJDNB@UNITCLASS_GREAT_ADMIRAL?$AA@
CONST	SEGMENT
??_C@_0BI@JMPOJDNB@UNITCLASS_GREAT_ADMIRAL?$AA@ DB 'UNITCLASS_GREAT_ADMIR'
	DB	'AL', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GCKPAHPE@AIGRANDSTRATEGY_CONQUEST?$AA@
CONST	SEGMENT
??_C@_0BJ@GCKPAHPE@AIGRANDSTRATEGY_CONQUEST?$AA@ DB 'AIGRANDSTRATEGY_CONQ'
	DB	'UEST', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LPICAOEN@UNITCLASS_GREAT_GENERAL?$AA@
CONST	SEGMENT
??_C@_0BI@LPICAOEN@UNITCLASS_GREAT_GENERAL?$AA@ DB 'UNITCLASS_GREAT_GENER'
	DB	'AL', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@MOIMHCNJ@ECONOMICAISTRATEGY_GS_SPACESHIP_@
CONST	SEGMENT
??_C@_0CM@MOIMHCNJ@ECONOMICAISTRATEGY_GS_SPACESHIP_@ DB 'ECONOMICAISTRATE'
	DB	'GY_GS_SPACESHIP_HOMESTRETCH', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EAEEACNP@UNITCLASS_ENGINEER?$AA@
CONST	SEGMENT
??_C@_0BD@EAEEACNP@UNITCLASS_ENGINEER?$AA@ DB 'UNITCLASS_ENGINEER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@DOCBNDKB@AIGRANDSTRATEGY_UNITED_NATIONS?$AA@
CONST	SEGMENT
??_C@_0BP@DOCBNDKB@AIGRANDSTRATEGY_UNITED_NATIONS?$AA@ DB 'AIGRANDSTRATEG'
	DB	'Y_UNITED_NATIONS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GIKGAGAO@UNITCLASS_MERCHANT?$AA@
CONST	SEGMENT
??_C@_0BD@GIKGAGAO@UNITCLASS_MERCHANT?$AA@ DB 'UNITCLASS_MERCHANT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CCPNHFB@AIGRANDSTRATEGY_SPACESHIP?$AA@
CONST	SEGMENT
??_C@_0BK@CCPNHFB@AIGRANDSTRATEGY_SPACESHIP?$AA@ DB 'AIGRANDSTRATEGY_SPAC'
	DB	'ESHIP', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NHLKBGBE@UNITCLASS_SCIENTIST?$AA@
CONST	SEGMENT
??_C@_0BE@NHLKBGBE@UNITCLASS_SCIENTIST?$AA@ DB 'UNITCLASS_SCIENTIST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BKOELLOP@UNITCLASS_MUSICIAN?$AA@
CONST	SEGMENT
??_C@_0BD@BKOELLOP@UNITCLASS_MUSICIAN?$AA@ DB 'UNITCLASS_MUSICIAN', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ILPBPHBP@UNITCLASS_ARTIST?$AA@
CONST	SEGMENT
??_C@_0BB@ILPBPHBP@UNITCLASS_ARTIST?$AA@ DB 'UNITCLASS_ARTIST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FNGLFDGI@AIGRANDSTRATEGY_CULTURE?$AA@
CONST	SEGMENT
??_C@_0BI@FNGLFDGI@AIGRANDSTRATEGY_CULTURE?$AA@ DB 'AIGRANDSTRATEGY_CULTU'
	DB	'RE', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PLANPKNO@UNITCLASS_WRITER?$AA@
CONST	SEGMENT
??_C@_0BB@PLANPKNO@UNITCLASS_WRITER?$AA@ DB 'UNITCLASS_WRITER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NNACGNOP@SPECIALUNIT_PEOPLE?$AA@
CONST	SEGMENT
??_C@_0BD@NNACGNOP@SPECIALUNIT_PEOPLE?$AA@ DB 'SPECIALUNIT_PEOPLE', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
CONST	ENDS
;	COMDAT ?GetDesiredFaithGreatPerson@CvReligionAI@@ABE?AW4UnitTypes@@XZ
_TEXT	SEGMENT
_this$ = -60						; size = 4
$T242645 = -56						; size = 4
$T242641 = -52						; size = 4
_eStrategy$228004 = -48					; size = 4
_iScore$227961 = -44					; size = 4
_eVictoryStrategy$227962 = -40				; size = 4
_pCapital$227958 = -36					; size = 4
_eUnit$227949 = -32					; size = 4
_pkUnitInfo$227951 = -28				; size = 4
_eUnitClass$227953 = -24				; size = 4
_iUnitLoop$227945 = -20					; size = 4
_eSpecialUnitGreatPerson$ = -16				; size = 4
_eReligion$ = -12					; size = 4
_eRtnValue$ = -8					; size = 4
_iBestScore$ = -4					; size = 4
?GetDesiredFaithGreatPerson@CvReligionAI@@ABE?AW4UnitTypes@@XZ PROC ; CvReligionAI::GetDesiredFaithGreatPerson, COMDAT
; _this$ = ecx

; 7020 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 7021 : 	SpecialUnitTypes eSpecialUnitGreatPerson = (SpecialUnitTypes) GC.getInfoTypeForString("SPECIALUNIT_PEOPLE");

	push	0
	push	OFFSET ??_C@_0BD@NNACGNOP@SPECIALUNIT_PEOPLE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eSpecialUnitGreatPerson$[ebp], eax

; 7022 : 	UnitTypes eRtnValue = NO_UNIT;

	mov	DWORD PTR _eRtnValue$[ebp], -1

; 7023 : 	int iBestScore = 0;

	mov	DWORD PTR _iBestScore$[ebp], 0

; 7024 : 	ReligionTypes eReligion = GetReligionToSpread();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread
	mov	DWORD PTR _eReligion$[ebp], eax

; 7025 : 
; 7026 : 	// Loop through all Units and see if they're possible
; 7027 : #ifdef AUI_WARNING_FIXES
; 7028 : 	for (uint iUnitLoop = 0; iUnitLoop < GC.getNumUnitInfos(); iUnitLoop++)
; 7029 : #else
; 7030 : 	for(int iUnitLoop = 0; iUnitLoop < GC.getNumUnitInfos(); iUnitLoop++)

	mov	DWORD PTR _iUnitLoop$227945[ebp], 0
	jmp	SHORT $LN53@GetDesired
$LN52@GetDesired:
	mov	eax, DWORD PTR _iUnitLoop$227945[ebp]
	add	eax, 1
	mov	DWORD PTR _iUnitLoop$227945[ebp], eax
$LN53@GetDesired:
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumUnitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitInfos
	cmp	DWORD PTR _iUnitLoop$227945[ebp], eax
	jge	$LN51@GetDesired

; 7031 : #endif
; 7032 : 	{
; 7033 : 		const UnitTypes eUnit = static_cast<UnitTypes>(iUnitLoop);

	mov	ecx, DWORD PTR _iUnitLoop$227945[ebp]
	mov	DWORD PTR _eUnit$227949[ebp], ecx

; 7034 : 		CvUnitEntry* pkUnitInfo = GC.getUnitInfo(eUnit);

	mov	edx, DWORD PTR _eUnit$227949[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR _pkUnitInfo$227951[ebp], eax

; 7035 : 
; 7036 : 		if(pkUnitInfo == NULL)

	cmp	DWORD PTR _pkUnitInfo$227951[ebp], 0
	jne	SHORT $LN50@GetDesired

; 7037 : 			continue;

	jmp	SHORT $LN52@GetDesired
$LN50@GetDesired:

; 7038 : 
; 7039 : 		UnitClassTypes eUnitClass = (UnitClassTypes)pkUnitInfo->GetUnitClassType();

	mov	ecx, DWORD PTR _pkUnitInfo$227951[ebp]
	call	?GetUnitClassType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetUnitClassType
	mov	DWORD PTR _eUnitClass$227953[ebp], eax

; 7040 : 
; 7041 : 		// Can't be able to train it
; 7042 : 		if(pkUnitInfo->GetProductionCost() != -1)

	mov	ecx, DWORD PTR _pkUnitInfo$227951[ebp]
	call	?GetProductionCost@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetProductionCost
	cmp	eax, -1
	je	SHORT $LN49@GetDesired

; 7043 : 		{
; 7044 : 			continue;

	jmp	SHORT $LN52@GetDesired
$LN49@GetDesired:

; 7045 : 		}
; 7046 : 
; 7047 : 		// Must be a Great Person (defined in SpecialUnitType in Unit XML)
; 7048 : 		if(pkUnitInfo->GetSpecialUnitType() != eSpecialUnitGreatPerson)

	mov	ecx, DWORD PTR _pkUnitInfo$227951[ebp]
	call	?GetSpecialUnitType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetSpecialUnitType
	cmp	eax, DWORD PTR _eSpecialUnitGreatPerson$[ebp]
	je	SHORT $LN48@GetDesired

; 7049 : 		{
; 7050 : 			continue;

	jmp	SHORT $LN52@GetDesired
$LN48@GetDesired:

; 7051 : 		}
; 7052 : 
; 7053 : 		// Must be a Great Person for this player's civ
; 7054 : 		if(!m_pPlayer->canTrain(eUnit, false /*bContinue*/, false /*bTestVisible*/, true /*bIgnoreCost*/))

	push	0
	push	0
	push	1
	push	0
	push	0
	mov	eax, DWORD PTR _eUnit$227949[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?canTrain@CvPlayer@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z ; CvPlayer::canTrain
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN47@GetDesired

; 7055 : 		{
; 7056 : 			continue;

	jmp	$LN52@GetDesired
$LN47@GetDesired:

; 7057 : 		}
; 7058 : 
; 7059 : 		// Can we purchase this one in the capital?
; 7060 : 		CvCity *pCapital = m_pPlayer->getCapitalCity();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pCapital$227958[ebp], eax

; 7061 : 		if (pCapital)

	cmp	DWORD PTR _pCapital$227958[ebp], 0
	je	$LN46@GetDesired

; 7062 : 		{
; 7063 : 			if (pCapital->IsCanPurchase(false/*bTestPurchaseCost*/, false/*bTestTrainable*/, eUnit, NO_BUILDING, NO_PROJECT, YIELD_FAITH))

	push	5
	push	-1
	push	-1
	mov	ecx, DWORD PTR _eUnit$227949[ebp]
	push	ecx
	push	0
	push	0
	mov	ecx, DWORD PTR _pCapital$227958[ebp]
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	movzx	edx, al
	test	edx, edx
	je	$LN46@GetDesired

; 7064 : 			{
; 7065 : 				int iScore = 0;

	mov	DWORD PTR _iScore$227961[ebp], 0

; 7066 : 				AIGrandStrategyTypes eVictoryStrategy = m_pPlayer->GetGrandStrategyAI()->GetActiveGrandStrategy();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?GetGrandStrategyAI@CvPlayer@@QBEPAVCvGrandStrategyAI@@XZ ; CvPlayer::GetGrandStrategyAI
	mov	ecx, eax
	call	?GetActiveGrandStrategy@CvGrandStrategyAI@@QBE?AW4AIGrandStrategyTypes@@XZ ; CvGrandStrategyAI::GetActiveGrandStrategy
	mov	DWORD PTR _eVictoryStrategy$227962[ebp], eax

; 7067 : 
; 7068 : 				// Score it
; 7069 : 				if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_PROPHET"))

	push	0
	push	OFFSET ??_C@_0BC@HNFIELJF@UNITCLASS_PROPHET?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eUnitClass$227953[ebp], eax
	jne	SHORT $LN44@GetDesired

; 7070 : 				{
; 7071 : 					if (GetReligionToSpread() > RELIGION_PANTHEON)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread
	test	eax, eax
	jle	SHORT $LN43@GetDesired

; 7072 : 					{
; 7073 : 						if (ChooseProphetConversionCity(true/*bOnlyBetterThanEnhancingReligion*/))

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChooseProphetConversionCity@CvReligionAI@@QBEPAVCvCity@@_N@Z ; CvReligionAI::ChooseProphetConversionCity
	test	eax, eax
	je	SHORT $LN42@GetDesired

; 7074 : 						{
; 7075 : 							iScore = 1500;

	mov	DWORD PTR _iScore$227961[ebp], 1500	; 000005dcH
	jmp	SHORT $LN41@GetDesired
$LN42@GetDesired:

; 7076 : 						}
; 7077 : 						else if (ChooseProphetConversionCity(false/*bOnlyBetterThanEnhancingReligion*/))

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ChooseProphetConversionCity@CvReligionAI@@QBEPAVCvCity@@_N@Z ; CvReligionAI::ChooseProphetConversionCity
	test	eax, eax
	je	SHORT $LN41@GetDesired

; 7078 : 						{
; 7079 : 							iScore = 750;

	mov	DWORD PTR _iScore$227961[ebp], 750	; 000002eeH
$LN41@GetDesired:

; 7080 : 						}
; 7081 : 						iScore /= (1+ m_pPlayer->GetReligions()->GetNumProphetsSpawned());

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetNumProphetsSpawned@CvPlayerReligions@@QBEHXZ ; CvPlayerReligions::GetNumProphetsSpawned
	mov	ecx, eax
	add	ecx, 1
	mov	eax, DWORD PTR _iScore$227961[ebp]
	cdq
	idiv	ecx
	mov	DWORD PTR _iScore$227961[ebp], eax
$LN43@GetDesired:

; 7082 : 					}
; 7083 : 				}

	jmp	$LN39@GetDesired
$LN44@GetDesired:

; 7084 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_WRITER"))

	push	0
	push	OFFSET ??_C@_0BB@PLANPKNO@UNITCLASS_WRITER?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eUnitClass$227953[ebp], eax
	jne	SHORT $LN38@GetDesired

; 7085 : 				{
; 7086 : 					if (eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_CULTURE"))

	push	0
	push	OFFSET ??_C@_0BI@FNGLFDGI@AIGRANDSTRATEGY_CULTURE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eVictoryStrategy$227962[ebp], eax
	jne	SHORT $LN37@GetDesired

; 7087 : 					{
; 7088 : 						iScore = 1000;

	mov	DWORD PTR _iScore$227961[ebp], 1000	; 000003e8H

; 7089 : 					}
; 7090 : 					else

	jmp	SHORT $LN36@GetDesired
$LN37@GetDesired:

; 7091 : 					{
; 7092 : 						iScore = 400;

	mov	DWORD PTR _iScore$227961[ebp], 400	; 00000190H
$LN36@GetDesired:

; 7093 : 					}
; 7094 : 					iScore /= (1+ m_pPlayer->getWritersFromFaith());

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?getWritersFromFaith@CvPlayer@@QBEHXZ	; CvPlayer::getWritersFromFaith
	mov	ecx, eax
	add	ecx, 1
	mov	eax, DWORD PTR _iScore$227961[ebp]
	cdq
	idiv	ecx
	mov	DWORD PTR _iScore$227961[ebp], eax
	jmp	$LN39@GetDesired
$LN38@GetDesired:

; 7095 : 				}
; 7096 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_ARTIST"))

	push	0
	push	OFFSET ??_C@_0BB@ILPBPHBP@UNITCLASS_ARTIST?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eUnitClass$227953[ebp], eax
	jne	SHORT $LN34@GetDesired

; 7097 : 				{
; 7098 : 					if (eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_CULTURE"))

	push	0
	push	OFFSET ??_C@_0BI@FNGLFDGI@AIGRANDSTRATEGY_CULTURE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eVictoryStrategy$227962[ebp], eax
	jne	SHORT $LN33@GetDesired

; 7099 : 					{
; 7100 : 						iScore = 1000;

	mov	DWORD PTR _iScore$227961[ebp], 1000	; 000003e8H

; 7101 : 					}
; 7102 : 					else

	jmp	SHORT $LN32@GetDesired
$LN33@GetDesired:

; 7103 : 					{
; 7104 : 						iScore = 400;

	mov	DWORD PTR _iScore$227961[ebp], 400	; 00000190H
$LN32@GetDesired:

; 7105 : 					}
; 7106 : 					iScore /= (1+ m_pPlayer->getArtistsFromFaith());

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?getArtistsFromFaith@CvPlayer@@QBEHXZ	; CvPlayer::getArtistsFromFaith
	mov	ecx, eax
	add	ecx, 1
	mov	eax, DWORD PTR _iScore$227961[ebp]
	cdq
	idiv	ecx
	mov	DWORD PTR _iScore$227961[ebp], eax
	jmp	$LN39@GetDesired
$LN34@GetDesired:

; 7107 : 				}
; 7108 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_MUSICIAN"))

	push	0
	push	OFFSET ??_C@_0BD@BKOELLOP@UNITCLASS_MUSICIAN?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eUnitClass$227953[ebp], eax
	jne	SHORT $LN30@GetDesired

; 7109 : 				{
; 7110 : 					if (eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_CULTURE"))

	push	0
	push	OFFSET ??_C@_0BI@FNGLFDGI@AIGRANDSTRATEGY_CULTURE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eVictoryStrategy$227962[ebp], eax
	jne	SHORT $LN29@GetDesired

; 7111 : 					{
; 7112 : 						iScore = 1000;

	mov	DWORD PTR _iScore$227961[ebp], 1000	; 000003e8H

; 7113 : 					}
; 7114 : 					else

	jmp	SHORT $LN28@GetDesired
$LN29@GetDesired:

; 7115 : 					{
; 7116 : 						iScore = 400;

	mov	DWORD PTR _iScore$227961[ebp], 400	; 00000190H
$LN28@GetDesired:

; 7117 : 					}
; 7118 : 					iScore /= (1+ m_pPlayer->getMusiciansFromFaith());

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?getMusiciansFromFaith@CvPlayer@@QBEHXZ	; CvPlayer::getMusiciansFromFaith
	mov	ecx, eax
	add	ecx, 1
	mov	eax, DWORD PTR _iScore$227961[ebp]
	cdq
	idiv	ecx
	mov	DWORD PTR _iScore$227961[ebp], eax
	jmp	$LN39@GetDesired
$LN30@GetDesired:

; 7119 : 				}
; 7120 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_SCIENTIST"))

	push	0
	push	OFFSET ??_C@_0BE@NHLKBGBE@UNITCLASS_SCIENTIST?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eUnitClass$227953[ebp], eax
	jne	SHORT $LN26@GetDesired

; 7121 : 				{
; 7122 : 					if (eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_SPACESHIP"))

	push	0
	push	OFFSET ??_C@_0BK@CCPNHFB@AIGRANDSTRATEGY_SPACESHIP?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eVictoryStrategy$227962[ebp], eax
	jne	SHORT $LN25@GetDesired

; 7123 : 					{
; 7124 : 						iScore = 1000;

	mov	DWORD PTR _iScore$227961[ebp], 1000	; 000003e8H

; 7125 : 					}
; 7126 : 					else

	jmp	SHORT $LN24@GetDesired
$LN25@GetDesired:

; 7127 : 					{
; 7128 : 						iScore = 400;

	mov	DWORD PTR _iScore$227961[ebp], 400	; 00000190H
$LN24@GetDesired:

; 7129 : 					}
; 7130 : #ifndef AUI_WARNING_FIXES
; 7131 : 					iScore = 1000;

	mov	DWORD PTR _iScore$227961[ebp], 1000	; 000003e8H

; 7132 : #endif
; 7133 : 					iScore /= (1+ m_pPlayer->getScientistsFromFaith());

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?getScientistsFromFaith@CvPlayer@@QBEHXZ ; CvPlayer::getScientistsFromFaith
	mov	ecx, eax
	add	ecx, 1
	mov	eax, DWORD PTR _iScore$227961[ebp]
	cdq
	idiv	ecx
	mov	DWORD PTR _iScore$227961[ebp], eax
	jmp	$LN39@GetDesired
$LN26@GetDesired:

; 7134 : 				}
; 7135 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_MERCHANT"))

	push	0
	push	OFFSET ??_C@_0BD@GIKGAGAO@UNITCLASS_MERCHANT?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eUnitClass$227953[ebp], eax
	jne	SHORT $LN22@GetDesired

; 7136 : 				{
; 7137 : 					if (eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_UNITED_NATIONS"))

	push	0
	push	OFFSET ??_C@_0BP@DOCBNDKB@AIGRANDSTRATEGY_UNITED_NATIONS?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eVictoryStrategy$227962[ebp], eax
	jne	SHORT $LN21@GetDesired

; 7138 : 					{
; 7139 : 						iScore = 1000;

	mov	DWORD PTR _iScore$227961[ebp], 1000	; 000003e8H

; 7140 : 					}
; 7141 : 					else

	jmp	SHORT $LN20@GetDesired
$LN21@GetDesired:

; 7142 : 					{
; 7143 : 						iScore = 400;

	mov	DWORD PTR _iScore$227961[ebp], 400	; 00000190H
$LN20@GetDesired:

; 7144 : 					}
; 7145 : 					iScore /= (1+ m_pPlayer->getMerchantsFromFaith());

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?getMerchantsFromFaith@CvPlayer@@QBEHXZ	; CvPlayer::getMerchantsFromFaith
	mov	ecx, eax
	add	ecx, 1
	mov	eax, DWORD PTR _iScore$227961[ebp]
	cdq
	idiv	ecx
	mov	DWORD PTR _iScore$227961[ebp], eax
	jmp	$LN39@GetDesired
$LN22@GetDesired:

; 7146 : 				}
; 7147 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_ENGINEER"))

	push	0
	push	OFFSET ??_C@_0BD@EAEEACNP@UNITCLASS_ENGINEER?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eUnitClass$227953[ebp], eax
	jne	SHORT $LN18@GetDesired

; 7148 : 				{
; 7149 : 					EconomicAIStrategyTypes eStrategy = (EconomicAIStrategyTypes) GC.getInfoTypeForString("ECONOMICAISTRATEGY_GS_SPACESHIP_HOMESTRETCH");

	push	0
	push	OFFSET ??_C@_0CM@MOIMHCNJ@ECONOMICAISTRATEGY_GS_SPACESHIP_@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eStrategy$228004[ebp], eax

; 7150 : 					if (eStrategy != NO_ECONOMICAISTRATEGY && m_pPlayer->GetEconomicAI()->IsUsingStrategy(eStrategy))

	cmp	DWORD PTR _eStrategy$228004[ebp], -1
	je	SHORT $LN17@GetDesired
	mov	edx, DWORD PTR _eStrategy$228004[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?GetEconomicAI@CvPlayer@@QBEPAVCvEconomicAI@@XZ ; CvPlayer::GetEconomicAI
	mov	ecx, eax
	call	?IsUsingStrategy@CvEconomicAI@@QAE_NW4EconomicAIStrategyTypes@@@Z ; CvEconomicAI::IsUsingStrategy
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN17@GetDesired

; 7151 : 					{
; 7152 : 						iScore = 2000;

	mov	DWORD PTR _iScore$227961[ebp], 2000	; 000007d0H

; 7153 : 					}
; 7154 : 					else

	jmp	SHORT $LN16@GetDesired
$LN17@GetDesired:

; 7155 : 					{
; 7156 : 						iScore = 500;

	mov	DWORD PTR _iScore$227961[ebp], 500	; 000001f4H
$LN16@GetDesired:

; 7157 : 					}
; 7158 : 					iScore /= (1+ m_pPlayer->getEngineersFromFaith());

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?getEngineersFromFaith@CvPlayer@@QBEHXZ	; CvPlayer::getEngineersFromFaith
	mov	ecx, eax
	add	ecx, 1
	mov	eax, DWORD PTR _iScore$227961[ebp]
	cdq
	idiv	ecx
	mov	DWORD PTR _iScore$227961[ebp], eax
	jmp	$LN39@GetDesired
$LN18@GetDesired:

; 7159 : 				}
; 7160 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_GREAT_GENERAL"))

	push	0
	push	OFFSET ??_C@_0BI@LPICAOEN@UNITCLASS_GREAT_GENERAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eUnitClass$227953[ebp], eax
	jne	SHORT $LN14@GetDesired

; 7161 : 				{
; 7162 : 					if (eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_CONQUEST")&& !(GC.getMap().GetAIMapHint() & 1))

	push	0
	push	OFFSET ??_C@_0BJ@GCKPAHPE@AIGRANDSTRATEGY_CONQUEST?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eVictoryStrategy$227962[ebp], eax
	jne	SHORT $LN13@GetDesired
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T242641[ebp], edx
	mov	ecx, DWORD PTR $T242641[ebp]
	call	?GetAIMapHint@CvMap@@QAEHXZ		; CvMap::GetAIMapHint
	and	eax, 1
	jne	SHORT $LN13@GetDesired

; 7163 : 					{
; 7164 : 						iScore = 1000;

	mov	DWORD PTR _iScore$227961[ebp], 1000	; 000003e8H

; 7165 : 					}
; 7166 : 					else

	jmp	SHORT $LN12@GetDesired
$LN13@GetDesired:

; 7167 : 					{
; 7168 : 						iScore = 400;

	mov	DWORD PTR _iScore$227961[ebp], 400	; 00000190H
$LN12@GetDesired:

; 7169 : 					}
; 7170 : 					iScore /= (1+ m_pPlayer->getGeneralsFromFaith() + m_pPlayer->GetNumUnitsWithUnitAI(UNITAI_GENERAL));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?getGeneralsFromFaith@CvPlayer@@QBEHXZ	; CvPlayer::getGeneralsFromFaith
	mov	esi, eax
	push	1
	push	0
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?GetNumUnitsWithUnitAI@CvPlayer@@QAEHW4UnitAITypes@@_N1@Z ; CvPlayer::GetNumUnitsWithUnitAI
	lea	ecx, DWORD PTR [esi+eax+1]
	mov	eax, DWORD PTR _iScore$227961[ebp]
	cdq
	idiv	ecx
	mov	DWORD PTR _iScore$227961[ebp], eax
	jmp	$LN39@GetDesired
$LN14@GetDesired:

; 7171 : 				}
; 7172 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_GREAT_ADMIRAL"))

	push	0
	push	OFFSET ??_C@_0BI@JMPOJDNB@UNITCLASS_GREAT_ADMIRAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eUnitClass$227953[ebp], eax
	jne	SHORT $LN10@GetDesired

; 7173 : 				{
; 7174 : 					if (eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_CONQUEST") && GC.getMap().GetAIMapHint() & 1)

	push	0
	push	OFFSET ??_C@_0BJ@GCKPAHPE@AIGRANDSTRATEGY_CONQUEST?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eVictoryStrategy$227962[ebp], eax
	jne	SHORT $LN9@GetDesired
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T242645[ebp], edx
	mov	ecx, DWORD PTR $T242645[ebp]
	call	?GetAIMapHint@CvMap@@QAEHXZ		; CvMap::GetAIMapHint
	and	eax, 1
	je	SHORT $LN9@GetDesired

; 7175 : 					{
; 7176 : 						iScore = 1000;

	mov	DWORD PTR _iScore$227961[ebp], 1000	; 000003e8H

; 7177 : 					}
; 7178 : 					else

	jmp	SHORT $LN8@GetDesired
$LN9@GetDesired:

; 7179 : 					{
; 7180 : 						iScore = 400;

	mov	DWORD PTR _iScore$227961[ebp], 400	; 00000190H
$LN8@GetDesired:

; 7181 : 					}
; 7182 : 					iScore /= (1+ m_pPlayer->getAdmiralsFromFaith() + m_pPlayer->GetNumUnitsWithUnitAI(UNITAI_ADMIRAL));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?getAdmiralsFromFaith@CvPlayer@@QBEHXZ	; CvPlayer::getAdmiralsFromFaith
	mov	esi, eax
	push	1
	push	0
	push	37					; 00000025H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?GetNumUnitsWithUnitAI@CvPlayer@@QAEHW4UnitAITypes@@_N1@Z ; CvPlayer::GetNumUnitsWithUnitAI
	lea	ecx, DWORD PTR [esi+eax+1]
	mov	eax, DWORD PTR _iScore$227961[ebp]
	cdq
	idiv	ecx
	mov	DWORD PTR _iScore$227961[ebp], eax
	jmp	$LN39@GetDesired
$LN10@GetDesired:

; 7183 : 				}
; 7184 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_MISSIONARY"))

	push	0
	push	OFFSET ??_C@_0BF@PJOHPEFB@UNITCLASS_MISSIONARY?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eUnitClass$227953[ebp], eax
	jne	SHORT $LN6@GetDesired

; 7185 : 				{
; 7186 : 					if (HaveNearbyConversionTarget(eReligion, false /*bCanIncludeReligionStarter*/))

	push	0
	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HaveNearbyConversionTarget@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::HaveNearbyConversionTarget
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@GetDesired

; 7187 : 					{
; 7188 : 						iScore = 1000 / (m_pPlayer->GetNumUnitsWithUnitAI(UNITAI_MISSIONARY) + 1);		

	push	1
	push	0
	push	35					; 00000023H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?GetNumUnitsWithUnitAI@CvPlayer@@QAEHW4UnitAITypes@@_N1@Z ; CvPlayer::GetNumUnitsWithUnitAI
	mov	ecx, eax
	add	ecx, 1
	mov	eax, 1000				; 000003e8H
	cdq
	idiv	ecx
	mov	DWORD PTR _iScore$227961[ebp], eax
$LN5@GetDesired:

; 7189 : 					}
; 7190 : 				}

	jmp	SHORT $LN39@GetDesired
$LN6@GetDesired:

; 7191 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_INQUISITOR"))

	push	0
	push	OFFSET ??_C@_0BF@BFICONBO@UNITCLASS_INQUISITOR?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	DWORD PTR _eUnitClass$227953[ebp], eax
	jne	SHORT $LN39@GetDesired

; 7192 : 				{
; 7193 : 					if (HaveEnoughInquisitors(eReligion))

	mov	edx, DWORD PTR _eReligion$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HaveEnoughInquisitors@CvReligionAI@@ABE_NW4ReligionTypes@@@Z ; CvReligionAI::HaveEnoughInquisitors
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN39@GetDesired

; 7194 : 					{
; 7195 : 						iScore = 1000 / (m_pPlayer->GetNumUnitsWithUnitAI(UNITAI_INQUISITOR) + 1);

	push	1
	push	0
	push	36					; 00000024H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?GetNumUnitsWithUnitAI@CvPlayer@@QAEHW4UnitAITypes@@_N1@Z ; CvPlayer::GetNumUnitsWithUnitAI
	mov	ecx, eax
	add	ecx, 1
	mov	eax, 1000				; 000003e8H
	cdq
	idiv	ecx
	mov	DWORD PTR _iScore$227961[ebp], eax
$LN39@GetDesired:

; 7196 : 					}
; 7197 : 				}
; 7198 : 
; 7199 : 				if (iScore > iBestScore)

	mov	edx, DWORD PTR _iScore$227961[ebp]
	cmp	edx, DWORD PTR _iBestScore$[ebp]
	jle	SHORT $LN46@GetDesired

; 7200 : 				{
; 7201 : 					iBestScore = iScore;

	mov	eax, DWORD PTR _iScore$227961[ebp]
	mov	DWORD PTR _iBestScore$[ebp], eax

; 7202 : 					eRtnValue = eUnit;

	mov	ecx, DWORD PTR _eUnit$227949[ebp]
	mov	DWORD PTR _eRtnValue$[ebp], ecx
$LN46@GetDesired:

; 7203 : 				}
; 7204 : 			}
; 7205 : 		}
; 7206 : 	}

	jmp	$LN52@GetDesired
$LN51@GetDesired:

; 7207 : 
; 7208 : 	return eRtnValue;

	mov	eax, DWORD PTR _eRtnValue$[ebp]

; 7209 : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDesiredFaithGreatPerson@CvReligionAI@@ABE?AW4UnitTypes@@XZ ENDP ; CvReligionAI::GetDesiredFaithGreatPerson
_TEXT	ENDS
PUBLIC	??_C@_0L@DBMLLMJN@CHOSEN?0?5?$CFs?$AA@		; `string'
PUBLIC	??_C@_0P@IIHDJBOH@Belief?0?5?$CFs?0?5?$CFd?$AA@	; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_0L@DBMLLMJN@CHOSEN?0?5?$CFs?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0L@DBMLLMJN@CHOSEN?0?5?$CFs?$AA@ DB 'CHOSEN, %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IIHDJBOH@Belief?0?5?$CFs?0?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0P@IIHDJBOH@Belief?0?5?$CFs?0?5?$CFd?$AA@ DB 'Belief, %s, %d', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$7
	DD	04H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$8
	DD	04H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$9
	DD	04H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$10
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z
_TEXT	SEGMENT
tv74 = -436						; size = 4
tv287 = -432						; size = 4
tv298 = -428						; size = 4
tv309 = -424						; size = 4
tv273 = -420						; size = 4
tv320 = -416						; size = 4
tv331 = -412						; size = 4
tv94 = -408						; size = 4
_this$ = -404						; size = 4
$T242782 = -400						; size = 4
$T242778 = -396						; size = 4
$T242767 = -392						; size = 4
$T242763 = -388						; size = 4
$T242759 = -384						; size = 4
$T242752 = -380						; size = 4
_elem$242751 = -376					; size = 8
$T242733 = -368						; size = 4
$T242717 = -364						; size = 4
$T242712 = -360						; size = 4
$T242708 = -356						; size = 4
$T242700 = -352						; size = 4
$T242699 = -348						; size = 4
$T242695 = -344						; size = 4
$T242691 = -340						; size = 4
$T242654 = -336						; size = 28
$T242653 = -308						; size = 28
$T242652 = -280						; size = 28
$T242651 = -252						; size = 28
$T242650 = -224						; size = 28
$T242649 = -196						; size = 28
_iI$228047 = -168					; size = 4
_strOutBuf$228038 = -164				; size = 28
_playerName$228041 = -136				; size = 28
_strDesc$228042 = -108					; size = 28
_pLog$228044 = -80					; size = 4
_strTemp$228040 = -76					; size = 28
_eBelief$228043 = -48					; size = 4
_strBaseString$228039 = -44				; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_beliefChoices$ = 8					; size = 4
_iChoice$ = 12						; size = 4
?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z PROC ; CvReligionAI::LogBeliefChoices, COMDAT
; _this$ = ecx

; 7213 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 424				; 000001a8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 7214 : 	if(GC.getLogging() && GC.getAILogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	movzx	eax, al
	test	eax, eax
	je	$LN5@LogBeliefC
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getAILogging@CvGlobals@@QAE_NXZ	; CvGlobals::getAILogging
	movzx	ecx, al
	test	ecx, ecx
	je	$LN5@LogBeliefC

; 7215 : 	{
; 7216 : 		CvString strOutBuf;

	lea	ecx, DWORD PTR _strOutBuf$228038[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 7217 : 		CvString strBaseString;

	lea	ecx, DWORD PTR _strBaseString$228039[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 7218 : 		CvString strTemp;

	lea	ecx, DWORD PTR _strTemp$228040[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 7219 : 		CvString playerName;

	lea	ecx, DWORD PTR _playerName$228041[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 7220 : 		CvString strDesc;

	lea	ecx, DWORD PTR _strDesc$228042[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4

; 7221 : 		BeliefTypes eBelief;
; 7222 : 
; 7223 : 		// Find the name of this civ
; 7224 : 		playerName = m_pPlayer->getCivilizationShortDescription();

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	mov	DWORD PTR $T242691[ebp], eax
	cmp	DWORD PTR $T242691[ebp], 0
	je	SHORT $LN34@LogBeliefC
	mov	eax, DWORD PTR $T242691[ebp]
	push	eax
	lea	ecx, DWORD PTR _playerName$228041[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN35@LogBeliefC
$LN34@LogBeliefC:
	lea	ecx, DWORD PTR _playerName$228041[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN35@LogBeliefC:

; 7225 : 
; 7226 : 		// Open the log file
; 7227 : 		FILogFile* pLog;
; 7228 : 		pLog = LOGFILEMGR.GetLog(GC.getGame().GetGameReligions()->GetLogFileName(), FILogFile::kDontTimeStamp);

	call	?GetInstance@FILogFileMgr@@SAAAV1@XZ	; FILogFileMgr::GetInstance
	mov	DWORD PTR tv94[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242695[ebp], ecx
	lea	edx, DWORD PTR $T242649[ebp]
	push	edx
	mov	ecx, DWORD PTR $T242695[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ ; CvGameReligions::GetLogFileName
	mov	DWORD PTR tv331[ebp], eax
	mov	eax, DWORD PTR tv331[ebp]
	mov	DWORD PTR $T242699[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR $T242699[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T242700[ebp], eax
	push	0
	push	1
	mov	ecx, DWORD PTR $T242700[ebp]
	push	ecx
	mov	edx, DWORD PTR tv94[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv94[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	DWORD PTR _pLog$228044[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T242649[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7229 : 
; 7230 : 		// Get the leading info for this line
; 7231 : 		strBaseString.Format("%03d, %d, ", GC.getGame().getElapsedGameTurns(), GC.getGame().getGameTurnYear());

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242708[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242712[ebp], ecx
	mov	ecx, DWORD PTR $T242708[ebp]
	call	?getGameTurnYear@CvGame@@QAEHXZ		; CvGame::getGameTurnYear
	push	eax
	mov	ecx, DWORD PTR $T242712[ebp]
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	push	eax
	push	OFFSET ??_C@_0L@FOFKLADA@?$CF03d?0?5?$CFd?0?5?$AA@
	lea	edx, DWORD PTR _strBaseString$228039[ebp]
	push	edx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format
	add	esp, 16					; 00000010H

; 7232 : 		strBaseString += playerName + ", ";

	push	OFFSET ??_C@_02KEGNLNML@?0?5?$AA@
	lea	eax, DWORD PTR _playerName$228041[ebp]
	push	eax
	lea	ecx, DWORD PTR $T242650[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv320[ebp], eax
	mov	edx, DWORD PTR tv320[ebp]
	mov	DWORD PTR tv273[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR tv273[ebp]
	push	eax
	lea	ecx, DWORD PTR _strBaseString$228039[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T242650[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7233 : 
; 7234 : 		// Dump out the weight of each belief item
; 7235 : 		for(int iI = 0; iI < beliefChoices.size(); iI++)

	mov	DWORD PTR _iI$228047[ebp], 0
	jmp	SHORT $LN3@LogBeliefC
$LN2@LogBeliefC:
	mov	ecx, DWORD PTR _iI$228047[ebp]
	add	ecx, 1
	mov	DWORD PTR _iI$228047[ebp], ecx
$LN3@LogBeliefC:
	mov	edx, DWORD PTR _beliefChoices$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T242717[ebp], eax
	mov	ecx, DWORD PTR _iI$228047[ebp]
	cmp	ecx, DWORD PTR $T242717[ebp]
	jge	$LN1@LogBeliefC

; 7236 : 		{
; 7237 : 			eBelief = beliefChoices.GetElement(iI);

	mov	edx, DWORD PTR _beliefChoices$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _iI$228047[ebp]
	mov	edx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR _eBelief$228043[ebp], edx

; 7238 : 			strDesc = GetLocalizedText(GC.GetGameBeliefs()->GetEntry(eBelief)->getShortDescription());

	mov	eax, DWORD PTR _eBelief$228043[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ecx, eax
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?getShortDescription@CvBeliefEntry@@QBEPBDXZ ; CvBeliefEntry::getShortDescription
	push	eax
	lea	ecx, DWORD PTR $T242651[ebp]
	push	ecx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv309[ebp], eax
	mov	edx, DWORD PTR tv309[ebp]
	mov	DWORD PTR $T242733[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR $T242733[ebp]
	push	eax
	lea	ecx, DWORD PTR _strDesc$228042[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T242651[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7239 : 			strTemp.Format("Belief, %s, %d", strDesc.GetCString(), beliefChoices.GetWeight(iI));

	mov	DWORD PTR _elem$242751[ebp], 0
	mov	DWORD PTR _elem$242751[ebp+4], 0
	mov	ecx, DWORD PTR _beliefChoices$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _iI$228047[ebp]
	mov	ecx, DWORD PTR [edx+eax*8]
	mov	edx, DWORD PTR [edx+eax*8+4]
	mov	DWORD PTR _elem$242751[ebp], ecx
	mov	DWORD PTR _elem$242751[ebp+4], edx
	mov	eax, DWORD PTR _elem$242751[ebp+4]
	mov	DWORD PTR $T242752[ebp], eax
	mov	ecx, DWORD PTR $T242752[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDesc$228042[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	OFFSET ??_C@_0P@IIHDJBOH@Belief?0?5?$CFs?0?5?$CFd?$AA@
	lea	edx, DWORD PTR _strTemp$228040[ebp]
	push	edx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format
	add	esp, 16					; 00000010H

; 7240 : 			strOutBuf = strBaseString + strTemp;

	lea	eax, DWORD PTR _strTemp$228040[ebp]
	push	eax
	lea	ecx, DWORD PTR _strBaseString$228039[ebp]
	push	ecx
	lea	edx, DWORD PTR $T242652[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv298[ebp], eax
	mov	eax, DWORD PTR tv298[ebp]
	mov	DWORD PTR $T242759[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR $T242759[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$228038[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T242652[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7241 : 			pLog->Msg(strOutBuf);

	lea	ecx, DWORD PTR _strOutBuf$228038[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T242763[ebp], eax
	mov	ecx, DWORD PTR $T242763[ebp]
	push	ecx
	mov	edx, DWORD PTR _pLog$228044[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pLog$228044[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax]
	call	edx
	add	esp, 8

; 7242 : 		}

	jmp	$LN2@LogBeliefC
$LN1@LogBeliefC:

; 7243 : 
; 7244 : 		// Finally the chosen one
; 7245 : 		eBelief = (BeliefTypes)iChoice;

	mov	eax, DWORD PTR _iChoice$[ebp]
	mov	DWORD PTR _eBelief$228043[ebp], eax

; 7246 : 		strDesc = GetLocalizedText(GC.GetGameBeliefs()->GetEntry(eBelief)->getShortDescription());

	mov	ecx, DWORD PTR _eBelief$228043[ebp]
	push	ecx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ecx, eax
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?getShortDescription@CvBeliefEntry@@QBEPBDXZ ; CvBeliefEntry::getShortDescription
	push	eax
	lea	edx, DWORD PTR $T242653[ebp]
	push	edx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	DWORD PTR tv287[ebp], eax
	mov	eax, DWORD PTR tv287[ebp]
	mov	DWORD PTR $T242767[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR $T242767[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strDesc$228042[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T242653[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7247 : 		strTemp.Format("CHOSEN, %s", strDesc.GetCString());

	lea	ecx, DWORD PTR _strDesc$228042[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	OFFSET ??_C@_0L@DBMLLMJN@CHOSEN?0?5?$CFs?$AA@
	lea	edx, DWORD PTR _strTemp$228040[ebp]
	push	edx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format
	add	esp, 12					; 0000000cH

; 7248 : 		strOutBuf = strBaseString + strTemp;

	lea	eax, DWORD PTR _strTemp$228040[ebp]
	push	eax
	lea	ecx, DWORD PTR _strBaseString$228039[ebp]
	push	ecx
	lea	edx, DWORD PTR $T242654[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv74[ebp], eax
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T242778[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	ecx, DWORD PTR $T242778[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$228038[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T242654[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7249 : 		pLog->Msg(strOutBuf);

	lea	ecx, DWORD PTR _strOutBuf$228038[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T242782[ebp], eax
	mov	ecx, DWORD PTR $T242782[ebp]
	push	ecx
	mov	edx, DWORD PTR _pLog$228044[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pLog$228044[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax]
	call	edx
	add	esp, 8

; 7250 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _strDesc$228042[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _playerName$228041[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _strTemp$228040[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _strBaseString$228039[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strOutBuf$228038[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN5@LogBeliefC:

; 7251 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$0:
	lea	ecx, DWORD PTR _strOutBuf$228038[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$1:
	lea	ecx, DWORD PTR _strBaseString$228039[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$2:
	lea	ecx, DWORD PTR _strTemp$228040[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$3:
	lea	ecx, DWORD PTR _playerName$228041[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$4:
	lea	ecx, DWORD PTR _strDesc$228042[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$5:
	lea	ecx, DWORD PTR $T242649[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$6:
	lea	ecx, DWORD PTR $T242650[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$7:
	lea	ecx, DWORD PTR $T242651[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$8:
	lea	ecx, DWORD PTR $T242652[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$9:
	lea	ecx, DWORD PTR $T242653[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$10:
	lea	ecx, DWORD PTR $T242654[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-428]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z ENDP ; CvReligionAI::LogBeliefChoices
EXTRN	?GetMissionaryExtraSpreads@CvCityBuildings@@QBEHXZ:PROC ; CvCityBuildings::GetMissionaryExtraSpreads
EXTRN	?IsSpreadReligion@CvUnitEntry@@QBE_NXZ:PROC	; CvUnitEntry::IsSpreadReligion
; Function compile flags: /Odtp
;	COMDAT ?GetBestCityFaithUnitPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4UnitTypes@@W4ReligionTypes@@@Z
_TEXT	SEGMENT
tv288 = -128						; size = 4
tv303 = -124						; size = 4
$T242989 = -120						; size = 4
$T242980 = -116						; size = 4
$T242971 = -112						; size = 4
$T242962 = -108						; size = 4
$T242948 = -100						; size = 4
$T242947 = -96						; size = 4
$T242902 = -92						; size = 4
$T242889 = -88						; size = 4
$T242885 = -84						; size = 4
$T242871 = -80						; size = 4
$T242867 = -73						; size = 1
$T242856 = -72						; size = 4
$T242852 = -65						; size = 1
_iMapY$242946 = -64					; size = 4
_iMapX$242945 = -60					; size = 4
$T242845 = -56						; size = 4
$T242841 = -52						; size = 4
$T242832 = -48						; size = 4
$T242823 = -44						; size = 4
$T242814 = -40						; size = 4
_pHolyCityPlot$228091 = -36				; size = 4
_bReligious$ = -29					; size = 1
_eSpecialUnitGreatPerson$ = -28				; size = 4
_pkUnitEntry$ = -24					; size = 4
_pHolyCity$ = -20					; size = 4
_pReligions$ = -16					; size = 4
_pMyReligion$ = -12					; size = 4
_pLoopCity$ = -8					; size = 4
_iLoop$ = -4						; size = 4
_kPlayer$ = 8						; size = 4
_eUnit$ = 12						; size = 4
_eReligion$ = 16					; size = 4
?GetBestCityFaithUnitPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4UnitTypes@@W4ReligionTypes@@@Z PROC ; CvReligionAIHelpers::GetBestCityFaithUnitPurchase, COMDAT

; 7256 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H

; 7257 : 	bool bReligious = false;

	mov	BYTE PTR _bReligious$[ebp], 0

; 7258 : 	CvCity *pHolyCity = NULL;

	mov	DWORD PTR _pHolyCity$[ebp], 0

; 7259 : 	SpecialUnitTypes eSpecialUnitGreatPerson = (SpecialUnitTypes) GC.getInfoTypeForString("SPECIALUNIT_PEOPLE");

	push	0
	push	OFFSET ??_C@_0BD@NNACGNOP@SPECIALUNIT_PEOPLE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	DWORD PTR _eSpecialUnitGreatPerson$[ebp], eax

; 7260 : 	int iLoop;
; 7261 : 	CvCity* pLoopCity;
; 7262 : 
; 7263 : 	CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242814[ebp], eax
	mov	ecx, DWORD PTR $T242814[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pReligions$[ebp], eax

; 7264 : 	const CvReligion* pMyReligion = pReligions->GetReligion(eReligion, kPlayer.GetID());

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T242823[ebp], edx
	mov	eax, DWORD PTR $T242823[ebp]
	push	eax
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pReligions$[ebp]
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pMyReligion$[ebp], eax

; 7265 : 
; 7266 : 	CvUnitEntry *pkUnitEntry = GC.getUnitInfo(eUnit);

	mov	edx, DWORD PTR _eUnit$[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR _pkUnitEntry$[ebp], eax

; 7267 : 	if (pkUnitEntry)

	cmp	DWORD PTR _pkUnitEntry$[ebp], 0
	je	$LN29@GetBestCit

; 7268 : 	{
; 7269 : 		// Religious unit?
; 7270 : 		if (pkUnitEntry->IsSpreadReligion() || pkUnitEntry->IsRemoveHeresy())

	mov	ecx, DWORD PTR _pkUnitEntry$[ebp]
	call	?IsSpreadReligion@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsSpreadReligion
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN27@GetBestCit
	mov	ecx, DWORD PTR _pkUnitEntry$[ebp]
	call	?IsRemoveHeresy@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsRemoveHeresy
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN28@GetBestCit
$LN27@GetBestCit:

; 7271 : 		{
; 7272 : 			bReligious = true;

	mov	BYTE PTR _bReligious$[ebp], 1
	jmp	SHORT $LN29@GetBestCit
$LN28@GetBestCit:

; 7273 : 		}
; 7274 : 	
; 7275 : 		// Great person?
; 7276 : 		else if (pkUnitEntry->GetSpecialUnitType() == eSpecialUnitGreatPerson)

	mov	ecx, DWORD PTR _pkUnitEntry$[ebp]
	call	?GetSpecialUnitType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetSpecialUnitType
	cmp	eax, DWORD PTR _eSpecialUnitGreatPerson$[ebp]
	jne	SHORT $LN29@GetBestCit

; 7277 : 		{
; 7278 : 			for (pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$[ebp]
	push	edx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN24@GetBestCit
$LN23@GetBestCit:
	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN24@GetBestCit:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	SHORT $LN22@GetBestCit

; 7279 : 			{
; 7280 : 				if (pLoopCity->IsCanPurchase(true/*bTestPurchaseCost*/, true/*bTestTrainable*/, eUnit, NO_BUILDING, NO_PROJECT, YIELD_FAITH))

	push	5
	push	-1
	push	-1
	mov	ecx, DWORD PTR _eUnit$[ebp]
	push	ecx
	push	1
	push	1
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN21@GetBestCit

; 7281 : 				{
; 7282 : 					return pLoopCity;

	mov	eax, DWORD PTR _pLoopCity$[ebp]
	jmp	$LN30@GetBestCit
$LN21@GetBestCit:

; 7283 : 				}
; 7284 : 			}

	jmp	SHORT $LN23@GetBestCit
$LN22@GetBestCit:

; 7285 : 			return NULL;

	xor	eax, eax
	jmp	$LN30@GetBestCit
$LN29@GetBestCit:

; 7286 : 		}
; 7287 : 	}
; 7288 : 
; 7289 : 	// If religious, try to buy in the city with the Great Mosque first if a Missionary
; 7290 : 	if (bReligious && pMyReligion)

	movzx	eax, BYTE PTR _bReligious$[ebp]
	test	eax, eax
	je	$LN20@GetBestCit
	cmp	DWORD PTR _pMyReligion$[ebp], 0
	je	$LN20@GetBestCit

; 7291 : 	{
; 7292 : 		for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN19@GetBestCit
$LN18@GetBestCit:
	push	0
	lea	edx, DWORD PTR _iLoop$[ebp]
	push	edx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN19@GetBestCit:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	SHORT $LN20@GetBestCit

; 7293 : 		{
; 7294 : 			if (pLoopCity->getOwner() != kPlayer.GetID())

	mov	eax, DWORD PTR _pLoopCity$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T242832[ebp], ecx
	mov	edx, DWORD PTR _kPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T242841[ebp], eax
	mov	ecx, DWORD PTR $T242832[ebp]
	cmp	ecx, DWORD PTR $T242841[ebp]
	je	SHORT $LN16@GetBestCit

; 7295 : 			{
; 7296 : 				continue;

	jmp	SHORT $LN18@GetBestCit
$LN16@GetBestCit:

; 7297 : 			}
; 7298 : 
; 7299 : 			if (pLoopCity->GetCityBuildings()->GetMissionaryExtraSpreads() < 1 || pkUnitEntry->GetReligionSpreads() < 1)

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetMissionaryExtraSpreads@CvCityBuildings@@QBEHXZ ; CvCityBuildings::GetMissionaryExtraSpreads
	cmp	eax, 1
	jl	SHORT $LN14@GetBestCit
	mov	ecx, DWORD PTR _pkUnitEntry$[ebp]
	call	?GetReligionSpreads@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetReligionSpreads
	cmp	eax, 1
	jge	SHORT $LN15@GetBestCit
$LN14@GetBestCit:

; 7300 : 			{
; 7301 : 				continue;

	jmp	SHORT $LN18@GetBestCit
$LN15@GetBestCit:

; 7302 : 			}
; 7303 : 
; 7304 : 			if (pLoopCity->GetCityReligions()->GetReligiousMajority() == eReligion)

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN13@GetBestCit

; 7305 : 			{
; 7306 : 				if(pLoopCity->IsCanPurchase(true, true, eUnit, NO_BUILDING, NO_PROJECT, YIELD_FAITH))

	push	5
	push	-1
	push	-1
	mov	edx, DWORD PTR _eUnit$[ebp]
	push	edx
	push	1
	push	1
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@GetBestCit

; 7307 : 				{
; 7308 : 					return pLoopCity;

	mov	eax, DWORD PTR _pLoopCity$[ebp]
	jmp	$LN30@GetBestCit
$LN13@GetBestCit:

; 7309 : 				}
; 7310 : 			}
; 7311 : 		}

	jmp	$LN18@GetBestCit
$LN20@GetBestCit:

; 7312 : 	}
; 7313 : 
; 7314 : 	// If religious, next try to buy in the holy city, assuming it hasn't been converted
; 7315 : 	if (bReligious && pMyReligion)

	movzx	ecx, BYTE PTR _bReligious$[ebp]
	test	ecx, ecx
	je	$LN11@GetBestCit
	cmp	DWORD PTR _pMyReligion$[ebp], 0
	je	$LN11@GetBestCit

; 7316 : 	{
; 7317 : 		CvPlot* pHolyCityPlot = GC.getMap().plot(pMyReligion->m_iHolyCityX, pMyReligion->m_iHolyCityY);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T242845[ebp], edx
	mov	eax, DWORD PTR _pMyReligion$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T242948[ebp], ecx
	mov	edx, DWORD PTR _pMyReligion$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T242947[ebp], eax
	cmp	DWORD PTR $T242947[ebp], -2147483647	; 80000001H
	je	SHORT $LN48@GetBestCit
	cmp	DWORD PTR $T242948[ebp], -2147483647	; 80000001H
	jne	SHORT $LN49@GetBestCit
$LN48@GetBestCit:
	mov	DWORD PTR _pHolyCityPlot$228091[ebp], 0
	jmp	$LN50@GetBestCit
$LN49@GetBestCit:
	mov	ecx, DWORD PTR $T242845[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T242852[ebp], dl
	mov	eax, DWORD PTR $T242845[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T242856[ebp], ecx
	movzx	edx, BYTE PTR $T242852[ebp]
	test	edx, edx
	je	SHORT $LN61@GetBestCit
	cmp	DWORD PTR $T242947[ebp], 0
	jge	SHORT $LN60@GetBestCit
	mov	eax, DWORD PTR $T242947[ebp]
	cdq
	idiv	DWORD PTR $T242856[ebp]
	add	edx, DWORD PTR $T242856[ebp]
	mov	DWORD PTR _iMapX$242945[ebp], edx
	jmp	SHORT $LN62@GetBestCit
	jmp	SHORT $LN61@GetBestCit
$LN60@GetBestCit:
	mov	eax, DWORD PTR $T242947[ebp]
	cmp	eax, DWORD PTR $T242856[ebp]
	jl	SHORT $LN61@GetBestCit
	mov	eax, DWORD PTR $T242947[ebp]
	cdq
	idiv	DWORD PTR $T242856[ebp]
	mov	DWORD PTR _iMapX$242945[ebp], edx
	jmp	SHORT $LN62@GetBestCit
$LN61@GetBestCit:
	mov	ecx, DWORD PTR $T242947[ebp]
	mov	DWORD PTR _iMapX$242945[ebp], ecx
$LN62@GetBestCit:
	mov	edx, DWORD PTR $T242845[ebp]
	mov	al, BYTE PTR [edx+4057]
	mov	BYTE PTR $T242867[ebp], al
	mov	ecx, DWORD PTR $T242845[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T242871[ebp], edx
	movzx	eax, BYTE PTR $T242867[ebp]
	test	eax, eax
	je	SHORT $LN71@GetBestCit
	cmp	DWORD PTR $T242948[ebp], 0
	jge	SHORT $LN70@GetBestCit
	mov	eax, DWORD PTR $T242948[ebp]
	cdq
	idiv	DWORD PTR $T242871[ebp]
	add	edx, DWORD PTR $T242871[ebp]
	mov	DWORD PTR _iMapY$242946[ebp], edx
	jmp	SHORT $LN72@GetBestCit
	jmp	SHORT $LN71@GetBestCit
$LN70@GetBestCit:
	mov	ecx, DWORD PTR $T242948[ebp]
	cmp	ecx, DWORD PTR $T242871[ebp]
	jl	SHORT $LN71@GetBestCit
	mov	eax, DWORD PTR $T242948[ebp]
	cdq
	idiv	DWORD PTR $T242871[ebp]
	mov	DWORD PTR _iMapY$242946[ebp], edx
	jmp	SHORT $LN72@GetBestCit
$LN71@GetBestCit:
	mov	edx, DWORD PTR $T242948[ebp]
	mov	DWORD PTR _iMapY$242946[ebp], edx
$LN72@GetBestCit:
	cmp	DWORD PTR _iMapX$242945[ebp], 0
	jl	SHORT $LN76@GetBestCit
	mov	eax, DWORD PTR $T242845[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T242885[ebp], ecx
	mov	edx, DWORD PTR _iMapX$242945[ebp]
	cmp	edx, DWORD PTR $T242885[ebp]
	jge	SHORT $LN76@GetBestCit
	cmp	DWORD PTR _iMapY$242946[ebp], 0
	jl	SHORT $LN76@GetBestCit
	mov	eax, DWORD PTR $T242845[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T242889[ebp], ecx
	mov	edx, DWORD PTR _iMapY$242946[ebp]
	cmp	edx, DWORD PTR $T242889[ebp]
	jge	SHORT $LN76@GetBestCit
	mov	DWORD PTR tv303[ebp], 1
	jmp	SHORT $LN74@GetBestCit
$LN76@GetBestCit:
	mov	DWORD PTR tv303[ebp], 0
$LN74@GetBestCit:
	cmp	DWORD PTR tv303[ebp], 0
	je	SHORT $LN52@GetBestCit
	mov	eax, DWORD PTR $T242845[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T242902[ebp], ecx
	mov	edx, DWORD PTR _iMapY$242946[ebp]
	imul	edx, DWORD PTR $T242902[ebp]
	add	edx, DWORD PTR _iMapX$242945[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T242845[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv288[ebp], edx
	jmp	SHORT $LN53@GetBestCit
$LN52@GetBestCit:
	mov	DWORD PTR tv288[ebp], 0
$LN53@GetBestCit:
	mov	ecx, DWORD PTR tv288[ebp]
	mov	DWORD PTR _pHolyCityPlot$228091[ebp], ecx
$LN50@GetBestCit:

; 7318 : 		if (pHolyCityPlot)

	cmp	DWORD PTR _pHolyCityPlot$228091[ebp], 0
	je	SHORT $LN11@GetBestCit

; 7319 : 		{
; 7320 : 			pHolyCity = pHolyCityPlot->getPlotCity();

	mov	ecx, DWORD PTR _pHolyCityPlot$228091[ebp]
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	DWORD PTR _pHolyCity$[ebp], eax

; 7321 : 
; 7322 : 			if (pHolyCity && (pHolyCity->getOwner() == kPlayer.GetID()))

	cmp	DWORD PTR _pHolyCity$[ebp], 0
	je	SHORT $LN11@GetBestCit
	mov	edx, DWORD PTR _pHolyCity$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T242962[ebp], eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T242971[ebp], edx
	mov	eax, DWORD PTR $T242962[ebp]
	cmp	eax, DWORD PTR $T242971[ebp]
	jne	SHORT $LN11@GetBestCit

; 7323 : 			{
; 7324 : 				if (pHolyCity->GetCityReligions()->GetReligiousMajority() == eReligion && pHolyCity->IsCanPurchase(true, true, eUnit, NO_BUILDING, NO_PROJECT, YIELD_FAITH))

	mov	ecx, DWORD PTR _pHolyCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN11@GetBestCit
	push	5
	push	-1
	push	-1
	mov	ecx, DWORD PTR _eUnit$[ebp]
	push	ecx
	push	1
	push	1
	mov	ecx, DWORD PTR _pHolyCity$[ebp]
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN11@GetBestCit

; 7325 : 				{
; 7326 : 					return pHolyCity;

	mov	eax, DWORD PTR _pHolyCity$[ebp]
	jmp	$LN30@GetBestCit
$LN11@GetBestCit:

; 7327 : 				}
; 7328 : 			}
; 7329 : 		}
; 7330 : 	}
; 7331 : 
; 7332 : 	// Now see if there is another city with our majority religion
; 7333 : 	for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN7@GetBestCit
$LN6@GetBestCit:
	push	0
	lea	ecx, DWORD PTR _iLoop$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN7@GetBestCit:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	SHORT $LN5@GetBestCit

; 7334 : 	{
; 7335 : 		if (bReligious && pMyReligion && pLoopCity == pHolyCity)

	movzx	edx, BYTE PTR _bReligious$[ebp]
	test	edx, edx
	je	SHORT $LN101@GetBestCit
	cmp	DWORD PTR _pMyReligion$[ebp], 0
	je	SHORT $LN101@GetBestCit
	mov	eax, DWORD PTR _pLoopCity$[ebp]
	cmp	eax, DWORD PTR _pHolyCity$[ebp]
	jne	SHORT $LN101@GetBestCit

; 7336 : 		{
; 7337 : 			continue;

	jmp	SHORT $LN6@GetBestCit

; 7338 : 		}
; 7339 : 
; 7340 : 		if (pLoopCity->getOwner() != kPlayer.GetID())

$LN101@GetBestCit:
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T242980[ebp], edx
	mov	eax, DWORD PTR _kPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T242989[ebp], ecx
	mov	edx, DWORD PTR $T242980[ebp]
	cmp	edx, DWORD PTR $T242989[ebp]
	je	SHORT $LN3@GetBestCit

; 7341 : 		{
; 7342 : 			continue;

	jmp	SHORT $LN6@GetBestCit
$LN3@GetBestCit:

; 7343 : 		}
; 7344 : 
; 7345 : 		if (pLoopCity->GetCityReligions()->GetReligiousMajority() == eReligion)

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eReligion$[ebp]
	jne	SHORT $LN2@GetBestCit

; 7346 : 		{
; 7347 : 			if(pLoopCity->IsCanPurchase(true, true, eUnit, NO_BUILDING, NO_PROJECT, YIELD_FAITH))

	push	5
	push	-1
	push	-1
	mov	eax, DWORD PTR _eUnit$[ebp]
	push	eax
	push	1
	push	1
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetBestCit

; 7348 : 			{
; 7349 : 				return pLoopCity;

	mov	eax, DWORD PTR _pLoopCity$[ebp]
	jmp	SHORT $LN30@GetBestCit
$LN2@GetBestCit:

; 7350 : 			}
; 7351 : 		}
; 7352 : 	}

	jmp	$LN6@GetBestCit
$LN5@GetBestCit:

; 7353 : 
; 7354 : 	return NULL;

	xor	eax, eax
$LN30@GetBestCit:

; 7355 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetBestCityFaithUnitPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4UnitTypes@@W4ReligionTypes@@@Z ENDP ; CvReligionAIHelpers::GetBestCityFaithUnitPurchase
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetBestCityFaithBuildingPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4BuildingTypes@@W4ReligionTypes@@@Z
_TEXT	SEGMENT
tv191 = -96						; size = 4
$T243125 = -92						; size = 4
$T243116 = -88						; size = 4
$T243107 = -84						; size = 4
$T243098 = -80						; size = 4
$T243084 = -72						; size = 4
$T243083 = -68						; size = 4
$T243046 = -64						; size = 4
$T243034 = -60						; size = 4
$T243030 = -53						; size = 1
$T243019 = -52						; size = 4
$T243015 = -45						; size = 1
_iMapY$243082 = -44					; size = 4
_iMapX$243081 = -40					; size = 4
$T243008 = -36						; size = 4
$T243004 = -32						; size = 4
$T242995 = -28						; size = 4
_pHolyCityPlot$228111 = -24				; size = 4
_pHolyCity$ = -20					; size = 4
_pReligions$ = -16					; size = 4
_pMyReligion$ = -12					; size = 4
_pLoopCity$ = -8					; size = 4
_iLoop$ = -4						; size = 4
_kPlayer$ = 8						; size = 4
_eBuilding$ = 12					; size = 4
_eReligion$ = 16					; size = 4
?GetBestCityFaithBuildingPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4BuildingTypes@@W4ReligionTypes@@@Z PROC ; CvReligionAIHelpers::GetBestCityFaithBuildingPurchase, COMDAT

; 7358 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H

; 7359 : 	CvCity *pHolyCity = NULL;

	mov	DWORD PTR _pHolyCity$[ebp], 0

; 7360 : 	CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T242995[ebp], eax
	mov	ecx, DWORD PTR $T242995[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pReligions$[ebp], eax

; 7361 : 	const CvReligion* pMyReligion = pReligions->GetReligion(eReligion, kPlayer.GetID());

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T243004[ebp], edx
	mov	eax, DWORD PTR $T243004[ebp]
	push	eax
	mov	ecx, DWORD PTR _eReligion$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pReligions$[ebp]
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pMyReligion$[ebp], eax

; 7362 : 
; 7363 : 	// Try to buy in the holy city first
; 7364 : 	if (pMyReligion)

	cmp	DWORD PTR _pMyReligion$[ebp], 0
	je	$LN9@GetBestCit@2

; 7365 : 	{
; 7366 : 		CvPlot* pHolyCityPlot = GC.getMap().plot(pMyReligion->m_iHolyCityX, pMyReligion->m_iHolyCityY);

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T243008[ebp], edx
	mov	eax, DWORD PTR _pMyReligion$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR $T243084[ebp], ecx
	mov	edx, DWORD PTR _pMyReligion$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T243083[ebp], eax
	cmp	DWORD PTR $T243083[ebp], -2147483647	; 80000001H
	je	SHORT $LN20@GetBestCit@2
	cmp	DWORD PTR $T243084[ebp], -2147483647	; 80000001H
	jne	SHORT $LN21@GetBestCit@2
$LN20@GetBestCit@2:
	mov	DWORD PTR _pHolyCityPlot$228111[ebp], 0
	jmp	$LN22@GetBestCit@2
$LN21@GetBestCit@2:
	mov	ecx, DWORD PTR $T243008[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T243015[ebp], dl
	mov	eax, DWORD PTR $T243008[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T243019[ebp], ecx
	movzx	edx, BYTE PTR $T243015[ebp]
	test	edx, edx
	je	SHORT $LN33@GetBestCit@2
	cmp	DWORD PTR $T243083[ebp], 0
	jge	SHORT $LN32@GetBestCit@2
	mov	eax, DWORD PTR $T243083[ebp]
	cdq
	idiv	DWORD PTR $T243019[ebp]
	add	edx, DWORD PTR $T243019[ebp]
	mov	DWORD PTR _iMapX$243081[ebp], edx
	jmp	SHORT $LN34@GetBestCit@2
	jmp	SHORT $LN33@GetBestCit@2
$LN32@GetBestCit@2:
	mov	eax, DWORD PTR $T243083[ebp]
	cmp	eax, DWORD PTR $T243019[ebp]
	jl	SHORT $LN33@GetBestCit@2
	mov	eax, DWORD PTR $T243083[ebp]
	cdq
	idiv	DWORD PTR $T243019[ebp]
	mov	DWORD PTR _iMapX$243081[ebp], edx
	jmp	SHORT $LN34@GetBestCit@2
$LN33@GetBestCit@2:
	mov	ecx, DWORD PTR $T243083[ebp]
	mov	DWORD PTR _iMapX$243081[ebp], ecx
$LN34@GetBestCit@2:
	mov	edx, DWORD PTR $T243008[ebp]
	mov	al, BYTE PTR [edx+4057]
	mov	BYTE PTR $T243030[ebp], al
	mov	ecx, DWORD PTR $T243008[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T243034[ebp], edx
	movzx	eax, BYTE PTR $T243030[ebp]
	test	eax, eax
	je	SHORT $LN43@GetBestCit@2
	cmp	DWORD PTR $T243084[ebp], 0
	jge	SHORT $LN42@GetBestCit@2
	mov	eax, DWORD PTR $T243084[ebp]
	cdq
	idiv	DWORD PTR $T243034[ebp]
	add	edx, DWORD PTR $T243034[ebp]
	mov	DWORD PTR _iMapY$243082[ebp], edx
	jmp	SHORT $LN44@GetBestCit@2
	jmp	SHORT $LN43@GetBestCit@2
$LN42@GetBestCit@2:
	mov	ecx, DWORD PTR $T243084[ebp]
	cmp	ecx, DWORD PTR $T243034[ebp]
	jl	SHORT $LN43@GetBestCit@2
	mov	eax, DWORD PTR $T243084[ebp]
	cdq
	idiv	DWORD PTR $T243034[ebp]
	mov	DWORD PTR _iMapY$243082[ebp], edx
	jmp	SHORT $LN44@GetBestCit@2
$LN43@GetBestCit@2:
	mov	edx, DWORD PTR $T243084[ebp]
	mov	DWORD PTR _iMapY$243082[ebp], edx
$LN44@GetBestCit@2:
	mov	eax, DWORD PTR _iMapY$243082[ebp]
	push	eax
	mov	ecx, DWORD PTR _iMapX$243081[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T243008[ebp]
	call	?isPlot@CvMap@@QBEHHH@Z			; CvMap::isPlot
	test	eax, eax
	je	SHORT $LN24@GetBestCit@2
	mov	edx, DWORD PTR $T243008[ebp]
	mov	eax, DWORD PTR [edx+4020]
	mov	DWORD PTR $T243046[ebp], eax
	mov	ecx, DWORD PTR _iMapY$243082[ebp]
	imul	ecx, DWORD PTR $T243046[ebp]
	add	ecx, DWORD PTR _iMapX$243081[ebp]
	imul	ecx, 484				; 000001e4H
	mov	edx, DWORD PTR $T243008[ebp]
	add	ecx, DWORD PTR [edx+4068]
	mov	DWORD PTR tv191[ebp], ecx
	jmp	SHORT $LN25@GetBestCit@2
$LN24@GetBestCit@2:
	mov	DWORD PTR tv191[ebp], 0
$LN25@GetBestCit@2:
	mov	eax, DWORD PTR tv191[ebp]
	mov	DWORD PTR _pHolyCityPlot$228111[ebp], eax
$LN22@GetBestCit@2:

; 7367 : 		if (pHolyCityPlot)

	cmp	DWORD PTR _pHolyCityPlot$228111[ebp], 0
	je	SHORT $LN9@GetBestCit@2

; 7368 : 		{
; 7369 : 			pHolyCity = pHolyCityPlot->getPlotCity();

	mov	ecx, DWORD PTR _pHolyCityPlot$228111[ebp]
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	DWORD PTR _pHolyCity$[ebp], eax

; 7370 : 
; 7371 : 			if (pHolyCity && (pHolyCity->getOwner() == kPlayer.GetID()) && pHolyCity->IsCanPurchase(true, true, NO_UNIT, eBuilding, NO_PROJECT, YIELD_FAITH))

	cmp	DWORD PTR _pHolyCity$[ebp], 0
	je	SHORT $LN9@GetBestCit@2
	mov	ecx, DWORD PTR _pHolyCity$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T243098[ebp], edx
	mov	eax, DWORD PTR _kPlayer$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T243107[ebp], ecx
	mov	edx, DWORD PTR $T243098[ebp]
	cmp	edx, DWORD PTR $T243107[ebp]
	jne	SHORT $LN9@GetBestCit@2
	push	5
	push	-1
	mov	eax, DWORD PTR _eBuilding$[ebp]
	push	eax
	push	-1
	push	1
	push	1
	mov	ecx, DWORD PTR _pHolyCity$[ebp]
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@GetBestCit@2

; 7372 : 			{
; 7373 : 				return pHolyCity;

	mov	eax, DWORD PTR _pHolyCity$[ebp]
	jmp	SHORT $LN10@GetBestCit@2
$LN9@GetBestCit@2:

; 7374 : 			}
; 7375 : 		}
; 7376 : 	}
; 7377 : 
; 7378 : 	// Now see if there is another city with our majority religion
; 7379 : 	int iLoop;
; 7380 : 	CvCity* pLoopCity;
; 7381 : 	for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$[ebp]
	push	edx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
	jmp	SHORT $LN6@GetBestCit@2
$LN5@GetBestCit@2:
	push	0
	lea	eax, DWORD PTR _iLoop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$[ebp], eax
$LN6@GetBestCit@2:
	cmp	DWORD PTR _pLoopCity$[ebp], 0
	je	SHORT $LN4@GetBestCit@2

; 7382 : 	{
; 7383 : 		if(pLoopCity == pHolyCity)

	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	cmp	ecx, DWORD PTR _pHolyCity$[ebp]
	jne	SHORT $LN65@GetBestCit@2

; 7384 : 		{
; 7385 : 			continue;

	jmp	SHORT $LN5@GetBestCit@2

; 7386 : 		}
; 7387 : 
; 7388 : 		if(pLoopCity->getOwner() != kPlayer.GetID())

$LN65@GetBestCit@2:
	mov	edx, DWORD PTR _pLoopCity$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR $T243116[ebp], eax
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T243125[ebp], edx
	mov	eax, DWORD PTR $T243116[ebp]
	cmp	eax, DWORD PTR $T243125[ebp]
	je	SHORT $LN2@GetBestCit@2

; 7389 : 		{
; 7390 : 			continue;

	jmp	SHORT $LN5@GetBestCit@2
$LN2@GetBestCit@2:

; 7391 : 		}
; 7392 : 
; 7393 : 		if(pLoopCity->IsCanPurchase(true, true, NO_UNIT, eBuilding, NO_PROJECT, YIELD_FAITH))

	push	5
	push	-1
	mov	ecx, DWORD PTR _eBuilding$[ebp]
	push	ecx
	push	-1
	push	1
	push	1
	mov	ecx, DWORD PTR _pLoopCity$[ebp]
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetBestCit@2

; 7394 : 		{
; 7395 : 			return pLoopCity;

	mov	eax, DWORD PTR _pLoopCity$[ebp]
	jmp	SHORT $LN10@GetBestCit@2
$LN1@GetBestCit@2:

; 7396 : 		}
; 7397 : 	}

	jmp	SHORT $LN5@GetBestCit@2
$LN4@GetBestCit@2:

; 7398 : 
; 7399 : 	return NULL;

	xor	eax, eax
$LN10@GetBestCit@2:

; 7400 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetBestCityFaithBuildingPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4BuildingTypes@@W4ReligionTypes@@@Z ENDP ; CvReligionAIHelpers::GetBestCityFaithBuildingPurchase
_TEXT	ENDS
PUBLIC	?DoesUnitPassFaithPurchaseCheck@CvReligionAIHelpers@@YA_NAAVCvPlayer@@W4UnitTypes@@@Z ; CvReligionAIHelpers::DoesUnitPassFaithPurchaseCheck
; Function compile flags: /Odtp
;	COMDAT ?DoesUnitPassFaithPurchaseCheck@CvReligionAIHelpers@@YA_NAAVCvPlayer@@W4UnitTypes@@@Z
_TEXT	SEGMENT
$T243158 = -40						; size = 4
$T243149 = -36						; size = 4
$T243140 = -32						; size = 4
$T243131 = -28						; size = 4
_eReligion$228134 = -24					; size = 4
_pReligions$228133 = -20				; size = 4
_pLoopCity$228132 = -16					; size = 4
_iLoop$228131 = -12					; size = 4
_pkUnitEntry$ = -8					; size = 4
_bRtnValue$ = -1					; size = 1
_kPlayer$ = 8						; size = 4
_eUnit$ = 12						; size = 4
?DoesUnitPassFaithPurchaseCheck@CvReligionAIHelpers@@YA_NAAVCvPlayer@@W4UnitTypes@@@Z PROC ; CvReligionAIHelpers::DoesUnitPassFaithPurchaseCheck, COMDAT

; 7403 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H

; 7404 : 	bool bRtnValue = true;

	mov	BYTE PTR _bRtnValue$[ebp], 1

; 7405 : 
; 7406 : 	CvUnitEntry *pkUnitEntry = GC.getUnitInfo(eUnit);

	mov	eax, DWORD PTR _eUnit$[ebp]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	DWORD PTR _pkUnitEntry$[ebp], eax

; 7407 : 	if (pkUnitEntry)

	cmp	DWORD PTR _pkUnitEntry$[ebp], 0
	je	$LN10@DoesUnitPa

; 7408 : 	{
; 7409 : 		if (pkUnitEntry->IsSpreadReligion() || pkUnitEntry->IsRemoveHeresy())

	mov	ecx, DWORD PTR _pkUnitEntry$[ebp]
	call	?IsSpreadReligion@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsSpreadReligion
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN8@DoesUnitPa
	mov	ecx, DWORD PTR _pkUnitEntry$[ebp]
	call	?IsRemoveHeresy@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsRemoveHeresy
	movzx	edx, al
	test	edx, edx
	je	$LN10@DoesUnitPa
$LN8@DoesUnitPa:

; 7410 : 		{
; 7411 : 			bRtnValue = false;

	mov	BYTE PTR _bRtnValue$[ebp], 0

; 7412 : 
; 7413 : 			// Religious unit, have to find a city with the majority religion we started
; 7414 : 			// Now see if there is another city with our majority religion
; 7415 : 			int iLoop;
; 7416 : 			CvCity* pLoopCity;
; 7417 : 
; 7418 : 			CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T243131[ebp], eax
	mov	ecx, DWORD PTR $T243131[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	DWORD PTR _pReligions$228133[ebp], eax

; 7419 : 			ReligionTypes eReligion = pReligions->GetReligionCreatedByPlayer(kPlayer.GetID());

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T243140[ebp], edx
	mov	eax, DWORD PTR $T243140[ebp]
	push	eax
	mov	ecx, DWORD PTR _pReligions$228133[ebp]
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eReligion$228134[ebp], eax

; 7420 : 			if (eReligion > RELIGION_PANTHEON)

	cmp	DWORD PTR _eReligion$228134[ebp], 0
	jle	SHORT $LN10@DoesUnitPa

; 7421 : 			{
; 7422 : 				for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$228131[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pLoopCity$228132[ebp], eax
	jmp	SHORT $LN6@DoesUnitPa
$LN5@DoesUnitPa:
	push	0
	lea	edx, DWORD PTR _iLoop$228131[ebp]
	push	edx
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pLoopCity$228132[ebp], eax
$LN6@DoesUnitPa:
	cmp	DWORD PTR _pLoopCity$228132[ebp], 0
	je	SHORT $LN10@DoesUnitPa

; 7423 : 				{
; 7424 : 					if (pLoopCity->getOwner() != kPlayer.GetID())

	mov	eax, DWORD PTR _pLoopCity$228132[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR $T243149[ebp], ecx
	mov	edx, DWORD PTR _kPlayer$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR $T243158[ebp], eax
	mov	ecx, DWORD PTR $T243149[ebp]
	cmp	ecx, DWORD PTR $T243158[ebp]
	je	SHORT $LN3@DoesUnitPa

; 7425 : 					{
; 7426 : 						continue;

	jmp	SHORT $LN5@DoesUnitPa
$LN3@DoesUnitPa:

; 7427 : 					}
; 7428 : 
; 7429 : 					if (pLoopCity->GetCityReligions()->GetReligiousMajority() == eReligion)

	mov	ecx, DWORD PTR _pLoopCity$228132[ebp]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eReligion$228134[ebp]
	jne	SHORT $LN2@DoesUnitPa

; 7430 : 					{
; 7431 : 						if(pLoopCity->IsCanPurchase(false /*bTestPurchaseCost*/, true, eUnit, NO_BUILDING, NO_PROJECT, YIELD_FAITH))

	push	5
	push	-1
	push	-1
	mov	edx, DWORD PTR _eUnit$[ebp]
	push	edx
	push	1
	push	0
	mov	ecx, DWORD PTR _pLoopCity$228132[ebp]
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@DoesUnitPa

; 7432 : 						{
; 7433 : 							return true;

	mov	al, 1
	jmp	SHORT $LN11@DoesUnitPa
$LN2@DoesUnitPa:

; 7434 : 						}
; 7435 : 					}
; 7436 : 				}

	jmp	SHORT $LN5@DoesUnitPa
$LN10@DoesUnitPa:

; 7437 : 			}
; 7438 : 		}
; 7439 : 	}
; 7440 : 
; 7441 : 	return bRtnValue;

	mov	al, BYTE PTR _bRtnValue$[ebp]
$LN11@DoesUnitPa:

; 7442 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoesUnitPassFaithPurchaseCheck@CvReligionAIHelpers@@YA_NAAVCvPlayer@@W4UnitTypes@@@Z ENDP ; CvReligionAIHelpers::DoesUnitPassFaithPurchaseCheck
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
_TEXT	ENDS
;	COMDAT ??1?$FObjectHandle@VCvUnit@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$FObjectHandle@VCvUnit@@@@QAE@XZ PROC		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>, COMDAT
; _this$ = ecx

; 146  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 147  : 		if(m_target) 

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@FObjectHan

; 148  : 		{
; 149  : 			m_target->getDestructionNotification().removeTarget(*this);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN2@FObjectHan:

; 150  : 		}
; 151  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$FObjectHandle@VCvUnit@@@@QAE@XZ ENDP		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -44						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::~vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 559  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAEXXZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Tidy

; 560  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ
__ehhandler$??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::~vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >
PUBLIC	??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@ ; `string'
EXTRN	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z:PROC ; FireMallocAlignedNoTracking
;	COMDAT ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@ DB 'd:\sources\'
	DB	'lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\FF'
	DB	'astVector.h', 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T243232 = -20						; size = 4
_pRet$243228 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<CvReligion,16,0,297,0>::FStaticVector<CvReligion,16,0,297,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T243232[ebp], edx
	cmp	DWORD PTR $T243232[ebp], 16		; 00000010H
	jbe	SHORT $LN7@FStaticVec
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T243232[ebp]
	imul	eax, 328				; 00000148H
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$243228[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T243232[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec
$LN7@FStaticVec:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$243228[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 16			; 00000010H
$LN8@FStaticVec:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$243228[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@VCvReligion@@$0A@@@QAE@XZ ; BaseVector<CvReligion,0>::~BaseVector<CvReligion,0>
__ehhandler$??0?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<CvReligion,16,0,297,0>::FStaticVector<CvReligion,16,0,297,0>
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??0CvReligion@@QAE@ABV0@@Z			; CvReligion::CvReligion
PUBLIC	?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligion,16,0,297,0>::GrowSize
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z$0
__ehfuncinfo$?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	ENDS
;	COMDAT ?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z
_TEXT	SEGMENT
tv157 = -68						; size = 4
tv149 = -64						; size = 4
_this$ = -60						; size = 4
$T243242 = -20						; size = 4
$T243241 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_element$ = 8						; size = 4
?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z PROC ; FStaticVector<CvReligion,16,0,297,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5260], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN43@push_back

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligion,16,0,297,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN43@push_back:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 328				; 00000148H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR $T243242[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T243242[ebp], 0
	je	SHORT $LN4@push_back
	mov	eax, DWORD PTR _element$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T243242[ebp]
	call	??0CvReligion@@QAE@ABV0@@Z
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN5@push_back
$LN4@push_back:
	mov	DWORD PTR tv149[ebp], 0
$LN5@push_back:
	mov	ecx, DWORD PTR tv149[ebp]
	mov	DWORD PTR $T243241[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1

; 681  : 		return m_uiCurrSize++;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv157[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR tv157[ebp]

; 682  : 	};

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z$0:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 328				; 00000148H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR $T243242[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z ENDP ; FStaticVector<CvReligion,16,0,297,0>::push_back
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 63   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 64   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
_TEXT	ENDS
;	COMDAT ?clear@?$BaseVector@VCvReligion@@$0A@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T243327 = -16						; size = 4
$T243326 = -12						; size = 4
$T243313 = -8						; size = 4
_i$243316 = -4						; size = 4
?clear@?$BaseVector@VCvReligion@@$0A@@@QAEXXZ PROC	; BaseVector<CvReligion,0>::clear, COMDAT
; _this$ = ecx

; 120  : 	void clear(){

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 121  : 		Destroy(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T243327[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T243326[ebp], eax
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN7@clear
	mov	DWORD PTR _i$243316[ebp], 0
	jmp	SHORT $LN5@clear
$LN4@clear:
	mov	edx, DWORD PTR _i$243316[ebp]
	add	edx, 1
	mov	DWORD PTR _i$243316[ebp], edx
$LN5@clear:
	mov	eax, DWORD PTR _i$243316[ebp]
	cmp	eax, DWORD PTR $T243327[ebp]
	jae	SHORT $LN7@clear
	mov	ecx, DWORD PTR _i$243316[ebp]
	imul	ecx, 328				; 00000148H
	add	ecx, DWORD PTR $T243326[ebp]
	mov	DWORD PTR $T243313[ebp], ecx
	mov	ecx, DWORD PTR $T243313[ebp]
	add	ecx, 152				; 00000098H
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN10@clear
	mov	eax, DWORD PTR $T243313[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@clear:
	jmp	SHORT $LN4@clear
$LN7@clear:

; 122  : 		m_uiCurrSize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 123  : 	};

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$BaseVector@VCvReligion@@$0A@@@QAEXXZ ENDP	; BaseVector<CvReligion,0>::clear
_TEXT	ENDS
PUBLIC	??1?$BaseVector@VCvReligionInCity@@$0A@@@QAE@XZ	; BaseVector<CvReligionInCity,0>::~BaseVector<CvReligionInCity,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T243340 = -20						; size = 4
_pRet$243336 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<CvReligionInCity,8,0,297,0>::FStaticVector<CvReligionInCity,8,0,297,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 8

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T243340[ebp], edx
	cmp	DWORD PTR $T243340[ebp], 8
	jbe	SHORT $LN7@FStaticVec@2
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T243340[ebp]
	imul	eax, 24					; 00000018H
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$243336[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T243340[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec@2
$LN7@FStaticVec@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$243336[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 8
$LN8@FStaticVec@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$243336[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@VCvReligionInCity@@$0A@@@QAE@XZ ; BaseVector<CvReligionInCity,0>::~BaseVector<CvReligionInCity,0>
__ehhandler$??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<CvReligionInCity,8,0,297,0>::FStaticVector<CvReligionInCity,8,0,297,0>
EXTRN	?FireFreeAlignedNoTracking@@YAXPAX@Z:PROC	; FireFreeAlignedNoTracking
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T243371 = -24						; size = 4
$T243370 = -20						; size = 4
_i$243365 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<CvReligionInCity,8,0,297,0>::~FStaticVector<CvReligionInCity,8,0,297,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T243371[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T243370[ebp], eax
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN5@FStaticVec@3
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@FStaticVec@3
	mov	DWORD PTR _i$243365[ebp], 0
	jmp	SHORT $LN10@FStaticVec@3
$LN9@FStaticVec@3:
	mov	eax, DWORD PTR _i$243365[ebp]
	add	eax, 1
	mov	DWORD PTR _i$243365[ebp], eax
$LN10@FStaticVec@3:
	mov	ecx, DWORD PTR _i$243365[ebp]
	cmp	ecx, DWORD PTR $T243371[ebp]
	jae	SHORT $LN5@FStaticVec@3
	jmp	SHORT $LN9@FStaticVec@3
$LN5@FStaticVec@3:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T243370[ebp], edx
	je	SHORT $LN1@FStaticVec@3
	mov	eax, DWORD PTR $T243370[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@FStaticVec@3:

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@VCvReligionInCity@@$0A@@@QAE@XZ ; BaseVector<CvReligionInCity,0>::~BaseVector<CvReligionInCity,0>
__ehhandler$??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<CvReligionInCity,8,0,297,0>::~FStaticVector<CvReligionInCity,8,0,297,0>
PUBLIC	?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z
_TEXT	SEGMENT
tv141 = -52						; size = 4
tv132 = -48						; size = 4
_this$ = -44						; size = 4
$T243383 = -4						; size = 4
_element$ = 8						; size = 4
?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z PROC ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+204], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN35@push_back@2

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN35@push_back@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	mov	DWORD PTR $T243383[ebp], ecx
	je	SHORT $LN4@push_back@2
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR $T243383[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx+20], eax
	mov	ecx, DWORD PTR $T243383[ebp]
	mov	DWORD PTR tv132[ebp], ecx
	jmp	SHORT $LN5@push_back@2
$LN4@push_back@2:
	mov	DWORD PTR tv132[ebp], 0
$LN5@push_back@2:

; 681  : 		return m_uiCurrSize++;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv141[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR tv141[ebp]

; 682  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ENDP ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?erase@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEXPAVCvReligionInCity@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
_i$228221 = -8						; size = 4
_uIndex$ = -4						; size = 4
_it$ = 8						; size = 4
?erase@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEXPAVCvReligionInCity@@@Z PROC ; FStaticVector<CvReligionInCity,8,0,297,0>::erase, COMDAT
; _this$ = ecx

; 702  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 703  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+204], 0

; 704  : 
; 705  : 		unsigned int uIndex = it - m_pData;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _it$[ebp]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	mov	DWORD PTR _uIndex$[ebp], eax

; 706  : 
; 707  :         for(unsigned int i = uIndex; i + 1< m_uiCurrSize; ++i)

	mov	edx, DWORD PTR _uIndex$[ebp]
	mov	DWORD PTR _i$228221[ebp], edx
	jmp	SHORT $LN3@erase
$LN2@erase:
	mov	eax, DWORD PTR _i$228221[ebp]
	add	eax, 1
	mov	DWORD PTR _i$228221[ebp], eax
$LN3@erase:
	mov	ecx, DWORD PTR _i$228221[ebp]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+4]
	jae	SHORT $LN1@erase

; 708  :         {
; 709  :             m_pData[i] = m_pData[i+1];

	mov	eax, DWORD PTR _i$228221[ebp]
	add	eax, 1
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, eax
	mov	eax, DWORD PTR _i$228221[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax
	mov	edx, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], edx

; 710  :         }

	jmp	SHORT $LN2@erase
$LN1@erase:

; 711  : 		
; 712  : 		--m_uiCurrSize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 713  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEXPAVCvReligionInCity@@@Z ENDP ; FStaticVector<CvReligionInCity,8,0,297,0>::erase
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE_NI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Buy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__unwindtable$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv88 = -132						; size = 4
tv145 = -128						; size = 4
_this$ = -124						; size = 4
$T243458 = -30						; size = 1
$T243445 = -29						; size = 1
$T243441 = -28						; size = 4
$T243434 = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T243458[ebp]
	mov	DWORD PTR $T243434[ebp], eax
	lea	ecx, DWORD PTR $T243445[ebp]
	mov	DWORD PTR $T243441[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv145[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv88[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 471  : 		_Buy(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE_NI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Buy

; 472  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
PUBLIC	??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z$5
__unwindtable$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv215 = -212						; size = 4
tv148 = -208						; size = 4
tv172 = -204						; size = 4
_this$ = -200						; size = 4
$T243620 = -164						; size = 4
$T243619 = -160						; size = 4
$T243618 = -156						; size = 4
$T243608 = -152						; size = 4
$T243607 = -148						; size = 4
__Cat$243616 = -143					; size = 1
$T243614 = -142						; size = 1
$T243613 = -141						; size = 1
$T243587 = -140						; size = 4
$T243578 = -136						; size = 4
$T243547 = -48						; size = 4
$T243543 = -42						; size = 1
$T243530 = -41						; size = 1
$T243526 = -40						; size = 4
$T243519 = -32						; size = 4
$T243510 = -28						; size = 4
$T243509 = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx

; 500  : 		{	// construct by copying _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T243543[ebp]
	mov	DWORD PTR $T243519[ebp], eax
	lea	ecx, DWORD PTR $T243530[ebp]
	mov	DWORD PTR $T243526[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv172[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv148[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 501  : 		if (_Buy(_Right.size()))

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	mov	DWORD PTR $T243547[ebp], eax
	mov	ecx, DWORD PTR $T243547[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE_NI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Buy
	movzx	edx, al
	test	edx, edx
	je	$LN3@vector

; 502  : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 1

; 503  : 			_Mylast = _Ucopy(_Right.begin(), _Right.end(), _Myfirst);

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T243578[ebp], ecx
	mov	edx, DWORD PTR $T243578[ebp]
	mov	DWORD PTR $T243509[ebp], edx
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T243587[ebp], ecx
	mov	edx, DWORD PTR $T243587[ebp]
	mov	DWORD PTR $T243510[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T243620[ebp], ecx
	mov	edx, DWORD PTR $T243509[ebp]
	mov	DWORD PTR $T243619[ebp], edx
	mov	eax, DWORD PTR $T243510[ebp]
	mov	DWORD PTR $T243618[ebp], eax
	mov	ecx, DWORD PTR $T243620[ebp]
	mov	DWORD PTR $T243608[ebp], ecx
	mov	edx, DWORD PTR $T243618[ebp]
	mov	DWORD PTR $T243607[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T243613[ebp], al
	mov	cl, BYTE PTR __Cat$243616[ebp]
	mov	BYTE PTR $T243614[ebp], cl
	movzx	edx, BYTE PTR $T243613[ebp]
	push	edx
	movzx	eax, BYTE PTR $T243614[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T243608[ebp]
	push	edx
	mov	eax, DWORD PTR $T243619[ebp]
	push	eax
	mov	ecx, DWORD PTR $T243607[ebp]
	push	ecx
	call	??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
	add	esp, 24					; 00000018H
	mov	DWORD PTR tv215[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv215[ebp]
	mov	DWORD PTR [edx+8], eax
	jmp	SHORT $LN5@vector
__catch$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z$0:

; 504  : 			_CATCH_ALL
; 505  : 			_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy

; 506  : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 507  : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN3@vector
	ret	0
$LN5@vector:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN3@vector:

; 508  : 		}

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-216]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -48						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 559  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy

; 560  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
__ehhandler$??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
PUBLIC	??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
PUBLIC	??$_Allocate@W4BeliefTypes@@@std@@YAPAW4BeliefTypes@@IPAW41@@Z ; std::_Allocate<enum BeliefTypes>
PUBLIC	?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z$4
__ehfuncinfo$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
tv170 = -204						; size = 4
tv168 = -200						; size = 4
_this$ = -196						; size = 4
$T244005 = -192						; size = 4
$T244004 = -188						; size = 4
$T244000 = -184						; size = 4
$T243999 = -180						; size = 4
$T243981 = -176						; size = 4
$T243980 = -172						; size = 4
$T243964 = -168						; size = 4
__Cat$243988 = -162					; size = 1
$T243985 = -161						; size = 1
$T243932 = -160						; size = 4
$T243931 = -156						; size = 4
$T243912 = -152						; size = 4
$T243895 = -145						; size = 1
$T243894 = -144						; size = 4
$T243884 = -140						; size = 4
$T243883 = -136						; size = 4
__Cat$243927 = -130					; size = 1
$T243924 = -129						; size = 1
$T243923 = -128						; size = 1
__Cat$243918 = -127					; size = 1
$T243916 = -126						; size = 1
$T243915 = -125						; size = 1
$T243853 = -124						; size = 4
$T243837 = -120						; size = 4
__Count$243806 = -36					; size = 4
$T243787 = -32						; size = 4
$T243786 = -28						; size = 4
__Size$228284 = -24					; size = 4
__Ptr$228275 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve, COMDAT
; _this$ = ecx

; 602  : 		{	// determine new minimum length of allocated storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 188				; 000000bcH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 603  : 		if (max_size() < _Count)

	mov	DWORD PTR __Count$243806[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$243806[ebp], 0
	jbe	SHORT $LN16@reserve
	mov	eax, DWORD PTR __Count$243806[ebp]
	mov	DWORD PTR tv168[ebp], eax
	jmp	SHORT $LN12@reserve
$LN16@reserve:
	mov	DWORD PTR tv168[ebp], 1
$LN12@reserve:
	mov	ecx, DWORD PTR tv168[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN5@reserve

; 604  : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Xlen
	jmp	$LN7@reserve
$LN5@reserve:

; 605  : 		else if (capacity() < _Count)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN26@reserve
	mov	DWORD PTR tv170[ebp], 0
	jmp	SHORT $LN24@reserve
$LN26@reserve:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	DWORD PTR tv170[ebp], edx
$LN24@reserve:
	mov	eax, DWORD PTR tv170[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN7@reserve

; 606  : 			{	// not enough room, reallocate
; 607  : 			pointer _Ptr = this->_Alval.allocate(_Count);

	push	0
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	call	??$_Allocate@W4BeliefTypes@@@std@@YAPAW4BeliefTypes@@IPAW41@@Z ; std::_Allocate<enum BeliefTypes>
	add	esp, 8
	mov	DWORD PTR __Ptr$228275[ebp], eax

; 608  : 
; 609  : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 610  : 			_Umove(begin(), end(), _Ptr);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T243837[ebp], eax
	mov	ecx, DWORD PTR $T243837[ebp]
	mov	DWORD PTR $T243786[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T243853[ebp], eax
	mov	ecx, DWORD PTR $T243853[ebp]
	mov	DWORD PTR $T243787[ebp], ecx
	mov	edx, DWORD PTR $T243786[ebp]
	mov	DWORD PTR $T243932[ebp], edx
	mov	eax, DWORD PTR $T243787[ebp]
	mov	DWORD PTR $T243931[ebp], eax
	mov	ecx, DWORD PTR __Ptr$228275[ebp]
	mov	DWORD PTR $T243912[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T243915[ebp], dl
	mov	al, BYTE PTR __Cat$243918[ebp]
	mov	BYTE PTR $T243916[ebp], al
	mov	cl, BYTE PTR $T243915[ebp]
	mov	BYTE PTR $T243895[ebp], cl
	mov	edx, DWORD PTR $T243912[ebp]
	mov	DWORD PTR $T243894[ebp], edx
	mov	eax, DWORD PTR $T243894[ebp]
	mov	DWORD PTR $T243884[ebp], eax
	mov	ecx, DWORD PTR $T243931[ebp]
	mov	DWORD PTR $T243883[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T243923[ebp], dl
	mov	al, BYTE PTR __Cat$243927[ebp]
	mov	BYTE PTR $T243924[ebp], al
	movzx	ecx, BYTE PTR $T243923[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T243924[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T243884[ebp]
	push	ecx
	mov	edx, DWORD PTR $T243932[ebp]
	push	edx
	mov	eax, DWORD PTR $T243883[ebp]
	push	eax
	call	??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
	add	esp, 24					; 00000018H
	jmp	SHORT $LN8@reserve
__catch$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z$0:

; 611  : 			_CATCH_ALL
; 612  : 			this->_Alval.deallocate(_Ptr, _Count);

	mov	ecx, DWORD PTR __Ptr$228275[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 613  : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 614  : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN61@reserve
	ret	0
$LN8@reserve:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 615  : 
; 616  : 			size_type _Size = size();

$LN61@reserve:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	mov	DWORD PTR __Size$228284[ebp], ecx

; 617  : 			if (_Myfirst != 0)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	$LN1@reserve

; 618  : 				{	// destroy and deallocate old array
; 619  : 				_Destroy(_Myfirst, _Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T244000[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T243999[ebp], eax
	mov	ecx, DWORD PTR $T244000[ebp]
	mov	DWORD PTR $T243981[ebp], ecx
	mov	edx, DWORD PTR $T243999[ebp]
	mov	DWORD PTR $T243980[ebp], edx
	mov	al, BYTE PTR __Cat$243988[ebp]
	mov	BYTE PTR $T243985[ebp], al
	mov	ecx, DWORD PTR $T243980[ebp]
	mov	DWORD PTR $T243964[ebp], ecx
	jmp	SHORT $LN71@reserve
$LN70@reserve:
	mov	edx, DWORD PTR $T243964[ebp]
	add	edx, 4
	mov	DWORD PTR $T243964[ebp], edx
$LN71@reserve:
	mov	eax, DWORD PTR $T243964[ebp]
	cmp	eax, DWORD PTR $T243981[ebp]
	je	SHORT $LN63@reserve
	jmp	SHORT $LN70@reserve
$LN63@reserve:

; 620  : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	mov	DWORD PTR $T244005[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T244004[ebp], edx
	mov	eax, DWORD PTR $T244004[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@reserve:

; 621  : 				}
; 622  : 
; 623  :  #if _HAS_ITERATOR_DEBUGGING
; 624  : 			this->_Orphan_all();
; 625  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 626  : 
; 627  : 			_Myend = _Ptr + _Count;

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Ptr$228275[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 628  : 			_Mylast = _Ptr + _Size;

	mov	edx, DWORD PTR __Size$228284[ebp]
	mov	eax, DWORD PTR __Ptr$228275[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 629  : 			_Myfirst = _Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$228275[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN7@reserve:

; 630  : 			}
; 631  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve
PUBLIC	?insert@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@ABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::insert
PUBLIC	??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<enum BeliefTypes *,unsigned int,enum BeliefTypes,std::allocator<enum BeliefTypes> >
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z
_TEXT	SEGMENT
tv129 = -64						; size = 4
_this$ = -60						; size = 4
$T244066 = -32						; size = 4
$T244056 = -28						; size = 4
$T244046 = -24						; size = 4
__Cat$244054 = -19					; size = 1
$T244051 = -18						; size = 1
$T244050 = -17						; size = 1
$T244023 = -16						; size = 4
$T244019 = -12						; size = 4
$T244018 = -8						; size = 4
$T244017 = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back, COMDAT
; _this$ = ecx

; 809  : 		{	// insert element at end

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	DWORD PTR _this$[ebp], ecx

; 810  : 		if (size() < capacity())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	DWORD PTR $T244023[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN9@push_back@3
	mov	DWORD PTR tv129[ebp], 0
	jmp	SHORT $LN7@push_back@3
$LN9@push_back@3:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	mov	DWORD PTR tv129[ebp], eax
$LN7@push_back@3:
	mov	ecx, DWORD PTR $T244023[ebp]
	cmp	ecx, DWORD PTR tv129[ebp]
	jae	SHORT $LN2@push_back@3

; 811  : 
; 812  :  #if _HAS_ITERATOR_DEBUGGING
; 813  : 			{ // room at end, construct it there
; 814  : 			_Orphan_range(_Mylast, _Mylast);
; 815  : 			_Mylast = _Ufill(_Mylast, 1, _Val);
; 816  : 			}
; 817  : 
; 818  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 819  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T244056[ebp], eax
	mov	ecx, DWORD PTR $T244056[ebp]
	mov	DWORD PTR $T244046[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T244050[ebp], dl
	mov	al, BYTE PTR __Cat$244054[ebp]
	mov	BYTE PTR $T244051[ebp], al
	movzx	ecx, BYTE PTR $T244050[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T244051[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR $T244046[ebp]
	push	edx
	call	??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<enum BeliefTypes *,unsigned int,enum BeliefTypes,std::allocator<enum BeliefTypes> >
	add	esp, 24					; 00000018H
	mov	eax, 1
	shl	eax, 2
	add	eax, DWORD PTR $T244056[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 820  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 821  : 
; 822  : 		else

	jmp	SHORT $LN3@push_back@3
$LN2@push_back@3:

; 823  : 			insert(end(), _Val);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T244066[ebp], eax
	mov	ecx, DWORD PTR $T244066[ebp]
	mov	DWORD PTR $T244018[ebp], ecx
	mov	edx, DWORD PTR $T244018[ebp]
	mov	DWORD PTR $T244017[ebp], edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T244017[ebp]
	push	ecx
	lea	edx, DWORD PTR $T244019[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@ABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::insert
$LN3@push_back@3:

; 824  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
_TEXT	ENDS
;	COMDAT ??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ PROC ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>, COMDAT
; _this$ = ecx

; 58   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 59   : 	};

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ENDP ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>
_TEXT	ENDS
PUBLIC	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>
; Function compile flags: /Odtp
;	COMDAT ?SortItems@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEXXZ
_TEXT	SEGMENT
_this$ = -156						; size = 4
$T244171 = -8						; size = 4
$T244167 = -4						; size = 4
?SortItems@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEXXZ PROC ; CvWeightedVector<enum BeliefTypes,100,1>::SortItems, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 156				; 0000009cH
	mov	DWORD PTR _this$[ebp], ecx

; 140  : 		std::sort(m_pItems.begin(), m_pItems.end());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T244167[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T244171[ebp], eax
	mov	ecx, DWORD PTR $T244167[ebp]
	sub	ecx, DWORD PTR $T244171[ebp]
	sar	ecx, 3
	push	ecx
	mov	edx, DWORD PTR $T244167[ebp]
	push	edx
	mov	eax, DWORD PTR $T244171[ebp]
	push	eax
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 141  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?SortItems@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEXXZ ENDP ; CvWeightedVector<enum BeliefTypes,100,1>::SortItems
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?ChooseFromTopChoices@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE?AW4BeliefTypes@@HPAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T244374 = -36						; size = 4
$T244370 = -32						; size = 4
$T244359 = -28						; size = 4
$T244355 = -24						; size = 4
_iTotalTopChoicesWeight$ = -20				; size = 4
_iChoice$ = -16						; size = 4
_i$ = -12						; size = 4
_elem$ = -8						; size = 8
_iNumChoices$ = 8					; size = 4
_rndFcn$ = 12						; size = 4
_szRollName$ = 16					; size = 4
?ChooseFromTopChoices@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE?AW4BeliefTypes@@HPAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z PROC ; CvWeightedVector<enum BeliefTypes,100,1>::ChooseFromTopChoices, COMDAT
; _this$ = ecx

; 223  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 224  : 		// Loop through the top choices, or the total vector size, whichever is smaller
; 225  : 		if (iNumChoices > (int) m_pItems.size())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T244355[ebp], ecx
	mov	edx, DWORD PTR _iNumChoices$[ebp]
	cmp	edx, DWORD PTR $T244355[ebp]
	jle	SHORT $LN8@ChooseFrom

; 226  : 		{
; 227  : 			iNumChoices = (int) m_pItems.size();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T244359[ebp], ecx
	mov	edx, DWORD PTR $T244359[ebp]
	mov	DWORD PTR _iNumChoices$[ebp], edx
$LN8@ChooseFrom:

; 228  : 		}
; 229  : 
; 230  : 		WeightedElement elem;

	mov	DWORD PTR _elem$[ebp], 0
	mov	DWORD PTR _elem$[ebp+4], 0

; 231  : 		int i;
; 232  : 		int iChoice;
; 233  : 		int iTotalTopChoicesWeight = 0;

	mov	DWORD PTR _iTotalTopChoicesWeight$[ebp], 0

; 234  : 
; 235  : 		// Get the total weight
; 236  : 		for (i = 0; i < iNumChoices; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@ChooseFrom
$LN6@ChooseFrom:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@ChooseFrom:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _iNumChoices$[ebp]
	jge	SHORT $LN5@ChooseFrom

; 237  : 		{
; 238  : 			elem = m_pItems[i];

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*8]
	mov	eax, DWORD PTR [eax+ecx*8+4]
	mov	DWORD PTR _elem$[ebp], edx
	mov	DWORD PTR _elem$[ebp+4], eax

; 239  : 			iTotalTopChoicesWeight += elem.m_iWeight;

	mov	ecx, DWORD PTR _iTotalTopChoicesWeight$[ebp]
	add	ecx, DWORD PTR _elem$[ebp+4]
	mov	DWORD PTR _iTotalTopChoicesWeight$[ebp], ecx

; 240  : 		}

	jmp	SHORT $LN6@ChooseFrom
$LN5@ChooseFrom:

; 241  : 
; 242  : 		// Random roll up to total weight
; 243  : 		iChoice = (*rndFcn)(iTotalTopChoicesWeight, szRollName);

	mov	edx, DWORD PTR _rndFcn$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T244370[ebp], eax
	mov	ecx, DWORD PTR _rndFcn$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T244374[ebp], edx
	mov	eax, DWORD PTR _szRollName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iTotalTopChoicesWeight$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T244374[ebp]
	call	DWORD PTR $T244370[ebp]
	mov	DWORD PTR _iChoice$[ebp], eax

; 244  : 
; 245  : 		// Find out which element was chosen
; 246  : 		for (i = 0; i < iNumChoices; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@ChooseFrom
$LN3@ChooseFrom:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN4@ChooseFrom:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _iNumChoices$[ebp]
	jge	SHORT $LN2@ChooseFrom

; 247  : 		{
; 248  : 			elem = m_pItems[i];

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*8]
	mov	edx, DWORD PTR [edx+eax*8+4]
	mov	DWORD PTR _elem$[ebp], ecx
	mov	DWORD PTR _elem$[ebp+4], edx

; 249  : 			iChoice -= elem.m_iWeight;

	mov	eax, DWORD PTR _iChoice$[ebp]
	sub	eax, DWORD PTR _elem$[ebp+4]
	mov	DWORD PTR _iChoice$[ebp], eax

; 250  : 			if (iChoice < 0)

	jns	SHORT $LN1@ChooseFrom

; 251  : 			{
; 252  : 				return elem.m_Element;

	mov	eax, DWORD PTR _elem$[ebp]
	jmp	SHORT $LN9@ChooseFrom
$LN1@ChooseFrom:

; 253  : 			}
; 254  : 		}

	jmp	SHORT $LN3@ChooseFrom
$LN2@ChooseFrom:

; 255  : 
; 256  : 		// We should have found something, so reaching here is an error
; 257  : 		//    Just return last thing accessed
; 258  : 		CvAssertMsg (false, "Internal error in CvWeightedVector.");
; 259  : 		return elem.m_Element;

	mov	eax, DWORD PTR _elem$[ebp]
$LN9@ChooseFrom:

; 260  : 	};

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ChooseFromTopChoices@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE?AW4BeliefTypes@@HPAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z ENDP ; CvWeightedVector<enum BeliefTypes,100,1>::ChooseFromTopChoices
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >::~_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >::~_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >
_TEXT	ENDS
EXTRN	??0CvReligionBeliefs@@QAE@ABV0@@Z:PROC		; CvReligionBeliefs::CvReligionBeliefs
; Function compile flags: /Odtp
;	COMDAT ??0CvReligion@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CvReligion@@QAE@ABV0@@Z PROC				; CvReligion::CvReligion, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+20]
	mov	BYTE PTR [eax+20], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+21]
	mov	BYTE PTR [eax+21], dl
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 22					; 00000016H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 22					; 00000016H
	mov	ecx, 32					; 00000020H
	rep movsd
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??0CvReligionBeliefs@@QAE@ABV0@@Z	; CvReligionBeliefs::CvReligionBeliefs
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0CvReligion@@QAE@ABV0@@Z ENDP				; CvReligion::CvReligion
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAPAVCvReligionEntry@@PAPAV1@@stdext@@YAPAPAVCvReligionEntry@@PAPAV1@00@Z ; stdext::unchecked_copy<CvReligionEntry * *,CvReligionEntry * *>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?erase@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -56						; size = 4
$T244491 = -52						; size = 4
$T244480 = -48						; size = 4
$T244479 = -44						; size = 4
__Cat$244488 = -40					; size = 1
$T244485 = -39						; size = 1
__Ptr$228372 = -12					; size = 4
__Last$ = -8						; size = 4
__First$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@0@Z PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::erase, COMDAT
; _this$ = ecx

; 1028 : 		{	// erase [_First, _Last)

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	mov	DWORD PTR _this$[ebp], ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	eax, DWORD PTR __First_arg$[ebp]
	mov	DWORD PTR __First$[ebp], eax

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);

	mov	ecx, DWORD PTR __Last_arg$[ebp]
	mov	DWORD PTR __Last$[ebp], ecx

; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	edx, DWORD PTR __First$[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR __Last$[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN1@erase@2

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$unchecked_copy@PAPAVCvReligionEntry@@PAPAV1@@stdext@@YAPAPAVCvReligionEntry@@PAPAV1@00@Z ; stdext::unchecked_copy<CvReligionEntry * *,CvReligionEntry * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$228372[ebp], eax

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T244491[ebp], edx
	mov	eax, DWORD PTR $T244491[ebp]
	mov	DWORD PTR $T244480[ebp], eax
	mov	ecx, DWORD PTR __Ptr$228372[ebp]
	mov	DWORD PTR $T244479[ebp], ecx
	mov	dl, BYTE PTR __Cat$244488[ebp]
	mov	BYTE PTR $T244485[ebp], dl

; 1049 : 			_Mylast = _Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$228372[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN1@erase@2:

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1055 : #endif
; 1056 : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@0@Z ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::erase
_TEXT	ENDS
PUBLIC	??$_Allocate@PAVCvReligionEntry@@@std@@YAPAPAVCvReligionEntry@@IPAPAV1@@Z ; std::_Allocate<CvReligionEntry *>
PUBLIC	?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Xlen
; Function compile flags: /Odtp
;	COMDAT ?_Buy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
tv94 = -96						; size = 4
_this$ = -92						; size = 4
__Count$244506 = -4					; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE_NI@Z PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	DWORD PTR _this$[ebp], ecx

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 1104 : 		if (_Capacity == 0)

	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy

; 1105 : 			return (false);

	xor	al, al
	jmp	SHORT $LN5@Buy
	jmp	SHORT $LN3@Buy
$LN4@Buy:

; 1106 : 		else if (max_size() < _Capacity)

	mov	DWORD PTR __Count$244506[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$244506[ebp], 0
	jbe	SHORT $LN11@Buy
	mov	eax, DWORD PTR __Count$244506[ebp]
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN7@Buy
$LN11@Buy:
	mov	DWORD PTR tv94[ebp], 1
$LN7@Buy:
	mov	ecx, DWORD PTR tv94[ebp]
	cmp	ecx, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN23@Buy

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Xlen

; 1108 : 		else

	jmp	SHORT $LN3@Buy

; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

$LN23@Buy:
	push	0
	mov	edx, DWORD PTR __Capacity$[ebp]
	push	edx
	call	??$_Allocate@PAVCvReligionEntry@@@std@@YAPAPAVCvReligionEntry@@IPAPAV1@@Z ; std::_Allocate<CvReligionEntry *>
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx

; 1112 : 			_Myend = _Myfirst + _Capacity;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Capacity$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
$LN3@Buy:

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
$LN5@Buy:

; 1115 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Buy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T244572 = -28						; size = 4
$T244571 = -24						; size = 4
$T244567 = -20						; size = 4
$T244566 = -16						; size = 4
$T244555 = -12						; size = 4
$T244554 = -8						; size = 4
__Cat$244563 = -2					; size = 1
$T244560 = -1						; size = 1
?_Tidy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAEXXZ PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tidy

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T244567[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T244566[ebp], ecx
	mov	edx, DWORD PTR $T244567[ebp]
	mov	DWORD PTR $T244555[ebp], edx
	mov	eax, DWORD PTR $T244566[ebp]
	mov	DWORD PTR $T244554[ebp], eax
	mov	cl, BYTE PTR __Cat$244563[ebp]
	mov	BYTE PTR $T244560[ebp], cl

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	mov	DWORD PTR $T244572[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T244571[ebp], eax
	mov	ecx, DWORD PTR $T244571[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Tidy:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 1135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAEXXZ ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Tidy
_TEXT	ENDS
EXTRN	_memcpy:PROC
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	SEGMENT
__unwindtable$?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z$0
__ehfuncinfo$?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	ENDS
;	COMDAT ?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv186 = -56						; size = 4
_this$ = -52						; size = 4
$T244586 = -40						; size = 4
_pRet$244582 = -36					; size = 4
$T244576 = -32						; size = 4
$T244575 = -28						; size = 4
_i$228411 = -24						; size = 4
_uiNewSize$228403 = -20					; size = 4
_pTemp$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z PROC ; FStaticVector<CvReligion,16,0,297,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$228403[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$228403[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize
$LN6@GrowSize:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$228403[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize
$LN7@GrowSize:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T244586[ebp], ecx
	cmp	DWORD PTR $T244586[ebp], 16		; 00000010H
	jbe	SHORT $LN16@GrowSize
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T244586[ebp]
	imul	edx, 328				; 00000148H
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$244582[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T244586[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN17@GrowSize
$LN16@GrowSize:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$244582[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 16			; 00000010H
$LN17@GrowSize:
	mov	ecx, DWORD PTR _pRet$244582[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	xor	edx, edx
	je	SHORT $LN5@GrowSize

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 328				; 00000148H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize
$LN5@GrowSize:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$228411[ebp], 0
	jmp	SHORT $LN3@GrowSize
$LN2@GrowSize:
	mov	edx, DWORD PTR _i$228411[ebp]
	add	edx, 1
	mov	DWORD PTR _i$228411[ebp], edx
$LN3@GrowSize:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$228411[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$228411[ebp]
	imul	edx, 328				; 00000148H
	add	edx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR $T244576[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T244576[ebp], 0
	je	SHORT $LN12@GrowSize
	mov	eax, DWORD PTR _i$228411[ebp]
	imul	eax, 328				; 00000148H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	mov	ecx, DWORD PTR $T244576[ebp]
	call	??0CvReligion@@QAE@ABV0@@Z
	mov	DWORD PTR tv186[ebp], eax
	jmp	SHORT $LN13@GrowSize
$LN12@GrowSize:
	mov	DWORD PTR tv186[ebp], 0
$LN13@GrowSize:
	mov	edx, DWORD PTR tv186[ebp]
	mov	DWORD PTR $T244575[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	jmp	SHORT $LN2@GrowSize
$LN4@GrowSize:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXPAVCvReligion@@I@Z ; FStaticVector<CvReligion,16,0,297,0>::Free

; 769  : 		m_pData = pTemp;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [ecx], edx

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5260], 1

; 772  : 	};

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z$0:
	mov	eax, DWORD PTR _i$228411[ebp]
	imul	eax, 328				; 00000148H
	add	eax, DWORD PTR _pTemp$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T244576[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z ENDP ; FStaticVector<CvReligion,16,0,297,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ?Free@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXPAVCvReligion@@I@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T244637 = -8						; size = 4
_i$244640 = -4						; size = 4
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Free@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXPAVCvReligion@@I@Z PROC ; FStaticVector<CvReligion,16,0,297,0>::Free, COMDAT
; _this$ = ecx

; 809  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 810  : 		if( !bPODType) Destroy(pVal, uiNumElements);

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN2@Free
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN2@Free
	mov	DWORD PTR _i$244640[ebp], 0
	jmp	SHORT $LN7@Free
$LN6@Free:
	mov	edx, DWORD PTR _i$244640[ebp]
	add	edx, 1
	mov	DWORD PTR _i$244640[ebp], edx
$LN7@Free:
	mov	eax, DWORD PTR _i$244640[ebp]
	cmp	eax, DWORD PTR _uiNumElements$[ebp]
	jae	SHORT $LN2@Free
	mov	ecx, DWORD PTR _i$244640[ebp]
	imul	ecx, 328				; 00000148H
	add	ecx, DWORD PTR _pVal$[ebp]
	mov	DWORD PTR $T244637[ebp], ecx
	mov	ecx, DWORD PTR $T244637[ebp]
	add	ecx, 152				; 00000098H
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	xor	edx, edx
	and	edx, 1
	je	SHORT $LN12@Free
	mov	eax, DWORD PTR $T244637[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN12@Free:
	jmp	SHORT $LN6@Free
$LN2@Free:

; 811  : 		if( pVal != (T*)m_aData )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR _pVal$[ebp], ecx
	je	SHORT $LN3@Free

; 812  : 			FFREEALIGNED( (unsigned char*)pVal );

	mov	edx, DWORD PTR _pVal$[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN3@Free:

; 813  : 	};

	mov	esp, ebp
	pop	ebp
	ret	8
?Free@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXPAVCvReligion@@I@Z ENDP ; FStaticVector<CvReligion,16,0,297,0>::Free
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@VCvReligion@@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@VCvReligion@@$0A@@@QAE@XZ PROC		; BaseVector<CvReligion,0>::~BaseVector<CvReligion,0>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@VCvReligion@@$0A@@@QAE@XZ ENDP		; BaseVector<CvReligion,0>::~BaseVector<CvReligion,0>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv179 = -44						; size = 4
_this$ = -40						; size = 4
$T244688 = -36						; size = 4
$T244687 = -32						; size = 4
_i$244682 = -28						; size = 4
$T244663 = -24						; size = 4
_pRet$244659 = -20					; size = 4
$T244654 = -16						; size = 4
_i$228461 = -12						; size = 4
_uiNewSize$228453 = -8					; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z PROC ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize@2:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize@2

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$228453[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$228453[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize@2

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize@2
$LN6@GrowSize@2:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$228453[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize@2
$LN7@GrowSize@2:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T244663[ebp], ecx
	cmp	DWORD PTR $T244663[ebp], 8
	jbe	SHORT $LN15@GrowSize@2
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T244663[ebp]
	imul	edx, 24					; 00000018H
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$244659[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T244663[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN16@GrowSize@2
$LN15@GrowSize@2:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$244659[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 8
$LN16@GrowSize@2:
	mov	ecx, DWORD PTR _pRet$244659[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	xor	edx, edx
	je	SHORT $LN5@GrowSize@2

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 24					; 00000018H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize@2
$LN5@GrowSize@2:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$228461[ebp], 0
	jmp	SHORT $LN3@GrowSize@2
$LN2@GrowSize@2:
	mov	edx, DWORD PTR _i$228461[ebp]
	add	edx, 1
	mov	DWORD PTR _i$228461[ebp], edx
$LN3@GrowSize@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$228461[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize@2

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$228461[ebp]
	imul	edx, 24					; 00000018H
	add	edx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR $T244654[ebp], edx
	je	SHORT $LN12@GrowSize@2
	mov	eax, DWORD PTR _i$228461[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, eax
	mov	eax, DWORD PTR $T244654[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [edx+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR [edx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR $T244654[ebp]
	mov	DWORD PTR tv179[ebp], eax
	jmp	SHORT $LN13@GrowSize@2
$LN12@GrowSize@2:
	mov	DWORD PTR tv179[ebp], 0
$LN13@GrowSize@2:
	jmp	SHORT $LN2@GrowSize@2
$LN4@GrowSize@2:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T244688[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T244687[ebp], ecx
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN21@GrowSize@2
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN21@GrowSize@2
	mov	DWORD PTR _i$244682[ebp], 0
	jmp	SHORT $LN26@GrowSize@2
$LN25@GrowSize@2:
	mov	ecx, DWORD PTR _i$244682[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$244682[ebp], ecx
$LN26@GrowSize@2:
	mov	edx, DWORD PTR _i$244682[ebp]
	cmp	edx, DWORD PTR $T244688[ebp]
	jae	SHORT $LN21@GrowSize@2
	jmp	SHORT $LN25@GrowSize@2
$LN21@GrowSize@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	cmp	DWORD PTR $T244687[ebp], eax
	je	SHORT $LN22@GrowSize@2
	mov	ecx, DWORD PTR $T244687[ebp]
	push	ecx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN22@GrowSize@2:

; 769  : 		m_pData = pTemp;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [edx], eax

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+204], 1

; 772  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ENDP ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@VCvReligionInCity@@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@VCvReligionInCity@@$0A@@@QAE@XZ PROC	; BaseVector<CvReligionInCity,0>::~BaseVector<CvReligionInCity,0>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@VCvReligionInCity@@$0A@@@QAE@XZ ENDP	; BaseVector<CvReligionInCity,0>::~BaseVector<CvReligionInCity,0>
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Insert_n
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?insert@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@ABW4BeliefTypes@@@Z
_TEXT	SEGMENT
tv77 = -32						; size = 4
_this$ = -28						; size = 4
__Tmp$244749 = -24					; size = 4
$T244728 = -20						; size = 4
$T244709 = -16						; size = 4
$T244696 = -12						; size = 4
$T244693 = -8						; size = 4
__Off$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@ABW4BeliefTypes@@@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::insert, COMDAT
; _this$ = ecx

; 875  : 		{	// insert _Val at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 876  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	test	edx, edx
	jne	SHORT $LN3@insert
	mov	DWORD PTR tv77[ebp], 0
	jmp	SHORT $LN4@insert
$LN3@insert:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T244709[ebp], ecx
	mov	edx, DWORD PTR $T244709[ebp]
	mov	DWORD PTR $T244693[ebp], edx
	mov	eax, DWORD PTR __Where$[ebp]
	sub	eax, DWORD PTR $T244693[ebp]
	sar	eax, 2
	mov	DWORD PTR tv77[ebp], eax
$LN4@insert:
	mov	ecx, DWORD PTR tv77[ebp]
	mov	DWORD PTR __Off$[ebp], ecx

; 877  : 		_Insert_n(_Where, (size_type)1, _Val);

	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Insert_n

; 878  : 		return (begin() + _Off);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T244728[ebp], edx
	mov	eax, DWORD PTR $T244728[ebp]
	mov	DWORD PTR $T244696[ebp], eax
	mov	ecx, DWORD PTR $T244696[ebp]
	mov	DWORD PTR __Tmp$244749[ebp], ecx
	mov	edx, DWORD PTR __Off$[ebp]
	mov	eax, DWORD PTR __Tmp$244749[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR __Tmp$244749[ebp], ecx
	mov	edx, DWORD PTR __Tmp$244749[ebp]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 879  : 		}

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@ABW4BeliefTypes@@@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::insert
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
tv94 = -96						; size = 4
_this$ = -92						; size = 4
__Count$244767 = -4					; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE_NI@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	DWORD PTR _this$[ebp], ecx

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 1104 : 		if (_Capacity == 0)

	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy@2

; 1105 : 			return (false);

	xor	al, al
	jmp	SHORT $LN5@Buy@2
	jmp	SHORT $LN3@Buy@2
$LN4@Buy@2:

; 1106 : 		else if (max_size() < _Capacity)

	mov	DWORD PTR __Count$244767[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$244767[ebp], 0
	jbe	SHORT $LN11@Buy@2
	mov	eax, DWORD PTR __Count$244767[ebp]
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN7@Buy@2
$LN11@Buy@2:
	mov	DWORD PTR tv94[ebp], 1
$LN7@Buy@2:
	mov	ecx, DWORD PTR tv94[ebp]
	cmp	ecx, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN23@Buy@2

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Xlen

; 1108 : 		else

	jmp	SHORT $LN3@Buy@2

; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

$LN23@Buy@2:
	push	0
	mov	edx, DWORD PTR __Capacity$[ebp]
	push	edx
	call	??$_Allocate@W4BeliefTypes@@@std@@YAPAW4BeliefTypes@@IPAW41@@Z ; std::_Allocate<enum BeliefTypes>
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx

; 1112 : 			_Myend = _Myfirst + _Capacity;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Capacity$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
$LN3@Buy@2:

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
$LN5@Buy@2:

; 1115 : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Buy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T244861 = -32						; size = 4
$T244860 = -28						; size = 4
$T244856 = -24						; size = 4
$T244855 = -20						; size = 4
$T244837 = -16						; size = 4
$T244836 = -12						; size = 4
$T244820 = -8						; size = 4
__Cat$244843 = -2					; size = 1
$T244840 = -1						; size = 1
?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tidy@2

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T244856[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T244855[ebp], ecx
	mov	edx, DWORD PTR $T244856[ebp]
	mov	DWORD PTR $T244837[ebp], edx
	mov	eax, DWORD PTR $T244855[ebp]
	mov	DWORD PTR $T244836[ebp], eax
	mov	cl, BYTE PTR __Cat$244843[ebp]
	mov	BYTE PTR $T244840[ebp], cl
	mov	edx, DWORD PTR $T244836[ebp]
	mov	DWORD PTR $T244820[ebp], edx
	jmp	SHORT $LN12@Tidy@2
$LN11@Tidy@2:
	mov	eax, DWORD PTR $T244820[ebp]
	add	eax, 4
	mov	DWORD PTR $T244820[ebp], eax
$LN12@Tidy@2:
	mov	ecx, DWORD PTR $T244820[ebp]
	cmp	ecx, DWORD PTR $T244837[ebp]
	je	SHORT $LN4@Tidy@2
	jmp	SHORT $LN11@Tidy@2
$LN4@Tidy@2:

; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	mov	DWORD PTR $T244861[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T244860[ebp], eax
	mov	ecx, DWORD PTR $T244860[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Tidy@2:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 1135 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
_TEXT	ENDS
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T244865 = -80						; size = 28
$T244864 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T244865[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T244864[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T244864[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T244865[ebp]
	push	eax
	lea	ecx, DWORD PTR $T244864[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T244864[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T244864[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T244865[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@Xlen:

; 1261 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T244865[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T244864[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Xlen
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx

; 34   : 		{	// return pointer to message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 		return (_Str.c_str());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 36   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 109  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@

; 110  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	edx, DWORD PTR ___flags$[ebp]
	and	edx, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
PUBLIC	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ$0
__ehfuncinfo$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T244928 = -20						; size = 4
_pRet$244925 = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ PROC ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 100			; 00000064H

; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T244928[ebp], edx
	cmp	DWORD PTR $T244928[ebp], 100		; 00000064H
	jbe	SHORT $LN7@FStaticVec@4
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	eax, DWORD PTR $T244928[ebp]
	shl	eax, 3
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$244925[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T244928[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN8@FStaticVec@4
$LN7@FStaticVec@4:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pRet$244925[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 100			; 00000064H
$LN8@FStaticVec@4:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRet$244925[ebp]
	mov	DWORD PTR [edx], eax

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>
__ehhandler$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ENDP ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ$0
__ehfuncinfo$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T244959 = -24						; size = 4
$T244958 = -20						; size = 4
_i$244951 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ PROC ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>, COMDAT
; _this$ = ecx

; 617  : 	~FStaticVector(){

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T244959[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T244958[ebp], eax
	xor	ecx, ecx
	je	SHORT $LN5@FStaticVec@5
	xor	edx, edx
	je	SHORT $LN5@FStaticVec@5
	mov	DWORD PTR _i$244951[ebp], 0
	jmp	SHORT $LN10@FStaticVec@5
$LN9@FStaticVec@5:
	mov	eax, DWORD PTR _i$244951[ebp]
	add	eax, 1
	mov	DWORD PTR _i$244951[ebp], eax
$LN10@FStaticVec@5:
	mov	ecx, DWORD PTR _i$244951[ebp]
	cmp	ecx, DWORD PTR $T244959[ebp]
	jae	SHORT $LN5@FStaticVec@5
	jmp	SHORT $LN9@FStaticVec@5
$LN5@FStaticVec@5:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	cmp	DWORD PTR $T244958[ebp], edx
	je	SHORT $LN1@FStaticVec@5
	mov	eax, DWORD PTR $T244958[ebp]
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@FStaticVec@5:

; 619  : 	};

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>
__ehhandler$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ENDP ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
PUBLIC	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::GrowSize
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z
_TEXT	SEGMENT
tv157 = -64						; size = 4
tv149 = -60						; size = 4
_this$ = -56						; size = 4
$T244972 = -8						; size = 4
$T244971 = -4						; size = 4
_element$ = 8						; size = 4
?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z PROC ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	DWORD PTR _this$[ebp], ecx

; 677  : 		m_bIsResized = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+812], 0

; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN39@push_back@4

; 679  : 			GrowSize(m_uiCurrMaxSize);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::GrowSize

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

$LN39@push_back@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T244972[ebp], ecx
	cmp	DWORD PTR $T244972[ebp], 0
	je	SHORT $LN4@push_back@4
	mov	edx, DWORD PTR $T244972[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T244972[ebp]
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR $T244972[ebp]
	mov	DWORD PTR tv149[ebp], edx
	jmp	SHORT $LN5@push_back@4
$LN4@push_back@4:
	mov	DWORD PTR tv149[ebp], 0
$LN5@push_back@4:
	mov	eax, DWORD PTR tv149[ebp]
	mov	DWORD PTR $T244971[ebp], eax

; 681  : 		return m_uiCurrSize++;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv157[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR tv157[ebp]

; 682  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z ENDP ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::push_back
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T245027 = -80						; size = 28
$T245026 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T245027[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T245026[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T245026[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T245027[ebp]
	push	eax
	lea	ecx, DWORD PTR $T245026[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T245026[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T245026[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T245027[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@Xlen@2:

; 1261 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T245027[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T245026[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Xlen
PUBLIC	??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
PUBLIC	??$unchecked_uninitialized_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@std@@@Z ; stdext::unchecked_uninitialized_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$2
__catchsym$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$0
__unwindtable$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$5
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$6
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z
_TEXT	SEGMENT
tv84 = -424						; size = 4
tv302 = -420						; size = 4
tv288 = -416						; size = 4
tv280 = -412						; size = 4
_this$ = -408						; size = 4
$T245729 = -404						; size = 4
$T245721 = -400						; size = 4
$T245720 = -396						; size = 4
$T245697 = -390						; size = 1
$T245696 = -389						; size = 1
$T245695 = -388						; size = 4
$T245694 = -384						; size = 4
$T245682 = -377						; size = 1
$T245681 = -376						; size = 4
$T245680 = -372						; size = 4
$T245679 = -368						; size = 4
__Cat$245715 = -364					; size = 1
$T245712 = -363						; size = 1
$T245711 = -362						; size = 1
__Cat$245704 = -360					; size = 1
$T245702 = -359						; size = 1
$T245701 = -358						; size = 1
$T245700 = -357						; size = 1
$T245654 = -356						; size = 4
$T245635 = -352						; size = 4
$T245618 = -345						; size = 1
$T245617 = -344						; size = 4
$T245607 = -340						; size = 4
$T245606 = -336						; size = 4
__Cat$245653 = -330					; size = 1
$T245650 = -329						; size = 1
$T245649 = -328						; size = 1
__Cat$245643 = -327					; size = 1
$T245641 = -326						; size = 1
$T245640 = -325						; size = 1
$T245582 = -324						; size = 4
$T245574 = -320						; size = 4
$T245566 = -316						; size = 4
$T245548 = -312						; size = 4
$T245547 = -308						; size = 4
$T245531 = -304						; size = 4
__Cat$245556 = -298					; size = 1
$T245553 = -297						; size = 1
$T245505 = -296						; size = 4
$T245504 = -292						; size = 4
$T245494 = -288						; size = 4
__Cat$245503 = -283					; size = 1
$T245500 = -282						; size = 1
$T245499 = -281						; size = 1
$T245478 = -280						; size = 4
$T245459 = -276						; size = 4
$T245442 = -269						; size = 1
$T245441 = -268						; size = 4
$T245431 = -264						; size = 4
$T245430 = -260						; size = 4
__Cat$245477 = -254					; size = 1
$T245474 = -253						; size = 1
$T245473 = -252						; size = 1
__Cat$245466 = -251					; size = 1
$T245464 = -250						; size = 1
$T245463 = -249						; size = 1
$T245406 = -248						; size = 4
$T245405 = -244						; size = 4
$T245401 = -240						; size = 4
$T245400 = -236						; size = 4
$T245382 = -232						; size = 4
$T245381 = -228						; size = 4
$T245365 = -224						; size = 4
__Cat$245390 = -218					; size = 1
$T245387 = -217						; size = 1
$T245316 = -216						; size = 4
$T245315 = -212						; size = 4
$T245299 = -208						; size = 4
__Cat$245323 = -202					; size = 1
$T245320 = -201						; size = 1
$T245256 = -200						; size = 4
$T245255 = -196						; size = 4
$T245239 = -192						; size = 4
__Cat$245263 = -186					; size = 1
$T245260 = -185						; size = 1
$T245213 = -184						; size = 4
$T245201 = -180						; size = 4
$T245191 = -173						; size = 1
$T245190 = -172						; size = 4
__Cat$245208 = -167					; size = 1
$T245206 = -166						; size = 1
$T245205 = -165						; size = 1
$T245178 = -164						; size = 4
$T245166 = -160						; size = 4
$T245156 = -153						; size = 1
$T245155 = -152						; size = 4
__Cat$245173 = -147					; size = 1
$T245171 = -146						; size = 1
$T245170 = -145						; size = 1
$T245143 = -144						; size = 4
$T245133 = -140						; size = 4
__Cat$245141 = -135					; size = 1
$T245138 = -134						; size = 1
$T245137 = -133						; size = 1
__Count$245103 = -120					; size = 4
__Count$245080 = -48					; size = 4
__Tmp$228682 = -44					; size = 4
__Oldend$228683 = -40					; size = 4
__Tmp$228672 = -36					; size = 4
__Ncopied$228659 = -32					; size = 4
__Newvec$228657 = -28					; size = 4
__Whereoff$228658 = -24					; size = 4
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 408				; 00000198H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN29@Insert_n
	mov	DWORD PTR tv280[ebp], 0
	jmp	SHORT $LN27@Insert_n
$LN29@Insert_n:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	mov	DWORD PTR tv280[ebp], eax
$LN27@Insert_n:
	mov	ecx, DWORD PTR tv280[ebp]
	mov	DWORD PTR __Capacity$[ebp], ecx

; 1162 : 
; 1163 : 		if (_Count == 0)

	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN14@Insert_n
	jmp	$LN16@Insert_n
$LN14@Insert_n:

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	DWORD PTR __Count$245080[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$245080[ebp], 0
	jbe	SHORT $LN35@Insert_n
	mov	edx, DWORD PTR __Count$245080[ebp]
	mov	DWORD PTR tv288[ebp], edx
	jmp	SHORT $LN37@Insert_n
$LN35@Insert_n:
	mov	DWORD PTR tv288[ebp], 1
$LN37@Insert_n:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	eax, DWORD PTR tv288[ebp]
	sub	eax, edx
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN42@Insert_n

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Xlen
	jmp	$LN16@Insert_n

; 1167 : 		else if (_Capacity < size() + _Count)

$LN42@Insert_n:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	add	eax, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], eax
	jae	$LN10@Insert_n

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	DWORD PTR __Count$245103[ebp], 1073741823 ; 3fffffffH
	cmp	DWORD PTR __Count$245103[ebp], 0
	jbe	SHORT $LN48@Insert_n
	mov	ecx, DWORD PTR __Count$245103[ebp]
	mov	DWORD PTR tv302[ebp], ecx
	jmp	SHORT $LN44@Insert_n
$LN48@Insert_n:
	mov	DWORD PTR tv302[ebp], 1
$LN44@Insert_n:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	mov	eax, DWORD PTR tv302[ebp]
	sub	eax, edx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN17@Insert_n
	mov	DWORD PTR tv84[ebp], 0
	jmp	SHORT $LN18@Insert_n
$LN17@Insert_n:
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	add	ecx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv84[ebp], ecx
$LN18@Insert_n:
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx

; 1171 : 			if (_Capacity < size() + _Count)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	add	edx, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], edx
	jae	SHORT $LN54@Insert_n

; 1172 : 				_Capacity = size() + _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

$LN54@Insert_n:
	push	0
	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	call	??$_Allocate@W4BeliefTypes@@@std@@YAPAW4BeliefTypes@@IPAW41@@Z ; std::_Allocate<enum BeliefTypes>
	add	esp, 8
	mov	DWORD PTR __Newvec$228657[ebp], eax

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Where$[ebp]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	DWORD PTR __Whereoff$228658[ebp], edx

; 1175 : 			int _Ncopied = 0;

	mov	DWORD PTR __Ncopied$228659[ebp], 0

; 1176 : 
; 1177 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	eax, DWORD PTR __Whereoff$228658[ebp]
	mov	ecx, DWORD PTR __Newvec$228657[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR $T245143[ebp], edx
	mov	eax, DWORD PTR $T245143[ebp]
	mov	DWORD PTR $T245133[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T245137[ebp], cl
	mov	dl, BYTE PTR __Cat$245141[ebp]
	mov	BYTE PTR $T245138[ebp], dl
	movzx	eax, BYTE PTR $T245137[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T245138[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T245133[ebp]
	push	edx
	call	??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<enum BeliefTypes *,unsigned int,enum BeliefTypes,std::allocator<enum BeliefTypes> >
	add	esp, 24					; 00000018H

; 1179 : 			++_Ncopied;

	mov	eax, DWORD PTR __Ncopied$228659[ebp]
	add	eax, 1
	mov	DWORD PTR __Ncopied$228659[ebp], eax

; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T245178[ebp], edx
	mov	eax, DWORD PTR __Newvec$228657[ebp]
	mov	DWORD PTR $T245166[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T245170[ebp], cl
	mov	dl, BYTE PTR __Cat$245173[ebp]
	mov	BYTE PTR $T245171[ebp], dl
	mov	al, BYTE PTR $T245170[ebp]
	mov	BYTE PTR $T245156[ebp], al
	mov	ecx, DWORD PTR $T245166[ebp]
	mov	DWORD PTR $T245155[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR $T245155[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T245178[ebp]
	push	edx
	call	??$unchecked_uninitialized_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@std@@@Z ; stdext::unchecked_uninitialized_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
	add	esp, 16					; 00000010H

; 1182 : 			++_Ncopied;

	mov	eax, DWORD PTR __Ncopied$228659[ebp]
	add	eax, 1
	mov	DWORD PTR __Ncopied$228659[ebp], eax

; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T245213[ebp], edx
	mov	eax, DWORD PTR __Whereoff$228658[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Newvec$228657[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR $T245201[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T245205[ebp], al
	mov	cl, BYTE PTR __Cat$245208[ebp]
	mov	BYTE PTR $T245206[ebp], cl
	mov	dl, BYTE PTR $T245205[ebp]
	mov	BYTE PTR $T245191[ebp], dl
	mov	eax, DWORD PTR $T245201[ebp]
	mov	DWORD PTR $T245190[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T245190[ebp]
	push	edx
	mov	eax, DWORD PTR $T245213[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	call	??$unchecked_uninitialized_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@std@@@Z ; stdext::unchecked_uninitialized_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
	add	esp, 16					; 00000010H
	jmp	$LN19@Insert_n
__catch$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)

	cmp	DWORD PTR __Ncopied$228659[ebp], 1
	jle	SHORT $LN7@Insert_n

; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);

	mov	edx, DWORD PTR __Whereoff$228658[ebp]
	mov	eax, DWORD PTR __Newvec$228657[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T245256[ebp], ecx
	mov	edx, DWORD PTR __Newvec$228657[ebp]
	mov	DWORD PTR $T245255[ebp], edx
	mov	al, BYTE PTR __Cat$245263[ebp]
	mov	BYTE PTR $T245260[ebp], al
	mov	ecx, DWORD PTR $T245255[ebp]
	mov	DWORD PTR $T245239[ebp], ecx
	jmp	SHORT $LN91@Insert_n
$LN90@Insert_n:
	mov	edx, DWORD PTR $T245239[ebp]
	add	edx, 4
	mov	DWORD PTR $T245239[ebp], edx
$LN91@Insert_n:
	mov	eax, DWORD PTR $T245239[ebp]
	cmp	eax, DWORD PTR $T245256[ebp]
	je	SHORT $LN7@Insert_n
	jmp	SHORT $LN90@Insert_n
$LN7@Insert_n:

; 1188 : 			if (0 < _Ncopied)

	cmp	DWORD PTR __Ncopied$228659[ebp], 0
	jle	SHORT $LN6@Insert_n

; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);

	mov	ecx, DWORD PTR __Whereoff$228658[ebp]
	mov	edx, DWORD PTR __Newvec$228657[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR $T245316[ebp], edx
	mov	eax, DWORD PTR __Whereoff$228658[ebp]
	mov	ecx, DWORD PTR __Newvec$228657[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR $T245315[ebp], edx
	mov	al, BYTE PTR __Cat$245323[ebp]
	mov	BYTE PTR $T245320[ebp], al
	mov	ecx, DWORD PTR $T245315[ebp]
	mov	DWORD PTR $T245299[ebp], ecx
	jmp	SHORT $LN106@Insert_n
$LN105@Insert_n:
	mov	edx, DWORD PTR $T245299[ebp]
	add	edx, 4
	mov	DWORD PTR $T245299[ebp], edx
$LN106@Insert_n:
	mov	eax, DWORD PTR $T245299[ebp]
	cmp	eax, DWORD PTR $T245316[ebp]
	je	SHORT $LN6@Insert_n
	jmp	SHORT $LN105@Insert_n
$LN6@Insert_n:

; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	ecx, DWORD PTR __Newvec$228657[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1192 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN115@Insert_n
	ret	0
$LN19@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], -1

; 1193 : 
; 1194 : 			_Count += size();

$LN115@Insert_n:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	add	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Count$[ebp], ecx

; 1195 : 			if (_Myfirst != 0)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	$LN5@Insert_n

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T245401[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T245400[ebp], eax
	mov	ecx, DWORD PTR $T245401[ebp]
	mov	DWORD PTR $T245382[ebp], ecx
	mov	edx, DWORD PTR $T245400[ebp]
	mov	DWORD PTR $T245381[ebp], edx
	mov	al, BYTE PTR __Cat$245390[ebp]
	mov	BYTE PTR $T245387[ebp], al
	mov	ecx, DWORD PTR $T245381[ebp]
	mov	DWORD PTR $T245365[ebp], ecx
	jmp	SHORT $LN125@Insert_n
$LN124@Insert_n:
	mov	edx, DWORD PTR $T245365[ebp]
	add	edx, 4
	mov	DWORD PTR $T245365[ebp], edx
$LN125@Insert_n:
	mov	eax, DWORD PTR $T245365[ebp]
	cmp	eax, DWORD PTR $T245382[ebp]
	je	SHORT $LN117@Insert_n
	jmp	SHORT $LN124@Insert_n
$LN117@Insert_n:

; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	mov	DWORD PTR $T245406[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T245405[ebp], edx
	mov	eax, DWORD PTR $T245405[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@Insert_n:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	ecx, DWORD PTR __Capacity$[ebp]
	mov	edx, DWORD PTR __Newvec$228657[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 1206 : 			_Mylast = _Newvec + _Count;

	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Newvec$228657[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newvec$228657[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	$LN16@Insert_n
$LN10@Insert_n:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, DWORD PTR __Where$[ebp]
	sar	eax, 2
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN3@Insert_n

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$228672[ebp], edx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T245478[ebp], ecx
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T245459[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T245463[ebp], dl
	mov	al, BYTE PTR __Cat$245466[ebp]
	mov	BYTE PTR $T245464[ebp], al
	mov	cl, BYTE PTR $T245463[ebp]
	mov	BYTE PTR $T245442[ebp], cl
	mov	edx, DWORD PTR $T245459[ebp]
	mov	DWORD PTR $T245441[ebp], edx
	mov	eax, DWORD PTR $T245441[ebp]
	mov	DWORD PTR $T245431[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T245430[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T245473[ebp], dl
	mov	al, BYTE PTR __Cat$245477[ebp]
	mov	BYTE PTR $T245474[ebp], al
	movzx	ecx, BYTE PTR $T245473[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T245474[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T245431[ebp]
	push	ecx
	mov	edx, DWORD PTR $T245478[ebp]
	push	edx
	mov	eax, DWORD PTR $T245430[ebp]
	push	eax
	call	??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
	add	esp, 24					; 00000018H

; 1215 : 
; 1216 : 			_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 2

; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR __Where$[ebp]
	sar	edx, 2
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, edx
	mov	DWORD PTR $T245505[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR $T245504[ebp], edx
	mov	eax, DWORD PTR $T245504[ebp]
	mov	DWORD PTR $T245494[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T245499[ebp], cl
	mov	dl, BYTE PTR __Cat$245503[ebp]
	mov	BYTE PTR $T245500[ebp], dl
	movzx	eax, BYTE PTR $T245499[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T245500[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	lea	eax, DWORD PTR __Tmp$228672[ebp]
	push	eax
	mov	ecx, DWORD PTR $T245505[ebp]
	push	ecx
	mov	edx, DWORD PTR $T245494[ebp]
	push	edx
	call	??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<enum BeliefTypes *,unsigned int,enum BeliefTypes,std::allocator<enum BeliefTypes> >
	add	esp, 24					; 00000018H
	jmp	SHORT $LN21@Insert_n
__catch$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$2:

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR $T245566[ebp], eax
	mov	ecx, DWORD PTR $T245566[ebp]
	mov	DWORD PTR $T245548[ebp], ecx
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR $T245547[ebp], ecx
	mov	dl, BYTE PTR __Cat$245556[ebp]
	mov	BYTE PTR $T245553[ebp], dl
	mov	eax, DWORD PTR $T245547[ebp]
	mov	DWORD PTR $T245531[ebp], eax
	jmp	SHORT $LN160@Insert_n
$LN159@Insert_n:
	mov	ecx, DWORD PTR $T245531[ebp]
	add	ecx, 4
	mov	DWORD PTR $T245531[ebp], ecx
$LN160@Insert_n:
	mov	edx, DWORD PTR $T245531[ebp]
	cmp	edx, DWORD PTR $T245548[ebp]
	je	SHORT $LN152@Insert_n
	jmp	SHORT $LN159@Insert_n
$LN152@Insert_n:

; 1221 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1222 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$3
	ret	0
$LN21@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$3:

; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, edx
	mov	DWORD PTR $T245582[ebp], ecx
	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T245574[ebp], edx
	jmp	SHORT $LN171@Insert_n
$LN170@Insert_n:
	mov	eax, DWORD PTR $T245574[ebp]
	add	eax, 4
	mov	DWORD PTR $T245574[ebp], eax
$LN171@Insert_n:
	mov	ecx, DWORD PTR $T245574[ebp]
	cmp	ecx, DWORD PTR $T245582[ebp]
	je	SHORT $LN167@Insert_n
	mov	edx, DWORD PTR $T245574[ebp]
	mov	eax, DWORD PTR __Tmp$228672[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN170@Insert_n
$LN167@Insert_n:

; 1232 : 			}
; 1233 : 		else

	jmp	$LN16@Insert_n
$LN3@Insert_n:

; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$228682[ebp], edx

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Oldend$228683[ebp], ecx

; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T245654[ebp], eax
	mov	ecx, DWORD PTR $T245654[ebp]
	mov	DWORD PTR $T245635[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T245640[ebp], dl
	mov	al, BYTE PTR __Cat$245643[ebp]
	mov	BYTE PTR $T245641[ebp], al
	mov	cl, BYTE PTR $T245640[ebp]
	mov	BYTE PTR $T245618[ebp], cl
	mov	edx, DWORD PTR $T245635[ebp]
	mov	DWORD PTR $T245617[ebp], edx
	mov	eax, DWORD PTR $T245617[ebp]
	mov	DWORD PTR $T245607[ebp], eax
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	mov	edx, DWORD PTR __Oldend$228683[ebp]
	sub	edx, ecx
	mov	DWORD PTR $T245606[ebp], edx
	xor	eax, eax
	mov	BYTE PTR $T245649[ebp], al
	mov	cl, BYTE PTR __Cat$245653[ebp]
	mov	BYTE PTR $T245650[ebp], cl
	movzx	edx, BYTE PTR $T245649[ebp]
	push	edx
	movzx	eax, BYTE PTR $T245650[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T245607[ebp]
	push	edx
	mov	eax, DWORD PTR __Oldend$228683[ebp]
	push	eax
	mov	ecx, DWORD PTR $T245606[ebp]
	push	ecx
	call	??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
	add	esp, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	mov	eax, DWORD PTR __Oldend$228683[ebp]
	mov	DWORD PTR $T245721[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T245720[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T245700[ebp], dl
	mov	al, BYTE PTR __Cat$245704[ebp]
	mov	BYTE PTR $T245701[ebp], al
	mov	cl, BYTE PTR $T245700[ebp]
	mov	BYTE PTR $T245697[ebp], cl
	mov	dl, BYTE PTR $T245702[ebp]
	mov	BYTE PTR $T245696[ebp], dl
	mov	eax, DWORD PTR $T245721[ebp]
	mov	DWORD PTR $T245695[ebp], eax
	mov	ecx, DWORD PTR $T245720[ebp]
	mov	DWORD PTR $T245694[ebp], ecx
	xor	edx, edx
	mov	BYTE PTR $T245711[ebp], dl
	mov	al, BYTE PTR __Cat$245715[ebp]
	mov	BYTE PTR $T245712[ebp], al
	mov	cl, BYTE PTR $T245711[ebp]
	mov	BYTE PTR $T245682[ebp], cl
	mov	edx, DWORD PTR $T245695[ebp]
	mov	DWORD PTR $T245681[ebp], edx
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	mov	ecx, DWORD PTR __Oldend$228683[ebp]
	sub	ecx, eax
	mov	DWORD PTR $T245680[ebp], ecx
	mov	edx, DWORD PTR $T245694[ebp]
	mov	DWORD PTR $T245679[ebp], edx
$LN197@Insert_n:
	mov	eax, DWORD PTR $T245679[ebp]
	cmp	eax, DWORD PTR $T245680[ebp]
	je	SHORT $LN186@Insert_n
	mov	ecx, DWORD PTR $T245680[ebp]
	sub	ecx, 4
	mov	DWORD PTR $T245680[ebp], ecx
	mov	edx, DWORD PTR $T245681[ebp]
	sub	edx, 4
	mov	DWORD PTR $T245681[ebp], edx
	mov	eax, DWORD PTR $T245681[ebp]
	mov	ecx, DWORD PTR $T245680[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN197@Insert_n
$LN186@Insert_n:

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T245729[ebp], eax
	jmp	SHORT $LN204@Insert_n
$LN203@Insert_n:
	mov	ecx, DWORD PTR $T245729[ebp]
	add	ecx, 4
	mov	DWORD PTR $T245729[ebp], ecx
$LN204@Insert_n:
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	cmp	DWORD PTR $T245729[ebp], ecx
	je	SHORT $LN16@Insert_n
	mov	edx, DWORD PTR $T245729[ebp]
	mov	eax, DWORD PTR __Tmp$228682[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN203@Insert_n
$LN16@Insert_n:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-428]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Insert_n
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z
_TEXT	SEGMENT
tv186 = -52						; size = 4
_this$ = -48						; size = 4
$T245790 = -44						; size = 4
$T245789 = -40						; size = 4
_i$245782 = -36						; size = 4
$T245768 = -32						; size = 4
$T245761 = -28						; size = 4
_pRet$245757 = -24					; size = 4
$T245751 = -20						; size = 4
$T245750 = -16						; size = 4
_i$228712 = -12						; size = 4
_uiNewSize$228704 = -8					; size = 4
_pTemp$ = -4						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z PROC ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN8@GrowSize@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
$LN8@GrowSize@3:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jb	SHORT $LN7@GrowSize@3

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	shl	edx, 1
	mov	DWORD PTR _uiNewSize$228704[ebp], edx

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _uiNewSize$228704[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN6@GrowSize@3

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _uiFit$[ebp]
	mov	DWORD PTR [edx+8], eax

; 754  : 				break;

	jmp	SHORT $LN7@GrowSize@3
$LN6@GrowSize@3:

; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _uiNewSize$228704[ebp]
	mov	DWORD PTR [ecx+8], edx

; 759  : 		}

	jmp	SHORT $LN8@GrowSize@3
$LN7@GrowSize@3:

; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T245761[ebp], ecx
	cmp	DWORD PTR $T245761[ebp], 100		; 00000064H
	jbe	SHORT $LN16@GrowSize@3
	push	798					; 0000031eH
	push	OFFSET ??_C@_0FE@GLGBBJMA@d?3?2sources?2lekmod_git?2checkout?2l@
	push	4
	mov	edx, DWORD PTR $T245761[ebp]
	shl	edx, 3
	push	edx
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRet$245757[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T245761[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN17@GrowSize@3
$LN16@GrowSize@3:
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _pRet$245757[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 100			; 00000064H
$LN17@GrowSize@3:
	mov	ecx, DWORD PTR _pRet$245757[ebp]
	mov	DWORD PTR _pTemp$[ebp], ecx

; 762  : 		if( bPODType ){

	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@GrowSize@3

; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _pTemp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 764  : 		}else{

	jmp	SHORT $LN4@GrowSize@3
$LN5@GrowSize@3:

; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	mov	DWORD PTR _i$228712[ebp], 0
	jmp	SHORT $LN3@GrowSize@3
$LN2@GrowSize@3:
	mov	edx, DWORD PTR _i$228712[ebp]
	add	edx, 1
	mov	DWORD PTR _i$228712[ebp], edx
$LN3@GrowSize@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$228712[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN4@GrowSize@3

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	edx, DWORD PTR _i$228712[ebp]
	mov	eax, DWORD PTR _pTemp$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR $T245751[ebp], ecx
	cmp	DWORD PTR $T245751[ebp], 0
	je	SHORT $LN12@GrowSize@3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _i$228712[ebp]
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR $T245768[ebp], edx
	mov	eax, DWORD PTR $T245751[ebp]
	mov	ecx, DWORD PTR $T245768[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR $T245751[ebp]
	mov	ecx, DWORD PTR $T245768[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR $T245751[ebp]
	mov	DWORD PTR tv186[ebp], eax
	jmp	SHORT $LN13@GrowSize@3
$LN12@GrowSize@3:
	mov	DWORD PTR tv186[ebp], 0
$LN13@GrowSize@3:
	mov	ecx, DWORD PTR tv186[ebp]
	mov	DWORD PTR $T245750[ebp], ecx
	jmp	SHORT $LN2@GrowSize@3
$LN4@GrowSize@3:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T245790[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T245789[ebp], edx
	xor	eax, eax
	je	SHORT $LN24@GrowSize@3
	xor	ecx, ecx
	je	SHORT $LN24@GrowSize@3
	mov	DWORD PTR _i$245782[ebp], 0
	jmp	SHORT $LN29@GrowSize@3
$LN28@GrowSize@3:
	mov	edx, DWORD PTR _i$245782[ebp]
	add	edx, 1
	mov	DWORD PTR _i$245782[ebp], edx
$LN29@GrowSize@3:
	mov	eax, DWORD PTR _i$245782[ebp]
	cmp	eax, DWORD PTR $T245790[ebp]
	jae	SHORT $LN24@GrowSize@3
	jmp	SHORT $LN28@GrowSize@3
$LN24@GrowSize@3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	cmp	DWORD PTR $T245789[ebp], ecx
	je	SHORT $LN25@GrowSize@3
	mov	edx, DWORD PTR $T245789[ebp]
	push	edx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN25@GrowSize@3:

; 769  : 		m_pData = pTemp;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTemp$[ebp]
	mov	DWORD PTR [eax], ecx

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+812], 1

; 772  : 	};

	mov	esp, ebp
	pop	ebp
	ret	4
?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z ENDP ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::GrowSize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAE@XZ PROC ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAE@XZ ENDP ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>
_TEXT	ENDS
EXTRN	?Read@FDataStream@@IAEXAAD@Z:PROC		; FDataStream::Read
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?5D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@D@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??$?5D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@D@Z PROC	; operator>><char,128>, COMDAT

; 234  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 235  : 	size_t i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 236  : 	for(i = 0; i < count; ++i)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@operator@8
$LN2@operator@8:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@operator@8:
	cmp	DWORD PTR _i$[ebp], 128			; 00000080H
	jae	SHORT $LN1@operator@8

; 237  : 	{
; 238  : 		loadFrom >> writeTo[i];

	mov	ecx, DWORD PTR _writeTo$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAD@Z		; FDataStream::Read

; 239  : 	}

	jmp	SHORT $LN2@operator@8
$LN1@operator@8:

; 240  : 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[ebp]

; 241  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$?5D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@D@Z ENDP	; operator>><char,128>
_TEXT	ENDS
EXTRN	?Write@FDataStream@@IAEXABD@Z:PROC		; FDataStream::Write
; Function compile flags: /Odtp
;	COMDAT ??$?6D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@$$CBD@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??$?6D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@$$CBD@Z PROC	; operator<<<char,128>, COMDAT

; 223  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 224  : 	size_t i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 225  : 	for(i = 0; i < count; ++i)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@operator@9
$LN2@operator@9:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@operator@9:
	cmp	DWORD PTR _i$[ebp], 128			; 00000080H
	jae	SHORT $LN1@operator@9

; 226  : 	{
; 227  : 		saveTo << readFrom[i];

	mov	ecx, DWORD PTR _readFrom$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABD@Z		; FDataStream::Write

; 228  : 	}

	jmp	SHORT $LN2@operator@9
$LN1@operator@9:

; 229  : 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[ebp]

; 230  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$?6D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@$$CBD@Z ENDP	; operator<<<char,128>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z$1
__ehfuncinfo$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
xdata$x	ENDS
;	COMDAT ??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z
_TEXT	SEGMENT
$T245809 = -140						; size = 4
_str$ = -136						; size = 28
__$ArrayPad$ = -108					; size = 4
_bytes$ = -104						; size = 4
_text$ = -100						; size = 80
_szComposedString$ = -16				; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_szString$ = 12						; size = 4
_arg1$ = 16						; size = 4
_arg2$ = 20						; size = 4
??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z PROC ; GetLocalizedText<CvString,char const *>, COMDAT

; 514  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T245809[ebp], 0

; 515  : 	Localization::String text = Localization::Lookup(szString);

	mov	eax, DWORD PTR _szString$[ebp]
	push	eax
	lea	ecx, DWORD PTR _text$[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 516  : 	text << arg1 << arg2;

	mov	edx, DWORD PTR _arg2$[ebp]
	push	edx
	mov	eax, DWORD PTR _arg1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _text$[ebp]
	push	ecx
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8
	push	eax
	call	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
	add	esp, 8

; 517  : 
; 518  : 	size_t bytes = 0;

	mov	DWORD PTR _bytes$[ebp], 0

; 519  : 	const char* szComposedString = text.toUTF8(bytes);

	push	1
	lea	edx, DWORD PTR _bytes$[ebp]
	push	edx
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z
	mov	DWORD PTR _szComposedString$[ebp], eax

; 520  : 	CvString str;

	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 521  : 	str.assign(szComposedString, bytes);

	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szComposedString$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z

; 522  : 	return str;

	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T245809[ebp]
	or	eax, 1
	mov	DWORD PTR $T245809[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 523  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z$0:
	lea	ecx, DWORD PTR _text$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z$1:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z$2:
	mov	eax, DWORD PTR $T245809[ebp]
	and	eax, 1
	je	$LN6@GetLocaliz@2
	and	DWORD PTR $T245809[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN6@GetLocaliz@2:
	ret	0
__ehhandler$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z ENDP ; GetLocalizedText<CvString,char const *>
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z$2
__ehfuncinfo$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
xdata$x	ENDS
;	COMDAT ??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z
_TEXT	SEGMENT
$T245836 = -136						; size = 4
_str$ = -132						; size = 28
_bytes$ = -104						; size = 4
_text$ = -100						; size = 80
_szComposedString$ = -20				; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_szString$ = 12						; size = 4
_arg1$ = 16						; size = 28
??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z PROC ; GetLocalizedText<CvString>, COMDAT

; 501  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 124				; 0000007cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T245836[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 502  : 	Localization::String text = Localization::Lookup(szString);

	mov	eax, DWORD PTR _szString$[ebp]
	push	eax
	lea	ecx, DWORD PTR _text$[ebp]
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 503  : 	text << arg1;

	lea	edx, DWORD PTR _arg1$[ebp]
	push	edx
	lea	eax, DWORD PTR _text$[ebp]
	push	eax
	call	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
	add	esp, 8

; 504  : 
; 505  : 	size_t bytes = 0;

	mov	DWORD PTR _bytes$[ebp], 0

; 506  : 	const char* szComposedString = text.toUTF8(bytes);

	push	1
	lea	ecx, DWORD PTR _bytes$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z
	mov	DWORD PTR _szComposedString$[ebp], eax

; 507  : 	CvString str;

	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 508  : 	str.assign(szComposedString, bytes);

	mov	edx, DWORD PTR _bytes$[ebp]
	push	edx
	mov	eax, DWORD PTR _szComposedString$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z

; 509  : 	return str;

	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T245836[ebp]
	or	edx, 1
	mov	DWORD PTR $T245836[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _str$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _arg1$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 510  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z$0:
	lea	ecx, DWORD PTR _arg1$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z$1:
	lea	ecx, DWORD PTR _text$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z$2:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z$3:
	mov	eax, DWORD PTR $T245836[ebp]
	and	eax, 1
	je	$LN7@GetLocaliz@3
	and	DWORD PTR $T245836[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN7@GetLocaliz@3:
	ret	0
__ehhandler$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-128]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z ENDP ; GetLocalizedText<CvString>
EXTRN	__imp_?PushArgument@String@Localization@@QAE_NPBD@Z:PROC
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvlocalization\include\cvlocalization.h
;	COMDAT ??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z PROC	; operator<<<char const *>, COMDAT

; 490  : {

	push	ebp
	mov	ebp, esp

; 491  : 	s.PushArgument(val);

	mov	eax, DWORD PTR _val$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 492  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 493  : }

	pop	ebp
	ret	0
??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ENDP	; operator<<<char const *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z PROC ; operator<<<CvString>, COMDAT

; 490  : {

	push	ebp
	mov	ebp, esp

; 491  : 	s.PushArgument(val);

	mov	ecx, DWORD PTR _val$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 492  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 493  : }

	pop	ebp
	ret	0
??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ENDP ; operator<<<CvString>
_TEXT	ENDS
EXTRN	__imp__vsprintf_s:PROC
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdio.h
;	COMDAT ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Dest$ = 8						; size = 4
__Format$ = 12						; size = 4
??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ PROC		; sprintf_s<256>, COMDAT

; 322  : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(int, sprintf_s, vsprintf_s, char, _Dest, _In_z_ _Printf_format_string_ const char *, _Format)

	push	ebp
	mov	ebp, esp
	push	ecx
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	256					; 00000100H
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	DWORD PTR __imp__vsprintf_s
	add	esp, 16					; 00000010H
	mov	esp, ebp
	pop	ebp
	ret	0
??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ENDP		; sprintf_s<256>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\fireplace\include\fireworks\eventsystem\fastdelegate.h
_TEXT	ENDS
;	COMDAT ??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_func$ = 16						; size = 4
??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z PROC ; fastdelegate::MakeDelegate<CvGame,CvGame,int,char const *,int>, COMDAT

; 2030 : FastDelegate2<Param1, Param2, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2)) { 

	push	ebp
	mov	ebp, esp

; 2031 : 	return FastDelegate2<Param1, Param2, FASTDLGT_RETTYPE>(x, func);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR _func$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2032 : }

	pop	ebp
	ret	0
??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z ENDP ; fastdelegate::MakeDelegate<CvGame,CvGame,int,char const *,int>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
_TEXT	ENDS
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
EXTRN	__imp__memmove_s:PROC
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy@PAPAVCvReligionEntry@@PAPAV1@@stdext@@YAPAPAVCvReligionEntry@@PAPAV1@00@Z
_TEXT	SEGMENT
$T245928 = -26						; size = 1
$T245927 = -25						; size = 1
$T245926 = -24						; size = 4
$T245925 = -20						; size = 4
__Off$245922 = -16					; size = 4
__Result$245923 = -12					; size = 4
__Cat$245914 = -4					; size = 1
$T245910 = -3						; size = 1
$T245909 = -2						; size = 1
$T245908 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAPAVCvReligionEntry@@PAPAV1@@stdext@@YAPAPAVCvReligionEntry@@PAPAV1@00@Z PROC ; stdext::unchecked_copy<CvReligionEntry * *,CvReligionEntry * *>, COMDAT

; 3604 : 	{	// copy [_First, _Last) to [_Dest, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	xor	eax, eax
	mov	BYTE PTR $T245908[ebp], al
	mov	cl, BYTE PTR __Cat$245914[ebp]
	mov	BYTE PTR $T245909[ebp], cl
	mov	dl, BYTE PTR $T245908[ebp]
	mov	BYTE PTR $T245928[ebp], dl
	mov	al, BYTE PTR $T245910[ebp]
	mov	BYTE PTR $T245927[ebp], al
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T245926[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T245925[ebp], edx
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR $T245925[ebp]
	sar	eax, 2
	mov	DWORD PTR __Off$245922[ebp], eax
	mov	ecx, DWORD PTR __Off$245922[ebp]
	mov	edx, DWORD PTR $T245926[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR __Result$245923[ebp], eax
	cmp	DWORD PTR __Off$245922[ebp], 0
	jle	SHORT $LN8@unchecked_
	mov	ecx, DWORD PTR __Off$245922[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR $T245925[ebp]
	push	edx
	mov	eax, DWORD PTR __Off$245922[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR $T245926[ebp]
	push	ecx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN8@unchecked_:
	mov	eax, DWORD PTR __Result$245923[ebp]

; 3607 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_copy@PAPAVCvReligionEntry@@PAPAV1@@stdext@@YAPAPAVCvReligionEntry@@PAPAV1@00@Z ENDP ; stdext::unchecked_copy<CvReligionEntry * *,CvReligionEntry * *>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R0?AVbad_alloc@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
xdata$x	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_Ebad_alloc@std@@UAEPAXI@Z ; std::bad_alloc::`vftable'
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
CONST	ENDS
;	COMDAT ??$_Allocate@W4BeliefTypes@@@std@@YAPAW4BeliefTypes@@IPAW41@@Z
_TEXT	SEGMENT
$T245935 = -16						; size = 4
$T245931 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@W4BeliefTypes@@@std@@YAPAW4BeliefTypes@@IPAW41@@Z PROC ; std::_Allocate<enum BeliefTypes>, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate
$LN3@Allocate:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 4
	jae	SHORT $LN2@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T245935[ebp], 0
	lea	eax, DWORD PTR $T245935[ebp]
	push	eax
	lea	ecx, DWORD PTR $T245931[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T245931[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T245931[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@W4BeliefTypes@@@std@@YAPAW4BeliefTypes@@IPAW41@@Z ENDP ; std::_Allocate<enum BeliefTypes>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar@3
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??$_Allocate@PAVCvReligionEntry@@@std@@YAPAPAVCvReligionEntry@@IPAPAV1@@Z
_TEXT	SEGMENT
$T245949 = -16						; size = 4
$T245945 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVCvReligionEntry@@@std@@YAPAPAVCvReligionEntry@@IPAPAV1@@Z PROC ; std::_Allocate<CvReligionEntry *>, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@2

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@2
$LN3@Allocate@2:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 4
	jae	SHORT $LN2@Allocate@2

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T245949[ebp], 0
	lea	eax, DWORD PTR $T245949[ebp]
	push	eax
	lea	ecx, DWORD PTR $T245945[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T245945[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T245945[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate@2:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@2:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PAVCvReligionEntry@@@std@@YAPAPAVCvReligionEntry@@IPAPAV1@@Z ENDP ; std::_Allocate<CvReligionEntry *>
_TEXT	ENDS
PUBLIC	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
PUBLIC	??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Pop_heap_0<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
PUBLIC	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
PUBLIC	??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ; std::_Unguarded_partition<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z
_TEXT	SEGMENT
$T246076 = -128						; size = 4
__Mid$229309 = -12					; size = 8
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z PROC ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>, COMDAT

; 3082 : 	{	// order [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 180				; 000000b4H
$LN7@Sort:

; 3083 : 	_Diff _Count;
; 3084 : 	for (; _ISORT_MAX < (_Count = _Last - _First) && 0 < _Ideal; )

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	mov	DWORD PTR __Count$[ebp], eax
	cmp	DWORD PTR __Count$[ebp], 32		; 00000020H
	jle	$LN6@Sort
	cmp	DWORD PTR __Ideal$[ebp], 0
	jle	SHORT $LN6@Sort

; 3085 : 		{	// divide and conquer by quicksort
; 3086 : 		pair<_RanIt, _RanIt> _Mid =
; 3087 : 			std::_Unguarded_partition(_First, _Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR __Mid$229309[ebp]
	push	eax
	call	??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ; std::_Unguarded_partition<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3088 : 		_Ideal /= 2, _Ideal += _Ideal / 2;	// allow 1.5 log2(N) divisions

	mov	eax, DWORD PTR __Ideal$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Ideal$[ebp], eax
	mov	eax, DWORD PTR __Ideal$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR __Ideal$[ebp]
	mov	DWORD PTR __Ideal$[ebp], eax

; 3089 : 
; 3090 : 		if (_Mid.first - _First < _Last - _Mid.second)

	mov	ecx, DWORD PTR __Mid$229309[ebp]
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, DWORD PTR __Mid$229309[ebp+4]
	sar	edx, 3
	cmp	ecx, edx
	jge	SHORT $LN5@Sort

; 3091 : 			{	// loop on second half
; 3092 : 			std::_Sort(_First, _Mid.first, _Ideal);

	mov	eax, DWORD PTR __Ideal$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Mid$229309[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 3093 : 			_First = _Mid.second;

	mov	eax, DWORD PTR __Mid$229309[ebp+4]
	mov	DWORD PTR __First$[ebp], eax

; 3094 : 			}
; 3095 : 		else

	jmp	SHORT $LN4@Sort
$LN5@Sort:

; 3096 : 			{	// loop on first half
; 3097 : 			std::_Sort(_Mid.second, _Last, _Ideal);

	mov	ecx, DWORD PTR __Ideal$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mid$229309[ebp+4]
	push	eax
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 3098 : 			_Last = _Mid.first;

	mov	ecx, DWORD PTR __Mid$229309[ebp]
	mov	DWORD PTR __Last$[ebp], ecx
$LN4@Sort:

; 3099 : 			}
; 3100 : 		}

	jmp	$LN7@Sort
$LN6@Sort:

; 3101 : 
; 3102 : 	if (_ISORT_MAX < _Count)

	cmp	DWORD PTR __Count$[ebp], 32		; 00000020H
	jle	SHORT $LN3@Sort

; 3103 : 		{	// heap sort if too many divisions
; 3104 : 		std::make_heap(_First, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, DWORD PTR __First$[ebp]
	sar	edx, 3
	cmp	edx, 1
	jle	SHORT $LN76@Sort
	push	0
	push	0
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
	add	esp, 16					; 00000010H
$LN76@Sort:

; 3105 : 		std::sort_heap(_First, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR $T246076[ebp], edx
	jmp	SHORT $LN92@Sort
$LN91@Sort:
	mov	eax, DWORD PTR $T246076[ebp]
	sub	eax, 8
	mov	DWORD PTR $T246076[ebp], eax
$LN92@Sort:
	mov	ecx, DWORD PTR $T246076[ebp]
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	cmp	ecx, 1
	jle	SHORT $LN88@Sort
	mov	edx, DWORD PTR $T246076[ebp]
	sub	edx, DWORD PTR __First$[ebp]
	sar	edx, 3
	cmp	edx, 1
	jle	SHORT $LN96@Sort
	push	0
	mov	eax, DWORD PTR $T246076[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Pop_heap_0<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
	add	esp, 12					; 0000000cH
$LN96@Sort:
	jmp	SHORT $LN91@Sort
$LN88@Sort:

; 3106 : 		}
; 3107 : 	else if (1 < _Count)

	jmp	SHORT $LN8@Sort
$LN3@Sort:
	cmp	DWORD PTR __Count$[ebp], 1
	jle	SHORT $LN8@Sort

; 3108 : 		std::_Insertion_sort(_First, _Last);	// small

	push	0
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
	add	esp, 12					; 0000000cH
$LN8@Sort:

; 3109 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z ENDP ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv83 = -32						; size = 4
$T246173 = -28						; size = 4
__Vptr$246171 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<enum BeliefTypes *,unsigned int,enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT

; 393  : 	{	// copy _Count *_Val to raw _First, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 401  : 
; 402  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	jmp	SHORT $LN6@Uninit_fil
$LN5@Uninit_fil:
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Count$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_fil:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN4@Uninit_fil

; 404  : 		_Al.construct(_First, _Val);

	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Vptr$246171[ebp], eax
	mov	ecx, DWORD PTR __Vptr$246171[ebp]
	mov	DWORD PTR $T246173[ebp], ecx
	cmp	DWORD PTR $T246173[ebp], 0
	je	SHORT $LN18@Uninit_fil
	mov	edx, DWORD PTR $T246173[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T246173[ebp]
	mov	DWORD PTR tv83[ebp], edx
	jmp	SHORT $LN14@Uninit_fil
$LN18@Uninit_fil:
	mov	DWORD PTR tv83[ebp], 0
$LN14@Uninit_fil:
	jmp	SHORT $LN5@Uninit_fil
$LN4@Uninit_fil:
	jmp	SHORT $LN10@Uninit_fil
__catch$??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)

	jmp	SHORT $LN3@Uninit_fil
$LN2@Uninit_fil:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 4
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_fil:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	je	SHORT $LN1@Uninit_fil

; 407  : 		_Al.destroy(_Next);

	jmp	SHORT $LN2@Uninit_fil
$LN1@Uninit_fil:

; 408  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 409  : 	_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@Uninit_fil
	ret	0
$LN10@Uninit_fil:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@Uninit_fil:

; 410  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<enum BeliefTypes *,unsigned int,enum BeliefTypes,std::allocator<enum BeliefTypes> >
PUBLIC	?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ; CvString::formatv
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?Format@CvString@@QAAXPBDZZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Format@CvString@@QAAXPBDZZ$0
__ehfuncinfo$?Format@CvString@@QAAXPBDZZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Format@CvString@@QAAXPBDZZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?Format@CvString@@QAAXPBDZZ
_TEXT	SEGMENT
_result$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
_args$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_lpszFormat$ = 12					; size = 4
?Format@CvString@@QAAXPBDZZ PROC			; CvString::Format, COMDAT

; 269  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Format@CvString@@QAAXPBDZZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 2124				; 0000084cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 270  : 	std::string result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 271  : 	va_list args;
; 272  : 	va_start(args,lpszFormat);

	lea	eax, DWORD PTR _lpszFormat$[ebp+4]
	mov	DWORD PTR _args$[ebp], eax

; 273  : 	formatv(result,lpszFormat,args);

	mov	ecx, DWORD PTR _args$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpszFormat$[ebp]
	push	edx
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	call	?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ; CvString::formatv
	add	esp, 12					; 0000000cH

; 274  : 	va_end(args);

	mov	DWORD PTR _args$[ebp], 0

; 275  : 	*this = result;

	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z

; 276  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Format@CvString@@QAAXPBDZZ$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?Format@CvString@@QAAXPBDZZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-2128]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Format@CvString@@QAAXPBDZZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Format@CvString@@QAAXPBDZZ ENDP			; CvString::Format
PUBLIC	__$ArrayPad$
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp___vsnprintf:PROC
; Function compile flags: /Odtp
;	COMDAT ?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z
_TEXT	SEGMENT
tv74 = -2096						; size = 4
$T246222 = -2092					; size = 4
$T246221 = -2088					; size = 4
$T246220 = -2084					; size = 4
_maxlen$95294 = -2080					; size = 4
_kMaxAttempts$ = -2076					; size = 4
_buf$ = -2072						; size = 2048
__$ArrayPad$ = -20					; size = 4
_len$ = -16						; size = 4
_attempts$ = -12					; size = 4
_success$ = -5						; size = 1
_pbuf$ = -4						; size = 4
_out$ = 8						; size = 4
_fmt$ = 12						; size = 4
_args$ = 16						; size = 4
?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z PROC ; CvString::formatv, COMDAT

; 191  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 2096				; 00000830H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 192  : 	char buf[2048];
; 193  : 	char * pbuf = buf;

	lea	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR _pbuf$[ebp], eax

; 194  : 	int len = 0;

	mov	DWORD PTR _len$[ebp], 0

; 195  : 	int attempts = 0;

	mov	DWORD PTR _attempts$[ebp], 0

; 196  : 	bool success = false;

	mov	BYTE PTR _success$[ebp], 0

; 197  : 	const int kMaxAttempts = 40;

	mov	DWORD PTR _kMaxAttempts$[ebp], 40	; 00000028H
$LN10@formatv:

; 198  : 
; 199  : 	do
; 200  : 	{
; 201  : 		int maxlen = 2047+2048*attempts;

	mov	ecx, DWORD PTR _attempts$[ebp]
	shl	ecx, 11					; 0000000bH
	add	ecx, 2047				; 000007ffH
	mov	DWORD PTR _maxlen$95294[ebp], ecx

; 202  : 		len = _vsnprintf(pbuf,maxlen,fmt,args);

	mov	edx, DWORD PTR _args$[ebp]
	push	edx
	mov	eax, DWORD PTR _fmt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _maxlen$95294[ebp]
	push	ecx
	mov	edx, DWORD PTR _pbuf$[ebp]
	push	edx
	call	DWORD PTR __imp___vsnprintf
	add	esp, 16					; 00000010H
	mov	DWORD PTR _len$[ebp], eax

; 203  : 		attempts++;

	mov	eax, DWORD PTR _attempts$[ebp]
	add	eax, 1
	mov	DWORD PTR _attempts$[ebp], eax

; 204  : 		success = (len>=0 && len<=maxlen);

	cmp	DWORD PTR _len$[ebp], 0
	jl	SHORT $LN13@formatv
	mov	ecx, DWORD PTR _len$[ebp]
	cmp	ecx, DWORD PTR _maxlen$95294[ebp]
	jg	SHORT $LN13@formatv
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN14@formatv
$LN13@formatv:
	mov	DWORD PTR tv74[ebp], 0
$LN14@formatv:
	mov	dl, BYTE PTR tv74[ebp]
	mov	BYTE PTR _success$[ebp], dl

; 205  : 		if (!success)

	movzx	eax, BYTE PTR _success$[ebp]
	test	eax, eax
	jne	SHORT $LN9@formatv

; 206  : 		{
; 207  : 			if (pbuf!=buf)

	mov	ecx, DWORD PTR _pbuf$[ebp]
	lea	edx, DWORD PTR _buf$[ebp]
	cmp	ecx, edx
	je	SHORT $LN6@formatv

; 208  : 				delete [] pbuf;

	mov	eax, DWORD PTR _pbuf$[ebp]
	mov	DWORD PTR $T246220[ebp], eax
	mov	ecx, DWORD PTR $T246220[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN6@formatv:

; 209  : 			pbuf = new char[2048+2048*attempts];

	mov	edx, DWORD PTR _attempts$[ebp]
	shl	edx, 11					; 0000000bH
	add	edx, 2048				; 00000800H
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T246221[ebp], eax
	mov	eax, DWORD PTR $T246221[ebp]
	mov	DWORD PTR _pbuf$[ebp], eax
$LN9@formatv:

; 210  : 		}
; 211  : 	}
; 212  : 	while (!success && attempts<kMaxAttempts);

	movzx	ecx, BYTE PTR _success$[ebp]
	test	ecx, ecx
	jne	SHORT $LN4@formatv
	cmp	DWORD PTR _attempts$[ebp], 40		; 00000028H
	jl	$LN10@formatv
$LN4@formatv:

; 213  : 
; 214  : 	if ( attempts==kMaxAttempts )
; 215  : 	{
; 216  : 		// dxPrintNL( "CvString::formatv - Max reallocs occurred while formatting string. Result is likely truncated!", 0 );
; 217  : 	}
; 218  : 
; 219  : 	if (success)

	movzx	edx, BYTE PTR _success$[ebp]
	test	edx, edx
	je	SHORT $LN3@formatv

; 220  : 		out = pbuf;

	mov	eax, DWORD PTR _pbuf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 221  : 	else

	jmp	SHORT $LN2@formatv
$LN3@formatv:

; 222  : 		out = "";

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _out$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN2@formatv:

; 223  : 
; 224  : 	if (pbuf!=buf)

	mov	ecx, DWORD PTR _pbuf$[ebp]
	lea	edx, DWORD PTR _buf$[ebp]
	cmp	ecx, edx
	je	SHORT $LN1@formatv

; 225  : 		delete [] pbuf;

	mov	eax, DWORD PTR _pbuf$[ebp]
	mov	DWORD PTR $T246222[ebp], eax
	mov	ecx, DWORD PTR $T246222[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN1@formatv:

; 226  : 
; 227  : 	return success;

	mov	al, BYTE PTR _success$[ebp]

; 228  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ENDP ; CvString::formatv
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv94 = -36						; size = 4
$T246269 = -32						; size = 4
$T246264 = -28						; size = 4
__Vptr$246262 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 128  : 
; 129  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN16@Uninit_cop
$LN5@Uninit_cop:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN16@Uninit_cop:
	mov	eax, DWORD PTR __First$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last$[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN4@Uninit_cop

; 131  : 		_Al.construct(_Dest, *_First);

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T246269[ebp], ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Vptr$246262[ebp], edx
	mov	eax, DWORD PTR __Vptr$246262[ebp]
	mov	DWORD PTR $T246264[ebp], eax
	cmp	DWORD PTR $T246264[ebp], 0
	je	SHORT $LN26@Uninit_cop
	mov	ecx, DWORD PTR $T246264[ebp]
	mov	edx, DWORD PTR $T246269[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T246264[ebp]
	mov	DWORD PTR tv94[ebp], ecx
	jmp	SHORT $LN22@Uninit_cop
$LN26@Uninit_cop:
	mov	DWORD PTR tv94[ebp], 0
$LN22@Uninit_cop:
	jmp	SHORT $LN5@Uninit_cop
$LN4@Uninit_cop:
	jmp	SHORT $LN10@Uninit_cop
__catch$??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	jmp	SHORT $LN3@Uninit_cop
$LN2@Uninit_cop:
	mov	edx, DWORD PTR __Next$[ebp]
	add	edx, 4
	mov	DWORD PTR __Next$[ebp], edx
$LN3@Uninit_cop:
	mov	eax, DWORD PTR __Next$[ebp]
	cmp	eax, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_cop

; 134  : 		_Al.destroy(_Next);

	jmp	SHORT $LN2@Uninit_cop
$LN1@Uninit_cop:

; 135  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 136  : 	_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_cop:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1:

; 137  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_cop:

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
PUBLIC	??$_Median@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Median<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z
_TEXT	SEGMENT
$T246460 = -124						; size = 4
__Tmp$246456 = -120					; size = 8
$T246440 = -112						; size = 4
$T246439 = -108						; size = 4
__Tmp$246435 = -104					; size = 8
$T246419 = -96						; size = 4
__Tmp$246415 = -92					; size = 8
$T246399 = -84						; size = 4
$T246398 = -80						; size = 4
__Tmp$246394 = -76					; size = 8
$T246378 = -68						; size = 4
$T246377 = -64						; size = 4
__Tmp$246373 = -60					; size = 8
$T246354 = -52						; size = 4
$T246353 = -48						; size = 4
__Tmp$246349 = -44					; size = 8
$T246327 = -36						; size = 4
__Tmp$246323 = -32					; size = 8
__Plast$ = -20						; size = 4
__Glast$ = -16						; size = 4
__Pfirst$ = -12						; size = 4
__Gfirst$ = -8						; size = 4
__Mid$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z PROC ; std::_Unguarded_partition<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 3024 : 	{	// partition [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH

; 3025 : 	_RanIt _Mid = _First + (_Last - _First) / 2;	// sort median to _Mid

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR __Mid$[ebp], edx

; 3026 : 	std::_Median(_First, _Mid, _Last - 1);

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, 8
	push	eax
	mov	ecx, DWORD PTR __Mid$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Median@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Median<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3027 : 	_RanIt _Pfirst = _Mid;

	mov	eax, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR __Pfirst$[ebp], eax

; 3028 : 	_RanIt _Plast = _Pfirst + 1;

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx
$LN27@Unguarded_:

; 3029 : 
; 3030 : 	while (_First < _Pfirst
; 3031 : 		&& !_DEBUG_LT(*(_Pfirst - 1), *_Pfirst)
; 3032 : 		&& !(*_Pfirst < *(_Pfirst - 1)))

	mov	edx, DWORD PTR __First$[ebp]
	cmp	edx, DWORD PTR __Pfirst$[ebp]
	jae	SHORT $LN25@Unguarded_
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR [eax-4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN25@Unguarded_
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax-4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	jne	SHORT $LN25@Unguarded_

; 3033 : 		--_Pfirst;

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	sub	ecx, 8
	mov	DWORD PTR __Pfirst$[ebp], ecx
	jmp	SHORT $LN27@Unguarded_
$LN25@Unguarded_:

; 3034 : 	while (_Plast < _Last
; 3035 : 		&& !_DEBUG_LT(*_Plast, *_Pfirst)
; 3036 : 		&& !(*_Pfirst < *_Plast))

	mov	edx, DWORD PTR __Plast$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	jae	SHORT $LN24@Unguarded_
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN24@Unguarded_
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	jne	SHORT $LN24@Unguarded_

; 3037 : 		++_Plast;

	mov	ecx, DWORD PTR __Plast$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx
	jmp	SHORT $LN25@Unguarded_
$LN24@Unguarded_:

; 3038 : 
; 3039 : 	_RanIt _Gfirst = _Plast;

	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR __Gfirst$[ebp], edx

; 3040 : 	_RanIt _Glast = _Pfirst;

	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR __Glast$[ebp], eax
$LN23@Unguarded_:

; 3041 : 
; 3042 : 	for (; ; )
; 3043 : 		{	// partition
; 3044 : 		for (; _Gfirst < _Last; ++_Gfirst)

	jmp	SHORT $LN21@Unguarded_
$LN20@Unguarded_:
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Gfirst$[ebp], ecx
$LN21@Unguarded_:
	mov	edx, DWORD PTR __Gfirst$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	jae	$LN19@Unguarded_

; 3045 : 			if (_DEBUG_LT(*_Pfirst, *_Gfirst))

	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN44@Unguarded_
	jmp	SHORT $LN17@Unguarded_

; 3046 : 				;
; 3047 : 			else if (*_Gfirst < *_Pfirst)

$LN44@Unguarded_:
	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN16@Unguarded_

; 3048 : 				break;

	jmp	SHORT $LN19@Unguarded_

; 3049 : 			else

	jmp	SHORT $LN17@Unguarded_
$LN16@Unguarded_:

; 3050 : 				std::iter_swap(_Plast++, _Gfirst);

	mov	ecx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T246327[ebp], ecx
	mov	edx, DWORD PTR __Plast$[ebp]
	add	edx, 8
	mov	DWORD PTR __Plast$[ebp], edx
	mov	eax, DWORD PTR $T246327[ebp]
	cmp	eax, DWORD PTR __Gfirst$[ebp]
	je	SHORT $LN17@Unguarded_
	mov	ecx, DWORD PTR $T246327[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$246323[ebp], edx
	mov	eax, DWORD PTR $T246327[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$246323[ebp+4], ecx
	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T246327[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR __Gfirst$[ebp]
	mov	ecx, DWORD PTR __Tmp$246323[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$246323[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN17@Unguarded_:
	jmp	$LN20@Unguarded_
$LN19@Unguarded_:

; 3051 : 		for (; _First < _Glast; --_Glast)

	jmp	SHORT $LN14@Unguarded_
$LN13@Unguarded_:
	mov	eax, DWORD PTR __Glast$[ebp]
	sub	eax, 8
	mov	DWORD PTR __Glast$[ebp], eax
$LN14@Unguarded_:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Glast$[ebp]
	jae	$LN12@Unguarded_

; 3052 : 			if (_DEBUG_LT(*(_Glast - 1), *_Pfirst))

	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	ecx, DWORD PTR [edx-4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN55@Unguarded_
	jmp	SHORT $LN10@Unguarded_

; 3053 : 				;
; 3054 : 			else if (*_Pfirst < *(_Glast - 1))

$LN55@Unguarded_:
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx-4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN9@Unguarded_

; 3055 : 				break;

	jmp	SHORT $LN12@Unguarded_

; 3056 : 			else

	jmp	SHORT $LN10@Unguarded_
$LN9@Unguarded_:

; 3057 : 				std::iter_swap(--_Pfirst, _Glast - 1);

	mov	eax, DWORD PTR __Pfirst$[ebp]
	sub	eax, 8
	mov	DWORD PTR __Pfirst$[ebp], eax
	mov	ecx, DWORD PTR __Glast$[ebp]
	sub	ecx, 8
	mov	DWORD PTR $T246354[ebp], ecx
	mov	edx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T246353[ebp], edx
	mov	eax, DWORD PTR $T246353[ebp]
	cmp	eax, DWORD PTR $T246354[ebp]
	je	SHORT $LN10@Unguarded_
	mov	ecx, DWORD PTR $T246353[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$246349[ebp], edx
	mov	eax, DWORD PTR $T246353[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$246349[ebp+4], ecx
	mov	edx, DWORD PTR $T246354[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T246353[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T246354[ebp]
	mov	ecx, DWORD PTR __Tmp$246349[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$246349[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN10@Unguarded_:
	jmp	$LN13@Unguarded_
$LN12@Unguarded_:

; 3058 : 		if (_Glast == _First && _Gfirst == _Last)

	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jne	SHORT $LN7@Unguarded_
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	jne	SHORT $LN7@Unguarded_

; 3059 : 			return (pair<_RanIt, _RanIt>(_Pfirst, _Plast));

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN28@Unguarded_
$LN7@Unguarded_:

; 3060 : 
; 3061 : 		if (_Glast == _First)

	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jne	$LN6@Unguarded_

; 3062 : 			{	// no room at bottom, rotate pivot upward
; 3063 : 			if (_Plast != _Gfirst)

	mov	ecx, DWORD PTR __Plast$[ebp]
	cmp	ecx, DWORD PTR __Gfirst$[ebp]
	je	SHORT $LN5@Unguarded_

; 3064 : 				std::iter_swap(_Pfirst, _Plast);

	mov	edx, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T246378[ebp], edx
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T246377[ebp], eax
	mov	ecx, DWORD PTR $T246377[ebp]
	cmp	ecx, DWORD PTR $T246378[ebp]
	je	SHORT $LN5@Unguarded_
	mov	edx, DWORD PTR $T246377[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$246373[ebp], eax
	mov	ecx, DWORD PTR $T246377[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$246373[ebp+4], edx
	mov	eax, DWORD PTR $T246378[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR $T246377[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T246378[ebp]
	mov	edx, DWORD PTR __Tmp$246373[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$246373[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN5@Unguarded_:

; 3065 : 			++_Plast;

	mov	ecx, DWORD PTR __Plast$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Plast$[ebp], ecx

; 3066 : 			std::iter_swap(_Pfirst++, _Gfirst++);

	mov	edx, DWORD PTR __Gfirst$[ebp]
	mov	DWORD PTR $T246399[ebp], edx
	mov	eax, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T246398[ebp], eax
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Pfirst$[ebp], ecx
	mov	edx, DWORD PTR __Gfirst$[ebp]
	add	edx, 8
	mov	DWORD PTR __Gfirst$[ebp], edx
	mov	eax, DWORD PTR $T246398[ebp]
	cmp	eax, DWORD PTR $T246399[ebp]
	je	SHORT $LN73@Unguarded_
	mov	ecx, DWORD PTR $T246398[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$246394[ebp], edx
	mov	eax, DWORD PTR $T246398[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$246394[ebp+4], ecx
	mov	edx, DWORD PTR $T246399[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T246398[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T246399[ebp]
	mov	ecx, DWORD PTR __Tmp$246394[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$246394[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN73@Unguarded_:

; 3067 : 			}
; 3068 : 		else if (_Gfirst == _Last)

	jmp	$LN4@Unguarded_
$LN6@Unguarded_:
	mov	eax, DWORD PTR __Gfirst$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	$LN3@Unguarded_

; 3069 : 			{	// no room at top, rotate pivot downward
; 3070 : 			if (--_Glast != --_Pfirst)

	mov	ecx, DWORD PTR __Glast$[ebp]
	sub	ecx, 8
	mov	DWORD PTR __Glast$[ebp], ecx
	mov	edx, DWORD PTR __Pfirst$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Pfirst$[ebp], edx
	mov	eax, DWORD PTR __Glast$[ebp]
	cmp	eax, DWORD PTR __Pfirst$[ebp]
	je	SHORT $LN2@Unguarded_

; 3071 : 				std::iter_swap(_Glast, _Pfirst);

	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T246419[ebp], ecx
	mov	edx, DWORD PTR __Glast$[ebp]
	cmp	edx, DWORD PTR $T246419[ebp]
	je	SHORT $LN2@Unguarded_
	mov	eax, DWORD PTR __Glast$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$246415[ebp], ecx
	mov	edx, DWORD PTR __Glast$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$246415[ebp+4], eax
	mov	ecx, DWORD PTR $T246419[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Glast$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T246419[ebp]
	mov	eax, DWORD PTR __Tmp$246415[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$246415[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN2@Unguarded_:

; 3072 : 			std::iter_swap(_Pfirst, --_Plast);

	mov	edx, DWORD PTR __Plast$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Plast$[ebp], edx
	mov	eax, DWORD PTR __Plast$[ebp]
	mov	DWORD PTR $T246440[ebp], eax
	mov	ecx, DWORD PTR __Pfirst$[ebp]
	mov	DWORD PTR $T246439[ebp], ecx
	mov	edx, DWORD PTR $T246439[ebp]
	cmp	edx, DWORD PTR $T246440[ebp]
	je	SHORT $LN87@Unguarded_
	mov	eax, DWORD PTR $T246439[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$246435[ebp], ecx
	mov	edx, DWORD PTR $T246439[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$246435[ebp+4], eax
	mov	ecx, DWORD PTR $T246440[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR $T246439[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T246440[ebp]
	mov	eax, DWORD PTR __Tmp$246435[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$246435[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN87@Unguarded_:

; 3073 : 			}
; 3074 : 		else

	jmp	SHORT $LN4@Unguarded_
$LN3@Unguarded_:

; 3075 : 			std::iter_swap(_Gfirst++, --_Glast);

	mov	edx, DWORD PTR __Glast$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Glast$[ebp], edx
	mov	eax, DWORD PTR __Gfirst$[ebp]
	mov	DWORD PTR $T246460[ebp], eax
	mov	ecx, DWORD PTR $T246460[ebp]
	cmp	ecx, DWORD PTR __Glast$[ebp]
	je	SHORT $LN94@Unguarded_
	mov	edx, DWORD PTR $T246460[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$246456[ebp], eax
	mov	ecx, DWORD PTR $T246460[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$246456[ebp+4], edx
	mov	eax, DWORD PTR __Glast$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR $T246460[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR __Glast$[ebp]
	mov	edx, DWORD PTR __Tmp$246456[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$246456[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN94@Unguarded_:
	mov	ecx, DWORD PTR __Gfirst$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Gfirst$[ebp], ecx
$LN4@Unguarded_:

; 3076 : 		}

	jmp	$LN23@Unguarded_
$LN28@Unguarded_:

; 3077 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ENDP ; std::_Unguarded_partition<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Odtp
;	COMDAT ??$_Median@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z
_TEXT	SEGMENT
__Step$229703 = -4					; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Median@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z PROC ; std::_Median<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 3009 : 	{	// sort median element to middle

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH

; 3010 : 	if (40 < _Last - _First)

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	cmp	eax, 40					; 00000028H
	jle	$LN2@Median

; 3011 : 		{	// median of nine
; 3012 : 		size_t _Step = (_Last - _First + 1) / 8;

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	add	eax, 1
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR __Step$229703[ebp], eax

; 3013 : 		std::_Med3(_First, _First + _Step, _First + 2 * _Step);

	mov	ecx, DWORD PTR __Step$229703[ebp]
	shl	ecx, 1
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	mov	ecx, DWORD PTR __Step$229703[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3014 : 		std::_Med3(_Mid - _Step, _Mid, _Mid + _Step);

	mov	edx, DWORD PTR __Step$229703[ebp]
	mov	eax, DWORD PTR __Mid$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	push	ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	push	edx
	mov	eax, DWORD PTR __Step$229703[ebp]
	shl	eax, 3
	mov	ecx, DWORD PTR __Mid$[ebp]
	sub	ecx, eax
	push	ecx
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3015 : 		std::_Med3(_Last - 2 * _Step, _Last - _Step, _Last);

	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Step$229703[ebp]
	shl	eax, 3
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR __Step$229703[ebp]
	shl	edx, 1
	shl	edx, 3
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, edx
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3016 : 		std::_Med3(_First + _Step, _Mid, _Last - _Step);

	mov	ecx, DWORD PTR __Step$229703[ebp]
	shl	ecx, 3
	mov	edx, DWORD PTR __Last$[ebp]
	sub	edx, ecx
	push	edx
	mov	eax, DWORD PTR __Mid$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Step$229703[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3017 : 		}
; 3018 : 	else

	jmp	SHORT $LN3@Median
$LN2@Median:

; 3019 : 		std::_Med3(_First, _Mid, _Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
	add	esp, 12					; 0000000cH
$LN3@Median:

; 3020 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Median@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ENDP ; std::_Median<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
; Function compile flags: /Odtp
;	COMDAT ??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0PAH0@Z
_TEXT	SEGMENT
$T246773 = -20						; size = 4
$T246772 = -16						; size = 4
__Hole$229721 = -8					; size = 4
__Bottom$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0PAH0@Z PROC ; std::_Make_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>, COMDAT

; 2164 : 	{	// make nontrivial [_First, _Last) into a heap, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 2165 : 	_Diff _Bottom = _Last - _First;

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3
	mov	DWORD PTR __Bottom$[ebp], eax

; 2166 : 
; 2167 : 	for (_Diff _Hole = _Bottom / 2; 0 < _Hole; )

	mov	eax, DWORD PTR __Bottom$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Hole$229721[ebp], eax
$LN2@Make_heap:
	cmp	DWORD PTR __Hole$229721[ebp], 0
	jle	SHORT $LN3@Make_heap

; 2168 : 		{	// reheap top half, bottom to top
; 2169 : 		--_Hole;

	mov	ecx, DWORD PTR __Hole$229721[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Hole$229721[ebp], ecx

; 2170 : 		std::_Adjust_heap(_First, _Hole, _Bottom,
; 2171 : 			_Ty(*(_First + _Hole)));

	mov	edx, DWORD PTR __Hole$229721[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR $T246773[ebp], ecx
	sub	esp, 8
	mov	DWORD PTR $T246772[ebp], esp
	mov	edx, DWORD PTR $T246772[ebp]
	mov	eax, DWORD PTR $T246773[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T246772[ebp]
	mov	eax, DWORD PTR $T246773[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR __Bottom$[ebp]
	push	edx
	mov	eax, DWORD PTR __Hole$229721[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2172 : 		}

	jmp	SHORT $LN2@Make_heap
$LN3@Make_heap:

; 2173 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0PAH0@Z ENDP ; std::_Make_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z
_TEXT	SEGMENT
$T246843 = -52						; size = 4
$T246842 = -48						; size = 4
$T246826 = -42						; size = 1
$T246825 = -41						; size = 1
$T246824 = -40						; size = 4
$T246823 = -36						; size = 4
$T246822 = -32						; size = 4
__Cat$246833 = -24					; size = 1
$T246830 = -23						; size = 1
$T246829 = -22						; size = 1
$T246828 = -21						; size = 1
__First1$229762 = -20					; size = 4
__Val$229752 = -16					; size = 8
__Next1$229751 = -8					; size = 4
__Next$229747 = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z PROC ; std::_Insertion_sort1<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>, COMDAT

; 2967 : 	{	// insertion sort [_First, _Last), using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H

; 2968 : 	if (_First != _Last)

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	$LN9@Insertion_

; 2969 : 		for (_BidIt _Next = _First; ++_Next != _Last; )

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$229747[ebp], ecx
$LN7@Insertion_:
	mov	edx, DWORD PTR __Next$229747[ebp]
	add	edx, 8
	mov	DWORD PTR __Next$229747[ebp], edx
	mov	eax, DWORD PTR __Next$229747[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	$LN9@Insertion_

; 2970 : 			{	// order next element
; 2971 : 			_BidIt _Next1 = _Next;

	mov	ecx, DWORD PTR __Next$229747[ebp]
	mov	DWORD PTR __Next1$229751[ebp], ecx

; 2972 : 			_Ty _Val = *_Next;

	mov	edx, DWORD PTR __Next$229747[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Val$229752[ebp], eax
	mov	ecx, DWORD PTR __Next$229747[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Val$229752[ebp+4], edx

; 2973 : 
; 2974 : 			if (_DEBUG_LT(_Val, *_First))

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Val$229752[ebp+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN5@Insertion_

; 2975 : 				{	// found new earliest element, move to front
; 2976 : 				_STDEXT unchecked_copy_backward(_First, _Next, ++_Next1);

	mov	ecx, DWORD PTR __Next1$229751[ebp]
	add	ecx, 8
	mov	DWORD PTR __Next1$229751[ebp], ecx
	mov	edx, DWORD PTR __Next1$229751[ebp]
	mov	DWORD PTR $T246843[ebp], edx
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T246842[ebp], eax
	xor	ecx, ecx
	mov	BYTE PTR $T246828[ebp], cl
	mov	dl, BYTE PTR __Cat$246833[ebp]
	mov	BYTE PTR $T246829[ebp], dl
	mov	al, BYTE PTR $T246828[ebp]
	mov	BYTE PTR $T246826[ebp], al
	mov	cl, BYTE PTR $T246830[ebp]
	mov	BYTE PTR $T246825[ebp], cl
	mov	edx, DWORD PTR $T246843[ebp]
	mov	DWORD PTR $T246824[ebp], edx
	mov	eax, DWORD PTR __Next$229747[ebp]
	mov	DWORD PTR $T246823[ebp], eax
	mov	ecx, DWORD PTR $T246842[ebp]
	mov	DWORD PTR $T246822[ebp], ecx
$LN22@Insertion_:
	mov	edx, DWORD PTR $T246822[ebp]
	cmp	edx, DWORD PTR $T246823[ebp]
	je	SHORT $LN15@Insertion_
	mov	eax, DWORD PTR $T246823[ebp]
	sub	eax, 8
	mov	DWORD PTR $T246823[ebp], eax
	mov	ecx, DWORD PTR $T246824[ebp]
	sub	ecx, 8
	mov	DWORD PTR $T246824[ebp], ecx
	mov	edx, DWORD PTR $T246823[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR $T246824[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	jmp	SHORT $LN22@Insertion_
$LN15@Insertion_:

; 2977 : 				*_First = _Val;

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Val$229752[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Val$229752[ebp+4]
	mov	DWORD PTR [eax+4], edx

; 2978 : 				}
; 2979 : 			else

	jmp	SHORT $LN4@Insertion_
$LN5@Insertion_:

; 2980 : 				{	// look for insertion point after first
; 2981 : 				for (_BidIt _First1 = _Next1;

	mov	eax, DWORD PTR __Next1$229751[ebp]
	mov	DWORD PTR __First1$229762[ebp], eax

; 2982 : 					_DEBUG_LT(_Val, *--_First1);
; 2983 : 					_Next1 = _First1)

	jmp	SHORT $LN3@Insertion_
$LN2@Insertion_:
	mov	ecx, DWORD PTR __First1$229762[ebp]
	mov	DWORD PTR __Next1$229751[ebp], ecx
$LN3@Insertion_:
	mov	edx, DWORD PTR __First1$229762[ebp]
	sub	edx, 8
	mov	DWORD PTR __First1$229762[ebp], edx
	mov	eax, DWORD PTR __First1$229762[ebp]
	mov	ecx, DWORD PTR __Val$229752[ebp+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN1@Insertion_

; 2984 : 					*_Next1 = *_First1;	// move hole down

	mov	ecx, DWORD PTR __First1$229762[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Next1$229751[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	jmp	SHORT $LN2@Insertion_
$LN1@Insertion_:

; 2985 : 				*_Next1 = _Val;	// insert element in hole

	mov	edx, DWORD PTR __Next1$229751[ebp]
	mov	eax, DWORD PTR __Val$229752[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Val$229752[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN4@Insertion_:

; 2986 : 				}
; 2987 : 			}

	jmp	$LN7@Insertion_
$LN9@Insertion_:

; 2988 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ENDP ; std::_Insertion_sort1<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??$unchecked_uninitialized_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@std@@@Z
_TEXT	SEGMENT
__Cat$246854 = -3					; size = 1
$T246850 = -2						; size = 1
$T246849 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ebp
	mov	ebp, esp
	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	xor	eax, eax
	mov	BYTE PTR $T246849[ebp], al
	mov	cl, BYTE PTR __Cat$246854[ebp]
	mov	BYTE PTR $T246850[ebp], cl
	movzx	edx, BYTE PTR $T246849[ebp]
	push	edx
	movzx	eax, BYTE PTR $T246850[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
	add	esp, 24					; 00000018H

; 823  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_uninitialized_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv143 = -36						; size = 4
$T246911 = -32						; size = 4
$T246904 = -28						; size = 4
__Vptr$246910 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 128  : 
; 129  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN18@Uninit_cop@2
$LN5@Uninit_cop@2:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN18@Uninit_cop@2:
	mov	eax, DWORD PTR __First$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR __Last$[ebp]
	sete	cl
	movzx	edx, cl
	neg	edx
	sbb	edx, edx
	add	edx, 1
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN4@Uninit_cop@2

; 131  : 		_Al.construct(_Dest, *_First);

	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T246911[ebp], ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Vptr$246910[ebp], edx
	mov	eax, DWORD PTR __Vptr$246910[ebp]
	mov	DWORD PTR $T246904[ebp], eax
	cmp	DWORD PTR $T246904[ebp], 0
	je	SHORT $LN30@Uninit_cop@2
	mov	ecx, DWORD PTR $T246904[ebp]
	mov	edx, DWORD PTR $T246911[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	ecx, DWORD PTR $T246904[ebp]
	mov	DWORD PTR tv143[ebp], ecx
	jmp	SHORT $LN26@Uninit_cop@2
$LN30@Uninit_cop@2:
	mov	DWORD PTR tv143[ebp], 0
$LN26@Uninit_cop@2:
	jmp	SHORT $LN5@Uninit_cop@2
$LN4@Uninit_cop@2:
	jmp	SHORT $LN10@Uninit_cop@2
__catch$??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	jmp	SHORT $LN3@Uninit_cop@2
$LN2@Uninit_cop@2:
	mov	edx, DWORD PTR __Next$[ebp]
	add	edx, 4
	mov	DWORD PTR __Next$[ebp], edx
$LN3@Uninit_cop@2:
	mov	eax, DWORD PTR __Next$[ebp]
	cmp	eax, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_cop@2

; 134  : 		_Al.destroy(_Next);

	jmp	SHORT $LN2@Uninit_cop@2
$LN1@Uninit_cop@2:

; 135  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 136  : 	_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_cop@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1:

; 137  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_cop@2:

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z
_TEXT	SEGMENT
__Tmp$246995 = -24					; size = 8
__Tmp$246973 = -16					; size = 8
__Tmp$246951 = -8					; size = 8
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z PROC ; std::_Med3<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 2998 : 	{	// sort median of three elements to middle

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H

; 2999 : 	if (_DEBUG_LT(*_Mid, *_First))

	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@Med3

; 3000 : 		std::iter_swap(_Mid, _First);

	mov	edx, DWORD PTR __Mid$[ebp]
	cmp	edx, DWORD PTR __First$[ebp]
	je	SHORT $LN15@Med3
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$246951[ebp], ecx
	mov	edx, DWORD PTR __Mid$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Tmp$246951[ebp+4], eax
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Tmp$246951[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Tmp$246951[ebp+4]
	mov	DWORD PTR [edx+4], ecx

; 3001 : 	if (_DEBUG_LT(*_Last, *_Mid))

$LN15@Med3:
	mov	edx, DWORD PTR __Last$[ebp]
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	setg	dl
	movzx	eax, dl
	test	eax, eax
	je	SHORT $LN24@Med3

; 3002 : 		std::iter_swap(_Last, _Mid);

	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __Mid$[ebp]
	je	SHORT $LN24@Med3
	mov	edx, DWORD PTR __Last$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$246973[ebp], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Tmp$246973[ebp+4], edx
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR __Tmp$246973[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Tmp$246973[ebp+4]
	mov	DWORD PTR [ecx+4], eax

; 3003 : 	if (_DEBUG_LT(*_Mid, *_First))

$LN24@Med3:
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN4@Med3

; 3004 : 		std::iter_swap(_Mid, _First);

	mov	eax, DWORD PTR __Mid$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	je	SHORT $LN4@Med3
	mov	ecx, DWORD PTR __Mid$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$246995[ebp], edx
	mov	eax, DWORD PTR __Mid$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$246995[ebp+4], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __Mid$[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Tmp$246995[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$246995[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN4@Med3:

; 3005 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ENDP ; std::_Med3<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z
_TEXT	SEGMENT
$T247020 = -32						; size = 4
$T247019 = -28						; size = 8
__Idx$247015 = -20					; size = 4
$T247006 = -16						; size = 4
__Idx$ = -8						; size = 4
__Top$ = -4						; size = 4
__First$ = 8						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 8
??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z PROC ; std::_Adjust_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>, COMDAT

; 2055 : 	{	// percolate _Hole to _Bottom, then push _Val, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi

; 2056 : 	_Diff _Top = _Hole;

	mov	eax, DWORD PTR __Hole$[ebp]
	mov	DWORD PTR __Top$[ebp], eax

; 2057 : 	_Diff _Idx = 2 * _Hole + 2;

	mov	ecx, DWORD PTR __Hole$[ebp]
	lea	edx, DWORD PTR [ecx+ecx+2]
	mov	DWORD PTR __Idx$[ebp], edx

; 2058 : 
; 2059 : 	for (; _Idx < _Bottom; _Idx = 2 * _Idx + 2)

	jmp	SHORT $LN5@Adjust_hea
$LN4@Adjust_hea:
	mov	eax, DWORD PTR __Idx$[ebp]
	lea	ecx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR __Idx$[ebp], ecx
$LN5@Adjust_hea:
	mov	edx, DWORD PTR __Idx$[ebp]
	cmp	edx, DWORD PTR __Bottom$[ebp]
	jge	SHORT $LN3@Adjust_hea

; 2060 : 		{	// move _Hole down to larger child
; 2061 : 		if (_DEBUG_LT(*(_First + _Idx), *(_First + (_Idx - 1))))

	mov	eax, DWORD PTR __Idx$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR __Idx$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [ecx+eax*8+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [esi+edx*8-4]
	setg	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN2@Adjust_hea

; 2062 : 			--_Idx;

	mov	eax, DWORD PTR __Idx$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Idx$[ebp], eax
$LN2@Adjust_hea:

; 2063 : 		*(_First + _Hole) = *(_First + _Idx), _Hole = _Idx;

	mov	ecx, DWORD PTR __Idx$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx+ecx*8]
	mov	ecx, DWORD PTR [edx+ecx*8+4]
	mov	edx, DWORD PTR __Hole$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+edx*8], eax
	mov	DWORD PTR [esi+edx*8+4], ecx
	mov	eax, DWORD PTR __Idx$[ebp]
	mov	DWORD PTR __Hole$[ebp], eax

; 2064 : 		}

	jmp	SHORT $LN4@Adjust_hea
$LN3@Adjust_hea:

; 2065 : 
; 2066 : 	if (_Idx == _Bottom)

	mov	ecx, DWORD PTR __Idx$[ebp]
	cmp	ecx, DWORD PTR __Bottom$[ebp]
	jne	SHORT $LN1@Adjust_hea

; 2067 : 		{	// only child at bottom, move _Hole down to it
; 2068 : 		*(_First + _Hole) = *(_First + (_Bottom - 1));

	mov	edx, DWORD PTR __Bottom$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8-8]
	mov	edx, DWORD PTR [eax+edx*8-4]
	mov	eax, DWORD PTR __Hole$[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+eax*8], ecx
	mov	DWORD PTR [esi+eax*8+4], edx

; 2069 : 		_Hole = _Bottom - 1;

	mov	ecx, DWORD PTR __Bottom$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Hole$[ebp], ecx
$LN1@Adjust_hea:

; 2070 : 		}
; 2071 : 	std::_Push_heap(_First, _Hole, _Top, _Val);

	lea	edx, DWORD PTR $T247019[ebp]
	mov	DWORD PTR $T247006[ebp], edx
	mov	eax, DWORD PTR $T247006[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T247006[ebp]
	mov	eax, DWORD PTR __Val$[ebp+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR __Hole$[ebp]
	mov	DWORD PTR $T247020[ebp], ecx
	mov	eax, DWORD PTR $T247020[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Idx$247015[ebp], eax
	jmp	SHORT $LN14@Adjust_hea
$LN13@Adjust_hea:
	mov	eax, DWORD PTR $T247020[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Idx$247015[ebp], eax
$LN14@Adjust_hea:
	mov	edx, DWORD PTR __Top$[ebp]
	cmp	edx, DWORD PTR $T247020[ebp]
	jge	SHORT $LN12@Adjust_hea
	mov	eax, DWORD PTR __Idx$247015[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+4]
	xor	eax, eax
	cmp	edx, DWORD PTR $T247019[ebp+4]
	setg	al
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@Adjust_hea
	mov	edx, DWORD PTR __Idx$247015[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8]
	mov	edx, DWORD PTR [eax+edx*8+4]
	mov	eax, DWORD PTR $T247020[ebp]
	mov	esi, DWORD PTR __First$[ebp]
	mov	DWORD PTR [esi+eax*8], ecx
	mov	DWORD PTR [esi+eax*8+4], edx
	mov	ecx, DWORD PTR __Idx$247015[ebp]
	mov	DWORD PTR $T247020[ebp], ecx
	jmp	SHORT $LN13@Adjust_hea
$LN12@Adjust_hea:
	mov	edx, DWORD PTR $T247020[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR $T247019[ebp]
	mov	DWORD PTR [eax+edx*8], ecx
	mov	ecx, DWORD PTR $T247019[ebp+4]
	mov	DWORD PTR [eax+edx*8+4], ecx

; 2072 : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z ENDP ; std::_Adjust_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
tv83 = -32						; size = 4
$T247048 = -28						; size = 4
__Vptr$247046 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >, COMDAT

; 124  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax

; 128  : 
; 129  : 	_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN6@Uninit_cop@3
$LN5@Uninit_cop@3:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_cop@3:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop@3

; 131  : 		_Al.construct(_Dest, *_First);

	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Vptr$247046[ebp], ecx
	mov	edx, DWORD PTR __Vptr$247046[ebp]
	mov	DWORD PTR $T247048[ebp], edx
	cmp	DWORD PTR $T247048[ebp], 0
	je	SHORT $LN18@Uninit_cop@3
	mov	eax, DWORD PTR $T247048[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR $T247048[ebp]
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN14@Uninit_cop@3
$LN18@Uninit_cop@3:
	mov	DWORD PTR tv83[ebp], 0
$LN14@Uninit_cop@3:
	jmp	SHORT $LN5@Uninit_cop@3
$LN4@Uninit_cop@3:
	jmp	SHORT $LN10@Uninit_cop@3
__catch$??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)

	jmp	SHORT $LN3@Uninit_cop@3
$LN2@Uninit_cop@3:
	mov	ecx, DWORD PTR __Next$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Next$[ebp], ecx
$LN3@Uninit_cop@3:
	mov	edx, DWORD PTR __Next$[ebp]
	cmp	edx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_cop@3

; 134  : 		_Al.destroy(_Next);

	jmp	SHORT $LN2@Uninit_cop@3
$LN1@Uninit_cop@3:

; 135  : 	_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 136  : 	_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_cop@3:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$1:

; 137  : 	return (_Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_cop@3:

; 138  : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z
_TEXT	SEGMENT
$T247115 = -60						; size = 8
$T247086 = -20						; size = 4
$T247080 = -12						; size = 4
$T247079 = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z PROC ; std::_Pop_heap_0<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>, COMDAT

; 2087 : 	{	// pop *_First to *(_Last - 1) and reheap, using operator<

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH

; 2088 : 	_Pop_heap(_First, _Last - 1, _Last - 1,
; 2089 : 		_Ty(*(_Last - 1)), _Dist_type(_First));

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, 8
	mov	DWORD PTR $T247080[ebp], eax
	lea	ecx, DWORD PTR $T247115[ebp]
	mov	DWORD PTR $T247079[ebp], ecx
	mov	edx, DWORD PTR $T247079[ebp]
	mov	eax, DWORD PTR $T247080[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T247079[ebp]
	mov	eax, DWORD PTR $T247080[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [edx-8], eax
	mov	DWORD PTR [edx-4], ecx
	sub	esp, 8
	mov	DWORD PTR $T247086[ebp], esp
	mov	eax, DWORD PTR $T247086[ebp]
	mov	ecx, DWORD PTR $T247115[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T247086[ebp]
	mov	eax, DWORD PTR $T247115[ebp+4]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, 8
	sub	ecx, DWORD PTR __First$[ebp]
	sar	ecx, 3
	push	ecx
	push	0
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2090 : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ENDP ; std::_Pop_heap_0<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
_TEXT	ENDS
EXTRN	?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B:DWORD ; CvPreGame::sr_TeamTypes
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvpregame.h
;	COMDAT ?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z PROC ; CvPreGame::teamType, COMDAT

; 298  : {

	push	ebp
	mov	ebp, esp

; 299  : 	if(p >= 0 && p < MAX_PLAYERS)

	cmp	DWORD PTR _p$[ebp], 0
	jl	SHORT $LN1@teamType
	cmp	DWORD PTR _p$[ebp], 64			; 00000040H
	jge	SHORT $LN1@teamType

; 300  : 		return sr_TeamTypes[p];

	mov	eax, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	jmp	SHORT $LN2@teamType
$LN1@teamType:

; 301  : 	return NO_TEAM;

	or	eax, -1
$LN2@teamType:

; 302  : }

	pop	ebp
	ret	0
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ENDP ; CvPreGame::teamType
_TEXT	ENDS
EXTRN	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z:PROC	; CvPlayer::getCity
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T247126 = -4						; size = 4
?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ PROC		; CvPlot::getPlotCity, COMDAT
; _this$ = ecx

; 532  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 533  : 		if((m_plotCity.eOwner >= 0) && m_plotCity.eOwner < MAX_PLAYERS)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+104], 0
	jl	SHORT $LN1@getPlotCit
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+104], 64			; 00000040H
	jge	SHORT $LN1@getPlotCit

; 534  : 			return (GET_PLAYER((PlayerTypes)m_plotCity.eOwner).getCity(m_plotCity.iID));

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T247126[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	ecx, DWORD PTR $T247126[ebp]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	jmp	SHORT $LN2@getPlotCit
$LN1@getPlotCit:

; 535  : 
; 536  : 		return NULL;

	xor	eax, eax
$LN2@getPlotCit:

; 537  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ ENDP		; CvPlot::getPlotCity
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetBit@PlotBoolField@CvPlot@@QBE_NI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_uiOffset$ = -4						; size = 4
_uiEntry$ = 8						; size = 4
?GetBit@PlotBoolField@CvPlot@@QBE_NI@Z PROC		; CvPlot::PlotBoolField::GetBit, COMDAT
; _this$ = ecx

; 767  : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 768  : 			const uint uiOffset = uiEntry/eSize;

	mov	eax, DWORD PTR _uiEntry$[ebp]
	shr	eax, 5
	mov	DWORD PTR _uiOffset$[ebp], eax

; 769  : 			return m_dwBits[uiOffset] & 1<<(uiEntry-(eSize*uiOffset));

	mov	ecx, DWORD PTR _uiOffset$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _uiEntry$[ebp]
	sub	edx, ecx
	mov	eax, 1
	mov	ecx, edx
	shl	eax, cl
	mov	ecx, DWORD PTR _uiOffset$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [edx+ecx*4]
	setne	al

; 770  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?GetBit@PlotBoolField@CvPlot@@QBE_NI@Z ENDP		; CvPlot::PlotBoolField::GetBit
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
_TEXT	ENDS
;	COMDAT ?coordRange@@YAHHH_N@Z
_TEXT	SEGMENT
_iCoord$ = 8						; size = 4
_iRange$ = 12						; size = 4
_bWrap$ = 16						; size = 1
?coordRange@@YAHHH_N@Z PROC				; coordRange, COMDAT

; 87   : {

	push	ebp
	mov	ebp, esp

; 88   : 	if(bWrap)

	movzx	eax, BYTE PTR _bWrap$[ebp]
	test	eax, eax
	je	SHORT $LN4@coordRange

; 89   : 	{
; 90   : 		if(iCoord < 0)

	cmp	DWORD PTR _iCoord$[ebp], 0
	jge	SHORT $LN3@coordRange

; 91   : 		{
; 92   : 			return (iRange + (iCoord % iRange));

	mov	eax, DWORD PTR _iCoord$[ebp]
	cdq
	idiv	DWORD PTR _iRange$[ebp]
	add	edx, DWORD PTR _iRange$[ebp]
	mov	eax, edx
	jmp	SHORT $LN5@coordRange
	jmp	SHORT $LN4@coordRange
$LN3@coordRange:

; 93   : 		}
; 94   : 		else if(iCoord >= iRange)

	mov	ecx, DWORD PTR _iCoord$[ebp]
	cmp	ecx, DWORD PTR _iRange$[ebp]
	jl	SHORT $LN4@coordRange

; 95   : 		{
; 96   : 			return (iCoord % iRange);

	mov	eax, DWORD PTR _iCoord$[ebp]
	cdq
	idiv	DWORD PTR _iRange$[ebp]
	mov	eax, edx
	jmp	SHORT $LN5@coordRange
$LN4@coordRange:

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;

	mov	eax, DWORD PTR _iCoord$[ebp]
$LN5@coordRange:

; 101  : }

	pop	ebp
	ret	0
?coordRange@@YAHHH_N@Z ENDP				; coordRange
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?isPlot@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
tv72 = -16						; size = 4
_this$ = -12						; size = 4
$T247142 = -8						; size = 4
$T247138 = -4						; size = 4
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?isPlot@CvMap@@QBEHHH@Z PROC				; CvMap::isPlot, COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	cmp	DWORD PTR _iX$[ebp], 0
	jl	SHORT $LN3@isPlot
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T247138[ebp], ecx
	mov	edx, DWORD PTR _iX$[ebp]
	cmp	edx, DWORD PTR $T247138[ebp]
	jge	SHORT $LN3@isPlot
	cmp	DWORD PTR _iY$[ebp], 0
	jl	SHORT $LN3@isPlot
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T247142[ebp], ecx
	mov	edx, DWORD PTR _iY$[ebp]
	cmp	edx, DWORD PTR $T247142[ebp]
	jge	SHORT $LN3@isPlot
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN4@isPlot
$LN3@isPlot:
	mov	DWORD PTR tv72[ebp], 0
$LN4@isPlot:
	mov	eax, DWORD PTR tv72[ebp]

; 161  : #endif
; 162  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?isPlot@CvMap@@QBEHHH@Z ENDP				; CvMap::isPlot
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0length_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0length_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0length_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0length_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
; Function compile flags: /Odtp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
END
