; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvDllPreGame.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05OCFELOIJ@1?40?40?$AA@			; `string'
CONST	SEGMENT
_guidICvUnknown DD 0d89ba82fH
	DW	09fa3H
	DW	04696H
	DB	0b3H
	DB	0f4H
	DB	052H
	DB	0bdH
	DB	0b1H
	DB	01H
	DB	0cfH
	DB	0b2H
_guidICvEnumerator DD 0579a12e9H
	DW	03c70H
	DW	04276H
	DB	084H
	DB	060H
	DB	0c9H
	DB	041H
	DB	0a5H
	DB	0f9H
	DB	058H
	DB	05fH
_guidICvPreGame1 DD 0c826212aH
	DW	05d8bH
	DW	046eaH
	DB	0b3H
	DB	026H
	DB	0cbH
	DB	057H
	DB	0c7H
	DB	05bH
	DB	095H
	DB	078H
_guidICvDlcPackageInfo1 DD 01a87b286H
	DW	05001H
	DW	04661H
	DB	09aH
	DB	089H
	DB	081H
	DB	026H
	DB	0afH
	DB	013H
	DB	027H
	DB	02H
_guidICvPreGame2 DD 09671d0aeH
	DW	0f2d1H
	DW	04d17H
	DB	08aH
	DB	08dH
	DB	0c2H
	DB	011H
	DB	0bbH
	DB	05H
	DB	0d3H
	DB	091H
CONST	ENDS
_DATA	SEGMENT
_CIV5_XP2_DLL_VERSION DD FLAT:??_C@_05OCFELOIJ@1?40?40?$AA@
_DATA	ENDS
;	COMDAT ??_C@_05OCFELOIJ@1?40?40?$AA@
CONST	SEGMENT
??_C@_05OCFELOIJ@1?40?40?$AA@ DB '1.0.0', 00H		; `string'
CONST	ENDS
PUBLIC	??_7CvDllPreGame@@6B@				; CvDllPreGame::`vftable'
PUBLIC	??_7ICvPreGame2@@6B@				; ICvPreGame2::`vftable'
PUBLIC	??_7ICvPreGame1@@6B@				; ICvPreGame1::`vftable'
PUBLIC	??_7ICvUnknown@@6B@				; ICvUnknown::`vftable'
PUBLIC	??0CvDllPreGame@@QAE@XZ				; CvDllPreGame::CvDllPreGame
PUBLIC	?QueryInterface@CvDllPreGame@@UAGPAXU_GUID@@@Z	; CvDllPreGame::QueryInterface
PUBLIC	?Destroy@CvDllPreGame@@EAGXXZ			; CvDllPreGame::Destroy
PUBLIC	?activePlayer@CvDllPreGame@@UAG?AW4PlayerTypes@@XZ ; CvDllPreGame::activePlayer
PUBLIC	?advancedStartPoints@CvDllPreGame@@UAGHXZ	; CvDllPreGame::advancedStartPoints
PUBLIC	?autorun@CvDllPreGame@@UAG_NXZ			; CvDllPreGame::autorun
PUBLIC	?autorunTurnDelay@CvDllPreGame@@UAGMXZ		; CvDllPreGame::autorunTurnDelay
PUBLIC	?autorunTurnLimit@CvDllPreGame@@UAGHXZ		; CvDllPreGame::autorunTurnLimit
PUBLIC	?calendar@CvDllPreGame@@UAG?AW4CalendarTypes@@XZ ; CvDllPreGame::calendar
PUBLIC	?canReadyLocalPlayer@CvDllPreGame@@UAG_NXZ	; CvDllPreGame::canReadyLocalPlayer
PUBLIC	?civilizationAdjective@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z ; CvDllPreGame::civilizationAdjective
PUBLIC	?civilizationAdjectiveKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ; CvDllPreGame::civilizationAdjectiveKey
PUBLIC	?civilizationDescription@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z ; CvDllPreGame::civilizationDescription
PUBLIC	?civilizationDescriptionKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ; CvDllPreGame::civilizationDescriptionKey
PUBLIC	?civilization@CvDllPreGame@@UAG?AW4CivilizationTypes@@W4PlayerTypes@@@Z ; CvDllPreGame::civilization
PUBLIC	?civilizationPassword@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ; CvDllPreGame::civilizationPassword
PUBLIC	?civilizationShortDescription@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z ; CvDllPreGame::civilizationShortDescription
PUBLIC	?civilizationShortDescriptionKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ; CvDllPreGame::civilizationShortDescriptionKey
PUBLIC	?civilizationKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ; CvDllPreGame::civilizationKey
PUBLIC	?civilizationKeyAvailable@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z ; CvDllPreGame::civilizationKeyAvailable
PUBLIC	?civilizationKeyPackageID@CvDllPreGame@@UAG?BU_GUID@@W4PlayerTypes@@@Z ; CvDllPreGame::civilizationKeyPackageID
PUBLIC	?clearDLCAllowed@CvDllPreGame@@UAGXXZ		; CvDllPreGame::clearDLCAllowed
PUBLIC	?climate@CvDllPreGame@@UAG?AW4ClimateTypes@@XZ	; CvDllPreGame::climate
PUBLIC	?closeAllSlots@CvDllPreGame@@UAGXXZ		; CvDllPreGame::closeAllSlots
PUBLIC	?closeInactiveSlots@CvDllPreGame@@UAGXXZ	; CvDllPreGame::closeInactiveSlots
PUBLIC	?emailAddress@CvDllPreGame@@UAG?BVCvString@@XZ	; CvDllPreGame::emailAddress
PUBLIC	?emailAddress@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ; CvDllPreGame::emailAddress
PUBLIC	?endTurnTimerLength@CvDllPreGame@@UAGMXZ	; CvDllPreGame::endTurnTimerLength
PUBLIC	?era@CvDllPreGame@@UAG?AW4EraTypes@@XZ		; CvDllPreGame::era
PUBLIC	?findPlayerByNickname@CvDllPreGame@@UAG?AW4PlayerTypes@@QBD@Z ; CvDllPreGame::findPlayerByNickname
PUBLIC	?gameMode@CvDllPreGame@@UAG?AW4GameMode@@XZ	; CvDllPreGame::gameMode
PUBLIC	?gameName@CvDllPreGame@@UAG?BVCvString@@XZ	; CvDllPreGame::gameName
PUBLIC	?gameStarted@CvDllPreGame@@UAG_NXZ		; CvDllPreGame::gameStarted
PUBLIC	?GetGameOptionCount@CvDllPreGame@@UAGIXZ	; CvDllPreGame::GetGameOptionCount
PUBLIC	?GetGameOption@CvDllPreGame@@UAG_NW4GameOptionTypes@@AAH@Z ; CvDllPreGame::GetGameOption
PUBLIC	?GetGameOption@CvDllPreGame@@UAG_NPBDAAH@Z	; CvDllPreGame::GetGameOption
PUBLIC	?GetGameOption@CvDllPreGame@@UAG_NIPADIAAH@Z	; CvDllPreGame::GetGameOption
PUBLIC	?GetMapOptionCount@CvDllPreGame@@UAGIXZ		; CvDllPreGame::GetMapOptionCount
PUBLIC	?GetMapOption@CvDllPreGame@@UAG_NPBDAAH@Z	; CvDllPreGame::GetMapOption
PUBLIC	?GetMapOption@CvDllPreGame@@UAG_NIPADIAAH@Z	; CvDllPreGame::GetMapOption
PUBLIC	?GetPersistSettings@CvDllPreGame@@UAG_NXZ	; CvDllPreGame::GetPersistSettings
PUBLIC	?gameSpeed@CvDllPreGame@@UAG?AW4GameSpeedTypes@@XZ ; CvDllPreGame::gameSpeed
PUBLIC	?gameTurn@CvDllPreGame@@UAGHXZ			; CvDllPreGame::gameTurn
PUBLIC	?gameType@CvDllPreGame@@UAG?AW4GameTypes@@XZ	; CvDllPreGame::gameType
PUBLIC	?gameStartType@CvDllPreGame@@UAG?AW4GameStartTypes@@XZ ; CvDllPreGame::gameStartType
PUBLIC	?handicap@CvDllPreGame@@UAG?AW4HandicapTypes@@W4PlayerTypes@@@Z ; CvDllPreGame::handicap
PUBLIC	?isDLCAllowed@CvDllPreGame@@UAG_NABU_GUID@@@Z	; CvDllPreGame::isDLCAllowed
PUBLIC	?isDLCAvailable@CvDllPreGame@@UAG_NW4PlayerTypes@@ABU_GUID@@@Z ; CvDllPreGame::isDLCAvailable
PUBLIC	?isEarthMap@CvDllPreGame@@UAG_NXZ		; CvDllPreGame::isEarthMap
PUBLIC	?isHotSeat@CvDllPreGame@@UAG_NXZ		; CvDllPreGame::isHotSeat
PUBLIC	?isHotSeatGame@CvDllPreGame@@UAG_NXZ		; CvDllPreGame::isHotSeatGame
PUBLIC	?isHuman@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z	; CvDllPreGame::isHuman
PUBLIC	?isInternetGame@CvDllPreGame@@UAG_NXZ		; CvDllPreGame::isInternetGame
PUBLIC	?isMinorCiv@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z ; CvDllPreGame::isMinorCiv
PUBLIC	?isNetworkMultiplayerGame@CvDllPreGame@@UAG_NXZ	; CvDllPreGame::isNetworkMultiplayerGame
PUBLIC	?isPitBoss@CvDllPreGame@@UAG_NXZ		; CvDllPreGame::isPitBoss
PUBLIC	?isPlayable@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z ; CvDllPreGame::isPlayable
PUBLIC	?isPlayByEmail@CvDllPreGame@@UAG_NXZ		; CvDllPreGame::isPlayByEmail
PUBLIC	?isReady@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z	; CvDllPreGame::isReady
PUBLIC	?isVictory@CvDllPreGame@@UAG_NW4VictoryTypes@@@Z ; CvDllPreGame::isVictory
PUBLIC	?isWBMapScript@CvDllPreGame@@UAG_NXZ		; CvDllPreGame::isWBMapScript
PUBLIC	?isWhiteFlag@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z ; CvDllPreGame::isWhiteFlag
PUBLIC	?leaderHead@CvDllPreGame@@UAG?AW4LeaderHeadTypes@@W4PlayerTypes@@@Z ; CvDllPreGame::leaderHead
PUBLIC	?leaderName@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z ; CvDllPreGame::leaderName
PUBLIC	?leaderNameKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ; CvDllPreGame::leaderNameKey
PUBLIC	?leaderKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ; CvDllPreGame::leaderKey
PUBLIC	?leaderKeyAvailable@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z ; CvDllPreGame::leaderKeyAvailable
PUBLIC	?leaderKeyPackageID@CvDllPreGame@@UAG?BU_GUID@@W4PlayerTypes@@@Z ; CvDllPreGame::leaderKeyPackageID
PUBLIC	?loadFileName@CvDllPreGame@@UAG?BVCvString@@XZ	; CvDllPreGame::loadFileName
PUBLIC	?loadFromIni@CvDllPreGame@@UAGXAAVFIGameIniParser@@@Z ; CvDllPreGame::loadFromIni
PUBLIC	?mapNoPlayers@CvDllPreGame@@UAG_NXZ		; CvDllPreGame::mapNoPlayers
PUBLIC	?mapRandomSeed@CvDllPreGame@@UAGIXZ		; CvDllPreGame::mapRandomSeed
PUBLIC	?loadWBScenario@CvDllPreGame@@UAG_NXZ		; CvDllPreGame::loadWBScenario
PUBLIC	?overrideScenarioHandicap@CvDllPreGame@@UAG_NXZ	; CvDllPreGame::overrideScenarioHandicap
PUBLIC	?mapScriptName@CvDllPreGame@@UAG?BVCvString@@XZ	; CvDllPreGame::mapScriptName
PUBLIC	?maxCityElimination@CvDllPreGame@@UAGHXZ	; CvDllPreGame::maxCityElimination
PUBLIC	?maxTurns@CvDllPreGame@@UAGHXZ			; CvDllPreGame::maxTurns
PUBLIC	?minorCivType@CvDllPreGame@@UAG?AW4MinorCivTypes@@W4PlayerTypes@@@Z ; CvDllPreGame::minorCivType
PUBLIC	?multiplayerAIEnabled@CvDllPreGame@@UAG_NXZ	; CvDllPreGame::multiplayerAIEnabled
PUBLIC	?netID@CvDllPreGame@@UAGHW4PlayerTypes@@@Z	; CvDllPreGame::netID
PUBLIC	?nickname@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ; CvDllPreGame::nickname
PUBLIC	?nicknameDisplayed@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ; CvDllPreGame::nicknameDisplayed
PUBLIC	?numMinorCivs@CvDllPreGame@@UAGHXZ		; CvDllPreGame::numMinorCivs
PUBLIC	?playerColor@CvDllPreGame@@UAG?AW4PlayerColorTypes@@W4PlayerTypes@@@Z ; CvDllPreGame::playerColor
PUBLIC	?privateGame@CvDllPreGame@@UAG_NXZ		; CvDllPreGame::privateGame
PUBLIC	?quickCombat@CvDllPreGame@@UAG_NXZ		; CvDllPreGame::quickCombat
PUBLIC	?quickMovement@CvDllPreGame@@UAG_NXZ		; CvDllPreGame::quickMovement
PUBLIC	?quickstart@CvDllPreGame@@UAG_NXZ		; CvDllPreGame::quickstart
PUBLIC	?randomWorldSize@CvDllPreGame@@UAG_NXZ		; CvDllPreGame::randomWorldSize
PUBLIC	?randomMapScript@CvDllPreGame@@UAG_NXZ		; CvDllPreGame::randomMapScript
PUBLIC	?read@CvDllPreGame@@UAGXAAVFDataStream@@_N@Z	; CvDllPreGame::read
PUBLIC	?readPlayerSlotInfo@CvDllPreGame@@UAG_NAAVFDataStream@@_N@Z ; CvDllPreGame::readPlayerSlotInfo
PUBLIC	?resetGame@CvDllPreGame@@UAGXXZ			; CvDllPreGame::resetGame
PUBLIC	?ResetGameOptions@CvDllPreGame@@UAGXXZ		; CvDllPreGame::ResetGameOptions
PUBLIC	?ResetMapOptions@CvDllPreGame@@UAGXXZ		; CvDllPreGame::ResetMapOptions
PUBLIC	?resetPlayer@CvDllPreGame@@UAGXW4PlayerTypes@@@Z ; CvDllPreGame::resetPlayer
PUBLIC	?resetPlayers@CvDllPreGame@@UAGXXZ		; CvDllPreGame::resetPlayers
PUBLIC	?resetSlots@CvDllPreGame@@UAGXXZ		; CvDllPreGame::resetSlots
PUBLIC	?restoreSlots@CvDllPreGame@@UAGXXZ		; CvDllPreGame::restoreSlots
PUBLIC	?saveSlots@CvDllPreGame@@UAGXXZ			; CvDllPreGame::saveSlots
PUBLIC	?seaLevel@CvDllPreGame@@UAG?AW4SeaLevelTypes@@XZ ; CvDllPreGame::seaLevel
PUBLIC	?setActivePlayer@CvDllPreGame@@UAGXW4PlayerTypes@@@Z ; CvDllPreGame::setActivePlayer
PUBLIC	?setAdminPassword@CvDllPreGame@@UAGXABVCvString@@@Z ; CvDllPreGame::setAdminPassword
PUBLIC	?setAdvancedStartPoints@CvDllPreGame@@UAGXH@Z	; CvDllPreGame::setAdvancedStartPoints
PUBLIC	?setAlias@CvDllPreGame@@UAGXABVCvString@@@Z	; CvDllPreGame::setAlias
PUBLIC	?setAutorun@CvDllPreGame@@UAGX_N@Z		; CvDllPreGame::setAutorun
PUBLIC	?setAutorunTurnDelay@CvDllPreGame@@UAGXM@Z	; CvDllPreGame::setAutorunTurnDelay
PUBLIC	?setAutorunTurnLimit@CvDllPreGame@@UAGXH@Z	; CvDllPreGame::setAutorunTurnLimit
PUBLIC	?setBandwidth@CvDllPreGame@@UAGXABVCvString@@@Z	; CvDllPreGame::setBandwidth
PUBLIC	?setBandwidth@CvDllPreGame@@UAGXW4BandwidthType@@@Z ; CvDllPreGame::setBandwidth
PUBLIC	?setCalendar@CvDllPreGame@@UAGXABVCvString@@@Z	; CvDllPreGame::setCalendar
PUBLIC	?setCalendar@CvDllPreGame@@UAGXW4CalendarTypes@@@Z ; CvDllPreGame::setCalendar
PUBLIC	?setCivilization@CvDllPreGame@@UAGXW4PlayerTypes@@W4CivilizationTypes@@@Z ; CvDllPreGame::setCivilization
PUBLIC	?setCivilizationAdjective@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ; CvDllPreGame::setCivilizationAdjective
PUBLIC	?setCivilizationDescription@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ; CvDllPreGame::setCivilizationDescription
PUBLIC	?setCivilizationPassword@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ; CvDllPreGame::setCivilizationPassword
PUBLIC	?setCivilizationShortDescription@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ; CvDllPreGame::setCivilizationShortDescription
PUBLIC	?setCivilizationKey@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ; CvDllPreGame::setCivilizationKey
PUBLIC	?setCivilizationKeyPackageID@CvDllPreGame@@UAGXW4PlayerTypes@@ABU_GUID@@@Z ; CvDllPreGame::setCivilizationKeyPackageID
PUBLIC	?setClimate@CvDllPreGame@@UAGXABVCvString@@@Z	; CvDllPreGame::setClimate
PUBLIC	?setClimate@CvDllPreGame@@UAGXW4ClimateTypes@@@Z ; CvDllPreGame::setClimate
PUBLIC	?setCustomWorldSize@CvDllPreGame@@UAGXHHHH@Z	; CvDllPreGame::setCustomWorldSize
PUBLIC	?setDLCAllowed@CvDllPreGame@@UAGXABU_GUID@@_N@Z	; CvDllPreGame::setDLCAllowed
PUBLIC	?setEarthMap@CvDllPreGame@@UAGX_N@Z		; CvDllPreGame::setEarthMap
PUBLIC	?setEmailAddress@CvDllPreGame@@UAGXABVCvString@@@Z ; CvDllPreGame::setEmailAddress
PUBLIC	?setEmailAddress@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ; CvDllPreGame::setEmailAddress
PUBLIC	?setEndTurnTimerLength@CvDllPreGame@@UAGXM@Z	; CvDllPreGame::setEndTurnTimerLength
PUBLIC	?setEra@CvDllPreGame@@UAGXABVCvString@@@Z	; CvDllPreGame::setEra
PUBLIC	?setEra@CvDllPreGame@@UAGXW4EraTypes@@@Z	; CvDllPreGame::setEra
PUBLIC	?setGameMode@CvDllPreGame@@UAGXW4GameMode@@@Z	; CvDllPreGame::setGameMode
PUBLIC	?setGameName@CvDllPreGame@@UAGXABVCvString@@@Z	; CvDllPreGame::setGameName
PUBLIC	?setGameSpeed@CvDllPreGame@@UAGXABVCvString@@@Z	; CvDllPreGame::setGameSpeed
PUBLIC	?setGameSpeed@CvDllPreGame@@UAGXW4GameSpeedTypes@@@Z ; CvDllPreGame::setGameSpeed
PUBLIC	?setGameStarted@CvDllPreGame@@UAGX_N@Z		; CvDllPreGame::setGameStarted
PUBLIC	?setGameTurn@CvDllPreGame@@UAGXH@Z		; CvDllPreGame::setGameTurn
PUBLIC	?SetGameOption@CvDllPreGame@@UAG_NW4GameOptionTypes@@H@Z ; CvDllPreGame::SetGameOption
PUBLIC	?SetGameOption@CvDllPreGame@@UAG_NPBDH@Z	; CvDllPreGame::SetGameOption
PUBLIC	?setGameType@CvDllPreGame@@UAGXABVCvString@@@Z	; CvDllPreGame::setGameType
PUBLIC	?setGameType@CvDllPreGame@@UAGXW4GameTypes@@W4GameStartTypes@@@Z ; CvDllPreGame::setGameType
PUBLIC	?setGameType@CvDllPreGame@@UAGXW4GameTypes@@@Z	; CvDllPreGame::setGameType
PUBLIC	?setGameStartType@CvDllPreGame@@UAGXW4GameStartTypes@@@Z ; CvDllPreGame::setGameStartType
PUBLIC	?setGameUpdateTime@CvDllPreGame@@UAGXH@Z	; CvDllPreGame::setGameUpdateTime
PUBLIC	?setHandicap@CvDllPreGame@@UAGXW4PlayerTypes@@W4HandicapTypes@@@Z ; CvDllPreGame::setHandicap
PUBLIC	?setInternetGame@CvDllPreGame@@UAGX_N@Z		; CvDllPreGame::setInternetGame
PUBLIC	?setLeaderHead@CvDllPreGame@@UAGXW4PlayerTypes@@W4LeaderHeadTypes@@@Z ; CvDllPreGame::setLeaderHead
PUBLIC	?setLeaderName@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ; CvDllPreGame::setLeaderName
PUBLIC	?setLeaderKey@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ; CvDllPreGame::setLeaderKey
PUBLIC	?setLeaderKeyPackageID@CvDllPreGame@@UAGXW4PlayerTypes@@ABU_GUID@@@Z ; CvDllPreGame::setLeaderKeyPackageID
PUBLIC	?setLoadFileName@CvDllPreGame@@UAGXABVCvString@@@Z ; CvDllPreGame::setLoadFileName
PUBLIC	?setMapNoPlayers@CvDllPreGame@@UAGX_N@Z		; CvDllPreGame::setMapNoPlayers
PUBLIC	?setMapRandomSeed@CvDllPreGame@@UAGXI@Z		; CvDllPreGame::setMapRandomSeed
PUBLIC	?setLoadWBScenario@CvDllPreGame@@UAGX_N@Z	; CvDllPreGame::setLoadWBScenario
PUBLIC	?setOverrideScenarioHandicap@CvDllPreGame@@UAGX_N@Z ; CvDllPreGame::setOverrideScenarioHandicap
PUBLIC	?setMapScriptName@CvDllPreGame@@UAGXABVCvString@@@Z ; CvDllPreGame::setMapScriptName
PUBLIC	?SetMapOption@CvDllPreGame@@UAG_NPBDH@Z		; CvDllPreGame::SetMapOption
PUBLIC	?setMaxCityElimination@CvDllPreGame@@UAGXH@Z	; CvDllPreGame::setMaxCityElimination
PUBLIC	?setMaxTurns@CvDllPreGame@@UAGXH@Z		; CvDllPreGame::setMaxTurns
PUBLIC	?setMinorCivType@CvDllPreGame@@UAGXW4PlayerTypes@@W4MinorCivTypes@@@Z ; CvDllPreGame::setMinorCivType
PUBLIC	?setMinorCiv@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z ; CvDllPreGame::setMinorCiv
PUBLIC	?setMultiplayerAIEnabled@CvDllPreGame@@UAGX_N@Z	; CvDllPreGame::setMultiplayerAIEnabled
PUBLIC	?setNetID@CvDllPreGame@@UAGXW4PlayerTypes@@H@Z	; CvDllPreGame::setNetID
PUBLIC	?setNickname@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ; CvDllPreGame::setNickname
PUBLIC	?setNumMinorCivs@CvDllPreGame@@UAGXH@Z		; CvDllPreGame::setNumMinorCivs
PUBLIC	?setPersistSettings@CvDllPreGame@@UAGX_N@Z	; CvDllPreGame::setPersistSettings
PUBLIC	?setPlayable@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z ; CvDllPreGame::setPlayable
PUBLIC	?setPlayerColor@CvDllPreGame@@UAGXW4PlayerTypes@@W4PlayerColorTypes@@@Z ; CvDllPreGame::setPlayerColor
PUBLIC	?setPrivateGame@CvDllPreGame@@UAGX_N@Z		; CvDllPreGame::setPrivateGame
PUBLIC	?setQuickCombat@CvDllPreGame@@UAGX_N@Z		; CvDllPreGame::setQuickCombat
PUBLIC	?setQuickMovement@CvDllPreGame@@UAGX_N@Z	; CvDllPreGame::setQuickMovement
PUBLIC	?setQuickHandicap@CvDllPreGame@@UAGXABVCvString@@@Z ; CvDllPreGame::setQuickHandicap
PUBLIC	?setQuickHandicap@CvDllPreGame@@UAGXW4HandicapTypes@@@Z ; CvDllPreGame::setQuickHandicap
PUBLIC	?setQuickstart@CvDllPreGame@@UAGX_N@Z		; CvDllPreGame::setQuickstart
PUBLIC	?setRandomWorldSize@CvDllPreGame@@UAGX_N@Z	; CvDllPreGame::setRandomWorldSize
PUBLIC	?setRandomMapScript@CvDllPreGame@@UAGX_N@Z	; CvDllPreGame::setRandomMapScript
PUBLIC	?setReady@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z	; CvDllPreGame::setReady
PUBLIC	?setSeaLevel@CvDllPreGame@@UAGXABVCvString@@@Z	; CvDllPreGame::setSeaLevel
PUBLIC	?setSeaLevel@CvDllPreGame@@UAGXW4SeaLevelTypes@@@Z ; CvDllPreGame::setSeaLevel
PUBLIC	?setSlotClaim@CvDllPreGame@@UAGXW4PlayerTypes@@W4SlotClaim@@@Z ; CvDllPreGame::setSlotClaim
PUBLIC	?setSlotStatus@CvDllPreGame@@UAGXW4PlayerTypes@@W4SlotStatus@@@Z ; CvDllPreGame::setSlotStatus
PUBLIC	?setSyncRandomSeed@CvDllPreGame@@UAGXI@Z	; CvDllPreGame::setSyncRandomSeed
PUBLIC	?setTeamType@CvDllPreGame@@UAGXW4PlayerTypes@@W4TeamTypes@@@Z ; CvDllPreGame::setTeamType
PUBLIC	?setTransferredMap@CvDllPreGame@@UAGX_N@Z	; CvDllPreGame::setTransferredMap
PUBLIC	?setTurnTimer@CvDllPreGame@@UAGXABVCvString@@@Z	; CvDllPreGame::setTurnTimer
PUBLIC	?setTurnTimer@CvDllPreGame@@UAGXW4TurnTimerTypes@@@Z ; CvDllPreGame::setTurnTimer
PUBLIC	?SetCityScreenBlocked@CvDllPreGame@@UAGX_N@Z	; CvDllPreGame::SetCityScreenBlocked
PUBLIC	?setVersionString@CvDllPreGame@@UAGXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvDllPreGame::setVersionString
PUBLIC	?setVictory@CvDllPreGame@@UAGXW4VictoryTypes@@_N@Z ; CvDllPreGame::setVictory
PUBLIC	?setVictories@CvDllPreGame@@UAGXABV?$vector@_NV?$allocator@_N@std@@@std@@@Z ; CvDllPreGame::setVictories
PUBLIC	?setWhiteFlag@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z ; CvDllPreGame::setWhiteFlag
PUBLIC	?setWorldSize@CvDllPreGame@@UAGXABVCvString@@@Z	; CvDllPreGame::setWorldSize
PUBLIC	?setWorldSize@CvDllPreGame@@UAGXW4WorldSizeTypes@@_N@Z ; CvDllPreGame::setWorldSize
PUBLIC	?slotClaim@CvDllPreGame@@UAG?AW4SlotClaim@@W4PlayerTypes@@@Z ; CvDllPreGame::slotClaim
PUBLIC	?slotStatus@CvDllPreGame@@UAG?AW4SlotStatus@@W4PlayerTypes@@@Z ; CvDllPreGame::slotStatus
PUBLIC	?syncRandomSeed@CvDllPreGame@@UAGIXZ		; CvDllPreGame::syncRandomSeed
PUBLIC	?transferredMap@CvDllPreGame@@UAG_NXZ		; CvDllPreGame::transferredMap
PUBLIC	?teamType@CvDllPreGame@@UAG?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvDllPreGame::teamType
PUBLIC	?turnTimer@CvDllPreGame@@UAG?AW4TurnTimerTypes@@XZ ; CvDllPreGame::turnTimer
PUBLIC	?versionString@CvDllPreGame@@UAG?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CvDllPreGame::versionString
PUBLIC	?worldSize@CvDllPreGame@@UAG?AW4WorldSizeTypes@@XZ ; CvDllPreGame::worldSize
PUBLIC	?GetWorldInfo@CvDllPreGame@@UAGPAVICvWorldInfo1@@XZ ; CvDllPreGame::GetWorldInfo
PUBLIC	?write@CvDllPreGame@@UAGXAAVFDataStream@@@Z	; CvDllPreGame::write
PUBLIC	?getActiveSlotCount@CvDllPreGame@@UAGHXZ	; CvDllPreGame::getActiveSlotCount
PUBLIC	?readActiveSlotCountFromSaveGame@CvDllPreGame@@UAGHAAVFDataStream@@_N@Z ; CvDllPreGame::readActiveSlotCountFromSaveGame
PUBLIC	?LoadFileStorage@CvDllPreGame@@UAG?AW4StorageLocation@@XZ ; CvDllPreGame::LoadFileStorage
PUBLIC	?SetLoadFileName@CvDllPreGame@@UAGXPBDW4StorageLocation@@@Z ; CvDllPreGame::SetLoadFileName
PUBLIC	?GetDLCAllowed@CvDllPreGame@@UAGPAVICvEnumerator@@XZ ; CvDllPreGame::GetDLCAllowed
PUBLIC	?GetDLCAvailable@CvDllPreGame@@UAGPAVICvEnumerator@@W4PlayerTypes@@@Z ; CvDllPreGame::GetDLCAvailable
PUBLIC	?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z ; CvDllPreGame::SetDLCAvailable
PUBLIC	?pitBossTurnTime@CvDllPreGame@@UAGHXZ		; CvDllPreGame::pitBossTurnTime
PUBLIC	?setPitBossTurnTime@CvDllPreGame@@UAGXH@Z	; CvDllPreGame::setPitBossTurnTime
PUBLIC	?isTurnNotifySteamInvite@CvDllPreGame@@UBG_NW4PlayerTypes@@@Z ; CvDllPreGame::isTurnNotifySteamInvite
PUBLIC	?setTurnNotifySteamInvite@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z ; CvDllPreGame::setTurnNotifySteamInvite
PUBLIC	?isTurnNotifyEmail@CvDllPreGame@@UBG_NW4PlayerTypes@@@Z ; CvDllPreGame::isTurnNotifyEmail
PUBLIC	?setTurnNotifyEmail@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z ; CvDllPreGame::setTurnNotifyEmail
PUBLIC	?getTurnNotifyEmailAddress@CvDllPreGame@@UBGABVCvString@@W4PlayerTypes@@@Z ; CvDllPreGame::getTurnNotifyEmailAddress
PUBLIC	?setTurnNotifyEmailAddress@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ; CvDllPreGame::setTurnNotifyEmailAddress
PUBLIC	?VerifyHandicap@CvDllPreGame@@UAGXW4PlayerTypes@@@Z ; CvDllPreGame::VerifyHandicap
PUBLIC	?ReseatConnectedPlayers@CvDllPreGame@@UAGXXZ	; CvDllPreGame::ReseatConnectedPlayers
EXTRN	__purecall:PROC
;	COMDAT ??_7CvDllPreGame@@6B@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllpregame.cpp
CONST	SEGMENT
??_7CvDllPreGame@@6B@ DD FLAT:?QueryInterface@CvDllPreGame@@UAGPAXU_GUID@@@Z ; CvDllPreGame::`vftable'
	DD	FLAT:?Destroy@CvDllPreGame@@EAGXXZ
	DD	FLAT:?activePlayer@CvDllPreGame@@UAG?AW4PlayerTypes@@XZ
	DD	FLAT:?advancedStartPoints@CvDllPreGame@@UAGHXZ
	DD	FLAT:?autorun@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?autorunTurnDelay@CvDllPreGame@@UAGMXZ
	DD	FLAT:?autorunTurnLimit@CvDllPreGame@@UAGHXZ
	DD	FLAT:?calendar@CvDllPreGame@@UAG?AW4CalendarTypes@@XZ
	DD	FLAT:?canReadyLocalPlayer@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?civilizationAdjective@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z
	DD	FLAT:?civilizationAdjectiveKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
	DD	FLAT:?civilizationDescription@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z
	DD	FLAT:?civilizationDescriptionKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
	DD	FLAT:?civilization@CvDllPreGame@@UAG?AW4CivilizationTypes@@W4PlayerTypes@@@Z
	DD	FLAT:?civilizationPassword@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
	DD	FLAT:?civilizationShortDescription@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z
	DD	FLAT:?civilizationShortDescriptionKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
	DD	FLAT:?civilizationKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
	DD	FLAT:?civilizationKeyAvailable@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z
	DD	FLAT:?civilizationKeyPackageID@CvDllPreGame@@UAG?BU_GUID@@W4PlayerTypes@@@Z
	DD	FLAT:?clearDLCAllowed@CvDllPreGame@@UAGXXZ
	DD	FLAT:?climate@CvDllPreGame@@UAG?AW4ClimateTypes@@XZ
	DD	FLAT:?closeAllSlots@CvDllPreGame@@UAGXXZ
	DD	FLAT:?closeInactiveSlots@CvDllPreGame@@UAGXXZ
	DD	FLAT:?emailAddress@CvDllPreGame@@UAG?BVCvString@@XZ
	DD	FLAT:?emailAddress@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
	DD	FLAT:?endTurnTimerLength@CvDllPreGame@@UAGMXZ
	DD	FLAT:?era@CvDllPreGame@@UAG?AW4EraTypes@@XZ
	DD	FLAT:?findPlayerByNickname@CvDllPreGame@@UAG?AW4PlayerTypes@@QBD@Z
	DD	FLAT:?gameMode@CvDllPreGame@@UAG?AW4GameMode@@XZ
	DD	FLAT:?gameName@CvDllPreGame@@UAG?BVCvString@@XZ
	DD	FLAT:?gameStarted@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?GetGameOptionCount@CvDllPreGame@@UAGIXZ
	DD	FLAT:?GetGameOption@CvDllPreGame@@UAG_NW4GameOptionTypes@@AAH@Z
	DD	FLAT:?GetGameOption@CvDllPreGame@@UAG_NPBDAAH@Z
	DD	FLAT:?GetGameOption@CvDllPreGame@@UAG_NIPADIAAH@Z
	DD	FLAT:?GetMapOptionCount@CvDllPreGame@@UAGIXZ
	DD	FLAT:?GetMapOption@CvDllPreGame@@UAG_NPBDAAH@Z
	DD	FLAT:?GetMapOption@CvDllPreGame@@UAG_NIPADIAAH@Z
	DD	FLAT:?GetPersistSettings@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?gameSpeed@CvDllPreGame@@UAG?AW4GameSpeedTypes@@XZ
	DD	FLAT:?gameTurn@CvDllPreGame@@UAGHXZ
	DD	FLAT:?gameType@CvDllPreGame@@UAG?AW4GameTypes@@XZ
	DD	FLAT:?gameStartType@CvDllPreGame@@UAG?AW4GameStartTypes@@XZ
	DD	FLAT:?handicap@CvDllPreGame@@UAG?AW4HandicapTypes@@W4PlayerTypes@@@Z
	DD	FLAT:?isDLCAllowed@CvDllPreGame@@UAG_NABU_GUID@@@Z
	DD	FLAT:?isDLCAvailable@CvDllPreGame@@UAG_NW4PlayerTypes@@ABU_GUID@@@Z
	DD	FLAT:?isEarthMap@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?isHotSeat@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?isHotSeatGame@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?isHuman@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z
	DD	FLAT:?isInternetGame@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?isMinorCiv@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z
	DD	FLAT:?isNetworkMultiplayerGame@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?isPitBoss@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?isPlayable@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z
	DD	FLAT:?isPlayByEmail@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?isReady@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z
	DD	FLAT:?isVictory@CvDllPreGame@@UAG_NW4VictoryTypes@@@Z
	DD	FLAT:?isWBMapScript@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?isWhiteFlag@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z
	DD	FLAT:?leaderHead@CvDllPreGame@@UAG?AW4LeaderHeadTypes@@W4PlayerTypes@@@Z
	DD	FLAT:?leaderName@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z
	DD	FLAT:?leaderNameKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
	DD	FLAT:?leaderKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
	DD	FLAT:?leaderKeyAvailable@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z
	DD	FLAT:?leaderKeyPackageID@CvDllPreGame@@UAG?BU_GUID@@W4PlayerTypes@@@Z
	DD	FLAT:?loadFileName@CvDllPreGame@@UAG?BVCvString@@XZ
	DD	FLAT:?loadFromIni@CvDllPreGame@@UAGXAAVFIGameIniParser@@@Z
	DD	FLAT:?mapNoPlayers@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?mapRandomSeed@CvDllPreGame@@UAGIXZ
	DD	FLAT:?loadWBScenario@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?overrideScenarioHandicap@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?mapScriptName@CvDllPreGame@@UAG?BVCvString@@XZ
	DD	FLAT:?maxCityElimination@CvDllPreGame@@UAGHXZ
	DD	FLAT:?maxTurns@CvDllPreGame@@UAGHXZ
	DD	FLAT:?minorCivType@CvDllPreGame@@UAG?AW4MinorCivTypes@@W4PlayerTypes@@@Z
	DD	FLAT:?multiplayerAIEnabled@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?netID@CvDllPreGame@@UAGHW4PlayerTypes@@@Z
	DD	FLAT:?nickname@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
	DD	FLAT:?nicknameDisplayed@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
	DD	FLAT:?numMinorCivs@CvDllPreGame@@UAGHXZ
	DD	FLAT:?playerColor@CvDllPreGame@@UAG?AW4PlayerColorTypes@@W4PlayerTypes@@@Z
	DD	FLAT:?privateGame@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?quickCombat@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?quickMovement@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?quickstart@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?randomWorldSize@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?randomMapScript@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?read@CvDllPreGame@@UAGXAAVFDataStream@@_N@Z
	DD	FLAT:?readPlayerSlotInfo@CvDllPreGame@@UAG_NAAVFDataStream@@_N@Z
	DD	FLAT:?resetGame@CvDllPreGame@@UAGXXZ
	DD	FLAT:?ResetGameOptions@CvDllPreGame@@UAGXXZ
	DD	FLAT:?ResetMapOptions@CvDllPreGame@@UAGXXZ
	DD	FLAT:?resetPlayer@CvDllPreGame@@UAGXW4PlayerTypes@@@Z
	DD	FLAT:?resetPlayers@CvDllPreGame@@UAGXXZ
	DD	FLAT:?resetSlots@CvDllPreGame@@UAGXXZ
	DD	FLAT:?restoreSlots@CvDllPreGame@@UAGXXZ
	DD	FLAT:?saveSlots@CvDllPreGame@@UAGXXZ
	DD	FLAT:?seaLevel@CvDllPreGame@@UAG?AW4SeaLevelTypes@@XZ
	DD	FLAT:?setActivePlayer@CvDllPreGame@@UAGXW4PlayerTypes@@@Z
	DD	FLAT:?setAdminPassword@CvDllPreGame@@UAGXABVCvString@@@Z
	DD	FLAT:?setAdvancedStartPoints@CvDllPreGame@@UAGXH@Z
	DD	FLAT:?setAlias@CvDllPreGame@@UAGXABVCvString@@@Z
	DD	FLAT:?setAutorun@CvDllPreGame@@UAGX_N@Z
	DD	FLAT:?setAutorunTurnDelay@CvDllPreGame@@UAGXM@Z
	DD	FLAT:?setAutorunTurnLimit@CvDllPreGame@@UAGXH@Z
	DD	FLAT:?setBandwidth@CvDllPreGame@@UAGXABVCvString@@@Z
	DD	FLAT:?setBandwidth@CvDllPreGame@@UAGXW4BandwidthType@@@Z
	DD	FLAT:?setCalendar@CvDllPreGame@@UAGXABVCvString@@@Z
	DD	FLAT:?setCalendar@CvDllPreGame@@UAGXW4CalendarTypes@@@Z
	DD	FLAT:?setCivilization@CvDllPreGame@@UAGXW4PlayerTypes@@W4CivilizationTypes@@@Z
	DD	FLAT:?setCivilizationAdjective@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
	DD	FLAT:?setCivilizationDescription@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
	DD	FLAT:?setCivilizationPassword@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
	DD	FLAT:?setCivilizationShortDescription@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
	DD	FLAT:?setCivilizationKey@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
	DD	FLAT:?setCivilizationKeyPackageID@CvDllPreGame@@UAGXW4PlayerTypes@@ABU_GUID@@@Z
	DD	FLAT:?setClimate@CvDllPreGame@@UAGXABVCvString@@@Z
	DD	FLAT:?setClimate@CvDllPreGame@@UAGXW4ClimateTypes@@@Z
	DD	FLAT:?setCustomWorldSize@CvDllPreGame@@UAGXHHHH@Z
	DD	FLAT:?setDLCAllowed@CvDllPreGame@@UAGXABU_GUID@@_N@Z
	DD	FLAT:?setEarthMap@CvDllPreGame@@UAGX_N@Z
	DD	FLAT:?setEmailAddress@CvDllPreGame@@UAGXABVCvString@@@Z
	DD	FLAT:?setEmailAddress@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
	DD	FLAT:?setEndTurnTimerLength@CvDllPreGame@@UAGXM@Z
	DD	FLAT:?setEra@CvDllPreGame@@UAGXABVCvString@@@Z
	DD	FLAT:?setEra@CvDllPreGame@@UAGXW4EraTypes@@@Z
	DD	FLAT:?setGameMode@CvDllPreGame@@UAGXW4GameMode@@@Z
	DD	FLAT:?setGameName@CvDllPreGame@@UAGXABVCvString@@@Z
	DD	FLAT:?setGameSpeed@CvDllPreGame@@UAGXABVCvString@@@Z
	DD	FLAT:?setGameSpeed@CvDllPreGame@@UAGXW4GameSpeedTypes@@@Z
	DD	FLAT:?setGameStarted@CvDllPreGame@@UAGX_N@Z
	DD	FLAT:?setGameTurn@CvDllPreGame@@UAGXH@Z
	DD	FLAT:?SetGameOption@CvDllPreGame@@UAG_NW4GameOptionTypes@@H@Z
	DD	FLAT:?SetGameOption@CvDllPreGame@@UAG_NPBDH@Z
	DD	FLAT:?setGameType@CvDllPreGame@@UAGXABVCvString@@@Z
	DD	FLAT:?setGameType@CvDllPreGame@@UAGXW4GameTypes@@W4GameStartTypes@@@Z
	DD	FLAT:?setGameType@CvDllPreGame@@UAGXW4GameTypes@@@Z
	DD	FLAT:?setGameStartType@CvDllPreGame@@UAGXW4GameStartTypes@@@Z
	DD	FLAT:?setGameUpdateTime@CvDllPreGame@@UAGXH@Z
	DD	FLAT:?setHandicap@CvDllPreGame@@UAGXW4PlayerTypes@@W4HandicapTypes@@@Z
	DD	FLAT:?setInternetGame@CvDllPreGame@@UAGX_N@Z
	DD	FLAT:?setLeaderHead@CvDllPreGame@@UAGXW4PlayerTypes@@W4LeaderHeadTypes@@@Z
	DD	FLAT:?setLeaderName@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
	DD	FLAT:?setLeaderKey@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
	DD	FLAT:?setLeaderKeyPackageID@CvDllPreGame@@UAGXW4PlayerTypes@@ABU_GUID@@@Z
	DD	FLAT:?setLoadFileName@CvDllPreGame@@UAGXABVCvString@@@Z
	DD	FLAT:?setMapNoPlayers@CvDllPreGame@@UAGX_N@Z
	DD	FLAT:?setMapRandomSeed@CvDllPreGame@@UAGXI@Z
	DD	FLAT:?setLoadWBScenario@CvDllPreGame@@UAGX_N@Z
	DD	FLAT:?setOverrideScenarioHandicap@CvDllPreGame@@UAGX_N@Z
	DD	FLAT:?setMapScriptName@CvDllPreGame@@UAGXABVCvString@@@Z
	DD	FLAT:?SetMapOption@CvDllPreGame@@UAG_NPBDH@Z
	DD	FLAT:?setMaxCityElimination@CvDllPreGame@@UAGXH@Z
	DD	FLAT:?setMaxTurns@CvDllPreGame@@UAGXH@Z
	DD	FLAT:?setMinorCivType@CvDllPreGame@@UAGXW4PlayerTypes@@W4MinorCivTypes@@@Z
	DD	FLAT:?setMinorCiv@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z
	DD	FLAT:?setMultiplayerAIEnabled@CvDllPreGame@@UAGX_N@Z
	DD	FLAT:?setNetID@CvDllPreGame@@UAGXW4PlayerTypes@@H@Z
	DD	FLAT:?setNickname@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
	DD	FLAT:?setNumMinorCivs@CvDllPreGame@@UAGXH@Z
	DD	FLAT:?setPersistSettings@CvDllPreGame@@UAGX_N@Z
	DD	FLAT:?setPlayable@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z
	DD	FLAT:?setPlayerColor@CvDllPreGame@@UAGXW4PlayerTypes@@W4PlayerColorTypes@@@Z
	DD	FLAT:?setPrivateGame@CvDllPreGame@@UAGX_N@Z
	DD	FLAT:?setQuickCombat@CvDllPreGame@@UAGX_N@Z
	DD	FLAT:?setQuickMovement@CvDllPreGame@@UAGX_N@Z
	DD	FLAT:?setQuickHandicap@CvDllPreGame@@UAGXABVCvString@@@Z
	DD	FLAT:?setQuickHandicap@CvDllPreGame@@UAGXW4HandicapTypes@@@Z
	DD	FLAT:?setQuickstart@CvDllPreGame@@UAGX_N@Z
	DD	FLAT:?setRandomWorldSize@CvDllPreGame@@UAGX_N@Z
	DD	FLAT:?setRandomMapScript@CvDllPreGame@@UAGX_N@Z
	DD	FLAT:?setReady@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z
	DD	FLAT:?setSeaLevel@CvDllPreGame@@UAGXABVCvString@@@Z
	DD	FLAT:?setSeaLevel@CvDllPreGame@@UAGXW4SeaLevelTypes@@@Z
	DD	FLAT:?setSlotClaim@CvDllPreGame@@UAGXW4PlayerTypes@@W4SlotClaim@@@Z
	DD	FLAT:?setSlotStatus@CvDllPreGame@@UAGXW4PlayerTypes@@W4SlotStatus@@@Z
	DD	FLAT:?setSyncRandomSeed@CvDllPreGame@@UAGXI@Z
	DD	FLAT:?setTeamType@CvDllPreGame@@UAGXW4PlayerTypes@@W4TeamTypes@@@Z
	DD	FLAT:?setTransferredMap@CvDllPreGame@@UAGX_N@Z
	DD	FLAT:?setTurnTimer@CvDllPreGame@@UAGXABVCvString@@@Z
	DD	FLAT:?setTurnTimer@CvDllPreGame@@UAGXW4TurnTimerTypes@@@Z
	DD	FLAT:?SetCityScreenBlocked@CvDllPreGame@@UAGX_N@Z
	DD	FLAT:?setVersionString@CvDllPreGame@@UAGXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	FLAT:?setVictory@CvDllPreGame@@UAGXW4VictoryTypes@@_N@Z
	DD	FLAT:?setVictories@CvDllPreGame@@UAGXABV?$vector@_NV?$allocator@_N@std@@@std@@@Z
	DD	FLAT:?setWhiteFlag@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z
	DD	FLAT:?setWorldSize@CvDllPreGame@@UAGXABVCvString@@@Z
	DD	FLAT:?setWorldSize@CvDllPreGame@@UAGXW4WorldSizeTypes@@_N@Z
	DD	FLAT:?slotClaim@CvDllPreGame@@UAG?AW4SlotClaim@@W4PlayerTypes@@@Z
	DD	FLAT:?slotStatus@CvDllPreGame@@UAG?AW4SlotStatus@@W4PlayerTypes@@@Z
	DD	FLAT:?syncRandomSeed@CvDllPreGame@@UAGIXZ
	DD	FLAT:?transferredMap@CvDllPreGame@@UAG_NXZ
	DD	FLAT:?teamType@CvDllPreGame@@UAG?AW4TeamTypes@@W4PlayerTypes@@@Z
	DD	FLAT:?turnTimer@CvDllPreGame@@UAG?AW4TurnTimerTypes@@XZ
	DD	FLAT:?versionString@CvDllPreGame@@UAG?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?worldSize@CvDllPreGame@@UAG?AW4WorldSizeTypes@@XZ
	DD	FLAT:?GetWorldInfo@CvDllPreGame@@UAGPAVICvWorldInfo1@@XZ
	DD	FLAT:?write@CvDllPreGame@@UAGXAAVFDataStream@@@Z
	DD	FLAT:?getActiveSlotCount@CvDllPreGame@@UAGHXZ
	DD	FLAT:?readActiveSlotCountFromSaveGame@CvDllPreGame@@UAGHAAVFDataStream@@_N@Z
	DD	FLAT:?LoadFileStorage@CvDllPreGame@@UAG?AW4StorageLocation@@XZ
	DD	FLAT:?SetLoadFileName@CvDllPreGame@@UAGXPBDW4StorageLocation@@@Z
	DD	FLAT:?GetDLCAllowed@CvDllPreGame@@UAGPAVICvEnumerator@@XZ
	DD	FLAT:?GetDLCAvailable@CvDllPreGame@@UAGPAVICvEnumerator@@W4PlayerTypes@@@Z
	DD	FLAT:?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z
	DD	FLAT:?pitBossTurnTime@CvDllPreGame@@UAGHXZ
	DD	FLAT:?setPitBossTurnTime@CvDllPreGame@@UAGXH@Z
	DD	FLAT:?isTurnNotifySteamInvite@CvDllPreGame@@UBG_NW4PlayerTypes@@@Z
	DD	FLAT:?setTurnNotifySteamInvite@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z
	DD	FLAT:?isTurnNotifyEmail@CvDllPreGame@@UBG_NW4PlayerTypes@@@Z
	DD	FLAT:?setTurnNotifyEmail@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z
	DD	FLAT:?getTurnNotifyEmailAddress@CvDllPreGame@@UBGABVCvString@@W4PlayerTypes@@@Z
	DD	FLAT:?setTurnNotifyEmailAddress@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
	DD	FLAT:?VerifyHandicap@CvDllPreGame@@UAGXW4PlayerTypes@@@Z
	DD	FLAT:?ReseatConnectedPlayers@CvDllPreGame@@UAGXXZ
CONST	ENDS
;	COMDAT ??_7ICvPreGame2@@6B@
CONST	SEGMENT
??_7ICvPreGame2@@6B@ DD FLAT:__purecall			; ICvPreGame2::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ICvPreGame1@@6B@
CONST	SEGMENT
??_7ICvPreGame1@@6B@ DD FLAT:__purecall			; ICvPreGame1::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ICvUnknown@@6B@
CONST	SEGMENT
??_7ICvUnknown@@6B@ DD FLAT:__purecall			; ICvUnknown::`vftable'
	DD	FLAT:__purecall
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0CvDllPreGame@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CvDllPreGame@@QAE@XZ PROC				; CvDllPreGame::CvDllPreGame, COMDAT
; _this$ = ecx

; 16   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnknown@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7ICvPreGame1@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7ICvPreGame2@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvDllPreGame@@6B@

; 17   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CvDllPreGame@@QAE@XZ ENDP				; CvDllPreGame::CvDllPreGame
_TEXT	ENDS
PUBLIC	??1CvDllPreGame@@QAE@XZ				; CvDllPreGame::~CvDllPreGame
; Function compile flags: /Odtp
;	COMDAT ??1CvDllPreGame@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvDllPreGame@@QAE@XZ PROC				; CvDllPreGame::~CvDllPreGame, COMDAT
; _this$ = ecx

; 20   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvDllPreGame@@6B@

; 21   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1CvDllPreGame@@QAE@XZ ENDP				; CvDllPreGame::~CvDllPreGame
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?QueryInterface@CvDllPreGame@@UAGPAXU_GUID@@@Z
_TEXT	SEGMENT
tv133 = -128						; size = 4
tv196 = -124						; size = 4
tv128 = -120						; size = 4
tv172 = -116						; size = 4
tv91 = -112						; size = 4
tv148 = -108						; size = 4
$T221244 = -104						; size = 16
$T221243 = -88						; size = 16
$T221242 = -72						; size = 16
$T221241 = -56						; size = 16
$T221240 = -40						; size = 16
$T221239 = -20						; size = 16
_this$ = 8						; size = 4
_guidInterface$ = 12					; size = 16
?QueryInterface@CvDllPreGame@@UAGPAXU_GUID@@@Z PROC	; CvDllPreGame::QueryInterface, COMDAT

; 24   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 128				; 00000080H
	push	esi
	push	edi

; 25   : 	if(guidInterface == ICvUnknown::GetInterfaceId() ||
; 26   : 		guidInterface == ICvPreGame1::GetInterfaceId() ||
; 27   : 		guidInterface == ICvPreGame2::GetInterfaceId())

	mov	eax, DWORD PTR _guidICvUnknown
	mov	DWORD PTR $T221240[ebp], eax
	mov	ecx, DWORD PTR _guidICvUnknown+4
	mov	DWORD PTR $T221240[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvUnknown+8
	mov	DWORD PTR $T221240[ebp+8], edx
	mov	eax, DWORD PTR _guidICvUnknown+12
	mov	DWORD PTR $T221240[ebp+12], eax
	mov	ecx, DWORD PTR $T221240[ebp]
	mov	DWORD PTR $T221239[ebp], ecx
	mov	edx, DWORD PTR $T221240[ebp+4]
	mov	DWORD PTR $T221239[ebp+4], edx
	mov	eax, DWORD PTR $T221240[ebp+8]
	mov	DWORD PTR $T221239[ebp+8], eax
	mov	ecx, DWORD PTR $T221240[ebp+12]
	mov	DWORD PTR $T221239[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T221239[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv148[ebp], edx
	repe cmpsb
	je	SHORT $LN23@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv148[ebp], eax
$LN23@QueryInter:
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv91[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv91[ebp], 0
	sete	dl
	test	edx, edx
	jne	$LN1@QueryInter
	mov	eax, DWORD PTR _guidICvPreGame1
	mov	DWORD PTR $T221242[ebp], eax
	mov	ecx, DWORD PTR _guidICvPreGame1+4
	mov	DWORD PTR $T221242[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvPreGame1+8
	mov	DWORD PTR $T221242[ebp+8], edx
	mov	eax, DWORD PTR _guidICvPreGame1+12
	mov	DWORD PTR $T221242[ebp+12], eax
	mov	ecx, DWORD PTR $T221242[ebp]
	mov	DWORD PTR $T221241[ebp], ecx
	mov	edx, DWORD PTR $T221242[ebp+4]
	mov	DWORD PTR $T221241[ebp+4], edx
	mov	eax, DWORD PTR $T221242[ebp+8]
	mov	DWORD PTR $T221241[ebp+8], eax
	mov	ecx, DWORD PTR $T221242[ebp+12]
	mov	DWORD PTR $T221241[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T221241[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv172[ebp], edx
	repe cmpsb
	je	SHORT $LN24@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv172[ebp], eax
$LN24@QueryInter:
	mov	ecx, DWORD PTR tv172[ebp]
	mov	DWORD PTR tv128[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv128[ebp], 0
	sete	dl
	test	edx, edx
	jne	SHORT $LN1@QueryInter
	mov	eax, DWORD PTR _guidICvPreGame2
	mov	DWORD PTR $T221244[ebp], eax
	mov	ecx, DWORD PTR _guidICvPreGame2+4
	mov	DWORD PTR $T221244[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvPreGame2+8
	mov	DWORD PTR $T221244[ebp+8], edx
	mov	eax, DWORD PTR _guidICvPreGame2+12
	mov	DWORD PTR $T221244[ebp+12], eax
	mov	ecx, DWORD PTR $T221244[ebp]
	mov	DWORD PTR $T221243[ebp], ecx
	mov	edx, DWORD PTR $T221244[ebp+4]
	mov	DWORD PTR $T221243[ebp+4], edx
	mov	eax, DWORD PTR $T221244[ebp+8]
	mov	DWORD PTR $T221243[ebp+8], eax
	mov	ecx, DWORD PTR $T221244[ebp+12]
	mov	DWORD PTR $T221243[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T221243[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv196[ebp], edx
	repe cmpsb
	je	SHORT $LN25@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv196[ebp], eax
$LN25@QueryInter:
	mov	ecx, DWORD PTR tv196[ebp]
	mov	DWORD PTR tv133[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv133[ebp], 0
	sete	dl
	test	edx, edx
	je	SHORT $LN2@QueryInter
$LN1@QueryInter:

; 28   : 	{
; 29   : 		return this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN3@QueryInter
$LN2@QueryInter:

; 30   : 	}
; 31   : 
; 32   : 	return NULL;

	xor	eax, eax
$LN3@QueryInter:

; 33   : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?QueryInterface@CvDllPreGame@@UAGPAXU_GUID@@@Z ENDP	; CvDllPreGame::QueryInterface
_TEXT	ENDS
PUBLIC	??3CvDllPreGame@@SAXPAX@Z			; CvDllPreGame::operator delete
; Function compile flags: /Odtp
;	COMDAT ?Destroy@CvDllPreGame@@EAGXXZ
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T221287 = -8						; size = 4
$T221286 = -4						; size = 4
_this$ = 8						; size = 4
?Destroy@CvDllPreGame@@EAGXXZ PROC			; CvDllPreGame::Destroy, COMDAT

; 36   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 37   : 	delete this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T221287[ebp], eax
	mov	ecx, DWORD PTR $T221287[ebp]
	mov	DWORD PTR $T221286[ebp], ecx
	cmp	DWORD PTR $T221286[ebp], 0
	je	SHORT $LN3@Destroy
	mov	ecx, DWORD PTR $T221286[ebp]
	call	??1CvDllPreGame@@QAE@XZ			; CvDllPreGame::~CvDllPreGame
	mov	edx, 1
	and	edx, 1
	je	SHORT $LN6@Destroy
	mov	eax, DWORD PTR $T221286[ebp]
	push	eax
	call	??3CvDllPreGame@@SAXPAX@Z		; CvDllPreGame::operator delete
	add	esp, 4
$LN6@Destroy:
	mov	ecx, DWORD PTR $T221286[ebp]
	mov	DWORD PTR tv68[ebp], ecx
	jmp	SHORT $LN1@Destroy
$LN3@Destroy:
	mov	DWORD PTR tv68[ebp], 0
$LN1@Destroy:

; 38   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Destroy@CvDllPreGame@@EAGXXZ ENDP			; CvDllPreGame::Destroy
_TEXT	ENDS
EXTRN	?Free@CvDllGameContext@@SAXPAX@Z:PROC		; CvDllGameContext::Free
; Function compile flags: /Odtp
;	COMDAT ??3CvDllPreGame@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CvDllPreGame@@SAXPAX@Z PROC				; CvDllPreGame::operator delete, COMDAT

; 41   : {

	push	ebp
	mov	ebp, esp

; 42   : 	CvDllGameContext::Free(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4

; 43   : }

	pop	ebp
	ret	0
??3CvDllPreGame@@SAXPAX@Z ENDP				; CvDllPreGame::operator delete
_TEXT	ENDS
PUBLIC	??2CvDllPreGame@@SAPAXI@Z			; CvDllPreGame::operator new
EXTRN	?Allocate@CvDllGameContext@@SAPAXI@Z:PROC	; CvDllGameContext::Allocate
; Function compile flags: /Odtp
;	COMDAT ??2CvDllPreGame@@SAPAXI@Z
_TEXT	SEGMENT
_bytes$ = 8						; size = 4
??2CvDllPreGame@@SAPAXI@Z PROC				; CvDllPreGame::operator new, COMDAT

; 46   : {

	push	ebp
	mov	ebp, esp

; 47   : 	return CvDllGameContext::Allocate(bytes);

	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	call	?Allocate@CvDllGameContext@@SAPAXI@Z	; CvDllGameContext::Allocate
	add	esp, 4

; 48   : }

	pop	ebp
	ret	0
??2CvDllPreGame@@SAPAXI@Z ENDP				; CvDllPreGame::operator new
_TEXT	ENDS
EXTRN	?activePlayer@CvPreGame@@YA?AW4PlayerTypes@@XZ:PROC ; CvPreGame::activePlayer
; Function compile flags: /Odtp
;	COMDAT ?activePlayer@CvDllPreGame@@UAG?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?activePlayer@CvDllPreGame@@UAG?AW4PlayerTypes@@XZ PROC	; CvDllPreGame::activePlayer, COMDAT

; 51   : {

	push	ebp
	mov	ebp, esp

; 52   : 	return CvPreGame::activePlayer();

	call	?activePlayer@CvPreGame@@YA?AW4PlayerTypes@@XZ ; CvPreGame::activePlayer

; 53   : }

	pop	ebp
	ret	4
?activePlayer@CvDllPreGame@@UAG?AW4PlayerTypes@@XZ ENDP	; CvDllPreGame::activePlayer
_TEXT	ENDS
EXTRN	?advancedStartPoints@CvPreGame@@YAHXZ:PROC	; CvPreGame::advancedStartPoints
; Function compile flags: /Odtp
;	COMDAT ?advancedStartPoints@CvDllPreGame@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?advancedStartPoints@CvDllPreGame@@UAGHXZ PROC		; CvDllPreGame::advancedStartPoints, COMDAT

; 56   : {

	push	ebp
	mov	ebp, esp

; 57   : 	return CvPreGame::advancedStartPoints();

	call	?advancedStartPoints@CvPreGame@@YAHXZ	; CvPreGame::advancedStartPoints

; 58   : }

	pop	ebp
	ret	4
?advancedStartPoints@CvDllPreGame@@UAGHXZ ENDP		; CvDllPreGame::advancedStartPoints
_TEXT	ENDS
EXTRN	?autorun@CvPreGame@@YA_NXZ:PROC			; CvPreGame::autorun
; Function compile flags: /Odtp
;	COMDAT ?autorun@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?autorun@CvDllPreGame@@UAG_NXZ PROC			; CvDllPreGame::autorun, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp

; 62   : 	return CvPreGame::autorun();

	call	?autorun@CvPreGame@@YA_NXZ		; CvPreGame::autorun

; 63   : }

	pop	ebp
	ret	4
?autorun@CvDllPreGame@@UAG_NXZ ENDP			; CvDllPreGame::autorun
_TEXT	ENDS
EXTRN	?autorunTurnDelay@CvPreGame@@YAMXZ:PROC		; CvPreGame::autorunTurnDelay
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp
;	COMDAT ?autorunTurnDelay@CvDllPreGame@@UAGMXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?autorunTurnDelay@CvDllPreGame@@UAGMXZ PROC		; CvDllPreGame::autorunTurnDelay, COMDAT

; 66   : {

	push	ebp
	mov	ebp, esp

; 67   : 	return CvPreGame::autorunTurnDelay();

	call	?autorunTurnDelay@CvPreGame@@YAMXZ	; CvPreGame::autorunTurnDelay

; 68   : }

	pop	ebp
	ret	4
?autorunTurnDelay@CvDllPreGame@@UAGMXZ ENDP		; CvDllPreGame::autorunTurnDelay
_TEXT	ENDS
EXTRN	?autorunTurnLimit@CvPreGame@@YAHXZ:PROC		; CvPreGame::autorunTurnLimit
; Function compile flags: /Odtp
;	COMDAT ?autorunTurnLimit@CvDllPreGame@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?autorunTurnLimit@CvDllPreGame@@UAGHXZ PROC		; CvDllPreGame::autorunTurnLimit, COMDAT

; 71   : {

	push	ebp
	mov	ebp, esp

; 72   : 	return CvPreGame::autorunTurnLimit();

	call	?autorunTurnLimit@CvPreGame@@YAHXZ	; CvPreGame::autorunTurnLimit

; 73   : }

	pop	ebp
	ret	4
?autorunTurnLimit@CvDllPreGame@@UAGHXZ ENDP		; CvDllPreGame::autorunTurnLimit
_TEXT	ENDS
EXTRN	?calendar@CvPreGame@@YA?AW4CalendarTypes@@XZ:PROC ; CvPreGame::calendar
; Function compile flags: /Odtp
;	COMDAT ?calendar@CvDllPreGame@@UAG?AW4CalendarTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?calendar@CvDllPreGame@@UAG?AW4CalendarTypes@@XZ PROC	; CvDllPreGame::calendar, COMDAT

; 76   : {

	push	ebp
	mov	ebp, esp

; 77   : 	return CvPreGame::calendar();

	call	?calendar@CvPreGame@@YA?AW4CalendarTypes@@XZ ; CvPreGame::calendar

; 78   : }

	pop	ebp
	ret	4
?calendar@CvDllPreGame@@UAG?AW4CalendarTypes@@XZ ENDP	; CvDllPreGame::calendar
_TEXT	ENDS
EXTRN	?canReadyLocalPlayer@CvPreGame@@YA_NXZ:PROC	; CvPreGame::canReadyLocalPlayer
; Function compile flags: /Odtp
;	COMDAT ?canReadyLocalPlayer@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?canReadyLocalPlayer@CvDllPreGame@@UAG_NXZ PROC		; CvDllPreGame::canReadyLocalPlayer, COMDAT

; 81   : {

	push	ebp
	mov	ebp, esp

; 82   : 	return CvPreGame::canReadyLocalPlayer();

	call	?canReadyLocalPlayer@CvPreGame@@YA_NXZ	; CvPreGame::canReadyLocalPlayer

; 83   : }

	pop	ebp
	ret	4
?canReadyLocalPlayer@CvDllPreGame@@UAG_NXZ ENDP		; CvDllPreGame::canReadyLocalPlayer
_TEXT	ENDS
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	?civilizationAdjective@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z:PROC ; CvPreGame::civilizationAdjective
; Function compile flags: /Odtp
;	COMDAT ?civilizationAdjective@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
$T221322 = -8						; size = 4
$T221316 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_p$ = 16						; size = 4
?civilizationAdjective@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::civilizationAdjective, COMDAT

; 86   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221316[ebp], 0

; 87   : 	return CvPreGame::civilizationAdjective(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?civilizationAdjective@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z ; CvPreGame::civilizationAdjective
	add	esp, 4
	mov	DWORD PTR $T221322[ebp], eax
	mov	ecx, DWORD PTR $T221322[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T221316[ebp]
	or	edx, 1
	mov	DWORD PTR $T221316[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 88   : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?civilizationAdjective@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::civilizationAdjective
_TEXT	ENDS
EXTRN	?civilizationAdjectiveKey@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z:PROC ; CvPreGame::civilizationAdjectiveKey
; Function compile flags: /Odtp
;	COMDAT ?civilizationAdjectiveKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
$T221332 = -8						; size = 4
$T221326 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_p$ = 16						; size = 4
?civilizationAdjectiveKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::civilizationAdjectiveKey, COMDAT

; 91   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221326[ebp], 0

; 92   : 	return CvPreGame::civilizationAdjectiveKey(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?civilizationAdjectiveKey@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z ; CvPreGame::civilizationAdjectiveKey
	add	esp, 4
	mov	DWORD PTR $T221332[ebp], eax
	mov	ecx, DWORD PTR $T221332[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T221326[ebp]
	or	edx, 1
	mov	DWORD PTR $T221326[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 93   : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?civilizationAdjectiveKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::civilizationAdjectiveKey
_TEXT	ENDS
EXTRN	?civilizationDescription@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z:PROC ; CvPreGame::civilizationDescription
; Function compile flags: /Odtp
;	COMDAT ?civilizationDescription@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
$T221342 = -8						; size = 4
$T221336 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_p$ = 16						; size = 4
?civilizationDescription@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::civilizationDescription, COMDAT

; 96   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221336[ebp], 0

; 97   : 	return CvPreGame::civilizationDescription(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?civilizationDescription@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z ; CvPreGame::civilizationDescription
	add	esp, 4
	mov	DWORD PTR $T221342[ebp], eax
	mov	ecx, DWORD PTR $T221342[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T221336[ebp]
	or	edx, 1
	mov	DWORD PTR $T221336[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 98   : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?civilizationDescription@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::civilizationDescription
_TEXT	ENDS
EXTRN	?civilizationDescriptionKey@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z:PROC ; CvPreGame::civilizationDescriptionKey
; Function compile flags: /Odtp
;	COMDAT ?civilizationDescriptionKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
$T221352 = -8						; size = 4
$T221346 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_p$ = 16						; size = 4
?civilizationDescriptionKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::civilizationDescriptionKey, COMDAT

; 101  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221346[ebp], 0

; 102  : 	return CvPreGame::civilizationDescriptionKey(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?civilizationDescriptionKey@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z ; CvPreGame::civilizationDescriptionKey
	add	esp, 4
	mov	DWORD PTR $T221352[ebp], eax
	mov	ecx, DWORD PTR $T221352[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T221346[ebp]
	or	edx, 1
	mov	DWORD PTR $T221346[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 103  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?civilizationDescriptionKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::civilizationDescriptionKey
_TEXT	ENDS
EXTRN	?civilization@CvPreGame@@YA?AW4CivilizationTypes@@W4PlayerTypes@@@Z:PROC ; CvPreGame::civilization
; Function compile flags: /Odtp
;	COMDAT ?civilization@CvDllPreGame@@UAG?AW4CivilizationTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?civilization@CvDllPreGame@@UAG?AW4CivilizationTypes@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::civilization, COMDAT

; 106  : {

	push	ebp
	mov	ebp, esp

; 107  : 	return CvPreGame::civilization(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?civilization@CvPreGame@@YA?AW4CivilizationTypes@@W4PlayerTypes@@@Z ; CvPreGame::civilization
	add	esp, 4

; 108  : }

	pop	ebp
	ret	8
?civilization@CvDllPreGame@@UAG?AW4CivilizationTypes@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::civilization
_TEXT	ENDS
EXTRN	?civilizationPassword@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z:PROC ; CvPreGame::civilizationPassword
; Function compile flags: /Odtp
;	COMDAT ?civilizationPassword@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
$T221364 = -8						; size = 4
$T221358 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_p$ = 16						; size = 4
?civilizationPassword@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::civilizationPassword, COMDAT

; 111  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221358[ebp], 0

; 112  : 	return CvPreGame::civilizationPassword(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?civilizationPassword@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z ; CvPreGame::civilizationPassword
	add	esp, 4
	mov	DWORD PTR $T221364[ebp], eax
	mov	ecx, DWORD PTR $T221364[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T221358[ebp]
	or	edx, 1
	mov	DWORD PTR $T221358[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 113  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?civilizationPassword@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::civilizationPassword
_TEXT	ENDS
EXTRN	?civilizationShortDescription@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z:PROC ; CvPreGame::civilizationShortDescription
; Function compile flags: /Odtp
;	COMDAT ?civilizationShortDescription@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
$T221374 = -8						; size = 4
$T221368 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_p$ = 16						; size = 4
?civilizationShortDescription@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::civilizationShortDescription, COMDAT

; 116  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221368[ebp], 0

; 117  : 	return CvPreGame::civilizationShortDescription(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?civilizationShortDescription@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z ; CvPreGame::civilizationShortDescription
	add	esp, 4
	mov	DWORD PTR $T221374[ebp], eax
	mov	ecx, DWORD PTR $T221374[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T221368[ebp]
	or	edx, 1
	mov	DWORD PTR $T221368[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 118  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?civilizationShortDescription@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::civilizationShortDescription
_TEXT	ENDS
EXTRN	?civilizationShortDescriptionKey@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z:PROC ; CvPreGame::civilizationShortDescriptionKey
; Function compile flags: /Odtp
;	COMDAT ?civilizationShortDescriptionKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
$T221384 = -8						; size = 4
$T221378 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_p$ = 16						; size = 4
?civilizationShortDescriptionKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::civilizationShortDescriptionKey, COMDAT

; 121  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221378[ebp], 0

; 122  : 	return CvPreGame::civilizationShortDescriptionKey(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?civilizationShortDescriptionKey@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z ; CvPreGame::civilizationShortDescriptionKey
	add	esp, 4
	mov	DWORD PTR $T221384[ebp], eax
	mov	ecx, DWORD PTR $T221384[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T221378[ebp]
	or	edx, 1
	mov	DWORD PTR $T221378[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?civilizationShortDescriptionKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::civilizationShortDescriptionKey
_TEXT	ENDS
EXTRN	?civilizationKey@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z:PROC ; CvPreGame::civilizationKey
; Function compile flags: /Odtp
;	COMDAT ?civilizationKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
$T221394 = -8						; size = 4
$T221388 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_p$ = 16						; size = 4
?civilizationKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::civilizationKey, COMDAT

; 126  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221388[ebp], 0

; 127  : 	return CvPreGame::civilizationKey(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?civilizationKey@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z ; CvPreGame::civilizationKey
	add	esp, 4
	mov	DWORD PTR $T221394[ebp], eax
	mov	ecx, DWORD PTR $T221394[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T221388[ebp]
	or	edx, 1
	mov	DWORD PTR $T221388[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 128  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?civilizationKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::civilizationKey
_TEXT	ENDS
EXTRN	?civilizationKeyAvailable@CvPreGame@@YA_NW4PlayerTypes@@@Z:PROC ; CvPreGame::civilizationKeyAvailable
; Function compile flags: /Odtp
;	COMDAT ?civilizationKeyAvailable@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?civilizationKeyAvailable@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z PROC ; CvDllPreGame::civilizationKeyAvailable, COMDAT

; 131  : {

	push	ebp
	mov	ebp, esp

; 132  : 	return CvPreGame::civilizationKeyAvailable(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?civilizationKeyAvailable@CvPreGame@@YA_NW4PlayerTypes@@@Z ; CvPreGame::civilizationKeyAvailable
	add	esp, 4

; 133  : }

	pop	ebp
	ret	8
?civilizationKeyAvailable@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z ENDP ; CvDllPreGame::civilizationKeyAvailable
_TEXT	ENDS
EXTRN	?civilizationKeyPackageID@CvPreGame@@YAABU_GUID@@W4PlayerTypes@@@Z:PROC ; CvPreGame::civilizationKeyPackageID
; Function compile flags: /Odtp
;	COMDAT ?civilizationKeyPackageID@CvDllPreGame@@UAG?BU_GUID@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_p$ = 16						; size = 4
?civilizationKeyPackageID@CvDllPreGame@@UAG?BU_GUID@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::civilizationKeyPackageID, COMDAT

; 136  : {

	push	ebp
	mov	ebp, esp

; 137  : 	return CvPreGame:: civilizationKeyPackageID(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?civilizationKeyPackageID@CvPreGame@@YAABU_GUID@@W4PlayerTypes@@@Z ; CvPreGame::civilizationKeyPackageID
	add	esp, 4
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 138  : }

	pop	ebp
	ret	12					; 0000000cH
?civilizationKeyPackageID@CvDllPreGame@@UAG?BU_GUID@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::civilizationKeyPackageID
_TEXT	ENDS
EXTRN	?clearDLCAllowed@CvPreGame@@YAXXZ:PROC		; CvPreGame::clearDLCAllowed
; Function compile flags: /Odtp
;	COMDAT ?clearDLCAllowed@CvDllPreGame@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?clearDLCAllowed@CvDllPreGame@@UAGXXZ PROC		; CvDllPreGame::clearDLCAllowed, COMDAT

; 141  : {

	push	ebp
	mov	ebp, esp

; 142  : 	CvPreGame::clearDLCAllowed();

	call	?clearDLCAllowed@CvPreGame@@YAXXZ	; CvPreGame::clearDLCAllowed

; 143  : }

	pop	ebp
	ret	4
?clearDLCAllowed@CvDllPreGame@@UAGXXZ ENDP		; CvDllPreGame::clearDLCAllowed
_TEXT	ENDS
EXTRN	?climate@CvPreGame@@YA?AW4ClimateTypes@@XZ:PROC	; CvPreGame::climate
; Function compile flags: /Odtp
;	COMDAT ?climate@CvDllPreGame@@UAG?AW4ClimateTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?climate@CvDllPreGame@@UAG?AW4ClimateTypes@@XZ PROC	; CvDllPreGame::climate, COMDAT

; 146  : {

	push	ebp
	mov	ebp, esp

; 147  : 	return CvPreGame::climate();

	call	?climate@CvPreGame@@YA?AW4ClimateTypes@@XZ ; CvPreGame::climate

; 148  : }

	pop	ebp
	ret	4
?climate@CvDllPreGame@@UAG?AW4ClimateTypes@@XZ ENDP	; CvDllPreGame::climate
_TEXT	ENDS
EXTRN	?closeAllSlots@CvPreGame@@YAXXZ:PROC		; CvPreGame::closeAllSlots
; Function compile flags: /Odtp
;	COMDAT ?closeAllSlots@CvDllPreGame@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?closeAllSlots@CvDllPreGame@@UAGXXZ PROC		; CvDllPreGame::closeAllSlots, COMDAT

; 151  : {

	push	ebp
	mov	ebp, esp

; 152  : 	CvPreGame::closeAllSlots();

	call	?closeAllSlots@CvPreGame@@YAXXZ		; CvPreGame::closeAllSlots

; 153  : }

	pop	ebp
	ret	4
?closeAllSlots@CvDllPreGame@@UAGXXZ ENDP		; CvDllPreGame::closeAllSlots
_TEXT	ENDS
EXTRN	?closeInactiveSlots@CvPreGame@@YAXXZ:PROC	; CvPreGame::closeInactiveSlots
; Function compile flags: /Odtp
;	COMDAT ?closeInactiveSlots@CvDllPreGame@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?closeInactiveSlots@CvDllPreGame@@UAGXXZ PROC		; CvDllPreGame::closeInactiveSlots, COMDAT

; 156  : {

	push	ebp
	mov	ebp, esp

; 157  : 	CvPreGame::closeInactiveSlots();

	call	?closeInactiveSlots@CvPreGame@@YAXXZ	; CvPreGame::closeInactiveSlots

; 158  : }

	pop	ebp
	ret	4
?closeInactiveSlots@CvDllPreGame@@UAGXXZ ENDP		; CvDllPreGame::closeInactiveSlots
_TEXT	ENDS
EXTRN	?emailAddress@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z:PROC ; CvPreGame::emailAddress
; Function compile flags: /Odtp
;	COMDAT ?emailAddress@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
$T221416 = -8						; size = 4
$T221410 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_p$ = 16						; size = 4
?emailAddress@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::emailAddress, COMDAT

; 161  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221410[ebp], 0

; 162  : 	return CvPreGame::emailAddress(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?emailAddress@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z ; CvPreGame::emailAddress
	add	esp, 4
	mov	DWORD PTR $T221416[ebp], eax
	mov	ecx, DWORD PTR $T221416[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T221410[ebp]
	or	edx, 1
	mov	DWORD PTR $T221410[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 163  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?emailAddress@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::emailAddress
_TEXT	ENDS
EXTRN	?emailAddress@CvPreGame@@YAABVCvString@@XZ:PROC	; CvPreGame::emailAddress
; Function compile flags: /Odtp
;	COMDAT ?emailAddress@CvDllPreGame@@UAG?BVCvString@@XZ
_TEXT	SEGMENT
$T221426 = -8						; size = 4
$T221420 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
?emailAddress@CvDllPreGame@@UAG?BVCvString@@XZ PROC	; CvDllPreGame::emailAddress, COMDAT

; 166  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221420[ebp], 0

; 167  : 	return CvPreGame::emailAddress();

	call	?emailAddress@CvPreGame@@YAABVCvString@@XZ ; CvPreGame::emailAddress
	mov	DWORD PTR $T221426[ebp], eax
	mov	eax, DWORD PTR $T221426[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T221420[ebp]
	or	ecx, 1
	mov	DWORD PTR $T221420[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 168  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?emailAddress@CvDllPreGame@@UAG?BVCvString@@XZ ENDP	; CvDllPreGame::emailAddress
_TEXT	ENDS
EXTRN	?endTurnTimerLength@CvPreGame@@YAMXZ:PROC	; CvPreGame::endTurnTimerLength
; Function compile flags: /Odtp
;	COMDAT ?endTurnTimerLength@CvDllPreGame@@UAGMXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?endTurnTimerLength@CvDllPreGame@@UAGMXZ PROC		; CvDllPreGame::endTurnTimerLength, COMDAT

; 171  : {

	push	ebp
	mov	ebp, esp

; 172  : 	return CvPreGame::endTurnTimerLength();

	call	?endTurnTimerLength@CvPreGame@@YAMXZ	; CvPreGame::endTurnTimerLength

; 173  : }

	pop	ebp
	ret	4
?endTurnTimerLength@CvDllPreGame@@UAGMXZ ENDP		; CvDllPreGame::endTurnTimerLength
_TEXT	ENDS
EXTRN	?era@CvPreGame@@YA?AW4EraTypes@@XZ:PROC		; CvPreGame::era
; Function compile flags: /Odtp
;	COMDAT ?era@CvDllPreGame@@UAG?AW4EraTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?era@CvDllPreGame@@UAG?AW4EraTypes@@XZ PROC		; CvDllPreGame::era, COMDAT

; 176  : {

	push	ebp
	mov	ebp, esp

; 177  : 	return CvPreGame::era();

	call	?era@CvPreGame@@YA?AW4EraTypes@@XZ	; CvPreGame::era

; 178  : }

	pop	ebp
	ret	4
?era@CvDllPreGame@@UAG?AW4EraTypes@@XZ ENDP		; CvDllPreGame::era
_TEXT	ENDS
EXTRN	?findPlayerByNickname@CvPreGame@@YA?AW4PlayerTypes@@QBD@Z:PROC ; CvPreGame::findPlayerByNickname
; Function compile flags: /Odtp
;	COMDAT ?findPlayerByNickname@CvDllPreGame@@UAG?AW4PlayerTypes@@QBD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_name$ = 12						; size = 4
?findPlayerByNickname@CvDllPreGame@@UAG?AW4PlayerTypes@@QBD@Z PROC ; CvDllPreGame::findPlayerByNickname, COMDAT

; 181  : {

	push	ebp
	mov	ebp, esp

; 182  : 	return CvPreGame::findPlayerByNickname(name);

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	?findPlayerByNickname@CvPreGame@@YA?AW4PlayerTypes@@QBD@Z ; CvPreGame::findPlayerByNickname
	add	esp, 4

; 183  : }

	pop	ebp
	ret	8
?findPlayerByNickname@CvDllPreGame@@UAG?AW4PlayerTypes@@QBD@Z ENDP ; CvDllPreGame::findPlayerByNickname
_TEXT	ENDS
EXTRN	?gameMode@CvPreGame@@YA?AW4GameMode@@XZ:PROC	; CvPreGame::gameMode
; Function compile flags: /Odtp
;	COMDAT ?gameMode@CvDllPreGame@@UAG?AW4GameMode@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?gameMode@CvDllPreGame@@UAG?AW4GameMode@@XZ PROC	; CvDllPreGame::gameMode, COMDAT

; 186  : {

	push	ebp
	mov	ebp, esp

; 187  : 	return CvPreGame::gameMode();

	call	?gameMode@CvPreGame@@YA?AW4GameMode@@XZ	; CvPreGame::gameMode

; 188  : }

	pop	ebp
	ret	4
?gameMode@CvDllPreGame@@UAG?AW4GameMode@@XZ ENDP	; CvDllPreGame::gameMode
_TEXT	ENDS
EXTRN	?gameName@CvPreGame@@YAABVCvString@@XZ:PROC	; CvPreGame::gameName
; Function compile flags: /Odtp
;	COMDAT ?gameName@CvDllPreGame@@UAG?BVCvString@@XZ
_TEXT	SEGMENT
$T221444 = -8						; size = 4
$T221438 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
?gameName@CvDllPreGame@@UAG?BVCvString@@XZ PROC		; CvDllPreGame::gameName, COMDAT

; 191  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221438[ebp], 0

; 192  : 	return CvPreGame::gameName();

	call	?gameName@CvPreGame@@YAABVCvString@@XZ	; CvPreGame::gameName
	mov	DWORD PTR $T221444[ebp], eax
	mov	eax, DWORD PTR $T221444[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T221438[ebp]
	or	ecx, 1
	mov	DWORD PTR $T221438[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 193  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?gameName@CvDllPreGame@@UAG?BVCvString@@XZ ENDP		; CvDllPreGame::gameName
_TEXT	ENDS
EXTRN	?gameStarted@CvPreGame@@YA_NXZ:PROC		; CvPreGame::gameStarted
; Function compile flags: /Odtp
;	COMDAT ?gameStarted@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?gameStarted@CvDllPreGame@@UAG_NXZ PROC			; CvDllPreGame::gameStarted, COMDAT

; 196  : {

	push	ebp
	mov	ebp, esp

; 197  : 	return CvPreGame::gameStarted();

	call	?gameStarted@CvPreGame@@YA_NXZ		; CvPreGame::gameStarted

; 198  : }

	pop	ebp
	ret	4
?gameStarted@CvDllPreGame@@UAG_NXZ ENDP			; CvDllPreGame::gameStarted
_TEXT	ENDS
EXTRN	?GetGameOption@CvPreGame@@YA_NPBDAAH@Z:PROC	; CvPreGame::GetGameOption
; Function compile flags: /Odtp
;	COMDAT ?GetGameOption@CvDllPreGame@@UAG_NPBDAAH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_szOptionName$ = 12					; size = 4
_iValue$ = 16						; size = 4
?GetGameOption@CvDllPreGame@@UAG_NPBDAAH@Z PROC		; CvDllPreGame::GetGameOption, COMDAT

; 201  : {

	push	ebp
	mov	ebp, esp

; 202  : 	return CvPreGame::GetGameOption(szOptionName, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szOptionName$[ebp]
	push	ecx
	call	?GetGameOption@CvPreGame@@YA_NPBDAAH@Z	; CvPreGame::GetGameOption
	add	esp, 8

; 203  : }

	pop	ebp
	ret	12					; 0000000cH
?GetGameOption@CvDllPreGame@@UAG_NPBDAAH@Z ENDP		; CvDllPreGame::GetGameOption
_TEXT	ENDS
EXTRN	?GetGameOption@CvPreGame@@YA_NW4GameOptionTypes@@AAH@Z:PROC ; CvPreGame::GetGameOption
; Function compile flags: /Odtp
;	COMDAT ?GetGameOption@CvDllPreGame@@UAG_NW4GameOptionTypes@@AAH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_eOption$ = 12						; size = 4
_iValue$ = 16						; size = 4
?GetGameOption@CvDllPreGame@@UAG_NW4GameOptionTypes@@AAH@Z PROC ; CvDllPreGame::GetGameOption, COMDAT

; 206  : {

	push	ebp
	mov	ebp, esp

; 207  : 	return CvPreGame::GetGameOption(eOption, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eOption$[ebp]
	push	ecx
	call	?GetGameOption@CvPreGame@@YA_NW4GameOptionTypes@@AAH@Z ; CvPreGame::GetGameOption
	add	esp, 8

; 208  : }

	pop	ebp
	ret	12					; 0000000cH
?GetGameOption@CvDllPreGame@@UAG_NW4GameOptionTypes@@AAH@Z ENDP ; CvDllPreGame::GetGameOption
_TEXT	ENDS
EXTRN	?GetGameOptions@CvPreGame@@YAABV?$vector@VCustomOption@CvPreGame@@V?$allocator@VCustomOption@CvPreGame@@@std@@@std@@XZ:PROC ; CvPreGame::GetGameOptions
; Function compile flags: /Odtp
;	COMDAT ?GetGameOptionCount@CvDllPreGame@@UAGIXZ
_TEXT	SEGMENT
$T221456 = -4						; size = 4
_this$ = 8						; size = 4
?GetGameOptionCount@CvDllPreGame@@UAGIXZ PROC		; CvDllPreGame::GetGameOptionCount, COMDAT

; 211  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 212  : 	return CvPreGame::GetGameOptions().size();

	call	?GetGameOptions@CvPreGame@@YAABV?$vector@VCustomOption@CvPreGame@@V?$allocator@VCustomOption@CvPreGame@@@std@@@std@@XZ ; CvPreGame::GetGameOptions
	mov	DWORD PTR $T221456[ebp], eax
	mov	eax, DWORD PTR $T221456[ebp]
	mov	ecx, DWORD PTR $T221456[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 68					; 00000044H
	idiv	ecx

; 213  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetGameOptionCount@CvDllPreGame@@UAGIXZ ENDP		; CvDllPreGame::GetGameOptionCount
_TEXT	ENDS
EXTRN	?GetValue@CustomOption@CvPreGame@@QBEHXZ:PROC	; CvPreGame::CustomOption::GetValue
EXTRN	?GetName@CustomOption@CvPreGame@@QBEPBDAAI@Z:PROC ; CvPreGame::CustomOption::GetName
; Function compile flags: /Odtp
;	COMDAT ?GetGameOption@CvDllPreGame@@UAG_NIPADIAAH@Z
_TEXT	SEGMENT
tv80 = -33						; size = 1
tv79 = -32						; size = 4
tv78 = -28						; size = 4
tv77 = -24						; size = 4
$T221470 = -20						; size = 4
$T221466 = -16						; size = 4
_nSourceBufferSize$219133 = -12				; size = 4
_pszSourceBuffer$219134 = -8				; size = 4
_kOptions$ = -4						; size = 4
_this$ = 8						; size = 4
_uiIndex$ = 12						; size = 4
_szOptionNameBuffer$ = 16				; size = 4
_nOptionNameBufferSize$ = 20				; size = 4
_iValue$ = 24						; size = 4
?GetGameOption@CvDllPreGame@@UAG_NIPADIAAH@Z PROC	; CvDllPreGame::GetGameOption, COMDAT

; 216  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 217  : 	const std::vector<CvPreGame::CustomOption>& kOptions = CvPreGame::GetGameOptions();

	call	?GetGameOptions@CvPreGame@@YAABV?$vector@VCustomOption@CvPreGame@@V?$allocator@VCustomOption@CvPreGame@@@std@@@std@@XZ ; CvPreGame::GetGameOptions
	mov	DWORD PTR _kOptions$[ebp], eax

; 218  : 	if(uiIndex < kOptions.size())

	mov	eax, DWORD PTR _kOptions$[ebp]
	mov	ecx, DWORD PTR _kOptions$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 68					; 00000044H
	idiv	ecx
	cmp	DWORD PTR _uiIndex$[ebp], eax
	jae	$LN2@GetGameOpt

; 219  : 	{
; 220  : 		size_t nSourceBufferSize;
; 221  : 		const char* pszSourceBuffer = kOptions[uiIndex].GetName(nSourceBufferSize);

	mov	edx, DWORD PTR _uiIndex$[ebp]
	imul	edx, 68					; 00000044H
	mov	eax, DWORD PTR _kOptions$[ebp]
	add	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T221466[ebp], edx
	lea	ecx, DWORD PTR _nSourceBufferSize$219133[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T221466[ebp]
	call	?GetName@CustomOption@CvPreGame@@QBEPBDAAI@Z ; CvPreGame::CustomOption::GetName
	mov	DWORD PTR _pszSourceBuffer$219134[ebp], eax

; 222  : 		if(nOptionNameBufferSize+1 > nSourceBufferSize)

	mov	edx, DWORD PTR _nOptionNameBufferSize$[ebp]
	add	edx, 1
	cmp	edx, DWORD PTR _nSourceBufferSize$219133[ebp]
	jbe	SHORT $LN2@GetGameOpt

; 223  : 		{
; 224  : 			strcpy(szOptionNameBuffer, pszSourceBuffer);

	mov	eax, DWORD PTR _pszSourceBuffer$219134[ebp]
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR _szOptionNameBuffer$[ebp]
	mov	DWORD PTR tv78[ebp], ecx
	mov	edx, DWORD PTR tv78[ebp]
	mov	DWORD PTR tv79[ebp], edx
$LN5@GetGameOpt:
	mov	eax, DWORD PTR tv77[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv80[ebp], cl
	mov	edx, DWORD PTR tv78[ebp]
	mov	al, BYTE PTR tv80[ebp]
	mov	BYTE PTR [edx], al
	mov	ecx, DWORD PTR tv77[ebp]
	add	ecx, 1
	mov	DWORD PTR tv77[ebp], ecx
	mov	edx, DWORD PTR tv78[ebp]
	add	edx, 1
	mov	DWORD PTR tv78[ebp], edx
	cmp	BYTE PTR tv80[ebp], 0
	jne	SHORT $LN5@GetGameOpt

; 225  : 			iValue = kOptions[uiIndex].GetValue();

	mov	eax, DWORD PTR _uiIndex$[ebp]
	imul	eax, 68					; 00000044H
	mov	ecx, DWORD PTR _kOptions$[ebp]
	add	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR $T221470[ebp], eax
	mov	ecx, DWORD PTR $T221470[ebp]
	call	?GetValue@CustomOption@CvPreGame@@QBEHXZ ; CvPreGame::CustomOption::GetValue
	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR [edx], eax

; 226  : 			return true;

	mov	al, 1
	jmp	SHORT $LN3@GetGameOpt
$LN2@GetGameOpt:

; 227  : 		}
; 228  : 	}
; 229  : 	return false;

	xor	al, al
$LN3@GetGameOpt:

; 230  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?GetGameOption@CvDllPreGame@@UAG_NIPADIAAH@Z ENDP	; CvDllPreGame::GetGameOption
_TEXT	ENDS
EXTRN	?GetMapOptions@CvPreGame@@YAABV?$vector@VCustomOption@CvPreGame@@V?$allocator@VCustomOption@CvPreGame@@@std@@@std@@XZ:PROC ; CvPreGame::GetMapOptions
; Function compile flags: /Odtp
;	COMDAT ?GetMapOptionCount@CvDllPreGame@@UAGIXZ
_TEXT	SEGMENT
$T221476 = -4						; size = 4
_this$ = 8						; size = 4
?GetMapOptionCount@CvDllPreGame@@UAGIXZ PROC		; CvDllPreGame::GetMapOptionCount, COMDAT

; 233  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 234  : 	return CvPreGame::GetMapOptions().size();

	call	?GetMapOptions@CvPreGame@@YAABV?$vector@VCustomOption@CvPreGame@@V?$allocator@VCustomOption@CvPreGame@@@std@@@std@@XZ ; CvPreGame::GetMapOptions
	mov	DWORD PTR $T221476[ebp], eax
	mov	eax, DWORD PTR $T221476[ebp]
	mov	ecx, DWORD PTR $T221476[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 68					; 00000044H
	idiv	ecx

; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetMapOptionCount@CvDllPreGame@@UAGIXZ ENDP		; CvDllPreGame::GetMapOptionCount
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetMapOption@CvDllPreGame@@UAG_NIPADIAAH@Z
_TEXT	SEGMENT
tv80 = -33						; size = 1
tv79 = -32						; size = 4
tv78 = -28						; size = 4
tv77 = -24						; size = 4
$T221490 = -20						; size = 4
$T221486 = -16						; size = 4
_nSourceBufferSize$219152 = -12				; size = 4
_pszSourceBuffer$219153 = -8				; size = 4
_kOptions$ = -4						; size = 4
_this$ = 8						; size = 4
_uiIndex$ = 12						; size = 4
_szOptionNameBuffer$ = 16				; size = 4
_nOptionNameBufferSize$ = 20				; size = 4
_iValue$ = 24						; size = 4
?GetMapOption@CvDllPreGame@@UAG_NIPADIAAH@Z PROC	; CvDllPreGame::GetMapOption, COMDAT

; 238  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 239  : 	const std::vector<CvPreGame::CustomOption>& kOptions = CvPreGame::GetMapOptions();

	call	?GetMapOptions@CvPreGame@@YAABV?$vector@VCustomOption@CvPreGame@@V?$allocator@VCustomOption@CvPreGame@@@std@@@std@@XZ ; CvPreGame::GetMapOptions
	mov	DWORD PTR _kOptions$[ebp], eax

; 240  : 	if(uiIndex < kOptions.size())

	mov	eax, DWORD PTR _kOptions$[ebp]
	mov	ecx, DWORD PTR _kOptions$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 68					; 00000044H
	idiv	ecx
	cmp	DWORD PTR _uiIndex$[ebp], eax
	jae	$LN2@GetMapOpti

; 241  : 	{
; 242  : 		size_t nSourceBufferSize;
; 243  : 		const char* pszSourceBuffer = kOptions[uiIndex].GetName(nSourceBufferSize);

	mov	edx, DWORD PTR _uiIndex$[ebp]
	imul	edx, 68					; 00000044H
	mov	eax, DWORD PTR _kOptions$[ebp]
	add	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T221486[ebp], edx
	lea	ecx, DWORD PTR _nSourceBufferSize$219152[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T221486[ebp]
	call	?GetName@CustomOption@CvPreGame@@QBEPBDAAI@Z ; CvPreGame::CustomOption::GetName
	mov	DWORD PTR _pszSourceBuffer$219153[ebp], eax

; 244  : 		if(nOptionNameBufferSize+1 > nSourceBufferSize)

	mov	edx, DWORD PTR _nOptionNameBufferSize$[ebp]
	add	edx, 1
	cmp	edx, DWORD PTR _nSourceBufferSize$219152[ebp]
	jbe	SHORT $LN2@GetMapOpti

; 245  : 		{
; 246  : 			strcpy(szOptionNameBuffer, pszSourceBuffer);

	mov	eax, DWORD PTR _pszSourceBuffer$219153[ebp]
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR _szOptionNameBuffer$[ebp]
	mov	DWORD PTR tv78[ebp], ecx
	mov	edx, DWORD PTR tv78[ebp]
	mov	DWORD PTR tv79[ebp], edx
$LN5@GetMapOpti:
	mov	eax, DWORD PTR tv77[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv80[ebp], cl
	mov	edx, DWORD PTR tv78[ebp]
	mov	al, BYTE PTR tv80[ebp]
	mov	BYTE PTR [edx], al
	mov	ecx, DWORD PTR tv77[ebp]
	add	ecx, 1
	mov	DWORD PTR tv77[ebp], ecx
	mov	edx, DWORD PTR tv78[ebp]
	add	edx, 1
	mov	DWORD PTR tv78[ebp], edx
	cmp	BYTE PTR tv80[ebp], 0
	jne	SHORT $LN5@GetMapOpti

; 247  : 			iValue = kOptions[uiIndex].GetValue();

	mov	eax, DWORD PTR _uiIndex$[ebp]
	imul	eax, 68					; 00000044H
	mov	ecx, DWORD PTR _kOptions$[ebp]
	add	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR $T221490[ebp], eax
	mov	ecx, DWORD PTR $T221490[ebp]
	call	?GetValue@CustomOption@CvPreGame@@QBEHXZ ; CvPreGame::CustomOption::GetValue
	mov	edx, DWORD PTR _iValue$[ebp]
	mov	DWORD PTR [edx], eax

; 248  : 			return true;

	mov	al, 1
	jmp	SHORT $LN3@GetMapOpti
$LN2@GetMapOpti:

; 249  : 		}
; 250  : 	}
; 251  : 	return false;

	xor	al, al
$LN3@GetMapOpti:

; 252  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?GetMapOption@CvDllPreGame@@UAG_NIPADIAAH@Z ENDP	; CvDllPreGame::GetMapOption
_TEXT	ENDS
EXTRN	?GetMapOption@CvPreGame@@YA_NPBDAAH@Z:PROC	; CvPreGame::GetMapOption
; Function compile flags: /Odtp
;	COMDAT ?GetMapOption@CvDllPreGame@@UAG_NPBDAAH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_szOptionName$ = 12					; size = 4
_iValue$ = 16						; size = 4
?GetMapOption@CvDllPreGame@@UAG_NPBDAAH@Z PROC		; CvDllPreGame::GetMapOption, COMDAT

; 255  : {

	push	ebp
	mov	ebp, esp

; 256  : 	return CvPreGame::GetMapOption(szOptionName, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szOptionName$[ebp]
	push	ecx
	call	?GetMapOption@CvPreGame@@YA_NPBDAAH@Z	; CvPreGame::GetMapOption
	add	esp, 8

; 257  : }

	pop	ebp
	ret	12					; 0000000cH
?GetMapOption@CvDllPreGame@@UAG_NPBDAAH@Z ENDP		; CvDllPreGame::GetMapOption
_TEXT	ENDS
EXTRN	?GetPersistSettings@CvPreGame@@YA_NXZ:PROC	; CvPreGame::GetPersistSettings
; Function compile flags: /Odtp
;	COMDAT ?GetPersistSettings@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetPersistSettings@CvDllPreGame@@UAG_NXZ PROC		; CvDllPreGame::GetPersistSettings, COMDAT

; 260  : {

	push	ebp
	mov	ebp, esp

; 261  : 	return CvPreGame::GetPersistSettings();

	call	?GetPersistSettings@CvPreGame@@YA_NXZ	; CvPreGame::GetPersistSettings

; 262  : }

	pop	ebp
	ret	4
?GetPersistSettings@CvDllPreGame@@UAG_NXZ ENDP		; CvDllPreGame::GetPersistSettings
_TEXT	ENDS
EXTRN	?gameSpeed@CvPreGame@@YA?AW4GameSpeedTypes@@XZ:PROC ; CvPreGame::gameSpeed
; Function compile flags: /Odtp
;	COMDAT ?gameSpeed@CvDllPreGame@@UAG?AW4GameSpeedTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?gameSpeed@CvDllPreGame@@UAG?AW4GameSpeedTypes@@XZ PROC	; CvDllPreGame::gameSpeed, COMDAT

; 265  : {

	push	ebp
	mov	ebp, esp

; 266  : 	return CvPreGame::gameSpeed();

	call	?gameSpeed@CvPreGame@@YA?AW4GameSpeedTypes@@XZ ; CvPreGame::gameSpeed

; 267  : }

	pop	ebp
	ret	4
?gameSpeed@CvDllPreGame@@UAG?AW4GameSpeedTypes@@XZ ENDP	; CvDllPreGame::gameSpeed
_TEXT	ENDS
EXTRN	?gameTurn@CvPreGame@@YAHXZ:PROC			; CvPreGame::gameTurn
; Function compile flags: /Odtp
;	COMDAT ?gameTurn@CvDllPreGame@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?gameTurn@CvDllPreGame@@UAGHXZ PROC			; CvDllPreGame::gameTurn, COMDAT

; 270  : {

	push	ebp
	mov	ebp, esp

; 271  : 	return CvPreGame::gameTurn();

	call	?gameTurn@CvPreGame@@YAHXZ		; CvPreGame::gameTurn

; 272  : }

	pop	ebp
	ret	4
?gameTurn@CvDllPreGame@@UAGHXZ ENDP			; CvDllPreGame::gameTurn
_TEXT	ENDS
EXTRN	?gameType@CvPreGame@@YA?AW4GameTypes@@XZ:PROC	; CvPreGame::gameType
; Function compile flags: /Odtp
;	COMDAT ?gameType@CvDllPreGame@@UAG?AW4GameTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?gameType@CvDllPreGame@@UAG?AW4GameTypes@@XZ PROC	; CvDllPreGame::gameType, COMDAT

; 275  : {

	push	ebp
	mov	ebp, esp

; 276  : 	return CvPreGame::gameType();

	call	?gameType@CvPreGame@@YA?AW4GameTypes@@XZ ; CvPreGame::gameType

; 277  : }

	pop	ebp
	ret	4
?gameType@CvDllPreGame@@UAG?AW4GameTypes@@XZ ENDP	; CvDllPreGame::gameType
_TEXT	ENDS
EXTRN	?gameStartType@CvPreGame@@YA?AW4GameStartTypes@@XZ:PROC ; CvPreGame::gameStartType
; Function compile flags: /Odtp
;	COMDAT ?gameStartType@CvDllPreGame@@UAG?AW4GameStartTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?gameStartType@CvDllPreGame@@UAG?AW4GameStartTypes@@XZ PROC ; CvDllPreGame::gameStartType, COMDAT

; 280  : {

	push	ebp
	mov	ebp, esp

; 281  : 	return CvPreGame::gameStartType();

	call	?gameStartType@CvPreGame@@YA?AW4GameStartTypes@@XZ ; CvPreGame::gameStartType

; 282  : }

	pop	ebp
	ret	4
?gameStartType@CvDllPreGame@@UAG?AW4GameStartTypes@@XZ ENDP ; CvDllPreGame::gameStartType
_TEXT	ENDS
EXTRN	?handicap@CvPreGame@@YA?AW4HandicapTypes@@W4PlayerTypes@@@Z:PROC ; CvPreGame::handicap
; Function compile flags: /Odtp
;	COMDAT ?handicap@CvDllPreGame@@UAG?AW4HandicapTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?handicap@CvDllPreGame@@UAG?AW4HandicapTypes@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::handicap, COMDAT

; 285  : {

	push	ebp
	mov	ebp, esp

; 286  : 	return CvPreGame::handicap(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?handicap@CvPreGame@@YA?AW4HandicapTypes@@W4PlayerTypes@@@Z ; CvPreGame::handicap
	add	esp, 4

; 287  : }

	pop	ebp
	ret	8
?handicap@CvDllPreGame@@UAG?AW4HandicapTypes@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::handicap
_TEXT	ENDS
EXTRN	?isDLCAllowed@CvPreGame@@YA_NABU_GUID@@@Z:PROC	; CvPreGame::isDLCAllowed
; Function compile flags: /Odtp
;	COMDAT ?isDLCAllowed@CvDllPreGame@@UAG_NABU_GUID@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_kDLCID$ = 12						; size = 4
?isDLCAllowed@CvDllPreGame@@UAG_NABU_GUID@@@Z PROC	; CvDllPreGame::isDLCAllowed, COMDAT

; 290  : {

	push	ebp
	mov	ebp, esp

; 291  : 	return CvPreGame::isDLCAllowed(kDLCID);

	mov	eax, DWORD PTR _kDLCID$[ebp]
	push	eax
	call	?isDLCAllowed@CvPreGame@@YA_NABU_GUID@@@Z ; CvPreGame::isDLCAllowed
	add	esp, 4

; 292  : }

	pop	ebp
	ret	8
?isDLCAllowed@CvDllPreGame@@UAG_NABU_GUID@@@Z ENDP	; CvDllPreGame::isDLCAllowed
_TEXT	ENDS
EXTRN	?isDLCAvailable@CvPreGame@@YA_NW4PlayerTypes@@ABU_GUID@@@Z:PROC ; CvPreGame::isDLCAvailable
; Function compile flags: /Odtp
;	COMDAT ?isDLCAvailable@CvDllPreGame@@UAG_NW4PlayerTypes@@ABU_GUID@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_kDLCID$ = 16						; size = 4
?isDLCAvailable@CvDllPreGame@@UAG_NW4PlayerTypes@@ABU_GUID@@@Z PROC ; CvDllPreGame::isDLCAvailable, COMDAT

; 295  : {

	push	ebp
	mov	ebp, esp

; 296  : 	return CvPreGame::isDLCAvailable(p, kDLCID);

	mov	eax, DWORD PTR _kDLCID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?isDLCAvailable@CvPreGame@@YA_NW4PlayerTypes@@ABU_GUID@@@Z ; CvPreGame::isDLCAvailable
	add	esp, 8

; 297  : }

	pop	ebp
	ret	12					; 0000000cH
?isDLCAvailable@CvDllPreGame@@UAG_NW4PlayerTypes@@ABU_GUID@@@Z ENDP ; CvDllPreGame::isDLCAvailable
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?isEarthMap@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?isEarthMap@CvDllPreGame@@UAG_NXZ PROC			; CvDllPreGame::isEarthMap, COMDAT

; 300  : {

	push	ebp
	mov	ebp, esp

; 301  : 	//This function is no longer used, it only exists for interface compatibility.
; 302  : 	return false;

	xor	al, al

; 303  : }

	pop	ebp
	ret	4
?isEarthMap@CvDllPreGame@@UAG_NXZ ENDP			; CvDllPreGame::isEarthMap
_TEXT	ENDS
EXTRN	?isHotSeat@CvPreGame@@YA_NXZ:PROC		; CvPreGame::isHotSeat
; Function compile flags: /Odtp
;	COMDAT ?isHotSeat@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?isHotSeat@CvDllPreGame@@UAG_NXZ PROC			; CvDllPreGame::isHotSeat, COMDAT

; 306  : {

	push	ebp
	mov	ebp, esp

; 307  : 	return CvPreGame::isHotSeat();

	call	?isHotSeat@CvPreGame@@YA_NXZ		; CvPreGame::isHotSeat

; 308  : }

	pop	ebp
	ret	4
?isHotSeat@CvDllPreGame@@UAG_NXZ ENDP			; CvDllPreGame::isHotSeat
_TEXT	ENDS
EXTRN	?isHotSeatGame@CvPreGame@@YA_NXZ:PROC		; CvPreGame::isHotSeatGame
; Function compile flags: /Odtp
;	COMDAT ?isHotSeatGame@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?isHotSeatGame@CvDllPreGame@@UAG_NXZ PROC		; CvDllPreGame::isHotSeatGame, COMDAT

; 311  : {

	push	ebp
	mov	ebp, esp

; 312  : 	return CvPreGame::isHotSeatGame();

	call	?isHotSeatGame@CvPreGame@@YA_NXZ	; CvPreGame::isHotSeatGame

; 313  : }

	pop	ebp
	ret	4
?isHotSeatGame@CvDllPreGame@@UAG_NXZ ENDP		; CvDllPreGame::isHotSeatGame
_TEXT	ENDS
EXTRN	?isHuman@CvPreGame@@YA_NW4PlayerTypes@@@Z:PROC	; CvPreGame::isHuman
; Function compile flags: /Odtp
;	COMDAT ?isHuman@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?isHuman@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z PROC	; CvDllPreGame::isHuman, COMDAT

; 316  : {

	push	ebp
	mov	ebp, esp

; 317  : 	return CvPreGame::isHuman(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?isHuman@CvPreGame@@YA_NW4PlayerTypes@@@Z ; CvPreGame::isHuman
	add	esp, 4

; 318  : }

	pop	ebp
	ret	8
?isHuman@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z ENDP	; CvDllPreGame::isHuman
_TEXT	ENDS
EXTRN	?isInternetGame@CvPreGame@@YA_NXZ:PROC		; CvPreGame::isInternetGame
; Function compile flags: /Odtp
;	COMDAT ?isInternetGame@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?isInternetGame@CvDllPreGame@@UAG_NXZ PROC		; CvDllPreGame::isInternetGame, COMDAT

; 321  : {

	push	ebp
	mov	ebp, esp

; 322  : 	return CvPreGame::isInternetGame();

	call	?isInternetGame@CvPreGame@@YA_NXZ	; CvPreGame::isInternetGame

; 323  : }

	pop	ebp
	ret	4
?isInternetGame@CvDllPreGame@@UAG_NXZ ENDP		; CvDllPreGame::isInternetGame
_TEXT	ENDS
EXTRN	?isMinorCiv@CvPreGame@@YA_NW4PlayerTypes@@@Z:PROC ; CvPreGame::isMinorCiv
; Function compile flags: /Odtp
;	COMDAT ?isMinorCiv@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?isMinorCiv@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z PROC	; CvDllPreGame::isMinorCiv, COMDAT

; 326  : {

	push	ebp
	mov	ebp, esp

; 327  : 	return CvPreGame::isMinorCiv(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?isMinorCiv@CvPreGame@@YA_NW4PlayerTypes@@@Z ; CvPreGame::isMinorCiv
	add	esp, 4

; 328  : }

	pop	ebp
	ret	8
?isMinorCiv@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z ENDP	; CvDllPreGame::isMinorCiv
_TEXT	ENDS
EXTRN	?isNetworkMultiplayerGame@CvPreGame@@YA_NXZ:PROC ; CvPreGame::isNetworkMultiplayerGame
; Function compile flags: /Odtp
;	COMDAT ?isNetworkMultiplayerGame@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?isNetworkMultiplayerGame@CvDllPreGame@@UAG_NXZ PROC	; CvDllPreGame::isNetworkMultiplayerGame, COMDAT

; 331  : {

	push	ebp
	mov	ebp, esp

; 332  : 	return CvPreGame::isNetworkMultiplayerGame();

	call	?isNetworkMultiplayerGame@CvPreGame@@YA_NXZ ; CvPreGame::isNetworkMultiplayerGame

; 333  : }

	pop	ebp
	ret	4
?isNetworkMultiplayerGame@CvDllPreGame@@UAG_NXZ ENDP	; CvDllPreGame::isNetworkMultiplayerGame
_TEXT	ENDS
EXTRN	?isPitBoss@CvPreGame@@YA_NXZ:PROC		; CvPreGame::isPitBoss
; Function compile flags: /Odtp
;	COMDAT ?isPitBoss@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?isPitBoss@CvDllPreGame@@UAG_NXZ PROC			; CvDllPreGame::isPitBoss, COMDAT

; 336  : {

	push	ebp
	mov	ebp, esp

; 337  : 	return CvPreGame::isPitBoss();

	call	?isPitBoss@CvPreGame@@YA_NXZ		; CvPreGame::isPitBoss

; 338  : }

	pop	ebp
	ret	4
?isPitBoss@CvDllPreGame@@UAG_NXZ ENDP			; CvDllPreGame::isPitBoss
_TEXT	ENDS
EXTRN	?isPlayable@CvPreGame@@YA_NW4PlayerTypes@@@Z:PROC ; CvPreGame::isPlayable
; Function compile flags: /Odtp
;	COMDAT ?isPlayable@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?isPlayable@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z PROC	; CvDllPreGame::isPlayable, COMDAT

; 341  : {

	push	ebp
	mov	ebp, esp

; 342  : 	return CvPreGame::isPlayable(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?isPlayable@CvPreGame@@YA_NW4PlayerTypes@@@Z ; CvPreGame::isPlayable
	add	esp, 4

; 343  : }

	pop	ebp
	ret	8
?isPlayable@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z ENDP	; CvDllPreGame::isPlayable
_TEXT	ENDS
EXTRN	?isPlayByEmail@CvPreGame@@YA_NXZ:PROC		; CvPreGame::isPlayByEmail
; Function compile flags: /Odtp
;	COMDAT ?isPlayByEmail@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?isPlayByEmail@CvDllPreGame@@UAG_NXZ PROC		; CvDllPreGame::isPlayByEmail, COMDAT

; 346  : {

	push	ebp
	mov	ebp, esp

; 347  : 	return CvPreGame::isPlayByEmail();

	call	?isPlayByEmail@CvPreGame@@YA_NXZ	; CvPreGame::isPlayByEmail

; 348  : }

	pop	ebp
	ret	4
?isPlayByEmail@CvDllPreGame@@UAG_NXZ ENDP		; CvDllPreGame::isPlayByEmail
_TEXT	ENDS
EXTRN	?isReady@CvPreGame@@YA_NW4PlayerTypes@@@Z:PROC	; CvPreGame::isReady
; Function compile flags: /Odtp
;	COMDAT ?isReady@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?isReady@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z PROC	; CvDllPreGame::isReady, COMDAT

; 351  : {

	push	ebp
	mov	ebp, esp

; 352  : 	return CvPreGame::isReady(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?isReady@CvPreGame@@YA_NW4PlayerTypes@@@Z ; CvPreGame::isReady
	add	esp, 4

; 353  : }

	pop	ebp
	ret	8
?isReady@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z ENDP	; CvDllPreGame::isReady
_TEXT	ENDS
EXTRN	?isVictory@CvPreGame@@YA_NW4VictoryTypes@@@Z:PROC ; CvPreGame::isVictory
; Function compile flags: /Odtp
;	COMDAT ?isVictory@CvDllPreGame@@UAG_NW4VictoryTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_v$ = 12						; size = 4
?isVictory@CvDllPreGame@@UAG_NW4VictoryTypes@@@Z PROC	; CvDllPreGame::isVictory, COMDAT

; 356  : {

	push	ebp
	mov	ebp, esp

; 357  : 	return CvPreGame::isVictory(v);

	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	call	?isVictory@CvPreGame@@YA_NW4VictoryTypes@@@Z ; CvPreGame::isVictory
	add	esp, 4

; 358  : }

	pop	ebp
	ret	8
?isVictory@CvDllPreGame@@UAG_NW4VictoryTypes@@@Z ENDP	; CvDllPreGame::isVictory
_TEXT	ENDS
EXTRN	?isWBMapScript@CvPreGame@@YA_NXZ:PROC		; CvPreGame::isWBMapScript
; Function compile flags: /Odtp
;	COMDAT ?isWBMapScript@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?isWBMapScript@CvDllPreGame@@UAG_NXZ PROC		; CvDllPreGame::isWBMapScript, COMDAT

; 361  : {

	push	ebp
	mov	ebp, esp

; 362  : 	return CvPreGame::isWBMapScript();

	call	?isWBMapScript@CvPreGame@@YA_NXZ	; CvPreGame::isWBMapScript

; 363  : }

	pop	ebp
	ret	4
?isWBMapScript@CvDllPreGame@@UAG_NXZ ENDP		; CvDllPreGame::isWBMapScript
_TEXT	ENDS
EXTRN	?isWhiteFlag@CvPreGame@@YA_NW4PlayerTypes@@@Z:PROC ; CvPreGame::isWhiteFlag
; Function compile flags: /Odtp
;	COMDAT ?isWhiteFlag@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?isWhiteFlag@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z PROC	; CvDllPreGame::isWhiteFlag, COMDAT

; 366  : {

	push	ebp
	mov	ebp, esp

; 367  : 	return CvPreGame::isWhiteFlag(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?isWhiteFlag@CvPreGame@@YA_NW4PlayerTypes@@@Z ; CvPreGame::isWhiteFlag
	add	esp, 4

; 368  : }

	pop	ebp
	ret	8
?isWhiteFlag@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z ENDP	; CvDllPreGame::isWhiteFlag
_TEXT	ENDS
EXTRN	?leaderHead@CvPreGame@@YA?AW4LeaderHeadTypes@@W4PlayerTypes@@@Z:PROC ; CvPreGame::leaderHead
; Function compile flags: /Odtp
;	COMDAT ?leaderHead@CvDllPreGame@@UAG?AW4LeaderHeadTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?leaderHead@CvDllPreGame@@UAG?AW4LeaderHeadTypes@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::leaderHead, COMDAT

; 371  : {

	push	ebp
	mov	ebp, esp

; 372  : 	return CvPreGame::leaderHead(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?leaderHead@CvPreGame@@YA?AW4LeaderHeadTypes@@W4PlayerTypes@@@Z ; CvPreGame::leaderHead
	add	esp, 4

; 373  : }

	pop	ebp
	ret	8
?leaderHead@CvDllPreGame@@UAG?AW4LeaderHeadTypes@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::leaderHead
_TEXT	ENDS
EXTRN	?leaderName@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z:PROC ; CvPreGame::leaderName
; Function compile flags: /Odtp
;	COMDAT ?leaderName@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
$T221548 = -8						; size = 4
$T221542 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_p$ = 16						; size = 4
?leaderName@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::leaderName, COMDAT

; 376  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221542[ebp], 0

; 377  : 	return CvPreGame::leaderName(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?leaderName@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z ; CvPreGame::leaderName
	add	esp, 4
	mov	DWORD PTR $T221548[ebp], eax
	mov	ecx, DWORD PTR $T221548[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T221542[ebp]
	or	edx, 1
	mov	DWORD PTR $T221542[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 378  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?leaderName@CvDllPreGame@@UAG?AVCvString@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::leaderName
_TEXT	ENDS
EXTRN	?leaderNameKey@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z:PROC ; CvPreGame::leaderNameKey
; Function compile flags: /Odtp
;	COMDAT ?leaderNameKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
$T221558 = -8						; size = 4
$T221552 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_p$ = 16						; size = 4
?leaderNameKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::leaderNameKey, COMDAT

; 381  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221552[ebp], 0

; 382  : 	return CvPreGame::leaderNameKey(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?leaderNameKey@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z ; CvPreGame::leaderNameKey
	add	esp, 4
	mov	DWORD PTR $T221558[ebp], eax
	mov	ecx, DWORD PTR $T221558[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T221552[ebp]
	or	edx, 1
	mov	DWORD PTR $T221552[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 383  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?leaderNameKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::leaderNameKey
_TEXT	ENDS
EXTRN	?leaderKey@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z:PROC ; CvPreGame::leaderKey
; Function compile flags: /Odtp
;	COMDAT ?leaderKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
$T221568 = -8						; size = 4
$T221562 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_p$ = 16						; size = 4
?leaderKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::leaderKey, COMDAT

; 386  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221562[ebp], 0

; 387  : 	return CvPreGame::leaderKey(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?leaderKey@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z ; CvPreGame::leaderKey
	add	esp, 4
	mov	DWORD PTR $T221568[ebp], eax
	mov	ecx, DWORD PTR $T221568[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T221562[ebp]
	or	edx, 1
	mov	DWORD PTR $T221562[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 388  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?leaderKey@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::leaderKey
_TEXT	ENDS
EXTRN	?leaderKeyAvailable@CvPreGame@@YA_NW4PlayerTypes@@@Z:PROC ; CvPreGame::leaderKeyAvailable
; Function compile flags: /Odtp
;	COMDAT ?leaderKeyAvailable@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?leaderKeyAvailable@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z PROC ; CvDllPreGame::leaderKeyAvailable, COMDAT

; 391  : {

	push	ebp
	mov	ebp, esp

; 392  : 	return CvPreGame::leaderKeyAvailable(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?leaderKeyAvailable@CvPreGame@@YA_NW4PlayerTypes@@@Z ; CvPreGame::leaderKeyAvailable
	add	esp, 4

; 393  : }

	pop	ebp
	ret	8
?leaderKeyAvailable@CvDllPreGame@@UAG_NW4PlayerTypes@@@Z ENDP ; CvDllPreGame::leaderKeyAvailable
_TEXT	ENDS
EXTRN	?leaderKeyPackageID@CvPreGame@@YAABU_GUID@@W4PlayerTypes@@@Z:PROC ; CvPreGame::leaderKeyPackageID
; Function compile flags: /Odtp
;	COMDAT ?leaderKeyPackageID@CvDllPreGame@@UAG?BU_GUID@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_p$ = 16						; size = 4
?leaderKeyPackageID@CvDllPreGame@@UAG?BU_GUID@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::leaderKeyPackageID, COMDAT

; 396  : {

	push	ebp
	mov	ebp, esp

; 397  : 	return CvPreGame::leaderKeyPackageID(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?leaderKeyPackageID@CvPreGame@@YAABU_GUID@@W4PlayerTypes@@@Z ; CvPreGame::leaderKeyPackageID
	add	esp, 4
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 398  : }

	pop	ebp
	ret	12					; 0000000cH
?leaderKeyPackageID@CvDllPreGame@@UAG?BU_GUID@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::leaderKeyPackageID
_TEXT	ENDS
EXTRN	?loadFileName@CvPreGame@@YAABVCvString@@XZ:PROC	; CvPreGame::loadFileName
; Function compile flags: /Odtp
;	COMDAT ?loadFileName@CvDllPreGame@@UAG?BVCvString@@XZ
_TEXT	SEGMENT
$T221582 = -8						; size = 4
$T221576 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
?loadFileName@CvDllPreGame@@UAG?BVCvString@@XZ PROC	; CvDllPreGame::loadFileName, COMDAT

; 401  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221576[ebp], 0

; 402  : 	return CvPreGame::loadFileName();

	call	?loadFileName@CvPreGame@@YAABVCvString@@XZ ; CvPreGame::loadFileName
	mov	DWORD PTR $T221582[ebp], eax
	mov	eax, DWORD PTR $T221582[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T221576[ebp]
	or	ecx, 1
	mov	DWORD PTR $T221576[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 403  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?loadFileName@CvDllPreGame@@UAG?BVCvString@@XZ ENDP	; CvDllPreGame::loadFileName
_TEXT	ENDS
EXTRN	?loadFromIni@CvPreGame@@YAXAAVFIGameIniParser@@@Z:PROC ; CvPreGame::loadFromIni
; Function compile flags: /Odtp
;	COMDAT ?loadFromIni@CvDllPreGame@@UAGXAAVFIGameIniParser@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iniParser$ = 12					; size = 4
?loadFromIni@CvDllPreGame@@UAGXAAVFIGameIniParser@@@Z PROC ; CvDllPreGame::loadFromIni, COMDAT

; 406  : {

	push	ebp
	mov	ebp, esp

; 407  : 	CvPreGame::loadFromIni(iniParser);

	mov	eax, DWORD PTR _iniParser$[ebp]
	push	eax
	call	?loadFromIni@CvPreGame@@YAXAAVFIGameIniParser@@@Z ; CvPreGame::loadFromIni
	add	esp, 4

; 408  : }

	pop	ebp
	ret	8
?loadFromIni@CvDllPreGame@@UAGXAAVFIGameIniParser@@@Z ENDP ; CvDllPreGame::loadFromIni
_TEXT	ENDS
EXTRN	?mapNoPlayers@CvPreGame@@YA_NXZ:PROC		; CvPreGame::mapNoPlayers
; Function compile flags: /Odtp
;	COMDAT ?mapNoPlayers@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?mapNoPlayers@CvDllPreGame@@UAG_NXZ PROC		; CvDllPreGame::mapNoPlayers, COMDAT

; 411  : {

	push	ebp
	mov	ebp, esp

; 412  : 	return CvPreGame::mapNoPlayers();

	call	?mapNoPlayers@CvPreGame@@YA_NXZ		; CvPreGame::mapNoPlayers

; 413  : }

	pop	ebp
	ret	4
?mapNoPlayers@CvDllPreGame@@UAG_NXZ ENDP		; CvDllPreGame::mapNoPlayers
_TEXT	ENDS
EXTRN	?mapRandomSeed@CvPreGame@@YAIXZ:PROC		; CvPreGame::mapRandomSeed
; Function compile flags: /Odtp
;	COMDAT ?mapRandomSeed@CvDllPreGame@@UAGIXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?mapRandomSeed@CvDllPreGame@@UAGIXZ PROC		; CvDllPreGame::mapRandomSeed, COMDAT

; 416  : {

	push	ebp
	mov	ebp, esp

; 417  : 	return CvPreGame::mapRandomSeed();

	call	?mapRandomSeed@CvPreGame@@YAIXZ		; CvPreGame::mapRandomSeed

; 418  : }

	pop	ebp
	ret	4
?mapRandomSeed@CvDllPreGame@@UAGIXZ ENDP		; CvDllPreGame::mapRandomSeed
_TEXT	ENDS
EXTRN	?loadWBScenario@CvPreGame@@YA_NXZ:PROC		; CvPreGame::loadWBScenario
; Function compile flags: /Odtp
;	COMDAT ?loadWBScenario@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?loadWBScenario@CvDllPreGame@@UAG_NXZ PROC		; CvDllPreGame::loadWBScenario, COMDAT

; 421  : {

	push	ebp
	mov	ebp, esp

; 422  : 	return CvPreGame::loadWBScenario();

	call	?loadWBScenario@CvPreGame@@YA_NXZ	; CvPreGame::loadWBScenario

; 423  : }

	pop	ebp
	ret	4
?loadWBScenario@CvDllPreGame@@UAG_NXZ ENDP		; CvDllPreGame::loadWBScenario
_TEXT	ENDS
EXTRN	?overrideScenarioHandicap@CvPreGame@@YA_NXZ:PROC ; CvPreGame::overrideScenarioHandicap
; Function compile flags: /Odtp
;	COMDAT ?overrideScenarioHandicap@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?overrideScenarioHandicap@CvDllPreGame@@UAG_NXZ PROC	; CvDllPreGame::overrideScenarioHandicap, COMDAT

; 426  : {

	push	ebp
	mov	ebp, esp

; 427  : 	return CvPreGame::overrideScenarioHandicap();

	call	?overrideScenarioHandicap@CvPreGame@@YA_NXZ ; CvPreGame::overrideScenarioHandicap

; 428  : }

	pop	ebp
	ret	4
?overrideScenarioHandicap@CvDllPreGame@@UAG_NXZ ENDP	; CvDllPreGame::overrideScenarioHandicap
_TEXT	ENDS
EXTRN	?mapScriptName@CvPreGame@@YAABVCvString@@XZ:PROC ; CvPreGame::mapScriptName
; Function compile flags: /Odtp
;	COMDAT ?mapScriptName@CvDllPreGame@@UAG?BVCvString@@XZ
_TEXT	SEGMENT
$T221602 = -8						; size = 4
$T221596 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
?mapScriptName@CvDllPreGame@@UAG?BVCvString@@XZ PROC	; CvDllPreGame::mapScriptName, COMDAT

; 431  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221596[ebp], 0

; 432  : 	return CvPreGame::mapScriptName();

	call	?mapScriptName@CvPreGame@@YAABVCvString@@XZ ; CvPreGame::mapScriptName
	mov	DWORD PTR $T221602[ebp], eax
	mov	eax, DWORD PTR $T221602[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T221596[ebp]
	or	ecx, 1
	mov	DWORD PTR $T221596[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 433  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?mapScriptName@CvDllPreGame@@UAG?BVCvString@@XZ ENDP	; CvDllPreGame::mapScriptName
_TEXT	ENDS
EXTRN	?maxCityElimination@CvPreGame@@YAHXZ:PROC	; CvPreGame::maxCityElimination
; Function compile flags: /Odtp
;	COMDAT ?maxCityElimination@CvDllPreGame@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?maxCityElimination@CvDllPreGame@@UAGHXZ PROC		; CvDllPreGame::maxCityElimination, COMDAT

; 436  : {

	push	ebp
	mov	ebp, esp

; 437  : 	return CvPreGame::maxCityElimination();

	call	?maxCityElimination@CvPreGame@@YAHXZ	; CvPreGame::maxCityElimination

; 438  : }

	pop	ebp
	ret	4
?maxCityElimination@CvDllPreGame@@UAGHXZ ENDP		; CvDllPreGame::maxCityElimination
_TEXT	ENDS
EXTRN	?maxTurns@CvPreGame@@YAHXZ:PROC			; CvPreGame::maxTurns
; Function compile flags: /Odtp
;	COMDAT ?maxTurns@CvDllPreGame@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?maxTurns@CvDllPreGame@@UAGHXZ PROC			; CvDllPreGame::maxTurns, COMDAT

; 441  : {

	push	ebp
	mov	ebp, esp

; 442  : 	return CvPreGame::maxTurns();

	call	?maxTurns@CvPreGame@@YAHXZ		; CvPreGame::maxTurns

; 443  : }

	pop	ebp
	ret	4
?maxTurns@CvDllPreGame@@UAGHXZ ENDP			; CvDllPreGame::maxTurns
_TEXT	ENDS
EXTRN	?minorCivType@CvPreGame@@YA?AW4MinorCivTypes@@W4PlayerTypes@@@Z:PROC ; CvPreGame::minorCivType
; Function compile flags: /Odtp
;	COMDAT ?minorCivType@CvDllPreGame@@UAG?AW4MinorCivTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?minorCivType@CvDllPreGame@@UAG?AW4MinorCivTypes@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::minorCivType, COMDAT

; 446  : {

	push	ebp
	mov	ebp, esp

; 447  : 	return CvPreGame::minorCivType(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?minorCivType@CvPreGame@@YA?AW4MinorCivTypes@@W4PlayerTypes@@@Z ; CvPreGame::minorCivType
	add	esp, 4

; 448  : }

	pop	ebp
	ret	8
?minorCivType@CvDllPreGame@@UAG?AW4MinorCivTypes@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::minorCivType
_TEXT	ENDS
EXTRN	?multiplayerAIEnabled@CvPreGame@@YA_NXZ:PROC	; CvPreGame::multiplayerAIEnabled
; Function compile flags: /Odtp
;	COMDAT ?multiplayerAIEnabled@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?multiplayerAIEnabled@CvDllPreGame@@UAG_NXZ PROC	; CvDllPreGame::multiplayerAIEnabled, COMDAT

; 451  : {

	push	ebp
	mov	ebp, esp

; 452  : 	return CvPreGame::multiplayerAIEnabled();

	call	?multiplayerAIEnabled@CvPreGame@@YA_NXZ	; CvPreGame::multiplayerAIEnabled

; 453  : }

	pop	ebp
	ret	4
?multiplayerAIEnabled@CvDllPreGame@@UAG_NXZ ENDP	; CvDllPreGame::multiplayerAIEnabled
_TEXT	ENDS
EXTRN	?netID@CvPreGame@@YAHW4PlayerTypes@@@Z:PROC	; CvPreGame::netID
; Function compile flags: /Odtp
;	COMDAT ?netID@CvDllPreGame@@UAGHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?netID@CvDllPreGame@@UAGHW4PlayerTypes@@@Z PROC		; CvDllPreGame::netID, COMDAT

; 456  : {

	push	ebp
	mov	ebp, esp

; 457  : 	return CvPreGame::netID(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?netID@CvPreGame@@YAHW4PlayerTypes@@@Z	; CvPreGame::netID
	add	esp, 4

; 458  : }

	pop	ebp
	ret	8
?netID@CvDllPreGame@@UAGHW4PlayerTypes@@@Z ENDP		; CvDllPreGame::netID
_TEXT	ENDS
EXTRN	?nickname@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z:PROC ; CvPreGame::nickname
; Function compile flags: /Odtp
;	COMDAT ?nickname@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
$T221622 = -8						; size = 4
$T221616 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_p$ = 16						; size = 4
?nickname@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::nickname, COMDAT

; 461  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221616[ebp], 0

; 462  : 	return CvPreGame::nickname(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?nickname@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z ; CvPreGame::nickname
	add	esp, 4
	mov	DWORD PTR $T221622[ebp], eax
	mov	ecx, DWORD PTR $T221622[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T221616[ebp]
	or	edx, 1
	mov	DWORD PTR $T221616[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 463  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?nickname@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::nickname
_TEXT	ENDS
EXTRN	?nicknameDisplayed@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z:PROC ; CvPreGame::nicknameDisplayed
; Function compile flags: /Odtp
;	COMDAT ?nicknameDisplayed@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
$T221632 = -8						; size = 4
$T221626 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_p$ = 16						; size = 4
?nicknameDisplayed@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::nicknameDisplayed, COMDAT

; 466  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR $T221626[ebp], 0

; 467  : 	return CvPreGame::nicknameDisplayed(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?nicknameDisplayed@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z ; CvPreGame::nicknameDisplayed
	add	esp, 4
	mov	DWORD PTR $T221632[ebp], eax
	mov	ecx, DWORD PTR $T221632[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T221626[ebp]
	or	edx, 1
	mov	DWORD PTR $T221626[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 468  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?nicknameDisplayed@CvDllPreGame@@UAG?BVCvString@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::nicknameDisplayed
_TEXT	ENDS
EXTRN	?numMinorCivs@CvPreGame@@YAHXZ:PROC		; CvPreGame::numMinorCivs
; Function compile flags: /Odtp
;	COMDAT ?numMinorCivs@CvDllPreGame@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?numMinorCivs@CvDllPreGame@@UAGHXZ PROC			; CvDllPreGame::numMinorCivs, COMDAT

; 471  : {

	push	ebp
	mov	ebp, esp

; 472  : 	return CvPreGame::numMinorCivs();

	call	?numMinorCivs@CvPreGame@@YAHXZ		; CvPreGame::numMinorCivs

; 473  : }

	pop	ebp
	ret	4
?numMinorCivs@CvDllPreGame@@UAGHXZ ENDP			; CvDllPreGame::numMinorCivs
_TEXT	ENDS
EXTRN	?playerColor@CvPreGame@@YA?AW4PlayerColorTypes@@W4PlayerTypes@@@Z:PROC ; CvPreGame::playerColor
; Function compile flags: /Odtp
;	COMDAT ?playerColor@CvDllPreGame@@UAG?AW4PlayerColorTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?playerColor@CvDllPreGame@@UAG?AW4PlayerColorTypes@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::playerColor, COMDAT

; 476  : {

	push	ebp
	mov	ebp, esp

; 477  : 	return CvPreGame::playerColor(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?playerColor@CvPreGame@@YA?AW4PlayerColorTypes@@W4PlayerTypes@@@Z ; CvPreGame::playerColor
	add	esp, 4

; 478  : }

	pop	ebp
	ret	8
?playerColor@CvDllPreGame@@UAG?AW4PlayerColorTypes@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::playerColor
_TEXT	ENDS
EXTRN	?privateGame@CvPreGame@@YA_NXZ:PROC		; CvPreGame::privateGame
; Function compile flags: /Odtp
;	COMDAT ?privateGame@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?privateGame@CvDllPreGame@@UAG_NXZ PROC			; CvDllPreGame::privateGame, COMDAT

; 481  : {

	push	ebp
	mov	ebp, esp

; 482  : 	return CvPreGame::privateGame();

	call	?privateGame@CvPreGame@@YA_NXZ		; CvPreGame::privateGame

; 483  : }

	pop	ebp
	ret	4
?privateGame@CvDllPreGame@@UAG_NXZ ENDP			; CvDllPreGame::privateGame
_TEXT	ENDS
EXTRN	?quickCombat@CvPreGame@@YA_NXZ:PROC		; CvPreGame::quickCombat
; Function compile flags: /Odtp
;	COMDAT ?quickCombat@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?quickCombat@CvDllPreGame@@UAG_NXZ PROC			; CvDllPreGame::quickCombat, COMDAT

; 486  : {

	push	ebp
	mov	ebp, esp

; 487  : 	return CvPreGame::quickCombat();

	call	?quickCombat@CvPreGame@@YA_NXZ		; CvPreGame::quickCombat

; 488  : }

	pop	ebp
	ret	4
?quickCombat@CvDllPreGame@@UAG_NXZ ENDP			; CvDllPreGame::quickCombat
_TEXT	ENDS
EXTRN	?quickMovement@CvPreGame@@YA_NXZ:PROC		; CvPreGame::quickMovement
; Function compile flags: /Odtp
;	COMDAT ?quickMovement@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?quickMovement@CvDllPreGame@@UAG_NXZ PROC		; CvDllPreGame::quickMovement, COMDAT

; 491  : {

	push	ebp
	mov	ebp, esp

; 492  : 	return CvPreGame::quickMovement();

	call	?quickMovement@CvPreGame@@YA_NXZ	; CvPreGame::quickMovement

; 493  : }

	pop	ebp
	ret	4
?quickMovement@CvDllPreGame@@UAG_NXZ ENDP		; CvDllPreGame::quickMovement
_TEXT	ENDS
EXTRN	?quickstart@CvPreGame@@YA_NXZ:PROC		; CvPreGame::quickstart
; Function compile flags: /Odtp
;	COMDAT ?quickstart@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?quickstart@CvDllPreGame@@UAG_NXZ PROC			; CvDllPreGame::quickstart, COMDAT

; 496  : {

	push	ebp
	mov	ebp, esp

; 497  : 	return CvPreGame::quickstart();

	call	?quickstart@CvPreGame@@YA_NXZ		; CvPreGame::quickstart

; 498  : }

	pop	ebp
	ret	4
?quickstart@CvDllPreGame@@UAG_NXZ ENDP			; CvDllPreGame::quickstart
_TEXT	ENDS
EXTRN	?randomWorldSize@CvPreGame@@YA_NXZ:PROC		; CvPreGame::randomWorldSize
; Function compile flags: /Odtp
;	COMDAT ?randomWorldSize@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?randomWorldSize@CvDllPreGame@@UAG_NXZ PROC		; CvDllPreGame::randomWorldSize, COMDAT

; 501  : {

	push	ebp
	mov	ebp, esp

; 502  : 	return CvPreGame::randomWorldSize();

	call	?randomWorldSize@CvPreGame@@YA_NXZ	; CvPreGame::randomWorldSize

; 503  : }

	pop	ebp
	ret	4
?randomWorldSize@CvDllPreGame@@UAG_NXZ ENDP		; CvDllPreGame::randomWorldSize
_TEXT	ENDS
EXTRN	?randomMapScript@CvPreGame@@YA_NXZ:PROC		; CvPreGame::randomMapScript
; Function compile flags: /Odtp
;	COMDAT ?randomMapScript@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?randomMapScript@CvDllPreGame@@UAG_NXZ PROC		; CvDllPreGame::randomMapScript, COMDAT

; 506  : {

	push	ebp
	mov	ebp, esp

; 507  : 	return CvPreGame::randomMapScript();

	call	?randomMapScript@CvPreGame@@YA_NXZ	; CvPreGame::randomMapScript

; 508  : }

	pop	ebp
	ret	4
?randomMapScript@CvDllPreGame@@UAG_NXZ ENDP		; CvDllPreGame::randomMapScript
_TEXT	ENDS
EXTRN	?read@CvPreGame@@YAXAAVFDataStream@@_N@Z:PROC	; CvPreGame::read
; Function compile flags: /Odtp
;	COMDAT ?read@CvDllPreGame@@UAGXAAVFDataStream@@_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_loadFrom$ = 12						; size = 4
_bReadVersion$ = 16					; size = 1
?read@CvDllPreGame@@UAGXAAVFDataStream@@_N@Z PROC	; CvDllPreGame::read, COMDAT

; 511  : {

	push	ebp
	mov	ebp, esp

; 512  : 	CvPreGame::read(loadFrom, bReadVersion);

	movzx	eax, BYTE PTR _bReadVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	push	ecx
	call	?read@CvPreGame@@YAXAAVFDataStream@@_N@Z ; CvPreGame::read
	add	esp, 8

; 513  : }

	pop	ebp
	ret	12					; 0000000cH
?read@CvDllPreGame@@UAGXAAVFDataStream@@_N@Z ENDP	; CvDllPreGame::read
_TEXT	ENDS
EXTRN	?readPlayerSlotInfo@CvPreGame@@YA_NAAVFDataStream@@_N@Z:PROC ; CvPreGame::readPlayerSlotInfo
; Function compile flags: /Odtp
;	COMDAT ?readPlayerSlotInfo@CvDllPreGame@@UAG_NAAVFDataStream@@_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_loadFrom$ = 12						; size = 4
_bReadVersion$ = 16					; size = 1
?readPlayerSlotInfo@CvDllPreGame@@UAG_NAAVFDataStream@@_N@Z PROC ; CvDllPreGame::readPlayerSlotInfo, COMDAT

; 516  : {

	push	ebp
	mov	ebp, esp

; 517  : 	return CvPreGame::readPlayerSlotInfo(loadFrom, bReadVersion);

	movzx	eax, BYTE PTR _bReadVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	push	ecx
	call	?readPlayerSlotInfo@CvPreGame@@YA_NAAVFDataStream@@_N@Z ; CvPreGame::readPlayerSlotInfo
	add	esp, 8

; 518  : }

	pop	ebp
	ret	12					; 0000000cH
?readPlayerSlotInfo@CvDllPreGame@@UAG_NAAVFDataStream@@_N@Z ENDP ; CvDllPreGame::readPlayerSlotInfo
_TEXT	ENDS
EXTRN	?resetGame@CvPreGame@@YAXXZ:PROC		; CvPreGame::resetGame
; Function compile flags: /Odtp
;	COMDAT ?resetGame@CvDllPreGame@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?resetGame@CvDllPreGame@@UAGXXZ PROC			; CvDllPreGame::resetGame, COMDAT

; 521  : {

	push	ebp
	mov	ebp, esp

; 522  : 	CvPreGame::resetGame();

	call	?resetGame@CvPreGame@@YAXXZ		; CvPreGame::resetGame

; 523  : }

	pop	ebp
	ret	4
?resetGame@CvDllPreGame@@UAGXXZ ENDP			; CvDllPreGame::resetGame
_TEXT	ENDS
EXTRN	?ResetGameOptions@CvPreGame@@YAXXZ:PROC		; CvPreGame::ResetGameOptions
; Function compile flags: /Odtp
;	COMDAT ?ResetGameOptions@CvDllPreGame@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?ResetGameOptions@CvDllPreGame@@UAGXXZ PROC		; CvDllPreGame::ResetGameOptions, COMDAT

; 526  : {

	push	ebp
	mov	ebp, esp

; 527  : 	CvPreGame::ResetGameOptions();

	call	?ResetGameOptions@CvPreGame@@YAXXZ	; CvPreGame::ResetGameOptions

; 528  : }

	pop	ebp
	ret	4
?ResetGameOptions@CvDllPreGame@@UAGXXZ ENDP		; CvDllPreGame::ResetGameOptions
_TEXT	ENDS
EXTRN	?ResetMapOptions@CvPreGame@@YAXXZ:PROC		; CvPreGame::ResetMapOptions
; Function compile flags: /Odtp
;	COMDAT ?ResetMapOptions@CvDllPreGame@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?ResetMapOptions@CvDllPreGame@@UAGXXZ PROC		; CvDllPreGame::ResetMapOptions, COMDAT

; 531  : {

	push	ebp
	mov	ebp, esp

; 532  : 	CvPreGame::ResetMapOptions();

	call	?ResetMapOptions@CvPreGame@@YAXXZ	; CvPreGame::ResetMapOptions

; 533  : }

	pop	ebp
	ret	4
?ResetMapOptions@CvDllPreGame@@UAGXXZ ENDP		; CvDllPreGame::ResetMapOptions
_TEXT	ENDS
EXTRN	?resetPlayer@CvPreGame@@YAXW4PlayerTypes@@@Z:PROC ; CvPreGame::resetPlayer
; Function compile flags: /Odtp
;	COMDAT ?resetPlayer@CvDllPreGame@@UAGXW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?resetPlayer@CvDllPreGame@@UAGXW4PlayerTypes@@@Z PROC	; CvDllPreGame::resetPlayer, COMDAT

; 536  : {

	push	ebp
	mov	ebp, esp

; 537  : 	CvPreGame::resetPlayer(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?resetPlayer@CvPreGame@@YAXW4PlayerTypes@@@Z ; CvPreGame::resetPlayer
	add	esp, 4

; 538  : }

	pop	ebp
	ret	8
?resetPlayer@CvDllPreGame@@UAGXW4PlayerTypes@@@Z ENDP	; CvDllPreGame::resetPlayer
_TEXT	ENDS
EXTRN	?resetPlayers@CvPreGame@@YAXXZ:PROC		; CvPreGame::resetPlayers
; Function compile flags: /Odtp
;	COMDAT ?resetPlayers@CvDllPreGame@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?resetPlayers@CvDllPreGame@@UAGXXZ PROC			; CvDllPreGame::resetPlayers, COMDAT

; 541  : {

	push	ebp
	mov	ebp, esp

; 542  : 	CvPreGame::resetPlayers();

	call	?resetPlayers@CvPreGame@@YAXXZ		; CvPreGame::resetPlayers

; 543  : }

	pop	ebp
	ret	4
?resetPlayers@CvDllPreGame@@UAGXXZ ENDP			; CvDllPreGame::resetPlayers
_TEXT	ENDS
EXTRN	?resetSlots@CvPreGame@@YAXXZ:PROC		; CvPreGame::resetSlots
; Function compile flags: /Odtp
;	COMDAT ?resetSlots@CvDllPreGame@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?resetSlots@CvDllPreGame@@UAGXXZ PROC			; CvDllPreGame::resetSlots, COMDAT

; 546  : {

	push	ebp
	mov	ebp, esp

; 547  : 	CvPreGame::resetSlots();

	call	?resetSlots@CvPreGame@@YAXXZ		; CvPreGame::resetSlots

; 548  : }

	pop	ebp
	ret	4
?resetSlots@CvDllPreGame@@UAGXXZ ENDP			; CvDllPreGame::resetSlots
_TEXT	ENDS
EXTRN	?restoreSlots@CvPreGame@@YAXXZ:PROC		; CvPreGame::restoreSlots
; Function compile flags: /Odtp
;	COMDAT ?restoreSlots@CvDllPreGame@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?restoreSlots@CvDllPreGame@@UAGXXZ PROC			; CvDllPreGame::restoreSlots, COMDAT

; 551  : {

	push	ebp
	mov	ebp, esp

; 552  : 	CvPreGame::restoreSlots();

	call	?restoreSlots@CvPreGame@@YAXXZ		; CvPreGame::restoreSlots

; 553  : }

	pop	ebp
	ret	4
?restoreSlots@CvDllPreGame@@UAGXXZ ENDP			; CvDllPreGame::restoreSlots
_TEXT	ENDS
EXTRN	?saveSlots@CvPreGame@@YAXXZ:PROC		; CvPreGame::saveSlots
; Function compile flags: /Odtp
;	COMDAT ?saveSlots@CvDllPreGame@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?saveSlots@CvDllPreGame@@UAGXXZ PROC			; CvDllPreGame::saveSlots, COMDAT

; 556  : {

	push	ebp
	mov	ebp, esp

; 557  : 	CvPreGame::saveSlots();

	call	?saveSlots@CvPreGame@@YAXXZ		; CvPreGame::saveSlots

; 558  : }

	pop	ebp
	ret	4
?saveSlots@CvDllPreGame@@UAGXXZ ENDP			; CvDllPreGame::saveSlots
_TEXT	ENDS
EXTRN	?seaLevel@CvPreGame@@YA?AW4SeaLevelTypes@@XZ:PROC ; CvPreGame::seaLevel
; Function compile flags: /Odtp
;	COMDAT ?seaLevel@CvDllPreGame@@UAG?AW4SeaLevelTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?seaLevel@CvDllPreGame@@UAG?AW4SeaLevelTypes@@XZ PROC	; CvDllPreGame::seaLevel, COMDAT

; 561  : {

	push	ebp
	mov	ebp, esp

; 562  : 	return CvPreGame::seaLevel();

	call	?seaLevel@CvPreGame@@YA?AW4SeaLevelTypes@@XZ ; CvPreGame::seaLevel

; 563  : }

	pop	ebp
	ret	4
?seaLevel@CvDllPreGame@@UAG?AW4SeaLevelTypes@@XZ ENDP	; CvDllPreGame::seaLevel
_TEXT	ENDS
EXTRN	?setActivePlayer@CvPreGame@@YAXW4PlayerTypes@@@Z:PROC ; CvPreGame::setActivePlayer
; Function compile flags: /Odtp
;	COMDAT ?setActivePlayer@CvDllPreGame@@UAGXW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?setActivePlayer@CvDllPreGame@@UAGXW4PlayerTypes@@@Z PROC ; CvDllPreGame::setActivePlayer, COMDAT

; 566  : {

	push	ebp
	mov	ebp, esp

; 567  : 	CvPreGame::setActivePlayer(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?setActivePlayer@CvPreGame@@YAXW4PlayerTypes@@@Z ; CvPreGame::setActivePlayer
	add	esp, 4

; 568  : }

	pop	ebp
	ret	8
?setActivePlayer@CvDllPreGame@@UAGXW4PlayerTypes@@@Z ENDP ; CvDllPreGame::setActivePlayer
_TEXT	ENDS
EXTRN	?setAdminPassword@CvPreGame@@YAXABVCvString@@@Z:PROC ; CvPreGame::setAdminPassword
; Function compile flags: /Odtp
;	COMDAT ?setAdminPassword@CvDllPreGame@@UAGXABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?setAdminPassword@CvDllPreGame@@UAGXABVCvString@@@Z PROC ; CvDllPreGame::setAdminPassword, COMDAT

; 571  : {

	push	ebp
	mov	ebp, esp

; 572  : 	CvPreGame::setAdminPassword(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?setAdminPassword@CvPreGame@@YAXABVCvString@@@Z ; CvPreGame::setAdminPassword
	add	esp, 4

; 573  : }

	pop	ebp
	ret	8
?setAdminPassword@CvDllPreGame@@UAGXABVCvString@@@Z ENDP ; CvDllPreGame::setAdminPassword
_TEXT	ENDS
EXTRN	?setAdvancedStartPoints@CvPreGame@@YAXH@Z:PROC	; CvPreGame::setAdvancedStartPoints
; Function compile flags: /Odtp
;	COMDAT ?setAdvancedStartPoints@CvDllPreGame@@UAGXH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_a$ = 12						; size = 4
?setAdvancedStartPoints@CvDllPreGame@@UAGXH@Z PROC	; CvDllPreGame::setAdvancedStartPoints, COMDAT

; 576  : {

	push	ebp
	mov	ebp, esp

; 577  : 	CvPreGame::setAdvancedStartPoints(a);

	mov	eax, DWORD PTR _a$[ebp]
	push	eax
	call	?setAdvancedStartPoints@CvPreGame@@YAXH@Z ; CvPreGame::setAdvancedStartPoints
	add	esp, 4

; 578  : }

	pop	ebp
	ret	8
?setAdvancedStartPoints@CvDllPreGame@@UAGXH@Z ENDP	; CvDllPreGame::setAdvancedStartPoints
_TEXT	ENDS
EXTRN	?setAlias@CvPreGame@@YAXABVCvString@@@Z:PROC	; CvPreGame::setAlias
; Function compile flags: /Odtp
;	COMDAT ?setAlias@CvDllPreGame@@UAGXABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_a$ = 12						; size = 4
?setAlias@CvDllPreGame@@UAGXABVCvString@@@Z PROC	; CvDllPreGame::setAlias, COMDAT

; 581  : {

	push	ebp
	mov	ebp, esp

; 582  : 	CvPreGame::setAlias(a);

	mov	eax, DWORD PTR _a$[ebp]
	push	eax
	call	?setAlias@CvPreGame@@YAXABVCvString@@@Z	; CvPreGame::setAlias
	add	esp, 4

; 583  : }

	pop	ebp
	ret	8
?setAlias@CvDllPreGame@@UAGXABVCvString@@@Z ENDP	; CvDllPreGame::setAlias
_TEXT	ENDS
EXTRN	?setAutorun@CvPreGame@@YAX_N@Z:PROC		; CvPreGame::setAutorun
; Function compile flags: /Odtp
;	COMDAT ?setAutorun@CvDllPreGame@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_isAutoStart$ = 12					; size = 1
?setAutorun@CvDllPreGame@@UAGX_N@Z PROC			; CvDllPreGame::setAutorun, COMDAT

; 586  : {

	push	ebp
	mov	ebp, esp

; 587  : 	CvPreGame::setAutorun(isAutoStart);

	movzx	eax, BYTE PTR _isAutoStart$[ebp]
	push	eax
	call	?setAutorun@CvPreGame@@YAX_N@Z		; CvPreGame::setAutorun
	add	esp, 4

; 588  : }

	pop	ebp
	ret	8
?setAutorun@CvDllPreGame@@UAGX_N@Z ENDP			; CvDllPreGame::setAutorun
_TEXT	ENDS
EXTRN	?setAutorunTurnDelay@CvPreGame@@YAXM@Z:PROC	; CvPreGame::setAutorunTurnDelay
; Function compile flags: /Odtp
;	COMDAT ?setAutorunTurnDelay@CvDllPreGame@@UAGXM@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_turnDelay$ = 12					; size = 4
?setAutorunTurnDelay@CvDllPreGame@@UAGXM@Z PROC		; CvDllPreGame::setAutorunTurnDelay, COMDAT

; 591  : {

	push	ebp
	mov	ebp, esp

; 592  : 	CvPreGame::setAutorunTurnDelay(turnDelay);

	push	ecx
	fld	DWORD PTR _turnDelay$[ebp]
	fstp	DWORD PTR [esp]
	call	?setAutorunTurnDelay@CvPreGame@@YAXM@Z	; CvPreGame::setAutorunTurnDelay
	add	esp, 4

; 593  : }

	pop	ebp
	ret	8
?setAutorunTurnDelay@CvDllPreGame@@UAGXM@Z ENDP		; CvDllPreGame::setAutorunTurnDelay
_TEXT	ENDS
EXTRN	?setAutorunTurnLimit@CvPreGame@@YAXH@Z:PROC	; CvPreGame::setAutorunTurnLimit
; Function compile flags: /Odtp
;	COMDAT ?setAutorunTurnLimit@CvDllPreGame@@UAGXH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_turnLimit$ = 12					; size = 4
?setAutorunTurnLimit@CvDllPreGame@@UAGXH@Z PROC		; CvDllPreGame::setAutorunTurnLimit, COMDAT

; 596  : {

	push	ebp
	mov	ebp, esp

; 597  : 	CvPreGame::setAutorunTurnLimit(turnLimit);

	mov	eax, DWORD PTR _turnLimit$[ebp]
	push	eax
	call	?setAutorunTurnLimit@CvPreGame@@YAXH@Z	; CvPreGame::setAutorunTurnLimit
	add	esp, 4

; 598  : }

	pop	ebp
	ret	8
?setAutorunTurnLimit@CvDllPreGame@@UAGXH@Z ENDP		; CvDllPreGame::setAutorunTurnLimit
_TEXT	ENDS
EXTRN	?setBandwidth@CvPreGame@@YAXW4BandwidthType@@@Z:PROC ; CvPreGame::setBandwidth
; Function compile flags: /Odtp
;	COMDAT ?setBandwidth@CvDllPreGame@@UAGXW4BandwidthType@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_b$ = 12						; size = 4
?setBandwidth@CvDllPreGame@@UAGXW4BandwidthType@@@Z PROC ; CvDllPreGame::setBandwidth, COMDAT

; 601  : {

	push	ebp
	mov	ebp, esp

; 602  : 	CvPreGame::setBandwidth(b);

	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	?setBandwidth@CvPreGame@@YAXW4BandwidthType@@@Z ; CvPreGame::setBandwidth
	add	esp, 4

; 603  : }

	pop	ebp
	ret	8
?setBandwidth@CvDllPreGame@@UAGXW4BandwidthType@@@Z ENDP ; CvDllPreGame::setBandwidth
_TEXT	ENDS
EXTRN	?setBandwidth@CvPreGame@@YAXABVCvString@@@Z:PROC ; CvPreGame::setBandwidth
; Function compile flags: /Odtp
;	COMDAT ?setBandwidth@CvDllPreGame@@UAGXABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_b$ = 12						; size = 4
?setBandwidth@CvDllPreGame@@UAGXABVCvString@@@Z PROC	; CvDllPreGame::setBandwidth, COMDAT

; 606  : {

	push	ebp
	mov	ebp, esp

; 607  : 	CvPreGame::setBandwidth(b);

	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	call	?setBandwidth@CvPreGame@@YAXABVCvString@@@Z ; CvPreGame::setBandwidth
	add	esp, 4

; 608  : }

	pop	ebp
	ret	8
?setBandwidth@CvDllPreGame@@UAGXABVCvString@@@Z ENDP	; CvDllPreGame::setBandwidth
_TEXT	ENDS
EXTRN	?setCalendar@CvPreGame@@YAXW4CalendarTypes@@@Z:PROC ; CvPreGame::setCalendar
; Function compile flags: /Odtp
;	COMDAT ?setCalendar@CvDllPreGame@@UAGXW4CalendarTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_c$ = 12						; size = 4
?setCalendar@CvDllPreGame@@UAGXW4CalendarTypes@@@Z PROC	; CvDllPreGame::setCalendar, COMDAT

; 611  : {

	push	ebp
	mov	ebp, esp

; 612  : 	CvPreGame::setCalendar(c);

	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	?setCalendar@CvPreGame@@YAXW4CalendarTypes@@@Z ; CvPreGame::setCalendar
	add	esp, 4

; 613  : }

	pop	ebp
	ret	8
?setCalendar@CvDllPreGame@@UAGXW4CalendarTypes@@@Z ENDP	; CvDllPreGame::setCalendar
_TEXT	ENDS
EXTRN	?setCalendar@CvPreGame@@YAXABVCvString@@@Z:PROC	; CvPreGame::setCalendar
; Function compile flags: /Odtp
;	COMDAT ?setCalendar@CvDllPreGame@@UAGXABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_c$ = 12						; size = 4
?setCalendar@CvDllPreGame@@UAGXABVCvString@@@Z PROC	; CvDllPreGame::setCalendar, COMDAT

; 616  : {

	push	ebp
	mov	ebp, esp

; 617  : 	CvPreGame::setCalendar(c);

	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	?setCalendar@CvPreGame@@YAXABVCvString@@@Z ; CvPreGame::setCalendar
	add	esp, 4

; 618  : }

	pop	ebp
	ret	8
?setCalendar@CvDllPreGame@@UAGXABVCvString@@@Z ENDP	; CvDllPreGame::setCalendar
_TEXT	ENDS
EXTRN	?setCivilization@CvPreGame@@YAXW4PlayerTypes@@W4CivilizationTypes@@@Z:PROC ; CvPreGame::setCivilization
; Function compile flags: /Odtp
;	COMDAT ?setCivilization@CvDllPreGame@@UAGXW4PlayerTypes@@W4CivilizationTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_c$ = 16						; size = 4
?setCivilization@CvDllPreGame@@UAGXW4PlayerTypes@@W4CivilizationTypes@@@Z PROC ; CvDllPreGame::setCivilization, COMDAT

; 621  : {

	push	ebp
	mov	ebp, esp

; 622  : 	CvPreGame::setCivilization(p, c);

	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setCivilization@CvPreGame@@YAXW4PlayerTypes@@W4CivilizationTypes@@@Z ; CvPreGame::setCivilization
	add	esp, 8

; 623  : }

	pop	ebp
	ret	12					; 0000000cH
?setCivilization@CvDllPreGame@@UAGXW4PlayerTypes@@W4CivilizationTypes@@@Z ENDP ; CvDllPreGame::setCivilization
_TEXT	ENDS
EXTRN	?setCivilizationAdjective@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z:PROC ; CvPreGame::setCivilizationAdjective
; Function compile flags: /Odtp
;	COMDAT ?setCivilizationAdjective@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_a$ = 16						; size = 4
?setCivilizationAdjective@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z PROC ; CvDllPreGame::setCivilizationAdjective, COMDAT

; 626  : {

	push	ebp
	mov	ebp, esp

; 627  : 	CvPreGame::setCivilizationAdjective(p, a);

	mov	eax, DWORD PTR _a$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setCivilizationAdjective@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z ; CvPreGame::setCivilizationAdjective
	add	esp, 8

; 628  : }

	pop	ebp
	ret	12					; 0000000cH
?setCivilizationAdjective@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ENDP ; CvDllPreGame::setCivilizationAdjective
_TEXT	ENDS
EXTRN	?setCivilizationDescription@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z:PROC ; CvPreGame::setCivilizationDescription
; Function compile flags: /Odtp
;	COMDAT ?setCivilizationDescription@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_d$ = 16						; size = 4
?setCivilizationDescription@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z PROC ; CvDllPreGame::setCivilizationDescription, COMDAT

; 631  : {

	push	ebp
	mov	ebp, esp

; 632  : 	CvPreGame::setCivilizationDescription(p, d);

	mov	eax, DWORD PTR _d$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setCivilizationDescription@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z ; CvPreGame::setCivilizationDescription
	add	esp, 8

; 633  : }

	pop	ebp
	ret	12					; 0000000cH
?setCivilizationDescription@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ENDP ; CvDllPreGame::setCivilizationDescription
_TEXT	ENDS
EXTRN	?setCivilizationPassword@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z:PROC ; CvPreGame::setCivilizationPassword
; Function compile flags: /Odtp
;	COMDAT ?setCivilizationPassword@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_pwd$ = 16						; size = 4
?setCivilizationPassword@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z PROC ; CvDllPreGame::setCivilizationPassword, COMDAT

; 636  : {

	push	ebp
	mov	ebp, esp

; 637  : 	CvPreGame::setCivilizationPassword(p, pwd);

	mov	eax, DWORD PTR _pwd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setCivilizationPassword@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z ; CvPreGame::setCivilizationPassword
	add	esp, 8

; 638  : }

	pop	ebp
	ret	12					; 0000000cH
?setCivilizationPassword@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ENDP ; CvDllPreGame::setCivilizationPassword
_TEXT	ENDS
EXTRN	?setCivilizationShortDescription@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z:PROC ; CvPreGame::setCivilizationShortDescription
; Function compile flags: /Odtp
;	COMDAT ?setCivilizationShortDescription@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_d$ = 16						; size = 4
?setCivilizationShortDescription@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z PROC ; CvDllPreGame::setCivilizationShortDescription, COMDAT

; 641  : {

	push	ebp
	mov	ebp, esp

; 642  : 	CvPreGame::setCivilizationShortDescription(p, d);

	mov	eax, DWORD PTR _d$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setCivilizationShortDescription@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z ; CvPreGame::setCivilizationShortDescription
	add	esp, 8

; 643  : }

	pop	ebp
	ret	12					; 0000000cH
?setCivilizationShortDescription@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ENDP ; CvDllPreGame::setCivilizationShortDescription
_TEXT	ENDS
EXTRN	?setCivilizationKey@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z:PROC ; CvPreGame::setCivilizationKey
; Function compile flags: /Odtp
;	COMDAT ?setCivilizationKey@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_d$ = 16						; size = 4
?setCivilizationKey@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z PROC ; CvDllPreGame::setCivilizationKey, COMDAT

; 646  : {

	push	ebp
	mov	ebp, esp

; 647  : 	CvPreGame::setCivilizationKey(p, d);

	mov	eax, DWORD PTR _d$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setCivilizationKey@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z ; CvPreGame::setCivilizationKey
	add	esp, 8

; 648  : }

	pop	ebp
	ret	12					; 0000000cH
?setCivilizationKey@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ENDP ; CvDllPreGame::setCivilizationKey
_TEXT	ENDS
EXTRN	?setCivilizationKeyPackageID@CvPreGame@@YAXW4PlayerTypes@@ABU_GUID@@@Z:PROC ; CvPreGame::setCivilizationKeyPackageID
; Function compile flags: /Odtp
;	COMDAT ?setCivilizationKeyPackageID@CvDllPreGame@@UAGXW4PlayerTypes@@ABU_GUID@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_kKey$ = 16						; size = 4
?setCivilizationKeyPackageID@CvDllPreGame@@UAGXW4PlayerTypes@@ABU_GUID@@@Z PROC ; CvDllPreGame::setCivilizationKeyPackageID, COMDAT

; 651  : {

	push	ebp
	mov	ebp, esp

; 652  : 	CvPreGame::setCivilizationKeyPackageID(p, kKey);

	mov	eax, DWORD PTR _kKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setCivilizationKeyPackageID@CvPreGame@@YAXW4PlayerTypes@@ABU_GUID@@@Z ; CvPreGame::setCivilizationKeyPackageID
	add	esp, 8

; 653  : }

	pop	ebp
	ret	12					; 0000000cH
?setCivilizationKeyPackageID@CvDllPreGame@@UAGXW4PlayerTypes@@ABU_GUID@@@Z ENDP ; CvDllPreGame::setCivilizationKeyPackageID
_TEXT	ENDS
EXTRN	?setClimate@CvPreGame@@YAXW4ClimateTypes@@@Z:PROC ; CvPreGame::setClimate
; Function compile flags: /Odtp
;	COMDAT ?setClimate@CvDllPreGame@@UAGXW4ClimateTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_c$ = 12						; size = 4
?setClimate@CvDllPreGame@@UAGXW4ClimateTypes@@@Z PROC	; CvDllPreGame::setClimate, COMDAT

; 656  : {

	push	ebp
	mov	ebp, esp

; 657  : 	CvPreGame::setClimate(c);

	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	?setClimate@CvPreGame@@YAXW4ClimateTypes@@@Z ; CvPreGame::setClimate
	add	esp, 4

; 658  : }

	pop	ebp
	ret	8
?setClimate@CvDllPreGame@@UAGXW4ClimateTypes@@@Z ENDP	; CvDllPreGame::setClimate
_TEXT	ENDS
EXTRN	?setClimate@CvPreGame@@YAXABVCvString@@@Z:PROC	; CvPreGame::setClimate
; Function compile flags: /Odtp
;	COMDAT ?setClimate@CvDllPreGame@@UAGXABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_c$ = 12						; size = 4
?setClimate@CvDllPreGame@@UAGXABVCvString@@@Z PROC	; CvDllPreGame::setClimate, COMDAT

; 661  : {

	push	ebp
	mov	ebp, esp

; 662  : 	CvPreGame::setClimate(c);

	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	call	?setClimate@CvPreGame@@YAXABVCvString@@@Z ; CvPreGame::setClimate
	add	esp, 4

; 663  : }

	pop	ebp
	ret	8
?setClimate@CvDllPreGame@@UAGXABVCvString@@@Z ENDP	; CvDllPreGame::setClimate
_TEXT	ENDS
EXTRN	?setCustomWorldSize@CvPreGame@@YAXHHHH@Z:PROC	; CvPreGame::setCustomWorldSize
; Function compile flags: /Odtp
;	COMDAT ?setCustomWorldSize@CvDllPreGame@@UAGXHHHH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iWidth$ = 12						; size = 4
_iHeight$ = 16						; size = 4
_iPlayers$ = 20						; size = 4
_iMinorCivs$ = 24					; size = 4
?setCustomWorldSize@CvDllPreGame@@UAGXHHHH@Z PROC	; CvDllPreGame::setCustomWorldSize, COMDAT

; 666  : {

	push	ebp
	mov	ebp, esp

; 667  : 	CvPreGame::setCustomWorldSize(iWidth, iHeight, iPlayers, iMinorCivs);

	mov	eax, DWORD PTR _iMinorCivs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iPlayers$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iHeight$[ebp]
	push	edx
	mov	eax, DWORD PTR _iWidth$[ebp]
	push	eax
	call	?setCustomWorldSize@CvPreGame@@YAXHHHH@Z ; CvPreGame::setCustomWorldSize
	add	esp, 16					; 00000010H

; 668  : }

	pop	ebp
	ret	20					; 00000014H
?setCustomWorldSize@CvDllPreGame@@UAGXHHHH@Z ENDP	; CvDllPreGame::setCustomWorldSize
_TEXT	ENDS
EXTRN	?setDLCAllowed@CvPreGame@@YAXABU_GUID@@_N@Z:PROC ; CvPreGame::setDLCAllowed
; Function compile flags: /Odtp
;	COMDAT ?setDLCAllowed@CvDllPreGame@@UAGXABU_GUID@@_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_kDLCID$ = 12						; size = 4
_bState$ = 16						; size = 1
?setDLCAllowed@CvDllPreGame@@UAGXABU_GUID@@_N@Z PROC	; CvDllPreGame::setDLCAllowed, COMDAT

; 671  : {

	push	ebp
	mov	ebp, esp

; 672  : 	CvPreGame::setDLCAllowed(kDLCID, bState);

	movzx	eax, BYTE PTR _bState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kDLCID$[ebp]
	push	ecx
	call	?setDLCAllowed@CvPreGame@@YAXABU_GUID@@_N@Z ; CvPreGame::setDLCAllowed
	add	esp, 8

; 673  : }

	pop	ebp
	ret	12					; 0000000cH
?setDLCAllowed@CvDllPreGame@@UAGXABU_GUID@@_N@Z ENDP	; CvDllPreGame::setDLCAllowed
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?setEarthMap@CvDllPreGame@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bIsEarthMap$ = 12					; size = 1
?setEarthMap@CvDllPreGame@@UAGX_N@Z PROC		; CvDllPreGame::setEarthMap, COMDAT

; 680  : {

	push	ebp
	mov	ebp, esp

; 681  : 	//This function is no longer used, it only exists for interface compatibility.
; 682  : }

	pop	ebp
	ret	8
?setEarthMap@CvDllPreGame@@UAGX_N@Z ENDP		; CvDllPreGame::setEarthMap
_TEXT	ENDS
EXTRN	?setEmailAddress@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z:PROC ; CvPreGame::setEmailAddress
; Function compile flags: /Odtp
;	COMDAT ?setEmailAddress@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_a$ = 16						; size = 4
?setEmailAddress@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z PROC ; CvDllPreGame::setEmailAddress, COMDAT

; 685  : {

	push	ebp
	mov	ebp, esp

; 686  : 	CvPreGame::setEmailAddress(p, a);

	mov	eax, DWORD PTR _a$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setEmailAddress@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z ; CvPreGame::setEmailAddress
	add	esp, 8

; 687  : }

	pop	ebp
	ret	12					; 0000000cH
?setEmailAddress@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ENDP ; CvDllPreGame::setEmailAddress
_TEXT	ENDS
EXTRN	?setEmailAddress@CvPreGame@@YAXABVCvString@@@Z:PROC ; CvPreGame::setEmailAddress
; Function compile flags: /Odtp
;	COMDAT ?setEmailAddress@CvDllPreGame@@UAGXABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_a$ = 12						; size = 4
?setEmailAddress@CvDllPreGame@@UAGXABVCvString@@@Z PROC	; CvDllPreGame::setEmailAddress, COMDAT

; 690  : {

	push	ebp
	mov	ebp, esp

; 691  : 	CvPreGame::setEmailAddress(a);

	mov	eax, DWORD PTR _a$[ebp]
	push	eax
	call	?setEmailAddress@CvPreGame@@YAXABVCvString@@@Z ; CvPreGame::setEmailAddress
	add	esp, 4

; 692  : }

	pop	ebp
	ret	8
?setEmailAddress@CvDllPreGame@@UAGXABVCvString@@@Z ENDP	; CvDllPreGame::setEmailAddress
_TEXT	ENDS
EXTRN	?setEndTurnTimerLength@CvPreGame@@YAXM@Z:PROC	; CvPreGame::setEndTurnTimerLength
; Function compile flags: /Odtp
;	COMDAT ?setEndTurnTimerLength@CvDllPreGame@@UAGXM@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_f$ = 12						; size = 4
?setEndTurnTimerLength@CvDllPreGame@@UAGXM@Z PROC	; CvDllPreGame::setEndTurnTimerLength, COMDAT

; 695  : {

	push	ebp
	mov	ebp, esp

; 696  : 	CvPreGame::setEndTurnTimerLength(f);

	push	ecx
	fld	DWORD PTR _f$[ebp]
	fstp	DWORD PTR [esp]
	call	?setEndTurnTimerLength@CvPreGame@@YAXM@Z ; CvPreGame::setEndTurnTimerLength
	add	esp, 4

; 697  : }

	pop	ebp
	ret	8
?setEndTurnTimerLength@CvDllPreGame@@UAGXM@Z ENDP	; CvDllPreGame::setEndTurnTimerLength
_TEXT	ENDS
EXTRN	?setEra@CvPreGame@@YAXW4EraTypes@@@Z:PROC	; CvPreGame::setEra
; Function compile flags: /Odtp
;	COMDAT ?setEra@CvDllPreGame@@UAGXW4EraTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_e$ = 12						; size = 4
?setEra@CvDllPreGame@@UAGXW4EraTypes@@@Z PROC		; CvDllPreGame::setEra, COMDAT

; 700  : {

	push	ebp
	mov	ebp, esp

; 701  : 	CvPreGame::setEra(e);

	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	call	?setEra@CvPreGame@@YAXW4EraTypes@@@Z	; CvPreGame::setEra
	add	esp, 4

; 702  : }

	pop	ebp
	ret	8
?setEra@CvDllPreGame@@UAGXW4EraTypes@@@Z ENDP		; CvDllPreGame::setEra
_TEXT	ENDS
EXTRN	?setEra@CvPreGame@@YAXABVCvString@@@Z:PROC	; CvPreGame::setEra
; Function compile flags: /Odtp
;	COMDAT ?setEra@CvDllPreGame@@UAGXABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_e$ = 12						; size = 4
?setEra@CvDllPreGame@@UAGXABVCvString@@@Z PROC		; CvDllPreGame::setEra, COMDAT

; 705  : {

	push	ebp
	mov	ebp, esp

; 706  : 	CvPreGame::setEra(e);

	mov	eax, DWORD PTR _e$[ebp]
	push	eax
	call	?setEra@CvPreGame@@YAXABVCvString@@@Z	; CvPreGame::setEra
	add	esp, 4

; 707  : }

	pop	ebp
	ret	8
?setEra@CvDllPreGame@@UAGXABVCvString@@@Z ENDP		; CvDllPreGame::setEra
_TEXT	ENDS
EXTRN	?setGameMode@CvPreGame@@YAXW4GameMode@@@Z:PROC	; CvPreGame::setGameMode
; Function compile flags: /Odtp
;	COMDAT ?setGameMode@CvDllPreGame@@UAGXW4GameMode@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_g$ = 12						; size = 4
?setGameMode@CvDllPreGame@@UAGXW4GameMode@@@Z PROC	; CvDllPreGame::setGameMode, COMDAT

; 710  : {

	push	ebp
	mov	ebp, esp

; 711  : 	CvPreGame::setGameMode(g);

	mov	eax, DWORD PTR _g$[ebp]
	push	eax
	call	?setGameMode@CvPreGame@@YAXW4GameMode@@@Z ; CvPreGame::setGameMode
	add	esp, 4

; 712  : }

	pop	ebp
	ret	8
?setGameMode@CvDllPreGame@@UAGXW4GameMode@@@Z ENDP	; CvDllPreGame::setGameMode
_TEXT	ENDS
EXTRN	?setGameName@CvPreGame@@YAXABVCvString@@@Z:PROC	; CvPreGame::setGameName
; Function compile flags: /Odtp
;	COMDAT ?setGameName@CvDllPreGame@@UAGXABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_g$ = 12						; size = 4
?setGameName@CvDllPreGame@@UAGXABVCvString@@@Z PROC	; CvDllPreGame::setGameName, COMDAT

; 715  : {

	push	ebp
	mov	ebp, esp

; 716  : 	CvPreGame::setGameName(g);

	mov	eax, DWORD PTR _g$[ebp]
	push	eax
	call	?setGameName@CvPreGame@@YAXABVCvString@@@Z ; CvPreGame::setGameName
	add	esp, 4

; 717  : }

	pop	ebp
	ret	8
?setGameName@CvDllPreGame@@UAGXABVCvString@@@Z ENDP	; CvDllPreGame::setGameName
_TEXT	ENDS
EXTRN	?setGameSpeed@CvPreGame@@YAXW4GameSpeedTypes@@@Z:PROC ; CvPreGame::setGameSpeed
; Function compile flags: /Odtp
;	COMDAT ?setGameSpeed@CvDllPreGame@@UAGXW4GameSpeedTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_g$ = 12						; size = 4
?setGameSpeed@CvDllPreGame@@UAGXW4GameSpeedTypes@@@Z PROC ; CvDllPreGame::setGameSpeed, COMDAT

; 720  : {

	push	ebp
	mov	ebp, esp

; 721  : 	CvPreGame::setGameSpeed(g);

	mov	eax, DWORD PTR _g$[ebp]
	push	eax
	call	?setGameSpeed@CvPreGame@@YAXW4GameSpeedTypes@@@Z ; CvPreGame::setGameSpeed
	add	esp, 4

; 722  : }

	pop	ebp
	ret	8
?setGameSpeed@CvDllPreGame@@UAGXW4GameSpeedTypes@@@Z ENDP ; CvDllPreGame::setGameSpeed
_TEXT	ENDS
EXTRN	?setGameSpeed@CvPreGame@@YAXABVCvString@@@Z:PROC ; CvPreGame::setGameSpeed
; Function compile flags: /Odtp
;	COMDAT ?setGameSpeed@CvDllPreGame@@UAGXABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_g$ = 12						; size = 4
?setGameSpeed@CvDllPreGame@@UAGXABVCvString@@@Z PROC	; CvDllPreGame::setGameSpeed, COMDAT

; 725  : {

	push	ebp
	mov	ebp, esp

; 726  : 	CvPreGame::setGameSpeed(g);

	mov	eax, DWORD PTR _g$[ebp]
	push	eax
	call	?setGameSpeed@CvPreGame@@YAXABVCvString@@@Z ; CvPreGame::setGameSpeed
	add	esp, 4

; 727  : }

	pop	ebp
	ret	8
?setGameSpeed@CvDllPreGame@@UAGXABVCvString@@@Z ENDP	; CvDllPreGame::setGameSpeed
_TEXT	ENDS
EXTRN	?setGameStarted@CvPreGame@@YAX_N@Z:PROC		; CvPreGame::setGameStarted
; Function compile flags: /Odtp
;	COMDAT ?setGameStarted@CvDllPreGame@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bStarted$ = 12						; size = 1
?setGameStarted@CvDllPreGame@@UAGX_N@Z PROC		; CvDllPreGame::setGameStarted, COMDAT

; 730  : {

	push	ebp
	mov	ebp, esp

; 731  : 	CvPreGame::setGameStarted(bStarted);

	movzx	eax, BYTE PTR _bStarted$[ebp]
	push	eax
	call	?setGameStarted@CvPreGame@@YAX_N@Z	; CvPreGame::setGameStarted
	add	esp, 4

; 732  : }

	pop	ebp
	ret	8
?setGameStarted@CvDllPreGame@@UAGX_N@Z ENDP		; CvDllPreGame::setGameStarted
_TEXT	ENDS
EXTRN	?setGameTurn@CvPreGame@@YAXH@Z:PROC		; CvPreGame::setGameTurn
; Function compile flags: /Odtp
;	COMDAT ?setGameTurn@CvDllPreGame@@UAGXH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_turn$ = 12						; size = 4
?setGameTurn@CvDllPreGame@@UAGXH@Z PROC			; CvDllPreGame::setGameTurn, COMDAT

; 735  : {

	push	ebp
	mov	ebp, esp

; 736  : 	CvPreGame::setGameTurn(turn);

	mov	eax, DWORD PTR _turn$[ebp]
	push	eax
	call	?setGameTurn@CvPreGame@@YAXH@Z		; CvPreGame::setGameTurn
	add	esp, 4

; 737  : }

	pop	ebp
	ret	8
?setGameTurn@CvDllPreGame@@UAGXH@Z ENDP			; CvDllPreGame::setGameTurn
_TEXT	ENDS
EXTRN	?SetGameOption@CvPreGame@@YA_NPBDH@Z:PROC	; CvPreGame::SetGameOption
; Function compile flags: /Odtp
;	COMDAT ?SetGameOption@CvDllPreGame@@UAG_NPBDH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_szOptionName$ = 12					; size = 4
_iValue$ = 16						; size = 4
?SetGameOption@CvDllPreGame@@UAG_NPBDH@Z PROC		; CvDllPreGame::SetGameOption, COMDAT

; 740  : {

	push	ebp
	mov	ebp, esp

; 741  : 	return CvPreGame::SetGameOption(szOptionName, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szOptionName$[ebp]
	push	ecx
	call	?SetGameOption@CvPreGame@@YA_NPBDH@Z	; CvPreGame::SetGameOption
	add	esp, 8

; 742  : }

	pop	ebp
	ret	12					; 0000000cH
?SetGameOption@CvDllPreGame@@UAG_NPBDH@Z ENDP		; CvDllPreGame::SetGameOption
_TEXT	ENDS
EXTRN	?SetGameOption@CvPreGame@@YA_NW4GameOptionTypes@@H@Z:PROC ; CvPreGame::SetGameOption
; Function compile flags: /Odtp
;	COMDAT ?SetGameOption@CvDllPreGame@@UAG_NW4GameOptionTypes@@H@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_eOption$ = 12						; size = 4
_iValue$ = 16						; size = 4
?SetGameOption@CvDllPreGame@@UAG_NW4GameOptionTypes@@H@Z PROC ; CvDllPreGame::SetGameOption, COMDAT

; 745  : {

	push	ebp
	mov	ebp, esp

; 746  : 	return CvPreGame::SetGameOption(eOption, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eOption$[ebp]
	push	ecx
	call	?SetGameOption@CvPreGame@@YA_NW4GameOptionTypes@@H@Z ; CvPreGame::SetGameOption
	add	esp, 8

; 747  : }

	pop	ebp
	ret	12					; 0000000cH
?SetGameOption@CvDllPreGame@@UAG_NW4GameOptionTypes@@H@Z ENDP ; CvDllPreGame::SetGameOption
_TEXT	ENDS
EXTRN	?setGameType@CvPreGame@@YAXW4GameTypes@@@Z:PROC	; CvPreGame::setGameType
; Function compile flags: /Odtp
;	COMDAT ?setGameType@CvDllPreGame@@UAGXW4GameTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_g$ = 12						; size = 4
?setGameType@CvDllPreGame@@UAGXW4GameTypes@@@Z PROC	; CvDllPreGame::setGameType, COMDAT

; 750  : {

	push	ebp
	mov	ebp, esp

; 751  : 	CvPreGame::setGameType(g);

	mov	eax, DWORD PTR _g$[ebp]
	push	eax
	call	?setGameType@CvPreGame@@YAXW4GameTypes@@@Z ; CvPreGame::setGameType
	add	esp, 4

; 752  : }

	pop	ebp
	ret	8
?setGameType@CvDllPreGame@@UAGXW4GameTypes@@@Z ENDP	; CvDllPreGame::setGameType
_TEXT	ENDS
EXTRN	?setGameType@CvPreGame@@YAXW4GameTypes@@W4GameStartTypes@@@Z:PROC ; CvPreGame::setGameType
; Function compile flags: /Odtp
;	COMDAT ?setGameType@CvDllPreGame@@UAGXW4GameTypes@@W4GameStartTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_g$ = 12						; size = 4
_eStartType$ = 16					; size = 4
?setGameType@CvDllPreGame@@UAGXW4GameTypes@@W4GameStartTypes@@@Z PROC ; CvDllPreGame::setGameType, COMDAT

; 755  : {

	push	ebp
	mov	ebp, esp

; 756  : 	CvPreGame::setGameType(g, eStartType);

	mov	eax, DWORD PTR _eStartType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _g$[ebp]
	push	ecx
	call	?setGameType@CvPreGame@@YAXW4GameTypes@@W4GameStartTypes@@@Z ; CvPreGame::setGameType
	add	esp, 8

; 757  : }

	pop	ebp
	ret	12					; 0000000cH
?setGameType@CvDllPreGame@@UAGXW4GameTypes@@W4GameStartTypes@@@Z ENDP ; CvDllPreGame::setGameType
_TEXT	ENDS
EXTRN	?setGameType@CvPreGame@@YAXABVCvString@@@Z:PROC	; CvPreGame::setGameType
; Function compile flags: /Odtp
;	COMDAT ?setGameType@CvDllPreGame@@UAGXABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_g$ = 12						; size = 4
?setGameType@CvDllPreGame@@UAGXABVCvString@@@Z PROC	; CvDllPreGame::setGameType, COMDAT

; 760  : {

	push	ebp
	mov	ebp, esp

; 761  : 	CvPreGame::setGameType(g);

	mov	eax, DWORD PTR _g$[ebp]
	push	eax
	call	?setGameType@CvPreGame@@YAXABVCvString@@@Z ; CvPreGame::setGameType
	add	esp, 4

; 762  : }

	pop	ebp
	ret	8
?setGameType@CvDllPreGame@@UAGXABVCvString@@@Z ENDP	; CvDllPreGame::setGameType
_TEXT	ENDS
EXTRN	?setGameStartType@CvPreGame@@YAXW4GameStartTypes@@@Z:PROC ; CvPreGame::setGameStartType
; Function compile flags: /Odtp
;	COMDAT ?setGameStartType@CvDllPreGame@@UAGXW4GameStartTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_g$ = 12						; size = 4
?setGameStartType@CvDllPreGame@@UAGXW4GameStartTypes@@@Z PROC ; CvDllPreGame::setGameStartType, COMDAT

; 765  : {

	push	ebp
	mov	ebp, esp

; 766  : 	CvPreGame::setGameStartType(g);

	mov	eax, DWORD PTR _g$[ebp]
	push	eax
	call	?setGameStartType@CvPreGame@@YAXW4GameStartTypes@@@Z ; CvPreGame::setGameStartType
	add	esp, 4

; 767  : }

	pop	ebp
	ret	8
?setGameStartType@CvDllPreGame@@UAGXW4GameStartTypes@@@Z ENDP ; CvDllPreGame::setGameStartType
_TEXT	ENDS
EXTRN	?setGameUpdateTime@CvPreGame@@YAXH@Z:PROC	; CvPreGame::setGameUpdateTime
; Function compile flags: /Odtp
;	COMDAT ?setGameUpdateTime@CvDllPreGame@@UAGXH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_updateTime$ = 12					; size = 4
?setGameUpdateTime@CvDllPreGame@@UAGXH@Z PROC		; CvDllPreGame::setGameUpdateTime, COMDAT

; 770  : {

	push	ebp
	mov	ebp, esp

; 771  : 	CvPreGame::setGameUpdateTime(updateTime);

	mov	eax, DWORD PTR _updateTime$[ebp]
	push	eax
	call	?setGameUpdateTime@CvPreGame@@YAXH@Z	; CvPreGame::setGameUpdateTime
	add	esp, 4

; 772  : }

	pop	ebp
	ret	8
?setGameUpdateTime@CvDllPreGame@@UAGXH@Z ENDP		; CvDllPreGame::setGameUpdateTime
_TEXT	ENDS
EXTRN	?setHandicap@CvPreGame@@YAXW4PlayerTypes@@W4HandicapTypes@@@Z:PROC ; CvPreGame::setHandicap
; Function compile flags: /Odtp
;	COMDAT ?setHandicap@CvDllPreGame@@UAGXW4PlayerTypes@@W4HandicapTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_h$ = 16						; size = 4
?setHandicap@CvDllPreGame@@UAGXW4PlayerTypes@@W4HandicapTypes@@@Z PROC ; CvDllPreGame::setHandicap, COMDAT

; 775  : {

	push	ebp
	mov	ebp, esp

; 776  : 	CvPreGame::setHandicap(p, h);

	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setHandicap@CvPreGame@@YAXW4PlayerTypes@@W4HandicapTypes@@@Z ; CvPreGame::setHandicap
	add	esp, 8

; 777  : }

	pop	ebp
	ret	12					; 0000000cH
?setHandicap@CvDllPreGame@@UAGXW4PlayerTypes@@W4HandicapTypes@@@Z ENDP ; CvDllPreGame::setHandicap
_TEXT	ENDS
EXTRN	?setInternetGame@CvPreGame@@YAX_N@Z:PROC	; CvPreGame::setInternetGame
; Function compile flags: /Odtp
;	COMDAT ?setInternetGame@CvDllPreGame@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_isInternetGame$ = 12					; size = 1
?setInternetGame@CvDllPreGame@@UAGX_N@Z PROC		; CvDllPreGame::setInternetGame, COMDAT

; 780  : {

	push	ebp
	mov	ebp, esp

; 781  : 	CvPreGame::setInternetGame(isInternetGame);

	movzx	eax, BYTE PTR _isInternetGame$[ebp]
	push	eax
	call	?setInternetGame@CvPreGame@@YAX_N@Z	; CvPreGame::setInternetGame
	add	esp, 4

; 782  : }

	pop	ebp
	ret	8
?setInternetGame@CvDllPreGame@@UAGX_N@Z ENDP		; CvDllPreGame::setInternetGame
_TEXT	ENDS
EXTRN	?setLeaderHead@CvPreGame@@YAXW4PlayerTypes@@W4LeaderHeadTypes@@@Z:PROC ; CvPreGame::setLeaderHead
; Function compile flags: /Odtp
;	COMDAT ?setLeaderHead@CvDllPreGame@@UAGXW4PlayerTypes@@W4LeaderHeadTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_l$ = 16						; size = 4
?setLeaderHead@CvDllPreGame@@UAGXW4PlayerTypes@@W4LeaderHeadTypes@@@Z PROC ; CvDllPreGame::setLeaderHead, COMDAT

; 785  : {

	push	ebp
	mov	ebp, esp

; 786  : 	CvPreGame::setLeaderHead(p, l);

	mov	eax, DWORD PTR _l$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setLeaderHead@CvPreGame@@YAXW4PlayerTypes@@W4LeaderHeadTypes@@@Z ; CvPreGame::setLeaderHead
	add	esp, 8

; 787  : }

	pop	ebp
	ret	12					; 0000000cH
?setLeaderHead@CvDllPreGame@@UAGXW4PlayerTypes@@W4LeaderHeadTypes@@@Z ENDP ; CvDllPreGame::setLeaderHead
_TEXT	ENDS
EXTRN	?setLeaderName@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z:PROC ; CvPreGame::setLeaderName
; Function compile flags: /Odtp
;	COMDAT ?setLeaderName@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_n$ = 16						; size = 4
?setLeaderName@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z PROC ; CvDllPreGame::setLeaderName, COMDAT

; 790  : {

	push	ebp
	mov	ebp, esp

; 791  : 	CvPreGame::setLeaderName(p, n);

	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setLeaderName@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z ; CvPreGame::setLeaderName
	add	esp, 8

; 792  : }

	pop	ebp
	ret	12					; 0000000cH
?setLeaderName@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ENDP ; CvDllPreGame::setLeaderName
_TEXT	ENDS
EXTRN	?setLeaderKey@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z:PROC ; CvPreGame::setLeaderKey
; Function compile flags: /Odtp
;	COMDAT ?setLeaderKey@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_n$ = 16						; size = 4
?setLeaderKey@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z PROC ; CvDllPreGame::setLeaderKey, COMDAT

; 795  : {

	push	ebp
	mov	ebp, esp

; 796  : 	CvPreGame::setLeaderKey(p, n);

	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setLeaderKey@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z ; CvPreGame::setLeaderKey
	add	esp, 8

; 797  : }

	pop	ebp
	ret	12					; 0000000cH
?setLeaderKey@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ENDP ; CvDllPreGame::setLeaderKey
_TEXT	ENDS
EXTRN	?setLeaderKeyPackageID@CvPreGame@@YAXW4PlayerTypes@@ABU_GUID@@@Z:PROC ; CvPreGame::setLeaderKeyPackageID
; Function compile flags: /Odtp
;	COMDAT ?setLeaderKeyPackageID@CvDllPreGame@@UAGXW4PlayerTypes@@ABU_GUID@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_n$ = 16						; size = 4
?setLeaderKeyPackageID@CvDllPreGame@@UAGXW4PlayerTypes@@ABU_GUID@@@Z PROC ; CvDllPreGame::setLeaderKeyPackageID, COMDAT

; 800  : {

	push	ebp
	mov	ebp, esp

; 801  : 	CvPreGame::setLeaderKeyPackageID(p, n);

	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setLeaderKeyPackageID@CvPreGame@@YAXW4PlayerTypes@@ABU_GUID@@@Z ; CvPreGame::setLeaderKeyPackageID
	add	esp, 8

; 802  : }

	pop	ebp
	ret	12					; 0000000cH
?setLeaderKeyPackageID@CvDllPreGame@@UAGXW4PlayerTypes@@ABU_GUID@@@Z ENDP ; CvDllPreGame::setLeaderKeyPackageID
_TEXT	ENDS
EXTRN	?setLoadFileName@CvPreGame@@YAXABVCvString@@@Z:PROC ; CvPreGame::setLoadFileName
; Function compile flags: /Odtp
;	COMDAT ?setLoadFileName@CvDllPreGame@@UAGXABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_fileName$ = 12						; size = 4
?setLoadFileName@CvDllPreGame@@UAGXABVCvString@@@Z PROC	; CvDllPreGame::setLoadFileName, COMDAT

; 805  : {

	push	ebp
	mov	ebp, esp

; 806  : 	CvPreGame::setLoadFileName(fileName);

	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	?setLoadFileName@CvPreGame@@YAXABVCvString@@@Z ; CvPreGame::setLoadFileName
	add	esp, 4

; 807  : }

	pop	ebp
	ret	8
?setLoadFileName@CvDllPreGame@@UAGXABVCvString@@@Z ENDP	; CvDllPreGame::setLoadFileName
_TEXT	ENDS
EXTRN	?setMapNoPlayers@CvPreGame@@YAX_N@Z:PROC	; CvPreGame::setMapNoPlayers
; Function compile flags: /Odtp
;	COMDAT ?setMapNoPlayers@CvDllPreGame@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 1
?setMapNoPlayers@CvDllPreGame@@UAGX_N@Z PROC		; CvDllPreGame::setMapNoPlayers, COMDAT

; 810  : {

	push	ebp
	mov	ebp, esp

; 811  : 	CvPreGame::setMapNoPlayers(p);

	movzx	eax, BYTE PTR _p$[ebp]
	push	eax
	call	?setMapNoPlayers@CvPreGame@@YAX_N@Z	; CvPreGame::setMapNoPlayers
	add	esp, 4

; 812  : }

	pop	ebp
	ret	8
?setMapNoPlayers@CvDllPreGame@@UAGX_N@Z ENDP		; CvDllPreGame::setMapNoPlayers
_TEXT	ENDS
EXTRN	?setMapRandomSeed@CvPreGame@@YAXI@Z:PROC	; CvPreGame::setMapRandomSeed
; Function compile flags: /Odtp
;	COMDAT ?setMapRandomSeed@CvDllPreGame@@UAGXI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_newSeed$ = 12						; size = 4
?setMapRandomSeed@CvDllPreGame@@UAGXI@Z PROC		; CvDllPreGame::setMapRandomSeed, COMDAT

; 815  : {

	push	ebp
	mov	ebp, esp

; 816  : 	CvPreGame::setMapRandomSeed(newSeed);

	mov	eax, DWORD PTR _newSeed$[ebp]
	push	eax
	call	?setMapRandomSeed@CvPreGame@@YAXI@Z	; CvPreGame::setMapRandomSeed
	add	esp, 4

; 817  : }

	pop	ebp
	ret	8
?setMapRandomSeed@CvDllPreGame@@UAGXI@Z ENDP		; CvDllPreGame::setMapRandomSeed
_TEXT	ENDS
EXTRN	?setLoadWBScenario@CvPreGame@@YAX_N@Z:PROC	; CvPreGame::setLoadWBScenario
; Function compile flags: /Odtp
;	COMDAT ?setLoadWBScenario@CvDllPreGame@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_b$ = 12						; size = 1
?setLoadWBScenario@CvDllPreGame@@UAGX_N@Z PROC		; CvDllPreGame::setLoadWBScenario, COMDAT

; 820  : {

	push	ebp
	mov	ebp, esp

; 821  : 	CvPreGame::setLoadWBScenario(b);

	movzx	eax, BYTE PTR _b$[ebp]
	push	eax
	call	?setLoadWBScenario@CvPreGame@@YAX_N@Z	; CvPreGame::setLoadWBScenario
	add	esp, 4

; 822  : }

	pop	ebp
	ret	8
?setLoadWBScenario@CvDllPreGame@@UAGX_N@Z ENDP		; CvDllPreGame::setLoadWBScenario
_TEXT	ENDS
EXTRN	?setOverrideScenarioHandicap@CvPreGame@@YAX_N@Z:PROC ; CvPreGame::setOverrideScenarioHandicap
; Function compile flags: /Odtp
;	COMDAT ?setOverrideScenarioHandicap@CvDllPreGame@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_b$ = 12						; size = 1
?setOverrideScenarioHandicap@CvDllPreGame@@UAGX_N@Z PROC ; CvDllPreGame::setOverrideScenarioHandicap, COMDAT

; 825  : {

	push	ebp
	mov	ebp, esp

; 826  : 	CvPreGame::setOverrideScenarioHandicap(b);

	movzx	eax, BYTE PTR _b$[ebp]
	push	eax
	call	?setOverrideScenarioHandicap@CvPreGame@@YAX_N@Z ; CvPreGame::setOverrideScenarioHandicap
	add	esp, 4

; 827  : }

	pop	ebp
	ret	8
?setOverrideScenarioHandicap@CvDllPreGame@@UAGX_N@Z ENDP ; CvDllPreGame::setOverrideScenarioHandicap
_TEXT	ENDS
EXTRN	?setMapScriptName@CvPreGame@@YAXABVCvString@@@Z:PROC ; CvPreGame::setMapScriptName
; Function compile flags: /Odtp
;	COMDAT ?setMapScriptName@CvDllPreGame@@UAGXABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_s$ = 12						; size = 4
?setMapScriptName@CvDllPreGame@@UAGXABVCvString@@@Z PROC ; CvDllPreGame::setMapScriptName, COMDAT

; 830  : {

	push	ebp
	mov	ebp, esp

; 831  : 	CvPreGame::setMapScriptName(s);

	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?setMapScriptName@CvPreGame@@YAXABVCvString@@@Z ; CvPreGame::setMapScriptName
	add	esp, 4

; 832  : }

	pop	ebp
	ret	8
?setMapScriptName@CvDllPreGame@@UAGXABVCvString@@@Z ENDP ; CvDllPreGame::setMapScriptName
_TEXT	ENDS
EXTRN	?SetMapOption@CvPreGame@@YA_NPBDH@Z:PROC	; CvPreGame::SetMapOption
; Function compile flags: /Odtp
;	COMDAT ?SetMapOption@CvDllPreGame@@UAG_NPBDH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_szOptionName$ = 12					; size = 4
_iValue$ = 16						; size = 4
?SetMapOption@CvDllPreGame@@UAG_NPBDH@Z PROC		; CvDllPreGame::SetMapOption, COMDAT

; 835  : {

	push	ebp
	mov	ebp, esp

; 836  : 	return CvPreGame::SetMapOption(szOptionName, iValue);

	mov	eax, DWORD PTR _iValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szOptionName$[ebp]
	push	ecx
	call	?SetMapOption@CvPreGame@@YA_NPBDH@Z	; CvPreGame::SetMapOption
	add	esp, 8

; 837  : }

	pop	ebp
	ret	12					; 0000000cH
?SetMapOption@CvDllPreGame@@UAG_NPBDH@Z ENDP		; CvDllPreGame::SetMapOption
_TEXT	ENDS
EXTRN	?setMaxCityElimination@CvPreGame@@YAXH@Z:PROC	; CvPreGame::setMaxCityElimination
; Function compile flags: /Odtp
;	COMDAT ?setMaxCityElimination@CvDllPreGame@@UAGXH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_m$ = 12						; size = 4
?setMaxCityElimination@CvDllPreGame@@UAGXH@Z PROC	; CvDllPreGame::setMaxCityElimination, COMDAT

; 845  : {

	push	ebp
	mov	ebp, esp

; 846  : 	CvPreGame::setMaxCityElimination(m);

	mov	eax, DWORD PTR _m$[ebp]
	push	eax
	call	?setMaxCityElimination@CvPreGame@@YAXH@Z ; CvPreGame::setMaxCityElimination
	add	esp, 4

; 847  : }

	pop	ebp
	ret	8
?setMaxCityElimination@CvDllPreGame@@UAGXH@Z ENDP	; CvDllPreGame::setMaxCityElimination
_TEXT	ENDS
EXTRN	?setMaxTurns@CvPreGame@@YAXH@Z:PROC		; CvPreGame::setMaxTurns
; Function compile flags: /Odtp
;	COMDAT ?setMaxTurns@CvDllPreGame@@UAGXH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_maxTurns$ = 12						; size = 4
?setMaxTurns@CvDllPreGame@@UAGXH@Z PROC			; CvDllPreGame::setMaxTurns, COMDAT

; 850  : {

	push	ebp
	mov	ebp, esp

; 851  : 	CvPreGame::setMaxTurns(maxTurns);

	mov	eax, DWORD PTR _maxTurns$[ebp]
	push	eax
	call	?setMaxTurns@CvPreGame@@YAXH@Z		; CvPreGame::setMaxTurns
	add	esp, 4

; 852  : }

	pop	ebp
	ret	8
?setMaxTurns@CvDllPreGame@@UAGXH@Z ENDP			; CvDllPreGame::setMaxTurns
_TEXT	ENDS
EXTRN	?setMinorCivType@CvPreGame@@YAXW4PlayerTypes@@W4MinorCivTypes@@@Z:PROC ; CvPreGame::setMinorCivType
; Function compile flags: /Odtp
;	COMDAT ?setMinorCivType@CvDllPreGame@@UAGXW4PlayerTypes@@W4MinorCivTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_m$ = 16						; size = 4
?setMinorCivType@CvDllPreGame@@UAGXW4PlayerTypes@@W4MinorCivTypes@@@Z PROC ; CvDllPreGame::setMinorCivType, COMDAT

; 855  : {

	push	ebp
	mov	ebp, esp

; 856  : 	CvPreGame::setMinorCivType(p, m);

	mov	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setMinorCivType@CvPreGame@@YAXW4PlayerTypes@@W4MinorCivTypes@@@Z ; CvPreGame::setMinorCivType
	add	esp, 8

; 857  : }

	pop	ebp
	ret	12					; 0000000cH
?setMinorCivType@CvDllPreGame@@UAGXW4PlayerTypes@@W4MinorCivTypes@@@Z ENDP ; CvDllPreGame::setMinorCivType
_TEXT	ENDS
EXTRN	?setMinorCiv@CvPreGame@@YAXW4PlayerTypes@@_N@Z:PROC ; CvPreGame::setMinorCiv
; Function compile flags: /Odtp
;	COMDAT ?setMinorCiv@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_isMinor$ = 16						; size = 1
?setMinorCiv@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z PROC	; CvDllPreGame::setMinorCiv, COMDAT

; 860  : {

	push	ebp
	mov	ebp, esp

; 861  : 	CvPreGame::setMinorCiv(p, isMinor);

	movzx	eax, BYTE PTR _isMinor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setMinorCiv@CvPreGame@@YAXW4PlayerTypes@@_N@Z ; CvPreGame::setMinorCiv
	add	esp, 8

; 862  : }

	pop	ebp
	ret	12					; 0000000cH
?setMinorCiv@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z ENDP	; CvDllPreGame::setMinorCiv
_TEXT	ENDS
EXTRN	?setMultiplayerAIEnabled@CvPreGame@@YAX_N@Z:PROC ; CvPreGame::setMultiplayerAIEnabled
; Function compile flags: /Odtp
;	COMDAT ?setMultiplayerAIEnabled@CvDllPreGame@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_isEnabled$ = 12					; size = 1
?setMultiplayerAIEnabled@CvDllPreGame@@UAGX_N@Z PROC	; CvDllPreGame::setMultiplayerAIEnabled, COMDAT

; 865  : {

	push	ebp
	mov	ebp, esp

; 866  : 	CvPreGame::setMultiplayerAIEnabled(isEnabled);

	movzx	eax, BYTE PTR _isEnabled$[ebp]
	push	eax
	call	?setMultiplayerAIEnabled@CvPreGame@@YAX_N@Z ; CvPreGame::setMultiplayerAIEnabled
	add	esp, 4

; 867  : }

	pop	ebp
	ret	8
?setMultiplayerAIEnabled@CvDllPreGame@@UAGX_N@Z ENDP	; CvDllPreGame::setMultiplayerAIEnabled
_TEXT	ENDS
EXTRN	?setNetID@CvPreGame@@YAXW4PlayerTypes@@H@Z:PROC	; CvPreGame::setNetID
; Function compile flags: /Odtp
;	COMDAT ?setNetID@CvDllPreGame@@UAGXW4PlayerTypes@@H@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_id$ = 16						; size = 4
?setNetID@CvDllPreGame@@UAGXW4PlayerTypes@@H@Z PROC	; CvDllPreGame::setNetID, COMDAT

; 870  : {

	push	ebp
	mov	ebp, esp

; 871  : 	CvPreGame::setNetID(p, id);

	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setNetID@CvPreGame@@YAXW4PlayerTypes@@H@Z ; CvPreGame::setNetID
	add	esp, 8

; 872  : }

	pop	ebp
	ret	12					; 0000000cH
?setNetID@CvDllPreGame@@UAGXW4PlayerTypes@@H@Z ENDP	; CvDllPreGame::setNetID
_TEXT	ENDS
EXTRN	?setNickname@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z:PROC ; CvPreGame::setNickname
; Function compile flags: /Odtp
;	COMDAT ?setNickname@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_n$ = 16						; size = 4
?setNickname@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z PROC ; CvDllPreGame::setNickname, COMDAT

; 875  : {

	push	ebp
	mov	ebp, esp

; 876  : 	CvPreGame::setNickname(p, n);

	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setNickname@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z ; CvPreGame::setNickname
	add	esp, 8

; 877  : }

	pop	ebp
	ret	12					; 0000000cH
?setNickname@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ENDP ; CvDllPreGame::setNickname
_TEXT	ENDS
EXTRN	?setNumMinorCivs@CvPreGame@@YAXH@Z:PROC		; CvPreGame::setNumMinorCivs
; Function compile flags: /Odtp
;	COMDAT ?setNumMinorCivs@CvDllPreGame@@UAGXH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_n$ = 12						; size = 4
?setNumMinorCivs@CvDllPreGame@@UAGXH@Z PROC		; CvDllPreGame::setNumMinorCivs, COMDAT

; 880  : {

	push	ebp
	mov	ebp, esp

; 881  : 	CvPreGame::setNumMinorCivs(n);

	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	call	?setNumMinorCivs@CvPreGame@@YAXH@Z	; CvPreGame::setNumMinorCivs
	add	esp, 4

; 882  : }

	pop	ebp
	ret	8
?setNumMinorCivs@CvDllPreGame@@UAGXH@Z ENDP		; CvDllPreGame::setNumMinorCivs
_TEXT	ENDS
EXTRN	?setPersistSettings@CvPreGame@@YAX_N@Z:PROC	; CvPreGame::setPersistSettings
; Function compile flags: /Odtp
;	COMDAT ?setPersistSettings@CvDllPreGame@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bPersist$ = 12						; size = 1
?setPersistSettings@CvDllPreGame@@UAGX_N@Z PROC		; CvDllPreGame::setPersistSettings, COMDAT

; 885  : {

	push	ebp
	mov	ebp, esp

; 886  : 	CvPreGame::setPersistSettings(bPersist);

	movzx	eax, BYTE PTR _bPersist$[ebp]
	push	eax
	call	?setPersistSettings@CvPreGame@@YAX_N@Z	; CvPreGame::setPersistSettings
	add	esp, 4

; 887  : }

	pop	ebp
	ret	8
?setPersistSettings@CvDllPreGame@@UAGX_N@Z ENDP		; CvDllPreGame::setPersistSettings
_TEXT	ENDS
EXTRN	?setPlayable@CvPreGame@@YAXW4PlayerTypes@@_N@Z:PROC ; CvPreGame::setPlayable
; Function compile flags: /Odtp
;	COMDAT ?setPlayable@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_playable$ = 16						; size = 1
?setPlayable@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z PROC	; CvDllPreGame::setPlayable, COMDAT

; 890  : {

	push	ebp
	mov	ebp, esp

; 891  : 	CvPreGame::setPlayable(p, playable);

	movzx	eax, BYTE PTR _playable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setPlayable@CvPreGame@@YAXW4PlayerTypes@@_N@Z ; CvPreGame::setPlayable
	add	esp, 8

; 892  : }

	pop	ebp
	ret	12					; 0000000cH
?setPlayable@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z ENDP	; CvDllPreGame::setPlayable
_TEXT	ENDS
EXTRN	?setPlayerColor@CvPreGame@@YAXW4PlayerTypes@@W4PlayerColorTypes@@@Z:PROC ; CvPreGame::setPlayerColor
; Function compile flags: /Odtp
;	COMDAT ?setPlayerColor@CvDllPreGame@@UAGXW4PlayerTypes@@W4PlayerColorTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_c$ = 16						; size = 4
?setPlayerColor@CvDllPreGame@@UAGXW4PlayerTypes@@W4PlayerColorTypes@@@Z PROC ; CvDllPreGame::setPlayerColor, COMDAT

; 895  : {

	push	ebp
	mov	ebp, esp

; 896  : 	CvPreGame::setPlayerColor(p, c);

	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setPlayerColor@CvPreGame@@YAXW4PlayerTypes@@W4PlayerColorTypes@@@Z ; CvPreGame::setPlayerColor
	add	esp, 8

; 897  : }

	pop	ebp
	ret	12					; 0000000cH
?setPlayerColor@CvDllPreGame@@UAGXW4PlayerTypes@@W4PlayerColorTypes@@@Z ENDP ; CvDllPreGame::setPlayerColor
_TEXT	ENDS
EXTRN	?setPrivateGame@CvPreGame@@YAX_N@Z:PROC		; CvPreGame::setPrivateGame
; Function compile flags: /Odtp
;	COMDAT ?setPrivateGame@CvDllPreGame@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_isPrivateGame$ = 12					; size = 1
?setPrivateGame@CvDllPreGame@@UAGX_N@Z PROC		; CvDllPreGame::setPrivateGame, COMDAT

; 900  : {

	push	ebp
	mov	ebp, esp

; 901  : 	CvPreGame::setPrivateGame(isPrivateGame);

	movzx	eax, BYTE PTR _isPrivateGame$[ebp]
	push	eax
	call	?setPrivateGame@CvPreGame@@YAX_N@Z	; CvPreGame::setPrivateGame
	add	esp, 4

; 902  : }

	pop	ebp
	ret	8
?setPrivateGame@CvDllPreGame@@UAGX_N@Z ENDP		; CvDllPreGame::setPrivateGame
_TEXT	ENDS
EXTRN	?setQuickCombat@CvPreGame@@YAX_N@Z:PROC		; CvPreGame::setQuickCombat
; Function compile flags: /Odtp
;	COMDAT ?setQuickCombat@CvDllPreGame@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_isQuickCombat$ = 12					; size = 1
?setQuickCombat@CvDllPreGame@@UAGX_N@Z PROC		; CvDllPreGame::setQuickCombat, COMDAT

; 905  : {

	push	ebp
	mov	ebp, esp

; 906  : 	CvPreGame::setQuickCombat(isQuickCombat);

	movzx	eax, BYTE PTR _isQuickCombat$[ebp]
	push	eax
	call	?setQuickCombat@CvPreGame@@YAX_N@Z	; CvPreGame::setQuickCombat
	add	esp, 4

; 907  : }

	pop	ebp
	ret	8
?setQuickCombat@CvDllPreGame@@UAGX_N@Z ENDP		; CvDllPreGame::setQuickCombat
_TEXT	ENDS
EXTRN	?setQuickMovement@CvPreGame@@YAX_N@Z:PROC	; CvPreGame::setQuickMovement
; Function compile flags: /Odtp
;	COMDAT ?setQuickMovement@CvDllPreGame@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_isQuickMovement$ = 12					; size = 1
?setQuickMovement@CvDllPreGame@@UAGX_N@Z PROC		; CvDllPreGame::setQuickMovement, COMDAT

; 910  : {

	push	ebp
	mov	ebp, esp

; 911  : 	CvPreGame::setQuickMovement(isQuickMovement);

	movzx	eax, BYTE PTR _isQuickMovement$[ebp]
	push	eax
	call	?setQuickMovement@CvPreGame@@YAX_N@Z	; CvPreGame::setQuickMovement
	add	esp, 4

; 912  : }

	pop	ebp
	ret	8
?setQuickMovement@CvDllPreGame@@UAGX_N@Z ENDP		; CvDllPreGame::setQuickMovement
_TEXT	ENDS
EXTRN	?setQuickHandicap@CvPreGame@@YAXW4HandicapTypes@@@Z:PROC ; CvPreGame::setQuickHandicap
; Function compile flags: /Odtp
;	COMDAT ?setQuickHandicap@CvDllPreGame@@UAGXW4HandicapTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_h$ = 12						; size = 4
?setQuickHandicap@CvDllPreGame@@UAGXW4HandicapTypes@@@Z PROC ; CvDllPreGame::setQuickHandicap, COMDAT

; 915  : {

	push	ebp
	mov	ebp, esp

; 916  : 	CvPreGame::setQuickHandicap(h);

	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	?setQuickHandicap@CvPreGame@@YAXW4HandicapTypes@@@Z ; CvPreGame::setQuickHandicap
	add	esp, 4

; 917  : }

	pop	ebp
	ret	8
?setQuickHandicap@CvDllPreGame@@UAGXW4HandicapTypes@@@Z ENDP ; CvDllPreGame::setQuickHandicap
_TEXT	ENDS
EXTRN	?setQuickHandicap@CvPreGame@@YAXABVCvString@@@Z:PROC ; CvPreGame::setQuickHandicap
; Function compile flags: /Odtp
;	COMDAT ?setQuickHandicap@CvDllPreGame@@UAGXABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_h$ = 12						; size = 4
?setQuickHandicap@CvDllPreGame@@UAGXABVCvString@@@Z PROC ; CvDllPreGame::setQuickHandicap, COMDAT

; 920  : {

	push	ebp
	mov	ebp, esp

; 921  : 	CvPreGame::setQuickHandicap(h);

	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	?setQuickHandicap@CvPreGame@@YAXABVCvString@@@Z ; CvPreGame::setQuickHandicap
	add	esp, 4

; 922  : }

	pop	ebp
	ret	8
?setQuickHandicap@CvDllPreGame@@UAGXABVCvString@@@Z ENDP ; CvDllPreGame::setQuickHandicap
_TEXT	ENDS
EXTRN	?setQuickstart@CvPreGame@@YAX_N@Z:PROC		; CvPreGame::setQuickstart
; Function compile flags: /Odtp
;	COMDAT ?setQuickstart@CvDllPreGame@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_isQuickStart$ = 12					; size = 1
?setQuickstart@CvDllPreGame@@UAGX_N@Z PROC		; CvDllPreGame::setQuickstart, COMDAT

; 925  : {

	push	ebp
	mov	ebp, esp

; 926  : 	CvPreGame::setQuickstart(isQuickStart);

	movzx	eax, BYTE PTR _isQuickStart$[ebp]
	push	eax
	call	?setQuickstart@CvPreGame@@YAX_N@Z	; CvPreGame::setQuickstart
	add	esp, 4

; 927  : }

	pop	ebp
	ret	8
?setQuickstart@CvDllPreGame@@UAGX_N@Z ENDP		; CvDllPreGame::setQuickstart
_TEXT	ENDS
EXTRN	?setRandomWorldSize@CvPreGame@@YAX_N@Z:PROC	; CvPreGame::setRandomWorldSize
; Function compile flags: /Odtp
;	COMDAT ?setRandomWorldSize@CvDllPreGame@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_isRandomWorldSize$ = 12				; size = 1
?setRandomWorldSize@CvDllPreGame@@UAGX_N@Z PROC		; CvDllPreGame::setRandomWorldSize, COMDAT

; 930  : {

	push	ebp
	mov	ebp, esp

; 931  : 	CvPreGame::setRandomWorldSize(isRandomWorldSize);

	movzx	eax, BYTE PTR _isRandomWorldSize$[ebp]
	push	eax
	call	?setRandomWorldSize@CvPreGame@@YAX_N@Z	; CvPreGame::setRandomWorldSize
	add	esp, 4

; 932  : }

	pop	ebp
	ret	8
?setRandomWorldSize@CvDllPreGame@@UAGX_N@Z ENDP		; CvDllPreGame::setRandomWorldSize
_TEXT	ENDS
EXTRN	?setRandomMapScript@CvPreGame@@YAX_N@Z:PROC	; CvPreGame::setRandomMapScript
; Function compile flags: /Odtp
;	COMDAT ?setRandomMapScript@CvDllPreGame@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_isRandomWorldScript$ = 12				; size = 1
?setRandomMapScript@CvDllPreGame@@UAGX_N@Z PROC		; CvDllPreGame::setRandomMapScript, COMDAT

; 935  : {

	push	ebp
	mov	ebp, esp

; 936  : 	CvPreGame::setRandomMapScript(isRandomWorldScript);

	movzx	eax, BYTE PTR _isRandomWorldScript$[ebp]
	push	eax
	call	?setRandomMapScript@CvPreGame@@YAX_N@Z	; CvPreGame::setRandomMapScript
	add	esp, 4

; 937  : }

	pop	ebp
	ret	8
?setRandomMapScript@CvDllPreGame@@UAGX_N@Z ENDP		; CvDllPreGame::setRandomMapScript
_TEXT	ENDS
EXTRN	?setReady@CvPreGame@@YAXW4PlayerTypes@@_N@Z:PROC ; CvPreGame::setReady
; Function compile flags: /Odtp
;	COMDAT ?setReady@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_bIsReady$ = 16						; size = 1
?setReady@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z PROC	; CvDllPreGame::setReady, COMDAT

; 940  : {

	push	ebp
	mov	ebp, esp

; 941  : 	CvPreGame::setReady(p, bIsReady);

	movzx	eax, BYTE PTR _bIsReady$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setReady@CvPreGame@@YAXW4PlayerTypes@@_N@Z ; CvPreGame::setReady
	add	esp, 8

; 942  : }

	pop	ebp
	ret	12					; 0000000cH
?setReady@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z ENDP	; CvDllPreGame::setReady
_TEXT	ENDS
EXTRN	?setSeaLevel@CvPreGame@@YAXW4SeaLevelTypes@@@Z:PROC ; CvPreGame::setSeaLevel
; Function compile flags: /Odtp
;	COMDAT ?setSeaLevel@CvDllPreGame@@UAGXW4SeaLevelTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_s$ = 12						; size = 4
?setSeaLevel@CvDllPreGame@@UAGXW4SeaLevelTypes@@@Z PROC	; CvDllPreGame::setSeaLevel, COMDAT

; 945  : {

	push	ebp
	mov	ebp, esp

; 946  : 	CvPreGame::setSeaLevel(s);

	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?setSeaLevel@CvPreGame@@YAXW4SeaLevelTypes@@@Z ; CvPreGame::setSeaLevel
	add	esp, 4

; 947  : }

	pop	ebp
	ret	8
?setSeaLevel@CvDllPreGame@@UAGXW4SeaLevelTypes@@@Z ENDP	; CvDllPreGame::setSeaLevel
_TEXT	ENDS
EXTRN	?setSeaLevel@CvPreGame@@YAXABVCvString@@@Z:PROC	; CvPreGame::setSeaLevel
; Function compile flags: /Odtp
;	COMDAT ?setSeaLevel@CvDllPreGame@@UAGXABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_s$ = 12						; size = 4
?setSeaLevel@CvDllPreGame@@UAGXABVCvString@@@Z PROC	; CvDllPreGame::setSeaLevel, COMDAT

; 950  : {

	push	ebp
	mov	ebp, esp

; 951  : 	CvPreGame::setSeaLevel(s);

	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?setSeaLevel@CvPreGame@@YAXABVCvString@@@Z ; CvPreGame::setSeaLevel
	add	esp, 4

; 952  : }

	pop	ebp
	ret	8
?setSeaLevel@CvDllPreGame@@UAGXABVCvString@@@Z ENDP	; CvDllPreGame::setSeaLevel
_TEXT	ENDS
EXTRN	?setSlotClaim@CvPreGame@@YAXW4PlayerTypes@@W4SlotClaim@@@Z:PROC ; CvPreGame::setSlotClaim
; Function compile flags: /Odtp
;	COMDAT ?setSlotClaim@CvDllPreGame@@UAGXW4PlayerTypes@@W4SlotClaim@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_c$ = 16						; size = 4
?setSlotClaim@CvDllPreGame@@UAGXW4PlayerTypes@@W4SlotClaim@@@Z PROC ; CvDllPreGame::setSlotClaim, COMDAT

; 955  : {

	push	ebp
	mov	ebp, esp

; 956  : 	CvPreGame::setSlotClaim(p, c);

	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setSlotClaim@CvPreGame@@YAXW4PlayerTypes@@W4SlotClaim@@@Z ; CvPreGame::setSlotClaim
	add	esp, 8

; 957  : }

	pop	ebp
	ret	12					; 0000000cH
?setSlotClaim@CvDllPreGame@@UAGXW4PlayerTypes@@W4SlotClaim@@@Z ENDP ; CvDllPreGame::setSlotClaim
_TEXT	ENDS
EXTRN	?setSlotStatus@CvPreGame@@YAXW4PlayerTypes@@W4SlotStatus@@@Z:PROC ; CvPreGame::setSlotStatus
; Function compile flags: /Odtp
;	COMDAT ?setSlotStatus@CvDllPreGame@@UAGXW4PlayerTypes@@W4SlotStatus@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_eID$ = 12						; size = 4
_eSlotStatus$ = 16					; size = 4
?setSlotStatus@CvDllPreGame@@UAGXW4PlayerTypes@@W4SlotStatus@@@Z PROC ; CvDllPreGame::setSlotStatus, COMDAT

; 960  : {

	push	ebp
	mov	ebp, esp

; 961  : 	CvPreGame::setSlotStatus(eID, eSlotStatus);

	mov	eax, DWORD PTR _eSlotStatus$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eID$[ebp]
	push	ecx
	call	?setSlotStatus@CvPreGame@@YAXW4PlayerTypes@@W4SlotStatus@@@Z ; CvPreGame::setSlotStatus
	add	esp, 8

; 962  : }

	pop	ebp
	ret	12					; 0000000cH
?setSlotStatus@CvDllPreGame@@UAGXW4PlayerTypes@@W4SlotStatus@@@Z ENDP ; CvDllPreGame::setSlotStatus
_TEXT	ENDS
EXTRN	?setSyncRandomSeed@CvPreGame@@YAXI@Z:PROC	; CvPreGame::setSyncRandomSeed
; Function compile flags: /Odtp
;	COMDAT ?setSyncRandomSeed@CvDllPreGame@@UAGXI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_newSeed$ = 12						; size = 4
?setSyncRandomSeed@CvDllPreGame@@UAGXI@Z PROC		; CvDllPreGame::setSyncRandomSeed, COMDAT

; 965  : {

	push	ebp
	mov	ebp, esp

; 966  : 	CvPreGame::setSyncRandomSeed(newSeed);

	mov	eax, DWORD PTR _newSeed$[ebp]
	push	eax
	call	?setSyncRandomSeed@CvPreGame@@YAXI@Z	; CvPreGame::setSyncRandomSeed
	add	esp, 4

; 967  : }

	pop	ebp
	ret	8
?setSyncRandomSeed@CvDllPreGame@@UAGXI@Z ENDP		; CvDllPreGame::setSyncRandomSeed
_TEXT	ENDS
EXTRN	?setTeamType@CvPreGame@@YAXW4PlayerTypes@@W4TeamTypes@@@Z:PROC ; CvPreGame::setTeamType
; Function compile flags: /Odtp
;	COMDAT ?setTeamType@CvDllPreGame@@UAGXW4PlayerTypes@@W4TeamTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_t$ = 16						; size = 4
?setTeamType@CvDllPreGame@@UAGXW4PlayerTypes@@W4TeamTypes@@@Z PROC ; CvDllPreGame::setTeamType, COMDAT

; 970  : {

	push	ebp
	mov	ebp, esp

; 971  : 	CvPreGame::setTeamType(p, t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setTeamType@CvPreGame@@YAXW4PlayerTypes@@W4TeamTypes@@@Z ; CvPreGame::setTeamType
	add	esp, 8

; 972  : }

	pop	ebp
	ret	12					; 0000000cH
?setTeamType@CvDllPreGame@@UAGXW4PlayerTypes@@W4TeamTypes@@@Z ENDP ; CvDllPreGame::setTeamType
_TEXT	ENDS
EXTRN	?setTransferredMap@CvPreGame@@YAX_N@Z:PROC	; CvPreGame::setTransferredMap
; Function compile flags: /Odtp
;	COMDAT ?setTransferredMap@CvDllPreGame@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_transferred$ = 12					; size = 1
?setTransferredMap@CvDllPreGame@@UAGX_N@Z PROC		; CvDllPreGame::setTransferredMap, COMDAT

; 975  : {

	push	ebp
	mov	ebp, esp

; 976  : 	CvPreGame::setTransferredMap(transferred);

	movzx	eax, BYTE PTR _transferred$[ebp]
	push	eax
	call	?setTransferredMap@CvPreGame@@YAX_N@Z	; CvPreGame::setTransferredMap
	add	esp, 4

; 977  : }

	pop	ebp
	ret	8
?setTransferredMap@CvDllPreGame@@UAGX_N@Z ENDP		; CvDllPreGame::setTransferredMap
_TEXT	ENDS
EXTRN	?setTurnTimer@CvPreGame@@YAXW4TurnTimerTypes@@@Z:PROC ; CvPreGame::setTurnTimer
; Function compile flags: /Odtp
;	COMDAT ?setTurnTimer@CvDllPreGame@@UAGXW4TurnTimerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_t$ = 12						; size = 4
?setTurnTimer@CvDllPreGame@@UAGXW4TurnTimerTypes@@@Z PROC ; CvDllPreGame::setTurnTimer, COMDAT

; 980  : {

	push	ebp
	mov	ebp, esp

; 981  : 	CvPreGame::setTurnTimer(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	call	?setTurnTimer@CvPreGame@@YAXW4TurnTimerTypes@@@Z ; CvPreGame::setTurnTimer
	add	esp, 4

; 982  : }

	pop	ebp
	ret	8
?setTurnTimer@CvDllPreGame@@UAGXW4TurnTimerTypes@@@Z ENDP ; CvDllPreGame::setTurnTimer
_TEXT	ENDS
EXTRN	?setTurnTimer@CvPreGame@@YAXABVCvString@@@Z:PROC ; CvPreGame::setTurnTimer
; Function compile flags: /Odtp
;	COMDAT ?setTurnTimer@CvDllPreGame@@UAGXABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_t$ = 12						; size = 4
?setTurnTimer@CvDllPreGame@@UAGXABVCvString@@@Z PROC	; CvDllPreGame::setTurnTimer, COMDAT

; 985  : {

	push	ebp
	mov	ebp, esp

; 986  : 	CvPreGame::setTurnTimer(t);

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	call	?setTurnTimer@CvPreGame@@YAXABVCvString@@@Z ; CvPreGame::setTurnTimer
	add	esp, 4

; 987  : }

	pop	ebp
	ret	8
?setTurnTimer@CvDllPreGame@@UAGXABVCvString@@@Z ENDP	; CvDllPreGame::setTurnTimer
_TEXT	ENDS
EXTRN	?SetCityScreenBlocked@CvPreGame@@YAX_N@Z:PROC	; CvPreGame::SetCityScreenBlocked
; Function compile flags: /Odtp
;	COMDAT ?SetCityScreenBlocked@CvDllPreGame@@UAGX_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bCityScreenBlocked$ = 12				; size = 1
?SetCityScreenBlocked@CvDllPreGame@@UAGX_N@Z PROC	; CvDllPreGame::SetCityScreenBlocked, COMDAT

; 990  : {

	push	ebp
	mov	ebp, esp

; 991  : 	CvPreGame::SetCityScreenBlocked(bCityScreenBlocked);

	movzx	eax, BYTE PTR _bCityScreenBlocked$[ebp]
	push	eax
	call	?SetCityScreenBlocked@CvPreGame@@YAX_N@Z ; CvPreGame::SetCityScreenBlocked
	add	esp, 4

; 992  : }

	pop	ebp
	ret	8
?SetCityScreenBlocked@CvDllPreGame@@UAGX_N@Z ENDP	; CvDllPreGame::SetCityScreenBlocked
_TEXT	ENDS
EXTRN	?setVersionString@CvPreGame@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; CvPreGame::setVersionString
; Function compile flags: /Odtp
;	COMDAT ?setVersionString@CvDllPreGame@@UAGXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_v$ = 12						; size = 4
?setVersionString@CvDllPreGame@@UAGXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CvDllPreGame::setVersionString, COMDAT

; 995  : {

	push	ebp
	mov	ebp, esp

; 996  : 	CvPreGame::setVersionString(v);

	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	call	?setVersionString@CvPreGame@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvPreGame::setVersionString
	add	esp, 4

; 997  : }

	pop	ebp
	ret	8
?setVersionString@CvDllPreGame@@UAGXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CvDllPreGame::setVersionString
_TEXT	ENDS
EXTRN	?setVictory@CvPreGame@@YAXW4VictoryTypes@@_N@Z:PROC ; CvPreGame::setVictory
; Function compile flags: /Odtp
;	COMDAT ?setVictory@CvDllPreGame@@UAGXW4VictoryTypes@@_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_v$ = 12						; size = 4
_isValid$ = 16						; size = 1
?setVictory@CvDllPreGame@@UAGXW4VictoryTypes@@_N@Z PROC	; CvDllPreGame::setVictory, COMDAT

; 1000 : {

	push	ebp
	mov	ebp, esp

; 1001 : 	CvPreGame::setVictory(v, isValid);

	movzx	eax, BYTE PTR _isValid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	call	?setVictory@CvPreGame@@YAXW4VictoryTypes@@_N@Z ; CvPreGame::setVictory
	add	esp, 8

; 1002 : }

	pop	ebp
	ret	12					; 0000000cH
?setVictory@CvDllPreGame@@UAGXW4VictoryTypes@@_N@Z ENDP	; CvDllPreGame::setVictory
_TEXT	ENDS
EXTRN	?setVictories@CvPreGame@@YAXABV?$vector@_NV?$allocator@_N@std@@@std@@@Z:PROC ; CvPreGame::setVictories
; Function compile flags: /Odtp
;	COMDAT ?setVictories@CvDllPreGame@@UAGXABV?$vector@_NV?$allocator@_N@std@@@std@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_v$ = 12						; size = 4
?setVictories@CvDllPreGame@@UAGXABV?$vector@_NV?$allocator@_N@std@@@std@@@Z PROC ; CvDllPreGame::setVictories, COMDAT

; 1005 : {

	push	ebp
	mov	ebp, esp

; 1006 : 	CvPreGame::setVictories(v);

	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	call	?setVictories@CvPreGame@@YAXABV?$vector@_NV?$allocator@_N@std@@@std@@@Z ; CvPreGame::setVictories
	add	esp, 4

; 1007 : }

	pop	ebp
	ret	8
?setVictories@CvDllPreGame@@UAGXABV?$vector@_NV?$allocator@_N@std@@@std@@@Z ENDP ; CvDllPreGame::setVictories
_TEXT	ENDS
EXTRN	?setWhiteFlag@CvPreGame@@YAXW4PlayerTypes@@_N@Z:PROC ; CvPreGame::setWhiteFlag
; Function compile flags: /Odtp
;	COMDAT ?setWhiteFlag@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_flag$ = 16						; size = 1
?setWhiteFlag@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z PROC ; CvDllPreGame::setWhiteFlag, COMDAT

; 1010 : {

	push	ebp
	mov	ebp, esp

; 1011 : 	CvPreGame::setWhiteFlag(p, flag);

	movzx	eax, BYTE PTR _flag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setWhiteFlag@CvPreGame@@YAXW4PlayerTypes@@_N@Z ; CvPreGame::setWhiteFlag
	add	esp, 8

; 1012 : }

	pop	ebp
	ret	12					; 0000000cH
?setWhiteFlag@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z ENDP ; CvDllPreGame::setWhiteFlag
_TEXT	ENDS
EXTRN	?setWorldSize@CvPreGame@@YAXW4WorldSizeTypes@@_N@Z:PROC ; CvPreGame::setWorldSize
; Function compile flags: /Odtp
;	COMDAT ?setWorldSize@CvDllPreGame@@UAGXW4WorldSizeTypes@@_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_w$ = 12						; size = 4
_bResetSlots$ = 16					; size = 1
?setWorldSize@CvDllPreGame@@UAGXW4WorldSizeTypes@@_N@Z PROC ; CvDllPreGame::setWorldSize, COMDAT

; 1015 : {

	push	ebp
	mov	ebp, esp

; 1016 : 	CvPreGame::setWorldSize(w, bResetSlots);

	movzx	eax, BYTE PTR _bResetSlots$[ebp]
	push	eax
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	call	?setWorldSize@CvPreGame@@YAXW4WorldSizeTypes@@_N@Z ; CvPreGame::setWorldSize
	add	esp, 8

; 1017 : }

	pop	ebp
	ret	12					; 0000000cH
?setWorldSize@CvDllPreGame@@UAGXW4WorldSizeTypes@@_N@Z ENDP ; CvDllPreGame::setWorldSize
_TEXT	ENDS
EXTRN	?setWorldSize@CvPreGame@@YAXABVCvString@@@Z:PROC ; CvPreGame::setWorldSize
; Function compile flags: /Odtp
;	COMDAT ?setWorldSize@CvDllPreGame@@UAGXABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_w$ = 12						; size = 4
?setWorldSize@CvDllPreGame@@UAGXABVCvString@@@Z PROC	; CvDllPreGame::setWorldSize, COMDAT

; 1020 : {

	push	ebp
	mov	ebp, esp

; 1021 : 	CvPreGame::setWorldSize(w);

	mov	eax, DWORD PTR _w$[ebp]
	push	eax
	call	?setWorldSize@CvPreGame@@YAXABVCvString@@@Z ; CvPreGame::setWorldSize
	add	esp, 4

; 1022 : }

	pop	ebp
	ret	8
?setWorldSize@CvDllPreGame@@UAGXABVCvString@@@Z ENDP	; CvDllPreGame::setWorldSize
_TEXT	ENDS
EXTRN	?slotClaim@CvPreGame@@YA?AW4SlotClaim@@W4PlayerTypes@@@Z:PROC ; CvPreGame::slotClaim
; Function compile flags: /Odtp
;	COMDAT ?slotClaim@CvDllPreGame@@UAG?AW4SlotClaim@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?slotClaim@CvDllPreGame@@UAG?AW4SlotClaim@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::slotClaim, COMDAT

; 1025 : {

	push	ebp
	mov	ebp, esp

; 1026 : 	return CvPreGame::slotClaim(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?slotClaim@CvPreGame@@YA?AW4SlotClaim@@W4PlayerTypes@@@Z ; CvPreGame::slotClaim
	add	esp, 4

; 1027 : }

	pop	ebp
	ret	8
?slotClaim@CvDllPreGame@@UAG?AW4SlotClaim@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::slotClaim
_TEXT	ENDS
EXTRN	?slotStatus@CvPreGame@@YA?AW4SlotStatus@@W4PlayerTypes@@@Z:PROC ; CvPreGame::slotStatus
; Function compile flags: /Odtp
;	COMDAT ?slotStatus@CvDllPreGame@@UAG?AW4SlotStatus@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_eID$ = 12						; size = 4
?slotStatus@CvDllPreGame@@UAG?AW4SlotStatus@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::slotStatus, COMDAT

; 1030 : {

	push	ebp
	mov	ebp, esp

; 1031 : 	return CvPreGame::slotStatus(eID);

	mov	eax, DWORD PTR _eID$[ebp]
	push	eax
	call	?slotStatus@CvPreGame@@YA?AW4SlotStatus@@W4PlayerTypes@@@Z ; CvPreGame::slotStatus
	add	esp, 4

; 1032 : }

	pop	ebp
	ret	8
?slotStatus@CvDllPreGame@@UAG?AW4SlotStatus@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::slotStatus
_TEXT	ENDS
EXTRN	?syncRandomSeed@CvPreGame@@YAIXZ:PROC		; CvPreGame::syncRandomSeed
; Function compile flags: /Odtp
;	COMDAT ?syncRandomSeed@CvDllPreGame@@UAGIXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?syncRandomSeed@CvDllPreGame@@UAGIXZ PROC		; CvDllPreGame::syncRandomSeed, COMDAT

; 1035 : {

	push	ebp
	mov	ebp, esp

; 1036 : 	return CvPreGame::syncRandomSeed();

	call	?syncRandomSeed@CvPreGame@@YAIXZ	; CvPreGame::syncRandomSeed

; 1037 : }

	pop	ebp
	ret	4
?syncRandomSeed@CvDllPreGame@@UAGIXZ ENDP		; CvDllPreGame::syncRandomSeed
_TEXT	ENDS
EXTRN	?transferredMap@CvPreGame@@YA_NXZ:PROC		; CvPreGame::transferredMap
; Function compile flags: /Odtp
;	COMDAT ?transferredMap@CvDllPreGame@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?transferredMap@CvDllPreGame@@UAG_NXZ PROC		; CvDllPreGame::transferredMap, COMDAT

; 1040 : {

	push	ebp
	mov	ebp, esp

; 1041 : 	return CvPreGame::transferredMap();

	call	?transferredMap@CvPreGame@@YA_NXZ	; CvPreGame::transferredMap

; 1042 : }

	pop	ebp
	ret	4
?transferredMap@CvDllPreGame@@UAG_NXZ ENDP		; CvDllPreGame::transferredMap
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?teamType@CvDllPreGame@@UAG?AW4TeamTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?teamType@CvDllPreGame@@UAG?AW4TeamTypes@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::teamType, COMDAT

; 1045 : {

	push	ebp
	mov	ebp, esp

; 1046 : 	return CvPreGame::teamType(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4

; 1047 : }

	pop	ebp
	ret	8
?teamType@CvDllPreGame@@UAG?AW4TeamTypes@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::teamType
_TEXT	ENDS
EXTRN	?turnTimer@CvPreGame@@YA?AW4TurnTimerTypes@@XZ:PROC ; CvPreGame::turnTimer
; Function compile flags: /Odtp
;	COMDAT ?turnTimer@CvDllPreGame@@UAG?AW4TurnTimerTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?turnTimer@CvDllPreGame@@UAG?AW4TurnTimerTypes@@XZ PROC	; CvDllPreGame::turnTimer, COMDAT

; 1050 : {

	push	ebp
	mov	ebp, esp

; 1051 : 	return CvPreGame::turnTimer();

	call	?turnTimer@CvPreGame@@YA?AW4TurnTimerTypes@@XZ ; CvPreGame::turnTimer

; 1052 : }

	pop	ebp
	ret	4
?turnTimer@CvDllPreGame@@UAG?AW4TurnTimerTypes@@XZ ENDP	; CvDllPreGame::turnTimer
_TEXT	ENDS
EXTRN	?versionString@CvPreGame@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:PROC ; CvPreGame::versionString
; Function compile flags: /Odtp
;	COMDAT ?versionString@CvDllPreGame@@UAG?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
$T221866 = -4						; size = 4
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
?versionString@CvDllPreGame@@UAG?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CvDllPreGame::versionString, COMDAT

; 1055 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR $T221866[ebp], 0

; 1056 : 	return CvPreGame::versionString();

	call	?versionString@CvPreGame@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CvPreGame::versionString
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T221866[ebp]
	or	eax, 1
	mov	DWORD PTR $T221866[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1057 : }

	mov	esp, ebp
	pop	ebp
	ret	8
?versionString@CvDllPreGame@@UAG?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CvDllPreGame::versionString
_TEXT	ENDS
EXTRN	?worldSize@CvPreGame@@YA?AW4WorldSizeTypes@@XZ:PROC ; CvPreGame::worldSize
; Function compile flags: /Odtp
;	COMDAT ?worldSize@CvDllPreGame@@UAG?AW4WorldSizeTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?worldSize@CvDllPreGame@@UAG?AW4WorldSizeTypes@@XZ PROC	; CvDllPreGame::worldSize, COMDAT

; 1060 : {

	push	ebp
	mov	ebp, esp

; 1061 : 	return CvPreGame::worldSize();

	call	?worldSize@CvPreGame@@YA?AW4WorldSizeTypes@@XZ ; CvPreGame::worldSize

; 1062 : }

	pop	ebp
	ret	4
?worldSize@CvDllPreGame@@UAG?AW4WorldSizeTypes@@XZ ENDP	; CvDllPreGame::worldSize
_TEXT	ENDS
EXTRN	??3CvDllWorldInfo@@SAXPAX@Z:PROC		; CvDllWorldInfo::operator delete
EXTRN	??0CvDllWorldInfo@@QAE@PAVCvWorldInfo@@@Z:PROC	; CvDllWorldInfo::CvDllWorldInfo
EXTRN	??2CvDllWorldInfo@@SAPAXI@Z:PROC		; CvDllWorldInfo::operator new
EXTRN	?worldInfo@CvPreGame@@YAABVCvWorldInfo@@XZ:PROC	; CvPreGame::worldInfo
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetWorldInfo@CvDllPreGame@@UAGPAVICvWorldInfo1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetWorldInfo@CvDllPreGame@@UAGPAVICvWorldInfo1@@XZ$0
__ehfuncinfo$?GetWorldInfo@CvDllPreGame@@UAGPAVICvWorldInfo1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetWorldInfo@CvDllPreGame@@UAGPAVICvWorldInfo1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetWorldInfo@CvDllPreGame@@UAGPAVICvWorldInfo1@@XZ
_TEXT	SEGMENT
tv76 = -32						; size = 4
$T221873 = -28						; size = 4
$T221872 = -24						; size = 4
_pWorldInfo$ = -20					; size = 4
_kWorldInfo$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?GetWorldInfo@CvDllPreGame@@UAGPAVICvWorldInfo1@@XZ PROC ; CvDllPreGame::GetWorldInfo, COMDAT

; 1065 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetWorldInfo@CvDllPreGame@@UAGPAVICvWorldInfo1@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1066 : 	const CvWorldInfo& kWorldInfo = CvPreGame::worldInfo();

	call	?worldInfo@CvPreGame@@YAABVCvWorldInfo@@XZ ; CvPreGame::worldInfo
	mov	DWORD PTR _kWorldInfo$[ebp], eax

; 1067 : 	const CvWorldInfo* pWorldInfo = &(kWorldInfo);

	mov	eax, DWORD PTR _kWorldInfo$[ebp]
	mov	DWORD PTR _pWorldInfo$[ebp], eax

; 1068 : 	return new CvDllWorldInfo(const_cast<CvWorldInfo*>(pWorldInfo));

	push	12					; 0000000cH
	call	??2CvDllWorldInfo@@SAPAXI@Z		; CvDllWorldInfo::operator new
	add	esp, 4
	mov	DWORD PTR $T221873[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T221873[ebp], 0
	je	SHORT $LN3@GetWorldIn
	mov	ecx, DWORD PTR _pWorldInfo$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T221873[ebp]
	call	??0CvDllWorldInfo@@QAE@PAVCvWorldInfo@@@Z ; CvDllWorldInfo::CvDllWorldInfo
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@GetWorldIn
$LN3@GetWorldIn:
	mov	DWORD PTR tv76[ebp], 0
$LN4@GetWorldIn:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T221872[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T221872[ebp]

; 1069 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetWorldInfo@CvDllPreGame@@UAGPAVICvWorldInfo1@@XZ$0:
	mov	eax, DWORD PTR $T221873[ebp]
	push	eax
	call	??3CvDllWorldInfo@@SAXPAX@Z		; CvDllWorldInfo::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetWorldInfo@CvDllPreGame@@UAGPAVICvWorldInfo1@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetWorldInfo@CvDllPreGame@@UAGPAVICvWorldInfo1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetWorldInfo@CvDllPreGame@@UAGPAVICvWorldInfo1@@XZ ENDP ; CvDllPreGame::GetWorldInfo
EXTRN	?write@CvPreGame@@YAXAAVFDataStream@@@Z:PROC	; CvPreGame::write
; Function compile flags: /Odtp
;	COMDAT ?write@CvDllPreGame@@UAGXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_saveTo$ = 12						; size = 4
?write@CvDllPreGame@@UAGXAAVFDataStream@@@Z PROC	; CvDllPreGame::write, COMDAT

; 1072 : {

	push	ebp
	mov	ebp, esp

; 1073 : 	CvPreGame::write(saveTo);

	mov	eax, DWORD PTR _saveTo$[ebp]
	push	eax
	call	?write@CvPreGame@@YAXAAVFDataStream@@@Z	; CvPreGame::write
	add	esp, 4

; 1074 : }

	pop	ebp
	ret	8
?write@CvDllPreGame@@UAGXAAVFDataStream@@@Z ENDP	; CvDllPreGame::write
_TEXT	ENDS
EXTRN	?getActiveSlotCount@CvPreGame@@YAHXZ:PROC	; CvPreGame::getActiveSlotCount
; Function compile flags: /Odtp
;	COMDAT ?getActiveSlotCount@CvDllPreGame@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?getActiveSlotCount@CvDllPreGame@@UAGHXZ PROC		; CvDllPreGame::getActiveSlotCount, COMDAT

; 1077 : {

	push	ebp
	mov	ebp, esp

; 1078 : 	return CvPreGame::getActiveSlotCount();

	call	?getActiveSlotCount@CvPreGame@@YAHXZ	; CvPreGame::getActiveSlotCount

; 1079 : }

	pop	ebp
	ret	4
?getActiveSlotCount@CvDllPreGame@@UAGHXZ ENDP		; CvDllPreGame::getActiveSlotCount
_TEXT	ENDS
EXTRN	?readActiveSlotCountFromSaveGame@CvPreGame@@YAHAAVFDataStream@@_N@Z:PROC ; CvPreGame::readActiveSlotCountFromSaveGame
; Function compile flags: /Odtp
;	COMDAT ?readActiveSlotCountFromSaveGame@CvDllPreGame@@UAGHAAVFDataStream@@_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_loadFrom$ = 12						; size = 4
_bReadVersion$ = 16					; size = 1
?readActiveSlotCountFromSaveGame@CvDllPreGame@@UAGHAAVFDataStream@@_N@Z PROC ; CvDllPreGame::readActiveSlotCountFromSaveGame, COMDAT

; 1082 : {

	push	ebp
	mov	ebp, esp

; 1083 : 	return CvPreGame::readActiveSlotCountFromSaveGame(loadFrom, bReadVersion);

	movzx	eax, BYTE PTR _bReadVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	push	ecx
	call	?readActiveSlotCountFromSaveGame@CvPreGame@@YAHAAVFDataStream@@_N@Z ; CvPreGame::readActiveSlotCountFromSaveGame
	add	esp, 8

; 1084 : }

	pop	ebp
	ret	12					; 0000000cH
?readActiveSlotCountFromSaveGame@CvDllPreGame@@UAGHAAVFDataStream@@_N@Z ENDP ; CvDllPreGame::readActiveSlotCountFromSaveGame
_TEXT	ENDS
EXTRN	?loadFileStorage@CvPreGame@@YA?AW4StorageLocation@@XZ:PROC ; CvPreGame::loadFileStorage
; Function compile flags: /Odtp
;	COMDAT ?LoadFileStorage@CvDllPreGame@@UAG?AW4StorageLocation@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?LoadFileStorage@CvDllPreGame@@UAG?AW4StorageLocation@@XZ PROC ; CvDllPreGame::LoadFileStorage, COMDAT

; 1087 : {

	push	ebp
	mov	ebp, esp

; 1088 : 	return CvPreGame::loadFileStorage();

	call	?loadFileStorage@CvPreGame@@YA?AW4StorageLocation@@XZ ; CvPreGame::loadFileStorage

; 1089 : }

	pop	ebp
	ret	4
?LoadFileStorage@CvDllPreGame@@UAG?AW4StorageLocation@@XZ ENDP ; CvDllPreGame::LoadFileStorage
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	?setLoadFileName@CvPreGame@@YAXABVCvString@@W4StorageLocation@@@Z:PROC ; CvPreGame::setLoadFileName
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetLoadFileName@CvDllPreGame@@UAGXPBDW4StorageLocation@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetLoadFileName@CvDllPreGame@@UAGXPBDW4StorageLocation@@@Z$0
__ehfuncinfo$?SetLoadFileName@CvDllPreGame@@UAGXPBDW4StorageLocation@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetLoadFileName@CvDllPreGame@@UAGXPBDW4StorageLocation@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllpregame.cpp
xdata$x	ENDS
;	COMDAT ?SetLoadFileName@CvDllPreGame@@UAGXPBDW4StorageLocation@@@Z
_TEXT	SEGMENT
tv78 = -48						; size = 4
_strFileName$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_szFileName$ = 12					; size = 4
_eStorage$ = 16						; size = 4
?SetLoadFileName@CvDllPreGame@@UAGXPBDW4StorageLocation@@@Z PROC ; CvDllPreGame::SetLoadFileName, COMDAT

; 1096 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetLoadFileName@CvDllPreGame@@UAGXPBDW4StorageLocation@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1097 : 	CvString strFileName = szFileName;

	cmp	DWORD PTR _szFileName$[ebp], 0
	je	SHORT $LN6@SetLoadFil
	mov	eax, DWORD PTR _szFileName$[ebp]
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN7@SetLoadFil
$LN6@SetLoadFil:
	mov	DWORD PTR tv78[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN7@SetLoadFil:
	mov	ecx, DWORD PTR tv78[ebp]
	push	ecx
	lea	ecx, DWORD PTR _strFileName$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1098 : 	CvPreGame::setLoadFileName(strFileName, eStorage);

	mov	edx, DWORD PTR _eStorage$[ebp]
	push	edx
	lea	eax, DWORD PTR _strFileName$[ebp]
	push	eax
	call	?setLoadFileName@CvPreGame@@YAXABVCvString@@W4StorageLocation@@@Z ; CvPreGame::setLoadFileName
	add	esp, 8

; 1099 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strFileName$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetLoadFileName@CvDllPreGame@@UAGXPBDW4StorageLocation@@@Z$0:
	lea	ecx, DWORD PTR _strFileName$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?SetLoadFileName@CvDllPreGame@@UAGXPBDW4StorageLocation@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetLoadFileName@CvDllPreGame@@UAGXPBDW4StorageLocation@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetLoadFileName@CvDllPreGame@@UAGXPBDW4StorageLocation@@@Z ENDP ; CvDllPreGame::SetLoadFileName
EXTRN	??3CvDllDlcPackageInfoList@@SAXPAX@Z:PROC	; CvDllDlcPackageInfoList::operator delete
EXTRN	??0CvDllDlcPackageInfoList@@QAE@ABV?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@@Z:PROC ; CvDllDlcPackageInfoList::CvDllDlcPackageInfoList
EXTRN	?getDLCAllowed@CvPreGame@@YAABV?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@XZ:PROC ; CvPreGame::getDLCAllowed
EXTRN	??2CvDllDlcPackageInfoList@@SAPAXI@Z:PROC	; CvDllDlcPackageInfoList::operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetDLCAllowed@CvDllPreGame@@UAGPAVICvEnumerator@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetDLCAllowed@CvDllPreGame@@UAGPAVICvEnumerator@@XZ$0
__ehfuncinfo$?GetDLCAllowed@CvDllPreGame@@UAGPAVICvEnumerator@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetDLCAllowed@CvDllPreGame@@UAGPAVICvEnumerator@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetDLCAllowed@CvDllPreGame@@UAGPAVICvEnumerator@@XZ
_TEXT	SEGMENT
tv76 = -24						; size = 4
$T221921 = -20						; size = 4
$T221920 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?GetDLCAllowed@CvDllPreGame@@UAGPAVICvEnumerator@@XZ PROC ; CvDllPreGame::GetDLCAllowed, COMDAT

; 1102 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetDLCAllowed@CvDllPreGame@@UAGPAVICvEnumerator@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1103 : 	return new CvDllDlcPackageInfoList(CvPreGame::getDLCAllowed());

	push	28					; 0000001cH
	call	??2CvDllDlcPackageInfoList@@SAPAXI@Z	; CvDllDlcPackageInfoList::operator new
	add	esp, 4
	mov	DWORD PTR $T221921[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T221921[ebp], 0
	je	SHORT $LN3@GetDLCAllo
	call	?getDLCAllowed@CvPreGame@@YAABV?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@XZ ; CvPreGame::getDLCAllowed
	push	eax
	mov	ecx, DWORD PTR $T221921[ebp]
	call	??0CvDllDlcPackageInfoList@@QAE@ABV?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@@Z ; CvDllDlcPackageInfoList::CvDllDlcPackageInfoList
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@GetDLCAllo
$LN3@GetDLCAllo:
	mov	DWORD PTR tv76[ebp], 0
$LN4@GetDLCAllo:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T221920[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T221920[ebp]

; 1104 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetDLCAllowed@CvDllPreGame@@UAGPAVICvEnumerator@@XZ$0:
	mov	eax, DWORD PTR $T221921[ebp]
	push	eax
	call	??3CvDllDlcPackageInfoList@@SAXPAX@Z	; CvDllDlcPackageInfoList::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetDLCAllowed@CvDllPreGame@@UAGPAVICvEnumerator@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetDLCAllowed@CvDllPreGame@@UAGPAVICvEnumerator@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetDLCAllowed@CvDllPreGame@@UAGPAVICvEnumerator@@XZ ENDP ; CvDllPreGame::GetDLCAllowed
EXTRN	?getDLCAvailable@CvPreGame@@YAABV?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@W4PlayerTypes@@@Z:PROC ; CvPreGame::getDLCAvailable
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetDLCAvailable@CvDllPreGame@@UAGPAVICvEnumerator@@W4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetDLCAvailable@CvDllPreGame@@UAGPAVICvEnumerator@@W4PlayerTypes@@@Z$0
__ehfuncinfo$?GetDLCAvailable@CvDllPreGame@@UAGPAVICvEnumerator@@W4PlayerTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetDLCAvailable@CvDllPreGame@@UAGPAVICvEnumerator@@W4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetDLCAvailable@CvDllPreGame@@UAGPAVICvEnumerator@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
tv77 = -24						; size = 4
$T221934 = -20						; size = 4
$T221933 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?GetDLCAvailable@CvDllPreGame@@UAGPAVICvEnumerator@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::GetDLCAvailable, COMDAT

; 1107 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetDLCAvailable@CvDllPreGame@@UAGPAVICvEnumerator@@W4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1108 : 	return new CvDllDlcPackageInfoList(CvPreGame::getDLCAvailable(p));

	push	28					; 0000001cH
	call	??2CvDllDlcPackageInfoList@@SAPAXI@Z	; CvDllDlcPackageInfoList::operator new
	add	esp, 4
	mov	DWORD PTR $T221934[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T221934[ebp], 0
	je	SHORT $LN3@GetDLCAvai
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?getDLCAvailable@CvPreGame@@YAABV?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@W4PlayerTypes@@@Z ; CvPreGame::getDLCAvailable
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T221934[ebp]
	call	??0CvDllDlcPackageInfoList@@QAE@ABV?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@@Z ; CvDllDlcPackageInfoList::CvDllDlcPackageInfoList
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN4@GetDLCAvai
$LN3@GetDLCAvai:
	mov	DWORD PTR tv77[ebp], 0
$LN4@GetDLCAvai:
	mov	ecx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T221933[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T221933[ebp]

; 1109 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetDLCAvailable@CvDllPreGame@@UAGPAVICvEnumerator@@W4PlayerTypes@@@Z$0:
	mov	eax, DWORD PTR $T221934[ebp]
	push	eax
	call	??3CvDllDlcPackageInfoList@@SAXPAX@Z	; CvDllDlcPackageInfoList::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetDLCAvailable@CvDllPreGame@@UAGPAVICvEnumerator@@W4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetDLCAvailable@CvDllPreGame@@UAGPAVICvEnumerator@@W4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetDLCAvailable@CvDllPreGame@@UAGPAVICvEnumerator@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::GetDLCAvailable
PUBLIC	??1?$_List_val@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ ; std::_List_val<_GUID,std::allocator<_GUID> >::~_List_val<_GUID,std::allocator<_GUID> >
PUBLIC	??1?$auto_ptr@VICvDlcPackageInfo1@@@std@@QAE@XZ	; std::auto_ptr<ICvDlcPackageInfo1>::~auto_ptr<ICvDlcPackageInfo1>
PUBLIC	??1?$CvEnumerator@VICvDlcPackageInfo1@@@@QAE@XZ	; CvEnumerator<ICvDlcPackageInfo1>::~CvEnumerator<ICvDlcPackageInfo1>
PUBLIC	??1?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ ; std::list<_GUID,std::allocator<_GUID> >::~list<_GUID,std::allocator<_GUID> >
PUBLIC	?_Tidy@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXXZ ; std::list<_GUID,std::allocator<_GUID> >::_Tidy
PUBLIC	?_Insert@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU_GUID@@@Z ; std::list<_GUID,std::allocator<_GUID> >::_Insert
PUBLIC	?GetCurrent@?$CvEnumerator@VICvDlcPackageInfo1@@@@QAEPAVICvDlcPackageInfo1@@XZ ; CvEnumerator<ICvDlcPackageInfo1>::GetCurrent
PUBLIC	??0?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ ; std::list<_GUID,std::allocator<_GUID> >::list<_GUID,std::allocator<_GUID> >
EXTRN	?setDLCAvailable@CvPreGame@@YAXW4PlayerTypes@@ABV?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@@Z:PROC ; CvPreGame::setDLCAvailable
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z$8
__ehfuncinfo$?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllpregame.cpp
xdata$x	ENDS
;	COMDAT ?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z
_TEXT	SEGMENT
tv94 = -304						; size = 4
tv167 = -297						; size = 1
tv149 = -296						; size = 4
_inst$222183 = -268					; size = 4
$T222180 = -264						; size = 4
_inst$222158 = -260					; size = 4
$T222155 = -256						; size = 4
$T222145 = -252						; size = 4
$T222090 = -164						; size = 4
$T222138 = -160						; size = 4
$T222137 = -156						; size = 4
$T222066 = -152						; size = 4
$T221970 = -92						; size = 4
$T221967 = -88						; size = 16
$T221966 = -72						; size = 16
$T221946 = -48						; size = 16
_pPackageInfo$220352 = -32				; size = 4
_kEnum$ = -28						; size = 4
_kDLCList$ = -24					; size = 12
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_pList$ = 16						; size = 4
?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z PROC ; CvDllPreGame::SetDLCAvailable, COMDAT

; 1112 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1113 : 	PackageIDList kDLCList;

	lea	ecx, DWORD PTR _kDLCList$[ebp]
	call	??0?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ ; std::list<_GUID,std::allocator<_GUID> >::list<_GUID,std::allocator<_GUID> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1114 : 
; 1115 : 	// Because CvEnumerator OWNS the pointer it's passed, use QueryInterface to
; 1116 : 	// construct a new pointer.
; 1117 : 	CvEnumerator<ICvDlcPackageInfo1> kEnum(pList->QueryInterface<ICvEnumerator>());

	mov	eax, DWORD PTR _guidICvEnumerator
	mov	DWORD PTR $T221967[ebp], eax
	mov	ecx, DWORD PTR _guidICvEnumerator+4
	mov	DWORD PTR $T221967[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvEnumerator+8
	mov	DWORD PTR $T221967[ebp+8], edx
	mov	eax, DWORD PTR _guidICvEnumerator+12
	mov	DWORD PTR $T221967[ebp+12], eax
	mov	ecx, DWORD PTR $T221967[ebp]
	mov	DWORD PTR $T221966[ebp], ecx
	mov	edx, DWORD PTR $T221967[ebp+4]
	mov	DWORD PTR $T221966[ebp+4], edx
	mov	eax, DWORD PTR $T221967[ebp+8]
	mov	DWORD PTR $T221966[ebp+8], eax
	mov	ecx, DWORD PTR $T221967[ebp+12]
	mov	DWORD PTR $T221966[ebp+12], ecx
	sub	esp, 16					; 00000010H
	mov	edx, esp
	mov	eax, DWORD PTR $T221966[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T221966[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR $T221966[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR $T221966[ebp+12]
	mov	DWORD PTR [edx+12], ecx
	mov	edx, DWORD PTR _pList$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pList$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax]
	call	edx
	mov	DWORD PTR $T221970[ebp], eax
	mov	eax, DWORD PTR $T221970[ebp]
	mov	DWORD PTR _kEnum$[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 1118 : 	while(kEnum.MoveNext())

$LN27@SetDLCAvai:
	cmp	DWORD PTR _kEnum$[ebp], 0
	je	SHORT $LN25@SetDLCAvai
	mov	ecx, DWORD PTR _kEnum$[ebp]
	mov	DWORD PTR tv149[ebp], ecx
	mov	edx, DWORD PTR tv149[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv149[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	mov	BYTE PTR tv167[ebp], al
	jmp	SHORT $LN23@SetDLCAvai
$LN25@SetDLCAvai:
	mov	BYTE PTR tv167[ebp], 0
$LN23@SetDLCAvai:
	movzx	eax, BYTE PTR tv167[ebp]
	test	eax, eax
	je	$LN2@SetDLCAvai

; 1119 : 	{
; 1120 : 		auto_ptr<ICvDlcPackageInfo1> pPackageInfo(kEnum.GetCurrent());

	lea	ecx, DWORD PTR _kEnum$[ebp]
	call	?GetCurrent@?$CvEnumerator@VICvDlcPackageInfo1@@@@QAEPAVICvDlcPackageInfo1@@XZ ; CvEnumerator<ICvDlcPackageInfo1>::GetCurrent
	mov	DWORD PTR $T222066[ebp], eax
	mov	ecx, DWORD PTR $T222066[ebp]
	mov	DWORD PTR _pPackageInfo$220352[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 1121 : 		if(pPackageInfo.get() != NULL)

	cmp	DWORD PTR _pPackageInfo$220352[ebp], 0
	je	SHORT $LN1@SetDLCAvai

; 1122 : 		{
; 1123 : 			kDLCList.push_back(pPackageInfo->GetPackageID());

	mov	edx, DWORD PTR _pPackageInfo$220352[ebp]
	mov	DWORD PTR tv94[ebp], edx
	lea	eax, DWORD PTR $T221946[ebp]
	push	eax
	mov	ecx, DWORD PTR tv94[ebp]
	push	ecx
	mov	edx, DWORD PTR tv94[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	mov	DWORD PTR $T222145[ebp], eax
	mov	edx, DWORD PTR _kDLCList$[ebp+4]
	mov	DWORD PTR $T222090[ebp], edx
	mov	eax, DWORD PTR $T222090[ebp]
	mov	DWORD PTR $T222138[ebp], eax
	mov	ecx, DWORD PTR $T222138[ebp]
	mov	DWORD PTR $T222137[ebp], ecx
	mov	edx, DWORD PTR $T222145[ebp]
	push	edx
	mov	eax, DWORD PTR $T222137[ebp]
	push	eax
	lea	ecx, DWORD PTR _kDLCList$[ebp]
	call	?_Insert@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU_GUID@@@Z ; std::list<_GUID,std::allocator<_GUID> >::_Insert
$LN1@SetDLCAvai:

; 1124 : 		}
; 1125 : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _pPackageInfo$220352[ebp]
	mov	DWORD PTR $T222155[ebp], ecx
	cmp	DWORD PTR $T222155[ebp], 0
	je	SHORT $LN101@SetDLCAvai
	mov	edx, DWORD PTR $T222155[ebp]
	mov	DWORD PTR _inst$222158[ebp], edx
	mov	eax, DWORD PTR _inst$222158[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$222158[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN101@SetDLCAvai:
	jmp	$LN27@SetDLCAvai
$LN2@SetDLCAvai:

; 1126 : 
; 1127 : 	CvPreGame::setDLCAvailable(p, kDLCList);

	lea	ecx, DWORD PTR _kDLCList$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	?setDLCAvailable@CvPreGame@@YAXW4PlayerTypes@@ABV?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@@Z ; CvPreGame::setDLCAvailable
	add	esp, 8

; 1128 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _kEnum$[ebp]
	mov	DWORD PTR $T222180[ebp], eax
	cmp	DWORD PTR $T222180[ebp], 0
	je	SHORT $LN109@SetDLCAvai
	mov	ecx, DWORD PTR $T222180[ebp]
	mov	DWORD PTR _inst$222183[ebp], ecx
	mov	edx, DWORD PTR _inst$222183[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _inst$222183[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
$LN109@SetDLCAvai:
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _kDLCList$[ebp]
	call	?_Tidy@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXXZ ; std::list<_GUID,std::allocator<_GUID> >::_Tidy
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z$0:
	lea	ecx, DWORD PTR _kDLCList$[ebp]
	jmp	??1?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ ; std::list<_GUID,std::allocator<_GUID> >::~list<_GUID,std::allocator<_GUID> >
__unwindfunclet$?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z$1:
	lea	ecx, DWORD PTR _kEnum$[ebp]
	jmp	??1?$CvEnumerator@VICvDlcPackageInfo1@@@@QAE@XZ
__unwindfunclet$?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z$2:
	lea	ecx, DWORD PTR _pPackageInfo$220352[ebp]
	jmp	??1?$auto_ptr@VICvDlcPackageInfo1@@@std@@QAE@XZ ; std::auto_ptr<ICvDlcPackageInfo1>::~auto_ptr<ICvDlcPackageInfo1>
__unwindfunclet$?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z$8:
	lea	ecx, DWORD PTR _kDLCList$[ebp]
	jmp	??1?$_List_val@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ
__ehhandler$?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetDLCAvailable@CvDllPreGame@@UAGXW4PlayerTypes@@PAVICvEnumerator@@@Z ENDP ; CvDllPreGame::SetDLCAvailable
; Function compile flags: /Odtp
;	COMDAT ??1?$CvEnumerator@VICvDlcPackageInfo1@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_inst$222299 = -8					; size = 4
$T222295 = -4						; size = 4
??1?$CvEnumerator@VICvDlcPackageInfo1@@@@QAE@XZ PROC	; CvEnumerator<ICvDlcPackageInfo1>::~CvEnumerator<ICvDlcPackageInfo1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T222295[ebp], ecx
	cmp	DWORD PTR $T222295[ebp], 0
	je	SHORT $LN4@CvEnumerat
	mov	edx, DWORD PTR $T222295[ebp]
	mov	DWORD PTR _inst$222299[ebp], edx
	mov	eax, DWORD PTR _inst$222299[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$222299[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN4@CvEnumerat:
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CvEnumerator@VICvDlcPackageInfo1@@@@QAE@XZ ENDP	; CvEnumerator<ICvDlcPackageInfo1>::~CvEnumerator<ICvDlcPackageInfo1>
_TEXT	ENDS
EXTRN	?pitBossTurnTime@CvPreGame@@YAHXZ:PROC		; CvPreGame::pitBossTurnTime
; Function compile flags: /Odtp
;	COMDAT ?pitBossTurnTime@CvDllPreGame@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?pitBossTurnTime@CvDllPreGame@@UAGHXZ PROC		; CvDllPreGame::pitBossTurnTime, COMDAT

; 1131 : {

	push	ebp
	mov	ebp, esp

; 1132 : 	return CvPreGame::pitBossTurnTime();

	call	?pitBossTurnTime@CvPreGame@@YAHXZ	; CvPreGame::pitBossTurnTime

; 1133 : }

	pop	ebp
	ret	4
?pitBossTurnTime@CvDllPreGame@@UAGHXZ ENDP		; CvDllPreGame::pitBossTurnTime
_TEXT	ENDS
EXTRN	?setPitBossTurnTime@CvPreGame@@YAXH@Z:PROC	; CvPreGame::setPitBossTurnTime
; Function compile flags: /Odtp
;	COMDAT ?setPitBossTurnTime@CvDllPreGame@@UAGXH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_turnTime$ = 12						; size = 4
?setPitBossTurnTime@CvDllPreGame@@UAGXH@Z PROC		; CvDllPreGame::setPitBossTurnTime, COMDAT

; 1136 : {

	push	ebp
	mov	ebp, esp

; 1137 : 	CvPreGame::setPitBossTurnTime(turnTime);

	mov	eax, DWORD PTR _turnTime$[ebp]
	push	eax
	call	?setPitBossTurnTime@CvPreGame@@YAXH@Z	; CvPreGame::setPitBossTurnTime
	add	esp, 4

; 1138 : }

	pop	ebp
	ret	8
?setPitBossTurnTime@CvDllPreGame@@UAGXH@Z ENDP		; CvDllPreGame::setPitBossTurnTime
_TEXT	ENDS
EXTRN	?isTurnNotifySteamInvite@CvPreGame@@YA_NW4PlayerTypes@@@Z:PROC ; CvPreGame::isTurnNotifySteamInvite
; Function compile flags: /Odtp
;	COMDAT ?isTurnNotifySteamInvite@CvDllPreGame@@UBG_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?isTurnNotifySteamInvite@CvDllPreGame@@UBG_NW4PlayerTypes@@@Z PROC ; CvDllPreGame::isTurnNotifySteamInvite, COMDAT

; 1141 : {

	push	ebp
	mov	ebp, esp

; 1142 : 	return CvPreGame::isTurnNotifySteamInvite(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?isTurnNotifySteamInvite@CvPreGame@@YA_NW4PlayerTypes@@@Z ; CvPreGame::isTurnNotifySteamInvite
	add	esp, 4

; 1143 : }

	pop	ebp
	ret	8
?isTurnNotifySteamInvite@CvDllPreGame@@UBG_NW4PlayerTypes@@@Z ENDP ; CvDllPreGame::isTurnNotifySteamInvite
_TEXT	ENDS
EXTRN	?setTurnNotifySteamInvite@CvPreGame@@YAXW4PlayerTypes@@_N@Z:PROC ; CvPreGame::setTurnNotifySteamInvite
; Function compile flags: /Odtp
;	COMDAT ?setTurnNotifySteamInvite@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_wantsSteamInvite$ = 16					; size = 1
?setTurnNotifySteamInvite@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z PROC ; CvDllPreGame::setTurnNotifySteamInvite, COMDAT

; 1146 : {

	push	ebp
	mov	ebp, esp

; 1147 : 	CvPreGame::setTurnNotifySteamInvite(p, wantsSteamInvite);

	movzx	eax, BYTE PTR _wantsSteamInvite$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setTurnNotifySteamInvite@CvPreGame@@YAXW4PlayerTypes@@_N@Z ; CvPreGame::setTurnNotifySteamInvite
	add	esp, 8

; 1148 : }

	pop	ebp
	ret	12					; 0000000cH
?setTurnNotifySteamInvite@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z ENDP ; CvDllPreGame::setTurnNotifySteamInvite
_TEXT	ENDS
EXTRN	?isTurnNotifyEmail@CvPreGame@@YA_NW4PlayerTypes@@@Z:PROC ; CvPreGame::isTurnNotifyEmail
; Function compile flags: /Odtp
;	COMDAT ?isTurnNotifyEmail@CvDllPreGame@@UBG_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?isTurnNotifyEmail@CvDllPreGame@@UBG_NW4PlayerTypes@@@Z PROC ; CvDllPreGame::isTurnNotifyEmail, COMDAT

; 1151 : {

	push	ebp
	mov	ebp, esp

; 1152 : 	return CvPreGame::isTurnNotifyEmail(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?isTurnNotifyEmail@CvPreGame@@YA_NW4PlayerTypes@@@Z ; CvPreGame::isTurnNotifyEmail
	add	esp, 4

; 1153 : }

	pop	ebp
	ret	8
?isTurnNotifyEmail@CvDllPreGame@@UBG_NW4PlayerTypes@@@Z ENDP ; CvDllPreGame::isTurnNotifyEmail
_TEXT	ENDS
EXTRN	?setTurnNotifyEmail@CvPreGame@@YAXW4PlayerTypes@@_N@Z:PROC ; CvPreGame::setTurnNotifyEmail
; Function compile flags: /Odtp
;	COMDAT ?setTurnNotifyEmail@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_wantsEmail$ = 16					; size = 1
?setTurnNotifyEmail@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z PROC ; CvDllPreGame::setTurnNotifyEmail, COMDAT

; 1156 : {

	push	ebp
	mov	ebp, esp

; 1157 : 	CvPreGame::setTurnNotifyEmail(p, wantsEmail);

	movzx	eax, BYTE PTR _wantsEmail$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setTurnNotifyEmail@CvPreGame@@YAXW4PlayerTypes@@_N@Z ; CvPreGame::setTurnNotifyEmail
	add	esp, 8

; 1158 : }

	pop	ebp
	ret	12					; 0000000cH
?setTurnNotifyEmail@CvDllPreGame@@UAGXW4PlayerTypes@@_N@Z ENDP ; CvDllPreGame::setTurnNotifyEmail
_TEXT	ENDS
EXTRN	?getTurnNotifyEmailAddress@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z:PROC ; CvPreGame::getTurnNotifyEmailAddress
; Function compile flags: /Odtp
;	COMDAT ?getTurnNotifyEmailAddress@CvDllPreGame@@UBGABVCvString@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?getTurnNotifyEmailAddress@CvDllPreGame@@UBGABVCvString@@W4PlayerTypes@@@Z PROC ; CvDllPreGame::getTurnNotifyEmailAddress, COMDAT

; 1161 : {

	push	ebp
	mov	ebp, esp

; 1162 : 	return CvPreGame::getTurnNotifyEmailAddress(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?getTurnNotifyEmailAddress@CvPreGame@@YAABVCvString@@W4PlayerTypes@@@Z ; CvPreGame::getTurnNotifyEmailAddress
	add	esp, 4

; 1163 : }

	pop	ebp
	ret	8
?getTurnNotifyEmailAddress@CvDllPreGame@@UBGABVCvString@@W4PlayerTypes@@@Z ENDP ; CvDllPreGame::getTurnNotifyEmailAddress
_TEXT	ENDS
EXTRN	?setTurnNotifyEmailAddress@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z:PROC ; CvPreGame::setTurnNotifyEmailAddress
; Function compile flags: /Odtp
;	COMDAT ?setTurnNotifyEmailAddress@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
_emailAddress$ = 16					; size = 4
?setTurnNotifyEmailAddress@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z PROC ; CvDllPreGame::setTurnNotifyEmailAddress, COMDAT

; 1166 : {

	push	ebp
	mov	ebp, esp

; 1167 : 	CvPreGame::setTurnNotifyEmailAddress(p, emailAddress);

	mov	eax, DWORD PTR _emailAddress$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?setTurnNotifyEmailAddress@CvPreGame@@YAXW4PlayerTypes@@ABVCvString@@@Z ; CvPreGame::setTurnNotifyEmailAddress
	add	esp, 8

; 1168 : }

	pop	ebp
	ret	12					; 0000000cH
?setTurnNotifyEmailAddress@CvDllPreGame@@UAGXW4PlayerTypes@@ABVCvString@@@Z ENDP ; CvDllPreGame::setTurnNotifyEmailAddress
_TEXT	ENDS
EXTRN	?VerifyHandicap@CvPreGame@@YAXW4PlayerTypes@@@Z:PROC ; CvPreGame::VerifyHandicap
; Function compile flags: /Odtp
;	COMDAT ?VerifyHandicap@CvDllPreGame@@UAGXW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p$ = 12						; size = 4
?VerifyHandicap@CvDllPreGame@@UAGXW4PlayerTypes@@@Z PROC ; CvDllPreGame::VerifyHandicap, COMDAT

; 1171 : {

	push	ebp
	mov	ebp, esp

; 1172 : 	CvPreGame::VerifyHandicap(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?VerifyHandicap@CvPreGame@@YAXW4PlayerTypes@@@Z ; CvPreGame::VerifyHandicap
	add	esp, 4

; 1173 : }

	pop	ebp
	ret	8
?VerifyHandicap@CvDllPreGame@@UAGXW4PlayerTypes@@@Z ENDP ; CvDllPreGame::VerifyHandicap
_TEXT	ENDS
EXTRN	?ReseatConnectedPlayers@CvPreGame@@YAXXZ:PROC	; CvPreGame::ReseatConnectedPlayers
; Function compile flags: /Odtp
;	COMDAT ?ReseatConnectedPlayers@CvDllPreGame@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?ReseatConnectedPlayers@CvDllPreGame@@UAGXXZ PROC	; CvDllPreGame::ReseatConnectedPlayers, COMDAT

; 1176 : {

	push	ebp
	mov	ebp, esp

; 1177 : 	CvPreGame::ReseatConnectedPlayers();

	call	?ReseatConnectedPlayers@CvPreGame@@YAXXZ ; CvPreGame::ReseatConnectedPlayers

; 1178 : }

	pop	ebp
	ret	4
?ReseatConnectedPlayers@CvDllPreGame@@UAGXXZ ENDP	; CvDllPreGame::ReseatConnectedPlayers
_TEXT	ENDS
PUBLIC	?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ ; std::list<_GUID,std::allocator<_GUID> >::_Buynode
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??0?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ??0?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv90 = -68						; size = 4
tv148 = -64						; size = 4
tv173 = -60						; size = 4
tv197 = -56						; size = 4
_this$ = -52						; size = 4
$T222413 = -48						; size = 1
$T222386 = -47						; size = 1
$T222366 = -46						; size = 1
$T222353 = -45						; size = 1
$T222349 = -44						; size = 4
$T222342 = -36						; size = 4
$T222335 = -28						; size = 4
$T222328 = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ PROC ; std::list<_GUID,std::allocator<_GUID> >::list<_GUID,std::allocator<_GUID> >, COMDAT
; _this$ = ecx

; 436  : 		{	// construct empty list

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T222413[ebp]
	mov	DWORD PTR $T222328[ebp], eax
	lea	ecx, DWORD PTR $T222386[ebp]
	mov	DWORD PTR $T222335[ebp], ecx
	lea	edx, DWORD PTR $T222366[ebp]
	mov	DWORD PTR $T222342[ebp], edx
	lea	eax, DWORD PTR $T222353[ebp]
	mov	DWORD PTR $T222349[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv197[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv173[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv148[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv90[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ ; std::list<_GUID,std::allocator<_GUID> >::_Buynode
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 437  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ
__ehhandler$??0?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ ENDP ; std::list<_GUID,std::allocator<_GUID> >::list<_GUID,std::allocator<_GUID> >
PUBLIC	?clear@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAEXXZ ; std::list<_GUID,std::allocator<_GUID> >::clear
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ??1?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T222476 = -36						; size = 4
$T222453 = -32						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ PROC ; std::list<_GUID,std::allocator<_GUID> >::~list<_GUID,std::allocator<_GUID> >, COMDAT
; _this$ = ecx

; 520  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 521  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAEXXZ ; std::list<_GUID,std::allocator<_GUID> >::clear
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T222453[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T222476[ebp], eax
	mov	ecx, DWORD PTR $T222476[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 522  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ
__ehhandler$??1?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ ENDP ; std::list<_GUID,std::allocator<_GUID> >::~list<_GUID,std::allocator<_GUID> >
PUBLIC	??1?$auto_ptr@VICvUnknown@@@std@@QAE@XZ		; std::auto_ptr<ICvUnknown>::~auto_ptr<ICvUnknown>
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
xdata$x	SEGMENT
__unwindtable$?GetCurrent@?$CvEnumerator@VICvDlcPackageInfo1@@@@QAEPAVICvDlcPackageInfo1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCurrent@?$CvEnumerator@VICvDlcPackageInfo1@@@@QAEPAVICvDlcPackageInfo1@@XZ$0
__ehfuncinfo$?GetCurrent@?$CvEnumerator@VICvDlcPackageInfo1@@@@QAEPAVICvDlcPackageInfo1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCurrent@?$CvEnumerator@VICvDlcPackageInfo1@@@@QAEPAVICvDlcPackageInfo1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetCurrent@?$CvEnumerator@VICvDlcPackageInfo1@@@@QAEPAVICvDlcPackageInfo1@@XZ
_TEXT	SEGMENT
tv85 = -88						; size = 4
tv72 = -84						; size = 4
_this$ = -80						; size = 4
_inst$222586 = -76					; size = 4
$T222582 = -72						; size = 4
$T222570 = -68						; size = 16
$T222569 = -52						; size = 16
$T222560 = -36						; size = 4
$T222548 = -32						; size = 4
$T222540 = -28						; size = 4
$T222535 = -24						; size = 4
$T222528 = -20						; size = 4
_pValue$220594 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?GetCurrent@?$CvEnumerator@VICvDlcPackageInfo1@@@@QAEPAVICvDlcPackageInfo1@@XZ PROC ; CvEnumerator<ICvDlcPackageInfo1>::GetCurrent, COMDAT
; _this$ = ecx

; 1859 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetCurrent@?$CvEnumerator@VICvDlcPackageInfo1@@@@QAEPAVICvDlcPackageInfo1@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1860 : 		if(m_Enumerator.get() != NULL)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T222535[ebp], ecx
	cmp	DWORD PTR $T222535[ebp], 0
	je	$LN2@GetCurrent

; 1861 : 		{
; 1862 : 			auto_ptr<ICvUnknown> pValue(m_Enumerator->GetCurrent());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T222540[ebp], eax
	mov	ecx, DWORD PTR $T222540[ebp]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	mov	DWORD PTR $T222548[ebp], eax
	mov	eax, DWORD PTR $T222548[ebp]
	mov	DWORD PTR _pValue$220594[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1863 : 			return (pValue.get() != NULL)? pValue->QueryInterface<T>() : NULL;

	cmp	DWORD PTR _pValue$220594[ebp], 0
	je	SHORT $LN5@GetCurrent
	mov	ecx, DWORD PTR _pValue$220594[ebp]
	mov	DWORD PTR $T222560[ebp], ecx
	mov	edx, DWORD PTR _guidICvDlcPackageInfo1
	mov	DWORD PTR $T222570[ebp], edx
	mov	eax, DWORD PTR _guidICvDlcPackageInfo1+4
	mov	DWORD PTR $T222570[ebp+4], eax
	mov	ecx, DWORD PTR _guidICvDlcPackageInfo1+8
	mov	DWORD PTR $T222570[ebp+8], ecx
	mov	edx, DWORD PTR _guidICvDlcPackageInfo1+12
	mov	DWORD PTR $T222570[ebp+12], edx
	mov	eax, DWORD PTR $T222570[ebp]
	mov	DWORD PTR $T222569[ebp], eax
	mov	ecx, DWORD PTR $T222570[ebp+4]
	mov	DWORD PTR $T222569[ebp+4], ecx
	mov	edx, DWORD PTR $T222570[ebp+8]
	mov	DWORD PTR $T222569[ebp+8], edx
	mov	eax, DWORD PTR $T222570[ebp+12]
	mov	DWORD PTR $T222569[ebp+12], eax
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR $T222569[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T222569[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T222569[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR $T222569[ebp+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, DWORD PTR $T222560[ebp]
	push	ecx
	mov	edx, DWORD PTR $T222560[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN6@GetCurrent
$LN5@GetCurrent:
	mov	DWORD PTR tv85[ebp], 0
$LN6@GetCurrent:
	mov	edx, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T222528[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _pValue$220594[ebp]
	mov	DWORD PTR $T222582[ebp], eax
	cmp	DWORD PTR $T222582[ebp], 0
	je	SHORT $LN26@GetCurrent
	mov	ecx, DWORD PTR $T222582[ebp]
	mov	DWORD PTR _inst$222586[ebp], ecx
	mov	edx, DWORD PTR _inst$222586[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _inst$222586[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
$LN26@GetCurrent:
	mov	eax, DWORD PTR $T222528[ebp]
	jmp	SHORT $LN3@GetCurrent

; 1864 : 		}
; 1865 : 		else

	jmp	SHORT $LN3@GetCurrent
$LN2@GetCurrent:

; 1866 : 		{
; 1867 : 			return NULL;

	xor	eax, eax
$LN3@GetCurrent:

; 1868 : 		}	
; 1869 : 	}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCurrent@?$CvEnumerator@VICvDlcPackageInfo1@@@@QAEPAVICvDlcPackageInfo1@@XZ$0:
	lea	ecx, DWORD PTR _pValue$220594[ebp]
	jmp	??1?$auto_ptr@VICvUnknown@@@std@@QAE@XZ	; std::auto_ptr<ICvUnknown>::~auto_ptr<ICvUnknown>
__ehhandler$?GetCurrent@?$CvEnumerator@VICvDlcPackageInfo1@@@@QAEPAVICvDlcPackageInfo1@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetCurrent@?$CvEnumerator@VICvDlcPackageInfo1@@@@QAEPAVICvDlcPackageInfo1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCurrent@?$CvEnumerator@VICvDlcPackageInfo1@@@@QAEPAVICvDlcPackageInfo1@@XZ ENDP ; CvEnumerator<ICvDlcPackageInfo1>::GetCurrent
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??1?$auto_ptr@VICvDlcPackageInfo1@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_inst$222601 = -8					; size = 4
$T222596 = -4						; size = 4
??1?$auto_ptr@VICvDlcPackageInfo1@@@std@@QAE@XZ PROC	; std::auto_ptr<ICvDlcPackageInfo1>::~auto_ptr<ICvDlcPackageInfo1>, COMDAT
; _this$ = ecx

; 720  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 721  : 		delete _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T222596[ebp], ecx
	cmp	DWORD PTR $T222596[ebp], 0
	je	SHORT $LN1@auto_ptr
	mov	edx, DWORD PTR $T222596[ebp]
	mov	DWORD PTR _inst$222601[ebp], edx
	mov	eax, DWORD PTR _inst$222601[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$222601[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN1@auto_ptr:

; 722  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$auto_ptr@VICvDlcPackageInfo1@@@std@@QAE@XZ ENDP	; std::auto_ptr<ICvDlcPackageInfo1>::~auto_ptr<ICvDlcPackageInfo1>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_List_val@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_val@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ PROC ; std::_List_val<_GUID,std::allocator<_GUID> >::~_List_val<_GUID,std::allocator<_GUID> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_val@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<_GUID,std::allocator<_GUID> >::~_List_val<_GUID,std::allocator<_GUID> >
_TEXT	ENDS
PUBLIC	?_Incsize@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXI@Z ; std::list<_GUID,std::allocator<_GUID> >::_Incsize
PUBLIC	?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z ; std::list<_GUID,std::allocator<_GUID> >::_Buynode
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Insert@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU_GUID@@@Z
_TEXT	SEGMENT
_this$ = -88						; size = 4
$T222663 = -84						; size = 4
__Pnode$ = -8						; size = 4
__Newnode$ = -4						; size = 4
__Where$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Insert@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU_GUID@@@Z PROC ; std::list<_GUID,std::allocator<_GUID> >::_Insert, COMDAT
; _this$ = ecx

; 710  : 		{	// insert _Val at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	mov	DWORD PTR _this$[ebp], ecx

; 711  : 
; 712  :  #if _HAS_ITERATOR_DEBUGGING
; 713  : 		if (_Where._Mycont != this)
; 714  : 			_DEBUG_ERROR("list insert iterator outside range");
; 715  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 716  : 
; 717  : 		_Nodeptr _Pnode = _Where._Mynode();

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax

; 718  : 		_Nodeptr _Newnode = _Buynode(_Pnode, _Prevnode(_Pnode), _Val);

	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z ; std::list<_GUID,std::allocator<_GUID> >::_Buynode
	mov	DWORD PTR __Newnode$[ebp], eax

; 719  : 		_Incsize(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXI@Z ; std::list<_GUID,std::allocator<_GUID> >::_Incsize

; 720  : 		_Prevnode(_Pnode) = _Newnode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [edx+4], eax

; 721  : 		_Nextnode(_Prevnode(_Newnode)) = _Newnode;

	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T222663[ebp], edx
	mov	eax, DWORD PTR $T222663[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 722  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Insert@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAEXV?$_Const_iterator@$0A@@12@ABU_GUID@@@Z ENDP ; std::list<_GUID,std::allocator<_GUID> >::_Insert
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@I@Z ; std::allocator<std::_List_nod<_GUID,std::allocator<_GUID> >::_Node>::allocate
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ$0
__unwindtable$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ$2
__ehfuncinfo$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ
_TEXT	SEGMENT
tv157 = -84						; size = 4
tv152 = -80						; size = 4
_this$ = -76						; size = 4
$T222755 = -72						; size = 4
$T222740 = -68						; size = 4
$T222732 = -64						; size = 4
__Vptr$222738 = -60					; size = 4
$T222710 = -56						; size = 4
$T222702 = -52						; size = 4
__Vptr$222708 = -48					; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ PROC ; std::list<_GUID,std::allocator<_GUID> >::_Buynode, COMDAT
; _this$ = ecx

; 1171 : 		{	// allocate a head node and set links

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1172 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@I@Z ; std::allocator<std::_List_nod<_GUID,std::allocator<_GUID> >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 1173 : 		int _Linkcnt = 0;

	mov	DWORD PTR __Linkcnt$[ebp], 0

; 1174 : 
; 1175 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1176 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR $T222710[ebp], eax
	mov	ecx, DWORD PTR $T222710[ebp]
	mov	DWORD PTR __Vptr$222708[ebp], ecx
	mov	edx, DWORD PTR __Vptr$222708[ebp]
	mov	DWORD PTR $T222702[ebp], edx
	cmp	DWORD PTR $T222702[ebp], 0
	je	SHORT $LN22@Buynode
	mov	eax, DWORD PTR $T222702[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T222702[ebp]
	mov	DWORD PTR tv152[ebp], edx
	jmp	SHORT $LN18@Buynode
$LN22@Buynode:
	mov	DWORD PTR tv152[ebp], 0
$LN18@Buynode:

; 1177 : 		++_Linkcnt;

	mov	eax, DWORD PTR __Linkcnt$[ebp]
	add	eax, 1
	mov	DWORD PTR __Linkcnt$[ebp], eax

; 1178 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	add	ecx, 4
	mov	DWORD PTR $T222740[ebp], ecx
	mov	edx, DWORD PTR $T222740[ebp]
	mov	DWORD PTR __Vptr$222738[ebp], edx
	mov	eax, DWORD PTR __Vptr$222738[ebp]
	mov	DWORD PTR $T222732[ebp], eax
	cmp	DWORD PTR $T222732[ebp], 0
	je	SHORT $LN32@Buynode
	mov	ecx, DWORD PTR $T222732[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T222732[ebp]
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $LN28@Buynode
$LN32@Buynode:
	mov	DWORD PTR tv157[ebp], 0
$LN28@Buynode:
	jmp	SHORT $LN5@Buynode
__catch$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ$0:

; 1179 : 		_CATCH_ALL
; 1180 : 		if (0 < _Linkcnt)
; 1181 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1182 : 		this->_Alnod.deallocate(_Pnode, 1);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR $T222755[ebp], ecx
	mov	edx, DWORD PTR $T222755[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1183 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1184 : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ$1
	ret	0
$LN5@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ$1:

; 1185 : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode:

; 1186 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@XZ ENDP ; std::list<_GUID,std::allocator<_GUID> >::_Buynode
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T222819 = -24						; size = 4
$T222796 = -20						; size = 4
?_Tidy@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXXZ PROC ; std::list<_GUID,std::allocator<_GUID> >::_Tidy, COMDAT
; _this$ = ecx

; 1212 : 		{	// free all storage

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 1213 : 		clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAEXXZ ; std::list<_GUID,std::allocator<_GUID> >::clear

; 1214 : 		this->_Alptr.destroy(&_Nextnode(_Myhead));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T222796[ebp], ecx

; 1215 : 		this->_Alptr.destroy(&_Prevnode(_Myhead));
; 1216 : 		this->_Alnod.deallocate(_Myhead, 1);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T222819[ebp], eax
	mov	ecx, DWORD PTR $T222819[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1217 : 		_Myhead = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 1218 : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXXZ ENDP ; std::list<_GUID,std::allocator<_GUID> >::_Tidy
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??1?$auto_ptr@VICvUnknown@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_inst$222827 = -8					; size = 4
$T222822 = -4						; size = 4
??1?$auto_ptr@VICvUnknown@@@std@@QAE@XZ PROC		; std::auto_ptr<ICvUnknown>::~auto_ptr<ICvUnknown>, COMDAT
; _this$ = ecx

; 720  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 721  : 		delete _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T222822[ebp], ecx
	cmp	DWORD PTR $T222822[ebp], 0
	je	SHORT $LN1@auto_ptr@2
	mov	edx, DWORD PTR $T222822[ebp]
	mov	DWORD PTR _inst$222827[ebp], edx
	mov	eax, DWORD PTR _inst$222827[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$222827[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN1@auto_ptr@2:

; 722  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$auto_ptr@VICvUnknown@@@std@@QAE@XZ ENDP		; std::auto_ptr<ICvUnknown>::~auto_ptr<ICvUnknown>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
_TEXT	ENDS
;	COMDAT ?clear@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T222837 = -16						; size = 4
$T222833 = -12						; size = 4
__Pnext$ = -8						; size = 4
__Pnode$ = -4						; size = 4
?clear@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAEXXZ PROC ; std::list<_GUID,std::allocator<_GUID> >::clear, COMDAT
; _this$ = ecx

; 825  : 		{	// erase all

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 826  : 
; 827  :  #if _HAS_ITERATOR_DEBUGGING
; 828  : 		this->_Orphan_ptr(*this, 0);
; 829  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 830  : 
; 831  : 		_Nodeptr _Pnext;
; 832  : 		_Nodeptr _Pnode = _Nextnode(_Myhead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T222833[ebp], ecx
	mov	edx, DWORD PTR $T222833[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnode$[ebp], eax

; 833  : 		_Nextnode(_Myhead) = _Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T222837[ebp], edx
	mov	eax, DWORD PTR $T222837[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 834  : 		_Prevnode(_Myhead) = _Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 835  : 		_Mysize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 836  : 
; 837  : 		for (; _Pnode != _Myhead; _Pnode = _Pnext)

	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN3@clear:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN4@clear

; 838  : 			{	// delete an element
; 839  : 			_Pnext = _Nextnode(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnext$[ebp], eax

; 840  : 			this->_Alnod.destroy(_Pnode);
; 841  : 			this->_Alnod.deallocate(_Pnode, 1);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 842  : 			}

	jmp	SHORT $LN2@clear
$LN4@clear:

; 843  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@QAEXXZ ENDP ; std::list<_GUID,std::allocator<_GUID> >::clear
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z$0
__unwindtable$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z$2
__ehfuncinfo$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z
_TEXT	SEGMENT
tv80 = -84						; size = 4
tv178 = -80						; size = 4
tv173 = -76						; size = 4
_this$ = -72						; size = 4
$T222954 = -68						; size = 4
__Vptr$222952 = -64					; size = 4
$T222925 = -60						; size = 4
__Vptr$222923 = -56					; size = 4
$T222896 = -52						; size = 4
__Vptr$222894 = -48					; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z PROC ; std::list<_GUID,std::allocator<_GUID> >::_Buynode, COMDAT
; _this$ = ecx

; 1190 : 		{	// allocate a node and set links and value

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1191 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@I@Z ; std::allocator<std::_List_nod<_GUID,std::allocator<_GUID> >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 1192 : 		int _Linkcnt = 0;

	mov	DWORD PTR __Linkcnt$[ebp], 0

; 1193 : 
; 1194 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1195 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Next);

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Vptr$222894[ebp], eax
	mov	ecx, DWORD PTR __Vptr$222894[ebp]
	mov	DWORD PTR $T222896[ebp], ecx
	cmp	DWORD PTR $T222896[ebp], 0
	je	SHORT $LN23@Buynode@2
	mov	edx, DWORD PTR $T222896[ebp]
	mov	eax, DWORD PTR __Next$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T222896[ebp]
	mov	DWORD PTR tv173[ebp], ecx
	jmp	SHORT $LN19@Buynode@2
$LN23@Buynode@2:
	mov	DWORD PTR tv173[ebp], 0
$LN19@Buynode@2:

; 1196 : 		++_Linkcnt;

	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx

; 1197 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
	mov	DWORD PTR __Vptr$222923[ebp], eax
	mov	ecx, DWORD PTR __Vptr$222923[ebp]
	mov	DWORD PTR $T222925[ebp], ecx
	cmp	DWORD PTR $T222925[ebp], 0
	je	SHORT $LN33@Buynode@2
	mov	edx, DWORD PTR $T222925[ebp]
	mov	eax, DWORD PTR __Prev$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T222925[ebp]
	mov	DWORD PTR tv178[ebp], ecx
	jmp	SHORT $LN29@Buynode@2
$LN33@Buynode@2:
	mov	DWORD PTR tv178[ebp], 0
$LN29@Buynode@2:

; 1198 : 		++_Linkcnt;

	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx

; 1199 : 		this->_Alval.construct(&_Myval(_Pnode), _Val);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
	mov	DWORD PTR __Vptr$222952[ebp], eax
	mov	ecx, DWORD PTR __Vptr$222952[ebp]
	mov	DWORD PTR $T222954[ebp], ecx
	cmp	DWORD PTR $T222954[ebp], 0
	je	SHORT $LN43@Buynode@2
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR $T222954[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR $T222954[ebp]
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN39@Buynode@2
$LN43@Buynode@2:
	mov	DWORD PTR tv80[ebp], 0
$LN39@Buynode@2:
	jmp	SHORT $LN6@Buynode@2
__catch$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z$0:

; 1200 : 		_CATCH_ALL
; 1201 : 		if (1 < _Linkcnt)
; 1202 : 			this->_Alptr.destroy(&_Prevnode(_Pnode));
; 1203 : 		if (0 < _Linkcnt)
; 1204 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1205 : 		this->_Alnod.deallocate(_Pnode, 1);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1206 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1207 : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z$1
	ret	0
$LN6@Buynode@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z$1:

; 1208 : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN5@Buynode@2:

; 1209 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@PAU342@0ABU_GUID@@@Z ENDP ; std::list<_GUID,std::allocator<_GUID> >::_Buynode
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Incsize@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Incsize@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Incsize@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Incsize@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
tv89 = -92						; size = 4
_this$ = -88						; size = 4
__Count$223010 = -84					; size = 4
$T222996 = -80						; size = 28
$T222995 = -52						; size = 40
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
?_Incsize@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXI@Z PROC ; std::list<_GUID,std::allocator<_GUID> >::_Incsize, COMDAT
; _this$ = ecx

; 1239 : 		{	// alter element count, with checking

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Incsize@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1240 : 		if (max_size() - _Mysize < _Count)

	mov	DWORD PTR __Count$223010[ebp], 268435455 ; 0fffffffH
	cmp	DWORD PTR __Count$223010[ebp], 0
	jbe	SHORT $LN9@Incsize
	mov	eax, DWORD PTR __Count$223010[ebp]
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN5@Incsize
$LN9@Incsize:
	mov	DWORD PTR tv89[ebp], 1
$LN5@Incsize:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv89[ebp]
	sub	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Incsize

; 1241 : 			_THROW(length_error, "list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T222996[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T222995[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T222995[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T222996[ebp]
	push	eax
	lea	ecx, DWORD PTR $T222995[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T222995[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T222995[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T222996[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@Incsize:

; 1242 : 		_Mysize += _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN3@Incsize:

; 1243 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Incsize@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXI@Z$0:
	lea	ecx, DWORD PTR $T222996[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Incsize@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXI@Z$2:
	lea	ecx, DWORD PTR $T222995[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Incsize@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Incsize@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Incsize@?$list@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@IAEXI@Z ENDP ; std::list<_GUID,std::allocator<_GUID> >::_Incsize
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx

; 34   : 		{	// return pointer to message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 		return (_Str.c_str());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 36   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 109  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@

; 110  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	edx, DWORD PTR ___flags$[ebp]
	and	edx, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<_GUID,std::allocator<_GUID> >::_Node>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<_GUID,std::allocator<_GUID> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 144  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<_GUID,std::allocator<_GUID> >::_Node>
	add	esp, 8

; 146  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<_GUID,std::allocator<_GUID> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R0?AVbad_alloc@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
xdata$x	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_Ebad_alloc@std@@UAEPAXI@Z ; std::bad_alloc::`vftable'
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
CONST	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T223067 = -16						; size = 4
$T223063 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<_GUID,std::allocator<_GUID> >::_Node>, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate
$LN3@Allocate:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 24					; 00000018H
	jae	SHORT $LN2@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T223067[ebp], 0
	lea	eax, DWORD PTR $T223067[ebp]
	push	eax
	lea	ecx, DWORD PTR $T223063[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T223063[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T223063[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 24					; 00000018H
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@U_GUID@@V?$allocator@U_GUID@@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<_GUID,std::allocator<_GUID> >::_Node>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar@3
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
EXTRN	?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B:DWORD ; CvPreGame::sr_TeamTypes
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvpregame.h
;	COMDAT ?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z PROC ; CvPreGame::teamType, COMDAT

; 298  : {

	push	ebp
	mov	ebp, esp

; 299  : 	if(p >= 0 && p < MAX_PLAYERS)

	cmp	DWORD PTR _p$[ebp], 0
	jl	SHORT $LN1@teamType
	cmp	DWORD PTR _p$[ebp], 64			; 00000040H
	jge	SHORT $LN1@teamType

; 300  : 		return sr_TeamTypes[p];

	mov	eax, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	jmp	SHORT $LN2@teamType
$LN1@teamType:

; 301  : 	return NO_TEAM;

	or	eax, -1
$LN2@teamType:

; 302  : }

	pop	ebp
	ret	0
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ENDP ; CvPreGame::teamType
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0length_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0length_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0length_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0length_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
; Function compile flags: /Odtp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
END
