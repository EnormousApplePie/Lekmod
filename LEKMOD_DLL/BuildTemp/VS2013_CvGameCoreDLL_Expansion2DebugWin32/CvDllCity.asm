; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvDllCity.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05OCFELOIJ@1?40?40?$AA@			; `string'
CONST	SEGMENT
_guidICvUnknown DD 0d89ba82fH
	DW	09fa3H
	DW	04696H
	DB	0b3H
	DB	0f4H
	DB	052H
	DB	0bdH
	DB	0b1H
	DB	01H
	DB	0cfH
	DB	0b2H
_guidICvCity1 DD 0e75ba944H
	DW	05dbH
	DW	04d6cH
	DB	096H
	DB	0a6H
	DB	0a0H
	DB	07bH
	DB	071H
	DB	0cdH
	DB	0beH
	DB	077H
CONST	ENDS
_DATA	SEGMENT
_CIV5_XP2_DLL_VERSION DD FLAT:??_C@_05OCFELOIJ@1?40?40?$AA@
_DATA	ENDS
;	COMDAT ??_C@_05OCFELOIJ@1?40?40?$AA@
CONST	SEGMENT
??_C@_05OCFELOIJ@1?40?40?$AA@ DB '1.0.0', 00H		; `string'
CONST	ENDS
PUBLIC	??_7CvDllCity@@6B@				; CvDllCity::`vftable'
PUBLIC	??_7ICvCity1@@6B@				; ICvCity1::`vftable'
PUBLIC	??_7ICvUnknown@@6B@				; ICvUnknown::`vftable'
PUBLIC	??0CvDllCity@@QAE@PAVCvCity@@@Z			; CvDllCity::CvDllCity
PUBLIC	?QueryInterface@CvDllCity@@UAGPAXU_GUID@@@Z	; CvDllCity::QueryInterface
PUBLIC	?Destroy@CvDllCity@@EAGXXZ			; CvDllCity::Destroy
PUBLIC	?GetID@CvDllCity@@UBGHXZ			; CvDllCity::GetID
PUBLIC	?GetOwner@CvDllCity@@UBG?AW4PlayerTypes@@XZ	; CvDllCity::GetOwner
PUBLIC	?GetMaxHitPoints@CvDllCity@@UBGHXZ		; CvDllCity::GetMaxHitPoints
PUBLIC	?GetPosition@CvDllCity@@UBGXAAH0@Z		; CvDllCity::GetPosition
PUBLIC	?Plot@CvDllCity@@UBGPAVICvPlot1@@XZ		; CvDllCity::Plot
PUBLIC	?GetPopulation@CvDllCity@@UBGHXZ		; CvDllCity::GetPopulation
PUBLIC	?GetName@CvDllCity@@UBGPBDXZ			; CvDllCity::GetName
PUBLIC	?CanBuyPlot@CvDllCity@@UAG_NHH_N@Z		; CvDllCity::CanBuyPlot
PUBLIC	?GetCitySizeType@CvDllCity@@UBG?AW4CitySizeTypes@@XZ ; CvDllCity::GetCitySizeType
PUBLIC	?GetCityBombardEffectTag@CvDllCity@@UBGPBDXZ	; CvDllCity::GetCityBombardEffectTag
PUBLIC	?GetTeam@CvDllCity@@UBG?AW4TeamTypes@@XZ	; CvDllCity::GetTeam
PUBLIC	?IsPuppet@CvDllCity@@UBG_NXZ			; CvDllCity::IsPuppet
PUBLIC	?GetX@CvDllCity@@UBGHXZ				; CvDllCity::GetX
PUBLIC	?GetY@CvDllCity@@UBGHXZ				; CvDllCity::GetY
PUBLIC	?GetStrengthValue@CvDllCity@@UBGH_N@Z		; CvDllCity::GetStrengthValue
PUBLIC	?FoodDifference@CvDllCity@@UBGH_N@Z		; CvDllCity::FoodDifference
PUBLIC	?GetFoodTurnsLeft@CvDllCity@@UBGHXZ		; CvDllCity::GetFoodTurnsLeft
PUBLIC	?GetYieldRate@CvDllCity@@UBGHH@Z		; CvDllCity::GetYieldRate
PUBLIC	?GetJONSCulturePerTurn@CvDllCity@@UBGHXZ	; CvDllCity::GetJONSCulturePerTurn
PUBLIC	?GetIDInfo@CvDllCity@@UBG?AUIDInfo@@XZ		; CvDllCity::GetIDInfo
PUBLIC	?IsWorkingPlot@CvDllCity@@UBG_NPAVICvPlot1@@@Z	; CvDllCity::IsWorkingPlot
PUBLIC	?CanWork@CvDllCity@@UBG_NPAVICvPlot1@@@Z	; CvDllCity::CanWork
PUBLIC	?GetCityPlotFromIndex@CvDllCity@@UBGPAVICvPlot1@@H@Z ; CvDllCity::GetCityPlotFromIndex
PUBLIC	?GetSyncArchive@CvDllCity@@UAGAAVFAutoArchive@@XZ ; CvDllCity::GetSyncArchive
EXTRN	__purecall:PROC
;	COMDAT ??_7CvDllCity@@6B@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllcity.cpp
CONST	SEGMENT
??_7CvDllCity@@6B@ DD FLAT:?QueryInterface@CvDllCity@@UAGPAXU_GUID@@@Z ; CvDllCity::`vftable'
	DD	FLAT:?Destroy@CvDllCity@@EAGXXZ
	DD	FLAT:?GetID@CvDllCity@@UBGHXZ
	DD	FLAT:?GetOwner@CvDllCity@@UBG?AW4PlayerTypes@@XZ
	DD	FLAT:?GetMaxHitPoints@CvDllCity@@UBGHXZ
	DD	FLAT:?GetPosition@CvDllCity@@UBGXAAH0@Z
	DD	FLAT:?Plot@CvDllCity@@UBGPAVICvPlot1@@XZ
	DD	FLAT:?GetPopulation@CvDllCity@@UBGHXZ
	DD	FLAT:?GetName@CvDllCity@@UBGPBDXZ
	DD	FLAT:?CanBuyPlot@CvDllCity@@UAG_NHH_N@Z
	DD	FLAT:?GetCitySizeType@CvDllCity@@UBG?AW4CitySizeTypes@@XZ
	DD	FLAT:?GetCityBombardEffectTag@CvDllCity@@UBGPBDXZ
	DD	FLAT:?GetTeam@CvDllCity@@UBG?AW4TeamTypes@@XZ
	DD	FLAT:?IsPuppet@CvDllCity@@UBG_NXZ
	DD	FLAT:?GetX@CvDllCity@@UBGHXZ
	DD	FLAT:?GetY@CvDllCity@@UBGHXZ
	DD	FLAT:?GetStrengthValue@CvDllCity@@UBGH_N@Z
	DD	FLAT:?FoodDifference@CvDllCity@@UBGH_N@Z
	DD	FLAT:?GetFoodTurnsLeft@CvDllCity@@UBGHXZ
	DD	FLAT:?GetYieldRate@CvDllCity@@UBGHH@Z
	DD	FLAT:?GetJONSCulturePerTurn@CvDllCity@@UBGHXZ
	DD	FLAT:?GetIDInfo@CvDllCity@@UBG?AUIDInfo@@XZ
	DD	FLAT:?IsWorkingPlot@CvDllCity@@UBG_NPAVICvPlot1@@@Z
	DD	FLAT:?CanWork@CvDllCity@@UBG_NPAVICvPlot1@@@Z
	DD	FLAT:?GetCityPlotFromIndex@CvDllCity@@UBGPAVICvPlot1@@H@Z
	DD	FLAT:?GetSyncArchive@CvDllCity@@UAGAAVFAutoArchive@@XZ
CONST	ENDS
;	COMDAT ??_7ICvCity1@@6B@
CONST	SEGMENT
??_7ICvCity1@@6B@ DD FLAT:__purecall			; ICvCity1::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ICvUnknown@@6B@
CONST	SEGMENT
??_7ICvUnknown@@6B@ DD FLAT:__purecall			; ICvUnknown::`vftable'
	DD	FLAT:__purecall
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0CvDllCity@@QAE@PAVCvCity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pCity$ = 8						; size = 4
??0CvDllCity@@QAE@PAVCvCity@@@Z PROC			; CvDllCity::CvDllCity, COMDAT
; _this$ = ecx

; 21   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnknown@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7ICvCity1@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7CvDllCity@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pCity$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 22   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CvDllCity@@QAE@PAVCvCity@@@Z ENDP			; CvDllCity::CvDllCity
_TEXT	ENDS
PUBLIC	??1CvDllCity@@QAE@XZ				; CvDllCity::~CvDllCity
; Function compile flags: /Odtp
;	COMDAT ??1CvDllCity@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvDllCity@@QAE@XZ PROC				; CvDllCity::~CvDllCity, COMDAT
; _this$ = ecx

; 25   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvDllCity@@6B@

; 26   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1CvDllCity@@QAE@XZ ENDP				; CvDllCity::~CvDllCity
_TEXT	ENDS
PUBLIC	?IncrementReference@CvDllCity@@QAEIXZ		; CvDllCity::IncrementReference
; Function compile flags: /Odtp
;	COMDAT ?QueryInterface@CvDllCity@@UAGPAXU_GUID@@@Z
_TEXT	SEGMENT
tv90 = -88						; size = 4
tv161 = -84						; size = 4
tv85 = -80						; size = 4
tv137 = -76						; size = 4
$T218219 = -72						; size = 16
$T218218 = -56						; size = 16
$T218217 = -40						; size = 16
$T218216 = -20						; size = 16
_this$ = 8						; size = 4
_guidInterface$ = 12					; size = 16
?QueryInterface@CvDllCity@@UAGPAXU_GUID@@@Z PROC	; CvDllCity::QueryInterface, COMDAT

; 29   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	push	edi

; 30   : 	if(guidInterface == ICvUnknown::GetInterfaceId() ||
; 31   : 	        guidInterface == ICvCity1::GetInterfaceId())

	mov	eax, DWORD PTR _guidICvUnknown
	mov	DWORD PTR $T218217[ebp], eax
	mov	ecx, DWORD PTR _guidICvUnknown+4
	mov	DWORD PTR $T218217[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvUnknown+8
	mov	DWORD PTR $T218217[ebp+8], edx
	mov	eax, DWORD PTR _guidICvUnknown+12
	mov	DWORD PTR $T218217[ebp+12], eax
	mov	ecx, DWORD PTR $T218217[ebp]
	mov	DWORD PTR $T218216[ebp], ecx
	mov	edx, DWORD PTR $T218217[ebp+4]
	mov	DWORD PTR $T218216[ebp+4], edx
	mov	eax, DWORD PTR $T218217[ebp+8]
	mov	DWORD PTR $T218216[ebp+8], eax
	mov	ecx, DWORD PTR $T218217[ebp+12]
	mov	DWORD PTR $T218216[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T218216[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv137[ebp], edx
	repe cmpsb
	je	SHORT $LN17@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv137[ebp], eax
$LN17@QueryInter:
	mov	ecx, DWORD PTR tv137[ebp]
	mov	DWORD PTR tv85[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv85[ebp], 0
	sete	dl
	test	edx, edx
	jne	SHORT $LN1@QueryInter
	mov	eax, DWORD PTR _guidICvCity1
	mov	DWORD PTR $T218219[ebp], eax
	mov	ecx, DWORD PTR _guidICvCity1+4
	mov	DWORD PTR $T218219[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvCity1+8
	mov	DWORD PTR $T218219[ebp+8], edx
	mov	eax, DWORD PTR _guidICvCity1+12
	mov	DWORD PTR $T218219[ebp+12], eax
	mov	ecx, DWORD PTR $T218219[ebp]
	mov	DWORD PTR $T218218[ebp], ecx
	mov	edx, DWORD PTR $T218219[ebp+4]
	mov	DWORD PTR $T218218[ebp+4], edx
	mov	eax, DWORD PTR $T218219[ebp+8]
	mov	DWORD PTR $T218218[ebp+8], eax
	mov	ecx, DWORD PTR $T218219[ebp+12]
	mov	DWORD PTR $T218218[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T218218[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv161[ebp], edx
	repe cmpsb
	je	SHORT $LN18@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv161[ebp], eax
$LN18@QueryInter:
	mov	ecx, DWORD PTR tv161[ebp]
	mov	DWORD PTR tv90[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv90[ebp], 0
	sete	dl
	test	edx, edx
	je	SHORT $LN2@QueryInter
$LN1@QueryInter:

; 32   : 	{
; 33   : 		IncrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IncrementReference@CvDllCity@@QAEIXZ	; CvDllCity::IncrementReference

; 34   : 		return this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN3@QueryInter
$LN2@QueryInter:

; 35   : 	}
; 36   : 
; 37   : 	return NULL;

	xor	eax, eax
$LN3@QueryInter:

; 38   : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?QueryInterface@CvDllCity@@UAGPAXU_GUID@@@Z ENDP	; CvDllCity::QueryInterface
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IncrementReference@CvDllCity@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IncrementReference@CvDllCity@@QAEIXZ PROC		; CvDllCity::IncrementReference, COMDAT
; _this$ = ecx

; 41   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 42   : 	++m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 43   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 44   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IncrementReference@CvDllCity@@QAEIXZ ENDP		; CvDllCity::IncrementReference
_TEXT	ENDS
PUBLIC	??3CvDllCity@@SAXPAX@Z				; CvDllCity::operator delete
PUBLIC	?DecrementReference@CvDllCity@@QAEIXZ		; CvDllCity::DecrementReference
; Function compile flags: /Odtp
;	COMDAT ?DecrementReference@CvDllCity@@QAEIXZ
_TEXT	SEGMENT
tv70 = -16						; size = 4
_this$ = -12						; size = 4
$T218251 = -8						; size = 4
$T218250 = -4						; size = 4
?DecrementReference@CvDllCity@@QAEIXZ PROC		; CvDllCity::DecrementReference, COMDAT
; _this$ = ecx

; 47   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 48   : 	if(m_uiRefCount == 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	SHORT $LN2@DecrementR

; 49   : 	{
; 50   : 		delete this;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T218251[ebp], ecx
	mov	edx, DWORD PTR $T218251[ebp]
	mov	DWORD PTR $T218250[ebp], edx
	cmp	DWORD PTR $T218250[ebp], 0
	je	SHORT $LN5@DecrementR
	mov	ecx, DWORD PTR $T218250[ebp]
	call	??1CvDllCity@@QAE@XZ			; CvDllCity::~CvDllCity
	mov	eax, 1
	and	eax, 1
	je	SHORT $LN8@DecrementR
	mov	ecx, DWORD PTR $T218250[ebp]
	push	ecx
	call	??3CvDllCity@@SAXPAX@Z			; CvDllCity::operator delete
	add	esp, 4
$LN8@DecrementR:
	mov	edx, DWORD PTR $T218250[ebp]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN6@DecrementR
$LN5@DecrementR:
	mov	DWORD PTR tv70[ebp], 0
$LN6@DecrementR:

; 51   : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN3@DecrementR

; 52   : 	}
; 53   : 	else

	jmp	SHORT $LN3@DecrementR
$LN2@DecrementR:

; 54   : 	{
; 55   : 		--m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 56   : 		return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
$LN3@DecrementR:

; 57   : 	}
; 58   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DecrementReference@CvDllCity@@QAEIXZ ENDP		; CvDllCity::DecrementReference
_TEXT	ENDS
PUBLIC	?GetReferenceCount@CvDllCity@@QAEIXZ		; CvDllCity::GetReferenceCount
; Function compile flags: /Odtp
;	COMDAT ?GetReferenceCount@CvDllCity@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetReferenceCount@CvDllCity@@QAEIXZ PROC		; CvDllCity::GetReferenceCount, COMDAT
; _this$ = ecx

; 61   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 62   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 63   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetReferenceCount@CvDllCity@@QAEIXZ ENDP		; CvDllCity::GetReferenceCount
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Destroy@CvDllCity@@EAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Destroy@CvDllCity@@EAGXXZ PROC				; CvDllCity::Destroy, COMDAT

; 66   : {

	push	ebp
	mov	ebp, esp

; 67   : 	DecrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DecrementReference@CvDllCity@@QAEIXZ	; CvDllCity::DecrementReference

; 68   : }

	pop	ebp
	ret	4
?Destroy@CvDllCity@@EAGXXZ ENDP				; CvDllCity::Destroy
_TEXT	ENDS
EXTRN	?Free@CvDllGameContext@@SAXPAX@Z:PROC		; CvDllGameContext::Free
; Function compile flags: /Odtp
;	COMDAT ??3CvDllCity@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CvDllCity@@SAXPAX@Z PROC				; CvDllCity::operator delete, COMDAT

; 71   : {

	push	ebp
	mov	ebp, esp

; 72   : 	CvDllGameContext::Free(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4

; 73   : }

	pop	ebp
	ret	0
??3CvDllCity@@SAXPAX@Z ENDP				; CvDllCity::operator delete
_TEXT	ENDS
PUBLIC	??2CvDllCity@@SAPAXI@Z				; CvDllCity::operator new
EXTRN	?Allocate@CvDllGameContext@@SAPAXI@Z:PROC	; CvDllGameContext::Allocate
; Function compile flags: /Odtp
;	COMDAT ??2CvDllCity@@SAPAXI@Z
_TEXT	SEGMENT
_bytes$ = 8						; size = 4
??2CvDllCity@@SAPAXI@Z PROC				; CvDllCity::operator new, COMDAT

; 76   : {

	push	ebp
	mov	ebp, esp

; 77   : 	return CvDllGameContext::Allocate(bytes);

	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	call	?Allocate@CvDllGameContext@@SAPAXI@Z	; CvDllGameContext::Allocate
	add	esp, 4

; 78   : }

	pop	ebp
	ret	0
??2CvDllCity@@SAPAXI@Z ENDP				; CvDllCity::operator new
_TEXT	ENDS
PUBLIC	?GetInstance@CvDllCity@@QAEPAVCvCity@@XZ	; CvDllCity::GetInstance
; Function compile flags: /Odtp
;	COMDAT ?GetInstance@CvDllCity@@QAEPAVCvCity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetInstance@CvDllCity@@QAEPAVCvCity@@XZ PROC		; CvDllCity::GetInstance, COMDAT
; _this$ = ecx

; 81   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 82   : 	return m_pCity;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 83   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@CvDllCity@@QAEPAVCvCity@@XZ ENDP		; CvDllCity::GetInstance
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetID@CvDllCity@@UBGHXZ
_TEXT	SEGMENT
$T218278 = -4						; size = 4
_this$ = 8						; size = 4
?GetID@CvDllCity@@UBGHXZ PROC				; CvDllCity::GetID, COMDAT

; 86   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 87   : 	return m_pCity->GetID();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR $T218278[ebp], edx
	mov	eax, DWORD PTR $T218278[ebp]

; 88   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetID@CvDllCity@@UBGHXZ ENDP				; CvDllCity::GetID
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetOwner@CvDllCity@@UBG?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
$T218289 = -4						; size = 4
_this$ = 8						; size = 4
?GetOwner@CvDllCity@@UBG?AW4PlayerTypes@@XZ PROC	; CvDllCity::GetOwner, COMDAT

; 91   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 92   : 	return m_pCity->getOwner();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR $T218289[ebp], edx
	mov	eax, DWORD PTR $T218289[ebp]

; 93   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetOwner@CvDllCity@@UBG?AW4PlayerTypes@@XZ ENDP	; CvDllCity::GetOwner
_TEXT	ENDS
EXTRN	?GetMaxHitPoints@CvCity@@QBEHXZ:PROC		; CvCity::GetMaxHitPoints
; Function compile flags: /Odtp
;	COMDAT ?GetMaxHitPoints@CvDllCity@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetMaxHitPoints@CvDllCity@@UBGHXZ PROC			; CvDllCity::GetMaxHitPoints, COMDAT

; 96   : {

	push	ebp
	mov	ebp, esp

; 97   : 	return m_pCity->GetMaxHitPoints();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetMaxHitPoints@CvCity@@QBEHXZ		; CvCity::GetMaxHitPoints

; 98   : }

	pop	ebp
	ret	4
?GetMaxHitPoints@CvDllCity@@UBGHXZ ENDP			; CvDllCity::GetMaxHitPoints
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetPosition@CvDllCity@@UBGXAAH0@Z
_TEXT	SEGMENT
$T218311 = -8						; size = 4
$T218302 = -4						; size = 4
_this$ = 8						; size = 4
_iX$ = 12						; size = 4
_iY$ = 16						; size = 4
?GetPosition@CvDllCity@@UBGXAAH0@Z PROC			; CvDllCity::GetPosition, COMDAT

; 101  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 102  : 	iX = m_pCity->getX();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T218302[ebp], edx
	mov	eax, DWORD PTR _iX$[ebp]
	mov	ecx, DWORD PTR $T218302[ebp]
	mov	DWORD PTR [eax], ecx

; 103  : 	iY = m_pCity->getY();

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR $T218311[ebp], ecx
	mov	edx, DWORD PTR _iY$[ebp]
	mov	eax, DWORD PTR $T218311[ebp]
	mov	DWORD PTR [edx], eax

; 104  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetPosition@CvDllCity@@UBGXAAH0@Z ENDP			; CvDllCity::GetPosition
_TEXT	ENDS
EXTRN	??3CvDllPlot@@SAXPAX@Z:PROC			; CvDllPlot::operator delete
EXTRN	??0CvDllPlot@@QAE@PAVCvPlot@@@Z:PROC		; CvDllPlot::CvDllPlot
EXTRN	??2CvDllPlot@@SAPAXI@Z:PROC			; CvDllPlot::operator new
EXTRN	?plot@CvCity@@QBEPAVCvPlot@@XZ:PROC		; CvCity::plot
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Plot@CvDllCity@@UBGPAVICvPlot1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Plot@CvDllCity@@UBGPAVICvPlot1@@XZ$0
__ehfuncinfo$?Plot@CvDllCity@@UBGPAVICvPlot1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Plot@CvDllCity@@UBGPAVICvPlot1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?Plot@CvDllCity@@UBGPAVICvPlot1@@XZ
_TEXT	SEGMENT
tv74 = -32						; size = 4
tv79 = -28						; size = 4
$T218315 = -24						; size = 4
$T218314 = -20						; size = 4
_pkPlot$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?Plot@CvDllCity@@UBGPAVICvPlot1@@XZ PROC		; CvDllCity::Plot, COMDAT

; 107  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Plot@CvDllCity@@UBGPAVICvPlot1@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 108  : 	CvPlot* pkPlot = m_pCity->plot();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	DWORD PTR _pkPlot$[ebp], eax

; 109  : 	return (NULL != pkPlot)? new CvDllPlot(pkPlot) : NULL;

	cmp	DWORD PTR _pkPlot$[ebp], 0
	je	SHORT $LN5@Plot
	push	12					; 0000000cH
	call	??2CvDllPlot@@SAPAXI@Z			; CvDllPlot::operator new
	add	esp, 4
	mov	DWORD PTR $T218315[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T218315[ebp], 0
	je	SHORT $LN3@Plot
	mov	ecx, DWORD PTR _pkPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T218315[ebp]
	call	??0CvDllPlot@@QAE@PAVCvPlot@@@Z		; CvDllPlot::CvDllPlot
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN4@Plot
$LN3@Plot:
	mov	DWORD PTR tv79[ebp], 0
$LN4@Plot:
	mov	edx, DWORD PTR tv79[ebp]
	mov	DWORD PTR $T218314[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T218314[ebp]
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN6@Plot
$LN5@Plot:
	mov	DWORD PTR tv74[ebp], 0
$LN6@Plot:
	mov	eax, DWORD PTR tv74[ebp]

; 110  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Plot@CvDllCity@@UBGPAVICvPlot1@@XZ$0:
	mov	eax, DWORD PTR $T218315[ebp]
	push	eax
	call	??3CvDllPlot@@SAXPAX@Z			; CvDllPlot::operator delete
	pop	ecx
	ret	0
__ehhandler$?Plot@CvDllCity@@UBGPAVICvPlot1@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Plot@CvDllCity@@UBGPAVICvPlot1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Plot@CvDllCity@@UBGPAVICvPlot1@@XZ ENDP		; CvDllCity::Plot
EXTRN	?getPopulation@CvCity@@QBEHXZ:PROC		; CvCity::getPopulation
; Function compile flags: /Odtp
;	COMDAT ?GetPopulation@CvDllCity@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetPopulation@CvDllCity@@UBGHXZ PROC			; CvDllCity::GetPopulation, COMDAT

; 113  : {

	push	ebp
	mov	ebp, esp

; 114  : 	return m_pCity->getPopulation();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation

; 115  : }

	pop	ebp
	ret	4
?GetPopulation@CvDllCity@@UBGHXZ ENDP			; CvDllCity::GetPopulation
_TEXT	ENDS
EXTRN	?getNameKey@CvCity@@QBEPBDXZ:PROC		; CvCity::getNameKey
; Function compile flags: /Odtp
;	COMDAT ?GetName@CvDllCity@@UBGPBDXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetName@CvDllCity@@UBGPBDXZ PROC			; CvDllCity::GetName, COMDAT

; 118  : {

	push	ebp
	mov	ebp, esp

; 119  : 	return m_pCity->getNameKey();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey

; 120  : }

	pop	ebp
	ret	4
?GetName@CvDllCity@@UBGPBDXZ ENDP			; CvDllCity::GetName
_TEXT	ENDS
EXTRN	?CanBuyPlot@CvCity@@QAE_NHH_N@Z:PROC		; CvCity::CanBuyPlot
; Function compile flags: /Odtp
;	COMDAT ?CanBuyPlot@CvDllCity@@UAG_NHH_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iPlotX$ = 12						; size = 4
_iPlotY$ = 16						; size = 4
_bIgnoreCost$ = 20					; size = 1
?CanBuyPlot@CvDllCity@@UAG_NHH_N@Z PROC			; CvDllCity::CanBuyPlot, COMDAT

; 123  : {

	push	ebp
	mov	ebp, esp

; 124  : 	return m_pCity->CanBuyPlot(iPlotX, iPlotY, bIgnoreCost);

	movzx	eax, BYTE PTR _bIgnoreCost$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iPlotY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iPlotX$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?CanBuyPlot@CvCity@@QAE_NHH_N@Z		; CvCity::CanBuyPlot

; 125  : }

	pop	ebp
	ret	16					; 00000010H
?CanBuyPlot@CvDllCity@@UAG_NHH_N@Z ENDP			; CvDllCity::CanBuyPlot
_TEXT	ENDS
EXTRN	?getCitySizeType@CvCity@@QBE?AW4CitySizeTypes@@XZ:PROC ; CvCity::getCitySizeType
; Function compile flags: /Odtp
;	COMDAT ?GetCitySizeType@CvDllCity@@UBG?AW4CitySizeTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetCitySizeType@CvDllCity@@UBG?AW4CitySizeTypes@@XZ PROC ; CvDllCity::GetCitySizeType, COMDAT

; 128  : {

	push	ebp
	mov	ebp, esp

; 129  : 	return m_pCity->getCitySizeType();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getCitySizeType@CvCity@@QBE?AW4CitySizeTypes@@XZ ; CvCity::getCitySizeType

; 130  : }

	pop	ebp
	ret	4
?GetCitySizeType@CvDllCity@@UBG?AW4CitySizeTypes@@XZ ENDP ; CvDllCity::GetCitySizeType
_TEXT	ENDS
EXTRN	?GetCityBombardEffectTag@CvCity@@QBEPBDXZ:PROC	; CvCity::GetCityBombardEffectTag
; Function compile flags: /Odtp
;	COMDAT ?GetCityBombardEffectTag@CvDllCity@@UBGPBDXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetCityBombardEffectTag@CvDllCity@@UBGPBDXZ PROC	; CvDllCity::GetCityBombardEffectTag, COMDAT

; 133  : {

	push	ebp
	mov	ebp, esp

; 134  : 	return m_pCity->GetCityBombardEffectTag();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetCityBombardEffectTag@CvCity@@QBEPBDXZ ; CvCity::GetCityBombardEffectTag

; 135  : }

	pop	ebp
	ret	4
?GetCityBombardEffectTag@CvDllCity@@UBGPBDXZ ENDP	; CvDllCity::GetCityBombardEffectTag
_TEXT	ENDS
EXTRN	?getTeam@CvCity@@QBE?AW4TeamTypes@@XZ:PROC	; CvCity::getTeam
; Function compile flags: /Odtp
;	COMDAT ?GetTeam@CvDllCity@@UBG?AW4TeamTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetTeam@CvDllCity@@UBG?AW4TeamTypes@@XZ PROC		; CvDllCity::GetTeam, COMDAT

; 138  : {

	push	ebp
	mov	ebp, esp

; 139  : 	return m_pCity->getTeam();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getTeam@CvCity@@QBE?AW4TeamTypes@@XZ	; CvCity::getTeam

; 140  : }

	pop	ebp
	ret	4
?GetTeam@CvDllCity@@UBG?AW4TeamTypes@@XZ ENDP		; CvDllCity::GetTeam
_TEXT	ENDS
EXTRN	?IsPuppet@CvCity@@QBE_NXZ:PROC			; CvCity::IsPuppet
; Function compile flags: /Odtp
;	COMDAT ?IsPuppet@CvDllCity@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsPuppet@CvDllCity@@UBG_NXZ PROC			; CvDllCity::IsPuppet, COMDAT

; 143  : {

	push	ebp
	mov	ebp, esp

; 144  : 	return m_pCity->IsPuppet();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?IsPuppet@CvCity@@QBE_NXZ		; CvCity::IsPuppet

; 145  : }

	pop	ebp
	ret	4
?IsPuppet@CvDllCity@@UBG_NXZ ENDP			; CvDllCity::IsPuppet
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetX@CvDllCity@@UBGHXZ
_TEXT	SEGMENT
$T218356 = -4						; size = 4
_this$ = 8						; size = 4
?GetX@CvDllCity@@UBGHXZ PROC				; CvDllCity::GetX, COMDAT

; 148  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 149  : 	return m_pCity->getX();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR $T218356[ebp], edx
	mov	eax, DWORD PTR $T218356[ebp]

; 150  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetX@CvDllCity@@UBGHXZ ENDP				; CvDllCity::GetX
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetY@CvDllCity@@UBGHXZ
_TEXT	SEGMENT
$T218367 = -4						; size = 4
_this$ = 8						; size = 4
?GetY@CvDllCity@@UBGHXZ PROC				; CvDllCity::GetY, COMDAT

; 153  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 154  : 	return m_pCity->getY();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR $T218367[ebp], edx
	mov	eax, DWORD PTR $T218367[ebp]

; 155  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetY@CvDllCity@@UBGHXZ ENDP				; CvDllCity::GetY
_TEXT	ENDS
EXTRN	?getStrengthValue@CvCity@@QBEH_N@Z:PROC		; CvCity::getStrengthValue
; Function compile flags: /Odtp
;	COMDAT ?GetStrengthValue@CvDllCity@@UBGH_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bForRangeStrike$ = 12					; size = 1
?GetStrengthValue@CvDllCity@@UBGH_N@Z PROC		; CvDllCity::GetStrengthValue, COMDAT

; 158  : {

	push	ebp
	mov	ebp, esp

; 159  : 	return m_pCity->getStrengthValue(bForRangeStrike);

	movzx	eax, BYTE PTR _bForRangeStrike$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?getStrengthValue@CvCity@@QBEH_N@Z	; CvCity::getStrengthValue

; 160  : }

	pop	ebp
	ret	8
?GetStrengthValue@CvDllCity@@UBGH_N@Z ENDP		; CvDllCity::GetStrengthValue
_TEXT	ENDS
EXTRN	?foodDifference@CvCity@@QBEH_N@Z:PROC		; CvCity::foodDifference
; Function compile flags: /Odtp
;	COMDAT ?FoodDifference@CvDllCity@@UBGH_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bBottom$ = 12						; size = 1
?FoodDifference@CvDllCity@@UBGH_N@Z PROC		; CvDllCity::FoodDifference, COMDAT

; 163  : {

	push	ebp
	mov	ebp, esp

; 164  : 	return m_pCity->foodDifference(bBottom);

	movzx	eax, BYTE PTR _bBottom$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?foodDifference@CvCity@@QBEH_N@Z	; CvCity::foodDifference

; 165  : }

	pop	ebp
	ret	8
?FoodDifference@CvDllCity@@UBGH_N@Z ENDP		; CvDllCity::FoodDifference
_TEXT	ENDS
EXTRN	?getFoodTurnsLeft@CvCity@@QBEHXZ:PROC		; CvCity::getFoodTurnsLeft
; Function compile flags: /Odtp
;	COMDAT ?GetFoodTurnsLeft@CvDllCity@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetFoodTurnsLeft@CvDllCity@@UBGHXZ PROC		; CvDllCity::GetFoodTurnsLeft, COMDAT

; 168  : {

	push	ebp
	mov	ebp, esp

; 169  : 	return m_pCity->getFoodTurnsLeft();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getFoodTurnsLeft@CvCity@@QBEHXZ	; CvCity::getFoodTurnsLeft

; 170  : }

	pop	ebp
	ret	4
?GetFoodTurnsLeft@CvDllCity@@UBGHXZ ENDP		; CvDllCity::GetFoodTurnsLeft
_TEXT	ENDS
EXTRN	?getYieldRate@CvCity@@QBEHW4YieldTypes@@_N@Z:PROC ; CvCity::getYieldRate
; Function compile flags: /Odtp
;	COMDAT ?GetYieldRate@CvDllCity@@UBGHH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_eIndex$ = 12						; size = 4
?GetYieldRate@CvDllCity@@UBGHH@Z PROC			; CvDllCity::GetYieldRate, COMDAT

; 173  : {

	push	ebp
	mov	ebp, esp

; 174  : 	if(eIndex >= -1 && eIndex < NUM_YIELD_TYPES)

	cmp	DWORD PTR _eIndex$[ebp], -1
	jl	SHORT $LN2@GetYieldRa
	cmp	DWORD PTR _eIndex$[ebp], 6
	jge	SHORT $LN2@GetYieldRa

; 175  : 		return m_pCity->getYieldRate(static_cast<YieldTypes>(eIndex), false);

	push	0
	mov	eax, DWORD PTR _eIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?getYieldRate@CvCity@@QBEHW4YieldTypes@@_N@Z ; CvCity::getYieldRate
	jmp	SHORT $LN3@GetYieldRa

; 176  : 	else

	jmp	SHORT $LN3@GetYieldRa
$LN2@GetYieldRa:

; 177  : 		return 0;

	xor	eax, eax
$LN3@GetYieldRa:

; 178  : }

	pop	ebp
	ret	8
?GetYieldRate@CvDllCity@@UBGHH@Z ENDP			; CvDllCity::GetYieldRate
_TEXT	ENDS
EXTRN	?getJONSCulturePerTurn@CvCity@@QBEHXZ:PROC	; CvCity::getJONSCulturePerTurn
; Function compile flags: /Odtp
;	COMDAT ?GetJONSCulturePerTurn@CvDllCity@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetJONSCulturePerTurn@CvDllCity@@UBGHXZ PROC		; CvDllCity::GetJONSCulturePerTurn, COMDAT

; 181  : {

	push	ebp
	mov	ebp, esp

; 182  : 	return m_pCity->getJONSCulturePerTurn();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getJONSCulturePerTurn@CvCity@@QBEHXZ	; CvCity::getJONSCulturePerTurn

; 183  : }

	pop	ebp
	ret	4
?GetJONSCulturePerTurn@CvDllCity@@UBGHXZ ENDP		; CvDllCity::GetJONSCulturePerTurn
_TEXT	ENDS
EXTRN	?GetIDInfo@CvCity@@QBE?AUIDInfo@@XZ:PROC	; CvCity::GetIDInfo
; Function compile flags: /Odtp
;	COMDAT ?GetIDInfo@CvDllCity@@UBG?AUIDInfo@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
?GetIDInfo@CvDllCity@@UBG?AUIDInfo@@XZ PROC		; CvDllCity::GetIDInfo, COMDAT

; 186  : {

	push	ebp
	mov	ebp, esp

; 187  : 	return m_pCity->GetIDInfo();

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?GetIDInfo@CvCity@@QBE?AUIDInfo@@XZ	; CvCity::GetIDInfo
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 188  : }

	pop	ebp
	ret	8
?GetIDInfo@CvDllCity@@UBG?AUIDInfo@@XZ ENDP		; CvDllCity::GetIDInfo
_TEXT	ENDS
EXTRN	?IsWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z:PROC ; CvCityCitizens::IsWorkingPlot
EXTRN	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ:PROC ; CvCity::GetCityCitizens
EXTRN	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ:PROC	; CvDllPlot::GetInstance
; Function compile flags: /Odtp
;	COMDAT ?IsWorkingPlot@CvDllCity@@UBG_NPAVICvPlot1@@@Z
_TEXT	SEGMENT
tv80 = -12						; size = 4
tv71 = -8						; size = 4
_pkPlot$ = -4						; size = 4
_this$ = 8						; size = 4
_pPlot$ = 12						; size = 4
?IsWorkingPlot@CvDllCity@@UBG_NPAVICvPlot1@@@Z PROC	; CvDllCity::IsWorkingPlot, COMDAT

; 191  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 192  : 	CvPlot* pkPlot = (NULL != pPlot)? static_cast<CvDllPlot*>(pPlot)->GetInstance() : NULL;

	cmp	DWORD PTR _pPlot$[ebp], 0
	je	SHORT $LN3@IsWorkingP
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ ; CvDllPlot::GetInstance
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@IsWorkingP
$LN3@IsWorkingP:
	mov	DWORD PTR tv71[ebp], 0
$LN4@IsWorkingP:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR _pkPlot$[ebp], eax

; 193  : 	return (NULL != pkPlot)? m_pCity->GetCityCitizens()->IsWorkingPlot(pkPlot) : NULL;

	cmp	DWORD PTR _pkPlot$[ebp], 0
	je	SHORT $LN5@IsWorkingP
	mov	ecx, DWORD PTR _pkPlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?IsWorkingPlot@CvCityCitizens@@QBE_NPBVCvPlot@@@Z ; CvCityCitizens::IsWorkingPlot
	movzx	eax, al
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN6@IsWorkingP
$LN5@IsWorkingP:
	mov	DWORD PTR tv80[ebp], 0
$LN6@IsWorkingP:
	mov	al, BYTE PTR tv80[ebp]

; 194  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?IsWorkingPlot@CvDllCity@@UBG_NPAVICvPlot1@@@Z ENDP	; CvDllCity::IsWorkingPlot
_TEXT	ENDS
EXTRN	?IsCanWork@CvCityCitizens@@QBE_NPAVCvPlot@@@Z:PROC ; CvCityCitizens::IsCanWork
; Function compile flags: /Odtp
;	COMDAT ?CanWork@CvDllCity@@UBG_NPAVICvPlot1@@@Z
_TEXT	SEGMENT
tv80 = -12						; size = 4
tv71 = -8						; size = 4
_pkPlot$ = -4						; size = 4
_this$ = 8						; size = 4
_pPlot$ = 12						; size = 4
?CanWork@CvDllCity@@UBG_NPAVICvPlot1@@@Z PROC		; CvDllCity::CanWork, COMDAT

; 197  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 198  : 	CvPlot* pkPlot = (NULL != pPlot)? static_cast<CvDllPlot*>(pPlot)->GetInstance() : NULL;

	cmp	DWORD PTR _pPlot$[ebp], 0
	je	SHORT $LN3@CanWork
	mov	ecx, DWORD PTR _pPlot$[ebp]
	call	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ ; CvDllPlot::GetInstance
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@CanWork
$LN3@CanWork:
	mov	DWORD PTR tv71[ebp], 0
$LN4@CanWork:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR _pkPlot$[ebp], eax

; 199  : 	return (NULL != pkPlot)? m_pCity->GetCityCitizens()->IsCanWork(pkPlot) : NULL;

	cmp	DWORD PTR _pkPlot$[ebp], 0
	je	SHORT $LN5@CanWork
	mov	ecx, DWORD PTR _pkPlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?IsCanWork@CvCityCitizens@@QBE_NPAVCvPlot@@@Z ; CvCityCitizens::IsCanWork
	movzx	eax, al
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN6@CanWork
$LN5@CanWork:
	mov	DWORD PTR tv80[ebp], 0
$LN6@CanWork:
	mov	al, BYTE PTR tv80[ebp]

; 200  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?CanWork@CvDllCity@@UBG_NPAVICvPlot1@@@Z ENDP		; CvDllCity::CanWork
_TEXT	ENDS
EXTRN	?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z:PROC ; CvCityCitizens::GetCityPlotFromIndex
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCityPlotFromIndex@CvDllCity@@UBGPAVICvPlot1@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCityPlotFromIndex@CvDllCity@@UBGPAVICvPlot1@@H@Z$0
__ehfuncinfo$?GetCityPlotFromIndex@CvDllCity@@UBGPAVICvPlot1@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCityPlotFromIndex@CvDllCity@@UBGPAVICvPlot1@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetCityPlotFromIndex@CvDllCity@@UBGPAVICvPlot1@@H@Z
_TEXT	SEGMENT
tv77 = -32						; size = 4
tv82 = -28						; size = 4
$T218395 = -24						; size = 4
$T218394 = -20						; size = 4
_pkPlot$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_iIndex$ = 12						; size = 4
?GetCityPlotFromIndex@CvDllCity@@UBGPAVICvPlot1@@H@Z PROC ; CvDllCity::GetCityPlotFromIndex, COMDAT

; 203  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetCityPlotFromIndex@CvDllCity@@UBGPAVICvPlot1@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 204  : 	CvPlot* pkPlot = m_pCity->GetCityCitizens()->GetCityPlotFromIndex(iIndex);

	mov	eax, DWORD PTR _iIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?GetCityPlotFromIndex@CvCityCitizens@@QBEPAVCvPlot@@H@Z ; CvCityCitizens::GetCityPlotFromIndex
	mov	DWORD PTR _pkPlot$[ebp], eax

; 205  : 	return (NULL != pkPlot)? new CvDllPlot(pkPlot) : NULL;

	cmp	DWORD PTR _pkPlot$[ebp], 0
	je	SHORT $LN5@GetCityPlo
	push	12					; 0000000cH
	call	??2CvDllPlot@@SAPAXI@Z			; CvDllPlot::operator new
	add	esp, 4
	mov	DWORD PTR $T218395[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T218395[ebp], 0
	je	SHORT $LN3@GetCityPlo
	mov	edx, DWORD PTR _pkPlot$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T218395[ebp]
	call	??0CvDllPlot@@QAE@PAVCvPlot@@@Z		; CvDllPlot::CvDllPlot
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN4@GetCityPlo
$LN3@GetCityPlo:
	mov	DWORD PTR tv82[ebp], 0
$LN4@GetCityPlo:
	mov	eax, DWORD PTR tv82[ebp]
	mov	DWORD PTR $T218394[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T218394[ebp]
	mov	DWORD PTR tv77[ebp], ecx
	jmp	SHORT $LN6@GetCityPlo
$LN5@GetCityPlo:
	mov	DWORD PTR tv77[ebp], 0
$LN6@GetCityPlo:
	mov	eax, DWORD PTR tv77[ebp]

; 206  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCityPlotFromIndex@CvDllCity@@UBGPAVICvPlot1@@H@Z$0:
	mov	eax, DWORD PTR $T218395[ebp]
	push	eax
	call	??3CvDllPlot@@SAXPAX@Z			; CvDllPlot::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetCityPlotFromIndex@CvDllCity@@UBGPAVICvPlot1@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetCityPlotFromIndex@CvDllCity@@UBGPAVICvPlot1@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCityPlotFromIndex@CvDllCity@@UBGPAVICvPlot1@@H@Z ENDP ; CvDllCity::GetCityPlotFromIndex
EXTRN	?getSyncArchive@CvCity@@QAEAAVFAutoArchive@@XZ:PROC ; CvCity::getSyncArchive
; Function compile flags: /Odtp
;	COMDAT ?GetSyncArchive@CvDllCity@@UAGAAVFAutoArchive@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetSyncArchive@CvDllCity@@UAGAAVFAutoArchive@@XZ PROC	; CvDllCity::GetSyncArchive, COMDAT

; 209  : {

	push	ebp
	mov	ebp, esp

; 210  : 	return m_pCity->getSyncArchive();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getSyncArchive@CvCity@@QAEAAVFAutoArchive@@XZ ; CvCity::getSyncArchive

; 211  : }

	pop	ebp
	ret	4
?GetSyncArchive@CvDllCity@@UAGAAVFAutoArchive@@XZ ENDP	; CvDllCity::GetSyncArchive
_TEXT	ENDS
END
