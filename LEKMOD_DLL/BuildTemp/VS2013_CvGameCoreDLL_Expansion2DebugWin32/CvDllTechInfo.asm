; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvDllTechInfo.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05OCFELOIJ@1?40?40?$AA@			; `string'
CONST	SEGMENT
_guidICvUnknown DD 0d89ba82fH
	DW	09fa3H
	DW	04696H
	DB	0b3H
	DB	0f4H
	DB	052H
	DB	0bdH
	DB	0b1H
	DB	01H
	DB	0cfH
	DB	0b2H
_guidICvTechInfo1 DD 0e0b39559H
	DW	0b03dH
	DW	04338H
	DB	0bbH
	DB	0e3H
	DB	024H
	DB	0c0H
	DB	08dH
	DB	0adH
	DB	0d5H
	DB	04eH
CONST	ENDS
_DATA	SEGMENT
_CIV5_XP2_DLL_VERSION DD FLAT:??_C@_05OCFELOIJ@1?40?40?$AA@
_DATA	ENDS
;	COMDAT ??_C@_05OCFELOIJ@1?40?40?$AA@
CONST	SEGMENT
??_C@_05OCFELOIJ@1?40?40?$AA@ DB '1.0.0', 00H		; `string'
CONST	ENDS
PUBLIC	??_7CvDllTechInfo@@6B@				; CvDllTechInfo::`vftable'
PUBLIC	??_7ICvTechInfo1@@6B@				; ICvTechInfo1::`vftable'
PUBLIC	??_7ICvUnknown@@6B@				; ICvUnknown::`vftable'
PUBLIC	??0CvDllTechInfo@@QAE@PAVCvTechEntry@@@Z	; CvDllTechInfo::CvDllTechInfo
PUBLIC	?QueryInterface@CvDllTechInfo@@UAGPAXU_GUID@@@Z	; CvDllTechInfo::QueryInterface
PUBLIC	?Destroy@CvDllTechInfo@@EAGXXZ			; CvDllTechInfo::Destroy
PUBLIC	?GetDescription@CvDllTechInfo@@UBGPBDXZ		; CvDllTechInfo::GetDescription
PUBLIC	?GetType@CvDllTechInfo@@UBGPBDXZ		; CvDllTechInfo::GetType
PUBLIC	?GetText@CvDllTechInfo@@UBGPBDXZ		; CvDllTechInfo::GetText
PUBLIC	?GetEra@CvDllTechInfo@@UBGHXZ			; CvDllTechInfo::GetEra
PUBLIC	?GetSound@CvDllTechInfo@@UBGPBDXZ		; CvDllTechInfo::GetSound
PUBLIC	?GetSoundMP@CvDllTechInfo@@UBGPBDXZ		; CvDllTechInfo::GetSoundMP
EXTRN	__purecall:PROC
;	COMDAT ??_7CvDllTechInfo@@6B@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdlltechinfo.cpp
CONST	SEGMENT
??_7CvDllTechInfo@@6B@ DD FLAT:?QueryInterface@CvDllTechInfo@@UAGPAXU_GUID@@@Z ; CvDllTechInfo::`vftable'
	DD	FLAT:?Destroy@CvDllTechInfo@@EAGXXZ
	DD	FLAT:?GetDescription@CvDllTechInfo@@UBGPBDXZ
	DD	FLAT:?GetType@CvDllTechInfo@@UBGPBDXZ
	DD	FLAT:?GetText@CvDllTechInfo@@UBGPBDXZ
	DD	FLAT:?GetEra@CvDllTechInfo@@UBGHXZ
	DD	FLAT:?GetSound@CvDllTechInfo@@UBGPBDXZ
	DD	FLAT:?GetSoundMP@CvDllTechInfo@@UBGPBDXZ
CONST	ENDS
;	COMDAT ??_7ICvTechInfo1@@6B@
CONST	SEGMENT
??_7ICvTechInfo1@@6B@ DD FLAT:__purecall		; ICvTechInfo1::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ICvUnknown@@6B@
CONST	SEGMENT
??_7ICvUnknown@@6B@ DD FLAT:__purecall			; ICvUnknown::`vftable'
	DD	FLAT:__purecall
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0CvDllTechInfo@@QAE@PAVCvTechEntry@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pTechInfo$ = 8						; size = 4
??0CvDllTechInfo@@QAE@PAVCvTechEntry@@@Z PROC		; CvDllTechInfo::CvDllTechInfo, COMDAT
; _this$ = ecx

; 19   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnknown@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7ICvTechInfo1@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7CvDllTechInfo@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pTechInfo$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 20   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CvDllTechInfo@@QAE@PAVCvTechEntry@@@Z ENDP		; CvDllTechInfo::CvDllTechInfo
_TEXT	ENDS
PUBLIC	??1CvDllTechInfo@@QAE@XZ			; CvDllTechInfo::~CvDllTechInfo
; Function compile flags: /Odtp
;	COMDAT ??1CvDllTechInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvDllTechInfo@@QAE@XZ PROC				; CvDllTechInfo::~CvDllTechInfo, COMDAT
; _this$ = ecx

; 23   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvDllTechInfo@@6B@

; 24   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1CvDllTechInfo@@QAE@XZ ENDP				; CvDllTechInfo::~CvDllTechInfo
_TEXT	ENDS
PUBLIC	?IncrementReference@CvDllTechInfo@@QAEIXZ	; CvDllTechInfo::IncrementReference
; Function compile flags: /Odtp
;	COMDAT ?QueryInterface@CvDllTechInfo@@UAGPAXU_GUID@@@Z
_TEXT	SEGMENT
tv90 = -88						; size = 4
tv161 = -84						; size = 4
tv85 = -80						; size = 4
tv137 = -76						; size = 4
$T217977 = -72						; size = 16
$T217976 = -56						; size = 16
$T217975 = -40						; size = 16
$T217974 = -20						; size = 16
_this$ = 8						; size = 4
_guidInterface$ = 12					; size = 16
?QueryInterface@CvDllTechInfo@@UAGPAXU_GUID@@@Z PROC	; CvDllTechInfo::QueryInterface, COMDAT

; 27   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	push	edi

; 28   : 	if(guidInterface == ICvUnknown::GetInterfaceId() ||
; 29   : 	        guidInterface == ICvTechInfo1::GetInterfaceId())

	mov	eax, DWORD PTR _guidICvUnknown
	mov	DWORD PTR $T217975[ebp], eax
	mov	ecx, DWORD PTR _guidICvUnknown+4
	mov	DWORD PTR $T217975[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvUnknown+8
	mov	DWORD PTR $T217975[ebp+8], edx
	mov	eax, DWORD PTR _guidICvUnknown+12
	mov	DWORD PTR $T217975[ebp+12], eax
	mov	ecx, DWORD PTR $T217975[ebp]
	mov	DWORD PTR $T217974[ebp], ecx
	mov	edx, DWORD PTR $T217975[ebp+4]
	mov	DWORD PTR $T217974[ebp+4], edx
	mov	eax, DWORD PTR $T217975[ebp+8]
	mov	DWORD PTR $T217974[ebp+8], eax
	mov	ecx, DWORD PTR $T217975[ebp+12]
	mov	DWORD PTR $T217974[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T217974[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv137[ebp], edx
	repe cmpsb
	je	SHORT $LN17@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv137[ebp], eax
$LN17@QueryInter:
	mov	ecx, DWORD PTR tv137[ebp]
	mov	DWORD PTR tv85[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv85[ebp], 0
	sete	dl
	test	edx, edx
	jne	SHORT $LN1@QueryInter
	mov	eax, DWORD PTR _guidICvTechInfo1
	mov	DWORD PTR $T217977[ebp], eax
	mov	ecx, DWORD PTR _guidICvTechInfo1+4
	mov	DWORD PTR $T217977[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvTechInfo1+8
	mov	DWORD PTR $T217977[ebp+8], edx
	mov	eax, DWORD PTR _guidICvTechInfo1+12
	mov	DWORD PTR $T217977[ebp+12], eax
	mov	ecx, DWORD PTR $T217977[ebp]
	mov	DWORD PTR $T217976[ebp], ecx
	mov	edx, DWORD PTR $T217977[ebp+4]
	mov	DWORD PTR $T217976[ebp+4], edx
	mov	eax, DWORD PTR $T217977[ebp+8]
	mov	DWORD PTR $T217976[ebp+8], eax
	mov	ecx, DWORD PTR $T217977[ebp+12]
	mov	DWORD PTR $T217976[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T217976[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv161[ebp], edx
	repe cmpsb
	je	SHORT $LN18@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv161[ebp], eax
$LN18@QueryInter:
	mov	ecx, DWORD PTR tv161[ebp]
	mov	DWORD PTR tv90[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv90[ebp], 0
	sete	dl
	test	edx, edx
	je	SHORT $LN2@QueryInter
$LN1@QueryInter:

; 30   : 	{
; 31   : 		IncrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IncrementReference@CvDllTechInfo@@QAEIXZ ; CvDllTechInfo::IncrementReference

; 32   : 		return this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN3@QueryInter
$LN2@QueryInter:

; 33   : 	}
; 34   : 
; 35   : 	return NULL;

	xor	eax, eax
$LN3@QueryInter:

; 36   : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?QueryInterface@CvDllTechInfo@@UAGPAXU_GUID@@@Z ENDP	; CvDllTechInfo::QueryInterface
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IncrementReference@CvDllTechInfo@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IncrementReference@CvDllTechInfo@@QAEIXZ PROC		; CvDllTechInfo::IncrementReference, COMDAT
; _this$ = ecx

; 39   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 40   : 	++m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 41   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 42   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IncrementReference@CvDllTechInfo@@QAEIXZ ENDP		; CvDllTechInfo::IncrementReference
_TEXT	ENDS
PUBLIC	??3CvDllTechInfo@@SAXPAX@Z			; CvDllTechInfo::operator delete
PUBLIC	?DecrementReference@CvDllTechInfo@@QAEIXZ	; CvDllTechInfo::DecrementReference
; Function compile flags: /Odtp
;	COMDAT ?DecrementReference@CvDllTechInfo@@QAEIXZ
_TEXT	SEGMENT
tv70 = -16						; size = 4
_this$ = -12						; size = 4
$T218009 = -8						; size = 4
$T218008 = -4						; size = 4
?DecrementReference@CvDllTechInfo@@QAEIXZ PROC		; CvDllTechInfo::DecrementReference, COMDAT
; _this$ = ecx

; 45   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 46   : 	if(m_uiRefCount == 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	SHORT $LN2@DecrementR

; 47   : 	{
; 48   : 		delete this;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T218009[ebp], ecx
	mov	edx, DWORD PTR $T218009[ebp]
	mov	DWORD PTR $T218008[ebp], edx
	cmp	DWORD PTR $T218008[ebp], 0
	je	SHORT $LN5@DecrementR
	mov	ecx, DWORD PTR $T218008[ebp]
	call	??1CvDllTechInfo@@QAE@XZ		; CvDllTechInfo::~CvDllTechInfo
	mov	eax, 1
	and	eax, 1
	je	SHORT $LN8@DecrementR
	mov	ecx, DWORD PTR $T218008[ebp]
	push	ecx
	call	??3CvDllTechInfo@@SAXPAX@Z		; CvDllTechInfo::operator delete
	add	esp, 4
$LN8@DecrementR:
	mov	edx, DWORD PTR $T218008[ebp]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN6@DecrementR
$LN5@DecrementR:
	mov	DWORD PTR tv70[ebp], 0
$LN6@DecrementR:

; 49   : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN3@DecrementR

; 50   : 	}
; 51   : 	else

	jmp	SHORT $LN3@DecrementR
$LN2@DecrementR:

; 52   : 	{
; 53   : 		--m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 54   : 		return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
$LN3@DecrementR:

; 55   : 	}
; 56   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DecrementReference@CvDllTechInfo@@QAEIXZ ENDP		; CvDllTechInfo::DecrementReference
_TEXT	ENDS
PUBLIC	?GetReferenceCount@CvDllTechInfo@@QAEIXZ	; CvDllTechInfo::GetReferenceCount
; Function compile flags: /Odtp
;	COMDAT ?GetReferenceCount@CvDllTechInfo@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetReferenceCount@CvDllTechInfo@@QAEIXZ PROC		; CvDllTechInfo::GetReferenceCount, COMDAT
; _this$ = ecx

; 59   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 60   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 61   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetReferenceCount@CvDllTechInfo@@QAEIXZ ENDP		; CvDllTechInfo::GetReferenceCount
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Destroy@CvDllTechInfo@@EAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Destroy@CvDllTechInfo@@EAGXXZ PROC			; CvDllTechInfo::Destroy, COMDAT

; 64   : {

	push	ebp
	mov	ebp, esp

; 65   : 	DecrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DecrementReference@CvDllTechInfo@@QAEIXZ ; CvDllTechInfo::DecrementReference

; 66   : }

	pop	ebp
	ret	4
?Destroy@CvDllTechInfo@@EAGXXZ ENDP			; CvDllTechInfo::Destroy
_TEXT	ENDS
EXTRN	?Free@CvDllGameContext@@SAXPAX@Z:PROC		; CvDllGameContext::Free
; Function compile flags: /Odtp
;	COMDAT ??3CvDllTechInfo@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CvDllTechInfo@@SAXPAX@Z PROC				; CvDllTechInfo::operator delete, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp

; 70   : 	CvDllGameContext::Free(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4

; 71   : }

	pop	ebp
	ret	0
??3CvDllTechInfo@@SAXPAX@Z ENDP				; CvDllTechInfo::operator delete
_TEXT	ENDS
PUBLIC	??2CvDllTechInfo@@SAPAXI@Z			; CvDllTechInfo::operator new
EXTRN	?Allocate@CvDllGameContext@@SAPAXI@Z:PROC	; CvDllGameContext::Allocate
; Function compile flags: /Odtp
;	COMDAT ??2CvDllTechInfo@@SAPAXI@Z
_TEXT	SEGMENT
_bytes$ = 8						; size = 4
??2CvDllTechInfo@@SAPAXI@Z PROC				; CvDllTechInfo::operator new, COMDAT

; 74   : {

	push	ebp
	mov	ebp, esp

; 75   : 	return CvDllGameContext::Allocate(bytes);

	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	call	?Allocate@CvDllGameContext@@SAPAXI@Z	; CvDllGameContext::Allocate
	add	esp, 4

; 76   : }

	pop	ebp
	ret	0
??2CvDllTechInfo@@SAPAXI@Z ENDP				; CvDllTechInfo::operator new
_TEXT	ENDS
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Odtp
;	COMDAT ?GetDescription@CvDllTechInfo@@UBGPBDXZ
_TEXT	SEGMENT
$T218029 = -4						; size = 4
_this$ = 8						; size = 4
?GetDescription@CvDllTechInfo@@UBGPBDXZ PROC		; CvDllTechInfo::GetDescription, COMDAT

; 79   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 80   : 	return m_pTechInfo->GetDescription();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T218029[ebp], ecx
	mov	ecx, DWORD PTR $T218029[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 81   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetDescription@CvDllTechInfo@@UBGPBDXZ ENDP		; CvDllTechInfo::GetDescription
_TEXT	ENDS
EXTRN	?GetEra@CvTechEntry@@QBEHXZ:PROC		; CvTechEntry::GetEra
; Function compile flags: /Odtp
;	COMDAT ?GetEra@CvDllTechInfo@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetEra@CvDllTechInfo@@UBGHXZ PROC			; CvDllTechInfo::GetEra, COMDAT

; 84   : {

	push	ebp
	mov	ebp, esp

; 85   : 	return m_pTechInfo->GetEra();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetEra@CvTechEntry@@QBEHXZ		; CvTechEntry::GetEra

; 86   : }

	pop	ebp
	ret	4
?GetEra@CvDllTechInfo@@UBGHXZ ENDP			; CvDllTechInfo::GetEra
_TEXT	ENDS
EXTRN	?GetSound@CvTechEntry@@QBEPBDXZ:PROC		; CvTechEntry::GetSound
; Function compile flags: /Odtp
;	COMDAT ?GetSound@CvDllTechInfo@@UBGPBDXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetSound@CvDllTechInfo@@UBGPBDXZ PROC			; CvDllTechInfo::GetSound, COMDAT

; 89   : {

	push	ebp
	mov	ebp, esp

; 90   : 	return m_pTechInfo->GetSound();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetSound@CvTechEntry@@QBEPBDXZ		; CvTechEntry::GetSound

; 91   : }

	pop	ebp
	ret	4
?GetSound@CvDllTechInfo@@UBGPBDXZ ENDP			; CvDllTechInfo::GetSound
_TEXT	ENDS
EXTRN	?GetSoundMP@CvTechEntry@@QBEPBDXZ:PROC		; CvTechEntry::GetSoundMP
; Function compile flags: /Odtp
;	COMDAT ?GetSoundMP@CvDllTechInfo@@UBGPBDXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetSoundMP@CvDllTechInfo@@UBGPBDXZ PROC		; CvDllTechInfo::GetSoundMP, COMDAT

; 94   : {

	push	ebp
	mov	ebp, esp

; 95   : 	return m_pTechInfo->GetSoundMP();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetSoundMP@CvTechEntry@@QBEPBDXZ	; CvTechEntry::GetSoundMP

; 96   : }

	pop	ebp
	ret	4
?GetSoundMP@CvDllTechInfo@@UBGPBDXZ ENDP		; CvDllTechInfo::GetSoundMP
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetType@CvDllTechInfo@@UBGPBDXZ
_TEXT	SEGMENT
$T218041 = -4						; size = 4
_this$ = 8						; size = 4
?GetType@CvDllTechInfo@@UBGPBDXZ PROC			; CvDllTechInfo::GetType, COMDAT

; 99   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 100  : 	return m_pTechInfo->GetType();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T218041[ebp], ecx
	mov	ecx, DWORD PTR $T218041[ebp]
	add	ecx, 176				; 000000b0H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 101  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetType@CvDllTechInfo@@UBGPBDXZ ENDP			; CvDllTechInfo::GetType
_TEXT	ENDS
EXTRN	?GetText@CvBaseInfo@@QBEPBDXZ:PROC		; CvBaseInfo::GetText
; Function compile flags: /Odtp
;	COMDAT ?GetText@CvDllTechInfo@@UBGPBDXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetText@CvDllTechInfo@@UBGPBDXZ PROC			; CvDllTechInfo::GetText, COMDAT

; 104  : {

	push	ebp
	mov	ebp, esp

; 105  : 	return m_pTechInfo->GetText();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetText@CvBaseInfo@@QBEPBDXZ		; CvBaseInfo::GetText

; 106  : }

	pop	ebp
	ret	4
?GetText@CvDllTechInfo@@UBGPBDXZ ENDP			; CvDllTechInfo::GetText
_TEXT	ENDS
END
