; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvDllScriptSystemUtility.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05OCFELOIJ@1?40?40?$AA@			; `string'
CONST	SEGMENT
_guidICvUnknown DD 0d89ba82fH
	DW	09fa3H
	DW	04696H
	DB	0b3H
	DB	0f4H
	DB	052H
	DB	0bdH
	DB	0b1H
	DB	01H
	DB	0cfH
	DB	0b2H
_guidICvScriptSystemUtility1 DD 0c004434cH
	DW	0878eH
	DW	04bcdH
	DB	0baH
	DB	0b2H
	DB	04cH
	DB	0eeH
	DB	034H
	DB	01dH
	DB	071H
	DB	01bH
CONST	ENDS
_DATA	SEGMENT
_CIV5_XP2_DLL_VERSION DD FLAT:??_C@_05OCFELOIJ@1?40?40?$AA@
_DATA	ENDS
;	COMDAT ??_C@_05OCFELOIJ@1?40?40?$AA@
CONST	SEGMENT
??_C@_05OCFELOIJ@1?40?40?$AA@ DB '1.0.0', 00H		; `string'
CONST	ENDS
PUBLIC	??_7CvDllScriptSystemUtility@@6B@		; CvDllScriptSystemUtility::`vftable'
PUBLIC	??_7ICvScriptSystemUtility1@@6B@		; ICvScriptSystemUtility1::`vftable'
PUBLIC	??_7ICvUnknown@@6B@				; ICvUnknown::`vftable'
PUBLIC	??0CvDllScriptSystemUtility@@QAE@XZ		; CvDllScriptSystemUtility::CvDllScriptSystemUtility
PUBLIC	?QueryInterface@CvDllScriptSystemUtility@@UAGPAXU_GUID@@@Z ; CvDllScriptSystemUtility::QueryInterface
PUBLIC	?Destroy@CvDllScriptSystemUtility@@EAGXXZ	; CvDllScriptSystemUtility::Destroy
PUBLIC	?RegisterScriptLibraries@CvDllScriptSystemUtility@@UAGXPAUlua_State@@@Z ; CvDllScriptSystemUtility::RegisterScriptLibraries
PUBLIC	?PushCvCityInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvCity1@@@Z ; CvDllScriptSystemUtility::PushCvCityInstance
PUBLIC	?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z ; CvDllScriptSystemUtility::GetCvCityInstance
PUBLIC	?PushCvDealInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvDeal1@@@Z ; CvDllScriptSystemUtility::PushCvDealInstance
PUBLIC	?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z ; CvDllScriptSystemUtility::GetCvDealInstance
PUBLIC	?PushCvPlotInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvPlot1@@@Z ; CvDllScriptSystemUtility::PushCvPlotInstance
PUBLIC	?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z ; CvDllScriptSystemUtility::GetCvPlotInstance
PUBLIC	?PushCvUnitInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvUnit1@@@Z ; CvDllScriptSystemUtility::PushCvUnitInstance
PUBLIC	?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z ; CvDllScriptSystemUtility::GetCvUnitInstance
PUBLIC	?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z ; CvDllScriptSystemUtility::PushReplayFromStream
EXTRN	__purecall:PROC
;	COMDAT ??_7CvDllScriptSystemUtility@@6B@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllscriptsystemutility.cpp
CONST	SEGMENT
??_7CvDllScriptSystemUtility@@6B@ DD FLAT:?QueryInterface@CvDllScriptSystemUtility@@UAGPAXU_GUID@@@Z ; CvDllScriptSystemUtility::`vftable'
	DD	FLAT:?Destroy@CvDllScriptSystemUtility@@EAGXXZ
	DD	FLAT:?RegisterScriptLibraries@CvDllScriptSystemUtility@@UAGXPAUlua_State@@@Z
	DD	FLAT:?PushCvCityInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvCity1@@@Z
	DD	FLAT:?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z
	DD	FLAT:?PushCvDealInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvDeal1@@@Z
	DD	FLAT:?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z
	DD	FLAT:?PushCvPlotInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvPlot1@@@Z
	DD	FLAT:?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z
	DD	FLAT:?PushCvUnitInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvUnit1@@@Z
	DD	FLAT:?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z
	DD	FLAT:?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z
CONST	ENDS
;	COMDAT ??_7ICvScriptSystemUtility1@@6B@
CONST	SEGMENT
??_7ICvScriptSystemUtility1@@6B@ DD FLAT:__purecall	; ICvScriptSystemUtility1::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ICvUnknown@@6B@
CONST	SEGMENT
??_7ICvUnknown@@6B@ DD FLAT:__purecall			; ICvUnknown::`vftable'
	DD	FLAT:__purecall
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0CvDllScriptSystemUtility@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CvDllScriptSystemUtility@@QAE@XZ PROC		; CvDllScriptSystemUtility::CvDllScriptSystemUtility, COMDAT
; _this$ = ecx

; 28   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnknown@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7ICvScriptSystemUtility1@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7CvDllScriptSystemUtility@@6B@

; 29   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CvDllScriptSystemUtility@@QAE@XZ ENDP		; CvDllScriptSystemUtility::CvDllScriptSystemUtility
_TEXT	ENDS
PUBLIC	??1CvDllScriptSystemUtility@@QAE@XZ		; CvDllScriptSystemUtility::~CvDllScriptSystemUtility
; Function compile flags: /Odtp
;	COMDAT ??1CvDllScriptSystemUtility@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvDllScriptSystemUtility@@QAE@XZ PROC		; CvDllScriptSystemUtility::~CvDllScriptSystemUtility, COMDAT
; _this$ = ecx

; 32   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvDllScriptSystemUtility@@6B@

; 33   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1CvDllScriptSystemUtility@@QAE@XZ ENDP		; CvDllScriptSystemUtility::~CvDllScriptSystemUtility
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?QueryInterface@CvDllScriptSystemUtility@@UAGPAXU_GUID@@@Z
_TEXT	SEGMENT
tv89 = -88						; size = 4
tv160 = -84						; size = 4
tv84 = -80						; size = 4
tv136 = -76						; size = 4
$T225044 = -72						; size = 16
$T225043 = -56						; size = 16
$T225042 = -40						; size = 16
$T225041 = -20						; size = 16
_this$ = 8						; size = 4
_guidInterface$ = 12					; size = 16
?QueryInterface@CvDllScriptSystemUtility@@UAGPAXU_GUID@@@Z PROC ; CvDllScriptSystemUtility::QueryInterface, COMDAT

; 36   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	push	edi

; 37   : 	if(guidInterface == ICvUnknown::GetInterfaceId() ||
; 38   : 	        guidInterface == ICvScriptSystemUtility1::GetInterfaceId())

	mov	eax, DWORD PTR _guidICvUnknown
	mov	DWORD PTR $T225042[ebp], eax
	mov	ecx, DWORD PTR _guidICvUnknown+4
	mov	DWORD PTR $T225042[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvUnknown+8
	mov	DWORD PTR $T225042[ebp+8], edx
	mov	eax, DWORD PTR _guidICvUnknown+12
	mov	DWORD PTR $T225042[ebp+12], eax
	mov	ecx, DWORD PTR $T225042[ebp]
	mov	DWORD PTR $T225041[ebp], ecx
	mov	edx, DWORD PTR $T225042[ebp+4]
	mov	DWORD PTR $T225041[ebp+4], edx
	mov	eax, DWORD PTR $T225042[ebp+8]
	mov	DWORD PTR $T225041[ebp+8], eax
	mov	ecx, DWORD PTR $T225042[ebp+12]
	mov	DWORD PTR $T225041[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T225041[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv136[ebp], edx
	repe cmpsb
	je	SHORT $LN17@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv136[ebp], eax
$LN17@QueryInter:
	mov	ecx, DWORD PTR tv136[ebp]
	mov	DWORD PTR tv84[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv84[ebp], 0
	sete	dl
	test	edx, edx
	jne	SHORT $LN1@QueryInter
	mov	eax, DWORD PTR _guidICvScriptSystemUtility1
	mov	DWORD PTR $T225044[ebp], eax
	mov	ecx, DWORD PTR _guidICvScriptSystemUtility1+4
	mov	DWORD PTR $T225044[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvScriptSystemUtility1+8
	mov	DWORD PTR $T225044[ebp+8], edx
	mov	eax, DWORD PTR _guidICvScriptSystemUtility1+12
	mov	DWORD PTR $T225044[ebp+12], eax
	mov	ecx, DWORD PTR $T225044[ebp]
	mov	DWORD PTR $T225043[ebp], ecx
	mov	edx, DWORD PTR $T225044[ebp+4]
	mov	DWORD PTR $T225043[ebp+4], edx
	mov	eax, DWORD PTR $T225044[ebp+8]
	mov	DWORD PTR $T225043[ebp+8], eax
	mov	ecx, DWORD PTR $T225044[ebp+12]
	mov	DWORD PTR $T225043[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T225043[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv160[ebp], edx
	repe cmpsb
	je	SHORT $LN18@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv160[ebp], eax
$LN18@QueryInter:
	mov	ecx, DWORD PTR tv160[ebp]
	mov	DWORD PTR tv89[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv89[ebp], 0
	sete	dl
	test	edx, edx
	je	SHORT $LN2@QueryInter
$LN1@QueryInter:

; 39   : 	{
; 40   : 		return this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN3@QueryInter
$LN2@QueryInter:

; 41   : 	}
; 42   : 
; 43   : 	return NULL;

	xor	eax, eax
$LN3@QueryInter:

; 44   : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?QueryInterface@CvDllScriptSystemUtility@@UAGPAXU_GUID@@@Z ENDP ; CvDllScriptSystemUtility::QueryInterface
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Destroy@CvDllScriptSystemUtility@@EAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Destroy@CvDllScriptSystemUtility@@EAGXXZ PROC		; CvDllScriptSystemUtility::Destroy, COMDAT

; 47   : {

	push	ebp
	mov	ebp, esp

; 48   : 	//Do Nothing, object is managed externally.
; 49   : }

	pop	ebp
	ret	4
?Destroy@CvDllScriptSystemUtility@@EAGXXZ ENDP		; CvDllScriptSystemUtility::Destroy
_TEXT	ENDS
PUBLIC	??3CvDllScriptSystemUtility@@SAXPAX@Z		; CvDllScriptSystemUtility::operator delete
EXTRN	?Free@CvDllGameContext@@SAXPAX@Z:PROC		; CvDllGameContext::Free
; Function compile flags: /Odtp
;	COMDAT ??3CvDllScriptSystemUtility@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CvDllScriptSystemUtility@@SAXPAX@Z PROC		; CvDllScriptSystemUtility::operator delete, COMDAT

; 52   : {

	push	ebp
	mov	ebp, esp

; 53   : 	CvDllGameContext::Free(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4

; 54   : }

	pop	ebp
	ret	0
??3CvDllScriptSystemUtility@@SAXPAX@Z ENDP		; CvDllScriptSystemUtility::operator delete
_TEXT	ENDS
PUBLIC	??2CvDllScriptSystemUtility@@SAPAXI@Z		; CvDllScriptSystemUtility::operator new
EXTRN	?Allocate@CvDllGameContext@@SAPAXI@Z:PROC	; CvDllGameContext::Allocate
; Function compile flags: /Odtp
;	COMDAT ??2CvDllScriptSystemUtility@@SAPAXI@Z
_TEXT	SEGMENT
_bytes$ = 8						; size = 4
??2CvDllScriptSystemUtility@@SAPAXI@Z PROC		; CvDllScriptSystemUtility::operator new, COMDAT

; 57   : {

	push	ebp
	mov	ebp, esp

; 58   : 	return CvDllGameContext::Allocate(bytes);

	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	call	?Allocate@CvDllGameContext@@SAPAXI@Z	; CvDllGameContext::Allocate
	add	esp, 4

; 59   : }

	pop	ebp
	ret	0
??2CvDllScriptSystemUtility@@SAPAXI@Z ENDP		; CvDllScriptSystemUtility::operator new
_TEXT	ENDS
EXTRN	?RegisterScriptData@LuaSupport@@YAXPAUlua_State@@@Z:PROC ; LuaSupport::RegisterScriptData
; Function compile flags: /Odtp
;	COMDAT ?RegisterScriptLibraries@CvDllScriptSystemUtility@@UAGXPAUlua_State@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_L$ = 12						; size = 4
?RegisterScriptLibraries@CvDllScriptSystemUtility@@UAGXPAUlua_State@@@Z PROC ; CvDllScriptSystemUtility::RegisterScriptLibraries, COMDAT

; 62   : {

	push	ebp
	mov	ebp, esp

; 63   : 	LuaSupport::RegisterScriptData(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?RegisterScriptData@LuaSupport@@YAXPAUlua_State@@@Z ; LuaSupport::RegisterScriptData
	add	esp, 4

; 64   : }

	pop	ebp
	ret	8
?RegisterScriptLibraries@CvDllScriptSystemUtility@@UAGXPAUlua_State@@@Z ENDP ; CvDllScriptSystemUtility::RegisterScriptLibraries
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
EXTRN	_lua_pushnil:PROC
EXTRN	?GetInstance@CvDllCity@@QAEPAVCvCity@@XZ:PROC	; CvDllCity::GetInstance
; Function compile flags: /Odtp
;	COMDAT ?PushCvCityInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvCity1@@@Z
_TEXT	SEGMENT
_pkDllCity$224336 = -4					; size = 4
_this$ = 8						; size = 4
_L$ = 12						; size = 4
_pkCity$ = 16						; size = 4
?PushCvCityInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvCity1@@@Z PROC ; CvDllScriptSystemUtility::PushCvCityInstance, COMDAT

; 67   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 68   : 	if(NULL != L && NULL != pkCity)

	cmp	DWORD PTR _L$[ebp], 0
	je	SHORT $LN2@PushCvCity
	cmp	DWORD PTR _pkCity$[ebp], 0
	je	SHORT $LN2@PushCvCity

; 69   : 	{
; 70   : 		CvDllCity* pkDllCity = static_cast<CvDllCity*>(pkCity);

	mov	eax, DWORD PTR _pkCity$[ebp]
	mov	DWORD PTR _pkDllCity$224336[ebp], eax

; 71   : 		CvLuaCity::Push(L, pkDllCity->GetInstance());

	mov	ecx, DWORD PTR _pkDllCity$224336[ebp]
	call	?GetInstance@CvDllCity@@QAEPAVCvCity@@XZ ; CvDllCity::GetInstance
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8

; 72   : 	}
; 73   : 	else

	jmp	SHORT $LN3@PushCvCity
$LN2@PushCvCity:

; 74   : 	{
; 75   : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN3@PushCvCity:

; 76   : 	}
; 77   : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?PushCvCityInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvCity1@@@Z ENDP ; CvDllScriptSystemUtility::PushCvCityInstance
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
EXTRN	??3CvDllCity@@SAXPAX@Z:PROC			; CvDllCity::operator delete
EXTRN	??0CvDllCity@@QAE@PAVCvCity@@@Z:PROC		; CvDllCity::CvDllCity
EXTRN	??2CvDllCity@@SAPAXI@Z:PROC			; CvDllCity::operator new
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z$0
__ehfuncinfo$?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
tv75 = -32						; size = 4
tv80 = -28						; size = 4
$T225084 = -24						; size = 4
$T225083 = -20						; size = 4
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_L$ = 12						; size = 4
_index$ = 16						; size = 4
_bErrorOnFail$ = 20					; size = 1
?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z PROC ; CvDllScriptSystemUtility::GetCvCityInstance, COMDAT

; 80   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 81   : 	CvCity* pkCity = CvLuaCity::GetInstance(L, index, bErrorOnFail);

	movzx	eax, BYTE PTR _bErrorOnFail$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkCity$[ebp], eax

; 82   : 	return (NULL != pkCity)? new CvDllCity(pkCity) : NULL;

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	SHORT $LN5@GetCvCityI
	push	12					; 0000000cH
	call	??2CvDllCity@@SAPAXI@Z			; CvDllCity::operator new
	add	esp, 4
	mov	DWORD PTR $T225084[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T225084[ebp], 0
	je	SHORT $LN3@GetCvCityI
	mov	eax, DWORD PTR _pkCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T225084[ebp]
	call	??0CvDllCity@@QAE@PAVCvCity@@@Z		; CvDllCity::CvDllCity
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN4@GetCvCityI
$LN3@GetCvCityI:
	mov	DWORD PTR tv80[ebp], 0
$LN4@GetCvCityI:
	mov	ecx, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T225083[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T225083[ebp]
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN6@GetCvCityI
$LN5@GetCvCityI:
	mov	DWORD PTR tv75[ebp], 0
$LN6@GetCvCityI:
	mov	eax, DWORD PTR tv75[ebp]

; 83   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z$0:
	mov	eax, DWORD PTR $T225084[ebp]
	push	eax
	call	??3CvDllCity@@SAXPAX@Z			; CvDllCity::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCvCityInstance@CvDllScriptSystemUtility@@UAGPAVICvCity1@@PAUlua_State@@H_N@Z ENDP ; CvDllScriptSystemUtility::GetCvCityInstance
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAXPAUlua_State@@PAVCvDeal@@@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::Push
EXTRN	?GetInstance@CvDllDeal@@QAEPAVCvDeal@@XZ:PROC	; CvDllDeal::GetInstance
; Function compile flags: /Odtp
;	COMDAT ?PushCvDealInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvDeal1@@@Z
_TEXT	SEGMENT
_pkDllDeal$224390 = -4					; size = 4
_this$ = 8						; size = 4
_L$ = 12						; size = 4
_pkDeal$ = 16						; size = 4
?PushCvDealInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvDeal1@@@Z PROC ; CvDllScriptSystemUtility::PushCvDealInstance, COMDAT

; 86   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 87   : 	if(NULL != L && NULL != pkDeal)

	cmp	DWORD PTR _L$[ebp], 0
	je	SHORT $LN2@PushCvDeal
	cmp	DWORD PTR _pkDeal$[ebp], 0
	je	SHORT $LN2@PushCvDeal

; 88   : 	{
; 89   : 		CvDllDeal* pkDllDeal = static_cast<CvDllDeal*>(pkDeal);

	mov	eax, DWORD PTR _pkDeal$[ebp]
	mov	DWORD PTR _pkDllDeal$224390[ebp], eax

; 90   : 		CvLuaDeal::Push(L, pkDllDeal->GetInstance());

	mov	ecx, DWORD PTR _pkDllDeal$224390[ebp]
	call	?GetInstance@CvDllDeal@@QAEPAVCvDeal@@XZ ; CvDllDeal::GetInstance
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?Push@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAXPAUlua_State@@PAVCvDeal@@@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::Push
	add	esp, 8

; 91   : 	}
; 92   : 	else

	jmp	SHORT $LN3@PushCvDeal
$LN2@PushCvDeal:

; 93   : 	{
; 94   : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN3@PushCvDeal:

; 95   : 	}
; 96   : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?PushCvDealInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvDeal1@@@Z ENDP ; CvDllScriptSystemUtility::PushCvDealInstance
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
EXTRN	??3CvDllDeal@@SAXPAX@Z:PROC			; CvDllDeal::operator delete
EXTRN	??0CvDllDeal@@QAE@PAVCvDeal@@@Z:PROC		; CvDllDeal::CvDllDeal
EXTRN	??2CvDllDeal@@SAPAXI@Z:PROC			; CvDllDeal::operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z$0
__ehfuncinfo$?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
tv75 = -32						; size = 4
tv80 = -28						; size = 4
$T225106 = -24						; size = 4
$T225105 = -20						; size = 4
_pkDeal$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_L$ = 12						; size = 4
_index$ = 16						; size = 4
_bErrorOnFail$ = 20					; size = 1
?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z PROC ; CvDllScriptSystemUtility::GetCvDealInstance, COMDAT

; 99   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 100  : 	CvDeal* pkDeal = CvLuaDeal::GetInstance(L, index, bErrorOnFail);

	movzx	eax, BYTE PTR _bErrorOnFail$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkDeal$[ebp], eax

; 101  : 	return (NULL != pkDeal)? new CvDllDeal(pkDeal) : NULL;

	cmp	DWORD PTR _pkDeal$[ebp], 0
	je	SHORT $LN5@GetCvDealI
	push	12					; 0000000cH
	call	??2CvDllDeal@@SAPAXI@Z			; CvDllDeal::operator new
	add	esp, 4
	mov	DWORD PTR $T225106[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T225106[ebp], 0
	je	SHORT $LN3@GetCvDealI
	mov	eax, DWORD PTR _pkDeal$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T225106[ebp]
	call	??0CvDllDeal@@QAE@PAVCvDeal@@@Z		; CvDllDeal::CvDllDeal
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN4@GetCvDealI
$LN3@GetCvDealI:
	mov	DWORD PTR tv80[ebp], 0
$LN4@GetCvDealI:
	mov	ecx, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T225105[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T225105[ebp]
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN6@GetCvDealI
$LN5@GetCvDealI:
	mov	DWORD PTR tv75[ebp], 0
$LN6@GetCvDealI:
	mov	eax, DWORD PTR tv75[ebp]

; 102  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z$0:
	mov	eax, DWORD PTR $T225106[ebp]
	push	eax
	call	??3CvDllDeal@@SAXPAX@Z			; CvDllDeal::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCvDealInstance@CvDllScriptSystemUtility@@UAGPAVICvDeal1@@PAUlua_State@@H_N@Z ENDP ; CvDllScriptSystemUtility::GetCvDealInstance
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
EXTRN	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ:PROC	; CvDllPlot::GetInstance
; Function compile flags: /Odtp
;	COMDAT ?PushCvPlotInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvPlot1@@@Z
_TEXT	SEGMENT
_pkDllPlot$224444 = -4					; size = 4
_this$ = 8						; size = 4
_L$ = 12						; size = 4
_pkPlot$ = 16						; size = 4
?PushCvPlotInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvPlot1@@@Z PROC ; CvDllScriptSystemUtility::PushCvPlotInstance, COMDAT

; 105  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 106  : 	if(NULL != L && NULL != pkPlot)

	cmp	DWORD PTR _L$[ebp], 0
	je	SHORT $LN2@PushCvPlot
	cmp	DWORD PTR _pkPlot$[ebp], 0
	je	SHORT $LN2@PushCvPlot

; 107  : 	{
; 108  : 		CvDllPlot* pkDllPlot = static_cast<CvDllPlot*>(pkPlot);

	mov	eax, DWORD PTR _pkPlot$[ebp]
	mov	DWORD PTR _pkDllPlot$224444[ebp], eax

; 109  : 		CvLuaPlot::Push(L, pkDllPlot->GetInstance());

	mov	ecx, DWORD PTR _pkDllPlot$224444[ebp]
	call	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ ; CvDllPlot::GetInstance
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
	add	esp, 8

; 110  : 	}
; 111  : 	else

	jmp	SHORT $LN3@PushCvPlot
$LN2@PushCvPlot:

; 112  : 	{
; 113  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN3@PushCvPlot:

; 114  : 	}
; 115  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?PushCvPlotInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvPlot1@@@Z ENDP ; CvDllScriptSystemUtility::PushCvPlotInstance
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
EXTRN	??3CvDllPlot@@SAXPAX@Z:PROC			; CvDllPlot::operator delete
EXTRN	??0CvDllPlot@@QAE@PAVCvPlot@@@Z:PROC		; CvDllPlot::CvDllPlot
EXTRN	??2CvDllPlot@@SAPAXI@Z:PROC			; CvDllPlot::operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z$0
__ehfuncinfo$?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
tv75 = -32						; size = 4
tv80 = -28						; size = 4
$T225123 = -24						; size = 4
$T225122 = -20						; size = 4
_pkPlot$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_L$ = 12						; size = 4
_index$ = 16						; size = 4
_bErrorOnFail$ = 20					; size = 1
?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z PROC ; CvDllScriptSystemUtility::GetCvPlotInstance, COMDAT

; 118  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 119  : 	CvPlot* pkPlot = CvLuaPlot::GetInstance(L, index, bErrorOnFail);

	movzx	eax, BYTE PTR _bErrorOnFail$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkPlot$[ebp], eax

; 120  : 	return (NULL != pkPlot)? new CvDllPlot(pkPlot) : NULL;

	cmp	DWORD PTR _pkPlot$[ebp], 0
	je	SHORT $LN5@GetCvPlotI
	push	12					; 0000000cH
	call	??2CvDllPlot@@SAPAXI@Z			; CvDllPlot::operator new
	add	esp, 4
	mov	DWORD PTR $T225123[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T225123[ebp], 0
	je	SHORT $LN3@GetCvPlotI
	mov	eax, DWORD PTR _pkPlot$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T225123[ebp]
	call	??0CvDllPlot@@QAE@PAVCvPlot@@@Z		; CvDllPlot::CvDllPlot
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN4@GetCvPlotI
$LN3@GetCvPlotI:
	mov	DWORD PTR tv80[ebp], 0
$LN4@GetCvPlotI:
	mov	ecx, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T225122[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T225122[ebp]
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN6@GetCvPlotI
$LN5@GetCvPlotI:
	mov	DWORD PTR tv75[ebp], 0
$LN6@GetCvPlotI:
	mov	eax, DWORD PTR tv75[ebp]

; 121  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z$0:
	mov	eax, DWORD PTR $T225123[ebp]
	push	eax
	call	??3CvDllPlot@@SAXPAX@Z			; CvDllPlot::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCvPlotInstance@CvDllScriptSystemUtility@@UAGPAVICvPlot1@@PAUlua_State@@H_N@Z ENDP ; CvDllScriptSystemUtility::GetCvPlotInstance
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
EXTRN	?GetInstance@CvDllUnit@@QAEPAVCvUnit@@XZ:PROC	; CvDllUnit::GetInstance
; Function compile flags: /Odtp
;	COMDAT ?PushCvUnitInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvUnit1@@@Z
_TEXT	SEGMENT
_pkDllUnit$224498 = -4					; size = 4
_this$ = 8						; size = 4
_L$ = 12						; size = 4
_pkUnit$ = 16						; size = 4
?PushCvUnitInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvUnit1@@@Z PROC ; CvDllScriptSystemUtility::PushCvUnitInstance, COMDAT

; 124  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 125  : 	if(NULL != L && NULL != pkUnit)

	cmp	DWORD PTR _L$[ebp], 0
	je	SHORT $LN2@PushCvUnit
	cmp	DWORD PTR _pkUnit$[ebp], 0
	je	SHORT $LN2@PushCvUnit

; 126  : 	{
; 127  : 		CvDllUnit* pkDllUnit = static_cast<CvDllUnit*>(pkUnit);

	mov	eax, DWORD PTR _pkUnit$[ebp]
	mov	DWORD PTR _pkDllUnit$224498[ebp], eax

; 128  : 		CvLuaUnit::Push(L, pkDllUnit->GetInstance());

	mov	ecx, DWORD PTR _pkDllUnit$224498[ebp]
	call	?GetInstance@CvDllUnit@@QAEPAVCvUnit@@XZ ; CvDllUnit::GetInstance
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
	add	esp, 8

; 129  : 	}
; 130  : 	else

	jmp	SHORT $LN3@PushCvUnit
$LN2@PushCvUnit:

; 131  : 	{
; 132  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN3@PushCvUnit:

; 133  : 	}
; 134  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?PushCvUnitInstance@CvDllScriptSystemUtility@@UAGXPAUlua_State@@PAVICvUnit1@@@Z ENDP ; CvDllScriptSystemUtility::PushCvUnitInstance
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
EXTRN	??3CvDllUnit@@SAXPAX@Z:PROC			; CvDllUnit::operator delete
EXTRN	??0CvDllUnit@@QAE@PAVCvUnit@@@Z:PROC		; CvDllUnit::CvDllUnit
EXTRN	??2CvDllUnit@@SAPAXI@Z:PROC			; CvDllUnit::operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z$0
__ehfuncinfo$?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
tv75 = -32						; size = 4
tv80 = -28						; size = 4
$T225140 = -24						; size = 4
$T225139 = -20						; size = 4
_pkUnit$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_L$ = 12						; size = 4
_index$ = 16						; size = 4
_bErrorOnFail$ = 20					; size = 1
?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z PROC ; CvDllScriptSystemUtility::GetCvUnitInstance, COMDAT

; 137  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 138  : 	CvUnit* pkUnit = CvLuaUnit::GetInstance(L, index, bErrorOnFail);

	movzx	eax, BYTE PTR _bErrorOnFail$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkUnit$[ebp], eax

; 139  : 	return (NULL != pkUnit)? new CvDllUnit(pkUnit) : NULL;

	cmp	DWORD PTR _pkUnit$[ebp], 0
	je	SHORT $LN5@GetCvUnitI
	push	12					; 0000000cH
	call	??2CvDllUnit@@SAPAXI@Z			; CvDllUnit::operator new
	add	esp, 4
	mov	DWORD PTR $T225140[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T225140[ebp], 0
	je	SHORT $LN3@GetCvUnitI
	mov	eax, DWORD PTR _pkUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T225140[ebp]
	call	??0CvDllUnit@@QAE@PAVCvUnit@@@Z		; CvDllUnit::CvDllUnit
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN4@GetCvUnitI
$LN3@GetCvUnitI:
	mov	DWORD PTR tv80[ebp], 0
$LN4@GetCvUnitI:
	mov	ecx, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T225139[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T225139[ebp]
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN6@GetCvUnitI
$LN5@GetCvUnitI:
	mov	DWORD PTR tv75[ebp], 0
$LN6@GetCvUnitI:
	mov	eax, DWORD PTR tv75[ebp]

; 140  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z$0:
	mov	eax, DWORD PTR $T225140[ebp]
	push	eax
	call	??3CvDllUnit@@SAXPAX@Z			; CvDllUnit::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCvUnitInstance@CvDllScriptSystemUtility@@UAGPAVICvUnit1@@PAUlua_State@@H_N@Z ENDP ; CvDllScriptSystemUtility::GetCvUnitInstance
PUBLIC	??_C@_09FKMLHEIE@NWOfRiver?$AA@			; `string'
PUBLIC	??_C@_08NPDLDPEP@WOfRiver?$AA@			; `string'
PUBLIC	??_C@_09NIPNBOHD@NEOfRiver?$AA@			; `string'
PUBLIC	??_C@_0M@LJDMFNNN@FeatureType?$AA@		; `string'
PUBLIC	??_C@_0M@BBHDGKPJ@TerrainType?$AA@		; `string'
PUBLIC	??_C@_08JGHCBNKH@PlotType?$AA@			; `string'
PUBLIC	??_C@_08LGLLKGLO@Messages?$AA@			; `string'
PUBLIC	??_C@_05CKNOMBAL@Plots?$AA@			; `string'
PUBLIC	??_C@_01NFFPALBN@Y?$AA@				; `string'
PUBLIC	??_C@_01MMEEDKFM@X?$AA@				; `string'
PUBLIC	??_C@_04OJAHODMC@Text?$AA@			; `string'
PUBLIC	??_C@_06NPAAKFED@Player?$AA@			; `string'
PUBLIC	??_C@_04KOACHJEN@Type?$AA@			; `string'
PUBLIC	??_C@_04EKEMLFA@Turn?$AA@			; `string'
PUBLIC	??_C@_0L@GAFLNNOP@PlayerInfo?$AA@		; `string'
PUBLIC	??_C@_06GOJEAFCK@Scores?$AA@			; `string'
PUBLIC	??_C@_0N@DHBIOBEE@CivAdjective?$AA@		; `string'
PUBLIC	??_C@_0BE@EPADGHGE@CivShortDescription?$AA@	; `string'
PUBLIC	??_C@_0P@KILGKNIL@CivDescription?$AA@		; `string'
PUBLIC	??_C@_0L@MDOFEPPO@LeaderName?$AA@		; `string'
PUBLIC	??_C@_0L@JLGPALCD@Difficulty?$AA@		; `string'
PUBLIC	??_C@_0M@NOJKFFPC@PlayerColor?$AA@		; `string'
PUBLIC	??_C@_06PKACINHD@Leader?$AA@			; `string'
PUBLIC	??_C@_0N@HCJIALID@Civilization?$AA@		; `string'
PUBLIC	??_C@_08JDDBDAL@MapWidth?$AA@			; `string'
PUBLIC	??_C@_09IAOAEGPF@MapHeight?$AA@			; `string'
PUBLIC	??_C@_0BA@HHFGMIEA@NormalizedScore?$AA@		; `string'
PUBLIC	??_C@_08DANNNPNF@Calendar?$AA@			; `string'
PUBLIC	??_C@_09INBMNMOJ@FinalDate?$AA@			; `string'
PUBLIC	??_C@_09HJPLAGAD@StartYear?$AA@			; `string'
PUBLIC	??_C@_09NFPOCONK@FinalTurn?$AA@			; `string'
PUBLIC	??_C@_0M@LNFEEPO@InitialTurn?$AA@		; `string'
PUBLIC	??_C@_08JKMDOHNJ@GameType?$AA@			; `string'
PUBLIC	??_C@_0M@CCKEBNNI@VictoryType?$AA@		; `string'
PUBLIC	??_C@_09IJNGPCFA@GameSpeed?$AA@			; `string'
PUBLIC	??_C@_03FJOCGODE@Era?$AA@			; `string'
PUBLIC	??_C@_08HKLJPGG@SeaLevel?$AA@			; `string'
PUBLIC	??_C@_07PHGIOBGP@Climate?$AA@			; `string'
PUBLIC	??_C@_09INBAMGAL@WorldSize?$AA@			; `string'
PUBLIC	??_C@_0N@KHENACC@ActivePlayer?$AA@		; `string'
PUBLIC	??_C@_0O@KFFCPJAL@MapScriptName?$AA@		; `string'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?getPlotState@CvReplayInfo@@QBE_NIIIAAUPlotState@1@@Z:PROC ; CvReplayInfo::getPlotState
EXTRN	?getPlot@CvReplayMessage@@QBE_NIAAH0@Z:PROC	; CvReplayMessage::getPlot
EXTRN	?getNumPlots@CvReplayMessage@@QBEIXZ:PROC	; CvReplayMessage::getNumPlots
EXTRN	?getText@CvReplayMessage@@QBEABVCvString@@XZ:PROC ; CvReplayMessage::getText
EXTRN	?getPlayer@CvReplayMessage@@QBE?AW4PlayerTypes@@XZ:PROC ; CvReplayMessage::getPlayer
EXTRN	?getType@CvReplayMessage@@QBE?AW4ReplayMessageTypes@@XZ:PROC ; CvReplayMessage::getType
EXTRN	?getTurn@CvReplayMessage@@QBEHXZ:PROC		; CvReplayMessage::getTurn
EXTRN	?getReplayMessage@CvReplayInfo@@QBEPBVCvReplayMessage@@I@Z:PROC ; CvReplayInfo::getReplayMessage
EXTRN	?getNumReplayMessages@CvReplayInfo@@QBEIXZ:PROC	; CvReplayInfo::getNumReplayMessages
EXTRN	_lua_rawseti:PROC
EXTRN	?getPlayerDataSetName@CvReplayInfo@@QBEPBDI@Z:PROC ; CvReplayInfo::getPlayerDataSetName
EXTRN	?getPlayerDataSetValue@CvReplayInfo@@QBE_NIIIAAH@Z:PROC ; CvReplayInfo::getPlayerDataSetValue
EXTRN	?getPlayerCivAdjective@CvReplayInfo@@QBEPBDH@Z:PROC ; CvReplayInfo::getPlayerCivAdjective
EXTRN	?getPlayerShortCivDescription@CvReplayInfo@@QBEPBDH@Z:PROC ; CvReplayInfo::getPlayerShortCivDescription
EXTRN	?getPlayerCivDescription@CvReplayInfo@@QBEPBDH@Z:PROC ; CvReplayInfo::getPlayerCivDescription
EXTRN	?getPlayerLeaderName@CvReplayInfo@@QBEPBDH@Z:PROC ; CvReplayInfo::getPlayerLeaderName
EXTRN	?getPlayerDifficulty@CvReplayInfo@@QBE?AW4HandicapTypes@@H@Z:PROC ; CvReplayInfo::getPlayerDifficulty
EXTRN	?getPlayerColor@CvReplayInfo@@QBE?AW4PlayerColorTypes@@H@Z:PROC ; CvReplayInfo::getPlayerColor
EXTRN	?getPlayerLeader@CvReplayInfo@@QBE?AW4LeaderHeadTypes@@H@Z:PROC ; CvReplayInfo::getPlayerLeader
EXTRN	?getPlayerCivilization@CvReplayInfo@@QBE?AW4CivilizationTypes@@H@Z:PROC ; CvReplayInfo::getPlayerCivilization
EXTRN	?getNumPlayerDataSets@CvReplayInfo@@QBEIXZ:PROC	; CvReplayInfo::getNumPlayerDataSets
EXTRN	?getNumPlayers@CvReplayInfo@@QBEHXZ:PROC	; CvReplayInfo::getNumPlayers
EXTRN	?getMapWidth@CvReplayInfo@@QBEHXZ:PROC		; CvReplayInfo::getMapWidth
EXTRN	?getMapHeight@CvReplayInfo@@QBEHXZ:PROC		; CvReplayInfo::getMapHeight
EXTRN	?getNormalizedScore@CvReplayInfo@@QBEHXZ:PROC	; CvReplayInfo::getNormalizedScore
EXTRN	?getCalendar@CvReplayInfo@@QBE?AW4CalendarTypes@@XZ:PROC ; CvReplayInfo::getCalendar
EXTRN	?getFinalDate@CvReplayInfo@@QBEPBDXZ:PROC	; CvReplayInfo::getFinalDate
EXTRN	?getStartYear@CvReplayInfo@@QBEHXZ:PROC		; CvReplayInfo::getStartYear
EXTRN	?getFinalTurn@CvReplayInfo@@QBEHXZ:PROC		; CvReplayInfo::getFinalTurn
EXTRN	?getInitialTurn@CvReplayInfo@@QBEHXZ:PROC	; CvReplayInfo::getInitialTurn
EXTRN	?getGameType@CvReplayInfo@@QBE?AW4GameTypes@@XZ:PROC ; CvReplayInfo::getGameType
EXTRN	?getVictoryType@CvReplayInfo@@QBE?AW4VictoryTypes@@XZ:PROC ; CvReplayInfo::getVictoryType
EXTRN	?getGameSpeed@CvReplayInfo@@QBE?AW4GameSpeedTypes@@XZ:PROC ; CvReplayInfo::getGameSpeed
EXTRN	?getEra@CvReplayInfo@@QBE?AW4EraTypes@@XZ:PROC	; CvReplayInfo::getEra
EXTRN	?getSeaLevel@CvReplayInfo@@QBE?AW4SeaLevelTypes@@XZ:PROC ; CvReplayInfo::getSeaLevel
EXTRN	?getClimate@CvReplayInfo@@QBE?AW4ClimateTypes@@XZ:PROC ; CvReplayInfo::getClimate
EXTRN	?getWorldSize@CvReplayInfo@@QBE?AW4WorldSizeTypes@@XZ:PROC ; CvReplayInfo::getWorldSize
EXTRN	_lua_pushinteger:PROC
EXTRN	?getActivePlayer@CvReplayInfo@@QBEHXZ:PROC	; CvReplayInfo::getActivePlayer
EXTRN	_lua_setfield:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
EXTRN	?getMapScriptName@CvReplayInfo@@QBEABVCvString@@XZ:PROC ; CvReplayInfo::getMapScriptName
EXTRN	_lua_gettop:PROC
EXTRN	_lua_createtable:PROC
EXTRN	?read@CvReplayInfo@@QAE_NAAVFDataStream@@@Z:PROC ; CvReplayInfo::read
EXTRN	??0CvReplayInfo@@QAE@XZ:PROC			; CvReplayInfo::CvReplayInfo
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT ??_C@_09FKMLHEIE@NWOfRiver?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_09FKMLHEIE@NWOfRiver?$AA@ DB 'NWOfRiver', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NPDLDPEP@WOfRiver?$AA@
CONST	SEGMENT
??_C@_08NPDLDPEP@WOfRiver?$AA@ DB 'WOfRiver', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NIPNBOHD@NEOfRiver?$AA@
CONST	SEGMENT
??_C@_09NIPNBOHD@NEOfRiver?$AA@ DB 'NEOfRiver', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LJDMFNNN@FeatureType?$AA@
CONST	SEGMENT
??_C@_0M@LJDMFNNN@FeatureType?$AA@ DB 'FeatureType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BBHDGKPJ@TerrainType?$AA@
CONST	SEGMENT
??_C@_0M@BBHDGKPJ@TerrainType?$AA@ DB 'TerrainType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JGHCBNKH@PlotType?$AA@
CONST	SEGMENT
??_C@_08JGHCBNKH@PlotType?$AA@ DB 'PlotType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LGLLKGLO@Messages?$AA@
CONST	SEGMENT
??_C@_08LGLLKGLO@Messages?$AA@ DB 'Messages', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05CKNOMBAL@Plots?$AA@
CONST	SEGMENT
??_C@_05CKNOMBAL@Plots?$AA@ DB 'Plots', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01NFFPALBN@Y?$AA@
CONST	SEGMENT
??_C@_01NFFPALBN@Y?$AA@ DB 'Y', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01MMEEDKFM@X?$AA@
CONST	SEGMENT
??_C@_01MMEEDKFM@X?$AA@ DB 'X', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04OJAHODMC@Text?$AA@
CONST	SEGMENT
??_C@_04OJAHODMC@Text?$AA@ DB 'Text', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06NPAAKFED@Player?$AA@
CONST	SEGMENT
??_C@_06NPAAKFED@Player?$AA@ DB 'Player', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KOACHJEN@Type?$AA@
CONST	SEGMENT
??_C@_04KOACHJEN@Type?$AA@ DB 'Type', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04EKEMLFA@Turn?$AA@
CONST	SEGMENT
??_C@_04EKEMLFA@Turn?$AA@ DB 'Turn', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GAFLNNOP@PlayerInfo?$AA@
CONST	SEGMENT
??_C@_0L@GAFLNNOP@PlayerInfo?$AA@ DB 'PlayerInfo', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06GOJEAFCK@Scores?$AA@
CONST	SEGMENT
??_C@_06GOJEAFCK@Scores?$AA@ DB 'Scores', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DHBIOBEE@CivAdjective?$AA@
CONST	SEGMENT
??_C@_0N@DHBIOBEE@CivAdjective?$AA@ DB 'CivAdjective', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EPADGHGE@CivShortDescription?$AA@
CONST	SEGMENT
??_C@_0BE@EPADGHGE@CivShortDescription?$AA@ DB 'CivShortDescription', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KILGKNIL@CivDescription?$AA@
CONST	SEGMENT
??_C@_0P@KILGKNIL@CivDescription?$AA@ DB 'CivDescription', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MDOFEPPO@LeaderName?$AA@
CONST	SEGMENT
??_C@_0L@MDOFEPPO@LeaderName?$AA@ DB 'LeaderName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JLGPALCD@Difficulty?$AA@
CONST	SEGMENT
??_C@_0L@JLGPALCD@Difficulty?$AA@ DB 'Difficulty', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NOJKFFPC@PlayerColor?$AA@
CONST	SEGMENT
??_C@_0M@NOJKFFPC@PlayerColor?$AA@ DB 'PlayerColor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06PKACINHD@Leader?$AA@
CONST	SEGMENT
??_C@_06PKACINHD@Leader?$AA@ DB 'Leader', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HCJIALID@Civilization?$AA@
CONST	SEGMENT
??_C@_0N@HCJIALID@Civilization?$AA@ DB 'Civilization', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JDDBDAL@MapWidth?$AA@
CONST	SEGMENT
??_C@_08JDDBDAL@MapWidth?$AA@ DB 'MapWidth', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09IAOAEGPF@MapHeight?$AA@
CONST	SEGMENT
??_C@_09IAOAEGPF@MapHeight?$AA@ DB 'MapHeight', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HHFGMIEA@NormalizedScore?$AA@
CONST	SEGMENT
??_C@_0BA@HHFGMIEA@NormalizedScore?$AA@ DB 'NormalizedScore', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DANNNPNF@Calendar?$AA@
CONST	SEGMENT
??_C@_08DANNNPNF@Calendar?$AA@ DB 'Calendar', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09INBMNMOJ@FinalDate?$AA@
CONST	SEGMENT
??_C@_09INBMNMOJ@FinalDate?$AA@ DB 'FinalDate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HJPLAGAD@StartYear?$AA@
CONST	SEGMENT
??_C@_09HJPLAGAD@StartYear?$AA@ DB 'StartYear', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NFPOCONK@FinalTurn?$AA@
CONST	SEGMENT
??_C@_09NFPOCONK@FinalTurn?$AA@ DB 'FinalTurn', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LNFEEPO@InitialTurn?$AA@
CONST	SEGMENT
??_C@_0M@LNFEEPO@InitialTurn?$AA@ DB 'InitialTurn', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JKMDOHNJ@GameType?$AA@
CONST	SEGMENT
??_C@_08JKMDOHNJ@GameType?$AA@ DB 'GameType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CCKEBNNI@VictoryType?$AA@
CONST	SEGMENT
??_C@_0M@CCKEBNNI@VictoryType?$AA@ DB 'VictoryType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IJNGPCFA@GameSpeed?$AA@
CONST	SEGMENT
??_C@_09IJNGPCFA@GameSpeed?$AA@ DB 'GameSpeed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03FJOCGODE@Era?$AA@
CONST	SEGMENT
??_C@_03FJOCGODE@Era?$AA@ DB 'Era', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08HKLJPGG@SeaLevel?$AA@
CONST	SEGMENT
??_C@_08HKLJPGG@SeaLevel?$AA@ DB 'SeaLevel', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07PHGIOBGP@Climate?$AA@
CONST	SEGMENT
??_C@_07PHGIOBGP@Climate?$AA@ DB 'Climate', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09INBAMGAL@WorldSize?$AA@
CONST	SEGMENT
??_C@_09INBAMGAL@WorldSize?$AA@ DB 'WorldSize', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KHENACC@ActivePlayer?$AA@
CONST	SEGMENT
??_C@_0N@KHENACC@ActivePlayer?$AA@ DB 'ActivePlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KFFCPJAL@MapScriptName?$AA@
CONST	SEGMENT
??_C@_0O@KFFCPJAL@MapScriptName?$AA@ DB 'MapScriptName', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z$0
__ehfuncinfo$?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllscriptsystemutility.cpp
xdata$x	ENDS
;	COMDAT ?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z
_TEXT	SEGMENT
tv593 = -176						; size = 4
tv580 = -172						; size = 4
tv395 = -168						; size = 4
tv83 = -164						; size = 4
tv71 = -160						; size = 4
$T225176 = -156						; size = 4
$T225172 = -152						; size = 4
$T225165 = -148						; size = 4
$T225164 = -144						; size = 4
$T225159 = -140						; size = 4
$T225158 = -136						; size = 4
$T225155 = -132						; size = 4
$T225154 = -128						; size = 4
_plotState$224610 = -124				; size = 16
_i$224606 = -108					; size = 4
_uiX$224602 = -104					; size = 4
_uiY$224598 = -100					; size = 4
_iPlotY$224590 = -96					; size = 4
_iPlotX$224589 = -92					; size = 4
_iPlot$224585 = -88					; size = 4
_iPlayer$224581 = -84					; size = 4
_pkMessage$224578 = -80					; size = 4
_numPlots$224584 = -76					; size = 4
_i$224574 = -72						; size = 4
_iValue$224569 = -68					; size = 4
_uiDataSet$224565 = -64					; size = 4
_iTurn$224561 = -60					; size = 4
_playerIdx$224551 = -56					; size = 4
_iFinalTurn$224560 = -52				; size = 4
_iPlayer$224547 = -48					; size = 4
_t$224527 = -44						; size = 4
_uiHeight$224595 = -40					; size = 4
_uiWidth$224596 = -36					; size = 4
_numReplayMessages$224573 = -32				; size = 4
_numPlayers$224545 = -28				; size = 4
_idx$224597 = -24					; size = 4
_uiNumDataSets$224546 = -20				; size = 4
_pkReplay$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_L$ = 12						; size = 4
_stream$ = 16						; size = 4
?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z PROC ; CvDllScriptSystemUtility::PushReplayFromStream, COMDAT

; 143  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 164				; 000000a4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 144  : 	CvReplayInfo* pkReplay = FNEW(CvReplayInfo(), c_eMPoolTypeGame, 0);

	push	232					; 000000e8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T225155[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T225155[ebp], 0
	je	SHORT $LN32@PushReplay
	mov	ecx, DWORD PTR $T225155[ebp]
	call	??0CvReplayInfo@@QAE@XZ			; CvReplayInfo::CvReplayInfo
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN33@PushReplay
$LN32@PushReplay:
	mov	DWORD PTR tv71[ebp], 0
$LN33@PushReplay:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T225154[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T225154[ebp]
	mov	DWORD PTR _pkReplay$[ebp], ecx

; 145  : #ifndef AUI_WARNING_FIXES
; 146  : 	if(pkReplay)

	cmp	DWORD PTR _pkReplay$[ebp], 0
	je	SHORT $LN29@PushReplay

; 147  : #endif
; 148  : 	{
; 149  : 		if(!pkReplay->read(stream))

	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?read@CvReplayInfo@@QAE_NAAVFDataStream@@@Z ; CvReplayInfo::read
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN29@PushReplay

; 150  : 		{
; 151  : 			delete pkReplay;

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	mov	DWORD PTR $T225159[ebp], ecx
	mov	edx, DWORD PTR $T225159[ebp]
	mov	DWORD PTR $T225158[ebp], edx
	cmp	DWORD PTR $T225158[ebp], 0
	je	SHORT $LN34@PushReplay
	push	1
	mov	eax, DWORD PTR $T225158[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T225158[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN35@PushReplay
$LN34@PushReplay:
	mov	DWORD PTR tv83[ebp], 0
$LN35@PushReplay:

; 152  : 			pkReplay = NULL;

	mov	DWORD PTR _pkReplay$[ebp], 0
$LN29@PushReplay:

; 153  : 		}
; 154  : 	}
; 155  : 
; 156  : 	if(pkReplay)

	cmp	DWORD PTR _pkReplay$[ebp], 0
	je	$LN30@PushReplay

; 157  : 	{
; 158  : 		lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 159  : 		const int t = lua_gettop(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _t$224527[ebp], eax

; 160  : 
; 161  : 		lua_pushstring(L, pkReplay->getMapScriptName());

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getMapScriptName@CvReplayInfo@@QBEABVCvString@@XZ ; CvReplayInfo::getMapScriptName
	mov	DWORD PTR $T225172[ebp], eax
	mov	ecx, DWORD PTR $T225172[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 162  : 		lua_setfield(L, t, "MapScriptName");

	push	OFFSET ??_C@_0O@KFFCPJAL@MapScriptName?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 163  : 
; 164  : 		lua_pushinteger(L, pkReplay->getActivePlayer());

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getActivePlayer@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getActivePlayer
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 165  : 		lua_setfield(L, t, "ActivePlayer");

	push	OFFSET ??_C@_0N@KHENACC@ActivePlayer?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 166  : 
; 167  : 		lua_pushinteger(L, pkReplay->getWorldSize());

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getWorldSize@CvReplayInfo@@QBE?AW4WorldSizeTypes@@XZ ; CvReplayInfo::getWorldSize
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 168  : 		lua_setfield(L, t, "WorldSize");

	push	OFFSET ??_C@_09INBAMGAL@WorldSize?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 169  : 
; 170  : 		lua_pushinteger(L, pkReplay->getClimate());

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getClimate@CvReplayInfo@@QBE?AW4ClimateTypes@@XZ ; CvReplayInfo::getClimate
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 171  : 		lua_setfield(L, t, "Climate");

	push	OFFSET ??_C@_07PHGIOBGP@Climate?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 172  : 
; 173  : 		lua_pushinteger(L, pkReplay->getSeaLevel());

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getSeaLevel@CvReplayInfo@@QBE?AW4SeaLevelTypes@@XZ ; CvReplayInfo::getSeaLevel
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 174  : 		lua_setfield(L, t, "SeaLevel");

	push	OFFSET ??_C@_08HKLJPGG@SeaLevel?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 175  : 
; 176  : 		lua_pushinteger(L, pkReplay->getEra());

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getEra@CvReplayInfo@@QBE?AW4EraTypes@@XZ ; CvReplayInfo::getEra
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 177  : 		lua_setfield(L, t, "Era");

	push	OFFSET ??_C@_03FJOCGODE@Era?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 178  : 
; 179  : 		lua_pushinteger(L, pkReplay->getGameSpeed());

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getGameSpeed@CvReplayInfo@@QBE?AW4GameSpeedTypes@@XZ ; CvReplayInfo::getGameSpeed
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 180  : 		lua_setfield(L, t, "GameSpeed");

	push	OFFSET ??_C@_09IJNGPCFA@GameSpeed?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 181  : 
; 182  : 		lua_pushinteger(L, pkReplay->getVictoryType());

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getVictoryType@CvReplayInfo@@QBE?AW4VictoryTypes@@XZ ; CvReplayInfo::getVictoryType
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 183  : 		lua_setfield(L, t, "VictoryType");

	push	OFFSET ??_C@_0M@CCKEBNNI@VictoryType?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 184  : 
; 185  : 		lua_pushinteger(L, pkReplay->getGameType());

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getGameType@CvReplayInfo@@QBE?AW4GameTypes@@XZ ; CvReplayInfo::getGameType
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 186  : 		lua_setfield(L, t, "GameType");

	push	OFFSET ??_C@_08JKMDOHNJ@GameType?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 187  : 
; 188  : 		lua_pushinteger(L, pkReplay->getInitialTurn());

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getInitialTurn@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getInitialTurn
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 189  : 		lua_setfield(L, t, "InitialTurn");

	push	OFFSET ??_C@_0M@LNFEEPO@InitialTurn?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 190  : 
; 191  : 		lua_pushinteger(L, pkReplay->getFinalTurn());

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getFinalTurn@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getFinalTurn
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 192  : 		lua_setfield(L, t, "FinalTurn");

	push	OFFSET ??_C@_09NFPOCONK@FinalTurn?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 193  : 
; 194  : 		lua_pushinteger(L, pkReplay->getStartYear());

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getStartYear@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getStartYear
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 195  : 		lua_setfield(L, t, "StartYear");

	push	OFFSET ??_C@_09HJPLAGAD@StartYear?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 196  : 
; 197  : 		lua_pushstring(L, pkReplay->getFinalDate());

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getFinalDate@CvReplayInfo@@QBEPBDXZ	; CvReplayInfo::getFinalDate
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 198  : 		lua_setfield(L, t, "FinalDate");

	push	OFFSET ??_C@_09INBMNMOJ@FinalDate?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 199  : 
; 200  : 		lua_pushinteger(L, pkReplay->getCalendar());

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getCalendar@CvReplayInfo@@QBE?AW4CalendarTypes@@XZ ; CvReplayInfo::getCalendar
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 201  : 		lua_setfield(L, t, "Calendar");

	push	OFFSET ??_C@_08DANNNPNF@Calendar?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 202  : 
; 203  : 		lua_pushinteger(L, pkReplay->getNormalizedScore());

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getNormalizedScore@CvReplayInfo@@QBEHXZ ; CvReplayInfo::getNormalizedScore
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 204  : 		lua_setfield(L, t, "NormalizedScore");

	push	OFFSET ??_C@_0BA@HHFGMIEA@NormalizedScore?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 205  : 
; 206  : 		lua_pushinteger(L, pkReplay->getMapHeight());

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getMapHeight@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getMapHeight
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 207  : 		lua_setfield(L, t, "MapHeight");

	push	OFFSET ??_C@_09IAOAEGPF@MapHeight?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 208  : 
; 209  : 		lua_pushinteger(L, pkReplay->getMapWidth());

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getMapWidth@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getMapWidth
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 210  : 		lua_setfield(L, t, "MapWidth");

	push	OFFSET ??_C@_08JDDBDAL@MapWidth?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 211  : 
; 212  : 		const int numPlayers = pkReplay->getNumPlayers();

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getNumPlayers@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getNumPlayers
	mov	DWORD PTR _numPlayers$224545[ebp], eax

; 213  : 		lua_createtable(L, numPlayers, 0);

	push	0
	mov	eax, DWORD PTR _numPlayers$224545[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 214  : 
; 215  : 		const unsigned int uiNumDataSets = pkReplay->getNumPlayerDataSets();

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getNumPlayerDataSets@CvReplayInfo@@QBEIXZ ; CvReplayInfo::getNumPlayerDataSets
	mov	DWORD PTR _uiNumDataSets$224546[ebp], eax

; 216  : 
; 217  : 		for(int iPlayer = 0; iPlayer < numPlayers; iPlayer++)

	mov	DWORD PTR _iPlayer$224547[ebp], 0
	jmp	SHORT $LN26@PushReplay
$LN25@PushReplay:
	mov	edx, DWORD PTR _iPlayer$224547[ebp]
	add	edx, 1
	mov	DWORD PTR _iPlayer$224547[ebp], edx
$LN26@PushReplay:
	mov	eax, DWORD PTR _iPlayer$224547[ebp]
	cmp	eax, DWORD PTR _numPlayers$224545[ebp]
	jge	$LN24@PushReplay

; 218  : 		{
; 219  : 			lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 220  : 			const int playerIdx = lua_gettop(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _playerIdx$224551[ebp], eax

; 221  : 
; 222  : 			lua_pushinteger(L, pkReplay->getPlayerCivilization(iPlayer));

	mov	eax, DWORD PTR _iPlayer$224547[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getPlayerCivilization@CvReplayInfo@@QBE?AW4CivilizationTypes@@H@Z ; CvReplayInfo::getPlayerCivilization
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 223  : 			lua_setfield(L, playerIdx, "Civilization");

	push	OFFSET ??_C@_0N@HCJIALID@Civilization?$AA@
	mov	edx, DWORD PTR _playerIdx$224551[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 224  : 
; 225  : 			lua_pushinteger(L, pkReplay->getPlayerLeader(iPlayer));

	mov	ecx, DWORD PTR _iPlayer$224547[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getPlayerLeader@CvReplayInfo@@QBE?AW4LeaderHeadTypes@@H@Z ; CvReplayInfo::getPlayerLeader
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 226  : 			lua_setfield(L, playerIdx, "Leader");

	push	OFFSET ??_C@_06PKACINHD@Leader?$AA@
	mov	eax, DWORD PTR _playerIdx$224551[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 227  : 
; 228  : 			lua_pushinteger(L, pkReplay->getPlayerColor(iPlayer));

	mov	edx, DWORD PTR _iPlayer$224547[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getPlayerColor@CvReplayInfo@@QBE?AW4PlayerColorTypes@@H@Z ; CvReplayInfo::getPlayerColor
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 229  : 			lua_setfield(L, playerIdx, "PlayerColor");

	push	OFFSET ??_C@_0M@NOJKFFPC@PlayerColor?$AA@
	mov	ecx, DWORD PTR _playerIdx$224551[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 230  : 
; 231  : 			lua_pushinteger(L, pkReplay->getPlayerDifficulty(iPlayer));

	mov	eax, DWORD PTR _iPlayer$224547[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getPlayerDifficulty@CvReplayInfo@@QBE?AW4HandicapTypes@@H@Z ; CvReplayInfo::getPlayerDifficulty
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 232  : 			lua_setfield(L, playerIdx, "Difficulty");

	push	OFFSET ??_C@_0L@JLGPALCD@Difficulty?$AA@
	mov	edx, DWORD PTR _playerIdx$224551[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 233  : 
; 234  : 			lua_pushstring(L , pkReplay->getPlayerLeaderName(iPlayer));

	mov	ecx, DWORD PTR _iPlayer$224547[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getPlayerLeaderName@CvReplayInfo@@QBEPBDH@Z ; CvReplayInfo::getPlayerLeaderName
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 235  : 			lua_setfield(L, playerIdx, "LeaderName");

	push	OFFSET ??_C@_0L@MDOFEPPO@LeaderName?$AA@
	mov	eax, DWORD PTR _playerIdx$224551[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 236  : 
; 237  : 			lua_pushstring(L, pkReplay->getPlayerCivDescription(iPlayer));

	mov	edx, DWORD PTR _iPlayer$224547[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getPlayerCivDescription@CvReplayInfo@@QBEPBDH@Z ; CvReplayInfo::getPlayerCivDescription
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 238  : 			lua_setfield(L, playerIdx, "CivDescription");

	push	OFFSET ??_C@_0P@KILGKNIL@CivDescription?$AA@
	mov	ecx, DWORD PTR _playerIdx$224551[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 239  : 
; 240  : 			lua_pushstring(L, pkReplay->getPlayerShortCivDescription(iPlayer));

	mov	eax, DWORD PTR _iPlayer$224547[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getPlayerShortCivDescription@CvReplayInfo@@QBEPBDH@Z ; CvReplayInfo::getPlayerShortCivDescription
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 241  : 			lua_setfield(L, playerIdx, "CivShortDescription");

	push	OFFSET ??_C@_0BE@EPADGHGE@CivShortDescription?$AA@
	mov	edx, DWORD PTR _playerIdx$224551[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 242  : 
; 243  : 			lua_pushstring(L, pkReplay->getPlayerCivAdjective(iPlayer));

	mov	ecx, DWORD PTR _iPlayer$224547[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getPlayerCivAdjective@CvReplayInfo@@QBEPBDH@Z ; CvReplayInfo::getPlayerCivAdjective
	push	eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 244  : 			lua_setfield(L, playerIdx, "CivAdjective");

	push	OFFSET ??_C@_0N@DHBIOBEE@CivAdjective?$AA@
	mov	eax, DWORD PTR _playerIdx$224551[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 245  : 
; 246  : 			lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 247  : 			int iFinalTurn = pkReplay->getFinalTurn();

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getFinalTurn@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getFinalTurn
	mov	DWORD PTR _iFinalTurn$224560[ebp], eax

; 248  : 
; 249  : 			for(int iTurn = pkReplay->getInitialTurn(); iTurn <= iFinalTurn; ++iTurn)

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getInitialTurn@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getInitialTurn
	mov	DWORD PTR _iTurn$224561[ebp], eax
	jmp	SHORT $LN23@PushReplay
$LN22@PushReplay:
	mov	eax, DWORD PTR _iTurn$224561[ebp]
	add	eax, 1
	mov	DWORD PTR _iTurn$224561[ebp], eax
$LN23@PushReplay:
	mov	ecx, DWORD PTR _iTurn$224561[ebp]
	cmp	ecx, DWORD PTR _iFinalTurn$224560[ebp]
	jg	$LN21@PushReplay

; 250  : 			{
; 251  : 				lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 252  : 
; 253  : 				for(unsigned int uiDataSet = 0; uiDataSet < uiNumDataSets; ++uiDataSet)

	mov	DWORD PTR _uiDataSet$224565[ebp], 0
	jmp	SHORT $LN20@PushReplay
$LN19@PushReplay:
	mov	eax, DWORD PTR _uiDataSet$224565[ebp]
	add	eax, 1
	mov	DWORD PTR _uiDataSet$224565[ebp], eax
$LN20@PushReplay:
	mov	ecx, DWORD PTR _uiDataSet$224565[ebp]
	cmp	ecx, DWORD PTR _uiNumDataSets$224546[ebp]
	jae	SHORT $LN18@PushReplay

; 254  : 				{
; 255  : 					int iValue = 0;

	mov	DWORD PTR _iValue$224569[ebp], 0

; 256  : 					if(pkReplay->getPlayerDataSetValue(iPlayer, uiDataSet, iTurn, iValue))

	lea	edx, DWORD PTR _iValue$224569[ebp]
	push	edx
	mov	eax, DWORD PTR _iTurn$224561[ebp]
	push	eax
	mov	ecx, DWORD PTR _uiDataSet$224565[ebp]
	push	ecx
	mov	edx, DWORD PTR _iPlayer$224547[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getPlayerDataSetValue@CvReplayInfo@@QBE_NIIIAAH@Z ; CvReplayInfo::getPlayerDataSetValue
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@PushReplay

; 257  : 					{
; 258  : 						lua_pushinteger(L, iValue);

	mov	ecx, DWORD PTR _iValue$224569[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 259  : 						lua_setfield(L, -2, pkReplay->getPlayerDataSetName(uiDataSet));

	mov	eax, DWORD PTR _uiDataSet$224565[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getPlayerDataSetName@CvReplayInfo@@QBEPBDI@Z ; CvReplayInfo::getPlayerDataSetName
	push	eax
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH
$LN17@PushReplay:

; 260  : 					}
; 261  : 				}

	jmp	SHORT $LN19@PushReplay
$LN18@PushReplay:

; 262  : 
; 263  : 				lua_rawseti(L, -2, iTurn);

	mov	edx, DWORD PTR _iTurn$224561[ebp]
	push	edx
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawseti
	add	esp, 12					; 0000000cH

; 264  : 			}

	jmp	$LN22@PushReplay
$LN21@PushReplay:

; 265  : 			lua_setfield(L, playerIdx, "Scores");

	push	OFFSET ??_C@_06GOJEAFCK@Scores?$AA@
	mov	ecx, DWORD PTR _playerIdx$224551[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 266  : 
; 267  : 			lua_rawseti(L, -2, iPlayer + 1);	//Adjust iPlayer to be 1-based instead of 0-based.

	mov	eax, DWORD PTR _iPlayer$224547[ebp]
	add	eax, 1
	push	eax
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawseti
	add	esp, 12					; 0000000cH

; 268  : 		}

	jmp	$LN25@PushReplay
$LN24@PushReplay:

; 269  : 		lua_setfield(L, t, "PlayerInfo");

	push	OFFSET ??_C@_0L@GAFLNNOP@PlayerInfo?$AA@
	mov	edx, DWORD PTR _t$224527[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 270  : 
; 271  : 		const int numReplayMessages = pkReplay->getNumReplayMessages();

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getNumReplayMessages@CvReplayInfo@@QBEIXZ ; CvReplayInfo::getNumReplayMessages
	mov	DWORD PTR _numReplayMessages$224573[ebp], eax

; 272  : 		lua_createtable(L, numReplayMessages, 0);

	push	0
	mov	ecx, DWORD PTR _numReplayMessages$224573[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 273  : 		for(int i = 0; i < numReplayMessages; i++)

	mov	DWORD PTR _i$224574[ebp], 0
	jmp	SHORT $LN16@PushReplay
$LN15@PushReplay:
	mov	eax, DWORD PTR _i$224574[ebp]
	add	eax, 1
	mov	DWORD PTR _i$224574[ebp], eax
$LN16@PushReplay:
	mov	ecx, DWORD PTR _i$224574[ebp]
	cmp	ecx, DWORD PTR _numReplayMessages$224573[ebp]
	jge	$LN14@PushReplay

; 274  : 		{
; 275  : 			const CvReplayMessage* pkMessage = pkReplay->getReplayMessage(i);

	mov	edx, DWORD PTR _i$224574[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getReplayMessage@CvReplayInfo@@QBEPBVCvReplayMessage@@I@Z ; CvReplayInfo::getReplayMessage
	mov	DWORD PTR _pkMessage$224578[ebp], eax

; 276  : 			lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 277  : 
; 278  : 			lua_pushinteger(L, pkMessage->getTurn());

	mov	ecx, DWORD PTR _pkMessage$224578[ebp]
	call	?getTurn@CvReplayMessage@@QBEHXZ	; CvReplayMessage::getTurn
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 279  : 			lua_setfield(L, -2, "Turn");

	push	OFFSET ??_C@_04EKEMLFA@Turn?$AA@
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 280  : 
; 281  : 			lua_pushinteger(L, pkMessage->getType());

	mov	ecx, DWORD PTR _pkMessage$224578[ebp]
	call	?getType@CvReplayMessage@@QBE?AW4ReplayMessageTypes@@XZ ; CvReplayMessage::getType
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 282  : 			lua_setfield(L, -2, "Type");

	push	OFFSET ??_C@_04KOACHJEN@Type?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 283  : 
; 284  : 			int iPlayer = pkMessage->getPlayer();

	mov	ecx, DWORD PTR _pkMessage$224578[ebp]
	call	?getPlayer@CvReplayMessage@@QBE?AW4PlayerTypes@@XZ ; CvReplayMessage::getPlayer
	mov	DWORD PTR _iPlayer$224581[ebp], eax

; 285  : 			lua_pushinteger(L, (iPlayer > -1)? iPlayer + 1 : iPlayer);	//Adjust iPlayer to match the 1-based index scheme.

	cmp	DWORD PTR _iPlayer$224581[ebp], -1
	jle	SHORT $LN36@PushReplay
	mov	edx, DWORD PTR _iPlayer$224581[ebp]
	add	edx, 1
	mov	DWORD PTR tv395[ebp], edx
	jmp	SHORT $LN37@PushReplay
$LN36@PushReplay:
	mov	eax, DWORD PTR _iPlayer$224581[ebp]
	mov	DWORD PTR tv395[ebp], eax
$LN37@PushReplay:
	mov	ecx, DWORD PTR tv395[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushinteger
	add	esp, 8

; 286  : 			lua_setfield(L, -2, "Player");

	push	OFFSET ??_C@_06NPAAKFED@Player?$AA@
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 287  : 
; 288  : 			lua_pushstring(L, pkMessage->getText());

	mov	ecx, DWORD PTR _pkMessage$224578[ebp]
	call	?getText@CvReplayMessage@@QBEABVCvString@@XZ ; CvReplayMessage::getText
	mov	DWORD PTR $T225176[ebp], eax
	mov	ecx, DWORD PTR $T225176[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 289  : 			lua_setfield(L, -2, "Text");

	push	OFFSET ??_C@_04OJAHODMC@Text?$AA@
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 290  : 
; 291  : 			const int numPlots = pkMessage->getNumPlots();

	mov	ecx, DWORD PTR _pkMessage$224578[ebp]
	call	?getNumPlots@CvReplayMessage@@QBEIXZ	; CvReplayMessage::getNumPlots
	mov	DWORD PTR _numPlots$224584[ebp], eax

; 292  : 			lua_createtable(L, numPlots, 0);

	push	0
	mov	eax, DWORD PTR _numPlots$224584[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 293  : 			for(int iPlot = 0; iPlot < numPlots; ++iPlot)

	mov	DWORD PTR _iPlot$224585[ebp], 0
	jmp	SHORT $LN13@PushReplay
$LN12@PushReplay:
	mov	edx, DWORD PTR _iPlot$224585[ebp]
	add	edx, 1
	mov	DWORD PTR _iPlot$224585[ebp], edx
$LN13@PushReplay:
	mov	eax, DWORD PTR _iPlot$224585[ebp]
	cmp	eax, DWORD PTR _numPlots$224584[ebp]
	jge	$LN11@PushReplay

; 294  : 			{
; 295  : 				int iPlotX = 0;

	mov	DWORD PTR _iPlotX$224589[ebp], 0

; 296  : 				int iPlotY = 0;

	mov	DWORD PTR _iPlotY$224590[ebp], 0

; 297  : 				pkMessage->getPlot(iPlot, iPlotX, iPlotY);

	lea	ecx, DWORD PTR _iPlotY$224590[ebp]
	push	ecx
	lea	edx, DWORD PTR _iPlotX$224589[ebp]
	push	edx
	mov	eax, DWORD PTR _iPlot$224585[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkMessage$224578[ebp]
	call	?getPlot@CvReplayMessage@@QBE_NIAAH0@Z	; CvReplayMessage::getPlot

; 298  : 
; 299  : 				lua_createtable(L, 0, 2);

	push	2
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 300  : 				lua_pushinteger(L, iPlotX);

	mov	edx, DWORD PTR _iPlotX$224589[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 301  : 				lua_setfield(L, -2, "X");

	push	OFFSET ??_C@_01MMEEDKFM@X?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 302  : 
; 303  : 				lua_pushinteger(L, iPlotY);

	mov	edx, DWORD PTR _iPlotY$224590[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 304  : 				lua_setfield(L, -2, "Y");

	push	OFFSET ??_C@_01NFFPALBN@Y?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 305  : 
; 306  : 				lua_rawseti(L, -2, iPlot + 1);

	mov	edx, DWORD PTR _iPlot$224585[ebp]
	add	edx, 1
	push	edx
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawseti
	add	esp, 12					; 0000000cH

; 307  : 			}

	jmp	$LN12@PushReplay
$LN11@PushReplay:

; 308  : 			lua_setfield(L, -2, "Plots");

	push	OFFSET ??_C@_05CKNOMBAL@Plots?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 309  : 
; 310  : 			lua_rawseti(L, -2, i);

	mov	edx, DWORD PTR _i$224574[ebp]
	push	edx
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawseti
	add	esp, 12					; 0000000cH

; 311  : 		}

	jmp	$LN15@PushReplay
$LN14@PushReplay:

; 312  : 		lua_setfield(L, t, "Messages");

	push	OFFSET ??_C@_08LGLLKGLO@Messages?$AA@
	mov	ecx, DWORD PTR _t$224527[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 313  : 
; 314  : 		const int uiHeight = pkReplay->getMapHeight();

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getMapHeight@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getMapHeight
	mov	DWORD PTR _uiHeight$224595[ebp], eax

; 315  : 		const int uiWidth = pkReplay->getMapWidth();

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getMapWidth@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getMapWidth
	mov	DWORD PTR _uiWidth$224596[ebp], eax

; 316  : 
; 317  : 		lua_createtable(L, uiHeight * uiWidth, 0);

	push	0
	mov	eax, DWORD PTR _uiHeight$224595[ebp]
	imul	eax, DWORD PTR _uiWidth$224596[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 318  : 		int idx = 1;

	mov	DWORD PTR _idx$224597[ebp], 1

; 319  : 		for(int uiY = 0; uiY < uiHeight; ++uiY)

	mov	DWORD PTR _uiY$224598[ebp], 0
	jmp	SHORT $LN10@PushReplay
$LN9@PushReplay:
	mov	edx, DWORD PTR _uiY$224598[ebp]
	add	edx, 1
	mov	DWORD PTR _uiY$224598[ebp], edx
$LN10@PushReplay:
	mov	eax, DWORD PTR _uiY$224598[ebp]
	cmp	eax, DWORD PTR _uiHeight$224595[ebp]
	jge	$LN8@PushReplay

; 320  : 		{
; 321  : 			for(int uiX = 0; uiX < uiWidth; ++uiX)

	mov	DWORD PTR _uiX$224602[ebp], 0
	jmp	SHORT $LN7@PushReplay
$LN6@PushReplay:
	mov	ecx, DWORD PTR _uiX$224602[ebp]
	add	ecx, 1
	mov	DWORD PTR _uiX$224602[ebp], ecx
$LN7@PushReplay:
	mov	edx, DWORD PTR _uiX$224602[ebp]
	cmp	edx, DWORD PTR _uiWidth$224596[ebp]
	jge	$LN5@PushReplay

; 322  : 			{
; 323  : 				lua_createtable(L, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 324  : 				for(int i = pkReplay->getInitialTurn(); i <= pkReplay->getFinalTurn(); ++i)

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getInitialTurn@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getInitialTurn
	mov	DWORD PTR _i$224606[ebp], eax
	jmp	SHORT $LN4@PushReplay
$LN3@PushReplay:
	mov	ecx, DWORD PTR _i$224606[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$224606[ebp], ecx
$LN4@PushReplay:
	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getFinalTurn@CvReplayInfo@@QBEHXZ	; CvReplayInfo::getFinalTurn
	cmp	DWORD PTR _i$224606[ebp], eax
	jg	$LN2@PushReplay

; 325  : 				{
; 326  : 					CvReplayInfo::PlotState plotState;
; 327  : 					if(pkReplay->getPlotState(uiX, uiY, i, plotState))

	lea	edx, DWORD PTR _plotState$224610[ebp]
	push	edx
	mov	eax, DWORD PTR _i$224606[ebp]
	push	eax
	mov	ecx, DWORD PTR _uiY$224598[ebp]
	push	ecx
	mov	edx, DWORD PTR _uiX$224602[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkReplay$[ebp]
	call	?getPlotState@CvReplayInfo@@QBE_NIIIAAUPlotState@1@@Z ; CvReplayInfo::getPlotState
	movzx	eax, al
	test	eax, eax
	je	$LN1@PushReplay

; 328  : 					{
; 329  : 						lua_createtable(L, 6, 0);

	push	0
	push	6
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 330  : 
; 331  : 						lua_pushinteger(L, plotState.m_ePlotType);

	mov	edx, DWORD PTR _plotState$224610[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 332  : 						lua_setfield(L, -2, "PlotType");

	push	OFFSET ??_C@_08JGHCBNKH@PlotType?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 333  : 
; 334  : 						lua_pushinteger(L, plotState.m_eTerrain);

	mov	edx, DWORD PTR _plotState$224610[ebp+4]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 335  : 						lua_setfield(L, -2, "TerrainType");

	push	OFFSET ??_C@_0M@BBHDGKPJ@TerrainType?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 336  : 
; 337  : 						lua_pushinteger(L, plotState.m_eFeature);

	mov	edx, DWORD PTR _plotState$224610[ebp+8]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 338  : 						lua_setfield(L, -2, "FeatureType");

	push	OFFSET ??_C@_0M@LJDMFNNN@FeatureType?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 339  : 
; 340  : 						lua_pushinteger(L, plotState.m_bNEOfRiver);

	movzx	edx, BYTE PTR _plotState$224610[ebp+12]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 341  : 						lua_setfield(L, -2, "NEOfRiver");

	push	OFFSET ??_C@_09NIPNBOHD@NEOfRiver?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 342  : 
; 343  : 						lua_pushinteger(L, plotState.m_bWOfRiver);

	movzx	edx, BYTE PTR _plotState$224610[ebp+13]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 344  : 						lua_setfield(L, -2, "WOfRiver");

	push	OFFSET ??_C@_08NPDLDPEP@WOfRiver?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 345  : 
; 346  : 						lua_pushinteger(L, plotState.m_bNWOfRiver);

	movzx	edx, BYTE PTR _plotState$224610[ebp+14]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushinteger
	add	esp, 8

; 347  : 						lua_setfield(L, -2, "NWOfRiver");

	push	OFFSET ??_C@_09FKMLHEIE@NWOfRiver?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 348  : 
; 349  : 						lua_rawseti(L, -2, i);

	mov	edx, DWORD PTR _i$224606[ebp]
	push	edx
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
$LN1@PushReplay:

; 350  : 					}
; 351  : 				}

	jmp	$LN3@PushReplay
$LN2@PushReplay:

; 352  : 
; 353  : 				lua_rawseti(L, -2, idx++);

	mov	ecx, DWORD PTR _idx$224597[ebp]
	mov	DWORD PTR tv580[ebp], ecx
	mov	edx, DWORD PTR tv580[ebp]
	push	edx
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawseti
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _idx$224597[ebp]
	add	ecx, 1
	mov	DWORD PTR _idx$224597[ebp], ecx

; 354  : 			}

	jmp	$LN6@PushReplay
$LN5@PushReplay:

; 355  : 		}

	jmp	$LN9@PushReplay
$LN8@PushReplay:

; 356  : 		lua_setfield(L, t, "Plots");

	push	OFFSET ??_C@_05CKNOMBAL@Plots?$AA@
	mov	edx, DWORD PTR _t$224527[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 357  : 
; 358  : 		delete pkReplay;

	mov	ecx, DWORD PTR _pkReplay$[ebp]
	mov	DWORD PTR $T225165[ebp], ecx
	mov	edx, DWORD PTR $T225165[ebp]
	mov	DWORD PTR $T225164[ebp], edx
	cmp	DWORD PTR $T225164[ebp], 0
	je	SHORT $LN38@PushReplay
	push	1
	mov	eax, DWORD PTR $T225164[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T225164[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	mov	DWORD PTR tv593[ebp], eax
	jmp	SHORT $LN30@PushReplay
$LN38@PushReplay:
	mov	DWORD PTR tv593[ebp], 0
$LN30@PushReplay:

; 359  : 	}
; 360  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z$0:
	mov	eax, DWORD PTR $T225155[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-168]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PushReplayFromStream@CvDllScriptSystemUtility@@UAGXPAUlua_State@@AAVFDataStream@@@Z ENDP ; CvDllScriptSystemUtility::PushReplayFromStream
PUBLIC	??_C@_07NHABFFHN@__index?$AA@			; `string'
PUBLIC	??_C@_0L@GCADIOHF@__instance?$AA@		; `string'
PUBLIC	??_C@_01MHEDDDHA@v?$AA@				; `string'
PUBLIC	??_C@_06BPGFKLEK@__mode?$AA@			; `string'
PUBLIC	??_C@_0M@CEBPKMAI@__instances?$AA@		; `string'
EXTRN	_lua_remove:PROC
EXTRN	_lua_pushlightuserdata:PROC
EXTRN	_lua_rawget:PROC
EXTRN	?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z:PROC ; CvLuaCity::PushMethods
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_setmetatable:PROC
EXTRN	_lua_rawset:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_getfield:PROC
EXTRN	?GetTypeName@CvLuaCity@@SAPBDXZ:PROC		; CvLuaCity::GetTypeName
;	COMDAT ??_C@_07NHABFFHN@__index?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
CONST	SEGMENT
??_C@_07NHABFFHN@__index?$AA@ DB '__index', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GCADIOHF@__instance?$AA@
CONST	SEGMENT
??_C@_0L@GCADIOHF@__instance?$AA@ DB '__instance', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01MHEDDDHA@v?$AA@
CONST	SEGMENT
??_C@_01MHEDDDHA@v?$AA@ DB 'v', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06BPGFKLEK@__mode?$AA@
CONST	SEGMENT
??_C@_06BPGFKLEK@__mode?$AA@ DB '__mode', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CEBPKMAI@__instances?$AA@
CONST	SEGMENT
??_C@_0M@CEBPKMAI@__instances?$AA@ DB '__instances', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z
_TEXT	SEGMENT
_instances_index$224634 = -8				; size = 4
_type_index$224633 = -4					; size = 4
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	cmp	DWORD PTR _pkType$[ebp], 0
	je	$LN4@Push

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaCity@@SAPBDXZ		; CvLuaCity::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN3@Push

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 59   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 63   : 			lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET ??_C@_06BPGFKLEK@__mode?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawset
	add	esp, 8

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushvalue
	add	esp, 8

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaCity@@SAPBDXZ		; CvLuaCity::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z ; CvLuaCity::PushMethods
	add	esp, 8
$LN3@Push:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _type_index$224633[ebp], eax

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawget
	add	esp, 8

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _instances_index$224634[ebp], eax

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawget
	add	esp, 8

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN2@Push

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 97   : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET ??_C@_07NHABFFHN@__index?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 102  : 			lua_pushvalue(L, type_index);

	mov	ecx, DWORD PTR _type_index$224633[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	mov	edx, DWORD PTR _instances_index$224634[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8
$LN2@Push:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	mov	ecx, DWORD PTR _instances_index$224634[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_remove
	add	esp, 8

; 114  : 		lua_remove(L, type_index);

	mov	eax, DWORD PTR _type_index$224633[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_remove
	add	esp, 8

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else

	jmp	SHORT $LN5@Push
$LN4@Push:

; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN5@Push:

; 122  : 	}
; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
_TEXT	ENDS
PUBLIC	??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@ ; `string'
EXTRN	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z:PROC ; CvLuaCity::HandleMissingInstance
EXTRN	_luaL_error:PROC
EXTRN	_lua_touserdata:PROC
;	COMDAT ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
CONST	SEGMENT
??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@ DB 'Not a val'
	DB	'id instance.  Either the instance is NULL or you used ''.'' i'
	DB	'nstead of '':''.', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaCity@@SAXPAUlua_State@@@Z ; CvLuaCity::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAPAVCvCity@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::GetInstance
_TEXT	ENDS
EXTRN	?PushMethods@CvLuaDeal@@SAXPAUlua_State@@H@Z:PROC ; CvLuaDeal::PushMethods
EXTRN	?GetTypeName@CvLuaDeal@@SAPBDXZ:PROC		; CvLuaDeal::GetTypeName
; Function compile flags: /Odtp
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAXPAUlua_State@@PAVCvDeal@@@Z
_TEXT	SEGMENT
_instances_index$224678 = -8				; size = 4
_type_index$224677 = -4					; size = 4
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAXPAUlua_State@@PAVCvDeal@@@Z PROC ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::Push, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	cmp	DWORD PTR _pkType$[ebp], 0
	je	$LN4@Push@2

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaDeal@@SAPBDXZ		; CvLuaDeal::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN3@Push@2

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 59   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 63   : 			lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET ??_C@_06BPGFKLEK@__mode?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawset
	add	esp, 8

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushvalue
	add	esp, 8

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaDeal@@SAPBDXZ		; CvLuaDeal::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?PushMethods@CvLuaDeal@@SAXPAUlua_State@@H@Z ; CvLuaDeal::PushMethods
	add	esp, 8
$LN3@Push@2:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _type_index$224677[ebp], eax

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawget
	add	esp, 8

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _instances_index$224678[ebp], eax

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawget
	add	esp, 8

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN2@Push@2

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 97   : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET ??_C@_07NHABFFHN@__index?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 102  : 			lua_pushvalue(L, type_index);

	mov	ecx, DWORD PTR _type_index$224677[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	mov	edx, DWORD PTR _instances_index$224678[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8
$LN2@Push@2:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	mov	ecx, DWORD PTR _instances_index$224678[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_remove
	add	esp, 8

; 114  : 		lua_remove(L, type_index);

	mov	eax, DWORD PTR _type_index$224677[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_remove
	add	esp, 8

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else

	jmp	SHORT $LN5@Push@2
$LN4@Push@2:

; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN5@Push@2:

; 122  : 	}
; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAXPAUlua_State@@PAVCvDeal@@@Z ENDP ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::Push
_TEXT	ENDS
EXTRN	?HandleMissingInstance@CvLuaDeal@@SAXPAUlua_State@@@Z:PROC ; CvLuaDeal::HandleMissingInstance
; Function compile flags: /Odtp
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc@2

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc@2

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc@2

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc@2:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc@2
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc@2

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc@2

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@2:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaDeal@@SAXPAUlua_State@@@Z ; CvLuaDeal::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc@2:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaDeal@@VCvDeal@@@@SAPAVCvDeal@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaDeal,CvDeal>::GetInstance
_TEXT	ENDS
EXTRN	?PushMethods@CvLuaPlot@@SAXPAUlua_State@@H@Z:PROC ; CvLuaPlot::PushMethods
EXTRN	?GetTypeName@CvLuaPlot@@SAPBDXZ:PROC		; CvLuaPlot::GetTypeName
; Function compile flags: /Odtp
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z
_TEXT	SEGMENT
_instances_index$224833 = -8				; size = 4
_type_index$224832 = -4					; size = 4
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z PROC ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	cmp	DWORD PTR _pkType$[ebp], 0
	je	$LN4@Push@3

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlot@@SAPBDXZ		; CvLuaPlot::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN3@Push@3

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 59   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 63   : 			lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET ??_C@_06BPGFKLEK@__mode?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawset
	add	esp, 8

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushvalue
	add	esp, 8

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaPlot@@SAPBDXZ		; CvLuaPlot::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?PushMethods@CvLuaPlot@@SAXPAUlua_State@@H@Z ; CvLuaPlot::PushMethods
	add	esp, 8
$LN3@Push@3:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _type_index$224832[ebp], eax

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawget
	add	esp, 8

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _instances_index$224833[ebp], eax

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawget
	add	esp, 8

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN2@Push@3

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 97   : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET ??_C@_07NHABFFHN@__index?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 102  : 			lua_pushvalue(L, type_index);

	mov	ecx, DWORD PTR _type_index$224832[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	mov	edx, DWORD PTR _instances_index$224833[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8
$LN2@Push@3:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	mov	ecx, DWORD PTR _instances_index$224833[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_remove
	add	esp, 8

; 114  : 		lua_remove(L, type_index);

	mov	eax, DWORD PTR _type_index$224832[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_remove
	add	esp, 8

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else

	jmp	SHORT $LN5@Push@3
$LN4@Push@3:

; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN5@Push@3:

; 122  : 	}
; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAXPAUlua_State@@PAVCvPlot@@@Z ENDP ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::Push
_TEXT	ENDS
EXTRN	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z:PROC ; CvLuaPlot::HandleMissingInstance
; Function compile flags: /Odtp
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc@3

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc@3

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc@3

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc@3:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc@3
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc@3

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc@3

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@3:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaPlot@@SAXPAUlua_State@@@Z ; CvLuaPlot::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc@3:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaPlot@@VCvPlot@@@@SAPAVCvPlot@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaPlot,CvPlot>::GetInstance
_TEXT	ENDS
EXTRN	?PushMethods@CvLuaUnit@@SAXPAUlua_State@@H@Z:PROC ; CvLuaUnit::PushMethods
EXTRN	?GetTypeName@CvLuaUnit@@SAPBDXZ:PROC		; CvLuaUnit::GetTypeName
; Function compile flags: /Odtp
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z
_TEXT	SEGMENT
_instances_index$224865 = -8				; size = 4
_type_index$224864 = -4					; size = 4
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z PROC ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	cmp	DWORD PTR _pkType$[ebp], 0
	je	$LN4@Push@4

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaUnit@@SAPBDXZ		; CvLuaUnit::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN3@Push@4

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 59   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 63   : 			lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET ??_C@_06BPGFKLEK@__mode?$AA@
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_rawset
	add	esp, 8

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushvalue
	add	esp, 8

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaUnit@@SAPBDXZ		; CvLuaUnit::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_gettop
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?PushMethods@CvLuaUnit@@SAXPAUlua_State@@H@Z ; CvLuaUnit::PushMethods
	add	esp, 8
$LN3@Push@4:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _type_index$224864[ebp], eax

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET ??_C@_0M@CEBPKMAI@__instances?$AA@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawget
	add	esp, 8

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _instances_index$224865[ebp], eax

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawget
	add	esp, 8

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	test	eax, eax
	jne	$LN2@Push@4

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 97   : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET ??_C@_07NHABFFHN@__index?$AA@
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 102  : 			lua_pushvalue(L, type_index);

	mov	ecx, DWORD PTR _type_index$224864[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	mov	edx, DWORD PTR _pkType$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	mov	edx, DWORD PTR _instances_index$224865[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_rawset
	add	esp, 8
$LN2@Push@4:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	mov	ecx, DWORD PTR _instances_index$224865[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_remove
	add	esp, 8

; 114  : 		lua_remove(L, type_index);

	mov	eax, DWORD PTR _type_index$224864[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_remove
	add	esp, 8

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else

	jmp	SHORT $LN5@Push@4
$LN4@Push@4:

; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushnil
	add	esp, 4
$LN5@Push@4:

; 122  : 	}
; 123  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAXPAUlua_State@@PAVCvUnit@@@Z ENDP ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::Push
_TEXT	ENDS
EXTRN	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z:PROC ; CvLuaUnit::HandleMissingInstance
; Function compile flags: /Odtp
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_stack_size$ = -12					; size = 4
_pkInstance$ = -8					; size = 4
_bFail$ = -1						; size = 1
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance, COMDAT

; 127  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 128  : 	const int stack_size = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _stack_size$[ebp], eax

; 129  : 	bool bFail = true;

	mov	BYTE PTR _bFail$[ebp], 1

; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;

	mov	DWORD PTR _pkInstance$[ebp], 0

; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	jne	SHORT $LN5@GetInstanc@4

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	push	OFFSET ??_C@_0L@GCADIOHF@__instance?$AA@
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_getfield
	add	esp, 12					; 0000000cH

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 2
	jne	SHORT $LN5@GetInstanc@4

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _pkInstance$[ebp], eax

; 138  : 			if(pkInstance)

	cmp	DWORD PTR _pkInstance$[ebp], 0
	je	SHORT $LN5@GetInstanc@4

; 139  : 			{
; 140  : 				bFail = false;

	mov	BYTE PTR _bFail$[ebp], 0
$LN5@GetInstanc@4:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	mov	ecx, DWORD PTR _stack_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	movzx	eax, BYTE PTR _bFail$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetInstanc@4
	movzx	ecx, BYTE PTR _bErrorOnFail$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@GetInstanc@4

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[ebp], 1
	jne	SHORT $LN1@GetInstanc@4

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET ??_C@_0FD@PKCLFCLD@Not?5a?5valid?5instance?4?5?5Either?5th@
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc@4:

; 151  : 		Derived::HandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?HandleMissingInstance@CvLuaUnit@@SAXPAUlua_State@@@Z ; CvLuaUnit::HandleMissingInstance
	add	esp, 4
$LN2@GetInstanc@4:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, DWORD PTR _pkInstance$[ebp]

; 154  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaUnit@@VCvUnit@@@@SAPAVCvUnit@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaUnit,CvUnit>::GetInstance
_TEXT	ENDS
END
