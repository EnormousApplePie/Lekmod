; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvDllPlayer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05OCFELOIJ@1?40?40?$AA@			; `string'
PUBLIC	?NO_QUEST_DATA@CvMinorCivQuest@@2HB		; CvMinorCivQuest::NO_QUEST_DATA
PUBLIC	?NO_TURN@CvMinorCivQuest@@2HB			; CvMinorCivQuest::NO_TURN
CONST	SEGMENT
_guidICvUnknown DD 0d89ba82fH
	DW	09fa3H
	DW	04696H
	DB	0b3H
	DB	0f4H
	DB	052H
	DB	0bdH
	DB	0b1H
	DB	01H
	DB	0cfH
	DB	0b2H
_guidICvPlayer1 DD 0ae4c09ebH
	DW	0a092H
	DW	045ebH
	DB	09cH
	DB	0a7H
	DB	0f4H
	DB	0a5H
	DB	0d2H
	DB	0f8H
	DB	086H
	DB	02H
_guidICvPlayer2 DD 075075151H
	DW	0ef9H
	DW	04b8bH
	DB	0adH
	DB	0fbH
	DB	08H
	DB	060H
	DB	0c1H
	DB	0baH
	DB	02fH
	DB	0dfH
_guidICvPlayer3 DD 0f5016d0dH
	DW	0684eH
	DW	0497fH
	DB	0a6H
	DB	04dH
	DB	046H
	DB	051H
	DB	0aeH
	DB	071H
	DB	032H
	DB	085H
CONST	ENDS
;	COMDAT ?NO_TURN@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_TURN@CvMinorCivQuest@@2HB DD 0ffffffffH		; CvMinorCivQuest::NO_TURN
CONST	ENDS
;	COMDAT ?NO_QUEST_DATA@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_QUEST_DATA@CvMinorCivQuest@@2HB DD 0ffffffffH	; CvMinorCivQuest::NO_QUEST_DATA
CONST	ENDS
_DATA	SEGMENT
_CIV5_XP2_DLL_VERSION DD FLAT:??_C@_05OCFELOIJ@1?40?40?$AA@
_DATA	ENDS
;	COMDAT ??_C@_05OCFELOIJ@1?40?40?$AA@
CONST	SEGMENT
??_C@_05OCFELOIJ@1?40?40?$AA@ DB '1.0.0', 00H		; `string'
CONST	ENDS
PUBLIC	??_7CvDllPlayer@@6B@				; CvDllPlayer::`vftable'
PUBLIC	??_7ICvPlayer3@@6B@				; ICvPlayer3::`vftable'
PUBLIC	??_7ICvPlayer2@@6B@				; ICvPlayer2::`vftable'
PUBLIC	??_7ICvPlayer1@@6B@				; ICvPlayer1::`vftable'
PUBLIC	??_7ICvUnknown@@6B@				; ICvUnknown::`vftable'
PUBLIC	??0CvDllPlayer@@QAE@PAVCvPlayerAI@@@Z		; CvDllPlayer::CvDllPlayer
PUBLIC	?QueryInterface@CvDllPlayer@@UAGPAXU_GUID@@@Z	; CvDllPlayer::QueryInterface
PUBLIC	?Destroy@CvDllPlayer@@EAGXXZ			; CvDllPlayer::Destroy
PUBLIC	?Init@CvDllPlayer@@UAGXW4PlayerTypes@@@Z	; CvDllPlayer::Init
PUBLIC	?SetupGraphical@CvDllPlayer@@UAGXXZ		; CvDllPlayer::SetupGraphical
PUBLIC	?LaterInit@CvDllPlayer@@UAGXXZ			; CvDllPlayer::LaterInit
PUBLIC	?Uninit@CvDllPlayer@@UAGXXZ			; CvDllPlayer::Uninit
PUBLIC	?IsHuman@CvDllPlayer@@UBG_NXZ			; CvDllPlayer::IsHuman
PUBLIC	?IsBarbarian@CvDllPlayer@@UBG_NXZ		; CvDllPlayer::IsBarbarian
PUBLIC	?GetName@CvDllPlayer@@UBGPBDXZ			; CvDllPlayer::GetName
PUBLIC	?GetNickName@CvDllPlayer@@UBGQBDXZ		; CvDllPlayer::GetNickName
PUBLIC	?GetArtStyleType@CvDllPlayer@@UBG?AW4ArtStyleTypes@@XZ ; CvDllPlayer::GetArtStyleType
PUBLIC	?GetFirstReadyUnit@CvDllPlayer@@UAGPAVICvUnit1@@XZ ; CvDllPlayer::GetFirstReadyUnit
PUBLIC	?HasBusyUnit@CvDllPlayer@@UBG_NXZ		; CvDllPlayer::HasBusyUnit
PUBLIC	?HasBusyUnitOrCity@CvDllPlayer@@UBG_NXZ		; CvDllPlayer::HasBusyUnitOrCity
PUBLIC	?GetScore@CvDllPlayer@@UBGH_N0@Z		; CvDllPlayer::GetScore
PUBLIC	?GetStartingPlot@CvDllPlayer@@UBGPAVICvPlot1@@XZ ; CvDllPlayer::GetStartingPlot
PUBLIC	?GetCapitalCity@CvDllPlayer@@UAGPAVICvCity1@@XZ	; CvDllPlayer::GetCapitalCity
PUBLIC	?IsHasLostCapital@CvDllPlayer@@UBG_NXZ		; CvDllPlayer::IsHasLostCapital
PUBLIC	?SetStartTime@CvDllPlayer@@UAGXI@Z		; CvDllPlayer::SetStartTime
PUBLIC	?IsMinorCiv@CvDllPlayer@@UBG_NXZ		; CvDllPlayer::IsMinorCiv
PUBLIC	?IsAlive@CvDllPlayer@@UBG_NXZ			; CvDllPlayer::IsAlive
PUBLIC	?IsEverAlive@CvDllPlayer@@UBG_NXZ		; CvDllPlayer::IsEverAlive
PUBLIC	?IsTurnActive@CvDllPlayer@@UBG_NXZ		; CvDllPlayer::IsTurnActive
PUBLIC	?SetTurnActive@CvDllPlayer@@UAGX_N0@Z		; CvDllPlayer::SetTurnActive
PUBLIC	?GetID@CvDllPlayer@@UBG?AW4PlayerTypes@@XZ	; CvDllPlayer::GetID
PUBLIC	?GetHandicapType@CvDllPlayer@@UBG?AW4HandicapTypes@@XZ ; CvDllPlayer::GetHandicapType
PUBLIC	?GetCivilizationType@CvDllPlayer@@UBG?AW4CivilizationTypes@@XZ ; CvDllPlayer::GetCivilizationType
PUBLIC	?GetLeaderType@CvDllPlayer@@UBG?AW4LeaderHeadTypes@@XZ ; CvDllPlayer::GetLeaderType
PUBLIC	?GetLeaderTypeKey@CvDllPlayer@@UBGPBDXZ		; CvDllPlayer::GetLeaderTypeKey
PUBLIC	?GetCurrentEra@CvDllPlayer@@UBG?AW4EraTypes@@XZ	; CvDllPlayer::GetCurrentEra
PUBLIC	?GetTeam@CvDllPlayer@@UBG?AW4TeamTypes@@XZ	; CvDllPlayer::GetTeam
PUBLIC	?GetPlayerColor@CvDllPlayer@@UBG?AW4PlayerColorTypes@@XZ ; CvDllPlayer::GetPlayerColor
PUBLIC	?IsOption@CvDllPlayer@@UBG_NW4PlayerOptionTypes@@@Z ; CvDllPlayer::IsOption
PUBLIC	?FirstCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z	; CvDllPlayer::FirstCity
PUBLIC	?NextCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z	; CvDllPlayer::NextCity
PUBLIC	?GetNumCities@CvDllPlayer@@UBGHXZ		; CvDllPlayer::GetNumCities
PUBLIC	?GetCity@CvDllPlayer@@UAGPAVICvCity1@@H@Z	; CvDllPlayer::GetCity
PUBLIC	?FirstUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z	; CvDllPlayer::FirstUnit
PUBLIC	?NextUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z	; CvDllPlayer::NextUnit
PUBLIC	?GetUnit@CvDllPlayer@@UAGPAVICvUnit1@@H@Z	; CvDllPlayer::GetUnit
PUBLIC	?GetPlotDanger@CvDllPlayer@@UBGHPAVICvPlot1@@@Z	; CvDllPlayer::GetPlotDanger
PUBLIC	?GetCityDistanceHighwaterMark@CvDllPlayer@@UBGHXZ ; CvDllPlayer::GetCityDistanceHighwaterMark
PUBLIC	?Disconnected@CvDllPlayer@@UAGXXZ		; CvDllPlayer::Disconnected
PUBLIC	?Reconnected@CvDllPlayer@@UAGXXZ		; CvDllPlayer::Reconnected
PUBLIC	?SetBusyUnitUpdatesRemaining@CvDllPlayer@@UAGXH@Z ; CvDllPlayer::SetBusyUnitUpdatesRemaining
PUBLIC	?HasUnitsThatNeedAIUpdate@CvDllPlayer@@UBG_NXZ	; CvDllPlayer::HasUnitsThatNeedAIUpdate
PUBLIC	?GetNumPolicyBranchesFinished@CvDllPlayer@@UBGHXZ ; CvDllPlayer::GetNumPolicyBranchesFinished
PUBLIC	?Read@CvDllPlayer@@UAGXAAVFDataStream@@@Z	; CvDllPlayer::Read
PUBLIC	?Write@CvDllPlayer@@UBGXAAVFDataStream@@@Z	; CvDllPlayer::Write
PUBLIC	?GetGold@CvDllPlayer@@UBGHXZ			; CvDllPlayer::GetGold
PUBLIC	?CalculateBaseNetGold@CvDllPlayer@@UAGHXZ	; CvDllPlayer::CalculateBaseNetGold
PUBLIC	?GetEmbarkedGraphicOverride@CvDllPlayer@@UAGPBDXZ ; CvDllPlayer::GetEmbarkedGraphicOverride
PUBLIC	?GetSyncArchive@CvDllPlayer@@UAGAAVFAutoArchive@@XZ ; CvDllPlayer::GetSyncArchive
PUBLIC	?GetMinorCivType@CvDllPlayer@@UBG?AW4MinorCivTypes@@XZ ; CvDllPlayer::GetMinorCivType
PUBLIC	?GetDiplomacyAI@CvDllPlayer@@UAGPAVICvDiplomacyAI1@@XZ ; CvDllPlayer::GetDiplomacyAI
PUBLIC	?GetDealAI@CvDllPlayer@@UAGPAVICvDealAI1@@XZ	; CvDllPlayer::GetDealAI
PUBLIC	?AddDiplomacyRequest@CvDllPlayer@@UAG_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z ; CvDllPlayer::AddDiplomacyRequest
PUBLIC	?ActiveDiplomacyRequestComplete@CvDllPlayer@@UAGXXZ ; CvDllPlayer::ActiveDiplomacyRequestComplete
PUBLIC	?AddNotification@CvDllPlayer@@UAGHW4NotificationTypes@@PBD1HHHH@Z ; CvDllPlayer::AddNotification
PUBLIC	?ActivateNotification@CvDllPlayer@@UAGXH@Z	; CvDllPlayer::ActivateNotification
PUBLIC	?DismissNotification@CvDllPlayer@@UAGXH_N@Z	; CvDllPlayer::DismissNotification
PUBLIC	?MayUserDismissNotification@CvDllPlayer@@UAG_NH@Z ; CvDllPlayer::MayUserDismissNotification
PUBLIC	?RebroadcastNotifications@CvDllPlayer@@UAGXXZ	; CvDllPlayer::RebroadcastNotifications
PUBLIC	?GetCurrentResearchTech@CvDllPlayer@@UBG_NPAW4TechTypes@@PAH@Z ; CvDllPlayer::GetCurrentResearchTech
PUBLIC	?IsSimultaneousTurns@CvDllPlayer@@UBG_NXZ	; CvDllPlayer::IsSimultaneousTurns
PUBLIC	?HasTurnTimerExpired@CvDllPlayer@@UAG_NXZ	; CvDllPlayer::HasTurnTimerExpired
PUBLIC	?IsOptionKey@CvDllPlayer@@UBG_NW4PlayerOptionTypes@@@Z ; CvDllPlayer::IsOptionKey
PUBLIC	?MayNotAnnex@CvDllPlayer@@UAG_NXZ		; CvDllPlayer::MayNotAnnex
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
EXTRN	__purecall:PROC
;	COMDAT ??_7CvDllPlayer@@6B@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_7CvDllPlayer@@6B@ DD FLAT:?QueryInterface@CvDllPlayer@@UAGPAXU_GUID@@@Z ; CvDllPlayer::`vftable'
	DD	FLAT:?Destroy@CvDllPlayer@@EAGXXZ
	DD	FLAT:?Init@CvDllPlayer@@UAGXW4PlayerTypes@@@Z
	DD	FLAT:?SetupGraphical@CvDllPlayer@@UAGXXZ
	DD	FLAT:?LaterInit@CvDllPlayer@@UAGXXZ
	DD	FLAT:?Uninit@CvDllPlayer@@UAGXXZ
	DD	FLAT:?IsHuman@CvDllPlayer@@UBG_NXZ
	DD	FLAT:?IsBarbarian@CvDllPlayer@@UBG_NXZ
	DD	FLAT:?GetName@CvDllPlayer@@UBGPBDXZ
	DD	FLAT:?GetNickName@CvDllPlayer@@UBGQBDXZ
	DD	FLAT:?GetArtStyleType@CvDllPlayer@@UBG?AW4ArtStyleTypes@@XZ
	DD	FLAT:?GetFirstReadyUnit@CvDllPlayer@@UAGPAVICvUnit1@@XZ
	DD	FLAT:?HasBusyUnit@CvDllPlayer@@UBG_NXZ
	DD	FLAT:?HasBusyUnitOrCity@CvDllPlayer@@UBG_NXZ
	DD	FLAT:?GetScore@CvDllPlayer@@UBGH_N0@Z
	DD	FLAT:?GetStartingPlot@CvDllPlayer@@UBGPAVICvPlot1@@XZ
	DD	FLAT:?GetCapitalCity@CvDllPlayer@@UAGPAVICvCity1@@XZ
	DD	FLAT:?IsHasLostCapital@CvDllPlayer@@UBG_NXZ
	DD	FLAT:?SetStartTime@CvDllPlayer@@UAGXI@Z
	DD	FLAT:?IsMinorCiv@CvDllPlayer@@UBG_NXZ
	DD	FLAT:?IsAlive@CvDllPlayer@@UBG_NXZ
	DD	FLAT:?IsEverAlive@CvDllPlayer@@UBG_NXZ
	DD	FLAT:?IsTurnActive@CvDllPlayer@@UBG_NXZ
	DD	FLAT:?SetTurnActive@CvDllPlayer@@UAGX_N0@Z
	DD	FLAT:?GetID@CvDllPlayer@@UBG?AW4PlayerTypes@@XZ
	DD	FLAT:?GetHandicapType@CvDllPlayer@@UBG?AW4HandicapTypes@@XZ
	DD	FLAT:?GetCivilizationType@CvDllPlayer@@UBG?AW4CivilizationTypes@@XZ
	DD	FLAT:?GetLeaderType@CvDllPlayer@@UBG?AW4LeaderHeadTypes@@XZ
	DD	FLAT:?GetLeaderTypeKey@CvDllPlayer@@UBGPBDXZ
	DD	FLAT:?GetCurrentEra@CvDllPlayer@@UBG?AW4EraTypes@@XZ
	DD	FLAT:?GetTeam@CvDllPlayer@@UBG?AW4TeamTypes@@XZ
	DD	FLAT:?GetPlayerColor@CvDllPlayer@@UBG?AW4PlayerColorTypes@@XZ
	DD	FLAT:?IsOption@CvDllPlayer@@UBG_NW4PlayerOptionTypes@@@Z
	DD	FLAT:?FirstCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z
	DD	FLAT:?NextCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z
	DD	FLAT:?GetNumCities@CvDllPlayer@@UBGHXZ
	DD	FLAT:?GetCity@CvDllPlayer@@UAGPAVICvCity1@@H@Z
	DD	FLAT:?FirstUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z
	DD	FLAT:?NextUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z
	DD	FLAT:?GetUnit@CvDllPlayer@@UAGPAVICvUnit1@@H@Z
	DD	FLAT:?GetPlotDanger@CvDllPlayer@@UBGHPAVICvPlot1@@@Z
	DD	FLAT:?GetCityDistanceHighwaterMark@CvDllPlayer@@UBGHXZ
	DD	FLAT:?Disconnected@CvDllPlayer@@UAGXXZ
	DD	FLAT:?Reconnected@CvDllPlayer@@UAGXXZ
	DD	FLAT:?SetBusyUnitUpdatesRemaining@CvDllPlayer@@UAGXH@Z
	DD	FLAT:?HasUnitsThatNeedAIUpdate@CvDllPlayer@@UBG_NXZ
	DD	FLAT:?GetNumPolicyBranchesFinished@CvDllPlayer@@UBGHXZ
	DD	FLAT:?Read@CvDllPlayer@@UAGXAAVFDataStream@@@Z
	DD	FLAT:?Write@CvDllPlayer@@UBGXAAVFDataStream@@@Z
	DD	FLAT:?GetGold@CvDllPlayer@@UBGHXZ
	DD	FLAT:?CalculateBaseNetGold@CvDllPlayer@@UAGHXZ
	DD	FLAT:?GetEmbarkedGraphicOverride@CvDllPlayer@@UAGPBDXZ
	DD	FLAT:?GetSyncArchive@CvDllPlayer@@UAGAAVFAutoArchive@@XZ
	DD	FLAT:?GetMinorCivType@CvDllPlayer@@UBG?AW4MinorCivTypes@@XZ
	DD	FLAT:?GetDiplomacyAI@CvDllPlayer@@UAGPAVICvDiplomacyAI1@@XZ
	DD	FLAT:?GetDealAI@CvDllPlayer@@UAGPAVICvDealAI1@@XZ
	DD	FLAT:?AddDiplomacyRequest@CvDllPlayer@@UAG_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z
	DD	FLAT:?ActiveDiplomacyRequestComplete@CvDllPlayer@@UAGXXZ
	DD	FLAT:?AddNotification@CvDllPlayer@@UAGHW4NotificationTypes@@PBD1HHHH@Z
	DD	FLAT:?ActivateNotification@CvDllPlayer@@UAGXH@Z
	DD	FLAT:?DismissNotification@CvDllPlayer@@UAGXH_N@Z
	DD	FLAT:?MayUserDismissNotification@CvDllPlayer@@UAG_NH@Z
	DD	FLAT:?RebroadcastNotifications@CvDllPlayer@@UAGXXZ
	DD	FLAT:?GetCurrentResearchTech@CvDllPlayer@@UBG_NPAW4TechTypes@@PAH@Z
	DD	FLAT:?IsSimultaneousTurns@CvDllPlayer@@UBG_NXZ
	DD	FLAT:?HasTurnTimerExpired@CvDllPlayer@@UAG_NXZ
	DD	FLAT:?IsOptionKey@CvDllPlayer@@UBG_NW4PlayerOptionTypes@@@Z
	DD	FLAT:?MayNotAnnex@CvDllPlayer@@UAG_NXZ
CONST	ENDS
;	COMDAT ??_7ICvPlayer3@@6B@
CONST	SEGMENT
??_7ICvPlayer3@@6B@ DD FLAT:__purecall			; ICvPlayer3::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ICvPlayer2@@6B@
CONST	SEGMENT
??_7ICvPlayer2@@6B@ DD FLAT:__purecall			; ICvPlayer2::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ICvPlayer1@@6B@
CONST	SEGMENT
??_7ICvPlayer1@@6B@ DD FLAT:__purecall			; ICvPlayer1::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ICvUnknown@@6B@
CONST	SEGMENT
??_7ICvUnknown@@6B@ DD FLAT:__purecall			; ICvUnknown::`vftable'
	DD	FLAT:__purecall
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllplayer.cpp
CONST	ENDS
;	COMDAT ??0CvDllPlayer@@QAE@PAVCvPlayerAI@@@Z
_TEXT	SEGMENT
tv86 = -16						; size = 4
_this$ = -12						; size = 4
$T220549 = -8						; size = 4
$T220545 = -4						; size = 4
_pPlayer$ = 8						; size = 4
??0CvDllPlayer@@QAE@PAVCvPlayerAI@@@Z PROC		; CvDllPlayer::CvDllPlayer, COMDAT
; _this$ = ecx

; 28   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnknown@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7ICvPlayer1@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7ICvPlayer2@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICvPlayer3@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7CvDllPlayer@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 29   : 	if(gDLL)

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR $T220545[ebp], edx
	cmp	DWORD PTR $T220545[ebp], 0
	je	SHORT $LN2@CvDllPlaye

; 30   : 		gDLL->GetGameCoreLock();

	mov	eax, DWORD PTR $T220549[ebp]
	mov	DWORD PTR tv86[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv86[ebp], ecx
	mov	edx, DWORD PTR tv86[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv86[ebp]
	mov	edx, DWORD PTR [eax+912]
	call	edx
$LN2@CvDllPlaye:

; 31   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CvDllPlayer@@QAE@PAVCvPlayerAI@@@Z ENDP		; CvDllPlayer::CvDllPlayer
_TEXT	ENDS
PUBLIC	??1CvDllPlayer@@QAE@XZ				; CvDllPlayer::~CvDllPlayer
; Function compile flags: /Odtp
;	COMDAT ??1CvDllPlayer@@QAE@XZ
_TEXT	SEGMENT
tv79 = -16						; size = 4
_this$ = -12						; size = 4
$T220559 = -8						; size = 4
$T220555 = -4						; size = 4
??1CvDllPlayer@@QAE@XZ PROC				; CvDllPlayer::~CvDllPlayer, COMDAT
; _this$ = ecx

; 34   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvDllPlayer@@6B@

; 35   : 	if(gDLL)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR $T220555[ebp], ecx
	cmp	DWORD PTR $T220555[ebp], 0
	je	SHORT $LN2@CvDllPlaye@2

; 36   : 		gDLL->ReleaseGameCoreLock();

	mov	edx, DWORD PTR $T220559[ebp]
	mov	DWORD PTR tv79[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv79[ebp], eax
	mov	ecx, DWORD PTR tv79[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv79[ebp]
	mov	eax, DWORD PTR [edx+916]
	call	eax
$LN2@CvDllPlaye@2:

; 37   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1CvDllPlayer@@QAE@XZ ENDP				; CvDllPlayer::~CvDllPlayer
_TEXT	ENDS
PUBLIC	?IncrementReference@CvDllPlayer@@QAEIXZ		; CvDllPlayer::IncrementReference
; Function compile flags: /Odtp
;	COMDAT ?QueryInterface@CvDllPlayer@@UAGPAXU_GUID@@@Z
_TEXT	SEGMENT
tv146 = -168						; size = 4
tv265 = -164						; size = 4
tv141 = -160						; size = 4
tv209 = -156						; size = 4
tv136 = -152						; size = 4
tv185 = -148						; size = 4
tv131 = -144						; size = 4
tv161 = -140						; size = 4
$T220570 = -136						; size = 16
$T220569 = -120						; size = 16
$T220568 = -104						; size = 16
$T220567 = -88						; size = 16
$T220566 = -72						; size = 16
$T220565 = -56						; size = 16
$T220564 = -40						; size = 16
$T220563 = -20						; size = 16
_this$ = 8						; size = 4
_guidInterface$ = 12					; size = 16
?QueryInterface@CvDllPlayer@@UAGPAXU_GUID@@@Z PROC	; CvDllPlayer::QueryInterface, COMDAT

; 40   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 168				; 000000a8H
	push	esi
	push	edi

; 41   : 	if(	guidInterface == ICvUnknown::GetInterfaceId() ||
; 42   : 		guidInterface == ICvPlayer1::GetInterfaceId() ||
; 43   : 		guidInterface == ICvPlayer2::GetInterfaceId() ||
; 44   : 		guidInterface == ICvPlayer3::GetInterfaceId())

	mov	eax, DWORD PTR _guidICvUnknown
	mov	DWORD PTR $T220564[ebp], eax
	mov	ecx, DWORD PTR _guidICvUnknown+4
	mov	DWORD PTR $T220564[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvUnknown+8
	mov	DWORD PTR $T220564[ebp+8], edx
	mov	eax, DWORD PTR _guidICvUnknown+12
	mov	DWORD PTR $T220564[ebp+12], eax
	mov	ecx, DWORD PTR $T220564[ebp]
	mov	DWORD PTR $T220563[ebp], ecx
	mov	edx, DWORD PTR $T220564[ebp+4]
	mov	DWORD PTR $T220563[ebp+4], edx
	mov	eax, DWORD PTR $T220564[ebp+8]
	mov	DWORD PTR $T220563[ebp+8], eax
	mov	ecx, DWORD PTR $T220564[ebp+12]
	mov	DWORD PTR $T220563[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T220563[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv161[ebp], edx
	repe cmpsb
	je	SHORT $LN29@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv161[ebp], eax
$LN29@QueryInter:
	mov	ecx, DWORD PTR tv161[ebp]
	mov	DWORD PTR tv131[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv131[ebp], 0
	sete	dl
	test	edx, edx
	jne	$LN1@QueryInter
	mov	eax, DWORD PTR _guidICvPlayer1
	mov	DWORD PTR $T220566[ebp], eax
	mov	ecx, DWORD PTR _guidICvPlayer1+4
	mov	DWORD PTR $T220566[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvPlayer1+8
	mov	DWORD PTR $T220566[ebp+8], edx
	mov	eax, DWORD PTR _guidICvPlayer1+12
	mov	DWORD PTR $T220566[ebp+12], eax
	mov	ecx, DWORD PTR $T220566[ebp]
	mov	DWORD PTR $T220565[ebp], ecx
	mov	edx, DWORD PTR $T220566[ebp+4]
	mov	DWORD PTR $T220565[ebp+4], edx
	mov	eax, DWORD PTR $T220566[ebp+8]
	mov	DWORD PTR $T220565[ebp+8], eax
	mov	ecx, DWORD PTR $T220566[ebp+12]
	mov	DWORD PTR $T220565[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T220565[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv185[ebp], edx
	repe cmpsb
	je	SHORT $LN30@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv185[ebp], eax
$LN30@QueryInter:
	mov	ecx, DWORD PTR tv185[ebp]
	mov	DWORD PTR tv136[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv136[ebp], 0
	sete	dl
	test	edx, edx
	jne	$LN1@QueryInter
	mov	eax, DWORD PTR _guidICvPlayer2
	mov	DWORD PTR $T220568[ebp], eax
	mov	ecx, DWORD PTR _guidICvPlayer2+4
	mov	DWORD PTR $T220568[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvPlayer2+8
	mov	DWORD PTR $T220568[ebp+8], edx
	mov	eax, DWORD PTR _guidICvPlayer2+12
	mov	DWORD PTR $T220568[ebp+12], eax
	mov	ecx, DWORD PTR $T220568[ebp]
	mov	DWORD PTR $T220567[ebp], ecx
	mov	edx, DWORD PTR $T220568[ebp+4]
	mov	DWORD PTR $T220567[ebp+4], edx
	mov	eax, DWORD PTR $T220568[ebp+8]
	mov	DWORD PTR $T220567[ebp+8], eax
	mov	ecx, DWORD PTR $T220568[ebp+12]
	mov	DWORD PTR $T220567[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T220567[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv209[ebp], edx
	repe cmpsb
	je	SHORT $LN31@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv209[ebp], eax
$LN31@QueryInter:
	mov	ecx, DWORD PTR tv209[ebp]
	mov	DWORD PTR tv141[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv141[ebp], 0
	sete	dl
	test	edx, edx
	jne	$LN1@QueryInter
	mov	eax, DWORD PTR _guidICvPlayer3
	mov	DWORD PTR $T220570[ebp], eax
	mov	ecx, DWORD PTR _guidICvPlayer3+4
	mov	DWORD PTR $T220570[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvPlayer3+8
	mov	DWORD PTR $T220570[ebp+8], edx
	mov	eax, DWORD PTR _guidICvPlayer3+12
	mov	DWORD PTR $T220570[ebp+12], eax
	mov	ecx, DWORD PTR $T220570[ebp]
	mov	DWORD PTR $T220569[ebp], ecx
	mov	edx, DWORD PTR $T220570[ebp+4]
	mov	DWORD PTR $T220569[ebp+4], edx
	mov	eax, DWORD PTR $T220570[ebp+8]
	mov	DWORD PTR $T220569[ebp+8], eax
	mov	ecx, DWORD PTR $T220570[ebp+12]
	mov	DWORD PTR $T220569[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T220569[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv265[ebp], edx
	repe cmpsb
	je	SHORT $LN32@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv265[ebp], eax
$LN32@QueryInter:
	mov	ecx, DWORD PTR tv265[ebp]
	mov	DWORD PTR tv146[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv146[ebp], 0
	sete	dl
	test	edx, edx
	je	SHORT $LN2@QueryInter
$LN1@QueryInter:

; 45   : 	{
; 46   : 		IncrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IncrementReference@CvDllPlayer@@QAEIXZ	; CvDllPlayer::IncrementReference

; 47   : 		return this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN3@QueryInter
$LN2@QueryInter:

; 48   : 	}
; 49   : 
; 50   : 	return NULL;

	xor	eax, eax
$LN3@QueryInter:

; 51   : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?QueryInterface@CvDllPlayer@@UAGPAXU_GUID@@@Z ENDP	; CvDllPlayer::QueryInterface
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IncrementReference@CvDllPlayer@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IncrementReference@CvDllPlayer@@QAEIXZ PROC		; CvDllPlayer::IncrementReference, COMDAT
; _this$ = ecx

; 54   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 55   : 	++m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 56   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 57   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IncrementReference@CvDllPlayer@@QAEIXZ ENDP		; CvDllPlayer::IncrementReference
_TEXT	ENDS
PUBLIC	??3CvDllPlayer@@SAXPAX@Z			; CvDllPlayer::operator delete
PUBLIC	?DecrementReference@CvDllPlayer@@QAEIXZ		; CvDllPlayer::DecrementReference
; Function compile flags: /Odtp
;	COMDAT ?DecrementReference@CvDllPlayer@@QAEIXZ
_TEXT	SEGMENT
tv70 = -16						; size = 4
_this$ = -12						; size = 4
$T220628 = -8						; size = 4
$T220627 = -4						; size = 4
?DecrementReference@CvDllPlayer@@QAEIXZ PROC		; CvDllPlayer::DecrementReference, COMDAT
; _this$ = ecx

; 60   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 61   : 	if(m_uiRefCount == 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	SHORT $LN2@DecrementR

; 62   : 	{
; 63   : 		delete this;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T220628[ebp], ecx
	mov	edx, DWORD PTR $T220628[ebp]
	mov	DWORD PTR $T220627[ebp], edx
	cmp	DWORD PTR $T220627[ebp], 0
	je	SHORT $LN5@DecrementR
	mov	ecx, DWORD PTR $T220627[ebp]
	call	??1CvDllPlayer@@QAE@XZ			; CvDllPlayer::~CvDllPlayer
	mov	eax, 1
	and	eax, 1
	je	SHORT $LN8@DecrementR
	mov	ecx, DWORD PTR $T220627[ebp]
	push	ecx
	call	??3CvDllPlayer@@SAXPAX@Z		; CvDllPlayer::operator delete
	add	esp, 4
$LN8@DecrementR:
	mov	edx, DWORD PTR $T220627[ebp]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN6@DecrementR
$LN5@DecrementR:
	mov	DWORD PTR tv70[ebp], 0
$LN6@DecrementR:

; 64   : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN3@DecrementR

; 65   : 	}
; 66   : 	else

	jmp	SHORT $LN3@DecrementR
$LN2@DecrementR:

; 67   : 	{
; 68   : 		--m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 69   : 		return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
$LN3@DecrementR:

; 70   : 	}
; 71   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DecrementReference@CvDllPlayer@@QAEIXZ ENDP		; CvDllPlayer::DecrementReference
_TEXT	ENDS
PUBLIC	?GetReferenceCount@CvDllPlayer@@QAEIXZ		; CvDllPlayer::GetReferenceCount
; Function compile flags: /Odtp
;	COMDAT ?GetReferenceCount@CvDllPlayer@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetReferenceCount@CvDllPlayer@@QAEIXZ PROC		; CvDllPlayer::GetReferenceCount, COMDAT
; _this$ = ecx

; 74   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 75   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 76   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetReferenceCount@CvDllPlayer@@QAEIXZ ENDP		; CvDllPlayer::GetReferenceCount
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Destroy@CvDllPlayer@@EAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Destroy@CvDllPlayer@@EAGXXZ PROC			; CvDllPlayer::Destroy, COMDAT

; 79   : {

	push	ebp
	mov	ebp, esp

; 80   : 	DecrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DecrementReference@CvDllPlayer@@QAEIXZ	; CvDllPlayer::DecrementReference

; 81   : }

	pop	ebp
	ret	4
?Destroy@CvDllPlayer@@EAGXXZ ENDP			; CvDllPlayer::Destroy
_TEXT	ENDS
EXTRN	?Free@CvDllGameContext@@SAXPAX@Z:PROC		; CvDllGameContext::Free
; Function compile flags: /Odtp
;	COMDAT ??3CvDllPlayer@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CvDllPlayer@@SAXPAX@Z PROC				; CvDllPlayer::operator delete, COMDAT

; 84   : {

	push	ebp
	mov	ebp, esp

; 85   : 	CvDllGameContext::Free(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4

; 86   : }

	pop	ebp
	ret	0
??3CvDllPlayer@@SAXPAX@Z ENDP				; CvDllPlayer::operator delete
_TEXT	ENDS
PUBLIC	??2CvDllPlayer@@SAPAXI@Z			; CvDllPlayer::operator new
EXTRN	?Allocate@CvDllGameContext@@SAPAXI@Z:PROC	; CvDllGameContext::Allocate
; Function compile flags: /Odtp
;	COMDAT ??2CvDllPlayer@@SAPAXI@Z
_TEXT	SEGMENT
_bytes$ = 8						; size = 4
??2CvDllPlayer@@SAPAXI@Z PROC				; CvDllPlayer::operator new, COMDAT

; 89   : {

	push	ebp
	mov	ebp, esp

; 90   : 	return CvDllGameContext::Allocate(bytes);

	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	call	?Allocate@CvDllGameContext@@SAPAXI@Z	; CvDllGameContext::Allocate
	add	esp, 4

; 91   : }

	pop	ebp
	ret	0
??2CvDllPlayer@@SAPAXI@Z ENDP				; CvDllPlayer::operator new
_TEXT	ENDS
PUBLIC	?GetInstance@CvDllPlayer@@QAEPAVCvPlayerAI@@XZ	; CvDllPlayer::GetInstance
; Function compile flags: /Odtp
;	COMDAT ?GetInstance@CvDllPlayer@@QAEPAVCvPlayerAI@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetInstance@CvDllPlayer@@QAEPAVCvPlayerAI@@XZ PROC	; CvDllPlayer::GetInstance, COMDAT
; _this$ = ecx

; 94   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 95   : 	return m_pPlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 96   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@CvDllPlayer@@QAEPAVCvPlayerAI@@XZ ENDP	; CvDllPlayer::GetInstance
_TEXT	ENDS
EXTRN	?init@CvPlayer@@QAEXW4PlayerTypes@@@Z:PROC	; CvPlayer::init
; Function compile flags: /Odtp
;	COMDAT ?Init@CvDllPlayer@@UAGXW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_eID$ = 12						; size = 4
?Init@CvDllPlayer@@UAGXW4PlayerTypes@@@Z PROC		; CvDllPlayer::Init, COMDAT

; 99   : {

	push	ebp
	mov	ebp, esp

; 100  : 	m_pPlayer->init(eID);

	mov	eax, DWORD PTR _eID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?init@CvPlayer@@QAEXW4PlayerTypes@@@Z	; CvPlayer::init

; 101  : }

	pop	ebp
	ret	8
?Init@CvDllPlayer@@UAGXW4PlayerTypes@@@Z ENDP		; CvDllPlayer::Init
_TEXT	ENDS
EXTRN	?setupGraphical@CvPlayer@@QAEXXZ:PROC		; CvPlayer::setupGraphical
; Function compile flags: /Odtp
;	COMDAT ?SetupGraphical@CvDllPlayer@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?SetupGraphical@CvDllPlayer@@UAGXXZ PROC		; CvDllPlayer::SetupGraphical, COMDAT

; 104  : {

	push	ebp
	mov	ebp, esp

; 105  : 	m_pPlayer->setupGraphical();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?setupGraphical@CvPlayer@@QAEXXZ	; CvPlayer::setupGraphical

; 106  : }

	pop	ebp
	ret	4
?SetupGraphical@CvDllPlayer@@UAGXXZ ENDP		; CvDllPlayer::SetupGraphical
_TEXT	ENDS
EXTRN	?gameStartInit@CvPlayer@@QAEXXZ:PROC		; CvPlayer::gameStartInit
; Function compile flags: /Odtp
;	COMDAT ?LaterInit@CvDllPlayer@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?LaterInit@CvDllPlayer@@UAGXXZ PROC			; CvDllPlayer::LaterInit, COMDAT

; 109  : {

	push	ebp
	mov	ebp, esp

; 110  : 	m_pPlayer->gameStartInit();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?gameStartInit@CvPlayer@@QAEXXZ		; CvPlayer::gameStartInit

; 111  : }

	pop	ebp
	ret	4
?LaterInit@CvDllPlayer@@UAGXXZ ENDP			; CvDllPlayer::LaterInit
_TEXT	ENDS
EXTRN	?uninit@CvPlayer@@QAEXXZ:PROC			; CvPlayer::uninit
; Function compile flags: /Odtp
;	COMDAT ?Uninit@CvDllPlayer@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Uninit@CvDllPlayer@@UAGXXZ PROC			; CvDllPlayer::Uninit, COMDAT

; 114  : {

	push	ebp
	mov	ebp, esp

; 115  : 	m_pPlayer->uninit();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?uninit@CvPlayer@@QAEXXZ		; CvPlayer::uninit

; 116  : }

	pop	ebp
	ret	4
?Uninit@CvDllPlayer@@UAGXXZ ENDP			; CvDllPlayer::Uninit
_TEXT	ENDS
EXTRN	?isHuman@CvPlayer@@QBE_NXZ:PROC			; CvPlayer::isHuman
; Function compile flags: /Odtp
;	COMDAT ?IsHuman@CvDllPlayer@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsHuman@CvDllPlayer@@UBG_NXZ PROC			; CvDllPlayer::IsHuman, COMDAT

; 119  : {

	push	ebp
	mov	ebp, esp

; 120  : 	return m_pPlayer->isHuman();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman

; 121  : }

	pop	ebp
	ret	4
?IsHuman@CvDllPlayer@@UBG_NXZ ENDP			; CvDllPlayer::IsHuman
_TEXT	ENDS
EXTRN	?isBarbarian@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isBarbarian
; Function compile flags: /Odtp
;	COMDAT ?IsBarbarian@CvDllPlayer@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsBarbarian@CvDllPlayer@@UBG_NXZ PROC			; CvDllPlayer::IsBarbarian, COMDAT

; 124  : {

	push	ebp
	mov	ebp, esp

; 125  : 	return m_pPlayer->isBarbarian();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isBarbarian@CvPlayer@@QBE_NXZ		; CvPlayer::isBarbarian

; 126  : }

	pop	ebp
	ret	4
?IsBarbarian@CvDllPlayer@@UBG_NXZ ENDP			; CvDllPlayer::IsBarbarian
_TEXT	ENDS
EXTRN	?getName@CvPlayer@@QBEPBDXZ:PROC		; CvPlayer::getName
; Function compile flags: /Odtp
;	COMDAT ?GetName@CvDllPlayer@@UBGPBDXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetName@CvDllPlayer@@UBGPBDXZ PROC			; CvDllPlayer::GetName, COMDAT

; 129  : {

	push	ebp
	mov	ebp, esp

; 130  : 	return m_pPlayer->getName();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getName@CvPlayer@@QBEPBDXZ		; CvPlayer::getName

; 131  : }

	pop	ebp
	ret	4
?GetName@CvDllPlayer@@UBGPBDXZ ENDP			; CvDllPlayer::GetName
_TEXT	ENDS
EXTRN	?getNickName@CvPlayer@@QBEQBDXZ:PROC		; CvPlayer::getNickName
; Function compile flags: /Odtp
;	COMDAT ?GetNickName@CvDllPlayer@@UBGQBDXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNickName@CvDllPlayer@@UBGQBDXZ PROC			; CvDllPlayer::GetNickName, COMDAT

; 134  : {

	push	ebp
	mov	ebp, esp

; 135  : 	return m_pPlayer->getNickName();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getNickName@CvPlayer@@QBEQBDXZ		; CvPlayer::getNickName

; 136  : }

	pop	ebp
	ret	4
?GetNickName@CvDllPlayer@@UBGQBDXZ ENDP			; CvDllPlayer::GetNickName
_TEXT	ENDS
EXTRN	?getArtStyleType@CvPlayer@@QBE?AW4ArtStyleTypes@@XZ:PROC ; CvPlayer::getArtStyleType
; Function compile flags: /Odtp
;	COMDAT ?GetArtStyleType@CvDllPlayer@@UBG?AW4ArtStyleTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetArtStyleType@CvDllPlayer@@UBG?AW4ArtStyleTypes@@XZ PROC ; CvDllPlayer::GetArtStyleType, COMDAT

; 139  : {

	push	ebp
	mov	ebp, esp

; 140  : 	return m_pPlayer->getArtStyleType();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getArtStyleType@CvPlayer@@QBE?AW4ArtStyleTypes@@XZ ; CvPlayer::getArtStyleType

; 141  : }

	pop	ebp
	ret	4
?GetArtStyleType@CvDllPlayer@@UBG?AW4ArtStyleTypes@@XZ ENDP ; CvDllPlayer::GetArtStyleType
_TEXT	ENDS
EXTRN	??3CvDllUnit@@SAXPAX@Z:PROC			; CvDllUnit::operator delete
EXTRN	??0CvDllUnit@@QAE@PAVCvUnit@@@Z:PROC		; CvDllUnit::CvDllUnit
EXTRN	??2CvDllUnit@@SAPAXI@Z:PROC			; CvDllUnit::operator new
EXTRN	?GetFirstReadyUnit@CvPlayer@@QBEPBVCvUnit@@XZ:PROC ; CvPlayer::GetFirstReadyUnit
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetFirstReadyUnit@CvDllPlayer@@UAGPAVICvUnit1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetFirstReadyUnit@CvDllPlayer@@UAGPAVICvUnit1@@XZ$0
__ehfuncinfo$?GetFirstReadyUnit@CvDllPlayer@@UAGPAVICvUnit1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetFirstReadyUnit@CvDllPlayer@@UAGPAVICvUnit1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetFirstReadyUnit@CvDllPlayer@@UAGPAVICvUnit1@@XZ
_TEXT	SEGMENT
tv78 = -32						; size = 4
tv83 = -28						; size = 4
$T220666 = -24						; size = 4
$T220665 = -20						; size = 4
_pkUnit$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?GetFirstReadyUnit@CvDllPlayer@@UAGPAVICvUnit1@@XZ PROC	; CvDllPlayer::GetFirstReadyUnit, COMDAT

; 144  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetFirstReadyUnit@CvDllPlayer@@UAGPAVICvUnit1@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 145  : 	//HACK! This should return an immutable CvUnit interface.
; 146  : 	const CvUnit* pkUnit = m_pPlayer->GetFirstReadyUnit();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetFirstReadyUnit@CvPlayer@@QBEPBVCvUnit@@XZ ; CvPlayer::GetFirstReadyUnit
	mov	DWORD PTR _pkUnit$[ebp], eax

; 147  : 	return (NULL != pkUnit)? new CvDllUnit(const_cast<CvUnit*>(pkUnit)) : NULL;

	cmp	DWORD PTR _pkUnit$[ebp], 0
	je	SHORT $LN5@GetFirstRe
	push	12					; 0000000cH
	call	??2CvDllUnit@@SAPAXI@Z			; CvDllUnit::operator new
	add	esp, 4
	mov	DWORD PTR $T220666[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T220666[ebp], 0
	je	SHORT $LN3@GetFirstRe
	mov	ecx, DWORD PTR _pkUnit$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T220666[ebp]
	call	??0CvDllUnit@@QAE@PAVCvUnit@@@Z		; CvDllUnit::CvDllUnit
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN4@GetFirstRe
$LN3@GetFirstRe:
	mov	DWORD PTR tv83[ebp], 0
$LN4@GetFirstRe:
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR $T220665[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T220665[ebp]
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN6@GetFirstRe
$LN5@GetFirstRe:
	mov	DWORD PTR tv78[ebp], 0
$LN6@GetFirstRe:
	mov	eax, DWORD PTR tv78[ebp]

; 148  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetFirstReadyUnit@CvDllPlayer@@UAGPAVICvUnit1@@XZ$0:
	mov	eax, DWORD PTR $T220666[ebp]
	push	eax
	call	??3CvDllUnit@@SAXPAX@Z			; CvDllUnit::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetFirstReadyUnit@CvDllPlayer@@UAGPAVICvUnit1@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetFirstReadyUnit@CvDllPlayer@@UAGPAVICvUnit1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetFirstReadyUnit@CvDllPlayer@@UAGPAVICvUnit1@@XZ ENDP	; CvDllPlayer::GetFirstReadyUnit
EXTRN	?hasBusyUnit@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::hasBusyUnit
; Function compile flags: /Odtp
;	COMDAT ?HasBusyUnit@CvDllPlayer@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?HasBusyUnit@CvDllPlayer@@UBG_NXZ PROC			; CvDllPlayer::HasBusyUnit, COMDAT

; 151  : {

	push	ebp
	mov	ebp, esp

; 152  : 	return m_pPlayer->hasBusyUnit();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?hasBusyUnit@CvPlayer@@QBE_NXZ		; CvPlayer::hasBusyUnit

; 153  : }

	pop	ebp
	ret	4
?HasBusyUnit@CvDllPlayer@@UBG_NXZ ENDP			; CvDllPlayer::HasBusyUnit
_TEXT	ENDS
EXTRN	?hasBusyUnitOrCity@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::hasBusyUnitOrCity
; Function compile flags: /Odtp
;	COMDAT ?HasBusyUnitOrCity@CvDllPlayer@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?HasBusyUnitOrCity@CvDllPlayer@@UBG_NXZ PROC		; CvDllPlayer::HasBusyUnitOrCity, COMDAT

; 156  : {

	push	ebp
	mov	ebp, esp

; 157  : 	return m_pPlayer->hasBusyUnitOrCity();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?hasBusyUnitOrCity@CvPlayer@@QBE_NXZ	; CvPlayer::hasBusyUnitOrCity

; 158  : }

	pop	ebp
	ret	4
?HasBusyUnitOrCity@CvDllPlayer@@UBG_NXZ ENDP		; CvDllPlayer::HasBusyUnitOrCity
_TEXT	ENDS
EXTRN	?GetScore@CvPlayer@@QBEH_N0@Z:PROC		; CvPlayer::GetScore
; Function compile flags: /Odtp
;	COMDAT ?GetScore@CvDllPlayer@@UBGH_N0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bFinal$ = 12						; size = 1
_bVictory$ = 16						; size = 1
?GetScore@CvDllPlayer@@UBGH_N0@Z PROC			; CvDllPlayer::GetScore, COMDAT

; 161  : {

	push	ebp
	mov	ebp, esp

; 162  : 	return m_pPlayer->GetScore(bFinal, bVictory);

	movzx	eax, BYTE PTR _bVictory$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bFinal$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?GetScore@CvPlayer@@QBEH_N0@Z		; CvPlayer::GetScore

; 163  : }

	pop	ebp
	ret	12					; 0000000cH
?GetScore@CvDllPlayer@@UBGH_N0@Z ENDP			; CvDllPlayer::GetScore
_TEXT	ENDS
EXTRN	??3CvDllPlot@@SAXPAX@Z:PROC			; CvDllPlot::operator delete
EXTRN	??0CvDllPlot@@QAE@PAVCvPlot@@@Z:PROC		; CvDllPlot::CvDllPlot
EXTRN	??2CvDllPlot@@SAPAXI@Z:PROC			; CvDllPlot::operator new
EXTRN	?getStartingPlot@CvPlayer@@QBEPAVCvPlot@@XZ:PROC ; CvPlayer::getStartingPlot
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetStartingPlot@CvDllPlayer@@UBGPAVICvPlot1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetStartingPlot@CvDllPlayer@@UBGPAVICvPlot1@@XZ$0
__ehfuncinfo$?GetStartingPlot@CvDllPlayer@@UBGPAVICvPlot1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetStartingPlot@CvDllPlayer@@UBGPAVICvPlot1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetStartingPlot@CvDllPlayer@@UBGPAVICvPlot1@@XZ
_TEXT	SEGMENT
tv78 = -32						; size = 4
tv83 = -28						; size = 4
$T220692 = -24						; size = 4
$T220691 = -20						; size = 4
_pkPlot$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?GetStartingPlot@CvDllPlayer@@UBGPAVICvPlot1@@XZ PROC	; CvDllPlayer::GetStartingPlot, COMDAT

; 166  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetStartingPlot@CvDllPlayer@@UBGPAVICvPlot1@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 167  : 	CvPlot* pkPlot = m_pPlayer->getStartingPlot();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getStartingPlot@CvPlayer@@QBEPAVCvPlot@@XZ ; CvPlayer::getStartingPlot
	mov	DWORD PTR _pkPlot$[ebp], eax

; 168  : 	return (NULL != pkPlot)? new CvDllPlot(pkPlot) : NULL;

	cmp	DWORD PTR _pkPlot$[ebp], 0
	je	SHORT $LN5@GetStartin
	push	12					; 0000000cH
	call	??2CvDllPlot@@SAPAXI@Z			; CvDllPlot::operator new
	add	esp, 4
	mov	DWORD PTR $T220692[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T220692[ebp], 0
	je	SHORT $LN3@GetStartin
	mov	ecx, DWORD PTR _pkPlot$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T220692[ebp]
	call	??0CvDllPlot@@QAE@PAVCvPlot@@@Z		; CvDllPlot::CvDllPlot
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN4@GetStartin
$LN3@GetStartin:
	mov	DWORD PTR tv83[ebp], 0
$LN4@GetStartin:
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR $T220691[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T220691[ebp]
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN6@GetStartin
$LN5@GetStartin:
	mov	DWORD PTR tv78[ebp], 0
$LN6@GetStartin:
	mov	eax, DWORD PTR tv78[ebp]

; 169  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetStartingPlot@CvDllPlayer@@UBGPAVICvPlot1@@XZ$0:
	mov	eax, DWORD PTR $T220692[ebp]
	push	eax
	call	??3CvDllPlot@@SAXPAX@Z			; CvDllPlot::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetStartingPlot@CvDllPlayer@@UBGPAVICvPlot1@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetStartingPlot@CvDllPlayer@@UBGPAVICvPlot1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetStartingPlot@CvDllPlayer@@UBGPAVICvPlot1@@XZ ENDP	; CvDllPlayer::GetStartingPlot
EXTRN	??3CvDllCity@@SAXPAX@Z:PROC			; CvDllCity::operator delete
EXTRN	??0CvDllCity@@QAE@PAVCvCity@@@Z:PROC		; CvDllCity::CvDllCity
EXTRN	??2CvDllCity@@SAPAXI@Z:PROC			; CvDllCity::operator new
EXTRN	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ:PROC	; CvPlayer::getCapitalCity
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCapitalCity@CvDllPlayer@@UAGPAVICvCity1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCapitalCity@CvDllPlayer@@UAGPAVICvCity1@@XZ$0
__ehfuncinfo$?GetCapitalCity@CvDllPlayer@@UAGPAVICvCity1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCapitalCity@CvDllPlayer@@UAGPAVICvCity1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetCapitalCity@CvDllPlayer@@UAGPAVICvCity1@@XZ
_TEXT	SEGMENT
tv78 = -32						; size = 4
tv83 = -28						; size = 4
$T220707 = -24						; size = 4
$T220706 = -20						; size = 4
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?GetCapitalCity@CvDllPlayer@@UAGPAVICvCity1@@XZ PROC	; CvDllPlayer::GetCapitalCity, COMDAT

; 172  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetCapitalCity@CvDllPlayer@@UAGPAVICvCity1@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 173  : 	CvCity* pkCity = m_pPlayer->getCapitalCity();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	DWORD PTR _pkCity$[ebp], eax

; 174  : 	return (NULL != pkCity)? new CvDllCity(pkCity) : NULL;

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	SHORT $LN5@GetCapital
	push	12					; 0000000cH
	call	??2CvDllCity@@SAPAXI@Z			; CvDllCity::operator new
	add	esp, 4
	mov	DWORD PTR $T220707[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T220707[ebp], 0
	je	SHORT $LN3@GetCapital
	mov	ecx, DWORD PTR _pkCity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T220707[ebp]
	call	??0CvDllCity@@QAE@PAVCvCity@@@Z		; CvDllCity::CvDllCity
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN4@GetCapital
$LN3@GetCapital:
	mov	DWORD PTR tv83[ebp], 0
$LN4@GetCapital:
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR $T220706[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T220706[ebp]
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN6@GetCapital
$LN5@GetCapital:
	mov	DWORD PTR tv78[ebp], 0
$LN6@GetCapital:
	mov	eax, DWORD PTR tv78[ebp]

; 175  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCapitalCity@CvDllPlayer@@UAGPAVICvCity1@@XZ$0:
	mov	eax, DWORD PTR $T220707[ebp]
	push	eax
	call	??3CvDllCity@@SAXPAX@Z			; CvDllCity::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetCapitalCity@CvDllPlayer@@UAGPAVICvCity1@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetCapitalCity@CvDllPlayer@@UAGPAVICvCity1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCapitalCity@CvDllPlayer@@UAGPAVICvCity1@@XZ ENDP	; CvDllPlayer::GetCapitalCity
EXTRN	?IsHasLostCapital@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::IsHasLostCapital
; Function compile flags: /Odtp
;	COMDAT ?IsHasLostCapital@CvDllPlayer@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsHasLostCapital@CvDllPlayer@@UBG_NXZ PROC		; CvDllPlayer::IsHasLostCapital, COMDAT

; 178  : {

	push	ebp
	mov	ebp, esp

; 179  : 	return m_pPlayer->IsHasLostCapital();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?IsHasLostCapital@CvPlayer@@QBE_NXZ	; CvPlayer::IsHasLostCapital

; 180  : }

	pop	ebp
	ret	4
?IsHasLostCapital@CvDllPlayer@@UBG_NXZ ENDP		; CvDllPlayer::IsHasLostCapital
_TEXT	ENDS
EXTRN	?setStartTime@CvPlayer@@QAEXI@Z:PROC		; CvPlayer::setStartTime
; Function compile flags: /Odtp
;	COMDAT ?SetStartTime@CvDllPlayer@@UAGXI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_uiStartTime$ = 12					; size = 4
?SetStartTime@CvDllPlayer@@UAGXI@Z PROC			; CvDllPlayer::SetStartTime, COMDAT

; 183  : {

	push	ebp
	mov	ebp, esp

; 184  : 	m_pPlayer->setStartTime(uiStartTime);

	mov	eax, DWORD PTR _uiStartTime$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?setStartTime@CvPlayer@@QAEXI@Z		; CvPlayer::setStartTime

; 185  : }

	pop	ebp
	ret	8
?SetStartTime@CvDllPlayer@@UAGXI@Z ENDP			; CvDllPlayer::SetStartTime
_TEXT	ENDS
EXTRN	?isMinorCiv@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isMinorCiv
; Function compile flags: /Odtp
;	COMDAT ?IsMinorCiv@CvDllPlayer@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsMinorCiv@CvDllPlayer@@UBG_NXZ PROC			; CvDllPlayer::IsMinorCiv, COMDAT

; 188  : {

	push	ebp
	mov	ebp, esp

; 189  : 	return m_pPlayer->isMinorCiv();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv

; 190  : }

	pop	ebp
	ret	4
?IsMinorCiv@CvDllPlayer@@UBG_NXZ ENDP			; CvDllPlayer::IsMinorCiv
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsAlive@CvDllPlayer@@UBG_NXZ
_TEXT	SEGMENT
$T220735 = -1						; size = 1
_this$ = 8						; size = 4
?IsAlive@CvDllPlayer@@UBG_NXZ PROC			; CvDllPlayer::IsAlive, COMDAT

; 193  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 194  : 	return m_pPlayer->isAlive();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T220735[ebp], dl
	mov	al, BYTE PTR $T220735[ebp]

; 195  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsAlive@CvDllPlayer@@UBG_NXZ ENDP			; CvDllPlayer::IsAlive
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsEverAlive@CvDllPlayer@@UBG_NXZ
_TEXT	SEGMENT
$T220746 = -1						; size = 1
_this$ = 8						; size = 4
?IsEverAlive@CvDllPlayer@@UBG_NXZ PROC			; CvDllPlayer::IsEverAlive, COMDAT

; 198  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 199  : 	return m_pPlayer->isEverAlive();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	dl, BYTE PTR [ecx+2268]
	mov	BYTE PTR $T220746[ebp], dl
	mov	al, BYTE PTR $T220746[ebp]

; 200  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsEverAlive@CvDllPlayer@@UBG_NXZ ENDP			; CvDllPlayer::IsEverAlive
_TEXT	ENDS
EXTRN	?isTurnActive@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isTurnActive
; Function compile flags: /Odtp
;	COMDAT ?IsTurnActive@CvDllPlayer@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsTurnActive@CvDllPlayer@@UBG_NXZ PROC			; CvDllPlayer::IsTurnActive, COMDAT

; 203  : {

	push	ebp
	mov	ebp, esp

; 204  : 	return m_pPlayer->isTurnActive();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isTurnActive@CvPlayer@@QBE_NXZ		; CvPlayer::isTurnActive

; 205  : }

	pop	ebp
	ret	4
?IsTurnActive@CvDllPlayer@@UBG_NXZ ENDP			; CvDllPlayer::IsTurnActive
_TEXT	ENDS
EXTRN	?setTurnActive@CvPlayer@@QAEX_N0@Z:PROC		; CvPlayer::setTurnActive
; Function compile flags: /Odtp
;	COMDAT ?SetTurnActive@CvDllPlayer@@UAGX_N0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bNewValue$ = 12					; size = 1
_bDoTurn$ = 16						; size = 1
?SetTurnActive@CvDllPlayer@@UAGX_N0@Z PROC		; CvDllPlayer::SetTurnActive, COMDAT

; 208  : {

	push	ebp
	mov	ebp, esp

; 209  : 	m_pPlayer->setTurnActive(bNewValue, bDoTurn);

	movzx	eax, BYTE PTR _bDoTurn$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bNewValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?setTurnActive@CvPlayer@@QAEX_N0@Z	; CvPlayer::setTurnActive

; 210  : }

	pop	ebp
	ret	12					; 0000000cH
?SetTurnActive@CvDllPlayer@@UAGX_N0@Z ENDP		; CvDllPlayer::SetTurnActive
_TEXT	ENDS
EXTRN	?isSimultaneousTurns@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::isSimultaneousTurns
; Function compile flags: /Odtp
;	COMDAT ?IsSimultaneousTurns@CvDllPlayer@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsSimultaneousTurns@CvDllPlayer@@UBG_NXZ PROC		; CvDllPlayer::IsSimultaneousTurns, COMDAT

; 213  : {

	push	ebp
	mov	ebp, esp

; 214  : 	return m_pPlayer->isSimultaneousTurns();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isSimultaneousTurns@CvPlayer@@QBE_NXZ	; CvPlayer::isSimultaneousTurns

; 215  : }

	pop	ebp
	ret	4
?IsSimultaneousTurns@CvDllPlayer@@UBG_NXZ ENDP		; CvDllPlayer::IsSimultaneousTurns
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetID@CvDllPlayer@@UBG?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
$T220763 = -4						; size = 4
_this$ = 8						; size = 4
?GetID@CvDllPlayer@@UBG?AW4PlayerTypes@@XZ PROC		; CvDllPlayer::GetID, COMDAT

; 218  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 219  : 	return m_pPlayer->GetID();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T220763[ebp], edx
	mov	eax, DWORD PTR $T220763[ebp]

; 220  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetID@CvDllPlayer@@UBG?AW4PlayerTypes@@XZ ENDP		; CvDllPlayer::GetID
_TEXT	ENDS
EXTRN	?getHandicapType@CvPlayer@@QBE?AW4HandicapTypes@@XZ:PROC ; CvPlayer::getHandicapType
; Function compile flags: /Odtp
;	COMDAT ?GetHandicapType@CvDllPlayer@@UBG?AW4HandicapTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetHandicapType@CvDllPlayer@@UBG?AW4HandicapTypes@@XZ PROC ; CvDllPlayer::GetHandicapType, COMDAT

; 223  : {

	push	ebp
	mov	ebp, esp

; 224  : 	return m_pPlayer->getHandicapType();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getHandicapType@CvPlayer@@QBE?AW4HandicapTypes@@XZ ; CvPlayer::getHandicapType

; 225  : }

	pop	ebp
	ret	4
?GetHandicapType@CvDllPlayer@@UBG?AW4HandicapTypes@@XZ ENDP ; CvDllPlayer::GetHandicapType
_TEXT	ENDS
EXTRN	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ:PROC ; CvPlayer::getCivilizationType
; Function compile flags: /Odtp
;	COMDAT ?GetCivilizationType@CvDllPlayer@@UBG?AW4CivilizationTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetCivilizationType@CvDllPlayer@@UBG?AW4CivilizationTypes@@XZ PROC ; CvDllPlayer::GetCivilizationType, COMDAT

; 228  : {

	push	ebp
	mov	ebp, esp

; 229  : 	return m_pPlayer->getCivilizationType();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType

; 230  : }

	pop	ebp
	ret	4
?GetCivilizationType@CvDllPlayer@@UBG?AW4CivilizationTypes@@XZ ENDP ; CvDllPlayer::GetCivilizationType
_TEXT	ENDS
EXTRN	?getLeaderType@CvPlayer@@QBE?AW4LeaderHeadTypes@@XZ:PROC ; CvPlayer::getLeaderType
; Function compile flags: /Odtp
;	COMDAT ?GetLeaderType@CvDllPlayer@@UBG?AW4LeaderHeadTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetLeaderType@CvDllPlayer@@UBG?AW4LeaderHeadTypes@@XZ PROC ; CvDllPlayer::GetLeaderType, COMDAT

; 233  : {

	push	ebp
	mov	ebp, esp

; 234  : 	return m_pPlayer->getLeaderType();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getLeaderType@CvPlayer@@QBE?AW4LeaderHeadTypes@@XZ ; CvPlayer::getLeaderType

; 235  : }

	pop	ebp
	ret	4
?GetLeaderType@CvDllPlayer@@UBG?AW4LeaderHeadTypes@@XZ ENDP ; CvDllPlayer::GetLeaderType
_TEXT	ENDS
EXTRN	?getLeaderTypeKey@CvPlayer@@QBEPBDXZ:PROC	; CvPlayer::getLeaderTypeKey
; Function compile flags: /Odtp
;	COMDAT ?GetLeaderTypeKey@CvDllPlayer@@UBGPBDXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetLeaderTypeKey@CvDllPlayer@@UBGPBDXZ PROC		; CvDllPlayer::GetLeaderTypeKey, COMDAT

; 238  : {

	push	ebp
	mov	ebp, esp

; 239  : 	return m_pPlayer->getLeaderTypeKey();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getLeaderTypeKey@CvPlayer@@QBEPBDXZ	; CvPlayer::getLeaderTypeKey

; 240  : }

	pop	ebp
	ret	4
?GetLeaderTypeKey@CvDllPlayer@@UBGPBDXZ ENDP		; CvDllPlayer::GetLeaderTypeKey
_TEXT	ENDS
EXTRN	?GetCurrentEra@CvPlayer@@QBE?AW4EraTypes@@XZ:PROC ; CvPlayer::GetCurrentEra
; Function compile flags: /Odtp
;	COMDAT ?GetCurrentEra@CvDllPlayer@@UBG?AW4EraTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetCurrentEra@CvDllPlayer@@UBG?AW4EraTypes@@XZ PROC	; CvDllPlayer::GetCurrentEra, COMDAT

; 243  : {

	push	ebp
	mov	ebp, esp

; 244  : 	return m_pPlayer->GetCurrentEra();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetCurrentEra@CvPlayer@@QBE?AW4EraTypes@@XZ ; CvPlayer::GetCurrentEra

; 245  : }

	pop	ebp
	ret	4
?GetCurrentEra@CvDllPlayer@@UBG?AW4EraTypes@@XZ ENDP	; CvDllPlayer::GetCurrentEra
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetTeam@CvDllPlayer@@UBG?AW4TeamTypes@@XZ
_TEXT	SEGMENT
$T220784 = -4						; size = 4
_this$ = 8						; size = 4
?GetTeam@CvDllPlayer@@UBG?AW4TeamTypes@@XZ PROC		; CvDllPlayer::GetTeam, COMDAT

; 248  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 249  : 	return m_pPlayer->getTeam();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T220784[ebp], ecx
	mov	edx, DWORD PTR $T220784[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4

; 250  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetTeam@CvDllPlayer@@UBG?AW4TeamTypes@@XZ ENDP		; CvDllPlayer::GetTeam
_TEXT	ENDS
EXTRN	?getPlayerColor@CvPlayer@@QBE?AW4PlayerColorTypes@@XZ:PROC ; CvPlayer::getPlayerColor
; Function compile flags: /Odtp
;	COMDAT ?GetPlayerColor@CvDllPlayer@@UBG?AW4PlayerColorTypes@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetPlayerColor@CvDllPlayer@@UBG?AW4PlayerColorTypes@@XZ PROC ; CvDllPlayer::GetPlayerColor, COMDAT

; 253  : {

	push	ebp
	mov	ebp, esp

; 254  : 	return m_pPlayer->getPlayerColor();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getPlayerColor@CvPlayer@@QBE?AW4PlayerColorTypes@@XZ ; CvPlayer::getPlayerColor

; 255  : }

	pop	ebp
	ret	4
?GetPlayerColor@CvDllPlayer@@UBG?AW4PlayerColorTypes@@XZ ENDP ; CvDllPlayer::GetPlayerColor
_TEXT	ENDS
EXTRN	?isOption@CvPlayer@@QBE_NW4PlayerOptionTypes@@@Z:PROC ; CvPlayer::isOption
; Function compile flags: /Odtp
;	COMDAT ?IsOption@CvDllPlayer@@UBG_NW4PlayerOptionTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_eIndex$ = 12						; size = 4
?IsOption@CvDllPlayer@@UBG_NW4PlayerOptionTypes@@@Z PROC ; CvDllPlayer::IsOption, COMDAT

; 258  : {

	push	ebp
	mov	ebp, esp

; 259  : 	return m_pPlayer->isOption(eIndex);

	mov	eax, DWORD PTR _eIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?isOption@CvPlayer@@QBE_NW4PlayerOptionTypes@@@Z ; CvPlayer::isOption

; 260  : }

	pop	ebp
	ret	8
?IsOption@CvDllPlayer@@UBG_NW4PlayerOptionTypes@@@Z ENDP ; CvDllPlayer::IsOption
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IsOptionKey@CvDllPlayer@@UBG_NW4PlayerOptionTypes@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_eOptionID$ = 12					; size = 4
?IsOptionKey@CvDllPlayer@@UBG_NW4PlayerOptionTypes@@@Z PROC ; CvDllPlayer::IsOptionKey, COMDAT

; 263  : {

	push	ebp
	mov	ebp, esp

; 264  : 	return m_pPlayer->isOption(eOptionID);		// Firaxis DLLs have been updated to handle an ID, rather than an index

	mov	eax, DWORD PTR _eOptionID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?isOption@CvPlayer@@QBE_NW4PlayerOptionTypes@@@Z ; CvPlayer::isOption

; 265  : }

	pop	ebp
	ret	8
?IsOptionKey@CvDllPlayer@@UBG_NW4PlayerOptionTypes@@@Z ENDP ; CvDllPlayer::IsOptionKey
_TEXT	ENDS
EXTRN	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::firstCity
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?FirstCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FirstCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z$0
__ehfuncinfo$?FirstCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FirstCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?FirstCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z
_TEXT	SEGMENT
tv80 = -32						; size = 4
tv85 = -28						; size = 4
$T220794 = -24						; size = 4
$T220793 = -20						; size = 4
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_pIterIdx$ = 12						; size = 4
_bRev$ = 16						; size = 1
?FirstCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z PROC	; CvDllPlayer::FirstCity, COMDAT

; 268  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FirstCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 269  : 	CvCity* pkCity = m_pPlayer->firstCity(pIterIdx, bRev);

	movzx	eax, BYTE PTR _bRev$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pIterIdx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	DWORD PTR _pkCity$[ebp], eax

; 270  : 	return (NULL != pkCity)? new CvDllCity(pkCity) : NULL;

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	SHORT $LN5@FirstCity
	push	12					; 0000000cH
	call	??2CvDllCity@@SAPAXI@Z			; CvDllCity::operator new
	add	esp, 4
	mov	DWORD PTR $T220794[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T220794[ebp], 0
	je	SHORT $LN3@FirstCity
	mov	eax, DWORD PTR _pkCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T220794[ebp]
	call	??0CvDllCity@@QAE@PAVCvCity@@@Z		; CvDllCity::CvDllCity
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN4@FirstCity
$LN3@FirstCity:
	mov	DWORD PTR tv85[ebp], 0
$LN4@FirstCity:
	mov	ecx, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T220793[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T220793[ebp]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN6@FirstCity
$LN5@FirstCity:
	mov	DWORD PTR tv80[ebp], 0
$LN6@FirstCity:
	mov	eax, DWORD PTR tv80[ebp]

; 271  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FirstCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z$0:
	mov	eax, DWORD PTR $T220794[ebp]
	push	eax
	call	??3CvDllCity@@SAXPAX@Z			; CvDllCity::operator delete
	pop	ecx
	ret	0
__ehhandler$?FirstCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FirstCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FirstCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z ENDP	; CvDllPlayer::FirstCity
EXTRN	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::nextCity
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NextCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NextCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z$0
__ehfuncinfo$?NextCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?NextCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?NextCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z
_TEXT	SEGMENT
tv80 = -32						; size = 4
tv85 = -28						; size = 4
$T220809 = -24						; size = 4
$T220808 = -20						; size = 4
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_pIterIdx$ = 12						; size = 4
_bRev$ = 16						; size = 1
?NextCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z PROC	; CvDllPlayer::NextCity, COMDAT

; 274  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?NextCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 275  : 	CvCity* pkCity = m_pPlayer->nextCity(pIterIdx, bRev);

	movzx	eax, BYTE PTR _bRev$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pIterIdx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	DWORD PTR _pkCity$[ebp], eax

; 276  : 	return (NULL != pkCity)? new CvDllCity(pkCity) : NULL;

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	SHORT $LN5@NextCity
	push	12					; 0000000cH
	call	??2CvDllCity@@SAPAXI@Z			; CvDllCity::operator new
	add	esp, 4
	mov	DWORD PTR $T220809[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T220809[ebp], 0
	je	SHORT $LN3@NextCity
	mov	eax, DWORD PTR _pkCity$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T220809[ebp]
	call	??0CvDllCity@@QAE@PAVCvCity@@@Z		; CvDllCity::CvDllCity
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN4@NextCity
$LN3@NextCity:
	mov	DWORD PTR tv85[ebp], 0
$LN4@NextCity:
	mov	ecx, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T220808[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T220808[ebp]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN6@NextCity
$LN5@NextCity:
	mov	DWORD PTR tv80[ebp], 0
$LN6@NextCity:
	mov	eax, DWORD PTR tv80[ebp]

; 277  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NextCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z$0:
	mov	eax, DWORD PTR $T220809[ebp]
	push	eax
	call	??3CvDllCity@@SAXPAX@Z			; CvDllCity::operator delete
	pop	ecx
	ret	0
__ehhandler$?NextCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?NextCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?NextCity@CvDllPlayer@@UAGPAVICvCity1@@PAH_N@Z ENDP	; CvDllPlayer::NextCity
EXTRN	?getNumCities@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getNumCities
; Function compile flags: /Odtp
;	COMDAT ?GetNumCities@CvDllPlayer@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumCities@CvDllPlayer@@UBGHXZ PROC			; CvDllPlayer::GetNumCities, COMDAT

; 280  : {

	push	ebp
	mov	ebp, esp

; 281  : 	return m_pPlayer->getNumCities();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getNumCities@CvPlayer@@QBEHXZ		; CvPlayer::getNumCities

; 282  : }

	pop	ebp
	ret	4
?GetNumCities@CvDllPlayer@@UBGHXZ ENDP			; CvDllPlayer::GetNumCities
_TEXT	ENDS
EXTRN	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z:PROC	; CvPlayer::getCity
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCity@CvDllPlayer@@UAGPAVICvCity1@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCity@CvDllPlayer@@UAGPAVICvCity1@@H@Z$0
__ehfuncinfo$?GetCity@CvDllPlayer@@UAGPAVICvCity1@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCity@CvDllPlayer@@UAGPAVICvCity1@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetCity@CvDllPlayer@@UAGPAVICvCity1@@H@Z
_TEXT	SEGMENT
tv79 = -32						; size = 4
tv84 = -28						; size = 4
$T220826 = -24						; size = 4
$T220825 = -20						; size = 4
_pkCity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_iID$ = 12						; size = 4
?GetCity@CvDllPlayer@@UAGPAVICvCity1@@H@Z PROC		; CvDllPlayer::GetCity, COMDAT

; 285  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetCity@CvDllPlayer@@UAGPAVICvCity1@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 286  : 	CvCity* pkCity = m_pPlayer->getCity(iID);

	mov	eax, DWORD PTR _iID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pkCity$[ebp], eax

; 287  : 	return (NULL != pkCity)? new CvDllCity(pkCity) : NULL;

	cmp	DWORD PTR _pkCity$[ebp], 0
	je	SHORT $LN5@GetCity
	push	12					; 0000000cH
	call	??2CvDllCity@@SAPAXI@Z			; CvDllCity::operator new
	add	esp, 4
	mov	DWORD PTR $T220826[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T220826[ebp], 0
	je	SHORT $LN3@GetCity
	mov	edx, DWORD PTR _pkCity$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T220826[ebp]
	call	??0CvDllCity@@QAE@PAVCvCity@@@Z		; CvDllCity::CvDllCity
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN4@GetCity
$LN3@GetCity:
	mov	DWORD PTR tv84[ebp], 0
$LN4@GetCity:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR $T220825[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T220825[ebp]
	mov	DWORD PTR tv79[ebp], ecx
	jmp	SHORT $LN6@GetCity
$LN5@GetCity:
	mov	DWORD PTR tv79[ebp], 0
$LN6@GetCity:
	mov	eax, DWORD PTR tv79[ebp]

; 288  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCity@CvDllPlayer@@UAGPAVICvCity1@@H@Z$0:
	mov	eax, DWORD PTR $T220826[ebp]
	push	eax
	call	??3CvDllCity@@SAXPAX@Z			; CvDllCity::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetCity@CvDllPlayer@@UAGPAVICvCity1@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetCity@CvDllPlayer@@UAGPAVICvCity1@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCity@CvDllPlayer@@UAGPAVICvCity1@@H@Z ENDP		; CvDllPlayer::GetCity
EXTRN	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z:PROC	; CvPlayer::getUnit
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetUnit@CvDllPlayer@@UAGPAVICvUnit1@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetUnit@CvDllPlayer@@UAGPAVICvUnit1@@H@Z$0
__ehfuncinfo$?GetUnit@CvDllPlayer@@UAGPAVICvUnit1@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetUnit@CvDllPlayer@@UAGPAVICvUnit1@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetUnit@CvDllPlayer@@UAGPAVICvUnit1@@H@Z
_TEXT	SEGMENT
tv84 = -28						; size = 4
$T220841 = -24						; size = 4
$T220840 = -20						; size = 4
_pkUnit$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_iID$ = 12						; size = 4
?GetUnit@CvDllPlayer@@UAGPAVICvUnit1@@H@Z PROC		; CvDllPlayer::GetUnit, COMDAT

; 291  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetUnit@CvDllPlayer@@UAGPAVICvUnit1@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 292  : 	CvUnit* pkUnit = m_pPlayer->getUnit(iID);

	mov	eax, DWORD PTR _iID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?getUnit@CvPlayer@@QAEPAVCvUnit@@H@Z	; CvPlayer::getUnit
	mov	DWORD PTR _pkUnit$[ebp], eax

; 293  : 	if(pkUnit)

	cmp	DWORD PTR _pkUnit$[ebp], 0
	je	SHORT $LN1@GetUnit

; 294  : 	{
; 295  : 		return new CvDllUnit(pkUnit);

	push	12					; 0000000cH
	call	??2CvDllUnit@@SAPAXI@Z			; CvDllUnit::operator new
	add	esp, 4
	mov	DWORD PTR $T220841[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T220841[ebp], 0
	je	SHORT $LN4@GetUnit
	mov	edx, DWORD PTR _pkUnit$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T220841[ebp]
	call	??0CvDllUnit@@QAE@PAVCvUnit@@@Z		; CvDllUnit::CvDllUnit
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN5@GetUnit
$LN4@GetUnit:
	mov	DWORD PTR tv84[ebp], 0
$LN5@GetUnit:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR $T220840[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T220840[ebp]
	jmp	SHORT $LN2@GetUnit
$LN1@GetUnit:

; 296  : 	}
; 297  : 
; 298  : 	return NULL;

	xor	eax, eax
$LN2@GetUnit:

; 299  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetUnit@CvDllPlayer@@UAGPAVICvUnit1@@H@Z$0:
	mov	eax, DWORD PTR $T220841[ebp]
	push	eax
	call	??3CvDllUnit@@SAXPAX@Z			; CvDllUnit::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetUnit@CvDllPlayer@@UAGPAVICvUnit1@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetUnit@CvDllPlayer@@UAGPAVICvUnit1@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetUnit@CvDllPlayer@@UAGPAVICvUnit1@@H@Z ENDP		; CvDllPlayer::GetUnit
EXTRN	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z:PROC	; CvPlayer::firstUnit
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?FirstUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FirstUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z$0
__ehfuncinfo$?FirstUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FirstUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?FirstUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z
_TEXT	SEGMENT
tv80 = -32						; size = 4
tv85 = -28						; size = 4
$T220854 = -24						; size = 4
$T220853 = -20						; size = 4
_pkUnit$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_pIterIdx$ = 12						; size = 4
_bRev$ = 16						; size = 1
?FirstUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z PROC	; CvDllPlayer::FirstUnit, COMDAT

; 302  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FirstUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 303  : 	CvUnit* pkUnit = m_pPlayer->firstUnit(pIterIdx, bRev);

	movzx	eax, BYTE PTR _bRev$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pIterIdx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	mov	DWORD PTR _pkUnit$[ebp], eax

; 304  : 	return (NULL != pkUnit)? new CvDllUnit(pkUnit) : NULL;

	cmp	DWORD PTR _pkUnit$[ebp], 0
	je	SHORT $LN5@FirstUnit
	push	12					; 0000000cH
	call	??2CvDllUnit@@SAPAXI@Z			; CvDllUnit::operator new
	add	esp, 4
	mov	DWORD PTR $T220854[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T220854[ebp], 0
	je	SHORT $LN3@FirstUnit
	mov	eax, DWORD PTR _pkUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T220854[ebp]
	call	??0CvDllUnit@@QAE@PAVCvUnit@@@Z		; CvDllUnit::CvDllUnit
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN4@FirstUnit
$LN3@FirstUnit:
	mov	DWORD PTR tv85[ebp], 0
$LN4@FirstUnit:
	mov	ecx, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T220853[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T220853[ebp]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN6@FirstUnit
$LN5@FirstUnit:
	mov	DWORD PTR tv80[ebp], 0
$LN6@FirstUnit:
	mov	eax, DWORD PTR tv80[ebp]

; 305  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FirstUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z$0:
	mov	eax, DWORD PTR $T220854[ebp]
	push	eax
	call	??3CvDllUnit@@SAXPAX@Z			; CvDllUnit::operator delete
	pop	ecx
	ret	0
__ehhandler$?FirstUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FirstUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FirstUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z ENDP	; CvDllPlayer::FirstUnit
EXTRN	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z:PROC	; CvPlayer::nextUnit
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NextUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NextUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z$0
__ehfuncinfo$?NextUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?NextUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?NextUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z
_TEXT	SEGMENT
tv80 = -32						; size = 4
tv85 = -28						; size = 4
$T220869 = -24						; size = 4
$T220868 = -20						; size = 4
_pkUnit$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_pIterIdx$ = 12						; size = 4
_bRev$ = 16						; size = 1
?NextUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z PROC	; CvDllPlayer::NextUnit, COMDAT

; 308  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?NextUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 309  : 	CvUnit* pkUnit = m_pPlayer->nextUnit(pIterIdx, bRev);

	movzx	eax, BYTE PTR _bRev$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pIterIdx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	mov	DWORD PTR _pkUnit$[ebp], eax

; 310  : 	return (NULL != pkUnit)? new CvDllUnit(pkUnit) : NULL;

	cmp	DWORD PTR _pkUnit$[ebp], 0
	je	SHORT $LN5@NextUnit
	push	12					; 0000000cH
	call	??2CvDllUnit@@SAPAXI@Z			; CvDllUnit::operator new
	add	esp, 4
	mov	DWORD PTR $T220869[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T220869[ebp], 0
	je	SHORT $LN3@NextUnit
	mov	eax, DWORD PTR _pkUnit$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T220869[ebp]
	call	??0CvDllUnit@@QAE@PAVCvUnit@@@Z		; CvDllUnit::CvDllUnit
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN4@NextUnit
$LN3@NextUnit:
	mov	DWORD PTR tv85[ebp], 0
$LN4@NextUnit:
	mov	ecx, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T220868[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T220868[ebp]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN6@NextUnit
$LN5@NextUnit:
	mov	DWORD PTR tv80[ebp], 0
$LN6@NextUnit:
	mov	eax, DWORD PTR tv80[ebp]

; 311  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NextUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z$0:
	mov	eax, DWORD PTR $T220869[ebp]
	push	eax
	call	??3CvDllUnit@@SAXPAX@Z			; CvDllUnit::operator delete
	pop	ecx
	ret	0
__ehhandler$?NextUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?NextUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?NextUnit@CvDllPlayer@@UAGPAVICvUnit1@@PAH_N@Z ENDP	; CvDllPlayer::NextUnit
EXTRN	?GetPlotDanger@CvPlayer@@QBEHAAVCvPlot@@@Z:PROC	; CvPlayer::GetPlotDanger
EXTRN	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ:PROC	; CvDllPlot::GetInstance
; Function compile flags: /Odtp
;	COMDAT ?GetPlotDanger@CvDllPlayer@@UBGHPAVICvPlot1@@@Z
_TEXT	SEGMENT
_pDllPlot$ = -8						; size = 4
_kPlot$ = -4						; size = 4
_this$ = 8						; size = 4
_pPlot$ = 12						; size = 4
?GetPlotDanger@CvDllPlayer@@UBGHPAVICvPlot1@@@Z PROC	; CvDllPlayer::GetPlotDanger, COMDAT

; 314  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 315  : 	CvDllPlot* pDllPlot = static_cast<CvDllPlot*>(pPlot);

	mov	eax, DWORD PTR _pPlot$[ebp]
	mov	DWORD PTR _pDllPlot$[ebp], eax

; 316  : 	CvPlot& kPlot = (*pDllPlot->GetInstance());

	mov	ecx, DWORD PTR _pDllPlot$[ebp]
	call	?GetInstance@CvDllPlot@@QAEPAVCvPlot@@XZ ; CvDllPlot::GetInstance
	mov	DWORD PTR _kPlot$[ebp], eax

; 317  : 	return m_pPlayer->GetPlotDanger(kPlot);

	mov	ecx, DWORD PTR _kPlot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?GetPlotDanger@CvPlayer@@QBEHAAVCvPlot@@@Z ; CvPlayer::GetPlotDanger

; 318  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetPlotDanger@CvDllPlayer@@UBGHPAVICvPlot1@@@Z ENDP	; CvDllPlayer::GetPlotDanger
_TEXT	ENDS
EXTRN	?GetCityDistanceHighwaterMark@CvPlayer@@QBEHXZ:PROC ; CvPlayer::GetCityDistanceHighwaterMark
; Function compile flags: /Odtp
;	COMDAT ?GetCityDistanceHighwaterMark@CvDllPlayer@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetCityDistanceHighwaterMark@CvDllPlayer@@UBGHXZ PROC	; CvDllPlayer::GetCityDistanceHighwaterMark, COMDAT

; 321  : {

	push	ebp
	mov	ebp, esp

; 322  : 	return m_pPlayer->GetCityDistanceHighwaterMark();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetCityDistanceHighwaterMark@CvPlayer@@QBEHXZ ; CvPlayer::GetCityDistanceHighwaterMark

; 323  : }

	pop	ebp
	ret	4
?GetCityDistanceHighwaterMark@CvDllPlayer@@UBGHXZ ENDP	; CvDllPlayer::GetCityDistanceHighwaterMark
_TEXT	ENDS
EXTRN	?disconnected@CvPlayer@@QAEXXZ:PROC		; CvPlayer::disconnected
; Function compile flags: /Odtp
;	COMDAT ?Disconnected@CvDllPlayer@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Disconnected@CvDllPlayer@@UAGXXZ PROC			; CvDllPlayer::Disconnected, COMDAT

; 326  : {

	push	ebp
	mov	ebp, esp

; 327  : 	m_pPlayer->disconnected();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?disconnected@CvPlayer@@QAEXXZ		; CvPlayer::disconnected

; 328  : }

	pop	ebp
	ret	4
?Disconnected@CvDllPlayer@@UAGXXZ ENDP			; CvDllPlayer::Disconnected
_TEXT	ENDS
EXTRN	?reconnected@CvPlayer@@QAEXXZ:PROC		; CvPlayer::reconnected
; Function compile flags: /Odtp
;	COMDAT ?Reconnected@CvDllPlayer@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Reconnected@CvDllPlayer@@UAGXXZ PROC			; CvDllPlayer::Reconnected, COMDAT

; 331  : {

	push	ebp
	mov	ebp, esp

; 332  : 	m_pPlayer->reconnected();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?reconnected@CvPlayer@@QAEXXZ		; CvPlayer::reconnected

; 333  : }

	pop	ebp
	ret	4
?Reconnected@CvDllPlayer@@UAGXXZ ENDP			; CvDllPlayer::Reconnected
_TEXT	ENDS
EXTRN	?setBusyUnitUpdatesRemaining@CvPlayer@@QAEXH@Z:PROC ; CvPlayer::setBusyUnitUpdatesRemaining
; Function compile flags: /Odtp
;	COMDAT ?SetBusyUnitUpdatesRemaining@CvDllPlayer@@UAGXH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iUpdateCount$ = 12					; size = 4
?SetBusyUnitUpdatesRemaining@CvDllPlayer@@UAGXH@Z PROC	; CvDllPlayer::SetBusyUnitUpdatesRemaining, COMDAT

; 336  : {

	push	ebp
	mov	ebp, esp

; 337  : 	m_pPlayer->setBusyUnitUpdatesRemaining(iUpdateCount);

	mov	eax, DWORD PTR _iUpdateCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?setBusyUnitUpdatesRemaining@CvPlayer@@QAEXH@Z ; CvPlayer::setBusyUnitUpdatesRemaining

; 338  : }

	pop	ebp
	ret	8
?SetBusyUnitUpdatesRemaining@CvDllPlayer@@UAGXH@Z ENDP	; CvDllPlayer::SetBusyUnitUpdatesRemaining
_TEXT	ENDS
EXTRN	?hasUnitsThatNeedAIUpdate@CvPlayer@@QBE_NXZ:PROC ; CvPlayer::hasUnitsThatNeedAIUpdate
; Function compile flags: /Odtp
;	COMDAT ?HasUnitsThatNeedAIUpdate@CvDllPlayer@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?HasUnitsThatNeedAIUpdate@CvDllPlayer@@UBG_NXZ PROC	; CvDllPlayer::HasUnitsThatNeedAIUpdate, COMDAT

; 341  : {

	push	ebp
	mov	ebp, esp

; 342  : 	return m_pPlayer->hasUnitsThatNeedAIUpdate();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?hasUnitsThatNeedAIUpdate@CvPlayer@@QBE_NXZ ; CvPlayer::hasUnitsThatNeedAIUpdate

; 343  : }

	pop	ebp
	ret	4
?HasUnitsThatNeedAIUpdate@CvDllPlayer@@UBG_NXZ ENDP	; CvDllPlayer::HasUnitsThatNeedAIUpdate
_TEXT	ENDS
EXTRN	?GetNumPolicyBranchesFinished@CvPlayerPolicies@@QBEHXZ:PROC ; CvPlayerPolicies::GetNumPolicyBranchesFinished
EXTRN	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ:PROC ; CvPlayer::GetPlayerPolicies
; Function compile flags: /Odtp
;	COMDAT ?GetNumPolicyBranchesFinished@CvDllPlayer@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetNumPolicyBranchesFinished@CvDllPlayer@@UBGHXZ PROC	; CvDllPlayer::GetNumPolicyBranchesFinished, COMDAT

; 346  : {

	push	ebp
	mov	ebp, esp

; 347  : 	return m_pPlayer->GetPlayerPolicies()->GetNumPolicyBranchesFinished();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?GetNumPolicyBranchesFinished@CvPlayerPolicies@@QBEHXZ ; CvPlayerPolicies::GetNumPolicyBranchesFinished

; 348  : }

	pop	ebp
	ret	4
?GetNumPolicyBranchesFinished@CvDllPlayer@@UBGHXZ ENDP	; CvDllPlayer::GetNumPolicyBranchesFinished
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Read@CvDllPlayer@@UAGXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_kStream$ = 12						; size = 4
?Read@CvDllPlayer@@UAGXAAVFDataStream@@@Z PROC		; CvDllPlayer::Read, COMDAT

; 351  : {

	push	ebp
	mov	ebp, esp

; 352  : 	m_pPlayer->Read(kStream);

	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+4]
	call	eax

; 353  : }

	pop	ebp
	ret	8
?Read@CvDllPlayer@@UAGXAAVFDataStream@@@Z ENDP		; CvDllPlayer::Read
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Write@CvDllPlayer@@UBGXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_kStream$ = 12						; size = 4
?Write@CvDllPlayer@@UBGXAAVFDataStream@@@Z PROC		; CvDllPlayer::Write, COMDAT

; 356  : {

	push	ebp
	mov	ebp, esp

; 357  : 	m_pPlayer->Write(kStream);

	mov	eax, DWORD PTR _kStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 358  : }

	pop	ebp
	ret	8
?Write@CvDllPlayer@@UBGXAAVFDataStream@@@Z ENDP		; CvDllPlayer::Write
_TEXT	ENDS
EXTRN	?getSyncArchive@CvPlayer@@QAEAAVFAutoArchive@@XZ:PROC ; CvPlayer::getSyncArchive
; Function compile flags: /Odtp
;	COMDAT ?GetSyncArchive@CvDllPlayer@@UAGAAVFAutoArchive@@XZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetSyncArchive@CvDllPlayer@@UAGAAVFAutoArchive@@XZ PROC ; CvDllPlayer::GetSyncArchive, COMDAT

; 361  : {

	push	ebp
	mov	ebp, esp

; 362  : 	return m_pPlayer->getSyncArchive();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getSyncArchive@CvPlayer@@QAEAAVFAutoArchive@@XZ ; CvPlayer::getSyncArchive

; 363  : }

	pop	ebp
	ret	4
?GetSyncArchive@CvDllPlayer@@UAGAAVFAutoArchive@@XZ ENDP ; CvDllPlayer::GetSyncArchive
_TEXT	ENDS
EXTRN	?GetGold@CvTreasury@@QBEHXZ:PROC		; CvTreasury::GetGold
EXTRN	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ:PROC ; CvPlayer::GetTreasury
; Function compile flags: /Odtp
;	COMDAT ?GetGold@CvDllPlayer@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetGold@CvDllPlayer@@UBGHXZ PROC			; CvDllPlayer::GetGold, COMDAT

; 366  : {

	push	ebp
	mov	ebp, esp

; 367  : 	return m_pPlayer->GetTreasury()->GetGold();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?GetGold@CvTreasury@@QBEHXZ		; CvTreasury::GetGold

; 368  : }

	pop	ebp
	ret	4
?GetGold@CvDllPlayer@@UBGHXZ ENDP			; CvDllPlayer::GetGold
_TEXT	ENDS
EXTRN	?CalculateBaseNetGold@CvTreasury@@QAEHXZ:PROC	; CvTreasury::CalculateBaseNetGold
; Function compile flags: /Odtp
;	COMDAT ?CalculateBaseNetGold@CvDllPlayer@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?CalculateBaseNetGold@CvDllPlayer@@UAGHXZ PROC		; CvDllPlayer::CalculateBaseNetGold, COMDAT

; 371  : {

	push	ebp
	mov	ebp, esp

; 372  : 	return m_pPlayer->GetTreasury()->CalculateBaseNetGold();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?CalculateBaseNetGold@CvTreasury@@QAEHXZ ; CvTreasury::CalculateBaseNetGold

; 373  : }

	pop	ebp
	ret	4
?CalculateBaseNetGold@CvDllPlayer@@UAGHXZ ENDP		; CvDllPlayer::CalculateBaseNetGold
_TEXT	ENDS
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Odtp
;	COMDAT ?GetEmbarkedGraphicOverride@CvDllPlayer@@UAGPBDXZ
_TEXT	SEGMENT
$T220910 = -4						; size = 4
_this$ = 8						; size = 4
?GetEmbarkedGraphicOverride@CvDllPlayer@@UAGPBDXZ PROC	; CvDllPlayer::GetEmbarkedGraphicOverride, COMDAT

; 376  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 377  : 	return m_pPlayer->GetEmbarkedGraphicOverride();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 3132				; 00000c3cH
	mov	DWORD PTR $T220910[ebp], ecx
	mov	ecx, DWORD PTR $T220910[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 378  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetEmbarkedGraphicOverride@CvDllPlayer@@UAGPBDXZ ENDP	; CvDllPlayer::GetEmbarkedGraphicOverride
_TEXT	ENDS
EXTRN	?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ:PROC ; CvMinorCivAI::GetMinorCivType
EXTRN	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ:PROC ; CvPlayer::GetMinorCivAI
; Function compile flags: /Odtp
;	COMDAT ?GetMinorCivType@CvDllPlayer@@UBG?AW4MinorCivTypes@@XZ
_TEXT	SEGMENT
_pAI$ = -8						; size = 4
_eType$ = -4						; size = 4
_this$ = 8						; size = 4
?GetMinorCivType@CvDllPlayer@@UBG?AW4MinorCivTypes@@XZ PROC ; CvDllPlayer::GetMinorCivType, COMDAT

; 381  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 382  : 	MinorCivTypes eType = NO_MINORCIV;

	mov	DWORD PTR _eType$[ebp], -1

; 383  : 	CvMinorCivAI* pAI = m_pPlayer->GetMinorCivAI();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	DWORD PTR _pAI$[ebp], eax

; 384  : 	if(pAI != NULL)

	cmp	DWORD PTR _pAI$[ebp], 0
	je	SHORT $LN1@GetMinorCi

; 385  : 	{
; 386  : 		eType = pAI->GetMinorCivType();

	mov	ecx, DWORD PTR _pAI$[ebp]
	call	?GetMinorCivType@CvMinorCivAI@@QBE?AW4MinorCivTypes@@XZ ; CvMinorCivAI::GetMinorCivType
	mov	DWORD PTR _eType$[ebp], eax
$LN1@GetMinorCi:

; 387  : 	}
; 388  : 
; 389  : 	return eType;

	mov	eax, DWORD PTR _eType$[ebp]

; 390  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetMinorCivType@CvDllPlayer@@UBG?AW4MinorCivTypes@@XZ ENDP ; CvDllPlayer::GetMinorCivType
_TEXT	ENDS
EXTRN	??3CvDllDiplomacyAI@@SAXPAX@Z:PROC		; CvDllDiplomacyAI::operator delete
EXTRN	??0CvDllDiplomacyAI@@QAE@PAVCvDiplomacyAI@@@Z:PROC ; CvDllDiplomacyAI::CvDllDiplomacyAI
EXTRN	??2CvDllDiplomacyAI@@SAPAXI@Z:PROC		; CvDllDiplomacyAI::operator new
EXTRN	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ:PROC ; CvPlayer::GetDiplomacyAI
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetDiplomacyAI@CvDllPlayer@@UAGPAVICvDiplomacyAI1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetDiplomacyAI@CvDllPlayer@@UAGPAVICvDiplomacyAI1@@XZ$0
__ehfuncinfo$?GetDiplomacyAI@CvDllPlayer@@UAGPAVICvDiplomacyAI1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetDiplomacyAI@CvDllPlayer@@UAGPAVICvDiplomacyAI1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetDiplomacyAI@CvDllPlayer@@UAGPAVICvDiplomacyAI1@@XZ
_TEXT	SEGMENT
tv78 = -32						; size = 4
tv83 = -28						; size = 4
$T220919 = -24						; size = 4
$T220918 = -20						; size = 4
_pAI$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?GetDiplomacyAI@CvDllPlayer@@UAGPAVICvDiplomacyAI1@@XZ PROC ; CvDllPlayer::GetDiplomacyAI, COMDAT

; 393  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetDiplomacyAI@CvDllPlayer@@UAGPAVICvDiplomacyAI1@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 394  : 	CvDiplomacyAI* pAI = m_pPlayer->GetDiplomacyAI();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	DWORD PTR _pAI$[ebp], eax

; 395  : 	return (NULL != pAI)? new CvDllDiplomacyAI(pAI) : NULL;

	cmp	DWORD PTR _pAI$[ebp], 0
	je	SHORT $LN5@GetDiploma
	push	12					; 0000000cH
	call	??2CvDllDiplomacyAI@@SAPAXI@Z		; CvDllDiplomacyAI::operator new
	add	esp, 4
	mov	DWORD PTR $T220919[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T220919[ebp], 0
	je	SHORT $LN3@GetDiploma
	mov	ecx, DWORD PTR _pAI$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T220919[ebp]
	call	??0CvDllDiplomacyAI@@QAE@PAVCvDiplomacyAI@@@Z ; CvDllDiplomacyAI::CvDllDiplomacyAI
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN4@GetDiploma
$LN3@GetDiploma:
	mov	DWORD PTR tv83[ebp], 0
$LN4@GetDiploma:
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR $T220918[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T220918[ebp]
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN6@GetDiploma
$LN5@GetDiploma:
	mov	DWORD PTR tv78[ebp], 0
$LN6@GetDiploma:
	mov	eax, DWORD PTR tv78[ebp]

; 396  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetDiplomacyAI@CvDllPlayer@@UAGPAVICvDiplomacyAI1@@XZ$0:
	mov	eax, DWORD PTR $T220919[ebp]
	push	eax
	call	??3CvDllDiplomacyAI@@SAXPAX@Z		; CvDllDiplomacyAI::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetDiplomacyAI@CvDllPlayer@@UAGPAVICvDiplomacyAI1@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetDiplomacyAI@CvDllPlayer@@UAGPAVICvDiplomacyAI1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetDiplomacyAI@CvDllPlayer@@UAGPAVICvDiplomacyAI1@@XZ ENDP ; CvDllPlayer::GetDiplomacyAI
EXTRN	??3CvDllDealAI@@SAXPAX@Z:PROC			; CvDllDealAI::operator delete
EXTRN	??0CvDllDealAI@@QAE@PAVCvDealAI@@@Z:PROC	; CvDllDealAI::CvDllDealAI
EXTRN	??2CvDllDealAI@@SAPAXI@Z:PROC			; CvDllDealAI::operator new
EXTRN	?GetDealAI@CvPlayer@@QBEPAVCvDealAI@@XZ:PROC	; CvPlayer::GetDealAI
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetDealAI@CvDllPlayer@@UAGPAVICvDealAI1@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetDealAI@CvDllPlayer@@UAGPAVICvDealAI1@@XZ$0
__ehfuncinfo$?GetDealAI@CvDllPlayer@@UAGPAVICvDealAI1@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetDealAI@CvDllPlayer@@UAGPAVICvDealAI1@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?GetDealAI@CvDllPlayer@@UAGPAVICvDealAI1@@XZ
_TEXT	SEGMENT
tv78 = -32						; size = 4
tv83 = -28						; size = 4
$T220934 = -24						; size = 4
$T220933 = -20						; size = 4
_pAI$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?GetDealAI@CvDllPlayer@@UAGPAVICvDealAI1@@XZ PROC	; CvDllPlayer::GetDealAI, COMDAT

; 399  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetDealAI@CvDllPlayer@@UAGPAVICvDealAI1@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 400  : 	CvDealAI* pAI = m_pPlayer->GetDealAI();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetDealAI@CvPlayer@@QBEPAVCvDealAI@@XZ	; CvPlayer::GetDealAI
	mov	DWORD PTR _pAI$[ebp], eax

; 401  : 	return (NULL != pAI)? new CvDllDealAI(pAI) : NULL;

	cmp	DWORD PTR _pAI$[ebp], 0
	je	SHORT $LN5@GetDealAI
	push	12					; 0000000cH
	call	??2CvDllDealAI@@SAPAXI@Z		; CvDllDealAI::operator new
	add	esp, 4
	mov	DWORD PTR $T220934[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T220934[ebp], 0
	je	SHORT $LN3@GetDealAI
	mov	ecx, DWORD PTR _pAI$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T220934[ebp]
	call	??0CvDllDealAI@@QAE@PAVCvDealAI@@@Z	; CvDllDealAI::CvDllDealAI
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN4@GetDealAI
$LN3@GetDealAI:
	mov	DWORD PTR tv83[ebp], 0
$LN4@GetDealAI:
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR $T220933[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T220933[ebp]
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN6@GetDealAI
$LN5@GetDealAI:
	mov	DWORD PTR tv78[ebp], 0
$LN6@GetDealAI:
	mov	eax, DWORD PTR tv78[ebp]

; 402  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetDealAI@CvDllPlayer@@UAGPAVICvDealAI1@@XZ$0:
	mov	eax, DWORD PTR $T220934[ebp]
	push	eax
	call	??3CvDllDealAI@@SAXPAX@Z		; CvDllDealAI::operator delete
	pop	ecx
	ret	0
__ehhandler$?GetDealAI@CvDllPlayer@@UAGPAVICvDealAI1@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetDealAI@CvDllPlayer@@UAGPAVICvDealAI1@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetDealAI@CvDllPlayer@@UAGPAVICvDealAI1@@XZ ENDP	; CvDllPlayer::GetDealAI
EXTRN	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ:PROC ; CvPlayer::GetPlayerTraits
; Function compile flags: /Odtp
;	COMDAT ?MayNotAnnex@CvDllPlayer@@UAG_NXZ
_TEXT	SEGMENT
$T220952 = -5						; size = 1
$T220951 = -4						; size = 4
_this$ = 8						; size = 4
?MayNotAnnex@CvDllPlayer@@UAG_NXZ PROC			; CvDllPlayer::MayNotAnnex, COMDAT

; 405  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 406  : 	return m_pPlayer->GetPlayerTraits()->IsNoAnnexing();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	DWORD PTR $T220951[ebp], eax
	mov	ecx, DWORD PTR $T220951[ebp]
	mov	dl, BYTE PTR [ecx+351]
	mov	BYTE PTR $T220952[ebp], dl
	mov	al, BYTE PTR $T220952[ebp]

; 407  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?MayNotAnnex@CvDllPlayer@@UAG_NXZ ENDP			; CvDllPlayer::MayNotAnnex
_TEXT	ENDS
EXTRN	?Add@CvDiplomacyRequests@@QAE_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z:PROC ; CvDiplomacyRequests::Add
EXTRN	?GetDiplomacyRequests@CvPlayer@@QBEPAVCvDiplomacyRequests@@XZ:PROC ; CvPlayer::GetDiplomacyRequests
; Function compile flags: /Odtp
;	COMDAT ?AddDiplomacyRequest@CvDllPlayer@@UAG_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ePlayerID$ = 12					; size = 4
_eDiploType$ = 16					; size = 4
_pszMessage$ = 20					; size = 4
_eAnimationType$ = 24					; size = 4
_iExtraGameData$ = 28					; size = 4
?AddDiplomacyRequest@CvDllPlayer@@UAG_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z PROC ; CvDllPlayer::AddDiplomacyRequest, COMDAT

; 411  : {

	push	ebp
	mov	ebp, esp

; 412  : 	return m_pPlayer->GetDiplomacyRequests()->Add(ePlayerID, eDiploType, pszMessage, eAnimationType, iExtraGameData);

	mov	eax, DWORD PTR _iExtraGameData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eAnimationType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszMessage$[ebp]
	push	edx
	mov	eax, DWORD PTR _eDiploType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ePlayerID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?GetDiplomacyRequests@CvPlayer@@QBEPAVCvDiplomacyRequests@@XZ ; CvPlayer::GetDiplomacyRequests
	mov	ecx, eax
	call	?Add@CvDiplomacyRequests@@QAE_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z ; CvDiplomacyRequests::Add

; 413  : }

	pop	ebp
	ret	24					; 00000018H
?AddDiplomacyRequest@CvDllPlayer@@UAG_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z ENDP ; CvDllPlayer::AddDiplomacyRequest
_TEXT	ENDS
EXTRN	?ActiveRequestComplete@CvDiplomacyRequests@@QAEXXZ:PROC ; CvDiplomacyRequests::ActiveRequestComplete
; Function compile flags: /Odtp
;	COMDAT ?ActiveDiplomacyRequestComplete@CvDllPlayer@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?ActiveDiplomacyRequestComplete@CvDllPlayer@@UAGXXZ PROC ; CvDllPlayer::ActiveDiplomacyRequestComplete, COMDAT

; 416  : {

	push	ebp
	mov	ebp, esp

; 417  : 	m_pPlayer->GetDiplomacyRequests()->ActiveRequestComplete();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetDiplomacyRequests@CvPlayer@@QBEPAVCvDiplomacyRequests@@XZ ; CvPlayer::GetDiplomacyRequests
	mov	ecx, eax
	call	?ActiveRequestComplete@CvDiplomacyRequests@@QAEXXZ ; CvDiplomacyRequests::ActiveRequestComplete

; 418  : }

	pop	ebp
	ret	4
?ActiveDiplomacyRequestComplete@CvDllPlayer@@UAGXXZ ENDP ; CvDllPlayer::ActiveDiplomacyRequestComplete
_TEXT	ENDS
EXTRN	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z:PROC ; CvNotifications::Add
EXTRN	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ:PROC ; CvPlayer::GetNotifications
; Function compile flags: /Odtp
;	COMDAT ?AddNotification@CvDllPlayer@@UAGHW4NotificationTypes@@PBD1HHHH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_eNotificationType$ = 12				; size = 4
_strMessage$ = 16					; size = 4
_strSummary$ = 20					; size = 4
_iX$ = 24						; size = 4
_iY$ = 28						; size = 4
_iGameDataIndex$ = 32					; size = 4
_iExtraGameData$ = 36					; size = 4
?AddNotification@CvDllPlayer@@UAGHW4NotificationTypes@@PBD1HHHH@Z PROC ; CvDllPlayer::AddNotification, COMDAT

; 421  : {

	push	ebp
	mov	ebp, esp

; 422  : 	return m_pPlayer->GetNotifications()->Add(eNotificationType, strMessage, strSummary, iX, iY, iGameDataIndex, iExtraGameData);

	mov	eax, DWORD PTR _iExtraGameData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iGameDataIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iY$[ebp]
	push	edx
	mov	eax, DWORD PTR _iX$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strSummary$[ebp]
	push	ecx
	mov	edx, DWORD PTR _strMessage$[ebp]
	push	edx
	mov	eax, DWORD PTR _eNotificationType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 423  : }

	pop	ebp
	ret	32					; 00000020H
?AddNotification@CvDllPlayer@@UAGHW4NotificationTypes@@PBD1HHHH@Z ENDP ; CvDllPlayer::AddNotification
_TEXT	ENDS
EXTRN	?Activate@CvNotifications@@QAEXH@Z:PROC		; CvNotifications::Activate
; Function compile flags: /Odtp
;	COMDAT ?ActivateNotification@CvDllPlayer@@UAGXH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iLookupIndex$ = 12					; size = 4
?ActivateNotification@CvDllPlayer@@UAGXH@Z PROC		; CvDllPlayer::ActivateNotification, COMDAT

; 426  : {

	push	ebp
	mov	ebp, esp

; 427  : 	m_pPlayer->GetNotifications()->Activate(iLookupIndex);

	mov	eax, DWORD PTR _iLookupIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Activate@CvNotifications@@QAEXH@Z	; CvNotifications::Activate

; 428  : }

	pop	ebp
	ret	8
?ActivateNotification@CvDllPlayer@@UAGXH@Z ENDP		; CvDllPlayer::ActivateNotification
_TEXT	ENDS
EXTRN	?Dismiss@CvNotifications@@QAEXH_N@Z:PROC	; CvNotifications::Dismiss
; Function compile flags: /Odtp
;	COMDAT ?DismissNotification@CvDllPlayer@@UAGXH_N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iLookupIndex$ = 12					; size = 4
_bUserInvoked$ = 16					; size = 1
?DismissNotification@CvDllPlayer@@UAGXH_N@Z PROC	; CvDllPlayer::DismissNotification, COMDAT

; 431  : {

	push	ebp
	mov	ebp, esp

; 432  : 	m_pPlayer->GetNotifications()->Dismiss(iLookupIndex, bUserInvoked);

	movzx	eax, BYTE PTR _bUserInvoked$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iLookupIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Dismiss@CvNotifications@@QAEXH_N@Z	; CvNotifications::Dismiss

; 433  : }

	pop	ebp
	ret	12					; 0000000cH
?DismissNotification@CvDllPlayer@@UAGXH_N@Z ENDP	; CvDllPlayer::DismissNotification
_TEXT	ENDS
EXTRN	?MayUserDismiss@CvNotifications@@QAE_NH@Z:PROC	; CvNotifications::MayUserDismiss
; Function compile flags: /Odtp
;	COMDAT ?MayUserDismissNotification@CvDllPlayer@@UAG_NH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iLookupIndex$ = 12					; size = 4
?MayUserDismissNotification@CvDllPlayer@@UAG_NH@Z PROC	; CvDllPlayer::MayUserDismissNotification, COMDAT

; 436  : {

	push	ebp
	mov	ebp, esp

; 437  : 	return m_pPlayer->GetNotifications()->MayUserDismiss(iLookupIndex);

	mov	eax, DWORD PTR _iLookupIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?MayUserDismiss@CvNotifications@@QAE_NH@Z ; CvNotifications::MayUserDismiss

; 438  : }

	pop	ebp
	ret	8
?MayUserDismissNotification@CvDllPlayer@@UAG_NH@Z ENDP	; CvDllPlayer::MayUserDismissNotification
_TEXT	ENDS
EXTRN	?Rebroadcast@CvNotifications@@QAEXXZ:PROC	; CvNotifications::Rebroadcast
; Function compile flags: /Odtp
;	COMDAT ?RebroadcastNotifications@CvDllPlayer@@UAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?RebroadcastNotifications@CvDllPlayer@@UAGXXZ PROC	; CvDllPlayer::RebroadcastNotifications, COMDAT

; 441  : {

	push	ebp
	mov	ebp, esp

; 442  : 	m_pPlayer->GetNotifications()->Rebroadcast();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Rebroadcast@CvNotifications@@QAEXXZ	; CvNotifications::Rebroadcast

; 443  : }

	pop	ebp
	ret	4
?RebroadcastNotifications@CvDllPlayer@@UAGXXZ ENDP	; CvDllPlayer::RebroadcastNotifications
_TEXT	ENDS
EXTRN	?GetResearchTurnsLeft@CvPlayerTechs@@QBEHW4TechTypes@@_N@Z:PROC ; CvPlayerTechs::GetResearchTurnsLeft
EXTRN	?GetCurrentResearch@CvPlayerTechs@@QBE?AW4TechTypes@@XZ:PROC ; CvPlayerTechs::GetCurrentResearch
EXTRN	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ:PROC ; CvPlayer::GetPlayerTechs
; Function compile flags: /Odtp
;	COMDAT ?GetCurrentResearchTech@CvDllPlayer@@UBG_NPAW4TechTypes@@PAH@Z
_TEXT	SEGMENT
_pkTechs$ = -4						; size = 4
_this$ = 8						; size = 4
_pkTech$ = 12						; size = 4
_pkTurnsLeft$ = 16					; size = 4
?GetCurrentResearchTech@CvDllPlayer@@UBG_NPAW4TechTypes@@PAH@Z PROC ; CvDllPlayer::GetCurrentResearchTech, COMDAT

; 446  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 447  : 	CvPlayerTechs* pkTechs = m_pPlayer->GetPlayerTechs();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetPlayerTechs@CvPlayer@@QBEPAVCvPlayerTechs@@XZ ; CvPlayer::GetPlayerTechs
	mov	DWORD PTR _pkTechs$[ebp], eax

; 448  : 	if (pkTechs)

	cmp	DWORD PTR _pkTechs$[ebp], 0
	je	SHORT $LN3@GetCurrent

; 449  : 	{
; 450  : 		if (pkTech)

	cmp	DWORD PTR _pkTech$[ebp], 0
	je	SHORT $LN2@GetCurrent

; 451  : 			*pkTech = pkTechs->GetCurrentResearch();

	mov	ecx, DWORD PTR _pkTechs$[ebp]
	call	?GetCurrentResearch@CvPlayerTechs@@QBE?AW4TechTypes@@XZ ; CvPlayerTechs::GetCurrentResearch
	mov	ecx, DWORD PTR _pkTech$[ebp]
	mov	DWORD PTR [ecx], eax
$LN2@GetCurrent:

; 452  : 		if (pkTurnsLeft)

	cmp	DWORD PTR _pkTurnsLeft$[ebp], 0
	je	SHORT $LN1@GetCurrent

; 453  : 			*pkTurnsLeft = pkTechs->GetResearchTurnsLeft(pkTechs->GetCurrentResearch(), false);

	push	0
	mov	ecx, DWORD PTR _pkTechs$[ebp]
	call	?GetCurrentResearch@CvPlayerTechs@@QBE?AW4TechTypes@@XZ ; CvPlayerTechs::GetCurrentResearch
	push	eax
	mov	ecx, DWORD PTR _pkTechs$[ebp]
	call	?GetResearchTurnsLeft@CvPlayerTechs@@QBEHW4TechTypes@@_N@Z ; CvPlayerTechs::GetResearchTurnsLeft
	mov	edx, DWORD PTR _pkTurnsLeft$[ebp]
	mov	DWORD PTR [edx], eax
$LN1@GetCurrent:

; 454  : 		return true;

	mov	al, 1
	jmp	SHORT $LN4@GetCurrent
$LN3@GetCurrent:

; 455  : 	}
; 456  : 	return false;

	xor	al, al
$LN4@GetCurrent:

; 457  : }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetCurrentResearchTech@CvDllPlayer@@UBG_NPAW4TechTypes@@PAH@Z ENDP ; CvDllPlayer::GetCurrentResearchTech
_TEXT	ENDS
EXTRN	?hasTurnTimerExpired@CvPlayer@@QAE_NXZ:PROC	; CvPlayer::hasTurnTimerExpired
; Function compile flags: /Odtp
;	COMDAT ?HasTurnTimerExpired@CvDllPlayer@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?HasTurnTimerExpired@CvDllPlayer@@UAG_NXZ PROC		; CvDllPlayer::HasTurnTimerExpired, COMDAT

; 461  : {

	push	ebp
	mov	ebp, esp

; 462  : 	return m_pPlayer->hasTurnTimerExpired();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?hasTurnTimerExpired@CvPlayer@@QAE_NXZ	; CvPlayer::hasTurnTimerExpired

; 463  : }

	pop	ebp
	ret	4
?HasTurnTimerExpired@CvDllPlayer@@UAG_NXZ ENDP		; CvDllPlayer::HasTurnTimerExpired
_TEXT	ENDS
EXTRN	?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B:DWORD ; CvPreGame::sr_TeamTypes
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvpregame.h
;	COMDAT ?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z PROC ; CvPreGame::teamType, COMDAT

; 298  : {

	push	ebp
	mov	ebp, esp

; 299  : 	if(p >= 0 && p < MAX_PLAYERS)

	cmp	DWORD PTR _p$[ebp], 0
	jl	SHORT $LN1@teamType
	cmp	DWORD PTR _p$[ebp], 64			; 00000040H
	jge	SHORT $LN1@teamType

; 300  : 		return sr_TeamTypes[p];

	mov	eax, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	jmp	SHORT $LN2@teamType
$LN1@teamType:

; 301  : 	return NO_TEAM;

	or	eax, -1
$LN2@teamType:

; 302  : }

	pop	ebp
	ret	0
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ENDP ; CvPreGame::teamType
_TEXT	ENDS
END
