; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvPopupInfoSerialization.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABUCvPopupInfo@@@Z	; operator<<
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	?Write@FDataStream@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; FDataStream::Write
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4ButtonPopupTypes@@@Z:PROC ; operator<<
EXTRN	?Write@FDataStream@@IAEXAB_N@Z:PROC		; FDataStream::Write
EXTRN	?Write@FDataStream@@IAEXABH@Z:PROC		; FDataStream::Write
EXTRN	?Write@FDataStream@@IAEXABI@Z:PROC		; FDataStream::Write
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??6@YAAAVFDataStream@@AAV0@ABUCvPopupInfo@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??6@YAAAVFDataStream@@AAV0@ABUCvPopupInfo@@@Z$0
__ehfuncinfo$??6@YAAAVFDataStream@@AAV0@ABUCvPopupInfo@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??6@YAAAVFDataStream@@AAV0@ABUCvPopupInfo@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvpopupinfoserialization.cpp
xdata$x	ENDS
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABUCvPopupInfo@@@Z
_TEXT	SEGMENT
tv134 = -60						; size = 4
$T216830 = -56						; size = 4
$T216799 = -52						; size = 4
_uiVersion$ = -48					; size = 4
_strDummy$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_kStream$ = 8						; size = 4
_kPopupInfo$ = 12					; size = 4
??6@YAAAVFDataStream@@AAV0@ABUCvPopupInfo@@@Z PROC	; operator<<, COMDAT

; 17   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??6@YAAAVFDataStream@@AAV0@ABUCvPopupInfo@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 18   : 	// Current version number
; 19   : 	uint uiVersion = 1;

	mov	DWORD PTR _uiVersion$[ebp], 1

; 20   : 	kStream << uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 21   : 
; 22   : 	kStream << kPopupInfo.iData1;

	mov	ecx, DWORD PTR _kPopupInfo$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 23   : 	kStream << kPopupInfo.iData2;

	mov	edx, DWORD PTR _kPopupInfo$[ebp]
	add	edx, 4
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 24   : 	kStream << kPopupInfo.iData3;

	mov	eax, DWORD PTR _kPopupInfo$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 25   : 	kStream << kPopupInfo.iFlags;

	mov	ecx, DWORD PTR _kPopupInfo$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 26   : 	kStream << kPopupInfo.bOption1;

	mov	edx, DWORD PTR _kPopupInfo$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 27   : 	kStream << kPopupInfo.bOption2;

	mov	eax, DWORD PTR _kPopupInfo$[ebp]
	add	eax, 17					; 00000011H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 28   : 
; 29   : 	kStream << kPopupInfo.eButtonPopupType;

	mov	ecx, DWORD PTR _kPopupInfo$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??6@YAAAVFDataStream@@AAV0@ABW4ButtonPopupTypes@@@Z ; operator<<
	add	esp, 8

; 30   : 
; 31   : 	CvString strDummy = kPopupInfo.szText;

	mov	eax, DWORD PTR _kPopupInfo$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR $T216830[ebp], eax
	je	SHORT $LN20@operator
	mov	ecx, DWORD PTR $T216830[ebp]
	mov	DWORD PTR tv134[ebp], ecx
	jmp	SHORT $LN21@operator
$LN20@operator:
	mov	DWORD PTR tv134[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN21@operator:
	mov	edx, DWORD PTR tv134[ebp]
	push	edx
	lea	ecx, DWORD PTR _strDummy$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 32   : 	kStream << strDummy;

	lea	eax, DWORD PTR _strDummy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; FDataStream::Write

; 33   : 
; 34   : 	return kStream;

	mov	ecx, DWORD PTR _kStream$[ebp]
	mov	DWORD PTR $T216799[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strDummy$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T216799[ebp]

; 35   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??6@YAAAVFDataStream@@AAV0@ABUCvPopupInfo@@@Z$0:
	lea	ecx, DWORD PTR _strDummy$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$??6@YAAAVFDataStream@@AAV0@ABUCvPopupInfo@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??6@YAAAVFDataStream@@AAV0@ABUCvPopupInfo@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??6@YAAAVFDataStream@@AAV0@ABUCvPopupInfo@@@Z ENDP	; operator<<
PUBLIC	__$ArrayPad$
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAUCvPopupInfo@@@Z	; operator>>
EXTRN	__imp__strcpy_s:PROC
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
EXTRN	?Read@FDataStream@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; FDataStream::Read
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4ButtonPopupTypes@@@Z:PROC ; operator>>
EXTRN	?Read@FDataStream@@IAEXAA_N@Z:PROC		; FDataStream::Read
EXTRN	?Read@FDataStream@@IAEXAAH@Z:PROC		; FDataStream::Read
EXTRN	?Read@FDataStream@@IAEXAAI@Z:PROC		; FDataStream::Read
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$??5@YAAAVFDataStream@@AAV0@AAUCvPopupInfo@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??5@YAAAVFDataStream@@AAV0@AAUCvPopupInfo@@@Z$0
__ehfuncinfo$??5@YAAAVFDataStream@@AAV0@AAUCvPopupInfo@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??5@YAAAVFDataStream@@AAV0@AAUCvPopupInfo@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvpopupinfoserialization.cpp
xdata$x	ENDS
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAUCvPopupInfo@@@Z
_TEXT	SEGMENT
$T216885 = -56						; size = 4
$T216852 = -52						; size = 4
_uiVersion$ = -48					; size = 4
_strDummy$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_kStream$ = 8						; size = 4
_kPopupInfo$ = 12					; size = 4
??5@YAAAVFDataStream@@AAV0@AAUCvPopupInfo@@@Z PROC	; operator>>, COMDAT

; 38   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??5@YAAAVFDataStream@@AAV0@AAUCvPopupInfo@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 39   : 	// Version number to maintain backwards compatibility
; 40   : 	uint uiVersion;
; 41   : 	kStream >> uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 42   : 
; 43   : 	kStream >> kPopupInfo.iData1;

	mov	ecx, DWORD PTR _kPopupInfo$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 44   : 	kStream >> kPopupInfo.iData2;

	mov	edx, DWORD PTR _kPopupInfo$[ebp]
	add	edx, 4
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 45   : 	kStream >> kPopupInfo.iData3;

	mov	eax, DWORD PTR _kPopupInfo$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 46   : 	kStream >> kPopupInfo.iFlags;

	mov	ecx, DWORD PTR _kPopupInfo$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 47   : 	kStream >> kPopupInfo.bOption1;

	mov	edx, DWORD PTR _kPopupInfo$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 48   : 	kStream >> kPopupInfo.bOption2;

	mov	eax, DWORD PTR _kPopupInfo$[ebp]
	add	eax, 17					; 00000011H
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 49   : 
; 50   : 	kStream >> kPopupInfo.eButtonPopupType;

	mov	ecx, DWORD PTR _kPopupInfo$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??5@YAAAVFDataStream@@AAV0@AAW4ButtonPopupTypes@@@Z ; operator>>
	add	esp, 8

; 51   : 
; 52   : 	CvString strDummy;

	lea	ecx, DWORD PTR _strDummy$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 53   : 	kStream >> strDummy;

	lea	eax, DWORD PTR _strDummy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; FDataStream::Read

; 54   : 
; 55   : 	strcpy_s(kPopupInfo.szText, strDummy.c_str());

	lea	ecx, DWORD PTR _strDummy$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T216885[ebp], eax
	mov	ecx, DWORD PTR $T216885[ebp]
	push	ecx
	push	512					; 00000200H
	mov	edx, DWORD PTR _kPopupInfo$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	call	DWORD PTR __imp__strcpy_s
	add	esp, 12					; 0000000cH

; 56   : 
; 57   : 	return kStream;

	mov	eax, DWORD PTR _kStream$[ebp]
	mov	DWORD PTR $T216852[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _strDummy$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T216852[ebp]

; 58   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??5@YAAAVFDataStream@@AAV0@AAUCvPopupInfo@@@Z$0:
	lea	ecx, DWORD PTR _strDummy$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$??5@YAAAVFDataStream@@AAV0@AAUCvPopupInfo@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??5@YAAAVFDataStream@@AAV0@AAUCvPopupInfo@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??5@YAAAVFDataStream@@AAV0@AAUCvPopupInfo@@@Z ENDP	; operator>>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
END
