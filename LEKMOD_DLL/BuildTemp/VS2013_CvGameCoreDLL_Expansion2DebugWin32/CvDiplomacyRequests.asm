; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvDiplomacyRequests.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?NO_QUEST_DATA@CvMinorCivQuest@@2HB		; CvMinorCivQuest::NO_QUEST_DATA
PUBLIC	?NO_TURN@CvMinorCivQuest@@2HB			; CvMinorCivQuest::NO_TURN
;	COMDAT ?NO_TURN@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_TURN@CvMinorCivQuest@@2HB DD 0ffffffffH		; CvMinorCivQuest::NO_TURN
CONST	ENDS
;	COMDAT ?NO_QUEST_DATA@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_QUEST_DATA@CvMinorCivQuest@@2HB DD 0ffffffffH	; CvMinorCivQuest::NO_QUEST_DATA
CONST	ENDS
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAURequest@CvDiplomacyRequests@@@Z ; operator>>
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4PlayerTypes@@@Z:PROC ; operator>>
EXTRN	?Read@FDataStream@@IAEXAAH@Z:PROC		; FDataStream::Read
EXTRN	?Read@FDataStream@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; FDataStream::Read
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4LeaderheadAnimationTypes@@@Z:PROC ; operator>>
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4DiploUIStateTypes@@@Z:PROC ; operator>>
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdiplomacyrequests.cpp
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAURequest@CvDiplomacyRequests@@@Z
_TEXT	SEGMENT
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??5@YAAAVFDataStream@@AAV0@AAURequest@CvDiplomacyRequests@@@Z PROC ; operator>>, COMDAT

; 22   : {

	push	ebp
	mov	ebp, esp

; 23   : 	loadFrom >> writeTo.m_eDiploType;

	mov	eax, DWORD PTR _writeTo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	push	ecx
	call	??5@YAAAVFDataStream@@AAV0@AAW4DiploUIStateTypes@@@Z ; operator>>
	add	esp, 8

; 24   : 	loadFrom >> writeTo.m_eAnimationType;

	mov	edx, DWORD PTR _writeTo$[ebp]
	add	edx, 36					; 00000024H
	push	edx
	mov	eax, DWORD PTR _loadFrom$[ebp]
	push	eax
	call	??5@YAAAVFDataStream@@AAV0@AAW4LeaderheadAnimationTypes@@@Z ; operator>>
	add	esp, 8

; 25   : 	loadFrom >> writeTo.m_strMessage;

	mov	ecx, DWORD PTR _writeTo$[ebp]
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; FDataStream::Read

; 26   : 	loadFrom >> writeTo.m_iExtraGameData;

	mov	edx, DWORD PTR _writeTo$[ebp]
	add	edx, 48					; 00000030H
	push	edx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 27   : 	loadFrom >> writeTo.m_iTurn;

	mov	eax, DWORD PTR _writeTo$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 28   : 	loadFrom >> writeTo.m_iLookupIndex;

	mov	ecx, DWORD PTR _writeTo$[ebp]
	add	ecx, 44					; 0000002cH
	push	ecx
	mov	ecx, DWORD PTR _loadFrom$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 29   : 	loadFrom >> writeTo.m_eFromPlayer;

	mov	edx, DWORD PTR _writeTo$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _loadFrom$[ebp]
	push	eax
	call	??5@YAAAVFDataStream@@AAV0@AAW4PlayerTypes@@@Z ; operator>>
	add	esp, 8

; 30   : 
; 31   : 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[ebp]

; 32   : }

	pop	ebp
	ret	0
??5@YAAAVFDataStream@@AAV0@AAURequest@CvDiplomacyRequests@@@Z ENDP ; operator>>
_TEXT	ENDS
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABURequest@CvDiplomacyRequests@@@Z ; operator<<
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4PlayerTypes@@@Z:PROC ; operator<<
EXTRN	?Write@FDataStream@@IAEXABH@Z:PROC		; FDataStream::Write
EXTRN	?Write@FDataStream@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; FDataStream::Write
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4LeaderheadAnimationTypes@@@Z:PROC ; operator<<
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4DiploUIStateTypes@@@Z:PROC ; operator<<
; Function compile flags: /Odtp
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABURequest@CvDiplomacyRequests@@@Z
_TEXT	SEGMENT
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??6@YAAAVFDataStream@@AAV0@ABURequest@CvDiplomacyRequests@@@Z PROC ; operator<<, COMDAT

; 36   : {

	push	ebp
	mov	ebp, esp

; 37   : 	saveTo << readFrom.m_eDiploType;

	mov	eax, DWORD PTR _readFrom$[ebp]
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	push	ecx
	call	??6@YAAAVFDataStream@@AAV0@ABW4DiploUIStateTypes@@@Z ; operator<<
	add	esp, 8

; 38   : 	saveTo << readFrom.m_eAnimationType;

	mov	edx, DWORD PTR _readFrom$[ebp]
	add	edx, 36					; 00000024H
	push	edx
	mov	eax, DWORD PTR _saveTo$[ebp]
	push	eax
	call	??6@YAAAVFDataStream@@AAV0@ABW4LeaderheadAnimationTypes@@@Z ; operator<<
	add	esp, 8

; 39   : 	saveTo << readFrom.m_strMessage;

	mov	ecx, DWORD PTR _readFrom$[ebp]
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; FDataStream::Write

; 40   : 	saveTo << readFrom.m_iExtraGameData;

	mov	edx, DWORD PTR _readFrom$[ebp]
	add	edx, 48					; 00000030H
	push	edx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 41   : 	saveTo << readFrom.m_iTurn;

	mov	eax, DWORD PTR _readFrom$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 42   : 	saveTo << readFrom.m_iLookupIndex;

	mov	ecx, DWORD PTR _readFrom$[ebp]
	add	ecx, 44					; 0000002cH
	push	ecx
	mov	ecx, DWORD PTR _saveTo$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 43   : 	saveTo << readFrom.m_eFromPlayer;

	mov	edx, DWORD PTR _readFrom$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _saveTo$[ebp]
	push	eax
	call	??6@YAAAVFDataStream@@AAV0@ABW4PlayerTypes@@@Z ; operator<<
	add	esp, 8

; 44   : 
; 45   : 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[ebp]

; 46   : }

	pop	ebp
	ret	0
??6@YAAAVFDataStream@@AAV0@ABURequest@CvDiplomacyRequests@@@Z ENDP ; operator<<
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?Clear@Request@CvDiplomacyRequests@@QAEXXZ	; CvDiplomacyRequests::Request::Clear
EXTRN	__imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ:PROC
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdiplomacyrequests.cpp
CONST	ENDS
;	COMDAT ?Clear@Request@CvDiplomacyRequests@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T221678 = -4						; size = 4
?Clear@Request@CvDiplomacyRequests@@QAEXXZ PROC		; CvDiplomacyRequests::Request::Clear, COMDAT
; _this$ = ecx

; 49   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 50   : 	m_eDiploType = NO_DIPLO_UI_STATE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1

; 51   : 	m_eAnimationType = NO_LEADERHEAD_ANIM;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], -1

; 52   : 	m_eFromPlayer = NO_PLAYER;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], -1

; 53   : 	m_strMessage = "";

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR $T221678[ebp], eax
	mov	ecx, OFFSET ??_C@_00CNPNBAHC@?$AA@
	test	ecx, ecx
	je	SHORT $LN4@Clear
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR $T221678[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN5@Clear
$LN4@Clear:
	mov	ecx, DWORD PTR $T221678[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN5@Clear:

; 54   : 	m_iTurn = -1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+40], -1

; 55   : 	m_iLookupIndex = -1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], -1

; 56   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@Request@CvDiplomacyRequests@@QAEXXZ ENDP		; CvDiplomacyRequests::Request::Clear
_TEXT	ENDS
PUBLIC	??1?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::~list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >
PUBLIC	?Uninit@CvDiplomacyRequests@@QAEXXZ		; CvDiplomacyRequests::Uninit
PUBLIC	??0?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >
PUBLIC	??0CvDiplomacyRequests@@QAE@XZ			; CvDiplomacyRequests::CvDiplomacyRequests
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??0CvDiplomacyRequests@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvDiplomacyRequests@@QAE@XZ$0
__ehfuncinfo$??0CvDiplomacyRequests@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CvDiplomacyRequests@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdiplomacyrequests.cpp
xdata$x	ENDS
;	COMDAT ??0CvDiplomacyRequests@@QAE@XZ
_TEXT	SEGMENT
_this$ = -52						; size = 4
__$EHRec$ = -12						; size = 12
??0CvDiplomacyRequests@@QAE@XZ PROC			; CvDiplomacyRequests::CvDiplomacyRequests, COMDAT
; _this$ = ecx

; 60   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CvDiplomacyRequests@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 61   : 	Uninit();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Uninit@CvDiplomacyRequests@@QAEXXZ	; CvDiplomacyRequests::Uninit

; 62   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvDiplomacyRequests@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::~list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >
__ehhandler$??0CvDiplomacyRequests@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CvDiplomacyRequests@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvDiplomacyRequests@@QAE@XZ ENDP			; CvDiplomacyRequests::CvDiplomacyRequests
PUBLIC	??1?$_List_val@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ ; std::_List_val<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::~_List_val<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >
PUBLIC	?clear@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAEXXZ ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::clear
PUBLIC	??1CvDiplomacyRequests@@QAE@XZ			; CvDiplomacyRequests::~CvDiplomacyRequests
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1CvDiplomacyRequests@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvDiplomacyRequests@@QAE@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvDiplomacyRequests@@QAE@XZ$1
__ehfuncinfo$??1CvDiplomacyRequests@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CvDiplomacyRequests@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdiplomacyrequests.cpp
xdata$x	ENDS
;	COMDAT ??1CvDiplomacyRequests@@QAE@XZ
_TEXT	SEGMENT
_this$ = -52						; size = 4
$T221961 = -48						; size = 4
$T221891 = -44						; size = 4
$T221868 = -40						; size = 4
__$EHRec$ = -12						; size = 12
??1CvDiplomacyRequests@@QAE@XZ PROC			; CvDiplomacyRequests::~CvDiplomacyRequests, COMDAT
; _this$ = ecx

; 66   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CvDiplomacyRequests@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 67   : 	Uninit();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Uninit@CvDiplomacyRequests@@QAEXXZ	; CvDiplomacyRequests::Uninit

; 68   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR $T221961[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T221961[ebp]
	call	?clear@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAEXXZ ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::clear
	mov	ecx, DWORD PTR $T221961[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T221868[ebp], edx
	mov	eax, DWORD PTR $T221961[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T221891[ebp], ecx
	mov	edx, DWORD PTR $T221891[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, DWORD PTR $T221961[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvDiplomacyRequests@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::~list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >
__unwindfunclet$??1CvDiplomacyRequests@@QAE@XZ$1:
	mov	ecx, DWORD PTR $T221961[ebp]
	jmp	??1?$_List_val@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ
__ehhandler$??1CvDiplomacyRequests@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CvDiplomacyRequests@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvDiplomacyRequests@@QAE@XZ ENDP			; CvDiplomacyRequests::~CvDiplomacyRequests
PUBLIC	?Init@CvDiplomacyRequests@@QAEXW4PlayerTypes@@@Z ; CvDiplomacyRequests::Init
; Function compile flags: /Odtp
;	COMDAT ?Init@CvDiplomacyRequests@@QAEXW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
_ePlayer$ = 8						; size = 4
?Init@CvDiplomacyRequests@@QAEXW4PlayerTypes@@@Z PROC	; CvDiplomacyRequests::Init, COMDAT
; _this$ = ecx

; 72   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 73   : 	Uninit();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Uninit@CvDiplomacyRequests@@QAEXXZ	; CvDiplomacyRequests::Uninit

; 74   : 	m_ePlayer = ePlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ePlayer$[ebp]
	mov	DWORD PTR [eax], ecx

; 75   : 
; 76   : 	m_aRequests.clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?clear@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAEXXZ ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::clear

; 77   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Init@CvDiplomacyRequests@@QAEXW4PlayerTypes@@@Z ENDP	; CvDiplomacyRequests::Init
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Uninit@CvDiplomacyRequests@@QAEXXZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
?Uninit@CvDiplomacyRequests@@QAEXXZ PROC		; CvDiplomacyRequests::Uninit, COMDAT
; _this$ = ecx

; 81   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 82   : 	m_ePlayer = NO_PLAYER;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1

; 83   : 	m_eNextAIPlayer = NO_PLAYER;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], -1

; 84   : 	m_aRequests.clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?clear@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAEXXZ ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::clear

; 85   : 	m_bRequestActive = false;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+24], 0

; 86   : 	m_bRequestActiveFromPlayer = NO_PLAYER;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], -1

; 87   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Uninit@CvDiplomacyRequests@@QAEXXZ ENDP		; CvDiplomacyRequests::Uninit
_TEXT	ENDS
PUBLIC	??1Request@CvDiplomacyRequests@@QAE@XZ		; CvDiplomacyRequests::Request::~Request
PUBLIC	?_Insert@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAEXV?$_Const_iterator@$0A@@12@ABURequest@CvDiplomacyRequests@@@Z ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Insert
PUBLIC	?Read@CvDiplomacyRequests@@QAEXAAVFDataStream@@@Z ; CvDiplomacyRequests::Read
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	?Read@FDataStream@@IAEXAAI@Z:PROC		; FDataStream::Read
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$?Read@CvDiplomacyRequests@@QAEXAAVFDataStream@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Read@CvDiplomacyRequests@@QAEXAAVFDataStream@@@Z$0
__ehfuncinfo$?Read@CvDiplomacyRequests@@QAEXAAVFDataStream@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Read@CvDiplomacyRequests@@QAEXAAVFDataStream@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdiplomacyrequests.cpp
xdata$x	ENDS
;	COMDAT ?Read@CvDiplomacyRequests@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = -200						; size = 4
$T222232 = -196						; size = 4
$T222270 = -192						; size = 4
$T222216 = -188						; size = 4
$T222209 = -184						; size = 4
$T222208 = -180						; size = 4
$T222153 = -92						; size = 4
$T222200 = -88						; size = 4
$T222199 = -84						; size = 4
$T222136 = -80						; size = 4
$T222122 = -76						; size = 52
_ui$220819 = -24					; size = 4
_uiListSize$ = -20					; size = 4
_uiVersion$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_kStream$ = 8						; size = 4
?Read@CvDiplomacyRequests@@QAEXAAVFDataStream@@@Z PROC	; CvDiplomacyRequests::Read, COMDAT
; _this$ = ecx

; 91   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Read@CvDiplomacyRequests@@QAEXAAVFDataStream@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 188				; 000000bcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 92   : 	// Version number to maintain backwards compatibility
; 93   : 	uint uiVersion;
; 94   : 	kStream >> uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 95   : 
; 96   : 	kStream >> m_ePlayer;

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??5@YAAAVFDataStream@@AAV0@AAW4PlayerTypes@@@Z ; operator>>
	add	esp, 8

; 97   : 
; 98   : 	uint uiListSize;
; 99   : 	kStream >> uiListSize;

	lea	eax, DWORD PTR _uiListSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 100  : 
; 101  : 	if(uiListSize > 0)

	cmp	DWORD PTR _uiListSize$[ebp], 0
	jbe	$LN5@Read

; 102  : 	{
; 103  : 		for(uint ui = 0; ui < uiListSize; ui++)

	mov	DWORD PTR _ui$220819[ebp], 0
	jmp	SHORT $LN3@Read
$LN2@Read:
	mov	ecx, DWORD PTR _ui$220819[ebp]
	add	ecx, 1
	mov	DWORD PTR _ui$220819[ebp], ecx
$LN3@Read:
	mov	edx, DWORD PTR _ui$220819[ebp]
	cmp	edx, DWORD PTR _uiListSize$[ebp]
	jae	$LN5@Read

; 104  : 		{
; 105  : 			m_aRequests.push_back(Request());

	lea	eax, DWORD PTR $T222122[ebp+8]
	mov	DWORD PTR $T222136[ebp], eax
	mov	ecx, DWORD PTR $T222136[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T222122[ebp]
	mov	DWORD PTR $T222209[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	mov	DWORD PTR $T222208[ebp], edx
	mov	eax, DWORD PTR $T222208[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T222153[ebp], ecx
	mov	edx, DWORD PTR $T222153[ebp]
	mov	DWORD PTR $T222200[ebp], edx
	mov	eax, DWORD PTR $T222200[ebp]
	mov	DWORD PTR $T222199[ebp], eax
	mov	ecx, DWORD PTR $T222209[ebp]
	push	ecx
	mov	edx, DWORD PTR $T222199[ebp]
	push	edx
	mov	ecx, DWORD PTR $T222208[ebp]
	call	?_Insert@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAEXV?$_Const_iterator@$0A@@12@ABURequest@CvDiplomacyRequests@@@Z ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Insert
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	eax, DWORD PTR $T222122[ebp+8]
	mov	DWORD PTR $T222216[ebp], eax
	mov	ecx, DWORD PTR $T222216[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 106  : 			kStream >> m_aRequests.back();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR $T222232[ebp], edx
	mov	eax, DWORD PTR $T222232[ebp]
	mov	DWORD PTR $T222270[ebp], eax
	mov	ecx, DWORD PTR $T222270[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T222270[ebp], edx
	mov	eax, DWORD PTR $T222270[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??5@YAAAVFDataStream@@AAV0@AAURequest@CvDiplomacyRequests@@@Z ; operator>>
	add	esp, 8

; 107  : 		}

	jmp	$LN2@Read
$LN5@Read:

; 108  : 	}
; 109  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Read@CvDiplomacyRequests@@QAEXAAVFDataStream@@@Z$0:
	lea	ecx, DWORD PTR $T222122[ebp]
	jmp	??1Request@CvDiplomacyRequests@@QAE@XZ
__ehhandler$?Read@CvDiplomacyRequests@@QAEXAAVFDataStream@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-192]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Read@CvDiplomacyRequests@@QAEXAAVFDataStream@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Read@CvDiplomacyRequests@@QAEXAAVFDataStream@@@Z ENDP	; CvDiplomacyRequests::Read
; Function compile flags: /Odtp
;	COMDAT ??1Request@CvDiplomacyRequests@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T222303 = -4						; size = 4
??1Request@CvDiplomacyRequests@@QAE@XZ PROC		; CvDiplomacyRequests::Request::~Request, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR $T222303[ebp], eax
	mov	ecx, DWORD PTR $T222303[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1Request@CvDiplomacyRequests@@QAE@XZ ENDP		; CvDiplomacyRequests::Request::~Request
_TEXT	ENDS
PUBLIC	?Write@CvDiplomacyRequests@@QBEXAAVFDataStream@@@Z ; CvDiplomacyRequests::Write
EXTRN	?Write@FDataStream@@IAEXABI@Z:PROC		; FDataStream::Write
; Function compile flags: /Odtp
;	COMDAT ?Write@CvDiplomacyRequests@@QBEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T222345 = -32						; size = 4
$T222326 = -28						; size = 4
$T222322 = -24						; size = 4
$T222314 = -20						; size = 4
$T222307 = -16						; size = 4
$T222306 = -12						; size = 4
_i$220911 = -8						; size = 4
_uiVersion$ = -4					; size = 4
_kStream$ = 8						; size = 4
?Write@CvDiplomacyRequests@@QBEXAAVFDataStream@@@Z PROC	; CvDiplomacyRequests::Write, COMDAT
; _this$ = ecx

; 113  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 	// Current version number
; 115  : 	uint uiVersion = 1;

	mov	DWORD PTR _uiVersion$[ebp], 1

; 116  : 	kStream << uiVersion;

	lea	eax, DWORD PTR _uiVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 117  : 
; 118  : 	// need to serialize notification list
; 119  : 	kStream << m_ePlayer;

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _kStream$[ebp]
	push	edx
	call	??6@YAAAVFDataStream@@AAV0@ABW4PlayerTypes@@@Z ; operator<<
	add	esp, 8

; 120  : 
; 121  : 	kStream << m_aRequests.size();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR $T222314[ebp], ecx
	mov	edx, DWORD PTR $T222314[ebp]
	mov	DWORD PTR $T222306[ebp], edx
	lea	eax, DWORD PTR $T222306[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 122  : 
; 123  : 	for(RequestList::const_iterator i = m_aRequests.begin(); i != m_aRequests.end(); ++i)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR $T222322[ebp], edx
	mov	eax, DWORD PTR $T222322[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T222326[ebp], ecx
	mov	edx, DWORD PTR $T222326[ebp]
	mov	DWORD PTR _i$220911[ebp], edx
	jmp	SHORT $LN3@Write
$LN20@Write:
	mov	eax, DWORD PTR _i$220911[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _i$220911[ebp], ecx
$LN3@Write:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR $T222345[ebp], eax
	mov	ecx, DWORD PTR $T222345[ebp]
	mov	DWORD PTR $T222307[ebp], ecx
	mov	edx, DWORD PTR _i$220911[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR $T222307[ebp]
	sete	al
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN4@Write

; 124  : 	{
; 125  : 		kStream << (*i);

	mov	eax, DWORD PTR _i$220911[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	push	ecx
	call	??6@YAAAVFDataStream@@AAV0@ABURequest@CvDiplomacyRequests@@@Z ; operator<<
	add	esp, 8
	jmp	SHORT $LN20@Write
$LN4@Write:

; 126  : 	}
; 127  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Write@CvDiplomacyRequests@@QBEXAAVFDataStream@@@Z ENDP	; CvDiplomacyRequests::Write
_TEXT	ENDS
PUBLIC	?erase@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::erase
PUBLIC	?Send@CvDiplomacyRequests@@IAEXW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z ; CvDiplomacyRequests::Send
PUBLIC	?Update@CvDiplomacyRequests@@QAEXXZ		; CvDiplomacyRequests::Update
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
EXTRN	?isTurnActive@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isTurnActive
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
EXTRN	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ:PROC ; CvGame::getActivePlayer
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
; Function compile flags: /Odtp
;	COMDAT ?Update@CvDiplomacyRequests@@QAEXXZ
_TEXT	SEGMENT
_this$ = -96						; size = 4
$T222606 = -92						; size = 4
$T222470 = -64						; size = 4
$T222461 = -60						; size = 4
$T222596 = -56						; size = 4
$T222595 = -52						; size = 4
$T222594 = -48						; size = 4
$T222452 = -44						; size = 4
$T222448 = -37						; size = 1
$T222439 = -36						; size = 4
$T222395 = -32						; size = 4
$T222386 = -28						; size = 4
$T222420 = -24						; size = 4
$T222379 = -20						; size = 4
$T222375 = -16						; size = 4
$T222371 = -12						; size = 4
_kRequest$220931 = -8					; size = 4
_eActivePlayer$ = -4					; size = 4
?Update@CvDiplomacyRequests@@QAEXXZ PROC		; CvDiplomacyRequests::Update, COMDAT
; _this$ = ecx

; 132  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	DWORD PTR _this$[ebp], ecx

; 133  : 	PlayerTypes eActivePlayer = GC.getGame().getActivePlayer();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T222371[ebp], eax
	mov	ecx, DWORD PTR $T222371[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	mov	DWORD PTR _eActivePlayer$[ebp], eax

; 134  : 	// If we are active, send out the requests
; 135  : 	if(m_aRequests.size() && m_ePlayer == eActivePlayer && GET_PLAYER(eActivePlayer).isTurnActive())

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR $T222375[ebp], edx
	cmp	DWORD PTR $T222375[ebp], 0
	je	$LN3@Update
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _eActivePlayer$[ebp]
	jne	$LN3@Update
	mov	edx, DWORD PTR _eActivePlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T222379[ebp], edx
	mov	ecx, DWORD PTR $T222379[ebp]
	call	?isTurnActive@CvPlayer@@QBE_NXZ		; CvPlayer::isTurnActive
	movzx	eax, al
	test	eax, eax
	je	$LN3@Update

; 136  : 	{
; 137  : 		CvDiplomacyRequests::Request& kRequest = m_aRequests.front();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR $T222386[ebp], edx
	mov	eax, DWORD PTR $T222386[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T222395[ebp], ecx
	mov	edx, DWORD PTR $T222395[ebp]
	mov	DWORD PTR $T222420[ebp], edx
	mov	eax, DWORD PTR $T222420[ebp]
	add	eax, 8
	mov	DWORD PTR _kRequest$220931[ebp], eax

; 138  : 
; 139  : 		// Make sure the player this is from is still alive.
; 140  : 		if(kRequest.m_eFromPlayer != NO_PLAYER && GET_PLAYER(kRequest.m_eFromPlayer).isAlive())

	mov	ecx, DWORD PTR _kRequest$220931[ebp]
	cmp	DWORD PTR [ecx+4], -1
	je	SHORT $LN1@Update
	mov	edx, DWORD PTR _kRequest$220931[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T222439[ebp], eax
	mov	ecx, DWORD PTR $T222439[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T222448[ebp], dl
	movzx	eax, BYTE PTR $T222448[ebp]
	test	eax, eax
	je	SHORT $LN1@Update

; 141  : 		{
; 142  : 			Send(kRequest.m_eFromPlayer, kRequest.m_eDiploType, kRequest.m_strMessage, kRequest.m_eAnimationType, kRequest.m_iExtraGameData);

	mov	ecx, DWORD PTR _kRequest$220931[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	DWORD PTR $T222452[ebp], eax
	mov	ecx, DWORD PTR _kRequest$220931[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	mov	eax, DWORD PTR _kRequest$220931[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR $T222452[ebp]
	push	edx
	mov	eax, DWORD PTR _kRequest$220931[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _kRequest$220931[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Send@CvDiplomacyRequests@@IAEXW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z ; CvDiplomacyRequests::Send
$LN1@Update:

; 143  : 		}
; 144  : 		m_aRequests.pop_front();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	DWORD PTR $T222606[ebp], ecx
	mov	edx, DWORD PTR $T222606[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T222461[ebp], eax
	mov	ecx, DWORD PTR $T222461[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T222470[ebp], edx
	mov	eax, DWORD PTR $T222470[ebp]
	mov	DWORD PTR $T222595[ebp], eax
	mov	ecx, DWORD PTR $T222595[ebp]
	mov	DWORD PTR $T222594[ebp], ecx
	mov	edx, DWORD PTR $T222594[ebp]
	push	edx
	lea	eax, DWORD PTR $T222596[ebp]
	push	eax
	mov	ecx, DWORD PTR $T222606[ebp]
	call	?erase@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::erase
$LN3@Update:

; 145  : 	}
; 146  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Update@CvDiplomacyRequests@@QAEXXZ ENDP		; CvDiplomacyRequests::Update
_TEXT	ENDS
PUBLIC	?BeginTurn@CvDiplomacyRequests@@QAEXXZ		; CvDiplomacyRequests::BeginTurn
; Function compile flags: /Odtp
;	COMDAT ?BeginTurn@CvDiplomacyRequests@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BeginTurn@CvDiplomacyRequests@@QAEXXZ PROC		; CvDiplomacyRequests::BeginTurn, COMDAT
; _this$ = ecx

; 151  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 152  : 	m_eNextAIPlayer = (PlayerTypes)0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 153  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?BeginTurn@CvDiplomacyRequests@@QAEXXZ ENDP		; CvDiplomacyRequests::BeginTurn
_TEXT	ENDS
PUBLIC	?EndTurn@CvDiplomacyRequests@@QAEXXZ		; CvDiplomacyRequests::EndTurn
; Function compile flags: /Odtp
;	COMDAT ?EndTurn@CvDiplomacyRequests@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EndTurn@CvDiplomacyRequests@@QAEXXZ PROC		; CvDiplomacyRequests::EndTurn, COMDAT
; _this$ = ecx

; 158  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 159  : 	m_eNextAIPlayer = NO_PLAYER;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1

; 160  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?EndTurn@CvDiplomacyRequests@@QAEXXZ ENDP		; CvDiplomacyRequests::EndTurn
_TEXT	ENDS
PUBLIC	?Add@CvDiplomacyRequests@@QAE_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z ; CvDiplomacyRequests::Add
EXTRN	?getGameTurn@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurn
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__unwindtable$?Add@CvDiplomacyRequests@@QAE_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Add@CvDiplomacyRequests@@QAE_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z$0
__ehfuncinfo$?Add@CvDiplomacyRequests@@QAE_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Add@CvDiplomacyRequests@@QAE_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdiplomacyrequests.cpp
xdata$x	ENDS
;	COMDAT ?Add@CvDiplomacyRequests@@QAE_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z
_TEXT	SEGMENT
_this$ = -200						; size = 4
$T222783 = -196						; size = 4
$T222779 = -192						; size = 4
$T222716 = -188						; size = 4
$T222754 = -184						; size = 4
$T222700 = -180						; size = 4
$T222693 = -176						; size = 4
$T222692 = -172						; size = 4
$T222638 = -84						; size = 4
$T222684 = -80						; size = 4
$T222683 = -76						; size = 4
$T222621 = -72						; size = 4
$T222613 = -68						; size = 52
_newRequest$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_eFromPlayer$ = 8					; size = 4
_eDiploType$ = 12					; size = 4
_pszMessage$ = 16					; size = 4
_eAnimationType$ = 20					; size = 4
_iExtraGameData$ = 24					; size = 4
?Add@CvDiplomacyRequests@@QAE_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z PROC ; CvDiplomacyRequests::Add, COMDAT
; _this$ = ecx

; 165  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Add@CvDiplomacyRequests@@QAE_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 188				; 000000bcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 166  : 	// Queue it up
; 167  : 	m_aRequests.push_back(Request());

	lea	eax, DWORD PTR $T222613[ebp+8]
	mov	DWORD PTR $T222621[ebp], eax
	mov	ecx, DWORD PTR $T222621[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR $T222613[ebp]
	mov	DWORD PTR $T222693[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	mov	DWORD PTR $T222692[ebp], edx
	mov	eax, DWORD PTR $T222692[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T222638[ebp], ecx
	mov	edx, DWORD PTR $T222638[ebp]
	mov	DWORD PTR $T222684[ebp], edx
	mov	eax, DWORD PTR $T222684[ebp]
	mov	DWORD PTR $T222683[ebp], eax
	mov	ecx, DWORD PTR $T222693[ebp]
	push	ecx
	mov	edx, DWORD PTR $T222683[ebp]
	push	edx
	mov	ecx, DWORD PTR $T222692[ebp]
	call	?_Insert@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAEXV?$_Const_iterator@$0A@@12@ABURequest@CvDiplomacyRequests@@@Z ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Insert
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	eax, DWORD PTR $T222613[ebp+8]
	mov	DWORD PTR $T222700[ebp], eax
	mov	ecx, DWORD PTR $T222700[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 168  : 	Request& newRequest = m_aRequests.back();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR $T222716[ebp], edx
	mov	eax, DWORD PTR $T222716[ebp]
	mov	DWORD PTR $T222754[ebp], eax
	mov	ecx, DWORD PTR $T222754[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T222754[ebp], edx
	mov	eax, DWORD PTR $T222754[ebp]
	add	eax, 8
	mov	DWORD PTR _newRequest$[ebp], eax

; 169  : 
; 170  : 	newRequest.Clear();

	mov	ecx, DWORD PTR _newRequest$[ebp]
	call	?Clear@Request@CvDiplomacyRequests@@QAEXXZ ; CvDiplomacyRequests::Request::Clear

; 171  : 	newRequest.m_eFromPlayer = eFromPlayer;

	mov	ecx, DWORD PTR _newRequest$[ebp]
	mov	edx, DWORD PTR _eFromPlayer$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 172  : 	newRequest.m_eDiploType = eDiploType;

	mov	eax, DWORD PTR _newRequest$[ebp]
	mov	ecx, DWORD PTR _eDiploType$[ebp]
	mov	DWORD PTR [eax], ecx

; 173  : 	newRequest.m_strMessage = pszMessage;

	mov	edx, DWORD PTR _newRequest$[ebp]
	add	edx, 8
	mov	DWORD PTR $T222779[ebp], edx
	cmp	DWORD PTR _pszMessage$[ebp], 0
	je	SHORT $LN67@Add
	mov	eax, DWORD PTR _pszMessage$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T222779[ebp]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN68@Add
$LN67@Add:
	mov	ecx, DWORD PTR $T222779[ebp]
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN68@Add:

; 174  : 	newRequest.m_iExtraGameData = iExtraGameData;

	mov	ecx, DWORD PTR _newRequest$[ebp]
	mov	edx, DWORD PTR _iExtraGameData$[ebp]
	mov	DWORD PTR [ecx+48], edx

; 175  : 	newRequest.m_eAnimationType = eAnimationType;

	mov	eax, DWORD PTR _newRequest$[ebp]
	mov	ecx, DWORD PTR _eAnimationType$[ebp]
	mov	DWORD PTR [eax+36], ecx

; 176  : 	newRequest.m_iTurn = GC.getGame().getGameTurn();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T222783[ebp], edx
	mov	ecx, DWORD PTR $T222783[ebp]
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	mov	ecx, DWORD PTR _newRequest$[ebp]
	mov	DWORD PTR [ecx+40], eax

; 177  : 
; 178  : 	return true;

	mov	al, 1

; 179  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Add@CvDiplomacyRequests@@QAE_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z$0:
	lea	ecx, DWORD PTR $T222613[ebp]
	jmp	??1Request@CvDiplomacyRequests@@QAE@XZ
__ehhandler$?Add@CvDiplomacyRequests@@QAE_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-192]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Add@CvDiplomacyRequests@@QAE_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Add@CvDiplomacyRequests@@QAE_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z ENDP ; CvDiplomacyRequests::Add
; Function compile flags: /Odtp
;	COMDAT ?Send@CvDiplomacyRequests@@IAEXW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z
_TEXT	SEGMENT
tv71 = -12						; size = 4
_this$ = -8						; size = 4
$T222795 = -4						; size = 4
_eFromPlayer$ = 8					; size = 4
_eDiploType$ = 12					; size = 4
_pszMessage$ = 16					; size = 4
_eAnimationType$ = 20					; size = 4
_iExtraGameData$ = 24					; size = 4
?Send@CvDiplomacyRequests@@IAEXW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z PROC ; CvDiplomacyRequests::Send, COMDAT
; _this$ = ecx

; 183  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 184  : 	gDLL->GameplayDiplomacyAILeaderMessage(eFromPlayer, eDiploType, pszMessage, eAnimationType, iExtraGameData);

	mov	eax, DWORD PTR $T222795[ebp]
	mov	DWORD PTR tv71[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv71[ebp], ecx
	mov	edx, DWORD PTR _iExtraGameData$[ebp]
	push	edx
	mov	eax, DWORD PTR _eAnimationType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszMessage$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eDiploType$[ebp]
	push	edx
	mov	eax, DWORD PTR _eFromPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv71[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv71[ebp]
	mov	eax, DWORD PTR [edx+736]
	call	eax

; 185  : 	m_bRequestActiveFromPlayer = eFromPlayer;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _eFromPlayer$[ebp]
	mov	DWORD PTR [ecx+20], edx

; 186  : 	m_bRequestActive = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 1

; 187  : }

	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?Send@CvDiplomacyRequests@@IAEXW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z ENDP ; CvDiplomacyRequests::Send
_TEXT	ENDS
PUBLIC	?GetNextAIPlayer@CvDiplomacyRequests@@QBE?AW4PlayerTypes@@XZ ; CvDiplomacyRequests::GetNextAIPlayer
; Function compile flags: /Odtp
;	COMDAT ?GetNextAIPlayer@CvDiplomacyRequests@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNextAIPlayer@CvDiplomacyRequests@@QBE?AW4PlayerTypes@@XZ PROC ; CvDiplomacyRequests::GetNextAIPlayer, COMDAT
; _this$ = ecx

; 191  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 192  : 	return m_eNextAIPlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 193  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNextAIPlayer@CvDiplomacyRequests@@QBE?AW4PlayerTypes@@XZ ENDP ; CvDiplomacyRequests::GetNextAIPlayer
_TEXT	ENDS
PUBLIC	?SetNextAIPlayer@CvDiplomacyRequests@@QAEXW4PlayerTypes@@@Z ; CvDiplomacyRequests::SetNextAIPlayer
; Function compile flags: /Odtp
;	COMDAT ?SetNextAIPlayer@CvDiplomacyRequests@@QAEXW4PlayerTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eNextPlayer$ = 8					; size = 4
?SetNextAIPlayer@CvDiplomacyRequests@@QAEXW4PlayerTypes@@@Z PROC ; CvDiplomacyRequests::SetNextAIPlayer, COMDAT
; _this$ = ecx

; 196  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 197  : 	m_eNextAIPlayer = eNextPlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _eNextPlayer$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 198  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetNextAIPlayer@CvDiplomacyRequests@@QAEXW4PlayerTypes@@@Z ENDP ; CvDiplomacyRequests::SetNextAIPlayer
_TEXT	ENDS
PUBLIC	?HasPendingRequests@CvDiplomacyRequests@@QBE_NXZ ; CvDiplomacyRequests::HasPendingRequests
; Function compile flags: /Odtp
;	COMDAT ?HasPendingRequests@CvDiplomacyRequests@@QBE_NXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?HasPendingRequests@CvDiplomacyRequests@@QBE_NXZ PROC	; CvDiplomacyRequests::HasPendingRequests, COMDAT
; _this$ = ecx

; 202  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 203  : 	return !m_aRequests.empty() || m_bRequestActive;

	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+16], 0
	sete	cl
	movzx	edx, cl
	test	edx, edx
	je	SHORT $LN3@HasPending
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+24]
	test	ecx, ecx
	jne	SHORT $LN3@HasPending
	mov	DWORD PTR tv72[ebp], 0
	jmp	SHORT $LN4@HasPending
$LN3@HasPending:
	mov	DWORD PTR tv72[ebp], 1
$LN4@HasPending:
	mov	al, BYTE PTR tv72[ebp]

; 204  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HasPendingRequests@CvDiplomacyRequests@@QBE_NXZ ENDP	; CvDiplomacyRequests::HasPendingRequests
_TEXT	ENDS
PUBLIC	?HasActiveRequest@CvDiplomacyRequests@@QBE_NXZ	; CvDiplomacyRequests::HasActiveRequest
; Function compile flags: /Odtp
;	COMDAT ?HasActiveRequest@CvDiplomacyRequests@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?HasActiveRequest@CvDiplomacyRequests@@QBE_NXZ PROC	; CvDiplomacyRequests::HasActiveRequest, COMDAT
; _this$ = ecx

; 208  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 209  : 	return m_bRequestActive;

	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+24]

; 210  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HasActiveRequest@CvDiplomacyRequests@@QBE_NXZ ENDP	; CvDiplomacyRequests::HasActiveRequest
_TEXT	ENDS
PUBLIC	?HasActiveRequestFrom@CvDiplomacyRequests@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyRequests::HasActiveRequestFrom
; Function compile flags: /Odtp
;	COMDAT ?HasActiveRequestFrom@CvDiplomacyRequests@@QBE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_eFromPlayer$ = 8					; size = 4
?HasActiveRequestFrom@CvDiplomacyRequests@@QBE_NW4PlayerTypes@@@Z PROC ; CvDiplomacyRequests::HasActiveRequestFrom, COMDAT
; _this$ = ecx

; 214  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 215  : 	return m_bRequestActive && m_bRequestActiveFromPlayer == eFromPlayer;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+24]
	test	ecx, ecx
	je	SHORT $LN3@HasActiveR
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	cmp	eax, DWORD PTR _eFromPlayer$[ebp]
	jne	SHORT $LN3@HasActiveR
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@HasActiveR
$LN3@HasActiveR:
	mov	DWORD PTR tv69[ebp], 0
$LN4@HasActiveR:
	mov	al, BYTE PTR tv69[ebp]

; 216  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?HasActiveRequestFrom@CvDiplomacyRequests@@QBE_NW4PlayerTypes@@@Z ENDP ; CvDiplomacyRequests::HasActiveRequestFrom
_TEXT	ENDS
PUBLIC	?SendRequest@CvDiplomacyRequests@@SAXW4PlayerTypes@@0W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z ; CvDiplomacyRequests::SendRequest
EXTRN	?isNetworkMultiplayerGame@CvPreGame@@YA_NXZ:PROC ; CvPreGame::isNetworkMultiplayerGame
EXTRN	?GetDiplomacyRequests@CvPlayer@@QBEPAVCvDiplomacyRequests@@XZ:PROC ; CvPlayer::GetDiplomacyRequests
; Function compile flags: /Odtp
;	COMDAT ?SendRequest@CvDiplomacyRequests@@SAXW4PlayerTypes@@0W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z
_TEXT	SEGMENT
$T222821 = -12						; size = 4
_pkDiploRequests$ = -8					; size = 4
_kPlayer$ = -4						; size = 4
_eFromPlayer$ = 8					; size = 4
_eToPlayer$ = 12					; size = 4
_eDiploType$ = 16					; size = 4
_pszMessage$ = 20					; size = 4
_eAnimationType$ = 24					; size = 4
_iExtraGameData$ = 28					; size = 4
?SendRequest@CvDiplomacyRequests@@SAXW4PlayerTypes@@0W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z PROC ; CvDiplomacyRequests::SendRequest, COMDAT

; 224  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 225  : 	CvPlayer& kPlayer = GET_PLAYER(eToPlayer);

	mov	eax, DWORD PTR _eToPlayer$[ebp]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$[ebp], eax

; 226  : 	CvDiplomacyRequests* pkDiploRequests = kPlayer.GetDiplomacyRequests();

	mov	ecx, DWORD PTR _kPlayer$[ebp]
	call	?GetDiplomacyRequests@CvPlayer@@QBEPAVCvDiplomacyRequests@@XZ ; CvPlayer::GetDiplomacyRequests
	mov	DWORD PTR _pkDiploRequests$[ebp], eax

; 227  : 	if(pkDiploRequests)

	cmp	DWORD PTR _pkDiploRequests$[ebp], 0
	je	SHORT $LN4@SendReques

; 228  : 	{
; 229  : 		if(!CvPreGame::isNetworkMultiplayerGame() && GC.getGame().getActivePlayer() == eToPlayer)

	call	?isNetworkMultiplayerGame@CvPreGame@@YA_NXZ ; CvPreGame::isNetworkMultiplayerGame
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@SendReques
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T222821[ebp], edx
	mov	ecx, DWORD PTR $T222821[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	eax, DWORD PTR _eToPlayer$[ebp]
	jne	SHORT $LN2@SendReques

; 230  : 		{
; 231  : 			// Target is the active player, just send it right now
; 232  : 			pkDiploRequests->Send(eFromPlayer, eDiploType, pszMessage, eAnimationType, iExtraGameData);

	mov	eax, DWORD PTR _iExtraGameData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eAnimationType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pszMessage$[ebp]
	push	edx
	mov	eax, DWORD PTR _eDiploType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eFromPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkDiploRequests$[ebp]
	call	?Send@CvDiplomacyRequests@@IAEXW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z ; CvDiplomacyRequests::Send

; 233  : 		}
; 234  : 		else

	jmp	SHORT $LN4@SendReques
$LN2@SendReques:

; 235  : 			pkDiploRequests->Add(eFromPlayer, eDiploType, pszMessage, eAnimationType, iExtraGameData);

	mov	edx, DWORD PTR _iExtraGameData$[ebp]
	push	edx
	mov	eax, DWORD PTR _eAnimationType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszMessage$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eDiploType$[ebp]
	push	edx
	mov	eax, DWORD PTR _eFromPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkDiploRequests$[ebp]
	call	?Add@CvDiplomacyRequests@@QAE_NW4PlayerTypes@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z ; CvDiplomacyRequests::Add
$LN4@SendReques:

; 236  : 	}
; 237  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?SendRequest@CvDiplomacyRequests@@SAXW4PlayerTypes@@0W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z ENDP ; CvDiplomacyRequests::SendRequest
_TEXT	ENDS
PUBLIC	??1?$auto_ptr@VICvDeal1@@@std@@QAE@XZ		; std::auto_ptr<ICvDeal1>::~auto_ptr<ICvDeal1>
PUBLIC	?SendDealRequest@CvDiplomacyRequests@@SAXW4PlayerTypes@@0PAVCvDeal@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@@Z ; CvDiplomacyRequests::SendDealRequest
EXTRN	?WrapDealPointer@CvGlobals@@QAE?AV?$auto_ptr@VICvDeal1@@@std@@PAVCvDeal@@@Z:PROC ; CvGlobals::WrapDealPointer
;	COMDAT xdata$x
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvdllinterfaces.h
xdata$x	SEGMENT
__unwindtable$?SendDealRequest@CvDiplomacyRequests@@SAXW4PlayerTypes@@0PAVCvDeal@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendDealRequest@CvDiplomacyRequests@@SAXW4PlayerTypes@@0PAVCvDeal@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@@Z$1
__ehfuncinfo$?SendDealRequest@CvDiplomacyRequests@@SAXW4PlayerTypes@@0PAVCvDeal@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SendDealRequest@CvDiplomacyRequests@@SAXW4PlayerTypes@@0PAVCvDeal@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdiplomacyrequests.cpp
xdata$x	ENDS
;	COMDAT ?SendDealRequest@CvDiplomacyRequests@@SAXW4PlayerTypes@@0PAVCvDeal@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@@Z
_TEXT	SEGMENT
tv89 = -72						; size = 4
_inst$222882 = -68					; size = 4
$T222878 = -64						; size = 4
$T222865 = -60						; size = 4
_inst$222861 = -56					; size = 4
$T222857 = -52						; size = 4
$T222847 = -48						; size = 4
__Ptr$222845 = -44					; size = 4
$T222842 = -40						; size = 4
__Cvtptr$222837 = -36					; size = 4
__Ans$222838 = -32					; size = 4
$T222831 = -28						; size = 4
$T222825 = -24						; size = 4
$T222824 = -20						; size = 4
_pDeal$221046 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_eFromPlayer$ = 8					; size = 4
_eToPlayer$ = 12					; size = 4
_pkDeal$ = 16						; size = 4
_eDiploType$ = 20					; size = 4
_pszMessage$ = 24					; size = 4
_eAnimationType$ = 28					; size = 4
?SendDealRequest@CvDiplomacyRequests@@SAXW4PlayerTypes@@0PAVCvDeal@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@@Z PROC ; CvDiplomacyRequests::SendDealRequest, COMDAT

; 243  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendDealRequest@CvDiplomacyRequests@@SAXW4PlayerTypes@@0PAVCvDeal@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 244  : 	// Deals must currently happen on the active player's turn...
; 245  : 	if(GC.getGame().getActivePlayer() == eToPlayer)

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T222831[ebp], eax
	mov	ecx, DWORD PTR $T222831[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	eax, DWORD PTR _eToPlayer$[ebp]
	jne	$LN2@SendDealRe

; 246  : 	{
; 247  : 		auto_ptr<ICvDeal1> pDeal = GC.WrapDealPointer(pkDeal);

	mov	ecx, DWORD PTR _pkDeal$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T222824[ebp]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?WrapDealPointer@CvGlobals@@QAE?AV?$auto_ptr@VICvDeal1@@@std@@PAVCvDeal@@@Z ; CvGlobals::WrapDealPointer
	mov	DWORD PTR $T222842[ebp], eax
	mov	eax, DWORD PTR $T222842[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Cvtptr$222837[ebp], ecx
	mov	edx, DWORD PTR __Cvtptr$222837[ebp]
	mov	DWORD PTR __Ans$222838[ebp], edx
	mov	eax, DWORD PTR $T222842[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR __Ans$222838[ebp]
	mov	DWORD PTR $T222825[ebp], ecx
	mov	edx, DWORD PTR $T222825[ebp]
	mov	DWORD PTR $T222847[ebp], edx
	mov	eax, DWORD PTR $T222847[ebp]
	mov	DWORD PTR __Ptr$222845[ebp], eax
	mov	DWORD PTR $T222847[ebp], 0
	mov	ecx, DWORD PTR __Ptr$222845[ebp]
	mov	DWORD PTR _pDeal$221046[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T222824[ebp]
	mov	DWORD PTR $T222857[ebp], edx
	cmp	DWORD PTR $T222857[ebp], 0
	je	SHORT $LN14@SendDealRe
	mov	eax, DWORD PTR $T222857[ebp]
	mov	DWORD PTR _inst$222861[ebp], eax
	mov	ecx, DWORD PTR _inst$222861[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _inst$222861[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+4]
	call	ecx
$LN14@SendDealRe:

; 248  : 		GC.GetEngineUserInterface()->SetScratchDeal(pDeal.get());

	mov	edx, DWORD PTR $T222865[ebp]
	mov	DWORD PTR tv89[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR tv89[ebp], eax
	mov	ecx, DWORD PTR _pDeal$221046[ebp]
	push	ecx
	mov	edx, DWORD PTR tv89[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv89[ebp]
	mov	edx, DWORD PTR [eax+32]
	call	edx

; 249  : 		SendRequest(eFromPlayer, eToPlayer, eDiploType, pszMessage, eAnimationType, -1);

	push	-1
	mov	eax, DWORD PTR _eAnimationType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pszMessage$[ebp]
	push	ecx
	mov	edx, DWORD PTR _eDiploType$[ebp]
	push	edx
	mov	eax, DWORD PTR _eToPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eFromPlayer$[ebp]
	push	ecx
	call	?SendRequest@CvDiplomacyRequests@@SAXW4PlayerTypes@@0W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@H@Z ; CvDiplomacyRequests::SendRequest
	add	esp, 24					; 00000018H

; 250  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _pDeal$221046[ebp]
	mov	DWORD PTR $T222878[ebp], edx
	cmp	DWORD PTR $T222878[ebp], 0
	je	SHORT $LN2@SendDealRe
	mov	eax, DWORD PTR $T222878[ebp]
	mov	DWORD PTR _inst$222882[ebp], eax
	mov	ecx, DWORD PTR _inst$222882[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _inst$222882[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+4]
	call	ecx
$LN2@SendDealRe:

; 251  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SendDealRequest@CvDiplomacyRequests@@SAXW4PlayerTypes@@0PAVCvDeal@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@@Z$1:
	lea	ecx, DWORD PTR _pDeal$221046[ebp]
	jmp	??1?$auto_ptr@VICvDeal1@@@std@@QAE@XZ	; std::auto_ptr<ICvDeal1>::~auto_ptr<ICvDeal1>
__ehhandler$?SendDealRequest@CvDiplomacyRequests@@SAXW4PlayerTypes@@0PAVCvDeal@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendDealRequest@CvDiplomacyRequests@@SAXW4PlayerTypes@@0PAVCvDeal@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendDealRequest@CvDiplomacyRequests@@SAXW4PlayerTypes@@0PAVCvDeal@@W4DiploUIStateTypes@@PBDW4LeaderheadAnimationTypes@@@Z ENDP ; CvDiplomacyRequests::SendDealRequest
PUBLIC	?DoAIDiplomacy@CvDiplomacyRequests@@SAXW4PlayerTypes@@@Z ; CvDiplomacyRequests::DoAIDiplomacy
EXTRN	?DoTurn@CvDiplomacyAI@@QAEXW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::DoTurn
EXTRN	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ:PROC ; CvPlayer::GetDiplomacyAI
EXTRN	?isBarbarian@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isBarbarian
EXTRN	?isMinorCiv@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isMinorCiv
EXTRN	?isHuman@CvPlayer@@QBE_NXZ:PROC			; CvPlayer::isHuman
; Function compile flags: /Odtp
;	COMDAT ?DoAIDiplomacy@CvDiplomacyRequests@@SAXW4PlayerTypes@@@Z
_TEXT	SEGMENT
tv181 = -32						; size = 4
$T222910 = -25						; size = 1
_kPlayer$221084 = -24					; size = 4
_iMaxCivPlayers$221079 = -20				; size = 4
_ePlayerLoop$221077 = -16				; size = 4
_kTargetPlayer$221072 = -12				; size = 4
_pkTargetRequests$221074 = -8				; size = 4
_pkIFace$221070 = -4					; size = 4
_eTargetPlayer$ = 8					; size = 4
?DoAIDiplomacy@CvDiplomacyRequests@@SAXW4PlayerTypes@@@Z PROC ; CvDiplomacyRequests::DoAIDiplomacy, COMDAT

; 258  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 259  : 	if(eTargetPlayer != NO_PLAYER)

	cmp	DWORD PTR _eTargetPlayer$[ebp], -1
	je	$LN10@DoAIDiplom

; 260  : 	{
; 261  : 		ICvUserInterface2* pkIFace = GC.GetEngineUserInterface();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8568
	mov	DWORD PTR _pkIFace$221070[ebp], eax

; 262  : 		// WARNING: Processing depends on the state of the interface!
; 263  : 		CvAssert(!CvPreGame::isNetworkMultiplayerGame());
; 264  : 
; 265  : 		// Don't process while a modal dialog is up or another diplo or popup is up.
; 266  : 		if(pkIFace->IsModalStackEmpty() && !pkIFace->isDiploOrPopupWaiting() && !pkIFace->isCityScreenUp())

	mov	ecx, DWORD PTR _pkIFace$221070[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pkIFace$221070[ebp]
	mov	eax, DWORD PTR [edx+548]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	$LN10@DoAIDiplom
	mov	edx, DWORD PTR _pkIFace$221070[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pkIFace$221070[ebp]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	movzx	eax, al
	test	eax, eax
	jne	$LN10@DoAIDiplom
	mov	ecx, DWORD PTR _pkIFace$221070[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pkIFace$221070[ebp]
	mov	eax, DWORD PTR [edx+312]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN10@DoAIDiplom

; 267  : 		{
; 268  : 			CvPlayer& kTargetPlayer = GET_PLAYER((PlayerTypes) eTargetPlayer);

	mov	edx, DWORD PTR _eTargetPlayer$[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kTargetPlayer$221072[ebp], edx

; 269  : 			CvDiplomacyRequests* pkTargetRequests = kTargetPlayer.GetDiplomacyRequests();

	mov	ecx, DWORD PTR _kTargetPlayer$221072[ebp]
	call	?GetDiplomacyRequests@CvPlayer@@QBEPAVCvDiplomacyRequests@@XZ ; CvPlayer::GetDiplomacyRequests
	mov	DWORD PTR _pkTargetRequests$221074[ebp], eax

; 270  : 			if(pkTargetRequests)

	cmp	DWORD PTR _pkTargetRequests$221074[ebp], 0
	je	$LN10@DoAIDiplom

; 271  : 			{
; 272  : 				if(!pkTargetRequests->HasPendingRequests())

	mov	ecx, DWORD PTR _pkTargetRequests$221074[ebp]
	call	?HasPendingRequests@CvDiplomacyRequests@@QBE_NXZ ; CvDiplomacyRequests::HasPendingRequests
	movzx	eax, al
	test	eax, eax
	jne	$LN10@DoAIDiplom

; 273  : 				{
; 274  : 					PlayerTypes ePlayerLoop = pkTargetRequests->GetNextAIPlayer();

	mov	ecx, DWORD PTR _pkTargetRequests$221074[ebp]
	call	?GetNextAIPlayer@CvDiplomacyRequests@@QBE?AW4PlayerTypes@@XZ ; CvDiplomacyRequests::GetNextAIPlayer
	mov	DWORD PTR _ePlayerLoop$221077[ebp], eax

; 275  : 					if(ePlayerLoop != NO_PLAYER)

	cmp	DWORD PTR _ePlayerLoop$221077[ebp], -1
	je	$LN10@DoAIDiplom

; 276  : 					{
; 277  : 						int iMaxCivPlayers = MAX_CIV_PLAYERS;

	mov	DWORD PTR _iMaxCivPlayers$221079[ebp], 63 ; 0000003fH
$LN4@DoAIDiplom:

; 278  : 						while((int)ePlayerLoop < iMaxCivPlayers)

	mov	ecx, DWORD PTR _ePlayerLoop$221077[ebp]
	cmp	ecx, DWORD PTR _iMaxCivPlayers$221079[ebp]
	jge	$LN3@DoAIDiplom

; 279  : 						{
; 280  : 							CvPlayer& kPlayer = GET_PLAYER(ePlayerLoop);

	mov	edx, DWORD PTR _ePlayerLoop$221077[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$221084[ebp], edx

; 281  : 
; 282  : 							if(eTargetPlayer != ePlayerLoop && kPlayer.isAlive() && !kPlayer.isHuman() && !kPlayer.isMinorCiv() && !kPlayer.isBarbarian())

	mov	eax, DWORD PTR _eTargetPlayer$[ebp]
	cmp	eax, DWORD PTR _ePlayerLoop$221077[ebp]
	je	SHORT $LN2@DoAIDiplom
	mov	ecx, DWORD PTR _kPlayer$221084[ebp]
	mov	dl, BYTE PTR [ecx+2256]
	mov	BYTE PTR $T222910[ebp], dl
	movzx	eax, BYTE PTR $T222910[ebp]
	test	eax, eax
	je	SHORT $LN2@DoAIDiplom
	mov	ecx, DWORD PTR _kPlayer$221084[ebp]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@DoAIDiplom
	mov	ecx, DWORD PTR _kPlayer$221084[ebp]
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@DoAIDiplom
	mov	ecx, DWORD PTR _kPlayer$221084[ebp]
	call	?isBarbarian@CvPlayer@@QBE_NXZ		; CvPlayer::isBarbarian
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@DoAIDiplom

; 283  : 							{
; 284  : 								kPlayer.GetDiplomacyAI()->DoTurn(eTargetPlayer);

	mov	ecx, DWORD PTR _eTargetPlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kPlayer$221084[ebp]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?DoTurn@CvDiplomacyAI@@QAEXW4PlayerTypes@@@Z ; CvDiplomacyAI::DoTurn

; 285  : 								if(pkTargetRequests->HasPendingRequests())

	mov	ecx, DWORD PTR _pkTargetRequests$221074[ebp]
	call	?HasPendingRequests@CvDiplomacyRequests@@QBE_NXZ ; CvDiplomacyRequests::HasPendingRequests
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@DoAIDiplom

; 286  : 								{
; 287  : 									ePlayerLoop = (PlayerTypes)((int)ePlayerLoop + 1);

	mov	eax, DWORD PTR _ePlayerLoop$221077[ebp]
	add	eax, 1
	mov	DWORD PTR _ePlayerLoop$221077[ebp], eax

; 288  : 									break;

	jmp	SHORT $LN3@DoAIDiplom
$LN2@DoAIDiplom:

; 289  : 								}
; 290  : 							}
; 291  : 
; 292  : 							ePlayerLoop = (PlayerTypes)((int)ePlayerLoop + 1);

	mov	ecx, DWORD PTR _ePlayerLoop$221077[ebp]
	add	ecx, 1
	mov	DWORD PTR _ePlayerLoop$221077[ebp], ecx

; 293  : 						}

	jmp	$LN4@DoAIDiplom
$LN3@DoAIDiplom:

; 294  : 
; 295  : 						pkTargetRequests->SetNextAIPlayer((((int)ePlayerLoop >= iMaxCivPlayers)?NO_PLAYER:ePlayerLoop));

	mov	edx, DWORD PTR _ePlayerLoop$221077[ebp]
	cmp	edx, DWORD PTR _iMaxCivPlayers$221079[ebp]
	jl	SHORT $LN12@DoAIDiplom
	mov	DWORD PTR tv181[ebp], -1
	jmp	SHORT $LN13@DoAIDiplom
$LN12@DoAIDiplom:
	mov	eax, DWORD PTR _ePlayerLoop$221077[ebp]
	mov	DWORD PTR tv181[ebp], eax
$LN13@DoAIDiplom:
	mov	ecx, DWORD PTR tv181[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkTargetRequests$221074[ebp]
	call	?SetNextAIPlayer@CvDiplomacyRequests@@QAEXW4PlayerTypes@@@Z ; CvDiplomacyRequests::SetNextAIPlayer
$LN10@DoAIDiplom:

; 296  : 					}
; 297  : 				}
; 298  : 			}
; 299  : 		}
; 300  : 	}
; 301  : 
; 302  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoAIDiplomacy@CvDiplomacyRequests@@SAXW4PlayerTypes@@@Z ENDP ; CvDiplomacyRequests::DoAIDiplomacy
_TEXT	ENDS
PUBLIC	?ActiveRequestComplete@CvDiplomacyRequests@@QAEXXZ ; CvDiplomacyRequests::ActiveRequestComplete
; Function compile flags: /Odtp
;	COMDAT ?ActiveRequestComplete@CvDiplomacyRequests@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ActiveRequestComplete@CvDiplomacyRequests@@QAEXXZ PROC	; CvDiplomacyRequests::ActiveRequestComplete, COMDAT
; _this$ = ecx

; 306  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 307  : 	m_bRequestActive = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0

; 308  : 	m_bRequestActiveFromPlayer = NO_PLAYER;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], -1

; 309  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ActiveRequestComplete@CvDiplomacyRequests@@QAEXXZ ENDP	; CvDiplomacyRequests::ActiveRequestComplete
_TEXT	ENDS
PUBLIC	?HasActiveDiploRequestWithHuman@CvDiplomacyRequests@@SA_NW4PlayerTypes@@@Z ; CvDiplomacyRequests::HasActiveDiploRequestWithHuman
; Function compile flags: /Odtp
;	COMDAT ?HasActiveDiploRequestWithHuman@CvDiplomacyRequests@@SA_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
$T222926 = -9						; size = 1
_kTargetPlayer$221102 = -8				; size = 4
_i$221098 = -4						; size = 4
_eSourcePlayer$ = 8					; size = 4
?HasActiveDiploRequestWithHuman@CvDiplomacyRequests@@SA_NW4PlayerTypes@@@Z PROC ; CvDiplomacyRequests::HasActiveDiploRequestWithHuman, COMDAT

; 318  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 319  : 	for (int i = 0; i < MAX_CIV_PLAYERS; ++i)

	mov	DWORD PTR _i$221098[ebp], 0
	jmp	SHORT $LN5@HasActiveD
$LN4@HasActiveD:
	mov	eax, DWORD PTR _i$221098[ebp]
	add	eax, 1
	mov	DWORD PTR _i$221098[ebp], eax
$LN5@HasActiveD:
	cmp	DWORD PTR _i$221098[ebp], 63		; 0000003fH
	jge	SHORT $LN3@HasActiveD

; 320  : 	{
; 321  : 		CvPlayer& kTargetPlayer = GET_PLAYER((PlayerTypes)i);

	mov	ecx, DWORD PTR _i$221098[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kTargetPlayer$221102[ebp], ecx

; 322  : 		if (kTargetPlayer.isHuman() && kTargetPlayer.isAlive() && (PlayerTypes)i != eSourcePlayer)

	mov	ecx, DWORD PTR _kTargetPlayer$221102[ebp]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@HasActiveD
	mov	eax, DWORD PTR _kTargetPlayer$221102[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T222926[ebp], cl
	movzx	edx, BYTE PTR $T222926[ebp]
	test	edx, edx
	je	SHORT $LN2@HasActiveD
	mov	eax, DWORD PTR _i$221098[ebp]
	cmp	eax, DWORD PTR _eSourcePlayer$[ebp]
	je	SHORT $LN2@HasActiveD

; 323  : 		{
; 324  : 			if (kTargetPlayer.GetDiplomacyRequests()->HasActiveRequestFrom(eSourcePlayer))

	mov	ecx, DWORD PTR _eSourcePlayer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _kTargetPlayer$221102[ebp]
	call	?GetDiplomacyRequests@CvPlayer@@QBEPAVCvDiplomacyRequests@@XZ ; CvPlayer::GetDiplomacyRequests
	mov	ecx, eax
	call	?HasActiveRequestFrom@CvDiplomacyRequests@@QBE_NW4PlayerTypes@@@Z ; CvDiplomacyRequests::HasActiveRequestFrom
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@HasActiveD

; 325  : 				return true;

	mov	al, 1
	jmp	SHORT $LN6@HasActiveD
$LN2@HasActiveD:

; 326  : 		}
; 327  : 	}

	jmp	SHORT $LN4@HasActiveD
$LN3@HasActiveD:

; 328  : 	return false;

	xor	al, al
$LN6@HasActiveD:

; 329  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?HasActiveDiploRequestWithHuman@CvDiplomacyRequests@@SA_NW4PlayerTypes@@@Z ENDP ; CvDiplomacyRequests::HasActiveDiploRequestWithHuman
_TEXT	ENDS
PUBLIC	?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Buynode
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??0?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ??0?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv90 = -68						; size = 4
tv148 = -64						; size = 4
tv173 = -60						; size = 4
tv197 = -56						; size = 4
_this$ = -52						; size = 4
$T223019 = -48						; size = 1
$T222992 = -47						; size = 1
$T222972 = -46						; size = 1
$T222959 = -45						; size = 1
$T222955 = -44						; size = 4
$T222948 = -36						; size = 4
$T222941 = -28						; size = 4
$T222934 = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ PROC ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >, COMDAT
; _this$ = ecx

; 436  : 		{	// construct empty list

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T223019[ebp]
	mov	DWORD PTR $T222934[ebp], eax
	lea	ecx, DWORD PTR $T222992[ebp]
	mov	DWORD PTR $T222941[ebp], ecx
	lea	edx, DWORD PTR $T222972[ebp]
	mov	DWORD PTR $T222948[ebp], edx
	lea	eax, DWORD PTR $T222959[ebp]
	mov	DWORD PTR $T222955[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv197[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv173[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv148[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv90[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Buynode
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 437  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ
__ehhandler$??0?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ ENDP ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ??1?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -48						; size = 4
$T223130 = -44						; size = 4
$T223107 = -40						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ PROC ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::~list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >, COMDAT
; _this$ = ecx

; 520  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 521  : 		_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAEXXZ ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::clear
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T223107[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T223130[ebp], eax
	mov	ecx, DWORD PTR $T223130[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 522  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ
__ehhandler$??1?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ ENDP ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::~list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >
; Function compile flags: /Odtp
;	COMDAT ?clear@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T223212 = -24						; size = 4
$T223207 = -20						; size = 4
$T223189 = -16						; size = 4
$T223185 = -12						; size = 4
__Pnext$ = -8						; size = 4
__Pnode$ = -4						; size = 4
?clear@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAEXXZ PROC ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::clear, COMDAT
; _this$ = ecx

; 825  : 		{	// erase all

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 826  : 
; 827  :  #if _HAS_ITERATOR_DEBUGGING
; 828  : 		this->_Orphan_ptr(*this, 0);
; 829  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 830  : 
; 831  : 		_Nodeptr _Pnext;
; 832  : 		_Nodeptr _Pnode = _Nextnode(_Myhead);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T223185[ebp], ecx
	mov	edx, DWORD PTR $T223185[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnode$[ebp], eax

; 833  : 		_Nextnode(_Myhead) = _Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T223189[ebp], edx
	mov	eax, DWORD PTR $T223189[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 834  : 		_Prevnode(_Myhead) = _Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 835  : 		_Mysize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 836  : 
; 837  : 		for (; _Pnode != _Myhead; _Pnode = _Pnext)

	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN3@clear:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN4@clear

; 838  : 			{	// delete an element
; 839  : 			_Pnext = _Nextnode(_Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnext$[ebp], eax

; 840  : 			this->_Alnod.destroy(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	add	ecx, 8
	mov	DWORD PTR $T223212[ebp], ecx
	mov	edx, DWORD PTR $T223212[ebp]
	add	edx, 8
	mov	DWORD PTR $T223207[ebp], edx
	mov	ecx, DWORD PTR $T223207[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	eax, eax
	and	eax, 1
	je	SHORT $LN14@clear
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN14@clear:

; 841  : 			this->_Alnod.deallocate(_Pnode, 1);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 842  : 			}

	jmp	SHORT $LN2@clear
$LN4@clear:

; 843  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAEXXZ ENDP ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::clear
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
_TEXT	ENDS
;	COMDAT ??1?$auto_ptr@VICvDeal1@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_inst$223262 = -8					; size = 4
$T223257 = -4						; size = 4
??1?$auto_ptr@VICvDeal1@@@std@@QAE@XZ PROC		; std::auto_ptr<ICvDeal1>::~auto_ptr<ICvDeal1>, COMDAT
; _this$ = ecx

; 720  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 721  : 		delete _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T223257[ebp], ecx
	cmp	DWORD PTR $T223257[ebp], 0
	je	SHORT $LN1@auto_ptr
	mov	edx, DWORD PTR $T223257[ebp]
	mov	DWORD PTR _inst$223262[ebp], edx
	mov	eax, DWORD PTR _inst$223262[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inst$223262[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
$LN1@auto_ptr:

; 722  : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
??1?$auto_ptr@VICvDeal1@@@std@@QAE@XZ ENDP		; std::auto_ptr<ICvDeal1>::~auto_ptr<ICvDeal1>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_List_val@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_val@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ PROC ; std::_List_val<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::~_List_val<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_val@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::~_List_val<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >
_TEXT	ENDS
PUBLIC	?_Incsize@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEXI@Z ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Incsize
PUBLIC	?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Buynode
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
;	COMDAT ?_Insert@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAEXV?$_Const_iterator@$0A@@12@ABURequest@CvDiplomacyRequests@@@Z
_TEXT	SEGMENT
_this$ = -88						; size = 4
$T223324 = -84						; size = 4
__Pnode$ = -8						; size = 4
__Newnode$ = -4						; size = 4
__Where$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Insert@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAEXV?$_Const_iterator@$0A@@12@ABURequest@CvDiplomacyRequests@@@Z PROC ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Insert, COMDAT
; _this$ = ecx

; 710  : 		{	// insert _Val at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	mov	DWORD PTR _this$[ebp], ecx

; 711  : 
; 712  :  #if _HAS_ITERATOR_DEBUGGING
; 713  : 		if (_Where._Mycont != this)
; 714  : 			_DEBUG_ERROR("list insert iterator outside range");
; 715  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 716  : 
; 717  : 		_Nodeptr _Pnode = _Where._Mynode();

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax

; 718  : 		_Nodeptr _Newnode = _Buynode(_Pnode, _Prevnode(_Pnode), _Val);

	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Buynode
	mov	DWORD PTR __Newnode$[ebp], eax

; 719  : 		_Incsize(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEXI@Z ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Incsize

; 720  : 		_Prevnode(_Pnode) = _Newnode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [edx+4], eax

; 721  : 		_Nextnode(_Prevnode(_Newnode)) = _Newnode;

	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T223324[ebp], edx
	mov	eax, DWORD PTR $T223324[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 722  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?_Insert@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAEXV?$_Const_iterator@$0A@@12@ABURequest@CvDiplomacyRequests@@@Z ENDP ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Insert
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?erase@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T223440 = -28						; size = 4
$T223382 = -24						; size = 4
$T223377 = -20						; size = 4
$T223356 = -16						; size = 4
__Tmp$223343 = -12					; size = 4
$T223327 = -8						; size = 4
__Pnode$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z PROC ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::erase, COMDAT
; _this$ = ecx

; 786  : 		{	// erase element at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx

; 787  : 
; 788  :  #if _HAS_ITERATOR_DEBUGGING
; 789  : 		if (_Where._Mycont != this || _Where._Ptr == _Myhead)
; 790  : 			_DEBUG_ERROR("list erase iterator outside range");
; 791  : 		_Nodeptr _Pnode = (_Where++)._Mynode();
; 792  : 		_Orphan_ptr(*this, _Pnode);
; 793  : 
; 794  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 795  : 		_Nodeptr _Pnode = (_Where++)._Mynode();

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Tmp$223343[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Where$[ebp], edx
	mov	eax, DWORD PTR __Tmp$223343[ebp]
	mov	DWORD PTR $T223327[ebp], eax
	mov	ecx, DWORD PTR $T223327[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 796  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 797  : 
; 798  : 		if (_Pnode != _Myhead)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	je	SHORT $LN1@erase

; 799  : 			{	// not list head, safe to erase
; 800  : 			_Nextnode(_Prevnode(_Pnode)) = _Nextnode(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T223356[ebp], edx
	mov	eax, DWORD PTR $T223356[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 801  : 			_Prevnode(_Nextnode(_Pnode)) = _Prevnode(_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 802  : 			this->_Alnod.destroy(_Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	add	ecx, 8
	mov	DWORD PTR $T223382[ebp], ecx
	mov	edx, DWORD PTR $T223382[ebp]
	add	edx, 8
	mov	DWORD PTR $T223377[ebp], edx
	mov	ecx, DWORD PTR $T223377[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	xor	eax, eax
	and	eax, 1
	je	SHORT $LN24@erase
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN24@erase:

; 803  : 			this->_Alnod.deallocate(_Pnode, 1);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 804  : 			--_Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN1@erase:

; 805  : 			}
; 806  : 		return (_Make_iter(_Where));

	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T223440[ebp], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR $T223440[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 807  : 		}

	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@QAE?AV?$_Iterator@$0A@@12@V?$_Const_iterator@$0A@@12@@Z ENDP ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::erase
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@I@Z ; std::allocator<std::_List_nod<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Node>::allocate
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ$0
__unwindtable$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ$2
__ehfuncinfo$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ
_TEXT	SEGMENT
tv157 = -84						; size = 4
tv152 = -80						; size = 4
_this$ = -76						; size = 4
$T223532 = -72						; size = 4
$T223517 = -68						; size = 4
$T223512 = -64						; size = 4
__Vptr$223510 = -60					; size = 4
$T223487 = -56						; size = 4
$T223482 = -52						; size = 4
__Vptr$223480 = -48					; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ PROC ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Buynode, COMDAT
; _this$ = ecx

; 1171 : 		{	// allocate a head node and set links

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1172 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@I@Z ; std::allocator<std::_List_nod<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 1173 : 		int _Linkcnt = 0;

	mov	DWORD PTR __Linkcnt$[ebp], 0

; 1174 : 
; 1175 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1176 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR $T223487[ebp], eax
	mov	ecx, DWORD PTR $T223487[ebp]
	mov	DWORD PTR __Vptr$223480[ebp], ecx
	mov	edx, DWORD PTR __Vptr$223480[ebp]
	mov	DWORD PTR $T223482[ebp], edx
	cmp	DWORD PTR $T223482[ebp], 0
	je	SHORT $LN22@Buynode
	mov	eax, DWORD PTR $T223482[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T223482[ebp]
	mov	DWORD PTR tv152[ebp], edx
	jmp	SHORT $LN18@Buynode
$LN22@Buynode:
	mov	DWORD PTR tv152[ebp], 0
$LN18@Buynode:

; 1177 : 		++_Linkcnt;

	mov	eax, DWORD PTR __Linkcnt$[ebp]
	add	eax, 1
	mov	DWORD PTR __Linkcnt$[ebp], eax

; 1178 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	add	ecx, 4
	mov	DWORD PTR $T223517[ebp], ecx
	mov	edx, DWORD PTR $T223517[ebp]
	mov	DWORD PTR __Vptr$223510[ebp], edx
	mov	eax, DWORD PTR __Vptr$223510[ebp]
	mov	DWORD PTR $T223512[ebp], eax
	cmp	DWORD PTR $T223512[ebp], 0
	je	SHORT $LN32@Buynode
	mov	ecx, DWORD PTR $T223512[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T223512[ebp]
	mov	DWORD PTR tv157[ebp], eax
	jmp	SHORT $LN28@Buynode
$LN32@Buynode:
	mov	DWORD PTR tv157[ebp], 0
$LN28@Buynode:
	jmp	SHORT $LN5@Buynode
__catch$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ$0:

; 1179 : 		_CATCH_ALL
; 1180 : 		if (0 < _Linkcnt)
; 1181 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1182 : 		this->_Alnod.deallocate(_Pnode, 1);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR $T223532[ebp], ecx
	mov	edx, DWORD PTR $T223532[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1183 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1184 : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ$1
	ret	0
$LN5@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ$1:

; 1185 : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode:

; 1186 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@XZ ENDP ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Buynode
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??0Request@CvDiplomacyRequests@@QAE@ABU01@@Z	; CvDiplomacyRequests::Request::Request
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z$0
__tryblocktable$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z$3
__unwindtable$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z
_TEXT	SEGMENT
tv170 = -92						; size = 4
tv161 = -88						; size = 4
tv178 = -84						; size = 4
tv173 = -80						; size = 4
_this$ = -76						; size = 4
$T223645 = -72						; size = 4
$T223644 = -68						; size = 4
__Vptr$223642 = -64					; size = 4
$T223612 = -60						; size = 4
__Vptr$223610 = -56					; size = 4
$T223583 = -52						; size = 4
__Vptr$223581 = -48					; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z PROC ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Buynode, COMDAT
; _this$ = ecx

; 1190 : 		{	// allocate a node and set links and value

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1191 : 		_Nodeptr _Pnode = this->_Alnod.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@I@Z ; std::allocator<std::_List_nod<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 1192 : 		int _Linkcnt = 0;

	mov	DWORD PTR __Linkcnt$[ebp], 0

; 1193 : 
; 1194 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1195 : 		this->_Alptr.construct(&_Nextnode(_Pnode), _Next);

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Vptr$223581[ebp], eax
	mov	ecx, DWORD PTR __Vptr$223581[ebp]
	mov	DWORD PTR $T223583[ebp], ecx
	cmp	DWORD PTR $T223583[ebp], 0
	je	SHORT $LN23@Buynode@2
	mov	edx, DWORD PTR $T223583[ebp]
	mov	eax, DWORD PTR __Next$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T223583[ebp]
	mov	DWORD PTR tv173[ebp], ecx
	jmp	SHORT $LN19@Buynode@2
$LN23@Buynode@2:
	mov	DWORD PTR tv173[ebp], 0
$LN19@Buynode@2:

; 1196 : 		++_Linkcnt;

	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx

; 1197 : 		this->_Alptr.construct(&_Prevnode(_Pnode), _Prev);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
	mov	DWORD PTR __Vptr$223610[ebp], eax
	mov	ecx, DWORD PTR __Vptr$223610[ebp]
	mov	DWORD PTR $T223612[ebp], ecx
	cmp	DWORD PTR $T223612[ebp], 0
	je	SHORT $LN33@Buynode@2
	mov	edx, DWORD PTR $T223612[ebp]
	mov	eax, DWORD PTR __Prev$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T223612[ebp]
	mov	DWORD PTR tv178[ebp], ecx
	jmp	SHORT $LN29@Buynode@2
$LN33@Buynode@2:
	mov	DWORD PTR tv178[ebp], 0
$LN29@Buynode@2:

; 1198 : 		++_Linkcnt;

	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx

; 1199 : 		this->_Alval.construct(&_Myval(_Pnode), _Val);

	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
	mov	DWORD PTR __Vptr$223642[ebp], eax
	mov	ecx, DWORD PTR __Vptr$223642[ebp]
	mov	DWORD PTR $T223645[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T223645[ebp], 0
	je	SHORT $LN43@Buynode@2
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T223645[ebp]
	call	??0Request@CvDiplomacyRequests@@QAE@ABU01@@Z
	mov	DWORD PTR tv161[ebp], eax
	mov	eax, DWORD PTR tv161[ebp]
	mov	DWORD PTR tv170[ebp], eax
	jmp	SHORT $LN44@Buynode@2
$LN43@Buynode@2:
	mov	DWORD PTR tv170[ebp], 0
$LN44@Buynode@2:
	mov	ecx, DWORD PTR tv170[ebp]
	mov	DWORD PTR $T223644[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN6@Buynode@2
__catch$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z$0:

; 1200 : 		_CATCH_ALL
; 1201 : 		if (1 < _Linkcnt)
; 1202 : 			this->_Alptr.destroy(&_Prevnode(_Pnode));
; 1203 : 		if (0 < _Linkcnt)
; 1204 : 			this->_Alptr.destroy(&_Nextnode(_Pnode));
; 1205 : 		this->_Alnod.deallocate(_Pnode, 1);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 1206 : 		_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1207 : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z$1
	ret	0
$LN6@Buynode@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z$1:

; 1208 : 		return (_Pnode);

	mov	eax, DWORD PTR __Pnode$[ebp]
$LN5@Buynode@2:

; 1209 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z$2:
	mov	eax, DWORD PTR __Vptr$223642[ebp]
	push	eax
	mov	ecx, DWORD PTR $T223645[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@PAU342@0ABURequest@CvDiplomacyRequests@@@Z ENDP ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Buynode
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Incsize@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Incsize@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Incsize@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	ENDS
;	COMDAT ?_Incsize@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
tv89 = -92						; size = 4
_this$ = -88						; size = 4
__Count$223701 = -84					; size = 4
$T223687 = -80						; size = 28
$T223686 = -52						; size = 40
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
?_Incsize@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEXI@Z PROC ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Incsize, COMDAT
; _this$ = ecx

; 1239 : 		{	// alter element count, with checking

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Incsize@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1240 : 		if (max_size() - _Mysize < _Count)

	mov	DWORD PTR __Count$223701[ebp], 82595524	; 04ec4ec4H
	cmp	DWORD PTR __Count$223701[ebp], 0
	jbe	SHORT $LN9@Incsize
	mov	eax, DWORD PTR __Count$223701[ebp]
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN5@Incsize
$LN9@Incsize:
	mov	DWORD PTR tv89[ebp], 1
$LN5@Incsize:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv89[ebp]
	sub	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Incsize

; 1241 : 			_THROW(length_error, "list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T223687[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T223686[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T223686[ebp], OFFSET ??_7logic_error@std@@6B@
	lea	eax, DWORD PTR $T223687[ebp]
	push	eax
	lea	ecx, DWORD PTR $T223686[ebp+12]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T223686[ebp], OFFSET ??_7length_error@std@@6B@
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T223686[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T223687[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@Incsize:

; 1242 : 		_Mysize += _Count;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN3@Incsize:

; 1243 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Incsize@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEXI@Z$0:
	lea	ecx, DWORD PTR $T223687[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Incsize@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEXI@Z$2:
	lea	ecx, DWORD PTR $T223686[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Incsize@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Incsize@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Incsize@?$list@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@IAEXI@Z ENDP ; std::list<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Incsize
PUBLIC	??$_Allocate@U_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Node>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 144  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Node>
	add	esp, 8

; 146  : 		}

	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R0?AVbad_alloc@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
xdata$x	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_Ebad_alloc@std@@UAEPAXI@Z ; std::bad_alloc::`vftable'
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
CONST	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T223736 = -16						; size = 4
$T223732 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Node>, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate
$LN3@Allocate:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 60					; 0000003cH
	jae	SHORT $LN2@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	mov	DWORD PTR $T223736[ebp], 0
	lea	eax, DWORD PTR $T223736[ebp]
	push	eax
	lea	ecx, DWORD PTR $T223732[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR $T223732[ebp], OFFSET ??_7bad_alloc@std@@6B@
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T223732[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 60					; 0000003cH
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate:

; 44   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@URequest@CvDiplomacyRequests@@V?$allocator@URequest@CvDiplomacyRequests@@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<CvDiplomacyRequests::Request,std::allocator<CvDiplomacyRequests::Request> >::_Node>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 63   : 	{	// delete if placement new fails

	push	ebp
	mov	ebp, esp

; 64   : 	}

	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0Request@CvDiplomacyRequests@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T223753 = -4						; size = 4
___that$ = 8						; size = 4
??0Request@CvDiplomacyRequests@@QAE@ABU01@@Z PROC	; CvDiplomacyRequests::Request::Request, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR $T223753[ebp], eax
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR $T223753[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR [edx+36], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR [edx+40], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR [edx+44], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR [edx+48], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0Request@CvDiplomacyRequests@@QAE@ABU01@@Z ENDP	; CvDiplomacyRequests::Request::Request
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx

; 34   : 		{	// return pointer to message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 		return (_Str.c_str());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 36   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN1@scalar@2
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 109  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@

; 110  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	edx, DWORD PTR ___flags$[ebp]
	and	edx, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0length_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0length_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0length_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0length_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
; Function compile flags: /Odtp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
END
