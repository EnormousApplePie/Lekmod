; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvDllUnitInfo.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05OCFELOIJ@1?40?40?$AA@			; `string'
CONST	SEGMENT
_guidICvUnknown DD 0d89ba82fH
	DW	09fa3H
	DW	04696H
	DB	0b3H
	DB	0f4H
	DB	052H
	DB	0bdH
	DB	0b1H
	DB	01H
	DB	0cfH
	DB	0b2H
_guidICvUnitInfo1 DD 078f0497aH
	DW	07a44H
	DW	049a0H
	DB	08dH
	DB	014H
	DB	058H
	DB	0aaH
	DB	0b8H
	DB	0c1H
	DB	028H
	DB	0b8H
CONST	ENDS
_DATA	SEGMENT
_CIV5_XP2_DLL_VERSION DD FLAT:??_C@_05OCFELOIJ@1?40?40?$AA@
_DATA	ENDS
;	COMDAT ??_C@_05OCFELOIJ@1?40?40?$AA@
CONST	SEGMENT
??_C@_05OCFELOIJ@1?40?40?$AA@ DB '1.0.0', 00H		; `string'
CONST	ENDS
PUBLIC	??_7CvDllUnitInfo@@6B@				; CvDllUnitInfo::`vftable'
PUBLIC	??_7ICvUnitInfo1@@6B@				; ICvUnitInfo1::`vftable'
PUBLIC	??_7ICvUnknown@@6B@				; ICvUnknown::`vftable'
PUBLIC	??0CvDllUnitInfo@@QAE@PAVCvUnitEntry@@@Z	; CvDllUnitInfo::CvDllUnitInfo
PUBLIC	?QueryInterface@CvDllUnitInfo@@UAGPAXU_GUID@@@Z	; CvDllUnitInfo::QueryInterface
PUBLIC	?Destroy@CvDllUnitInfo@@EAGXXZ			; CvDllUnitInfo::Destroy
PUBLIC	?GetCombat@CvDllUnitInfo@@UBGHXZ		; CvDllUnitInfo::GetCombat
PUBLIC	?GetDomainType@CvDllUnitInfo@@UBGHXZ		; CvDllUnitInfo::GetDomainType
PUBLIC	?GetType@CvDllUnitInfo@@UBGPBDXZ		; CvDllUnitInfo::GetType
PUBLIC	?GetText@CvDllUnitInfo@@UBGPBDXZ		; CvDllUnitInfo::GetText
PUBLIC	?GetMoveRate@CvDllUnitInfo@@UBG?AUUnitMoveRate@@H@Z ; CvDllUnitInfo::GetMoveRate
PUBLIC	?GetUnitArtInfoTag@CvDllUnitInfo@@UBGPBDXZ	; CvDllUnitInfo::GetUnitArtInfoTag
PUBLIC	?GetUnitArtInfoCulturalVariation@CvDllUnitInfo@@UBG_NXZ ; CvDllUnitInfo::GetUnitArtInfoCulturalVariation
PUBLIC	?GetUnitArtInfoEraVariation@CvDllUnitInfo@@UBG_NXZ ; CvDllUnitInfo::GetUnitArtInfoEraVariation
PUBLIC	?GetUnitFlagIconOffset@CvDllUnitInfo@@UBGHXZ	; CvDllUnitInfo::GetUnitFlagIconOffset
EXTRN	__purecall:PROC
;	COMDAT ??_7CvDllUnitInfo@@6B@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllunitinfo.cpp
CONST	SEGMENT
??_7CvDllUnitInfo@@6B@ DD FLAT:?QueryInterface@CvDllUnitInfo@@UAGPAXU_GUID@@@Z ; CvDllUnitInfo::`vftable'
	DD	FLAT:?Destroy@CvDllUnitInfo@@EAGXXZ
	DD	FLAT:?GetCombat@CvDllUnitInfo@@UBGHXZ
	DD	FLAT:?GetDomainType@CvDllUnitInfo@@UBGHXZ
	DD	FLAT:?GetType@CvDllUnitInfo@@UBGPBDXZ
	DD	FLAT:?GetText@CvDllUnitInfo@@UBGPBDXZ
	DD	FLAT:?GetMoveRate@CvDllUnitInfo@@UBG?AUUnitMoveRate@@H@Z
	DD	FLAT:?GetUnitArtInfoTag@CvDllUnitInfo@@UBGPBDXZ
	DD	FLAT:?GetUnitArtInfoCulturalVariation@CvDllUnitInfo@@UBG_NXZ
	DD	FLAT:?GetUnitArtInfoEraVariation@CvDllUnitInfo@@UBG_NXZ
	DD	FLAT:?GetUnitFlagIconOffset@CvDllUnitInfo@@UBGHXZ
CONST	ENDS
;	COMDAT ??_7ICvUnitInfo1@@6B@
CONST	SEGMENT
??_7ICvUnitInfo1@@6B@ DD FLAT:__purecall		; ICvUnitInfo1::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ICvUnknown@@6B@
CONST	SEGMENT
??_7ICvUnknown@@6B@ DD FLAT:__purecall			; ICvUnknown::`vftable'
	DD	FLAT:__purecall
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0CvDllUnitInfo@@QAE@PAVCvUnitEntry@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pUnitInfo$ = 8						; size = 4
??0CvDllUnitInfo@@QAE@PAVCvUnitEntry@@@Z PROC		; CvDllUnitInfo::CvDllUnitInfo, COMDAT
; _this$ = ecx

; 19   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnknown@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7ICvUnitInfo1@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7CvDllUnitInfo@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pUnitInfo$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 20   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CvDllUnitInfo@@QAE@PAVCvUnitEntry@@@Z ENDP		; CvDllUnitInfo::CvDllUnitInfo
_TEXT	ENDS
PUBLIC	??1CvDllUnitInfo@@QAE@XZ			; CvDllUnitInfo::~CvDllUnitInfo
; Function compile flags: /Odtp
;	COMDAT ??1CvDllUnitInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvDllUnitInfo@@QAE@XZ PROC				; CvDllUnitInfo::~CvDllUnitInfo, COMDAT
; _this$ = ecx

; 23   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvDllUnitInfo@@6B@

; 24   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1CvDllUnitInfo@@QAE@XZ ENDP				; CvDllUnitInfo::~CvDllUnitInfo
_TEXT	ENDS
PUBLIC	?IncrementReference@CvDllUnitInfo@@QAEIXZ	; CvDllUnitInfo::IncrementReference
; Function compile flags: /Odtp
;	COMDAT ?QueryInterface@CvDllUnitInfo@@UAGPAXU_GUID@@@Z
_TEXT	SEGMENT
tv90 = -88						; size = 4
tv161 = -84						; size = 4
tv85 = -80						; size = 4
tv137 = -76						; size = 4
$T217995 = -72						; size = 16
$T217994 = -56						; size = 16
$T217993 = -40						; size = 16
$T217992 = -20						; size = 16
_this$ = 8						; size = 4
_guidInterface$ = 12					; size = 16
?QueryInterface@CvDllUnitInfo@@UAGPAXU_GUID@@@Z PROC	; CvDllUnitInfo::QueryInterface, COMDAT

; 27   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	push	edi

; 28   : 	if(guidInterface == ICvUnknown::GetInterfaceId() ||
; 29   : 	        guidInterface == ICvUnitInfo1::GetInterfaceId())

	mov	eax, DWORD PTR _guidICvUnknown
	mov	DWORD PTR $T217993[ebp], eax
	mov	ecx, DWORD PTR _guidICvUnknown+4
	mov	DWORD PTR $T217993[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvUnknown+8
	mov	DWORD PTR $T217993[ebp+8], edx
	mov	eax, DWORD PTR _guidICvUnknown+12
	mov	DWORD PTR $T217993[ebp+12], eax
	mov	ecx, DWORD PTR $T217993[ebp]
	mov	DWORD PTR $T217992[ebp], ecx
	mov	edx, DWORD PTR $T217993[ebp+4]
	mov	DWORD PTR $T217992[ebp+4], edx
	mov	eax, DWORD PTR $T217993[ebp+8]
	mov	DWORD PTR $T217992[ebp+8], eax
	mov	ecx, DWORD PTR $T217993[ebp+12]
	mov	DWORD PTR $T217992[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T217992[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv137[ebp], edx
	repe cmpsb
	je	SHORT $LN17@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv137[ebp], eax
$LN17@QueryInter:
	mov	ecx, DWORD PTR tv137[ebp]
	mov	DWORD PTR tv85[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv85[ebp], 0
	sete	dl
	test	edx, edx
	jne	SHORT $LN1@QueryInter
	mov	eax, DWORD PTR _guidICvUnitInfo1
	mov	DWORD PTR $T217995[ebp], eax
	mov	ecx, DWORD PTR _guidICvUnitInfo1+4
	mov	DWORD PTR $T217995[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvUnitInfo1+8
	mov	DWORD PTR $T217995[ebp+8], edx
	mov	eax, DWORD PTR _guidICvUnitInfo1+12
	mov	DWORD PTR $T217995[ebp+12], eax
	mov	ecx, DWORD PTR $T217995[ebp]
	mov	DWORD PTR $T217994[ebp], ecx
	mov	edx, DWORD PTR $T217995[ebp+4]
	mov	DWORD PTR $T217994[ebp+4], edx
	mov	eax, DWORD PTR $T217995[ebp+8]
	mov	DWORD PTR $T217994[ebp+8], eax
	mov	ecx, DWORD PTR $T217995[ebp+12]
	mov	DWORD PTR $T217994[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T217994[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv161[ebp], edx
	repe cmpsb
	je	SHORT $LN18@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv161[ebp], eax
$LN18@QueryInter:
	mov	ecx, DWORD PTR tv161[ebp]
	mov	DWORD PTR tv90[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv90[ebp], 0
	sete	dl
	test	edx, edx
	je	SHORT $LN2@QueryInter
$LN1@QueryInter:

; 30   : 	{
; 31   : 		IncrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IncrementReference@CvDllUnitInfo@@QAEIXZ ; CvDllUnitInfo::IncrementReference

; 32   : 		return this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN3@QueryInter
$LN2@QueryInter:

; 33   : 	}
; 34   : 
; 35   : 	return NULL;

	xor	eax, eax
$LN3@QueryInter:

; 36   : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?QueryInterface@CvDllUnitInfo@@UAGPAXU_GUID@@@Z ENDP	; CvDllUnitInfo::QueryInterface
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IncrementReference@CvDllUnitInfo@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IncrementReference@CvDllUnitInfo@@QAEIXZ PROC		; CvDllUnitInfo::IncrementReference, COMDAT
; _this$ = ecx

; 39   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 40   : 	++m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 41   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 42   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IncrementReference@CvDllUnitInfo@@QAEIXZ ENDP		; CvDllUnitInfo::IncrementReference
_TEXT	ENDS
PUBLIC	??3CvDllUnitInfo@@SAXPAX@Z			; CvDllUnitInfo::operator delete
PUBLIC	?DecrementReference@CvDllUnitInfo@@QAEIXZ	; CvDllUnitInfo::DecrementReference
; Function compile flags: /Odtp
;	COMDAT ?DecrementReference@CvDllUnitInfo@@QAEIXZ
_TEXT	SEGMENT
tv70 = -16						; size = 4
_this$ = -12						; size = 4
$T218027 = -8						; size = 4
$T218026 = -4						; size = 4
?DecrementReference@CvDllUnitInfo@@QAEIXZ PROC		; CvDllUnitInfo::DecrementReference, COMDAT
; _this$ = ecx

; 45   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 46   : 	if(m_uiRefCount == 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	SHORT $LN2@DecrementR

; 47   : 	{
; 48   : 		delete this;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T218027[ebp], ecx
	mov	edx, DWORD PTR $T218027[ebp]
	mov	DWORD PTR $T218026[ebp], edx
	cmp	DWORD PTR $T218026[ebp], 0
	je	SHORT $LN5@DecrementR
	mov	ecx, DWORD PTR $T218026[ebp]
	call	??1CvDllUnitInfo@@QAE@XZ		; CvDllUnitInfo::~CvDllUnitInfo
	mov	eax, 1
	and	eax, 1
	je	SHORT $LN8@DecrementR
	mov	ecx, DWORD PTR $T218026[ebp]
	push	ecx
	call	??3CvDllUnitInfo@@SAXPAX@Z		; CvDllUnitInfo::operator delete
	add	esp, 4
$LN8@DecrementR:
	mov	edx, DWORD PTR $T218026[ebp]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN6@DecrementR
$LN5@DecrementR:
	mov	DWORD PTR tv70[ebp], 0
$LN6@DecrementR:

; 49   : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN3@DecrementR

; 50   : 	}
; 51   : 	else

	jmp	SHORT $LN3@DecrementR
$LN2@DecrementR:

; 52   : 	{
; 53   : 		--m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 54   : 		return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
$LN3@DecrementR:

; 55   : 	}
; 56   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DecrementReference@CvDllUnitInfo@@QAEIXZ ENDP		; CvDllUnitInfo::DecrementReference
_TEXT	ENDS
PUBLIC	?GetReferenceCount@CvDllUnitInfo@@QAEIXZ	; CvDllUnitInfo::GetReferenceCount
; Function compile flags: /Odtp
;	COMDAT ?GetReferenceCount@CvDllUnitInfo@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetReferenceCount@CvDllUnitInfo@@QAEIXZ PROC		; CvDllUnitInfo::GetReferenceCount, COMDAT
; _this$ = ecx

; 59   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 60   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 61   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetReferenceCount@CvDllUnitInfo@@QAEIXZ ENDP		; CvDllUnitInfo::GetReferenceCount
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Destroy@CvDllUnitInfo@@EAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Destroy@CvDllUnitInfo@@EAGXXZ PROC			; CvDllUnitInfo::Destroy, COMDAT

; 64   : {

	push	ebp
	mov	ebp, esp

; 65   : 	DecrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DecrementReference@CvDllUnitInfo@@QAEIXZ ; CvDllUnitInfo::DecrementReference

; 66   : }

	pop	ebp
	ret	4
?Destroy@CvDllUnitInfo@@EAGXXZ ENDP			; CvDllUnitInfo::Destroy
_TEXT	ENDS
EXTRN	?Free@CvDllGameContext@@SAXPAX@Z:PROC		; CvDllGameContext::Free
; Function compile flags: /Odtp
;	COMDAT ??3CvDllUnitInfo@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CvDllUnitInfo@@SAXPAX@Z PROC				; CvDllUnitInfo::operator delete, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp

; 70   : 	CvDllGameContext::Free(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4

; 71   : }

	pop	ebp
	ret	0
??3CvDllUnitInfo@@SAXPAX@Z ENDP				; CvDllUnitInfo::operator delete
_TEXT	ENDS
PUBLIC	??2CvDllUnitInfo@@SAPAXI@Z			; CvDllUnitInfo::operator new
EXTRN	?Allocate@CvDllGameContext@@SAPAXI@Z:PROC	; CvDllGameContext::Allocate
; Function compile flags: /Odtp
;	COMDAT ??2CvDllUnitInfo@@SAPAXI@Z
_TEXT	SEGMENT
_bytes$ = 8						; size = 4
??2CvDllUnitInfo@@SAPAXI@Z PROC				; CvDllUnitInfo::operator new, COMDAT

; 74   : {

	push	ebp
	mov	ebp, esp

; 75   : 	return CvDllGameContext::Allocate(bytes);

	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	call	?Allocate@CvDllGameContext@@SAPAXI@Z	; CvDllGameContext::Allocate
	add	esp, 4

; 76   : }

	pop	ebp
	ret	0
??2CvDllUnitInfo@@SAPAXI@Z ENDP				; CvDllUnitInfo::operator new
_TEXT	ENDS
EXTRN	?GetCombat@CvUnitEntry@@QBEHXZ:PROC		; CvUnitEntry::GetCombat
; Function compile flags: /Odtp
;	COMDAT ?GetCombat@CvDllUnitInfo@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetCombat@CvDllUnitInfo@@UBGHXZ PROC			; CvDllUnitInfo::GetCombat, COMDAT

; 79   : {

	push	ebp
	mov	ebp, esp

; 80   : 	return m_pUnitInfo->GetCombat();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetCombat@CvUnitEntry@@QBEHXZ		; CvUnitEntry::GetCombat

; 81   : }

	pop	ebp
	ret	4
?GetCombat@CvDllUnitInfo@@UBGHXZ ENDP			; CvDllUnitInfo::GetCombat
_TEXT	ENDS
EXTRN	?GetDomainType@CvUnitEntry@@QBEHXZ:PROC		; CvUnitEntry::GetDomainType
; Function compile flags: /Odtp
;	COMDAT ?GetDomainType@CvDllUnitInfo@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetDomainType@CvDllUnitInfo@@UBGHXZ PROC		; CvDllUnitInfo::GetDomainType, COMDAT

; 84   : {

	push	ebp
	mov	ebp, esp

; 85   : 	return m_pUnitInfo->GetDomainType();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetDomainType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetDomainType

; 86   : }

	pop	ebp
	ret	4
?GetDomainType@CvDllUnitInfo@@UBGHXZ ENDP		; CvDllUnitInfo::GetDomainType
_TEXT	ENDS
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Odtp
;	COMDAT ?GetType@CvDllUnitInfo@@UBGPBDXZ
_TEXT	SEGMENT
$T218051 = -4						; size = 4
_this$ = 8						; size = 4
?GetType@CvDllUnitInfo@@UBGPBDXZ PROC			; CvDllUnitInfo::GetType, COMDAT

; 89   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 90   : 	return m_pUnitInfo->GetType();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T218051[ebp], ecx
	mov	ecx, DWORD PTR $T218051[ebp]
	add	ecx, 176				; 000000b0H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 91   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetType@CvDllUnitInfo@@UBGPBDXZ ENDP			; CvDllUnitInfo::GetType
_TEXT	ENDS
EXTRN	?GetText@CvBaseInfo@@QBEPBDXZ:PROC		; CvBaseInfo::GetText
; Function compile flags: /Odtp
;	COMDAT ?GetText@CvDllUnitInfo@@UBGPBDXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetText@CvDllUnitInfo@@UBGPBDXZ PROC			; CvDllUnitInfo::GetText, COMDAT

; 94   : {

	push	ebp
	mov	ebp, esp

; 95   : 	return m_pUnitInfo->GetText();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetText@CvBaseInfo@@QBEPBDXZ		; CvBaseInfo::GetText

; 96   : }

	pop	ebp
	ret	4
?GetText@CvDllUnitInfo@@UBGPBDXZ ENDP			; CvDllUnitInfo::GetText
_TEXT	ENDS
EXTRN	?GetMoveRate@CvUnitEntry@@QBE?AUUnitMoveRate@@H@Z:PROC ; CvUnitEntry::GetMoveRate
; Function compile flags: /Odtp
;	COMDAT ?GetMoveRate@CvDllUnitInfo@@UBG?AUUnitMoveRate@@H@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
___$ReturnUdt$ = 12					; size = 4
_numHexes$ = 16						; size = 4
?GetMoveRate@CvDllUnitInfo@@UBG?AUUnitMoveRate@@H@Z PROC ; CvDllUnitInfo::GetMoveRate, COMDAT

; 99   : {

	push	ebp
	mov	ebp, esp

; 100  : 	return m_pUnitInfo->GetMoveRate(numHexes);

	mov	eax, DWORD PTR _numHexes$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?GetMoveRate@CvUnitEntry@@QBE?AUUnitMoveRate@@H@Z ; CvUnitEntry::GetMoveRate
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 101  : }

	pop	ebp
	ret	12					; 0000000cH
?GetMoveRate@CvDllUnitInfo@@UBG?AUUnitMoveRate@@H@Z ENDP ; CvDllUnitInfo::GetMoveRate
_TEXT	ENDS
EXTRN	?GetUnitArtInfoTag@CvUnitEntry@@QBEPBDXZ:PROC	; CvUnitEntry::GetUnitArtInfoTag
; Function compile flags: /Odtp
;	COMDAT ?GetUnitArtInfoTag@CvDllUnitInfo@@UBGPBDXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetUnitArtInfoTag@CvDllUnitInfo@@UBGPBDXZ PROC		; CvDllUnitInfo::GetUnitArtInfoTag, COMDAT

; 104  : {

	push	ebp
	mov	ebp, esp

; 105  : 	return m_pUnitInfo->GetUnitArtInfoTag();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetUnitArtInfoTag@CvUnitEntry@@QBEPBDXZ ; CvUnitEntry::GetUnitArtInfoTag

; 106  : }

	pop	ebp
	ret	4
?GetUnitArtInfoTag@CvDllUnitInfo@@UBGPBDXZ ENDP		; CvDllUnitInfo::GetUnitArtInfoTag
_TEXT	ENDS
EXTRN	?GetUnitArtInfoCulturalVariation@CvUnitEntry@@QBE?B_NXZ:PROC ; CvUnitEntry::GetUnitArtInfoCulturalVariation
; Function compile flags: /Odtp
;	COMDAT ?GetUnitArtInfoCulturalVariation@CvDllUnitInfo@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetUnitArtInfoCulturalVariation@CvDllUnitInfo@@UBG_NXZ PROC ; CvDllUnitInfo::GetUnitArtInfoCulturalVariation, COMDAT

; 109  : {

	push	ebp
	mov	ebp, esp

; 110  : 	return m_pUnitInfo->GetUnitArtInfoCulturalVariation();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetUnitArtInfoCulturalVariation@CvUnitEntry@@QBE?B_NXZ ; CvUnitEntry::GetUnitArtInfoCulturalVariation

; 111  : }

	pop	ebp
	ret	4
?GetUnitArtInfoCulturalVariation@CvDllUnitInfo@@UBG_NXZ ENDP ; CvDllUnitInfo::GetUnitArtInfoCulturalVariation
_TEXT	ENDS
EXTRN	?GetUnitArtInfoEraVariation@CvUnitEntry@@QBE?B_NXZ:PROC ; CvUnitEntry::GetUnitArtInfoEraVariation
; Function compile flags: /Odtp
;	COMDAT ?GetUnitArtInfoEraVariation@CvDllUnitInfo@@UBG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetUnitArtInfoEraVariation@CvDllUnitInfo@@UBG_NXZ PROC	; CvDllUnitInfo::GetUnitArtInfoEraVariation, COMDAT

; 114  : {

	push	ebp
	mov	ebp, esp

; 115  : 	return m_pUnitInfo->GetUnitArtInfoEraVariation();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetUnitArtInfoEraVariation@CvUnitEntry@@QBE?B_NXZ ; CvUnitEntry::GetUnitArtInfoEraVariation

; 116  : }

	pop	ebp
	ret	4
?GetUnitArtInfoEraVariation@CvDllUnitInfo@@UBG_NXZ ENDP	; CvDllUnitInfo::GetUnitArtInfoEraVariation
_TEXT	ENDS
EXTRN	?GetUnitFlagIconOffset@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetUnitFlagIconOffset
; Function compile flags: /Odtp
;	COMDAT ?GetUnitFlagIconOffset@CvDllUnitInfo@@UBGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetUnitFlagIconOffset@CvDllUnitInfo@@UBGHXZ PROC	; CvDllUnitInfo::GetUnitFlagIconOffset, COMDAT

; 119  : {

	push	ebp
	mov	ebp, esp

; 120  : 	return m_pUnitInfo->GetUnitFlagIconOffset();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?GetUnitFlagIconOffset@CvUnitEntry@@QBEHXZ ; CvUnitEntry::GetUnitFlagIconOffset

; 121  : }

	pop	ebp
	ret	4
?GetUnitFlagIconOffset@CvDllUnitInfo@@UBGHXZ ENDP	; CvDllUnitInfo::GetUnitFlagIconOffset
_TEXT	ENDS
END
