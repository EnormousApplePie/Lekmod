; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvDllFeatureInfo.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05OCFELOIJ@1?40?40?$AA@			; `string'
CONST	SEGMENT
_guidICvUnknown DD 0d89ba82fH
	DW	09fa3H
	DW	04696H
	DB	0b3H
	DB	0f4H
	DB	052H
	DB	0bdH
	DB	0b1H
	DB	01H
	DB	0cfH
	DB	0b2H
_guidICvFeatureInfo1 DD 0cca94937H
	DW	0d8f5H
	DW	04755H
	DB	0bcH
	DB	01dH
	DB	04dH
	DB	0aeH
	DB	0dH
	DB	0d7H
	DB	010H
	DB	08H
CONST	ENDS
_DATA	SEGMENT
_CIV5_XP2_DLL_VERSION DD FLAT:??_C@_05OCFELOIJ@1?40?40?$AA@
_DATA	ENDS
;	COMDAT ??_C@_05OCFELOIJ@1?40?40?$AA@
CONST	SEGMENT
??_C@_05OCFELOIJ@1?40?40?$AA@ DB '1.0.0', 00H		; `string'
CONST	ENDS
PUBLIC	??_7CvDllFeatureInfo@@6B@			; CvDllFeatureInfo::`vftable'
PUBLIC	??_7ICvFeatureInfo1@@6B@			; ICvFeatureInfo1::`vftable'
PUBLIC	??_7ICvUnknown@@6B@				; ICvUnknown::`vftable'
PUBLIC	??0CvDllFeatureInfo@@QAE@PAVCvFeatureInfo@@@Z	; CvDllFeatureInfo::CvDllFeatureInfo
PUBLIC	?QueryInterface@CvDllFeatureInfo@@UAGPAXU_GUID@@@Z ; CvDllFeatureInfo::QueryInterface
PUBLIC	?Destroy@CvDllFeatureInfo@@EAGXXZ		; CvDllFeatureInfo::Destroy
PUBLIC	?GetType@CvDllFeatureInfo@@UAGPBDXZ		; CvDllFeatureInfo::GetType
PUBLIC	?GetDescription@CvDllFeatureInfo@@UAGPBDXZ	; CvDllFeatureInfo::GetDescription
PUBLIC	?IsNoCoast@CvDllFeatureInfo@@UAG_NXZ		; CvDllFeatureInfo::IsNoCoast
PUBLIC	?IsNoRiver@CvDllFeatureInfo@@UAG_NXZ		; CvDllFeatureInfo::IsNoRiver
PUBLIC	?IsNoAdjacent@CvDllFeatureInfo@@UAG_NXZ		; CvDllFeatureInfo::IsNoAdjacent
PUBLIC	?IsRequiresFlatlands@CvDllFeatureInfo@@UAG_NXZ	; CvDllFeatureInfo::IsRequiresFlatlands
PUBLIC	?IsRequiresRiver@CvDllFeatureInfo@@UAG_NXZ	; CvDllFeatureInfo::IsRequiresRiver
PUBLIC	?IsNaturalWonder@CvDllFeatureInfo@@UAG_NXZ	; CvDllFeatureInfo::IsNaturalWonder
PUBLIC	?GetArtDefineTag@CvDllFeatureInfo@@UAGPBDXZ	; CvDllFeatureInfo::GetArtDefineTag
PUBLIC	?GetWorldSoundscapeScriptId@CvDllFeatureInfo@@UAGHXZ ; CvDllFeatureInfo::GetWorldSoundscapeScriptId
PUBLIC	?GetEffectTypeTag@CvDllFeatureInfo@@UAGPBDXZ	; CvDllFeatureInfo::GetEffectTypeTag
PUBLIC	?IsTerrain@CvDllFeatureInfo@@UAG_NH@Z		; CvDllFeatureInfo::IsTerrain
EXTRN	__purecall:PROC
;	COMDAT ??_7CvDllFeatureInfo@@6B@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvdllfeatureinfo.cpp
CONST	SEGMENT
??_7CvDllFeatureInfo@@6B@ DD FLAT:?QueryInterface@CvDllFeatureInfo@@UAGPAXU_GUID@@@Z ; CvDllFeatureInfo::`vftable'
	DD	FLAT:?Destroy@CvDllFeatureInfo@@EAGXXZ
	DD	FLAT:?GetType@CvDllFeatureInfo@@UAGPBDXZ
	DD	FLAT:?GetDescription@CvDllFeatureInfo@@UAGPBDXZ
	DD	FLAT:?IsNoCoast@CvDllFeatureInfo@@UAG_NXZ
	DD	FLAT:?IsNoRiver@CvDllFeatureInfo@@UAG_NXZ
	DD	FLAT:?IsNoAdjacent@CvDllFeatureInfo@@UAG_NXZ
	DD	FLAT:?IsRequiresFlatlands@CvDllFeatureInfo@@UAG_NXZ
	DD	FLAT:?IsRequiresRiver@CvDllFeatureInfo@@UAG_NXZ
	DD	FLAT:?IsNaturalWonder@CvDllFeatureInfo@@UAG_NXZ
	DD	FLAT:?GetArtDefineTag@CvDllFeatureInfo@@UAGPBDXZ
	DD	FLAT:?GetWorldSoundscapeScriptId@CvDllFeatureInfo@@UAGHXZ
	DD	FLAT:?GetEffectTypeTag@CvDllFeatureInfo@@UAGPBDXZ
	DD	FLAT:?IsTerrain@CvDllFeatureInfo@@UAG_NH@Z
CONST	ENDS
;	COMDAT ??_7ICvFeatureInfo1@@6B@
CONST	SEGMENT
??_7ICvFeatureInfo1@@6B@ DD FLAT:__purecall		; ICvFeatureInfo1::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ICvUnknown@@6B@
CONST	SEGMENT
??_7ICvUnknown@@6B@ DD FLAT:__purecall			; ICvUnknown::`vftable'
	DD	FLAT:__purecall
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ??0CvDllFeatureInfo@@QAE@PAVCvFeatureInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pFeatureInfo$ = 8					; size = 4
??0CvDllFeatureInfo@@QAE@PAVCvFeatureInfo@@@Z PROC	; CvDllFeatureInfo::CvDllFeatureInfo, COMDAT
; _this$ = ecx

; 19   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICvUnknown@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7ICvFeatureInfo1@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7CvDllFeatureInfo@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pFeatureInfo$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 20   : 	FAssertMsg(pFeatureInfo != NULL, "SHOULD NOT HAPPEN");
; 21   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CvDllFeatureInfo@@QAE@PAVCvFeatureInfo@@@Z ENDP	; CvDllFeatureInfo::CvDllFeatureInfo
_TEXT	ENDS
PUBLIC	??1CvDllFeatureInfo@@QAE@XZ			; CvDllFeatureInfo::~CvDllFeatureInfo
; Function compile flags: /Odtp
;	COMDAT ??1CvDllFeatureInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvDllFeatureInfo@@QAE@XZ PROC			; CvDllFeatureInfo::~CvDllFeatureInfo, COMDAT
; _this$ = ecx

; 24   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CvDllFeatureInfo@@6B@

; 25   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??1CvDllFeatureInfo@@QAE@XZ ENDP			; CvDllFeatureInfo::~CvDllFeatureInfo
_TEXT	ENDS
PUBLIC	?IncrementReference@CvDllFeatureInfo@@QAEIXZ	; CvDllFeatureInfo::IncrementReference
; Function compile flags: /Odtp
;	COMDAT ?QueryInterface@CvDllFeatureInfo@@UAGPAXU_GUID@@@Z
_TEXT	SEGMENT
tv90 = -88						; size = 4
tv161 = -84						; size = 4
tv85 = -80						; size = 4
tv137 = -76						; size = 4
$T218014 = -72						; size = 16
$T218013 = -56						; size = 16
$T218012 = -40						; size = 16
$T218011 = -20						; size = 16
_this$ = 8						; size = 4
_guidInterface$ = 12					; size = 16
?QueryInterface@CvDllFeatureInfo@@UAGPAXU_GUID@@@Z PROC	; CvDllFeatureInfo::QueryInterface, COMDAT

; 28   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	push	edi

; 29   : 	if(guidInterface == ICvUnknown::GetInterfaceId() ||
; 30   : 	        guidInterface == ICvFeatureInfo1::GetInterfaceId())

	mov	eax, DWORD PTR _guidICvUnknown
	mov	DWORD PTR $T218012[ebp], eax
	mov	ecx, DWORD PTR _guidICvUnknown+4
	mov	DWORD PTR $T218012[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvUnknown+8
	mov	DWORD PTR $T218012[ebp+8], edx
	mov	eax, DWORD PTR _guidICvUnknown+12
	mov	DWORD PTR $T218012[ebp+12], eax
	mov	ecx, DWORD PTR $T218012[ebp]
	mov	DWORD PTR $T218011[ebp], ecx
	mov	edx, DWORD PTR $T218012[ebp+4]
	mov	DWORD PTR $T218011[ebp+4], edx
	mov	eax, DWORD PTR $T218012[ebp+8]
	mov	DWORD PTR $T218011[ebp+8], eax
	mov	ecx, DWORD PTR $T218012[ebp+12]
	mov	DWORD PTR $T218011[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T218011[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv137[ebp], edx
	repe cmpsb
	je	SHORT $LN17@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv137[ebp], eax
$LN17@QueryInter:
	mov	ecx, DWORD PTR tv137[ebp]
	mov	DWORD PTR tv85[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv85[ebp], 0
	sete	dl
	test	edx, edx
	jne	SHORT $LN1@QueryInter
	mov	eax, DWORD PTR _guidICvFeatureInfo1
	mov	DWORD PTR $T218014[ebp], eax
	mov	ecx, DWORD PTR _guidICvFeatureInfo1+4
	mov	DWORD PTR $T218014[ebp+4], ecx
	mov	edx, DWORD PTR _guidICvFeatureInfo1+8
	mov	DWORD PTR $T218014[ebp+8], edx
	mov	eax, DWORD PTR _guidICvFeatureInfo1+12
	mov	DWORD PTR $T218014[ebp+12], eax
	mov	ecx, DWORD PTR $T218014[ebp]
	mov	DWORD PTR $T218013[ebp], ecx
	mov	edx, DWORD PTR $T218014[ebp+4]
	mov	DWORD PTR $T218013[ebp+4], edx
	mov	eax, DWORD PTR $T218014[ebp+8]
	mov	DWORD PTR $T218013[ebp+8], eax
	mov	ecx, DWORD PTR $T218014[ebp+12]
	mov	DWORD PTR $T218013[ebp+12], ecx
	mov	ecx, 16					; 00000010H
	lea	edi, DWORD PTR $T218013[ebp]
	lea	esi, DWORD PTR _guidInterface$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv161[ebp], edx
	repe cmpsb
	je	SHORT $LN18@QueryInter
	sbb	eax, eax
	sbb	eax, -1
	mov	DWORD PTR tv161[ebp], eax
$LN18@QueryInter:
	mov	ecx, DWORD PTR tv161[ebp]
	mov	DWORD PTR tv90[ebp], ecx
	xor	edx, edx
	cmp	DWORD PTR tv90[ebp], 0
	sete	dl
	test	edx, edx
	je	SHORT $LN2@QueryInter
$LN1@QueryInter:

; 31   : 	{
; 32   : 		IncrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IncrementReference@CvDllFeatureInfo@@QAEIXZ ; CvDllFeatureInfo::IncrementReference

; 33   : 		return this;

	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN3@QueryInter
$LN2@QueryInter:

; 34   : 	}
; 35   : 
; 36   : 	return NULL;

	xor	eax, eax
$LN3@QueryInter:

; 37   : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?QueryInterface@CvDllFeatureInfo@@UAGPAXU_GUID@@@Z ENDP	; CvDllFeatureInfo::QueryInterface
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?IncrementReference@CvDllFeatureInfo@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IncrementReference@CvDllFeatureInfo@@QAEIXZ PROC	; CvDllFeatureInfo::IncrementReference, COMDAT
; _this$ = ecx

; 40   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 	++m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 42   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 43   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IncrementReference@CvDllFeatureInfo@@QAEIXZ ENDP	; CvDllFeatureInfo::IncrementReference
_TEXT	ENDS
PUBLIC	??3CvDllFeatureInfo@@SAXPAX@Z			; CvDllFeatureInfo::operator delete
PUBLIC	?DecrementReference@CvDllFeatureInfo@@QAEIXZ	; CvDllFeatureInfo::DecrementReference
; Function compile flags: /Odtp
;	COMDAT ?DecrementReference@CvDllFeatureInfo@@QAEIXZ
_TEXT	SEGMENT
tv70 = -16						; size = 4
_this$ = -12						; size = 4
$T218046 = -8						; size = 4
$T218045 = -4						; size = 4
?DecrementReference@CvDllFeatureInfo@@QAEIXZ PROC	; CvDllFeatureInfo::DecrementReference, COMDAT
; _this$ = ecx

; 46   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 47   : 	if(m_uiRefCount == 1)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	SHORT $LN2@DecrementR

; 48   : 	{
; 49   : 		delete this;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T218046[ebp], ecx
	mov	edx, DWORD PTR $T218046[ebp]
	mov	DWORD PTR $T218045[ebp], edx
	cmp	DWORD PTR $T218045[ebp], 0
	je	SHORT $LN5@DecrementR
	mov	ecx, DWORD PTR $T218045[ebp]
	call	??1CvDllFeatureInfo@@QAE@XZ		; CvDllFeatureInfo::~CvDllFeatureInfo
	mov	eax, 1
	and	eax, 1
	je	SHORT $LN8@DecrementR
	mov	ecx, DWORD PTR $T218045[ebp]
	push	ecx
	call	??3CvDllFeatureInfo@@SAXPAX@Z		; CvDllFeatureInfo::operator delete
	add	esp, 4
$LN8@DecrementR:
	mov	edx, DWORD PTR $T218045[ebp]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN6@DecrementR
$LN5@DecrementR:
	mov	DWORD PTR tv70[ebp], 0
$LN6@DecrementR:

; 50   : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN3@DecrementR

; 51   : 	}
; 52   : 	else

	jmp	SHORT $LN3@DecrementR
$LN2@DecrementR:

; 53   : 	{
; 54   : 		--m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 55   : 		return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
$LN3@DecrementR:

; 56   : 	}
; 57   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DecrementReference@CvDllFeatureInfo@@QAEIXZ ENDP	; CvDllFeatureInfo::DecrementReference
_TEXT	ENDS
PUBLIC	?GetReferenceCount@CvDllFeatureInfo@@QAEIXZ	; CvDllFeatureInfo::GetReferenceCount
; Function compile flags: /Odtp
;	COMDAT ?GetReferenceCount@CvDllFeatureInfo@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetReferenceCount@CvDllFeatureInfo@@QAEIXZ PROC	; CvDllFeatureInfo::GetReferenceCount, COMDAT
; _this$ = ecx

; 60   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 61   : 	return m_uiRefCount;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 62   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetReferenceCount@CvDllFeatureInfo@@QAEIXZ ENDP	; CvDllFeatureInfo::GetReferenceCount
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?Destroy@CvDllFeatureInfo@@EAGXXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Destroy@CvDllFeatureInfo@@EAGXXZ PROC			; CvDllFeatureInfo::Destroy, COMDAT

; 65   : {

	push	ebp
	mov	ebp, esp

; 66   : 	DecrementReference();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DecrementReference@CvDllFeatureInfo@@QAEIXZ ; CvDllFeatureInfo::DecrementReference

; 67   : }

	pop	ebp
	ret	4
?Destroy@CvDllFeatureInfo@@EAGXXZ ENDP			; CvDllFeatureInfo::Destroy
_TEXT	ENDS
EXTRN	?Free@CvDllGameContext@@SAXPAX@Z:PROC		; CvDllGameContext::Free
; Function compile flags: /Odtp
;	COMDAT ??3CvDllFeatureInfo@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
??3CvDllFeatureInfo@@SAXPAX@Z PROC			; CvDllFeatureInfo::operator delete, COMDAT

; 70   : {

	push	ebp
	mov	ebp, esp

; 71   : 	CvDllGameContext::Free(p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?Free@CvDllGameContext@@SAXPAX@Z	; CvDllGameContext::Free
	add	esp, 4

; 72   : }

	pop	ebp
	ret	0
??3CvDllFeatureInfo@@SAXPAX@Z ENDP			; CvDllFeatureInfo::operator delete
_TEXT	ENDS
PUBLIC	??2CvDllFeatureInfo@@SAPAXI@Z			; CvDllFeatureInfo::operator new
EXTRN	?Allocate@CvDllGameContext@@SAPAXI@Z:PROC	; CvDllGameContext::Allocate
; Function compile flags: /Odtp
;	COMDAT ??2CvDllFeatureInfo@@SAPAXI@Z
_TEXT	SEGMENT
_bytes$ = 8						; size = 4
??2CvDllFeatureInfo@@SAPAXI@Z PROC			; CvDllFeatureInfo::operator new, COMDAT

; 75   : {

	push	ebp
	mov	ebp, esp

; 76   : 	return CvDllGameContext::Allocate(bytes);

	mov	eax, DWORD PTR _bytes$[ebp]
	push	eax
	call	?Allocate@CvDllGameContext@@SAPAXI@Z	; CvDllGameContext::Allocate
	add	esp, 4

; 77   : }

	pop	ebp
	ret	0
??2CvDllFeatureInfo@@SAPAXI@Z ENDP			; CvDllFeatureInfo::operator new
_TEXT	ENDS
PUBLIC	?GetInstance@CvDllFeatureInfo@@QAEPAVCvFeatureInfo@@XZ ; CvDllFeatureInfo::GetInstance
; Function compile flags: /Odtp
;	COMDAT ?GetInstance@CvDllFeatureInfo@@QAEPAVCvFeatureInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetInstance@CvDllFeatureInfo@@QAEPAVCvFeatureInfo@@XZ PROC ; CvDllFeatureInfo::GetInstance, COMDAT
; _this$ = ecx

; 80   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 81   : 	return m_pFeatureInfo;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 82   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetInstance@CvDllFeatureInfo@@QAEPAVCvFeatureInfo@@XZ ENDP ; CvDllFeatureInfo::GetInstance
_TEXT	ENDS
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Odtp
;	COMDAT ?GetType@CvDllFeatureInfo@@UAGPBDXZ
_TEXT	SEGMENT
$T218068 = -4						; size = 4
_this$ = 8						; size = 4
?GetType@CvDllFeatureInfo@@UAGPBDXZ PROC		; CvDllFeatureInfo::GetType, COMDAT

; 85   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 86   : 	return m_pFeatureInfo->GetType();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T218068[ebp], ecx
	mov	ecx, DWORD PTR $T218068[ebp]
	add	ecx, 176				; 000000b0H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 87   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetType@CvDllFeatureInfo@@UAGPBDXZ ENDP		; CvDllFeatureInfo::GetType
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?GetDescription@CvDllFeatureInfo@@UAGPBDXZ
_TEXT	SEGMENT
$T218074 = -4						; size = 4
_this$ = 8						; size = 4
?GetDescription@CvDllFeatureInfo@@UAGPBDXZ PROC		; CvDllFeatureInfo::GetDescription, COMDAT

; 90   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 91   : 	return m_pFeatureInfo->GetDescription();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T218074[ebp], ecx
	mov	ecx, DWORD PTR $T218074[ebp]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ

; 92   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetDescription@CvDllFeatureInfo@@UAGPBDXZ ENDP		; CvDllFeatureInfo::GetDescription
_TEXT	ENDS
EXTRN	?isNoCoast@CvFeatureInfo@@QBE_NXZ:PROC		; CvFeatureInfo::isNoCoast
; Function compile flags: /Odtp
;	COMDAT ?IsNoCoast@CvDllFeatureInfo@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsNoCoast@CvDllFeatureInfo@@UAG_NXZ PROC		; CvDllFeatureInfo::IsNoCoast, COMDAT

; 95   : {

	push	ebp
	mov	ebp, esp

; 96   : 	return m_pFeatureInfo->isNoCoast();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isNoCoast@CvFeatureInfo@@QBE_NXZ	; CvFeatureInfo::isNoCoast

; 97   : }

	pop	ebp
	ret	4
?IsNoCoast@CvDllFeatureInfo@@UAG_NXZ ENDP		; CvDllFeatureInfo::IsNoCoast
_TEXT	ENDS
EXTRN	?isNoRiver@CvFeatureInfo@@QBE_NXZ:PROC		; CvFeatureInfo::isNoRiver
; Function compile flags: /Odtp
;	COMDAT ?IsNoRiver@CvDllFeatureInfo@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsNoRiver@CvDllFeatureInfo@@UAG_NXZ PROC		; CvDllFeatureInfo::IsNoRiver, COMDAT

; 100  : {

	push	ebp
	mov	ebp, esp

; 101  : 	return m_pFeatureInfo->isNoRiver();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isNoRiver@CvFeatureInfo@@QBE_NXZ	; CvFeatureInfo::isNoRiver

; 102  : }

	pop	ebp
	ret	4
?IsNoRiver@CvDllFeatureInfo@@UAG_NXZ ENDP		; CvDllFeatureInfo::IsNoRiver
_TEXT	ENDS
EXTRN	?isNoAdjacent@CvFeatureInfo@@QBE_NXZ:PROC	; CvFeatureInfo::isNoAdjacent
; Function compile flags: /Odtp
;	COMDAT ?IsNoAdjacent@CvDllFeatureInfo@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsNoAdjacent@CvDllFeatureInfo@@UAG_NXZ PROC		; CvDllFeatureInfo::IsNoAdjacent, COMDAT

; 105  : {

	push	ebp
	mov	ebp, esp

; 106  : 	return m_pFeatureInfo->isNoAdjacent();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isNoAdjacent@CvFeatureInfo@@QBE_NXZ	; CvFeatureInfo::isNoAdjacent

; 107  : }

	pop	ebp
	ret	4
?IsNoAdjacent@CvDllFeatureInfo@@UAG_NXZ ENDP		; CvDllFeatureInfo::IsNoAdjacent
_TEXT	ENDS
EXTRN	?isRequiresFlatlands@CvFeatureInfo@@QBE_NXZ:PROC ; CvFeatureInfo::isRequiresFlatlands
; Function compile flags: /Odtp
;	COMDAT ?IsRequiresFlatlands@CvDllFeatureInfo@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsRequiresFlatlands@CvDllFeatureInfo@@UAG_NXZ PROC	; CvDllFeatureInfo::IsRequiresFlatlands, COMDAT

; 110  : {

	push	ebp
	mov	ebp, esp

; 111  : 	return m_pFeatureInfo->isRequiresFlatlands();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isRequiresFlatlands@CvFeatureInfo@@QBE_NXZ ; CvFeatureInfo::isRequiresFlatlands

; 112  : }

	pop	ebp
	ret	4
?IsRequiresFlatlands@CvDllFeatureInfo@@UAG_NXZ ENDP	; CvDllFeatureInfo::IsRequiresFlatlands
_TEXT	ENDS
EXTRN	?isRequiresRiver@CvFeatureInfo@@QBE_NXZ:PROC	; CvFeatureInfo::isRequiresRiver
; Function compile flags: /Odtp
;	COMDAT ?IsRequiresRiver@CvDllFeatureInfo@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsRequiresRiver@CvDllFeatureInfo@@UAG_NXZ PROC		; CvDllFeatureInfo::IsRequiresRiver, COMDAT

; 115  : {

	push	ebp
	mov	ebp, esp

; 116  : 	return m_pFeatureInfo->isRequiresRiver();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?isRequiresRiver@CvFeatureInfo@@QBE_NXZ	; CvFeatureInfo::isRequiresRiver

; 117  : }

	pop	ebp
	ret	4
?IsRequiresRiver@CvDllFeatureInfo@@UAG_NXZ ENDP		; CvDllFeatureInfo::IsRequiresRiver
_TEXT	ENDS
EXTRN	?IsNaturalWonder@CvFeatureInfo@@QBE_NXZ:PROC	; CvFeatureInfo::IsNaturalWonder
; Function compile flags: /Odtp
;	COMDAT ?IsNaturalWonder@CvDllFeatureInfo@@UAG_NXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?IsNaturalWonder@CvDllFeatureInfo@@UAG_NXZ PROC		; CvDllFeatureInfo::IsNaturalWonder, COMDAT

; 120  : {

	push	ebp
	mov	ebp, esp

; 121  : 	return m_pFeatureInfo->IsNaturalWonder();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?IsNaturalWonder@CvFeatureInfo@@QBE_NXZ	; CvFeatureInfo::IsNaturalWonder

; 122  : }

	pop	ebp
	ret	4
?IsNaturalWonder@CvDllFeatureInfo@@UAG_NXZ ENDP		; CvDllFeatureInfo::IsNaturalWonder
_TEXT	ENDS
EXTRN	?getArtDefineTag@CvFeatureInfo@@QBEPBDXZ:PROC	; CvFeatureInfo::getArtDefineTag
; Function compile flags: /Odtp
;	COMDAT ?GetArtDefineTag@CvDllFeatureInfo@@UAGPBDXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetArtDefineTag@CvDllFeatureInfo@@UAGPBDXZ PROC	; CvDllFeatureInfo::GetArtDefineTag, COMDAT

; 125  : {

	push	ebp
	mov	ebp, esp

; 126  : 	return m_pFeatureInfo->getArtDefineTag();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getArtDefineTag@CvFeatureInfo@@QBEPBDXZ ; CvFeatureInfo::getArtDefineTag

; 127  : }

	pop	ebp
	ret	4
?GetArtDefineTag@CvDllFeatureInfo@@UAGPBDXZ ENDP	; CvDllFeatureInfo::GetArtDefineTag
_TEXT	ENDS
EXTRN	?getWorldSoundscapeScriptId@CvFeatureInfo@@QBEHXZ:PROC ; CvFeatureInfo::getWorldSoundscapeScriptId
; Function compile flags: /Odtp
;	COMDAT ?GetWorldSoundscapeScriptId@CvDllFeatureInfo@@UAGHXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetWorldSoundscapeScriptId@CvDllFeatureInfo@@UAGHXZ PROC ; CvDllFeatureInfo::GetWorldSoundscapeScriptId, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp

; 131  : 	return m_pFeatureInfo->getWorldSoundscapeScriptId();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getWorldSoundscapeScriptId@CvFeatureInfo@@QBEHXZ ; CvFeatureInfo::getWorldSoundscapeScriptId

; 132  : }

	pop	ebp
	ret	4
?GetWorldSoundscapeScriptId@CvDllFeatureInfo@@UAGHXZ ENDP ; CvDllFeatureInfo::GetWorldSoundscapeScriptId
_TEXT	ENDS
EXTRN	?getEffectTypeTag@CvFeatureInfo@@QBEPBDXZ:PROC	; CvFeatureInfo::getEffectTypeTag
; Function compile flags: /Odtp
;	COMDAT ?GetEffectTypeTag@CvDllFeatureInfo@@UAGPBDXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetEffectTypeTag@CvDllFeatureInfo@@UAGPBDXZ PROC	; CvDllFeatureInfo::GetEffectTypeTag, COMDAT

; 135  : {

	push	ebp
	mov	ebp, esp

; 136  : 	return m_pFeatureInfo->getEffectTypeTag();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?getEffectTypeTag@CvFeatureInfo@@QBEPBDXZ ; CvFeatureInfo::getEffectTypeTag

; 137  : }

	pop	ebp
	ret	4
?GetEffectTypeTag@CvDllFeatureInfo@@UAGPBDXZ ENDP	; CvDllFeatureInfo::GetEffectTypeTag
_TEXT	ENDS
EXTRN	?isTerrain@CvFeatureInfo@@QBE_NH@Z:PROC		; CvFeatureInfo::isTerrain
; Function compile flags: /Odtp
;	COMDAT ?IsTerrain@CvDllFeatureInfo@@UAG_NH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_i$ = 12						; size = 4
?IsTerrain@CvDllFeatureInfo@@UAG_NH@Z PROC		; CvDllFeatureInfo::IsTerrain, COMDAT

; 140  : {

	push	ebp
	mov	ebp, esp

; 141  : 	return m_pFeatureInfo->isTerrain(i);

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?isTerrain@CvFeatureInfo@@QBE_NH@Z	; CvFeatureInfo::isTerrain

; 142  : }

	pop	ebp
	ret	8
?IsTerrain@CvDllFeatureInfo@@UAG_NH@Z ENDP		; CvDllFeatureInfo::IsTerrain
_TEXT	ENDS
END
