; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	D:\sources\Lekmod_git\checkout\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvAchievementUnlocker.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0CF@IGNANIEL@b103d2e0?93aab?940d7?9a2f3?9375d2eab@ ; `string'
PUBLIC	?NO_QUEST_DATA@CvMinorCivQuest@@2HB		; CvMinorCivQuest::NO_QUEST_DATA
PUBLIC	?NO_TURN@CvMinorCivQuest@@2HB			; CvMinorCivQuest::NO_TURN
PUBLIC	?ms_iNumImprovementsPillagedPerTurn@CvAchievementUnlocker@@0HA ; CvAchievementUnlocker::ms_iNumImprovementsPillagedPerTurn
_BSS	SEGMENT
?ms_iNumImprovementsPillagedPerTurn@CvAchievementUnlocker@@0HA DD 01H DUP (?) ; CvAchievementUnlocker::ms_iNumImprovementsPillagedPerTurn
_BSS	ENDS
CONST	SEGMENT
_CIV5_XP1_SCENARIO3_MODID DD FLAT:??_C@_0CF@IGNANIEL@b103d2e0?93aab?940d7?9a2f3?9375d2eab@
CONST	ENDS
;	COMDAT ??_C@_0CF@IGNANIEL@b103d2e0?93aab?940d7?9a2f3?9375d2eab@
CONST	SEGMENT
??_C@_0CF@IGNANIEL@b103d2e0?93aab?940d7?9a2f3?9375d2eab@ DB 'b103d2e0-3aa'
	DB	'b-40d7-a2f3-375d2eabfcaf', 00H		; `string'
CONST	ENDS
;	COMDAT ?NO_TURN@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_TURN@CvMinorCivQuest@@2HB DD 0ffffffffH		; CvMinorCivQuest::NO_TURN
CONST	ENDS
;	COMDAT ?NO_QUEST_DATA@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_QUEST_DATA@CvMinorCivQuest@@2HB DD 0ffffffffH	; CvMinorCivQuest::NO_QUEST_DATA
CONST	ENDS
PUBLIC	?Check_PSG@CvAchievementUnlocker@@SA_NXZ	; CvAchievementUnlocker::Check_PSG
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvachievementunlocker.cpp
;	COMDAT ?Check_PSG@CvAchievementUnlocker@@SA_NXZ
_TEXT	SEGMENT
tv151 = -48						; size = 4
tv133 = -44						; size = 4
tv86 = -40						; size = 4
tv71 = -36						; size = 4
$T218619 = -32						; size = 4
$T218615 = -28						; size = 4
$T218611 = -24						; size = 4
$T218607 = -20						; size = 4
_iArmyStat$ = -16					; size = 4
_iGeneralsStat$ = -12					; size = 4
_PSG_STAT_MATCH_VALUE$ = -8				; size = 4
_iWinsStat$ = -4					; size = 4
?Check_PSG@CvAchievementUnlocker@@SA_NXZ PROC		; CvAchievementUnlocker::Check_PSG, COMDAT

; 33   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H

; 34   : 	const int PSG_STAT_MATCH_VALUE = 100;

	mov	DWORD PTR _PSG_STAT_MATCH_VALUE$[ebp], 100 ; 00000064H

; 35   : 
; 36   : 	int32 iGeneralsStat = 0;

	mov	DWORD PTR _iGeneralsStat$[ebp], 0

; 37   : 	int32 iWinsStat = 0;

	mov	DWORD PTR _iWinsStat$[ebp], 0

; 38   : 	int32 iArmyStat = 0;

	mov	DWORD PTR _iArmyStat$[ebp], 0

; 39   : 	if(gDLL->GetSteamStat(ESTEAMSTAT_GREATGENERALS, &iGeneralsStat) &&
; 40   : 	        gDLL->GetSteamStat(ESTEAMSTAT_TOTAL_WINS, &iWinsStat) &&
; 41   : 	        gDLL->GetSteamStat(ESTEAMSTAT_STANDINGARMY, &iArmyStat))

	mov	eax, DWORD PTR $T218607[ebp]
	mov	DWORD PTR tv71[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv71[ebp], ecx
	lea	edx, DWORD PTR _iGeneralsStat$[ebp]
	push	edx
	push	123					; 0000007bH
	mov	eax, DWORD PTR tv71[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv71[ebp]
	mov	eax, DWORD PTR [edx+836]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	$LN2@Check_PSG
	mov	edx, DWORD PTR $T218611[ebp]
	mov	DWORD PTR tv86[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv86[ebp], eax
	lea	ecx, DWORD PTR _iWinsStat$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR tv86[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv86[ebp]
	mov	edx, DWORD PTR [eax+836]
	call	edx
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Check_PSG
	mov	ecx, DWORD PTR $T218615[ebp]
	mov	DWORD PTR tv133[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv133[ebp], edx
	lea	eax, DWORD PTR _iArmyStat$[ebp]
	push	eax
	push	124					; 0000007cH
	mov	ecx, DWORD PTR tv133[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv133[ebp]
	mov	eax, DWORD PTR [edx+836]
	call	eax
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Check_PSG

; 42   : 	{
; 43   : 		if(iGeneralsStat >= PSG_STAT_MATCH_VALUE && iWinsStat >= PSG_STAT_MATCH_VALUE && iArmyStat >= PSG_STAT_MATCH_VALUE)

	cmp	DWORD PTR _iGeneralsStat$[ebp], 100	; 00000064H
	jl	SHORT $LN2@Check_PSG
	cmp	DWORD PTR _iWinsStat$[ebp], 100		; 00000064H
	jl	SHORT $LN2@Check_PSG
	cmp	DWORD PTR _iArmyStat$[ebp], 100		; 00000064H
	jl	SHORT $LN2@Check_PSG

; 44   : 		{
; 45   : 			gDLL->UnlockAchievement(ACHIEVEMENT_PSG);

	mov	edx, DWORD PTR $T218619[ebp]
	mov	DWORD PTR tv151[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv151[ebp], eax
	push	119					; 00000077H
	mov	ecx, DWORD PTR tv151[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv151[ebp]
	mov	eax, DWORD PTR [edx+828]
	call	eax

; 46   : 			return true;

	mov	al, 1
	jmp	SHORT $LN3@Check_PSG
$LN2@Check_PSG:

; 47   : 		}
; 48   : 	}
; 49   : 	return false;

	xor	al, al
$LN3@Check_PSG:

; 50   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Check_PSG@CvAchievementUnlocker@@SA_NXZ ENDP		; CvAchievementUnlocker::Check_PSG
_TEXT	ENDS
PUBLIC	?FarmImprovementPillaged@CvAchievementUnlocker@@SAXXZ ; CvAchievementUnlocker::FarmImprovementPillaged
; Function compile flags: /Odtp
;	COMDAT ?FarmImprovementPillaged@CvAchievementUnlocker@@SAXXZ
_TEXT	SEGMENT
tv73 = -8						; size = 4
$T218625 = -4						; size = 4
?FarmImprovementPillaged@CvAchievementUnlocker@@SAXXZ PROC ; CvAchievementUnlocker::FarmImprovementPillaged, COMDAT

; 53   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 54   : 	ms_iNumImprovementsPillagedPerTurn++;

	mov	eax, DWORD PTR ?ms_iNumImprovementsPillagedPerTurn@CvAchievementUnlocker@@0HA ; CvAchievementUnlocker::ms_iNumImprovementsPillagedPerTurn
	add	eax, 1
	mov	DWORD PTR ?ms_iNumImprovementsPillagedPerTurn@CvAchievementUnlocker@@0HA, eax ; CvAchievementUnlocker::ms_iNumImprovementsPillagedPerTurn

; 55   : 
; 56   : 	if(ms_iNumImprovementsPillagedPerTurn >= 9)

	cmp	DWORD PTR ?ms_iNumImprovementsPillagedPerTurn@CvAchievementUnlocker@@0HA, 9 ; CvAchievementUnlocker::ms_iNumImprovementsPillagedPerTurn
	jl	SHORT $LN2@FarmImprov

; 57   : 		gDLL->UnlockAchievement(ACHIEVEMENT_SCENARIO_04_PILLAGE);

	mov	ecx, DWORD PTR $T218625[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv73[ebp], edx
	push	152					; 00000098H
	mov	eax, DWORD PTR tv73[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv73[ebp]
	mov	eax, DWORD PTR [edx+828]
	call	eax
$LN2@FarmImprov:

; 58   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FarmImprovementPillaged@CvAchievementUnlocker@@SAXXZ ENDP ; CvAchievementUnlocker::FarmImprovementPillaged
_TEXT	ENDS
PUBLIC	?EndTurn@CvAchievementUnlocker@@SAXXZ		; CvAchievementUnlocker::EndTurn
; Function compile flags: /Odtp
;	COMDAT ?EndTurn@CvAchievementUnlocker@@SAXXZ
_TEXT	SEGMENT
?EndTurn@CvAchievementUnlocker@@SAXXZ PROC		; CvAchievementUnlocker::EndTurn, COMDAT

; 61   : {

	push	ebp
	mov	ebp, esp

; 62   : 	//Reset the per turn counters.
; 63   : 	ms_iNumImprovementsPillagedPerTurn = 0;

	mov	DWORD PTR ?ms_iNumImprovementsPillagedPerTurn@CvAchievementUnlocker@@0HA, 0 ; CvAchievementUnlocker::ms_iNumImprovementsPillagedPerTurn

; 64   : }

	pop	ebp
	ret	0
?EndTurn@CvAchievementUnlocker@@SAXXZ ENDP		; CvAchievementUnlocker::EndTurn
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
PUBLIC	??_C@_0BB@OLCMEIBP@LEADER_ALEXANDER?$AA@	; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z ; CvAchievementUnlocker::AlexanderConquest
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	?isMinorCiv@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isMinorCiv
EXTRN	?isBarbarian@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isBarbarian
EXTRN	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isHasMet
EXTRN	?m_aTeams@CvTeam@@1PAV1@A:DWORD			; CvTeam::m_aTeams
EXTRN	?getGameTurnYear@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurnYear
EXTRN	__imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	?getLeaderTypeKey@CvPlayer@@QBEPBDXZ:PROC	; CvPlayer::getLeaderTypeKey
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
EXTRN	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ:PROC ; CvGame::getActivePlayer
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_0BB@OLCMEIBP@LEADER_ALEXANDER?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
CONST	SEGMENT
??_C@_0BB@OLCMEIBP@LEADER_ALEXANDER?$AA@ DB 'LEADER_ALEXANDER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z$0
__ehfuncinfo$?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvachievementunlocker.cpp
xdata$x	ENDS
;	COMDAT ?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z
_TEXT	SEGMENT
tv184 = -116						; size = 4
tv197 = -112						; size = 4
$T218717 = -108						; size = 4
$T218709 = -104						; size = 4
$T218700 = -100						; size = 4
$T218699 = -96						; size = 4
$T218695 = -92						; size = 4
$T218686 = -85						; size = 1
$T218677 = -84						; size = 4
$T218673 = -80						; size = 4
$T218664 = -76						; size = 4
$T218655 = -72						; size = 4
$T218654 = -68						; size = 4
$T218647 = -64						; size = 4
$T218638 = -60						; size = 4
_pPlayer$218240 = -56					; size = 4
_iPlayerLoop$218236 = -52				; size = 4
_szLeaderName$218230 = -48				; size = 28
__$ArrayPad$ = -20					; size = 4
_kGame$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z PROC ; CvAchievementUnlocker::AlexanderConquest, COMDAT

; 68   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 104				; 00000068H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 69   : 	//Test For Alexander Conquest
; 70   : 	CvGame& kGame = GC.getGame();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _kGame$[ebp], eax

; 71   : 	if (ePlayer == kGame.getActivePlayer())

	mov	ecx, DWORD PTR _kGame$[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR _ePlayer$[ebp], eax
	jne	$LN10@AlexanderC

; 72   : 	{
; 73   : 		CvString szLeaderName = (CvString)GET_PLAYER(ePlayer).getLeaderTypeKey();

	mov	ecx, DWORD PTR _ePlayer$[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T218638[ebp], ecx
	mov	ecx, DWORD PTR $T218638[ebp]
	call	?getLeaderTypeKey@CvPlayer@@QBEPBDXZ	; CvPlayer::getLeaderTypeKey
	mov	DWORD PTR $T218647[ebp], eax
	cmp	DWORD PTR $T218647[ebp], 0
	je	SHORT $LN19@AlexanderC
	mov	edx, DWORD PTR $T218647[ebp]
	mov	DWORD PTR tv197[ebp], edx
	jmp	SHORT $LN20@AlexanderC
$LN19@AlexanderC:
	mov	DWORD PTR tv197[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN20@AlexanderC:
	mov	eax, DWORD PTR tv197[ebp]
	push	eax
	lea	ecx, DWORD PTR _szLeaderName$218230[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 74   : 		if(szLeaderName == "LEADER_ALEXANDER")

	push	OFFSET ??_C@_0BB@OLCMEIBP@LEADER_ALEXANDER?$AA@
	lea	ecx, DWORD PTR _szLeaderName$218230[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN8@AlexanderC

; 75   : 		{
; 76   : 			if(kGame.getGameTurnYear() <= 350)

	mov	ecx, DWORD PTR _kGame$[ebp]
	call	?getGameTurnYear@CvGame@@QAEHXZ		; CvGame::getGameTurnYear
	cmp	eax, 350				; 0000015eH
	jg	$LN8@AlexanderC

; 77   : 			{
; 78   : 				for(int iPlayerLoop = 0; iPlayerLoop < MAX_PLAYERS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$218236[ebp], 0
	jmp	SHORT $LN6@AlexanderC
$LN5@AlexanderC:
	mov	eax, DWORD PTR _iPlayerLoop$218236[ebp]
	add	eax, 1
	mov	DWORD PTR _iPlayerLoop$218236[ebp], eax
$LN6@AlexanderC:
	cmp	DWORD PTR _iPlayerLoop$218236[ebp], 64	; 00000040H
	jge	$LN4@AlexanderC

; 79   : 				{
; 80   : 					CvPlayer* pPlayer = &GET_PLAYER((PlayerTypes) iPlayerLoop);

	mov	ecx, DWORD PTR _iPlayerLoop$218236[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pPlayer$218240[ebp], ecx

; 81   : 
; 82   : 					//All known players must be dead and killed by us
; 83   : 					if(GET_TEAM(pPlayer->getTeam()).isHasMet(GET_PLAYER(kGame.getActivePlayer()).getTeam()))

	mov	ecx, DWORD PTR _kGame$[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	mov	DWORD PTR $T218654[ebp], eax
	mov	edx, DWORD PTR $T218654[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T218655[ebp], edx
	mov	eax, DWORD PTR $T218655[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T218664[ebp], eax
	mov	edx, DWORD PTR _pPlayer$218240[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ; CvPreGame::teamType
	add	esp, 4
	mov	DWORD PTR $T218673[ebp], eax
	mov	ecx, DWORD PTR $T218673[ebp]
	imul	ecx, 2984				; 00000ba8H
	add	ecx, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR $T218677[ebp], ecx
	mov	edx, DWORD PTR $T218664[ebp]
	push	edx
	mov	ecx, DWORD PTR $T218677[ebp]
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@AlexanderC

; 84   : 					{
; 85   : 						if(!pPlayer->isBarbarian() && !pPlayer->isMinorCiv())

	mov	ecx, DWORD PTR _pPlayer$218240[ebp]
	call	?isBarbarian@CvPlayer@@QBE_NXZ		; CvPlayer::isBarbarian
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@AlexanderC
	mov	ecx, DWORD PTR _pPlayer$218240[ebp]
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@AlexanderC

; 86   : 						{
; 87   : 							if(pPlayer->isAlive() && pPlayer->GetID() != GET_PLAYER(kGame.getActivePlayer()).GetID())

	mov	eax, DWORD PTR _pPlayer$218240[ebp]
	mov	cl, BYTE PTR [eax+2256]
	mov	BYTE PTR $T218686[ebp], cl
	movzx	edx, BYTE PTR $T218686[ebp]
	test	edx, edx
	je	SHORT $LN3@AlexanderC
	mov	eax, DWORD PTR _pPlayer$218240[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T218695[ebp], ecx
	mov	ecx, DWORD PTR _kGame$[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	mov	DWORD PTR $T218699[ebp], eax
	mov	edx, DWORD PTR $T218699[ebp]
	imul	edx, 63236				; 0000f704H
	add	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR $T218700[ebp], edx
	mov	eax, DWORD PTR $T218700[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T218709[ebp], ecx
	mov	edx, DWORD PTR $T218695[ebp]
	cmp	edx, DWORD PTR $T218709[ebp]
	je	SHORT $LN3@AlexanderC

; 88   : 							{
; 89   : 								return;	// Nope.

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _szLeaderName$218230[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	SHORT $LN10@AlexanderC
$LN3@AlexanderC:

; 90   : 							}
; 91   : 						}
; 92   : 					}
; 93   : 				}

	jmp	$LN5@AlexanderC
$LN4@AlexanderC:

; 94   : 				// Yep.
; 95   : 				gDLL->UnlockAchievement(ACHIEVEMENT_SPECIAL_CONQUEST_WORLD);

	mov	eax, DWORD PTR $T218717[ebp]
	mov	DWORD PTR tv184[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv184[ebp], ecx
	push	116					; 00000074H
	mov	edx, DWORD PTR tv184[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv184[ebp]
	mov	edx, DWORD PTR [eax+828]
	call	edx
$LN8@AlexanderC:

; 96   : 			}
; 97   : 		}
; 98   : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _szLeaderName$218230[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN10@AlexanderC:

; 99   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _szLeaderName$218230[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-108]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AlexanderConquest@CvAchievementUnlocker@@SAXW4PlayerTypes@@@Z ENDP ; CvAchievementUnlocker::AlexanderConquest
PUBLIC	??0CvPlayerAchievements@@QAE@ABVCvPlayer@@@Z	; CvPlayerAchievements::CvPlayerAchievements
; Function compile flags: /Odtp
;	COMDAT ??0CvPlayerAchievements@@QAE@ABVCvPlayer@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_kPlayer$ = 8						; size = 4
??0CvPlayerAchievements@@QAE@ABVCvPlayer@@@Z PROC	; CvPlayerAchievements::CvPlayerAchievements, COMDAT
; _this$ = ecx

; 123  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _kPlayer$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], -999		; fffffc19H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], -999		; fffffc19H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], -999		; fffffc19H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], -999		; fffffc19H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], -999		; fffffc19H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], -999		; fffffc19H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], -999		; fffffc19H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+40], -999		; fffffc19H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], -999		; fffffc19H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], -999		; fffffc19H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+52], -999		; fffffc19H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], -999		; fffffc19H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], -999		; fffffc19H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], -999		; fffffc19H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], -999		; fffffc19H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+72], -999		; fffffc19H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+76], -999		; fffffc19H

; 124  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CvPlayerAchievements@@QAE@ABVCvPlayer@@@Z ENDP	; CvPlayerAchievements::CvPlayerAchievements
_TEXT	ENDS
PUBLIC	??_C@_0BF@EHGAPDDL@BELIEF_PAPAL_PRIMACY?$AA@	; `string'
PUBLIC	?AlliedWithCityState@CvPlayerAchievements@@QAEXW4PlayerTypes@@@Z ; CvPlayerAchievements::AlliedWithCityState
EXTRN	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ:PROC ; CvMinorCivAI::GetAlly
EXTRN	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ:PROC ; CvPlayer::GetMinorCivAI
EXTRN	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z:PROC ; CvReligionBeliefs::HasBelief
EXTRN	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z:PROC ; CvGameReligions::GetReligion
EXTRN	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ:PROC ; CvGame::GetGameReligions
EXTRN	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ:PROC ; CvPlayerReligions::GetReligionCreatedByPlayer
EXTRN	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ:PROC ; CvPlayer::GetReligions
EXTRN	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z:PROC ; CvGlobals::getInfoTypeForString
;	COMDAT ??_C@_0BF@EHGAPDDL@BELIEF_PAPAL_PRIMACY?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_0BF@EHGAPDDL@BELIEF_PAPAL_PRIMACY?$AA@ DB 'BELIEF_PAPAL_PRIMACY', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvachievementunlocker.cpp
CONST	ENDS
;	COMDAT ?AlliedWithCityState@CvPlayerAchievements@@QAEXW4PlayerTypes@@@Z
_TEXT	SEGMENT
tv175 = -64						; size = 4
_this$ = -60						; size = 4
$T218787 = -56						; size = 4
$T218783 = -52						; size = 4
$T218774 = -45						; size = 1
$T218762 = -44						; size = 4
$T218758 = -40						; size = 4
$T218749 = -36						; size = 4
$T218745 = -32						; size = 4
_eAlly$218289 = -28					; size = 4
_ePlayer$218285 = -24					; size = 4
_kPlayer$218287 = -20					; size = 4
_i$218281 = -16						; size = 4
_iNumAllies$218280 = -12				; size = 4
_pReligion$218277 = -8					; size = 4
_eReligion$218275 = -4					; size = 4
_eNewCityStateAlly$ = 8					; size = 4
?AlliedWithCityState@CvPlayerAchievements@@QAEXW4PlayerTypes@@@Z PROC ; CvPlayerAchievements::AlliedWithCityState, COMDAT
; _this$ = ecx

; 131  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	DWORD PTR _this$[ebp], ecx

; 132  : 	if(m_kPlayer.GetID() != GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T218745[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T218749[ebp], eax
	mov	ecx, DWORD PTR $T218749[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T218745[ebp], eax
	je	SHORT $LN12@AlliedWith

; 133  : 		return;

	jmp	$LN13@AlliedWith
$LN12@AlliedWith:

; 134  : 
; 135  : 	//Cache value if needed
; 136  : 	if(m_ePapalPrimacyType == UNDEFINED_TYPE)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], -999		; fffffc19H
	jne	SHORT $LN11@AlliedWith

; 137  : 	{
; 138  : 		m_ePapalPrimacyType = (BeliefTypes)GC.getInfoTypeForString("BELIEF_PAPAL_PRIMACY", true);

	push	1
	push	OFFSET ??_C@_0BF@EHGAPDDL@BELIEF_PAPAL_PRIMACY?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], eax
$LN11@AlliedWith:

; 139  : 	}
; 140  : 	
; 141  : 	if(m_ePapalPrimacyType != NO_BELIEF)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], -1
	je	$LN13@AlliedWith

; 142  : 	{
; 143  : 		const ReligionTypes eReligion = m_kPlayer.GetReligions()->GetReligionCreatedByPlayer();

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionCreatedByPlayer
	mov	DWORD PTR _eReligion$218275[ebp], eax

; 144  : 		if(eReligion != NO_RELIGION)

	cmp	DWORD PTR _eReligion$218275[ebp], -1
	je	$LN13@AlliedWith

; 145  : 		{
; 146  : 			const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, m_kPlayer.GetID());

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR $T218758[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T218762[ebp], edx
	mov	eax, DWORD PTR $T218758[ebp]
	push	eax
	mov	ecx, DWORD PTR _eReligion$218275[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T218762[ebp]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	DWORD PTR _pReligion$218277[ebp], eax

; 147  : 			if(pReligion != NULL)

	cmp	DWORD PTR _pReligion$218277[ebp], 0
	je	$LN13@AlliedWith

; 148  : 			{
; 149  : 				if(pReligion->m_Beliefs.HasBelief(m_ePapalPrimacyType))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _pReligion$218277[ebp]
	add	ecx, 152				; 00000098H
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	movzx	ecx, al
	test	ecx, ecx
	je	$LN13@AlliedWith

; 150  : 				{
; 151  : 					int iNumAllies = 0;

	mov	DWORD PTR _iNumAllies$218280[ebp], 0

; 152  : 					//We've got the belief! How many city state Allies do we have??
; 153  : 					for(int i = 0; i < MAX_CIV_PLAYERS; ++i)

	mov	DWORD PTR _i$218281[ebp], 0
	jmp	SHORT $LN6@AlliedWith
$LN5@AlliedWith:
	mov	edx, DWORD PTR _i$218281[ebp]
	add	edx, 1
	mov	DWORD PTR _i$218281[ebp], edx
$LN6@AlliedWith:
	cmp	DWORD PTR _i$218281[ebp], 63		; 0000003fH
	jge	SHORT $LN4@AlliedWith

; 154  : 					{
; 155  : 						const PlayerTypes ePlayer = static_cast<PlayerTypes>(i);

	mov	eax, DWORD PTR _i$218281[ebp]
	mov	DWORD PTR _ePlayer$218285[ebp], eax

; 156  : 						CvPlayerAI& kPlayer = GET_PLAYER(ePlayer);

	mov	ecx, DWORD PTR _ePlayer$218285[ebp]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _kPlayer$218287[ebp], ecx

; 157  : 						if(kPlayer.isAlive() && kPlayer.isMinorCiv())

	mov	edx, DWORD PTR _kPlayer$218287[ebp]
	mov	al, BYTE PTR [edx+2256]
	mov	BYTE PTR $T218774[ebp], al
	movzx	ecx, BYTE PTR $T218774[ebp]
	test	ecx, ecx
	je	SHORT $LN3@AlliedWith
	mov	ecx, DWORD PTR _kPlayer$218287[ebp]
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@AlliedWith

; 158  : 						{
; 159  : 							const PlayerTypes eAlly = kPlayer.GetMinorCivAI()->GetAlly();

	mov	ecx, DWORD PTR _kPlayer$218287[ebp]
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?GetAlly@CvMinorCivAI@@QBE?AW4PlayerTypes@@XZ ; CvMinorCivAI::GetAlly
	mov	DWORD PTR _eAlly$218289[ebp], eax

; 160  : 							if(eAlly == m_kPlayer.GetID())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T218783[ebp], edx
	mov	eax, DWORD PTR _eAlly$218289[ebp]
	cmp	eax, DWORD PTR $T218783[ebp]
	jne	SHORT $LN3@AlliedWith

; 161  : 								iNumAllies++;

	mov	ecx, DWORD PTR _iNumAllies$218280[ebp]
	add	ecx, 1
	mov	DWORD PTR _iNumAllies$218280[ebp], ecx
$LN3@AlliedWith:

; 162  : 						}
; 163  : 					}

	jmp	SHORT $LN5@AlliedWith
$LN4@AlliedWith:

; 164  : 
; 165  : 					if(iNumAllies >= 12)

	cmp	DWORD PTR _iNumAllies$218280[ebp], 12	; 0000000cH
	jl	SHORT $LN13@AlliedWith

; 166  : 					{
; 167  : 						gDLL->UnlockAchievement(ACHIEVEMENT_XP1_27);

	mov	edx, DWORD PTR $T218787[ebp]
	mov	DWORD PTR tv175[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv175[ebp], eax
	push	217					; 000000d9H
	mov	ecx, DWORD PTR tv175[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv175[ebp]
	mov	eax, DWORD PTR [edx+828]
	call	eax
$LN13@AlliedWith:

; 168  : 					}
; 169  : 				}
; 170  : 			}
; 171  : 		}
; 172  : 	}
; 173  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?AlliedWithCityState@CvPlayerAchievements@@QAEXW4PlayerTypes@@@Z ENDP ; CvPlayerAchievements::AlliedWithCityState
_TEXT	ENDS
PUBLIC	??_C@_0N@FMDKANIN@UNIT_PROPHET?$AA@		; `string'
PUBLIC	??_C@_0BG@OKCFBBJL@CIVILIZATION_ETHIOPIA?$AA@	; `string'
PUBLIC	?AddUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@@Z ; CvPlayerAchievements::AddUnit
EXTRN	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ:PROC	; CvUnit::getUnitType
EXTRN	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ:PROC ; CvPlayer::getCivilizationType
;	COMDAT ??_C@_0N@FMDKANIN@UNIT_PROPHET?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_0N@FMDKANIN@UNIT_PROPHET?$AA@ DB 'UNIT_PROPHET', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OKCFBBJL@CIVILIZATION_ETHIOPIA?$AA@
CONST	SEGMENT
??_C@_0BG@OKCFBBJL@CIVILIZATION_ETHIOPIA?$AA@ DB 'CIVILIZATION_ETHIOPIA', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvachievementunlocker.cpp
CONST	ENDS
;	COMDAT ?AddUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@@Z
_TEXT	SEGMENT
tv142 = -20						; size = 4
_this$ = -16						; size = 4
$T218806 = -12						; size = 4
$T218802 = -8						; size = 4
$T218798 = -4						; size = 4
_pUnit$ = 8						; size = 4
?AddUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@@Z PROC	; CvPlayerAchievements::AddUnit, COMDAT
; _this$ = ecx

; 176  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 177  : 	if(m_kPlayer.GetID() != GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T218798[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T218802[ebp], eax
	mov	ecx, DWORD PTR $T218802[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T218798[ebp], eax
	je	SHORT $LN6@AddUnit

; 178  : 		return;

	jmp	$LN7@AddUnit
$LN6@AddUnit:

; 179  : 
; 180  : 	//Attempt to read from cache
; 181  : 	if(m_eEthiopiaType == UNDEFINED_TYPE)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+32], -999		; fffffc19H
	jne	SHORT $LN5@AddUnit

; 182  : 	{
; 183  : 		m_eEthiopiaType = (CivilizationTypes)GC.getInfoTypeForString("CIVILIZATION_ETHIOPIA", true);

	push	1
	push	OFFSET ??_C@_0BG@OKCFBBJL@CIVILIZATION_ETHIOPIA?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], eax
$LN5@AddUnit:

; 184  : 	}
; 185  : 
; 186  : 	if(m_eGreatProphetType == UNDEFINED_TYPE)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+60], -999		; fffffc19H
	jne	SHORT $LN4@AddUnit

; 187  : 	{
; 188  : 		m_eGreatProphetType = (UnitTypes)GC.getInfoTypeForString("UNIT_PROPHET", true);

	push	1
	push	OFFSET ??_C@_0N@FMDKANIN@UNIT_PROPHET?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], eax
$LN4@AddUnit:

; 189  : 	}
; 190  : 
; 191  : 	if(m_eEthiopiaType != NO_CIVILIZATION && m_eGreatProphetType != NO_UNIT)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+32], -1
	je	SHORT $LN7@AddUnit
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+60], -1
	je	SHORT $LN7@AddUnit

; 192  : 	{
; 193  : 		//* ACHIEVEMENT_XP1_32 - As Ethiopia, earn 5 great prophets
; 194  : 		if(m_kPlayer.getCivilizationType() == m_eEthiopiaType && pUnit->getUnitType() == m_eGreatProphetType)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	mov	edx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [edx+32]
	jne	SHORT $LN7@AddUnit
	mov	ecx, DWORD PTR _pUnit$[ebp]
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+60]
	jne	SHORT $LN7@AddUnit

; 195  : 		{
; 196  : 			m_iAchievement_XP1_32_Progress++;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 197  : 			if(m_iAchievement_XP1_32_Progress >= 5)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 5
	jl	SHORT $LN7@AddUnit

; 198  : 			{
; 199  : 				gDLL->UnlockAchievement(ACHIEVEMENT_XP1_32);

	mov	eax, DWORD PTR $T218806[ebp]
	mov	DWORD PTR tv142[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv142[ebp], ecx
	push	222					; 000000deH
	mov	edx, DWORD PTR tv142[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv142[ebp]
	mov	edx, DWORD PTR [eax+828]
	call	edx
$LN7@AddUnit:

; 200  : 			}
; 201  : 		}	
; 202  : 	}
; 203  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?AddUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@@Z ENDP	; CvPlayerAchievements::AddUnit
_TEXT	ENDS
PUBLIC	??_C@_0CC@BLGMBGPB@UNIT_CARTHAGINIAN_FOREST_ELEPHAN@ ; `string'
PUBLIC	??_C@_0BC@OMPHLOOM@CIVILIZATION_ROME?$AA@	; `string'
PUBLIC	??_C@_0BG@OFPFIBHP@CIVILIZATION_CARTHAGE?$AA@	; `string'
PUBLIC	?AttackedUnitWithUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@0@Z ; CvPlayerAchievements::AttackedUnitWithUnit
EXTRN	?plot@CvUnit@@QBEPAVCvPlot@@XZ:PROC		; CvUnit::plot
EXTRN	?getCivilizationType@CvUnit@@QBE?AW4CivilizationTypes@@XZ:PROC ; CvUnit::getCivilizationType
;	COMDAT ??_C@_0CC@BLGMBGPB@UNIT_CARTHAGINIAN_FOREST_ELEPHAN@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_0CC@BLGMBGPB@UNIT_CARTHAGINIAN_FOREST_ELEPHAN@ DB 'UNIT_CARTHAGINIA'
	DB	'N_FOREST_ELEPHANT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OMPHLOOM@CIVILIZATION_ROME?$AA@
CONST	SEGMENT
??_C@_0BC@OMPHLOOM@CIVILIZATION_ROME?$AA@ DB 'CIVILIZATION_ROME', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OFPFIBHP@CIVILIZATION_CARTHAGE?$AA@
CONST	SEGMENT
??_C@_0BG@OFPFIBHP@CIVILIZATION_CARTHAGE?$AA@ DB 'CIVILIZATION_CARTHAGE', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvachievementunlocker.cpp
CONST	ENDS
;	COMDAT ?AttackedUnitWithUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@0@Z
_TEXT	SEGMENT
tv154 = -24						; size = 4
_this$ = -20						; size = 4
$T218829 = -16						; size = 4
$T218825 = -12						; size = 4
$T218821 = -8						; size = 4
$T218817 = -4						; size = 4
_pAttackingUnit$ = 8					; size = 4
_pDefendingUnit$ = 12					; size = 4
?AttackedUnitWithUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@0@Z PROC ; CvPlayerAchievements::AttackedUnitWithUnit, COMDAT
; _this$ = ecx

; 206  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 207  : 	if(m_kPlayer.GetID() != GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T218817[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T218821[ebp], eax
	mov	ecx, DWORD PTR $T218821[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T218817[ebp], eax
	je	SHORT $LN6@AttackedUn

; 208  : 		return;

	jmp	$LN7@AttackedUn
$LN6@AttackedUn:

; 209  : 
; 210  : 	if(m_eCarthageType == UNDEFINED_TYPE)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+44], -999		; fffffc19H
	jne	SHORT $LN5@AttackedUn

; 211  : 	{
; 212  : 		m_eCarthageType = (CivilizationTypes)GC.getInfoTypeForString("CIVILIZATION_CARTHAGE", true);

	push	1
	push	OFFSET ??_C@_0BG@OFPFIBHP@CIVILIZATION_CARTHAGE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], eax
$LN5@AttackedUn:

; 213  : 	}
; 214  : 
; 215  : 	if(m_eRomeType == UNDEFINED_TYPE)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], -999		; fffffc19H
	jne	SHORT $LN4@AttackedUn

; 216  : 	{
; 217  : 		m_eRomeType = (CivilizationTypes)GC.getInfoTypeForString("CIVILIZATION_ROME", true);

	push	1
	push	OFFSET ??_C@_0BC@OMPHLOOM@CIVILIZATION_ROME?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], eax
$LN4@AttackedUn:

; 218  : 	}
; 219  : 
; 220  : 	if(m_eAfricanForestElephantType == UNDEFINED_TYPE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+64], -999		; fffffc19H
	jne	SHORT $LN3@AttackedUn

; 221  : 	{
; 222  : 		m_eAfricanForestElephantType = (UnitTypes)GC.getInfoTypeForString("UNIT_CARTHAGINIAN_FOREST_ELEPHANT", true);

	push	1
	push	OFFSET ??_C@_0CC@BLGMBGPB@UNIT_CARTHAGINIAN_FOREST_ELEPHAN@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], eax
$LN3@AttackedUn:

; 223  : 	}
; 224  : 	
; 225  : 	if(m_eCarthageType != NO_CIVILIZATION && m_eRomeType != NO_CIVILIZATION && m_eAfricanForestElephantType != NO_UNIT)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+44], -1
	je	SHORT $LN7@AttackedUn
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], -1
	je	SHORT $LN7@AttackedUn
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+64], -1
	je	SHORT $LN7@AttackedUn

; 226  : 	{
; 227  : 		if(pAttackingUnit->getCivilizationType() == m_eCarthageType &&
; 228  : 			pAttackingUnit->getUnitType() == m_eAfricanForestElephantType &&
; 229  : 			pAttackingUnit->plot()->getPlotType() == PLOT_MOUNTAIN &&
; 230  : 			pDefendingUnit->getCivilizationType() == m_eRomeType)

	mov	ecx, DWORD PTR _pAttackingUnit$[ebp]
	call	?getCivilizationType@CvUnit@@QBE?AW4CivilizationTypes@@XZ ; CvUnit::getCivilizationType
	mov	edx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [edx+44]
	jne	SHORT $LN7@AttackedUn
	mov	ecx, DWORD PTR _pAttackingUnit$[ebp]
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+64]
	jne	SHORT $LN7@AttackedUn
	mov	ecx, DWORD PTR _pAttackingUnit$[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	DWORD PTR $T218825[ebp], eax
	mov	edx, DWORD PTR $T218825[ebp]
	movsx	eax, BYTE PTR [edx+5]
	test	eax, eax
	jne	SHORT $LN7@AttackedUn
	mov	ecx, DWORD PTR _pDefendingUnit$[ebp]
	call	?getCivilizationType@CvUnit@@QBE?AW4CivilizationTypes@@XZ ; CvUnit::getCivilizationType
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+48]
	jne	SHORT $LN7@AttackedUn

; 231  : 		{
; 232  : 			gDLL->UnlockAchievement(ACHIEVEMENT_XP1_29);

	mov	edx, DWORD PTR $T218829[ebp]
	mov	DWORD PTR tv154[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv154[ebp], eax
	push	219					; 000000dbH
	mov	ecx, DWORD PTR tv154[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv154[ebp]
	mov	eax, DWORD PTR [edx+828]
	call	eax
$LN7@AttackedUn:

; 233  : 		}
; 234  : 	}
; 235  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?AttackedUnitWithUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@0@Z ENDP ; CvPlayerAchievements::AttackedUnitWithUnit
_TEXT	ENDS
PUBLIC	?BoughtCityState@CvPlayerAchievements@@QAEXH@Z	; CvPlayerAchievements::BoughtCityState
; Function compile flags: /Odtp
;	COMDAT ?BoughtCityState@CvPlayerAchievements@@QAEXH@Z
_TEXT	SEGMENT
tv72 = -12						; size = 4
_this$ = -8						; size = 4
$T218835 = -4						; size = 4
_iNumUnits$ = 8						; size = 4
?BoughtCityState@CvPlayerAchievements@@QAEXH@Z PROC	; CvPlayerAchievements::BoughtCityState, COMDAT
; _this$ = ecx

; 238  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 239  : 	if (iNumUnits >= 15)

	cmp	DWORD PTR _iNumUnits$[ebp], 15		; 0000000fH
	jl	SHORT $LN2@BoughtCity

; 240  : 	{
; 241  : 		gDLL->UnlockAchievement(ACHIEVEMENT_XP1_35);

	mov	eax, DWORD PTR $T218835[ebp]
	mov	DWORD PTR tv72[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv72[ebp], ecx
	push	225					; 000000e1H
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [eax+828]
	call	edx
$LN2@BoughtCity:

; 242  : 	}
; 243  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?BoughtCityState@CvPlayerAchievements@@QAEXH@Z ENDP	; CvPlayerAchievements::BoughtCityState
_TEXT	ENDS
PUBLIC	??_C@_0BC@KDGFCCBN@UNIT_SKY_FORTRESS?$AA@	; `string'
PUBLIC	??_C@_0BG@PDAHGGKL@UNIT_BYZANTINE_DROMON?$AA@	; `string'
PUBLIC	??_C@_0BE@JLBOKPKI@CIVILIZATION_GREECE?$AA@	; `string'
PUBLIC	??_C@_0BH@BJPBKEED@CIVILIZATION_BYZANTIUM?$AA@	; `string'
PUBLIC	?KilledUnitWithUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@0@Z ; CvPlayerAchievements::KilledUnitWithUnit
EXTRN	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z:PROC	; CvPlot::getUnitByIndex
EXTRN	?getNumUnits@CvPlot@@QBEHXZ:PROC		; CvPlot::getNumUnits
EXTRN	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ:PROC ; CvUnit::getDomainType
;	COMDAT ??_C@_0BC@KDGFCCBN@UNIT_SKY_FORTRESS?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_0BC@KDGFCCBN@UNIT_SKY_FORTRESS?$AA@ DB 'UNIT_SKY_FORTRESS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PDAHGGKL@UNIT_BYZANTINE_DROMON?$AA@
CONST	SEGMENT
??_C@_0BG@PDAHGGKL@UNIT_BYZANTINE_DROMON?$AA@ DB 'UNIT_BYZANTINE_DROMON', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JLBOKPKI@CIVILIZATION_GREECE?$AA@
CONST	SEGMENT
??_C@_0BE@JLBOKPKI@CIVILIZATION_GREECE?$AA@ DB 'CIVILIZATION_GREECE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BJPBKEED@CIVILIZATION_BYZANTIUM?$AA@
CONST	SEGMENT
??_C@_0BH@BJPBKEED@CIVILIZATION_BYZANTIUM?$AA@ DB 'CIVILIZATION_BYZANTIUM'
	DB	00H						; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvachievementunlocker.cpp
CONST	ENDS
;	COMDAT ?KilledUnitWithUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@0@Z
_TEXT	SEGMENT
tv216 = -112						; size = 4
tv252 = -108						; size = 4
tv267 = -104						; size = 4
tv169 = -100						; size = 4
tv158 = -96						; size = 4
_this$ = -92						; size = 4
$T218983 = -88						; size = 4
$T218935 = -84						; size = 4
$T218922 = -80						; size = 4
$T218918 = -76						; size = 4
$T218904 = -72						; size = 4
$T218900 = -65						; size = 1
$T218889 = -64						; size = 4
$T218885 = -57						; size = 1
_iMapY$218944 = -56					; size = 4
_iMapX$218943 = -52					; size = 4
$T218878 = -48						; size = 4
$T218858 = -44						; size = 4
$T218854 = -40						; size = 4
$T218850 = -36						; size = 4
$T218846 = -32						; size = 4
_pUnit$218361 = -28					; size = 4
_i$218357 = -24						; size = 4
_iNumUnits$218356 = -20					; size = 4
_iX$218352 = -16					; size = 4
_iY$218353 = -12					; size = 4
_pkPlot$218354 = -8					; size = 4
_bUsingXP1Scenario3$ = -1				; size = 1
_pKillingUnit$ = 8					; size = 4
_pKilledUnit$ = 12					; size = 4
?KilledUnitWithUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@0@Z PROC ; CvPlayerAchievements::KilledUnitWithUnit, COMDAT
; _this$ = ecx

; 246  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 112				; 00000070H
	mov	DWORD PTR _this$[ebp], ecx

; 247  : 	if(m_kPlayer.GetID() != GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T218846[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T218850[ebp], eax
	mov	ecx, DWORD PTR $T218850[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T218846[ebp], eax
	je	SHORT $LN15@KilledUnit

; 248  : 		return;

	jmp	$LN16@KilledUnit
$LN15@KilledUnit:

; 249  : 
; 250  : 	if(m_eByzantinesType == UNDEFINED_TYPE)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+36], -999		; fffffc19H
	jne	SHORT $LN14@KilledUnit

; 251  : 	{
; 252  : 		m_eByzantinesType = (CivilizationTypes)GC.getInfoTypeForString("CIVILIZATION_BYZANTIUM", true);

	push	1
	push	OFFSET ??_C@_0BH@BJPBKEED@CIVILIZATION_BYZANTIUM?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], eax
$LN14@KilledUnit:

; 253  : 	}
; 254  : 
; 255  : 	if(m_eGreekType == UNDEFINED_TYPE)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], -999		; fffffc19H
	jne	SHORT $LN13@KilledUnit

; 256  : 	{
; 257  : 		m_eGreekType = (CivilizationTypes)GC.getInfoTypeForString("CIVILIZATION_GREECE", true);

	push	1
	push	OFFSET ??_C@_0BE@JLBOKPKI@CIVILIZATION_GREECE?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], eax
$LN13@KilledUnit:

; 258  : 	}
; 259  : 
; 260  : 	if(m_eDromonType == UNDEFINED_TYPE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+56], -999		; fffffc19H
	jne	SHORT $LN12@KilledUnit

; 261  : 	{
; 262  : 		m_eDromonType = (UnitTypes)GC.getInfoTypeForString("UNIT_BYZANTINE_DROMON", true);

	push	1
	push	OFFSET ??_C@_0BG@PDAHGGKL@UNIT_BYZANTINE_DROMON?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], eax
$LN12@KilledUnit:

; 263  : 	}
; 264  : 
; 265  : 	if(m_eDromonType != NO_UNIT && m_eByzantinesType != NO_CIVILIZATION && m_eGreekType != NO_CIVILIZATION)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+56], -1
	je	$LN11@KilledUnit
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], -1
	je	$LN11@KilledUnit
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], -1
	je	SHORT $LN11@KilledUnit

; 266  : 	{
; 267  : 		//* ACHIEVEMENT_XP1_33 - As Byzantines, sink 10 Greek ships with a Dromon
; 268  : 		if(	pKillingUnit->getCivilizationType() == m_eByzantinesType && 
; 269  : 			pKillingUnit->getUnitType() == m_eDromonType &&
; 270  : 			pKilledUnit->getCivilizationType() == m_eGreekType &&
; 271  : 			pKilledUnit->getDomainType() == DOMAIN_SEA)

	mov	ecx, DWORD PTR _pKillingUnit$[ebp]
	call	?getCivilizationType@CvUnit@@QBE?AW4CivilizationTypes@@XZ ; CvUnit::getCivilizationType
	mov	edx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [edx+36]
	jne	SHORT $LN11@KilledUnit
	mov	ecx, DWORD PTR _pKillingUnit$[ebp]
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+56]
	jne	SHORT $LN11@KilledUnit
	mov	ecx, DWORD PTR _pKilledUnit$[ebp]
	call	?getCivilizationType@CvUnit@@QBE?AW4CivilizationTypes@@XZ ; CvUnit::getCivilizationType
	mov	edx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [edx+40]
	jne	SHORT $LN11@KilledUnit
	mov	ecx, DWORD PTR _pKilledUnit$[ebp]
	call	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ ; CvUnit::getDomainType
	test	eax, eax
	jne	SHORT $LN11@KilledUnit

; 272  : 		{
; 273  : 			m_iAchievement_XP1_33_Progress++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 274  : 			if(m_iAchievement_XP1_33_Progress >= 10)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 10			; 0000000aH
	jl	SHORT $LN11@KilledUnit

; 275  : 			{
; 276  : 				gDLL->UnlockAchievement(ACHIEVEMENT_XP1_33);

	mov	ecx, DWORD PTR $T218854[ebp]
	mov	DWORD PTR tv158[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv158[ebp], edx
	push	223					; 000000dfH
	mov	eax, DWORD PTR tv158[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv158[ebp]
	mov	eax, DWORD PTR [edx+828]
	call	eax
$LN11@KilledUnit:

; 277  : 			}
; 278  : 		}
; 279  : 	}
; 280  : 
; 281  : 	bool bUsingXP1Scenario3 = gDLL->IsModActivated(CIV5_XP1_SCENARIO3_MODID);

	mov	ecx, DWORD PTR $T218858[ebp]
	mov	DWORD PTR tv169[ebp], ecx
	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv169[ebp], edx
	mov	eax, DWORD PTR _CIV5_XP1_SCENARIO3_MODID
	push	eax
	mov	ecx, DWORD PTR tv169[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv169[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	mov	BYTE PTR _bUsingXP1Scenario3$[ebp], al

; 282  : 	if(bUsingXP1Scenario3)

	movzx	ecx, BYTE PTR _bUsingXP1Scenario3$[ebp]
	test	ecx, ecx
	je	$LN16@KilledUnit

; 283  : 	{
; 284  : 		if(m_eSkyFortress == UNDEFINED_TYPE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+76], -999		; fffffc19H
	jne	SHORT $LN7@KilledUnit

; 285  : 		{
; 286  : 			m_eSkyFortress = (UnitTypes)GC.getInfoTypeForString("UNIT_SKY_FORTRESS" , true);

	push	1
	push	OFFSET ??_C@_0BC@KDGFCCBN@UNIT_SKY_FORTRESS?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], eax
$LN7@KilledUnit:

; 287  : 		}
; 288  : 
; 289  : 		if(pKillingUnit->getDomainType() == DOMAIN_AIR)

	mov	ecx, DWORD PTR _pKillingUnit$[ebp]
	call	?getDomainType@CvUnit@@QBE?AW4DomainTypes@@XZ ; CvUnit::getDomainType
	cmp	eax, 1
	jne	$LN16@KilledUnit

; 290  : 		{
; 291  : 			const int iX = pKillingUnit->getX();

	mov	edx, DWORD PTR _pKillingUnit$[ebp]
	mov	eax, DWORD PTR [edx+76]
	mov	DWORD PTR _iX$218352[ebp], eax

; 292  : 			const int iY = pKillingUnit->getY();

	mov	ecx, DWORD PTR _pKillingUnit$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR _iY$218353[ebp], edx

; 293  : 
; 294  : 			CvPlot* pkPlot = GC.getMap().plot(iX, iY);

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	DWORD PTR $T218878[ebp], eax
	cmp	DWORD PTR _iX$218352[ebp], -2147483647	; 80000001H
	je	SHORT $LN38@KilledUnit
	cmp	DWORD PTR _iY$218353[ebp], -2147483647	; 80000001H
	jne	SHORT $LN39@KilledUnit
$LN38@KilledUnit:
	mov	DWORD PTR _pkPlot$218354[ebp], 0
	jmp	$LN40@KilledUnit
$LN39@KilledUnit:
	mov	ecx, DWORD PTR $T218878[ebp]
	mov	dl, BYTE PTR [ecx+4056]
	mov	BYTE PTR $T218885[ebp], dl
	mov	eax, DWORD PTR $T218878[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T218889[ebp], ecx
	movzx	edx, BYTE PTR $T218885[ebp]
	test	edx, edx
	je	SHORT $LN51@KilledUnit
	cmp	DWORD PTR _iX$218352[ebp], 0
	jge	SHORT $LN50@KilledUnit
	mov	eax, DWORD PTR _iX$218352[ebp]
	cdq
	idiv	DWORD PTR $T218889[ebp]
	add	edx, DWORD PTR $T218889[ebp]
	mov	DWORD PTR _iMapX$218943[ebp], edx
	jmp	SHORT $LN52@KilledUnit
	jmp	SHORT $LN51@KilledUnit
$LN50@KilledUnit:
	mov	eax, DWORD PTR _iX$218352[ebp]
	cmp	eax, DWORD PTR $T218889[ebp]
	jl	SHORT $LN51@KilledUnit
	mov	eax, DWORD PTR _iX$218352[ebp]
	cdq
	idiv	DWORD PTR $T218889[ebp]
	mov	DWORD PTR _iMapX$218943[ebp], edx
	jmp	SHORT $LN52@KilledUnit
$LN51@KilledUnit:
	mov	ecx, DWORD PTR _iX$218352[ebp]
	mov	DWORD PTR _iMapX$218943[ebp], ecx
$LN52@KilledUnit:
	mov	edx, DWORD PTR $T218878[ebp]
	mov	al, BYTE PTR [edx+4057]
	mov	BYTE PTR $T218900[ebp], al
	mov	ecx, DWORD PTR $T218878[ebp]
	mov	edx, DWORD PTR [ecx+4024]
	mov	DWORD PTR $T218904[ebp], edx
	movzx	eax, BYTE PTR $T218900[ebp]
	test	eax, eax
	je	SHORT $LN61@KilledUnit
	cmp	DWORD PTR _iY$218353[ebp], 0
	jge	SHORT $LN60@KilledUnit
	mov	eax, DWORD PTR _iY$218353[ebp]
	cdq
	idiv	DWORD PTR $T218904[ebp]
	add	edx, DWORD PTR $T218904[ebp]
	mov	DWORD PTR _iMapY$218944[ebp], edx
	jmp	SHORT $LN62@KilledUnit
	jmp	SHORT $LN61@KilledUnit
$LN60@KilledUnit:
	mov	ecx, DWORD PTR _iY$218353[ebp]
	cmp	ecx, DWORD PTR $T218904[ebp]
	jl	SHORT $LN61@KilledUnit
	mov	eax, DWORD PTR _iY$218353[ebp]
	cdq
	idiv	DWORD PTR $T218904[ebp]
	mov	DWORD PTR _iMapY$218944[ebp], edx
	jmp	SHORT $LN62@KilledUnit
$LN61@KilledUnit:
	mov	edx, DWORD PTR _iY$218353[ebp]
	mov	DWORD PTR _iMapY$218944[ebp], edx
$LN62@KilledUnit:
	cmp	DWORD PTR _iMapX$218943[ebp], 0
	jl	SHORT $LN66@KilledUnit
	mov	eax, DWORD PTR $T218878[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T218918[ebp], ecx
	mov	edx, DWORD PTR _iMapX$218943[ebp]
	cmp	edx, DWORD PTR $T218918[ebp]
	jge	SHORT $LN66@KilledUnit
	cmp	DWORD PTR _iMapY$218944[ebp], 0
	jl	SHORT $LN66@KilledUnit
	mov	eax, DWORD PTR $T218878[ebp]
	mov	ecx, DWORD PTR [eax+4024]
	mov	DWORD PTR $T218922[ebp], ecx
	mov	edx, DWORD PTR _iMapY$218944[ebp]
	cmp	edx, DWORD PTR $T218922[ebp]
	jge	SHORT $LN66@KilledUnit
	mov	DWORD PTR tv267[ebp], 1
	jmp	SHORT $LN64@KilledUnit
$LN66@KilledUnit:
	mov	DWORD PTR tv267[ebp], 0
$LN64@KilledUnit:
	cmp	DWORD PTR tv267[ebp], 0
	je	SHORT $LN42@KilledUnit
	mov	eax, DWORD PTR $T218878[ebp]
	mov	ecx, DWORD PTR [eax+4020]
	mov	DWORD PTR $T218935[ebp], ecx
	mov	edx, DWORD PTR _iMapY$218944[ebp]
	imul	edx, DWORD PTR $T218935[ebp]
	add	edx, DWORD PTR _iMapX$218943[ebp]
	imul	edx, 484				; 000001e4H
	mov	eax, DWORD PTR $T218878[ebp]
	add	edx, DWORD PTR [eax+4068]
	mov	DWORD PTR tv252[ebp], edx
	jmp	SHORT $LN43@KilledUnit
$LN42@KilledUnit:
	mov	DWORD PTR tv252[ebp], 0
$LN43@KilledUnit:
	mov	ecx, DWORD PTR tv252[ebp]
	mov	DWORD PTR _pkPlot$218354[ebp], ecx
$LN40@KilledUnit:

; 295  : 			if(pkPlot != NULL)

	cmp	DWORD PTR _pkPlot$218354[ebp], 0
	je	SHORT $LN16@KilledUnit

; 296  : 			{
; 297  : 				const int iNumUnits = pkPlot->getNumUnits();

	mov	ecx, DWORD PTR _pkPlot$218354[ebp]
	call	?getNumUnits@CvPlot@@QBEHXZ		; CvPlot::getNumUnits
	mov	DWORD PTR _iNumUnits$218356[ebp], eax

; 298  : 				for(int i = 0; i < iNumUnits; ++i)

	mov	DWORD PTR _i$218357[ebp], 0
	jmp	SHORT $LN4@KilledUnit
$LN3@KilledUnit:
	mov	edx, DWORD PTR _i$218357[ebp]
	add	edx, 1
	mov	DWORD PTR _i$218357[ebp], edx
$LN4@KilledUnit:
	mov	eax, DWORD PTR _i$218357[ebp]
	cmp	eax, DWORD PTR _iNumUnits$218356[ebp]
	jge	SHORT $LN16@KilledUnit

; 299  : 				{
; 300  : 					CvUnit* pUnit = pkPlot->getUnitByIndex(i);

	mov	ecx, DWORD PTR _i$218357[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkPlot$218354[ebp]
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex
	mov	DWORD PTR _pUnit$218361[ebp], eax

; 301  : 					if(pUnit && pUnit->getUnitType() == m_eSkyFortress)

	cmp	DWORD PTR _pUnit$218361[ebp], 0
	je	SHORT $LN1@KilledUnit
	mov	ecx, DWORD PTR _pUnit$218361[ebp]
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	mov	edx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [edx+76]
	jne	SHORT $LN1@KilledUnit

; 302  : 					{
; 303  : 						gDLL->UnlockAchievement(ACHIEVEMENT_XP1_46);

	mov	eax, DWORD PTR $T218983[ebp]
	mov	DWORD PTR tv216[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv216[ebp], ecx
	push	236					; 000000ecH
	mov	edx, DWORD PTR tv216[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv216[ebp]
	mov	edx, DWORD PTR [eax+828]
	call	edx
$LN1@KilledUnit:

; 304  : 					}
; 305  : 				}

	jmp	SHORT $LN3@KilledUnit
$LN16@KilledUnit:

; 306  : 			}
; 307  : 		}
; 308  : 	}
; 309  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?KilledUnitWithUnit@CvPlayerAchievements@@QAEXPAVCvUnit@@0@Z ENDP ; CvPlayerAchievements::KilledUnitWithUnit
_TEXT	ENDS
PUBLIC	??_C@_0BL@NOMLFDAO@UNIT_SWEDISH_HAKKAPELIITTA?$AA@ ; `string'
PUBLIC	??_C@_0BD@CPBEDAAN@UNIT_GREAT_GENERAL?$AA@	; `string'
PUBLIC	??_C@_0BE@HIHEENK@CIVILIZATION_SWEDEN?$AA@	; `string'
PUBLIC	?StartTurn@CvPlayerAchievements@@QAEXXZ		; CvPlayerAchievements::StartTurn
EXTRN	?nextUnit@CvPlayer@@QBEPBVCvUnit@@PAH_N@Z:PROC	; CvPlayer::nextUnit
EXTRN	?firstUnit@CvPlayer@@QBEPBVCvUnit@@PAH_N@Z:PROC	; CvPlayer::firstUnit
;	COMDAT ??_C@_0BL@NOMLFDAO@UNIT_SWEDISH_HAKKAPELIITTA?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_0BL@NOMLFDAO@UNIT_SWEDISH_HAKKAPELIITTA?$AA@ DB 'UNIT_SWEDISH_HAKKA'
	DB	'PELIITTA', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CPBEDAAN@UNIT_GREAT_GENERAL?$AA@
CONST	SEGMENT
??_C@_0BD@CPBEDAAN@UNIT_GREAT_GENERAL?$AA@ DB 'UNIT_GREAT_GENERAL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HIHEENK@CIVILIZATION_SWEDEN?$AA@
CONST	SEGMENT
??_C@_0BE@HIHEENK@CIVILIZATION_SWEDEN?$AA@ DB 'CIVILIZATION_SWEDEN', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvachievementunlocker.cpp
CONST	ENDS
;	COMDAT ?StartTurn@CvPlayerAchievements@@QAEXXZ
_TEXT	SEGMENT
tv168 = -44						; size = 4
_this$ = -40						; size = 4
$T219002 = -36						; size = 4
$T218998 = -32						; size = 4
$T218994 = -28						; size = 4
_pStackedUnit$218391 = -24				; size = 4
_i$218387 = -20						; size = 4
_iNumUnits$218386 = -16					; size = 4
_pPlot$218384 = -12					; size = 4
_pUnit$218379 = -8					; size = 4
_iLoop$218378 = -4					; size = 4
?StartTurn@CvPlayerAchievements@@QAEXXZ PROC		; CvPlayerAchievements::StartTurn, COMDAT
; _this$ = ecx

; 312  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx

; 313  : 	if(m_kPlayer.GetID() != GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR $T218994[ebp], edx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR $T218998[ebp], eax
	mov	ecx, DWORD PTR $T218998[ebp]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR $T218994[ebp], eax
	je	SHORT $LN15@StartTurn

; 314  : 		return;

	jmp	$LN16@StartTurn
$LN15@StartTurn:

; 315  : 
; 316  : 	if(m_eSwedenType == UNDEFINED_TYPE)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+52], -999		; fffffc19H
	jne	SHORT $LN14@StartTurn

; 317  : 	{
; 318  : 		m_eSwedenType = (CivilizationTypes)GC.getInfoTypeForString("CIVILIZATION_SWEDEN", true);

	push	1
	push	OFFSET ??_C@_0BE@HIHEENK@CIVILIZATION_SWEDEN?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+52], eax
$LN14@StartTurn:

; 319  : 	}
; 320  : 
; 321  : 	if(m_eGreatGeneralType == UNDEFINED_TYPE)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], -999		; fffffc19H
	jne	SHORT $LN13@StartTurn

; 322  : 	{
; 323  : 		m_eGreatGeneralType = (UnitTypes)GC.getInfoTypeForString("UNIT_GREAT_GENERAL", true);

	push	1
	push	OFFSET ??_C@_0BD@CPBEDAAN@UNIT_GREAT_GENERAL?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+68], eax
$LN13@StartTurn:

; 324  : 	}
; 325  : 
; 326  : 	if(m_eHakkapelittaType == UNDEFINED_TYPE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+72], -999		; fffffc19H
	jne	SHORT $LN12@StartTurn

; 327  : 	{
; 328  : 		m_eHakkapelittaType = (UnitTypes)GC.getInfoTypeForString("UNIT_SWEDISH_HAKKAPELIITTA", true);

	push	1
	push	OFFSET ??_C@_0BL@NOMLFDAO@UNIT_SWEDISH_HAKKAPELIITTA?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+72], eax
$LN12@StartTurn:

; 329  : 	}
; 330  : 
; 331  : 	if(m_eSwedenType != NO_CIVILIZATION && m_eGreatGeneralType != NO_UNIT && m_eHakkapelittaType != NO_UNIT)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+52], -1
	je	$LN16@StartTurn
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], -1
	je	$LN16@StartTurn
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+72], -1
	je	$LN16@StartTurn

; 332  : 	{
; 333  : 		if(m_kPlayer.getCivilizationType() == m_eSwedenType)

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?getCivilizationType@CvPlayer@@QBE?AW4CivilizationTypes@@XZ ; CvPlayer::getCivilizationType
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+52]
	jne	$LN16@StartTurn

; 334  : 		{
; 335  : 			int iLoop = 0;

	mov	DWORD PTR _iLoop$218378[ebp], 0

; 336  : 			for(const CvUnit* pUnit = m_kPlayer.firstUnit(&iLoop); pUnit != NULL; pUnit = m_kPlayer.nextUnit(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$218378[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?firstUnit@CvPlayer@@QBEPBVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	mov	DWORD PTR _pUnit$218379[ebp], eax
	jmp	SHORT $LN9@StartTurn
$LN8@StartTurn:
	push	0
	lea	ecx, DWORD PTR _iLoop$218378[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?nextUnit@CvPlayer@@QBEPBVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	mov	DWORD PTR _pUnit$218379[ebp], eax
$LN9@StartTurn:
	cmp	DWORD PTR _pUnit$218379[ebp], 0
	je	$LN16@StartTurn

; 337  : 			{
; 338  : 				if(pUnit->getUnitType() == m_eGreatGeneralType)

	mov	ecx, DWORD PTR _pUnit$218379[ebp]
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+68]
	jne	SHORT $LN6@StartTurn

; 339  : 				{
; 340  : 					CvPlot* pPlot = pUnit->plot();

	mov	ecx, DWORD PTR _pUnit$218379[ebp]
	call	?plot@CvUnit@@QBEPAVCvPlot@@XZ		; CvUnit::plot
	mov	DWORD PTR _pPlot$218384[ebp], eax

; 341  : 					if(pPlot != NULL)

	cmp	DWORD PTR _pPlot$218384[ebp], 0
	je	SHORT $LN6@StartTurn

; 342  : 					{
; 343  : 						int iNumUnits = pPlot->getNumUnits();

	mov	ecx, DWORD PTR _pPlot$218384[ebp]
	call	?getNumUnits@CvPlot@@QBEHXZ		; CvPlot::getNumUnits
	mov	DWORD PTR _iNumUnits$218386[ebp], eax

; 344  : 						for(int i = 0; i < iNumUnits; ++i)

	mov	DWORD PTR _i$218387[ebp], 0
	jmp	SHORT $LN4@StartTurn
$LN3@StartTurn:
	mov	edx, DWORD PTR _i$218387[ebp]
	add	edx, 1
	mov	DWORD PTR _i$218387[ebp], edx
$LN4@StartTurn:
	mov	eax, DWORD PTR _i$218387[ebp]
	cmp	eax, DWORD PTR _iNumUnits$218386[ebp]
	jge	SHORT $LN6@StartTurn

; 345  : 						{
; 346  : 							CvUnit* pStackedUnit = pPlot->getUnitByIndex(i);

	mov	ecx, DWORD PTR _i$218387[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlot$218384[ebp]
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex
	mov	DWORD PTR _pStackedUnit$218391[ebp], eax

; 347  : 							if(pStackedUnit->getUnitType() == m_eHakkapelittaType)

	mov	ecx, DWORD PTR _pStackedUnit$218391[ebp]
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	mov	edx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [edx+72]
	jne	SHORT $LN1@StartTurn

; 348  : 							{
; 349  : 								gDLL->UnlockAchievement(ACHIEVEMENT_XP1_31);

	mov	eax, DWORD PTR $T219002[ebp]
	mov	DWORD PTR tv168[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv168[ebp], ecx
	push	221					; 000000ddH
	mov	edx, DWORD PTR tv168[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv168[ebp]
	mov	edx, DWORD PTR [eax+828]
	call	edx

; 350  : 								return;

	jmp	SHORT $LN16@StartTurn
$LN1@StartTurn:

; 351  : 							}
; 352  : 						}

	jmp	SHORT $LN3@StartTurn
$LN6@StartTurn:

; 353  : 					}	
; 354  : 				}
; 355  : 			}

	jmp	$LN8@StartTurn
$LN16@StartTurn:

; 356  : 		}
; 357  : 		
; 358  : 	}
; 359  : #ifdef AUI_ACHIEVEMENT_FIX_RELIGION_WE_ARE_FAMILY_WORKING
; 360  : 	ReligionTypes eMyReligion = m_kPlayer.GetReligions()->GetReligionCreatedByPlayer();
; 361  : 	if (eMyReligion > RELIGION_PANTHEON)
; 362  : 	{
; 363  : 		if (GC.getMap().numPlots() >= 80 * 52) // Determine if this is a standard size or larger map.
; 364  : 		{
; 365  : 			bool bSpreadToAllCapitals = true;
; 366  : 			for (int iI = 0; iI < MAX_CIV_PLAYERS; ++iI)
; 367  : 			{
; 368  : 				CvPlayer& kPlayer = GET_PLAYER((PlayerTypes)iI);
; 369  : 				if (kPlayer.isAlive() && !kPlayer.isMinorCiv())
; 370  : 				{
; 371  : 					CvCity* pCapital = kPlayer.getCapitalCity();
; 372  : 					if (pCapital != NULL)
; 373  : 					{
; 374  : 						CvCityReligions* pCityReligions = pCapital->GetCityReligions();
; 375  : 						if (pCityReligions != NULL)
; 376  : 						{
; 377  : 							if (pCityReligions->GetReligiousMajority() != eMyReligion)
; 378  : 							{
; 379  : 								bSpreadToAllCapitals = false;
; 380  : 								break;
; 381  : 							}
; 382  : 						}
; 383  : 					}
; 384  : 				}
; 385  : 			}
; 386  : 			if (bSpreadToAllCapitals)
; 387  : 			{
; 388  : 				gDLL->UnlockAchievement(ACHIEVEMENT_XP1_19);
; 389  : 			}
; 390  : 		}
; 391  : 	}
; 392  : #endif
; 393  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?StartTurn@CvPlayerAchievements@@QAEXXZ ENDP		; CvPlayerAchievements::StartTurn
_TEXT	ENDS
PUBLIC	?EndTurn@CvPlayerAchievements@@QAEXXZ		; CvPlayerAchievements::EndTurn
; Function compile flags: /Odtp
;	COMDAT ?EndTurn@CvPlayerAchievements@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EndTurn@CvPlayerAchievements@@QAEXXZ PROC		; CvPlayerAchievements::EndTurn, COMDAT
; _this$ = ecx

; 396  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 397  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?EndTurn@CvPlayerAchievements@@QAEXXZ ENDP		; CvPlayerAchievements::EndTurn
_TEXT	ENDS
PUBLIC	??_C@_0BA@NENPBFNI@BUILDING_HARBOR?$AA@		; `string'
PUBLIC	??_C@_0BF@KNBGCICH@BUILDING_CARAVANSARY?$AA@	; `string'
PUBLIC	??_C@_0P@FMILPNKP@BUILDING_PETRA?$AA@		; `string'
PUBLIC	??_C@_0BC@NONBPIKL@BUILDING_COLOSSUS?$AA@	; `string'
PUBLIC	?FinishedBuilding@CvPlayerAchievements@@QAEXPAVCvCity@@W4BuildingTypes@@@Z ; CvPlayerAchievements::FinishedBuilding
EXTRN	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetNumBuilding
EXTRN	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ:PROC ; CvCity::GetCityBuildings
EXTRN	?isHuman@CvPlayer@@QBE_NXZ:PROC			; CvPlayer::isHuman
EXTRN	?isLocalPlayer@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isLocalPlayer
;	COMDAT ??_C@_0BA@NENPBFNI@BUILDING_HARBOR?$AA@
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
CONST	SEGMENT
??_C@_0BA@NENPBFNI@BUILDING_HARBOR?$AA@ DB 'BUILDING_HARBOR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KNBGCICH@BUILDING_CARAVANSARY?$AA@
CONST	SEGMENT
??_C@_0BF@KNBGCICH@BUILDING_CARAVANSARY?$AA@ DB 'BUILDING_CARAVANSARY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FMILPNKP@BUILDING_PETRA?$AA@
CONST	SEGMENT
??_C@_0P@FMILPNKP@BUILDING_PETRA?$AA@ DB 'BUILDING_PETRA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NONBPIKL@BUILDING_COLOSSUS?$AA@
CONST	SEGMENT
??_C@_0BC@NONBPIKL@BUILDING_COLOSSUS?$AA@ DB 'BUILDING_COLOSSUS', 00H ; `string'
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvachievementunlocker.cpp
CONST	ENDS
;	COMDAT ?FinishedBuilding@CvPlayerAchievements@@QAEXPAVCvCity@@W4BuildingTypes@@@Z
_TEXT	SEGMENT
tv170 = -16						; size = 4
_this$ = -12						; size = 4
$T219010 = -8						; size = 4
_pkBuildings$218414 = -4				; size = 4
_pkCity$ = 8						; size = 4
_eBuilding$ = 12					; size = 4
?FinishedBuilding@CvPlayerAchievements@@QAEXPAVCvCity@@W4BuildingTypes@@@Z PROC ; CvPlayerAchievements::FinishedBuilding, COMDAT
; _this$ = ecx

; 404  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 405  : 	if(m_eCollossusType == UNDEFINED_TYPE)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], -999		; fffffc19H
	jne	SHORT $LN7@FinishedBu

; 406  : 	{
; 407  : 		m_eCollossusType = (BuildingTypes)GC.getInfoTypeForString("BUILDING_COLOSSUS", true);

	push	1
	push	OFFSET ??_C@_0BC@NONBPIKL@BUILDING_COLOSSUS?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
$LN7@FinishedBu:

; 408  : 	}
; 409  : 
; 410  : 	if(m_ePetraType == UNDEFINED_TYPE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+20], -999		; fffffc19H
	jne	SHORT $LN6@FinishedBu

; 411  : 	{
; 412  : 		m_ePetraType = (BuildingTypes)GC.getInfoTypeForString("BUILDING_PETRA", true);

	push	1
	push	OFFSET ??_C@_0P@FMILPNKP@BUILDING_PETRA?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
$LN6@FinishedBu:

; 413  : 	}
; 414  : 
; 415  : 	if(m_eCaravansaryType == UNDEFINED_TYPE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+24], -999		; fffffc19H
	jne	SHORT $LN5@FinishedBu

; 416  : 	{
; 417  : 		m_eCaravansaryType = (BuildingTypes)GC.getInfoTypeForString("BUILDING_CARAVANSARY", true);

	push	1
	push	OFFSET ??_C@_0BF@KNBGCICH@BUILDING_CARAVANSARY?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], eax
$LN5@FinishedBu:

; 418  : 	}
; 419  : 
; 420  : 	if(m_eHarborType == UNDEFINED_TYPE)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+28], -999		; fffffc19H
	jne	SHORT $LN4@FinishedBu

; 421  : 	{
; 422  : 		m_eHarborType = (BuildingTypes)GC.getInfoTypeForString("BUILDING_HARBOR", true);

	push	1
	push	OFFSET ??_C@_0BA@NENPBFNI@BUILDING_HARBOR?$AA@
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], eax
$LN4@FinishedBu:

; 423  : 	}
; 424  : 
; 425  : 	if(m_kPlayer.isLocalPlayer() && m_kPlayer.isHuman() && m_eCollossusType != NO_BUILDING && m_ePetraType != NO_BUILDING && m_eCaravansaryType != NO_BUILDING && m_eHarborType != NO_BUILDING)

	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?isLocalPlayer@CvPlayer@@QBE_NXZ	; CvPlayer::isLocalPlayer
	movzx	eax, al
	test	eax, eax
	je	$LN8@FinishedBu
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	movzx	edx, al
	test	edx, edx
	je	$LN8@FinishedBu
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], -1
	je	$LN8@FinishedBu
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], -1
	je	$LN8@FinishedBu
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+24], -1
	je	$LN8@FinishedBu
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], -1
	je	$LN8@FinishedBu

; 426  : 	{
; 427  : 		CvCityBuildings* pkBuildings = pkCity->GetCityBuildings();

	mov	ecx, DWORD PTR _pkCity$[ebp]
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	DWORD PTR _pkBuildings$218414[ebp], eax

; 428  : 		if(pkBuildings != NULL)

	cmp	DWORD PTR _pkBuildings$218414[ebp], 0
	je	SHORT $LN8@FinishedBu

; 429  : 		{
; 430  : 			if(pkBuildings->GetNumBuilding(m_eCollossusType) > 0 &&
; 431  : 				pkBuildings->GetNumBuilding(m_ePetraType) > 0 &&
; 432  : 				pkBuildings->GetNumBuilding(m_eCaravansaryType) > 0 &&
; 433  : 				pkBuildings->GetNumBuilding(m_eHarborType) > 0)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	ecx, DWORD PTR _pkBuildings$218414[ebp]
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN8@FinishedBu
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	ecx, DWORD PTR _pkBuildings$218414[ebp]
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN8@FinishedBu
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _pkBuildings$218414[ebp]
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN8@FinishedBu
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	ecx, DWORD PTR _pkBuildings$218414[ebp]
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN8@FinishedBu

; 434  : 			{
; 435  : 				gDLL->UnlockAchievement(ACHIEVEMENT_XP2_30);

	mov	eax, DWORD PTR $T219010[ebp]
	mov	DWORD PTR tv170[ebp], eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8564
	mov	DWORD PTR tv170[ebp], ecx
	push	272					; 00000110H
	mov	edx, DWORD PTR tv170[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv170[ebp]
	mov	edx, DWORD PTR [eax+828]
	call	edx
$LN8@FinishedBu:

; 436  : 			}
; 437  : 		}
; 438  : 	}
; 439  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?FinishedBuilding@CvPlayerAchievements@@QAEXPAVCvCity@@W4BuildingTypes@@@Z ENDP ; CvPlayerAchievements::FinishedBuilding
_TEXT	ENDS
PUBLIC	?Read@CvPlayerAchievements@@QAEXAAVFDataStream@@@Z ; CvPlayerAchievements::Read
EXTRN	?Read@FDataStream@@IAEXAAH@Z:PROC		; FDataStream::Read
; Function compile flags: /Odtp
;	COMDAT ?Read@CvPlayerAchievements@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iVersion$ = -4						; size = 4
_kStream$ = 8						; size = 4
?Read@CvPlayerAchievements@@QAEXAAVFDataStream@@@Z PROC	; CvPlayerAchievements::Read, COMDAT
; _this$ = ecx

; 442  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 443  : 	int iVersion = 0;

	mov	DWORD PTR _iVersion$[ebp], 0

; 444  : 	kStream >> iVersion;

	lea	eax, DWORD PTR _iVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 445  : 	kStream >> m_iAchievement_XP1_32_Progress;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 446  : 	kStream >> m_iAchievement_XP1_33_Progress;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 447  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Read@CvPlayerAchievements@@QAEXAAVFDataStream@@@Z ENDP	; CvPlayerAchievements::Read
_TEXT	ENDS
PUBLIC	?Write@CvPlayerAchievements@@QBEXAAVFDataStream@@@Z ; CvPlayerAchievements::Write
EXTRN	?Write@FDataStream@@IAEXABH@Z:PROC		; FDataStream::Write
; Function compile flags: /Odtp
;	COMDAT ?Write@CvPlayerAchievements@@QBEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iVersion$ = -4						; size = 4
_kStream$ = 8						; size = 4
?Write@CvPlayerAchievements@@QBEXAAVFDataStream@@@Z PROC ; CvPlayerAchievements::Write, COMDAT
; _this$ = ecx

; 450  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 451  : 	int iVersion = 1;

	mov	DWORD PTR _iVersion$[ebp], 1

; 452  : 	kStream << iVersion;

	lea	eax, DWORD PTR _iVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 453  : 	kStream << m_iAchievement_XP1_32_Progress;

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 454  : 	kStream << m_iAchievement_XP1_33_Progress;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _kStream$[ebp]
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 455  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Write@CvPlayerAchievements@@QBEXAAVFDataStream@@@Z ENDP ; CvPlayerAchievements::Write
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredllutil\include\cvstring.h
_TEXT	ENDS
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
EXTRN	?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B:DWORD ; CvPreGame::sr_TeamTypes
; Function compile flags: /Odtp
; File d:\sources\lekmod_git\checkout\lekmod_dll\cvgamecoredll_expansion2\cvpregame.h
;	COMDAT ?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z PROC ; CvPreGame::teamType, COMDAT

; 298  : {

	push	ebp
	mov	ebp, esp

; 299  : 	if(p >= 0 && p < MAX_PLAYERS)

	cmp	DWORD PTR _p$[ebp], 0
	jl	SHORT $LN1@teamType
	cmp	DWORD PTR _p$[ebp], 64			; 00000040H
	jge	SHORT $LN1@teamType

; 300  : 		return sr_TeamTypes[p];

	mov	eax, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	jmp	SHORT $LN2@teamType
$LN1@teamType:

; 301  : 	return NO_TEAM;

	or	eax, -1
$LN2@teamType:

; 302  : }

	pop	ebp
	ret	0
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ENDP ; CvPreGame::teamType
_TEXT	ENDS
END
