; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Documents\GitHub\Lekmod\LEKMOD_DLL\CvGameCoreDLL_Expansion2\Lua\CvLuaTeamTech.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG218177 DB	'SetHasTech', 00H
	ORG $+1
$SG218178 DB	'HasTech', 00H
$SG218179 DB	'GetNumTechsKnown', 00H
	ORG $+3
$SG218180 DB	'HasResearchedAllTechs', 00H
	ORG $+2
$SG218181 DB	'GetLastTechAcquired', 00H
$SG218182 DB	'SetNoTradeTech', 00H
	ORG $+1
$SG218183 DB	'IsNoTradeTech', 00H
	ORG $+2
$SG218184 DB	'IncrementTechCount', 00H
	ORG $+1
$SG218185 DB	'GetTechCount', 00H
	ORG $+3
$SG218186 DB	'SetResearchProgress', 00H
$SG218187 DB	'SetResearchProgressTimes100', 00H
$SG218188 DB	'GetResearchProgress', 00H
$SG218189 DB	'GetResearchProgressTimes100', 00H
$SG218190 DB	'ChangeResearchProgress', 00H
	ORG $+1
$SG218191 DB	'ChangeResearchProgressTimes100', 00H
	ORG $+1
$SG218192 DB	'ChangeResearchProgressPercent', 00H
	ORG $+2
$SG218193 DB	'GetResearchCost', 00H
$SG218194 DB	'GetResearchLeft', 00H
$SG218197 DB	'TeamTech', 00H
	ORG $+3
$SG218513 DB	'Instance does not exist.', 00H
	ORG $+3
$SG218583 DB	'__instance', 00H
	ORG $+5
$SG218589 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
CONST	ENDS
EXTRN	_lua_tointeger:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
;	COMDAT ??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<int>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 19   : 		return lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 20   : 	}

	ret	0
??$toValue@H@CvLuaArgs@@YAHPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<int>
_TEXT	ENDS
EXTRN	_lua_toboolean:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z PROC	; CvLuaArgs::toValue<bool>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 24   : 		return lua_toboolean(L, idx) != 0;

	push	eax
	push	ecx
	call	_lua_toboolean
	add	esp, 8
	neg	eax
	sbb	eax, eax
	neg	eax

; 25   : 	}

	ret	0
??$toValue@_N@CvLuaArgs@@YA_NPAUlua_State@@H@Z ENDP	; CvLuaArgs::toValue<bool>
_TEXT	ENDS
EXTRN	_lua_pushinteger:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z
_TEXT	SEGMENT
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z PROC	; CvLuaArgs::pushValue<int>, COMDAT
; _L$ = ecx
; _t$ = eax

; 39   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 40   : 	}

	ret	0
??$pushValue@H@CvLuaArgs@@YAXPAUlua_State@@H@Z ENDP	; CvLuaArgs::pushValue<int>
_TEXT	ENDS
EXTRN	_lua_pushboolean:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z
_TEXT	SEGMENT
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z PROC	; CvLuaArgs::pushValue<bool>, COMDAT
; _L$ = ecx
; _t$ = eax

; 45   : 		lua_pushboolean(L, t);

	movzx	eax, al
	push	eax
	push	ecx
	call	_lua_pushboolean
	add	esp, 8

; 46   : 	}

	ret	0
??$pushValue@_N@CvLuaArgs@@YAXPAUlua_State@@_N@Z ENDP	; CvLuaArgs::pushValue<bool>
_TEXT	ENDS
PUBLIC	?GetTypeName@CvLuaTeamTech@@SAPBDXZ		; CvLuaTeamTech::GetTypeName
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluateamtech.cpp
;	COMDAT ?GetTypeName@CvLuaTeamTech@@SAPBDXZ
_TEXT	SEGMENT
?GetTypeName@CvLuaTeamTech@@SAPBDXZ PROC		; CvLuaTeamTech::GetTypeName, COMDAT

; 57   : 	return "TeamTech";

	mov	eax, OFFSET $SG218197

; 58   : }

	ret	0
?GetTypeName@CvLuaTeamTech@@SAPBDXZ ENDP		; CvLuaTeamTech::GetTypeName
_TEXT	ENDS
PUBLIC	?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@KAXPAUlua_State@@@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::DefaultHandleMissingInstance
EXTRN	_luaL_error:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@KAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@KAXPAUlua_State@@@Z PROC ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::DefaultHandleMissingInstance, COMDAT

; 165  : 	luaL_error(L, "Instance does not exist.");

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET $SG218513
	push	eax
	call	_luaL_error
	add	esp, 8

; 166  : }

	ret	0
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@KAXPAUlua_State@@@Z ENDP ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::DefaultHandleMissingInstance
_TEXT	ENDS
PUBLIC	?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SA?BHXZ ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetStartingArgIndex
; Function compile flags: /Ogtpy
;	COMDAT ?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SA?BHXZ
_TEXT	SEGMENT
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SA?BHXZ PROC ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetStartingArgIndex, COMDAT

; 159  : 	return 2;

	mov	eax, 2

; 160  : }

	ret	0
?GetStartingArgIndex@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SA?BHXZ ENDP ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetStartingArgIndex
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluaargtemplates.h
_TEXT	ENDS
;	COMDAT ??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum TechTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4TechTypes@@@CvLuaArgs@@YA?AW4TechTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum TechTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$pushValue@W4TechTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TechTypes@@@Z
_TEXT	SEGMENT
??$pushValue@W4TechTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TechTypes@@@Z PROC ; CvLuaArgs::pushValue<enum TechTypes>, COMDAT
; _L$ = ecx
; _t$ = eax

; 31   : 		//This is pretty unsafe, but common.
; 32   : 		//Assume T is a poorly designed enum =(
; 33   : 		lua_pushinteger(L, t);

	push	eax
	push	ecx
	call	_lua_pushinteger
	add	esp, 8

; 34   : 	}

	ret	0
??$pushValue@W4TechTypes@@@CvLuaArgs@@YAXPAUlua_State@@W4TechTypes@@@Z ENDP ; CvLuaArgs::pushValue<enum TechTypes>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z
_TEXT	SEGMENT
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z PROC ; CvLuaArgs::toValue<enum PlayerTypes>, COMDAT
; _L$ = ecx
; _idx$ = eax

; 12   : 		//This is pretty unsafe, but common.
; 13   : 		//Assume T is a poorly designed enum =(
; 14   : 		return (T)lua_tointeger(L, idx);

	push	eax
	push	ecx
	call	_lua_tointeger
	add	esp, 8

; 15   : 	}

	ret	0
??$toValue@W4PlayerTypes@@@CvLuaArgs@@YA?AW4PlayerTypes@@PAUlua_State@@H@Z ENDP ; CvLuaArgs::toValue<enum PlayerTypes>
_TEXT	ENDS
PUBLIC	?HandleMissingInstance@CvLuaTeamTech@@SAXPAUlua_State@@@Z ; CvLuaTeamTech::HandleMissingInstance
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluateamtech.cpp
;	COMDAT ?HandleMissingInstance@CvLuaTeamTech@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?HandleMissingInstance@CvLuaTeamTech@@SAXPAUlua_State@@@Z PROC ; CvLuaTeamTech::HandleMissingInstance, COMDAT

; 27   : 	DefaultHandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET $SG218513
	push	eax
	call	_luaL_error
	add	esp, 8

; 28   : }

	ret	0
?HandleMissingInstance@CvLuaTeamTech@@SAXPAUlua_State@@@Z ENDP ; CvLuaTeamTech::HandleMissingInstance
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAPAVCvTeamTechs@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetInstance
EXTRN	_lua_settop:PROC
EXTRN	_lua_touserdata:PROC
EXTRN	_lua_getfield:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_gettop:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAPAVCvTeamTechs@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAPAVCvTeamTechs@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG218583
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN13@GetInstanc
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN13@GetInstanc

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG218589
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc:

; 151  : 		Derived::HandleMissingInstance(L);

	push	OFFSET $SG218513
	push	esi
	call	_luaL_error
	add	esp, 8
$LN13@GetInstanc:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaTeamTech@@VCvTeamTechs@@@@SAPAVCvTeamTechs@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaTeamTech,CvTeamTechs>::GetInstance
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,bool>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvluamethodwrapper.h
;	COMDAT ??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@_N@Z@Z
_TEXT	SEGMENT
$T218727 = -4						; size = 1
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@_N@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,bool>, COMDAT

; 239  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi

; 240  : 	const int idx = Derived::GetStartingArgIndex();
; 241  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+12]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe
	push	OFFSET $SG218583
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe
	xor	bl, bl
$LN7@BasicLuaMe:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe
	push	OFFSET $SG218589
	push	esi
	call	_luaL_error
	push	OFFSET $SG218513
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe:

; 242  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1));

	push	3
	push	esi
	call	_lua_toboolean
	add	esp, 8
	test	eax, eax
	setne	al
	mov	BYTE PTR $T218727[esp+20], al
	mov	ecx, DWORD PTR $T218727[esp+20]
	push	ecx
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	pop	edi
	pop	esi
	pop	ebp

; 243  : 	return 0;

	xor	eax, eax
	pop	ebx

; 244  : }

	pop	ecx
	ret	0
??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@_N@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_NW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool,enum TechTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_NW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NW4TechTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_NW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NW4TechTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool,enum TechTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@2
	push	OFFSET $SG218583
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@2
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@2
	xor	bl, bl
$LN7@BasicLuaMe@2:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@2
	push	OFFSET $SG218589
	push	esi
	call	_luaL_error
	push	OFFSET $SG218513
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@2:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@_NW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NW4TechTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool,enum TechTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHXZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@3
	push	OFFSET $SG218583
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@3
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@3
	xor	bl, bl
$LN5@BasicLuaMe@3:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@3
	push	OFFSET $SG218589
	push	esi
	call	_luaL_error
	push	OFFSET $SG218513
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@3:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NXZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NXZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@4
	push	OFFSET $SG218583
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@4
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@4
	xor	bl, bl
$LN5@BasicLuaMe@4:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@4
	push	OFFSET $SG218589
	push	esi
	call	_luaL_error
	push	OFFSET $SG218513
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@4:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NXZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE?AW4TechTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE?AW4TechTypes@@XZ@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE?AW4TechTypes@@XZ@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes>, COMDAT

; 69   : {

	push	ebx
	push	ebp
	push	esi

; 70   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@BasicLuaMe@5
	push	OFFSET $SG218583
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@BasicLuaMe@5
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@BasicLuaMe@5
	xor	bl, bl
$LN5@BasicLuaMe@5:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@BasicLuaMe@5
	push	OFFSET $SG218589
	push	esi
	call	_luaL_error
	push	OFFSET $SG218513
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@BasicLuaMe@5:

; 71   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)());

	mov	ecx, edi
	call	DWORD PTR _func$[esp+12]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 72   : 
; 73   : 	return 1;

	mov	eax, 1
	pop	ebx

; 74   : }

	ret	0
??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE?AW4TechTypes@@XZ@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes>, COMDAT

; 230  : {

	push	ebx
	push	ebp
	push	esi

; 231  : 	const int idx = Derived::GetStartingArgIndex();
; 232  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@6
	push	OFFSET $SG218583
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@6
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@6
	xor	bl, bl
$LN7@BasicLuaMe@6:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@6
	push	OFFSET $SG218589
	push	esi
	call	_luaL_error
	push	OFFSET $SG218513
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@6:

; 233  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	pop	edi
	pop	esi
	pop	ebp

; 234  : 	return 0;

	xor	eax, eax
	pop	ebx

; 235  : }

	ret	0
??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes>, COMDAT

; 78   : {

	push	ebx
	push	ebp
	push	esi

; 79   : 	const int idx = Derived::GetStartingArgIndex();
; 80   : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@7
	push	OFFSET $SG218583
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@7
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@7
	xor	bl, bl
$LN7@BasicLuaMe@7:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@7
	push	OFFSET $SG218589
	push	esi
	call	_luaL_error
	push	OFFSET $SG218513
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@7:

; 81   : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx)));

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+16]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 82   : 
; 83   : 	return 1;

	mov	eax, 1
	pop	ebx

; 84   : }

	ret	0
??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@W4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@HW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,int,enum PlayerTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@W4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@HW4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@W4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@HW4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,int,enum PlayerTypes>, COMDAT

; 249  : {

	push	ebx
	push	ebp
	push	esi

; 250  : 	const int idx = Derived::GetStartingArgIndex();
; 251  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@8
	push	OFFSET $SG218583
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@8
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@8
	xor	bl, bl
$LN7@BasicLuaMe@8:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@8
	push	OFFSET $SG218589
	push	esi
	call	_luaL_error
	push	OFFSET $SG218513
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@8:

; 252  : 	(pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2));

	push	4
	push	esi
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H
	push	ebx
	push	eax
	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	pop	edi
	pop	esi
	pop	ebp

; 253  : 	return 0;

	xor	eax, eax
	pop	ebx

; 254  : }

	ret	0
??$BasicLuaMethod@W4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@HW4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,int,enum PlayerTypes>
_TEXT	ENDS
PUBLIC	??$BasicLuaMethod@HW4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEHW4TechTypes@@HW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes,int,enum PlayerTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$BasicLuaMethod@HW4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEHW4TechTypes@@HW4PlayerTypes@@@Z@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_func$ = 12						; size = 4
??$BasicLuaMethod@HW4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEHW4TechTypes@@HW4PlayerTypes@@@Z@Z PROC ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes,int,enum PlayerTypes>, COMDAT

; 150  : {

	push	ebx
	push	ebp
	push	esi

; 151  : 	const int idx = Derived::GetStartingArgIndex();
; 152  : 	InstanceType* pkType = Derived::GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN7@BasicLuaMe@9
	push	OFFSET $SG218583
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN7@BasicLuaMe@9
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN7@BasicLuaMe@9
	xor	bl, bl
$LN7@BasicLuaMe@9:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN14@BasicLuaMe@9
	push	OFFSET $SG218589
	push	esi
	call	_luaL_error
	push	OFFSET $SG218513
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN14@BasicLuaMe@9:

; 153  : 	CvLuaArgs::pushValue<ret>(L, (pkType->*func)(CvLuaArgs::toValue<arg1>(L, idx), CvLuaArgs::toValue<arg2>(L, idx + 1), CvLuaArgs::toValue<arg3>(L, idx + 2)));

	push	4
	push	esi
	call	_lua_tointeger
	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	push	2
	push	esi
	mov	ebp, eax
	call	_lua_tointeger
	add	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	eax
	mov	ecx, edi
	call	DWORD PTR _func$[esp+24]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 154  : 
; 155  : 	return 1;

	mov	eax, 1
	pop	ebx

; 156  : }

	ret	0
??$BasicLuaMethod@HW4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEHW4TechTypes@@HW4PlayerTypes@@@Z@Z ENDP ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes,int,enum PlayerTypes>
_TEXT	ENDS
PUBLIC	?lSetHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z	; CvLuaTeamTech::lSetHasTech
EXTRN	?SetHasTech@CvTeamTechs@@QAEXW4TechTypes@@_N@Z:PROC ; CvTeamTechs::SetHasTech
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluateamtech.cpp
;	COMDAT ?lSetHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC	; CvLuaTeamTech::lSetHasTech, COMDAT

; 70   : 	return BasicLuaMethod(L, &CvTeamTechs::SetHasTech);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetHasTech@CvTeamTechs@@QAEXW4TechTypes@@_N@Z ; CvTeamTechs::SetHasTech
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,bool>
	add	esp, 8

; 71   : }

	ret	0
?lSetHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeamTech::lSetHasTech
_TEXT	ENDS
PUBLIC	?lHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z	; CvLuaTeamTech::lHasTech
EXTRN	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z:PROC	; CvTeamTechs::HasTech
; Function compile flags: /Ogtpy
;	COMDAT ?lHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC	; CvLuaTeamTech::lHasTech, COMDAT

; 77   : 	return BasicLuaMethod(L, &CvTeamTechs::HasTech);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z ; CvTeamTechs::HasTech
	push	eax
	call	??$BasicLuaMethod@_NW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool,enum TechTypes>
	add	esp, 8

; 78   : }

	ret	0
?lHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeamTech::lHasTech
_TEXT	ENDS
PUBLIC	?lGetNumTechsKnown@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetNumTechsKnown
EXTRN	?GetNumTechsKnown@CvTeamTechs@@QBEHXZ:PROC	; CvTeamTechs::GetNumTechsKnown
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumTechsKnown@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumTechsKnown@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lGetNumTechsKnown, COMDAT

; 84   : 	return BasicLuaMethod(L, &CvTeamTechs::GetNumTechsKnown);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetNumTechsKnown@CvTeamTechs@@QBEHXZ ; CvTeamTechs::GetNumTechsKnown
	push	eax
	call	??$BasicLuaMethod@H@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHXZ@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int>
	add	esp, 8

; 85   : }

	ret	0
?lGetNumTechsKnown@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lGetNumTechsKnown
_TEXT	ENDS
PUBLIC	?lHasResearchedAllTechs@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lHasResearchedAllTechs
EXTRN	?HasResearchedAllTechs@CvTeamTechs@@QBE_NXZ:PROC ; CvTeamTechs::HasResearchedAllTechs
; Function compile flags: /Ogtpy
;	COMDAT ?lHasResearchedAllTechs@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lHasResearchedAllTechs@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lHasResearchedAllTechs, COMDAT

; 91   : 	return BasicLuaMethod(L, &CvTeamTechs::HasResearchedAllTechs);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?HasResearchedAllTechs@CvTeamTechs@@QBE_NXZ ; CvTeamTechs::HasResearchedAllTechs
	push	eax
	call	??$BasicLuaMethod@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NXZ@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool>
	add	esp, 8

; 92   : }

	ret	0
?lHasResearchedAllTechs@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lHasResearchedAllTechs
_TEXT	ENDS
PUBLIC	?lGetLastTechAcquired@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetLastTechAcquired
EXTRN	?GetLastTechAcquired@CvTeamTechs@@QBE?AW4TechTypes@@XZ:PROC ; CvTeamTechs::GetLastTechAcquired
; Function compile flags: /Ogtpy
;	COMDAT ?lGetLastTechAcquired@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetLastTechAcquired@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lGetLastTechAcquired, COMDAT

; 98   : 	return BasicLuaMethod(L, &CvTeamTechs::GetLastTechAcquired);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetLastTechAcquired@CvTeamTechs@@QBE?AW4TechTypes@@XZ ; CvTeamTechs::GetLastTechAcquired
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE?AW4TechTypes@@XZ@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes>
	add	esp, 8

; 99   : }

	ret	0
?lGetLastTechAcquired@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lGetLastTechAcquired
_TEXT	ENDS
PUBLIC	?lSetNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lSetNoTradeTech
EXTRN	?SetNoTradeTech@CvTeamTechs@@QAEXW4TechTypes@@_N@Z:PROC ; CvTeamTechs::SetNoTradeTech
; Function compile flags: /Ogtpy
;	COMDAT ?lSetNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lSetNoTradeTech, COMDAT

; 105  : 	return BasicLuaMethod(L, &CvTeamTechs::SetNoTradeTech);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetNoTradeTech@CvTeamTechs@@QAEXW4TechTypes@@_N@Z ; CvTeamTechs::SetNoTradeTech
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@_N@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@_N@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,bool>
	add	esp, 8

; 106  : }

	ret	0
?lSetNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lSetNoTradeTech
_TEXT	ENDS
PUBLIC	?lIsNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lIsNoTradeTech
EXTRN	?IsNoTradeTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z:PROC ; CvTeamTechs::IsNoTradeTech
; Function compile flags: /Ogtpy
;	COMDAT ?lIsNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC	; CvLuaTeamTech::lIsNoTradeTech, COMDAT

; 112  : 	return BasicLuaMethod(L, &CvTeamTechs::IsNoTradeTech);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IsNoTradeTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z ; CvTeamTechs::IsNoTradeTech
	push	eax
	call	??$BasicLuaMethod@_NW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BE_NW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<bool,enum TechTypes>
	add	esp, 8

; 113  : }

	ret	0
?lIsNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeamTech::lIsNoTradeTech
_TEXT	ENDS
PUBLIC	?lIncrementTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lIncrementTechCount
EXTRN	?IncrementTechCount@CvTeamTechs@@QAEXW4TechTypes@@@Z:PROC ; CvTeamTechs::IncrementTechCount
; Function compile flags: /Ogtpy
;	COMDAT ?lIncrementTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIncrementTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lIncrementTechCount, COMDAT

; 119  : 	return BasicLuaMethod(L, &CvTeamTechs::IncrementTechCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?IncrementTechCount@CvTeamTechs@@QAEXW4TechTypes@@@Z ; CvTeamTechs::IncrementTechCount
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes>
	add	esp, 8

; 120  : }

	ret	0
?lIncrementTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lIncrementTechCount
_TEXT	ENDS
PUBLIC	?lGetTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetTechCount
EXTRN	?GetTechCount@CvTeamTechs@@QBEHW4TechTypes@@@Z:PROC ; CvTeamTechs::GetTechCount
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC	; CvLuaTeamTech::lGetTechCount, COMDAT

; 126  : 	return BasicLuaMethod(L, &CvTeamTechs::GetTechCount);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetTechCount@CvTeamTechs@@QBEHW4TechTypes@@@Z ; CvTeamTechs::GetTechCount
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes>
	add	esp, 8

; 127  : }

	ret	0
?lGetTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP	; CvLuaTeamTech::lGetTechCount
_TEXT	ENDS
PUBLIC	?lSetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lSetResearchProgress
EXTRN	?SetResearchProgress@CvTeamTechs@@QAEXW4TechTypes@@HW4PlayerTypes@@@Z:PROC ; CvTeamTechs::SetResearchProgress
; Function compile flags: /Ogtpy
;	COMDAT ?lSetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lSetResearchProgress, COMDAT

; 133  : 	return BasicLuaMethod(L, &CvTeamTechs::SetResearchProgress);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetResearchProgress@CvTeamTechs@@QAEXW4TechTypes@@HW4PlayerTypes@@@Z ; CvTeamTechs::SetResearchProgress
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@HW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,int,enum PlayerTypes>
	add	esp, 8

; 134  : }

	ret	0
?lSetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lSetResearchProgress
_TEXT	ENDS
PUBLIC	?lSetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lSetResearchProgressTimes100
EXTRN	?SetResearchProgressTimes100@CvTeamTechs@@QAEXW4TechTypes@@HW4PlayerTypes@@@Z:PROC ; CvTeamTechs::SetResearchProgressTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lSetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lSetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lSetResearchProgressTimes100, COMDAT

; 140  : 	return BasicLuaMethod(L, &CvTeamTechs::SetResearchProgressTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?SetResearchProgressTimes100@CvTeamTechs@@QAEXW4TechTypes@@HW4PlayerTypes@@@Z ; CvTeamTechs::SetResearchProgressTimes100
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@HW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,int,enum PlayerTypes>
	add	esp, 8

; 141  : }

	ret	0
?lSetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lSetResearchProgressTimes100
_TEXT	ENDS
PUBLIC	?lGetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetResearchProgress
EXTRN	?GetResearchProgress@CvTeamTechs@@QBEHW4TechTypes@@@Z:PROC ; CvTeamTechs::GetResearchProgress
; Function compile flags: /Ogtpy
;	COMDAT ?lGetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lGetResearchProgress, COMDAT

; 147  : 	return BasicLuaMethod(L, &CvTeamTechs::GetResearchProgress);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetResearchProgress@CvTeamTechs@@QBEHW4TechTypes@@@Z ; CvTeamTechs::GetResearchProgress
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes>
	add	esp, 8

; 148  : }

	ret	0
?lGetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lGetResearchProgress
_TEXT	ENDS
PUBLIC	?lGetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetResearchProgressTimes100
EXTRN	?GetResearchProgressTimes100@CvTeamTechs@@QBEHW4TechTypes@@@Z:PROC ; CvTeamTechs::GetResearchProgressTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lGetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lGetResearchProgressTimes100, COMDAT

; 154  : 	return BasicLuaMethod(L, &CvTeamTechs::GetResearchProgressTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetResearchProgressTimes100@CvTeamTechs@@QBEHW4TechTypes@@@Z ; CvTeamTechs::GetResearchProgressTimes100
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes>
	add	esp, 8

; 155  : }

	ret	0
?lGetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lGetResearchProgressTimes100
_TEXT	ENDS
PUBLIC	?lChangeResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lChangeResearchProgress
EXTRN	?ChangeResearchProgress@CvTeamTechs@@QAEXW4TechTypes@@HW4PlayerTypes@@@Z:PROC ; CvTeamTechs::ChangeResearchProgress
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lChangeResearchProgress, COMDAT

; 161  : 	return BasicLuaMethod(L, &CvTeamTechs::ChangeResearchProgress);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeResearchProgress@CvTeamTechs@@QAEXW4TechTypes@@HW4PlayerTypes@@@Z ; CvTeamTechs::ChangeResearchProgress
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@HW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,int,enum PlayerTypes>
	add	esp, 8

; 162  : }

	ret	0
?lChangeResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lChangeResearchProgress
_TEXT	ENDS
PUBLIC	?lChangeResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lChangeResearchProgressTimes100
EXTRN	?ChangeResearchProgressTimes100@CvTeamTechs@@QAEXW4TechTypes@@HW4PlayerTypes@@@Z:PROC ; CvTeamTechs::ChangeResearchProgressTimes100
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lChangeResearchProgressTimes100, COMDAT

; 168  : 	return BasicLuaMethod(L, &CvTeamTechs::ChangeResearchProgressTimes100);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeResearchProgressTimes100@CvTeamTechs@@QAEXW4TechTypes@@HW4PlayerTypes@@@Z ; CvTeamTechs::ChangeResearchProgressTimes100
	push	eax
	call	??$BasicLuaMethod@W4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEXW4TechTypes@@HW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<enum TechTypes,int,enum PlayerTypes>
	add	esp, 8

; 169  : }

	ret	0
?lChangeResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lChangeResearchProgressTimes100
_TEXT	ENDS
PUBLIC	?lChangeResearchProgressPercent@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lChangeResearchProgressPercent
EXTRN	?ChangeResearchProgressPercent@CvTeamTechs@@QAEHW4TechTypes@@HW4PlayerTypes@@@Z:PROC ; CvTeamTechs::ChangeResearchProgressPercent
; Function compile flags: /Ogtpy
;	COMDAT ?lChangeResearchProgressPercent@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lChangeResearchProgressPercent@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lChangeResearchProgressPercent, COMDAT

; 175  : 	return BasicLuaMethod(L, &CvTeamTechs::ChangeResearchProgressPercent);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?ChangeResearchProgressPercent@CvTeamTechs@@QAEHW4TechTypes@@HW4PlayerTypes@@@Z ; CvTeamTechs::ChangeResearchProgressPercent
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@HW4PlayerTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@AEHW4TechTypes@@HW4PlayerTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes,int,enum PlayerTypes>
	add	esp, 8

; 176  : }

	ret	0
?lChangeResearchProgressPercent@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lChangeResearchProgressPercent
_TEXT	ENDS
PUBLIC	?lGetResearchCost@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetResearchCost
EXTRN	?GetResearchCost@CvTeamTechs@@QBEHW4TechTypes@@@Z:PROC ; CvTeamTechs::GetResearchCost
; Function compile flags: /Ogtpy
;	COMDAT ?lGetResearchCost@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResearchCost@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lGetResearchCost, COMDAT

; 182  : 	return BasicLuaMethod(L, &CvTeamTechs::GetResearchCost);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetResearchCost@CvTeamTechs@@QBEHW4TechTypes@@@Z ; CvTeamTechs::GetResearchCost
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes>
	add	esp, 8

; 183  : }

	ret	0
?lGetResearchCost@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lGetResearchCost
_TEXT	ENDS
PUBLIC	?lGetResearchLeft@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetResearchLeft
EXTRN	?GetResearchLeft@CvTeamTechs@@QBEHW4TechTypes@@@Z:PROC ; CvTeamTechs::GetResearchLeft
; Function compile flags: /Ogtpy
;	COMDAT ?lGetResearchLeft@CvLuaTeamTech@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetResearchLeft@CvLuaTeamTech@@KAHPAUlua_State@@@Z PROC ; CvLuaTeamTech::lGetResearchLeft, COMDAT

; 189  : 	return BasicLuaMethod(L, &CvTeamTechs::GetResearchLeft);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET ?GetResearchLeft@CvTeamTechs@@QBEHW4TechTypes@@@Z ; CvTeamTechs::GetResearchLeft
	push	eax
	call	??$BasicLuaMethod@HW4TechTypes@@@?$CvLuaMethodWrapper@VCvLuaTeamTech@@VCvTeamTechs@@@@KAHPAUlua_State@@P8CvTeamTechs@@BEHW4TechTypes@@@Z@Z ; CvLuaMethodWrapper<CvLuaTeamTech,CvTeamTechs>::BasicLuaMethod<int,enum TechTypes>
	add	esp, 8

; 190  : }

	ret	0
?lGetResearchLeft@CvLuaTeamTech@@KAHPAUlua_State@@@Z ENDP ; CvLuaTeamTech::lGetResearchLeft
_TEXT	ENDS
PUBLIC	?PushMethods@CvLuaTeamTech@@SAXPAUlua_State@@H@Z ; CvLuaTeamTech::PushMethods
EXTRN	_lua_setfield:PROC
EXTRN	_lua_pushcclosure:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?PushMethods@CvLuaTeamTech@@SAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
?PushMethods@CvLuaTeamTech@@SAXPAUlua_State@@H@Z PROC	; CvLuaTeamTech::PushMethods, COMDAT

; 31   : {

	push	esi

; 32   : 	Method(SetHasTech);

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	0
	push	OFFSET ?lSetHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lSetHasTech
	push	esi
	call	_lua_pushcclosure
	mov	edi, DWORD PTR _t$[esp+16]
	push	OFFSET $SG218177
	push	edi
	push	esi
	call	_lua_setfield

; 33   : 	Method(HasTech);

	push	0
	push	OFFSET ?lHasTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lHasTech
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218178
	push	edi
	push	esi
	call	_lua_setfield

; 34   : 
; 35   : 	Method(GetNumTechsKnown);

	push	0
	push	OFFSET ?lGetNumTechsKnown@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetNumTechsKnown
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218179
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 36   : 	Method(HasResearchedAllTechs);

	push	0
	push	OFFSET ?lHasResearchedAllTechs@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lHasResearchedAllTechs
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218180
	push	edi
	push	esi
	call	_lua_setfield

; 37   : 
; 38   : 	Method(GetLastTechAcquired);

	push	0
	push	OFFSET ?lGetLastTechAcquired@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetLastTechAcquired
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218181
	push	edi
	push	esi
	call	_lua_setfield

; 39   : 
; 40   : 	Method(SetNoTradeTech);

	push	0
	push	OFFSET ?lSetNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lSetNoTradeTech
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218182
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 41   : 	Method(IsNoTradeTech);

	push	0
	push	OFFSET ?lIsNoTradeTech@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lIsNoTradeTech
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218183
	push	edi
	push	esi
	call	_lua_setfield

; 42   : 	Method(IncrementTechCount);

	push	0
	push	OFFSET ?lIncrementTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lIncrementTechCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218184
	push	edi
	push	esi
	call	_lua_setfield

; 43   : 	Method(GetTechCount);

	push	0
	push	OFFSET ?lGetTechCount@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetTechCount
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218185
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 44   : 	Method(SetResearchProgress);

	push	0
	push	OFFSET ?lSetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lSetResearchProgress
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218186
	push	edi
	push	esi
	call	_lua_setfield

; 45   : 	Method(SetResearchProgressTimes100);

	push	0
	push	OFFSET ?lSetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lSetResearchProgressTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218187
	push	edi
	push	esi
	call	_lua_setfield

; 46   : 	Method(GetResearchProgress);

	push	0
	push	OFFSET ?lGetResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetResearchProgress
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218188
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 47   : 	Method(GetResearchProgressTimes100);

	push	0
	push	OFFSET ?lGetResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetResearchProgressTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218189
	push	edi
	push	esi
	call	_lua_setfield

; 48   : 	Method(ChangeResearchProgress);

	push	0
	push	OFFSET ?lChangeResearchProgress@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lChangeResearchProgress
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218190
	push	edi
	push	esi
	call	_lua_setfield

; 49   : 	Method(ChangeResearchProgressTimes100);

	push	0
	push	OFFSET ?lChangeResearchProgressTimes100@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lChangeResearchProgressTimes100
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218191
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 50   : 	Method(ChangeResearchProgressPercent);

	push	0
	push	OFFSET ?lChangeResearchProgressPercent@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lChangeResearchProgressPercent
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218192
	push	edi
	push	esi
	call	_lua_setfield

; 51   : 	Method(GetResearchCost);

	push	0
	push	OFFSET ?lGetResearchCost@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetResearchCost
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218193
	push	edi
	push	esi
	call	_lua_setfield

; 52   : 	Method(GetResearchLeft);

	push	0
	push	OFFSET ?lGetResearchLeft@CvLuaTeamTech@@KAHPAUlua_State@@@Z ; CvLuaTeamTech::lGetResearchLeft
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG218194
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H
	pop	edi
	pop	esi

; 53   : }

	ret	0
?PushMethods@CvLuaTeamTech@@SAXPAUlua_State@@H@Z ENDP	; CvLuaTeamTech::PushMethods
_TEXT	ENDS
END
