; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Documents\GitHub\Lekmod\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvReligionClasses.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?NO_QUEST_DATA@CvMinorCivQuest@@2HB		; CvMinorCivQuest::NO_QUEST_DATA
PUBLIC	?NO_TURN@CvMinorCivQuest@@2HB			; CvMinorCivQuest::NO_TURN
CONST	SEGMENT
$SG224618 DB	'IconString', 00H
$SG225017 DB	00H
$SG224882 DB	'No Religion', 00H
$SG224979 DB	'TXT_KEY_NOTIFICATION_ENOUGH_FAITH_FOR_MISSIONARY', 00H
	ORG $+3
$SG224982 DB	'TXT_KEY_NOTIFICATION_SUMMARY_ENOUGH_FAITH_FOR_MISSIONARY'
	DB	00H
	ORG $+3
$SG224984 DB	'ERA_INDUSTRIAL', 00H
	ORG $+1
$SG224991 DB	'TXT_KEY_NOTIFICATION_ENOUGH_FAITH_FOR_PANTHEON', 00H
	ORG $+1
$SG224994 DB	'TXT_KEY_NOTIFICATION_SUMMARY_ENOUGH_FAITH_FOR_PANTHEON', 00H
	ORG $+1
$SG225011 DB	'TXT_KEY_NOTIFICATION_ADD_REFORMATION_BELIEF', 00H
$SG225014 DB	'TXT_KEY_NOTIFICATION_SUMMARY_ADD_REFORMATION_BELIEF', 00H
$SG225026 DB	'TXT_KEY_RO_AUTO_FAITH_PROPHET', 00H
	ORG $+2
$SG225029 DB	'ERA_INDUSTRIAL', 00H
	ORG $+1
$SG225031 DB	'TXT_KEY_RO_AUTO_FAITH_PROPHET', 00H
	ORG $+2
$SG225054 DB	'TXT_KEY_NOTIFICATION_AUTOMATIC_FAITH_PURCHASE', 00H
	ORG $+2
$SG225057 DB	'TXT_KEY_NOTIFICATION_SUMMARY_AUTOMATIC_FAITH_PURCHASE', 00H
	ORG $+2
$SG225074 DB	'TXT_KEY_NOTIFICATION_AUTOMATIC_FAITH_PURCHASE', 00H
	ORG $+2
$SG225077 DB	'TXT_KEY_NOTIFICATION_SUMMARY_AUTOMATIC_FAITH_PURCHASE', 00H
	ORG $+2
$SG225090 DB	'TXT_KEY_NOTIFICATION_NEED_NEW_AUTOMATIC_FAITH_SELECTION', 00H
$SG225093 DB	'TXT_KEY_NOTIFICATION_SUMMARY_NEED_NEW_AUTOMATIC_FAITH_SE'
	DB	'LECTION', 00H
$SG225117 DB	'PlayerCanFoundPantheon', 00H
	ORG $+1
$SG225428 DB	'GetReligionToFound', 00H
	ORG $+1
$SG225470 DB	'PantheonFounded', 00H
$SG225481 DB	'TXT_KEY_NOTIFICATION_PANTHEON_FOUNDED_S', 00H
$SG225484 DB	'TXT_KEY_NOTIFICATION_PANTHEON_FOUNDED', 00H
	ORG $+2
$SG225506 DB	'TXT_KEY_NOTIFICATION_PANTHEON_FOUNDED_ACTIVE_PLAYER', 00H
$SG225515 DB	'TXT_KEY_NOTIFICATION_PANTHEON_FOUNDED_UNKNOWN', 00H
	ORG $+2
$SG225520 DB	', PANTHEON FOUNDED, ', 00H
	ORG $+3
$SG225557 DB	'ReligionFounded', 00H
$SG225564 DB	'TXT_KEY_NOTIFICATION_RELIGION_FOUNDED_S', 00H
$SG225567 DB	'TXT_KEY_NOTIFICATION_RELIGION_FOUNDED', 00H
	ORG $+2
$SG225583 DB	'TXT_KEY_NOTIFICATION_RELIGION_FOUNDED_ACTIVE_PLAYER', 00H
$SG225591 DB	'TXT_KEY_NOTIFICATION_RELIGION_FOUNDED_UNKNOWN', 00H
	ORG $+2
$SG225594 DB	', RELIGION FOUNDED, ', 00H
	ORG $+3
$SG225596 DB	', ', 00H
	ORG $+1
$SG225659 DB	'ReligionEnhanced', 00H
	ORG $+3
$SG225671 DB	'TXT_KEY_NOTIFICATION_RELIGION_ENHANCED_S', 00H
	ORG $+3
$SG225674 DB	'TXT_KEY_NOTIFICATION_RELIGION_ENHANCED', 00H
	ORG $+1
$SG225680 DB	'TXT_KEY_NOTIFICATION_RELIGION_ENHANCED_ACTIVE_PLAYER', 00H
	ORG $+3
$SG225688 DB	'TXT_KEY_NOTIFICATION_RELIGION_ENHANCED_UNKNOWN', 00H
	ORG $+1
$SG225692 DB	', RELIGION ENHANCED', 00H
$SG225727 DB	'ReformationAdded', 00H
	ORG $+3
$SG225739 DB	'TXT_KEY_NOTIFICATION_REFORMATION_BELIEF_ADDED_S', 00H
$SG225742 DB	'TXT_KEY_NOTIFICATION_REFORMATION_BELIEF_ADDED', 00H
	ORG $+2
$SG225748 DB	'TXT_KEY_NOTIFICATION_REFORMATION_BELIEF_ADDED_ACTIVE_PLA'
	DB	'YER', 00H
$SG225756 DB	'TXT_KEY_NOTIFICATION_REFORMATION_BELIEF_ADDED_UNKNOWN', 00H
	ORG $+2
$SG225760 DB	', REFORMATION BELIEF ADDED', 00H
	ORG $+1
$SG225984 DB	'GetFounderBenefitsReligion', 00H
	ORG $+1
$SG226218 DB	'ReligionLog.csv', 00H
$SG226248 DB	'UNITCLASS_PROPHET', 00H
	ORG $+2
$SG226263 DB	'Religion: spawn Great Prophet roll.', 00H
$SG226272 DB	', PROPHET SPAWNED, ', 00H
$SG226274 DB	', Faith: 0', 00H
	ORG $+1
$SG226284 DB	'%03d, %d, ', 00H
	ORG $+1
$SG226300 DB	'TXT_KEY_NOTIFICATION_PANTHEON_BELIEF_IN_USE', 00H
$SG226302 DB	'TXT_KEY_NOTIFICATION_SUMMARY_PANTHEON_BELIEF_IN_USE', 00H
$SG226305 DB	'TXT_KEY_NOTIFICATION_RELIGION_IN_USE', 00H
	ORG $+3
$SG226307 DB	'TXT_KEY_NOTIFICATION_SUMMARY_RELIGION_IN_USE', 00H
	ORG $+3
$SG226310 DB	'TXT_KEY_NOTIFICATION_NOT_ENOUGH_FAITH_FOR_PANTHEON', 00H
	ORG $+1
$SG226312 DB	'TXT_KEY_NOTIFICATION_SUMMARY_NOT_ENOUGH_FAITH_FOR_PANTHE'
	DB	'ON', 00H
	ORG $+1
$SG226315 DB	'TXT_KEY_NOTIFICATION_NO_RELIGIONS_AVAILABLE', 00H
$SG226317 DB	'TXT_KEY_NOTIFICATION_SUMMARY_NO_RELIGIONS_AVAILABLE', 00H
$SG226321 DB	'TXT_KEY_NOTIFICATION_ALREADY_CREATED_RELIGION', 00H
	ORG $+2
$SG226323 DB	'TXT_KEY_NOTIFICATION_SUMMARY_ALREADY_CREATED_RELIGION', 00H
	ORG $+2
$SG226326 DB	'TXT_KEY_NOTIFICATION_ALREADY_CREATED_PANTHEON', 00H
	ORG $+2
$SG226328 DB	'TXT_KEY_NOTIFICATION_SUMMARY_ALREADY_CREATED_PANTHEON', 00H
	ORG $+2
$SG226331 DB	'TXT_KEY_NOTIFICATION_RELIGION_NAME_IN_USE', 00H
	ORG $+2
$SG226333 DB	'TXT_KEY_NOTIFICATION_SUMMARY_RELIGION_NAME_IN_USE', 00H
	ORG $+2
$SG226336 DB	'TXT_KEY_NOTIFICATION_ENHANCED_RELIGION_IN_USE', 00H
	ORG $+2
$SG226338 DB	'TXT_KEY_NOTIFICATION_SUMMARY_ENHANCED_RELIGION_IN_USE', 00H
	ORG $+2
$SG227180 DB	'[COLOR_YELLOW]+%d[ENDCOLOR][ICON_GOLD]', 00H
	ORG $+1
$SG227191 DB	'TXT_KEY_NOTIFICATION_RELIGION_SPREAD_ACTIVE_PLAYER', 00H
	ORG $+1
$SG227193 DB	'TXT_KEY_NOTIFICATION_RELIGION_SPREAD_ACTIVE_PLAYER_S', 00H
	ORG $+3
$SG227206 DB	'TXT_KEY_NOTIFICATION_RELIGION_SPREAD_INITIAL_CONVERSION', 00H
$SG227208 DB	'TXT_KEY_NOTIFICATION_RELIGION_SPREAD_INITIAL_CONVERSION_'
	DB	'S', 00H
	ORG $+2
$SG227216 DB	'WORLDSIZE_STANDARD', 00H
	ORG $+1
$SG227217 DB	'Type', 00H
	ORG $+3
$SG227218 DB	'Worlds', 00H
	ORG $+1
$SG227221 DB	'ID', 00H
	ORG $+1
$SG227255 DB	'CityConvertsReligion', 00H
	ORG $+3
$SG227267 DB	'%03d, %d, ', 00H
	ORG $+1
$SG227269 DB	', ', 00H
	ORG $+1
$SG227275 DB	'Adjacent city pressure', 00H
	ORG $+1
$SG227277 DB	'Holy city pressure', 00H
	ORG $+1
$SG227279 DB	'Population change', 00H
	ORG $+2
$SG227281 DB	'Religion founded', 00H
	ORG $+3
$SG227283 DB	'Pantheon founded', 00H
	ORG $+3
$SG227285 DB	'City captured', 00H
	ORG $+2
$SG227287 DB	'Missionary expended', 00H
$SG227289 DB	'Prophet spreading', 00H
	ORG $+2
$SG227291 DB	'Remove heresy', 00H
	ORG $+2
$SG227293 DB	'Scripted conversion', 00H
$SG227295 DB	'Spy pressure', 00H
	ORG $+3
$SG227297 DB	', ', 00H
	ORG $+1
$SG227298 DB	'Pop: %d', 00H
$SG227304 DB	', Majority: ', 00H
	ORG $+3
$SG227305 DB	'(%d)', 00H
	ORG $+3
$SG227310 DB	', Secondary: ', 00H
	ORG $+2
$SG227311 DB	'(%d)', 00H
	ORG $+3
$SG227312 DB	'Atheists: %d', 00H
	ORG $+3
$SG227314 DB	', ', 00H
	ORG $+1
$SG227316 DB	', No religion in city', 00H
	ORG $+2
$SG227964 DB	'Choosing belief from Top Choices', 00H
	ORG $+3
$SG227999 DB	'Choosing belief from Top Choices', 00H
	ORG $+3
$SG228034 DB	'Choosing belief from Top Choices', 00H
	ORG $+3
$SG228069 DB	'Choosing belief from Top Choices', 00H
	ORG $+3
$SG228108 DB	'Choosing belief from Top Choices', 00H
	ORG $+3
$SG228143 DB	'Choosing belief from Top Choices', 00H
	ORG $+3
$SG228308 DB	'GAMEOPTION_AI_TWEAKS', 00H
	ORG $+3
$SG228309 DB	'GAMEOPTION_AI_GIMP_NO_RELIGION_SPREAD', 00H
	ORG $+2
$SG228312 DB	'GAMEOPTION_AI_TWEAKS', 00H
	ORG $+3
$SG228313 DB	'GAMEOPTION_AI_GIMP_NO_MINOR_RELIGION_SPREAD', 00H
$SG228379 DB	'GetReligionToSpread', 00H
$SG228399 DB	'ERA_INDUSTRIAL', 00H
	ORG $+1
$SG228403 DB	', Saving for Great Person, ', 00H
$SG228409 DB	'UNIT_PROPHET', 00H
	ORG $+3
$SG228412 DB	', Saving for Prophet, ', 00H
	ORG $+1
$SG228416 DB	', Saving for Missionary, Need to Convert Non-Puppet Citi'
	DB	'es', 00H
	ORG $+1
$SG228420 DB	', Saving for Faith Building, For Our Non-Puppet Cities', 00H
	ORG $+1
$SG228425 DB	', Saving for Science Building, Have Reformation Belief', 00H
	ORG $+1
$SG228428 DB	'ERA_INDUSTRIAL', 00H
	ORG $+1
$SG228431 DB	', Saving for Great Person, ', 00H
$SG228435 DB	', Saving for Missionary, Need to Convert Puppet Cities', 00H
	ORG $+1
$SG228439 DB	', Saving for Missionary, Need to Convert Cities of Non-R'
	DB	'eligion Starters', 00H
	ORG $+3
$SG228443 DB	', Saving for Inquisitors, Need to Defend Our Cities', 00H
$SG228447 DB	', Saving for Missionary, Need to Convert Cities of Relig'
	DB	'ion Starters', 00H
	ORG $+3
$SG228451 DB	', Faith: %d', 00H
$SG228459 DB	'UNIT_MISSIONARY', 00H
$SG228475 DB	'UNIT_INQUISITOR', 00H
$SG228623 DB	'FLAVOR_OFFENSE', 00H
	ORG $+1
$SG228626 DB	'FLAVOR_DEFENSE', 00H
	ORG $+1
$SG228629 DB	'FLAVOR_CITY_DEFENSE', 00H
$SG228632 DB	'FLAVOR_HAPPINESS', 00H
	ORG $+3
$SG228687 DB	'FLAVOR_OFFENSE', 00H
	ORG $+1
$SG228690 DB	'FLAVOR_DEFENSE', 00H
	ORG $+1
$SG228693 DB	'FLAVOR_HAPPINESS', 00H
	ORG $+3
$SG228696 DB	'FLAVOR_CULTURE', 00H
	ORG $+1
$SG228699 DB	'FLAVOR_GOLD', 00H
$SG228702 DB	'FLAVOR_GREAT_PEOPLE', 00H
$SG228705 DB	'FLAVOR_SCIENCE', 00H
	ORG $+1
$SG228708 DB	'FLAVOR_DIPLOMACY', 00H
	ORG $+3
$SG228711 DB	'FLAVOR_EXPANSION', 00H
	ORG $+3
$SG228761 DB	'POLICY_BRANCH_TRADITION', 00H
$SG228765 DB	'POLICY_BRANCH_HONOR', 00H
$SG228769 DB	'POLICY_BRANCH_AESTHETICS', 00H
	ORG $+3
$SG228773 DB	'POLICY_BRANCH_COMMERCE', 00H
	ORG $+1
$SG228777 DB	'POLICY_BRANCH_EXPLORATION', 00H
	ORG $+2
$SG228781 DB	'POLICY_BRANCH_RATIONALISM', 00H
	ORG $+2
$SG228787 DB	'MILITARYAISTRATEGY_ERADICATE_BARBARIANS', 00H
$SG228809 DB	'GAMEOPTION_AI_TWEAKS', 00H
	ORG $+3
$SG228810 DB	'GAMEOPTION_AI_GIMP_NO_RELIGION_SPREAD', 00H
	ORG $+2
$SG228817 DB	'GAMEOPTION_AI_TWEAKS', 00H
	ORG $+3
$SG228818 DB	'GAMEOPTION_AI_GIMP_NO_MINOR_RELIGION_SPREAD', 00H
$SG228891 DB	'UNIT_MISSIONARY', 00H
$SG228907 DB	'GAMEOPTION_AI_TWEAKS', 00H
	ORG $+3
$SG228908 DB	'GAMEOPTION_AI_GIMP_NO_MINOR_RELIGION_SPREAD', 00H
$SG228913 DB	'GAMEOPTION_AI_TWEAKS', 00H
	ORG $+3
$SG228914 DB	'GAMEOPTION_AI_GIMP_NO_RELIGION_SPREAD', 00H
	ORG $+2
$SG228991 DB	'SPECIALUNIT_PEOPLE', 00H
	ORG $+1
$SG229014 DB	'UNITCLASS_PROPHET', 00H
	ORG $+2
$SG229021 DB	'UNITCLASS_WRITER', 00H
	ORG $+3
$SG229024 DB	'AIGRANDSTRATEGY_CULTURE', 00H
$SG229028 DB	'UNITCLASS_ARTIST', 00H
	ORG $+3
$SG229031 DB	'AIGRANDSTRATEGY_CULTURE', 00H
$SG229035 DB	'UNITCLASS_MUSICIAN', 00H
	ORG $+1
$SG229038 DB	'AIGRANDSTRATEGY_CULTURE', 00H
$SG229042 DB	'UNITCLASS_SCIENTIST', 00H
$SG229045 DB	'AIGRANDSTRATEGY_SPACESHIP', 00H
	ORG $+2
$SG229049 DB	'UNITCLASS_MERCHANT', 00H
	ORG $+1
$SG229052 DB	'AIGRANDSTRATEGY_UNITED_NATIONS', 00H
	ORG $+1
$SG229056 DB	'UNITCLASS_ENGINEER', 00H
	ORG $+1
$SG229059 DB	'ECONOMICAISTRATEGY_GS_SPACESHIP_HOMESTRETCH', 00H
$SG229064 DB	'UNITCLASS_GREAT_GENERAL', 00H
$SG229067 DB	'AIGRANDSTRATEGY_CONQUEST', 00H
	ORG $+3
$SG229071 DB	'UNITCLASS_GREAT_ADMIRAL', 00H
$SG229074 DB	'AIGRANDSTRATEGY_CONQUEST', 00H
	ORG $+3
$SG229078 DB	'UNITCLASS_MISSIONARY', 00H
	ORG $+3
$SG229082 DB	'UNITCLASS_INQUISITOR', 00H
	ORG $+3
$SG229100 DB	'%03d, %d, ', 00H
	ORG $+1
$SG229102 DB	', ', 00H
	ORG $+1
$SG229108 DB	'Belief, %s, %d', 00H
	ORG $+1
$SG229112 DB	'CHOSEN, %s', 00H
	ORG $+1
$SG229123 DB	'SPECIALUNIT_PEOPLE', 00H
CONST	ENDS
;	COMDAT ?NO_TURN@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_TURN@CvMinorCivQuest@@2HB DD 0ffffffffH		; CvMinorCivQuest::NO_TURN
CONST	ENDS
;	COMDAT ?NO_QUEST_DATA@CvMinorCivQuest@@2HB
CONST	SEGMENT
?NO_QUEST_DATA@CvMinorCivQuest@@2HB DD 0ffffffffH	; CvMinorCivQuest::NO_QUEST_DATA
CONST	ENDS
PUBLIC	?wrapCoordDifference@@YAHHI_N@Z			; wrapCoordDifference
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?wrapCoordDifference@@YAHHI_N@Z
_TEXT	SEGMENT
_iDiff$ = 8						; size = 4
_uiRange$ = 12						; size = 4
_bWrap$ = 16						; size = 1
?wrapCoordDifference@@YAHHI_N@Z PROC			; wrapCoordDifference, COMDAT

; 57   : 	if(bWrap)

	cmp	BYTE PTR _bWrap$[esp-4], 0
	mov	eax, DWORD PTR _iDiff$[esp-4]
	je	SHORT $LN5@wrapCoordD

; 58   : 	{
; 59   : 		if(iDiff > (int)(uiRange >> 1))		// Using an unsigned int so we can safely assume that value >> 1 == value / 2

	mov	edx, DWORD PTR _uiRange$[esp-4]
	mov	ecx, edx
	shr	ecx, 1
	cmp	eax, ecx
	jle	SHORT $LN3@wrapCoordD

; 60   : 		{
; 61   : 			return (iDiff - (int)uiRange);

	sub	eax, edx

; 66   : 		}
; 67   : 	}
; 68   : 
; 69   : 	return iDiff;
; 70   : }

	ret	0
$LN3@wrapCoordD:

; 62   : 		}
; 63   : 		else if(iDiff < -(int)(uiRange >> 1))

	neg	ecx
	cmp	eax, ecx
	jge	SHORT $LN5@wrapCoordD

; 64   : 		{
; 65   : 			return (iDiff + (int)uiRange);

	add	eax, edx
$LN5@wrapCoordD:

; 66   : 		}
; 67   : 	}
; 68   : 
; 69   : 	return iDiff;
; 70   : }

	ret	0
?wrapCoordDifference@@YAHHI_N@Z ENDP			; wrapCoordDifference
_TEXT	ENDS
PUBLIC	?xToHexspaceX@@YAHHH@Z				; xToHexspaceX
; Function compile flags: /Ogtpy
;	COMDAT ?xToHexspaceX@@YAHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?xToHexspaceX@@YAHHH@Z PROC				; xToHexspaceX, COMDAT

; 86   : 	return iX - ((iY >= 0) ? (iY>>1) : ((iY - 1)/2));

	mov	ecx, DWORD PTR _iY$[esp-4]
	test	ecx, ecx
	jge	SHORT $LN5@xToHexspac
	lea	eax, DWORD PTR [ecx-1]
	cdq
	sub	eax, edx
	mov	ecx, eax
$LN5@xToHexspac:
	mov	eax, DWORD PTR _iX$[esp-4]
	sar	ecx, 1
	sub	eax, ecx

; 87   : }

	ret	0
?xToHexspaceX@@YAHHH@Z ENDP				; xToHexspaceX
_TEXT	ENDS
PUBLIC	?hexspaceXToX@@YAHHH@Z				; hexspaceXToX
; Function compile flags: /Ogtpy
;	COMDAT ?hexspaceXToX@@YAHHH@Z
_TEXT	SEGMENT
_iHexspaceX$ = 8					; size = 4
_iHexspaceY$ = 12					; size = 4
?hexspaceXToX@@YAHHH@Z PROC				; hexspaceXToX, COMDAT

; 91   : 	return iHexspaceX + ((iHexspaceY >= 0) ? (iHexspaceY>>1) : ((iHexspaceY - 1)/2));

	mov	eax, DWORD PTR _iHexspaceY$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@hexspaceXT
	mov	ecx, DWORD PTR _iHexspaceX$[esp-4]
	sar	eax, 1
	add	eax, ecx

; 92   : }

	ret	0
$LN3@hexspaceXT:

; 91   : 	return iHexspaceX + ((iHexspaceY >= 0) ? (iHexspaceY>>1) : ((iHexspaceY - 1)/2));

	dec	eax
	cdq
	sub	eax, edx
	mov	edx, DWORD PTR _iHexspaceX$[esp-4]
	sar	eax, 1
	add	eax, edx

; 92   : }

	ret	0
?hexspaceXToX@@YAHHH@Z ENDP				; hexspaceXToX
_TEXT	ENDS
PUBLIC	?GetReligionEntries@CvReligionXMLEntries@@QAEAAV?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@XZ ; CvReligionXMLEntries::GetReligionEntries
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
;	COMDAT ?GetReligionEntries@CvReligionXMLEntries@@QAEAAV?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@XZ
_TEXT	SEGMENT
?GetReligionEntries@CvReligionXMLEntries@@QAEAAV?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@XZ PROC ; CvReligionXMLEntries::GetReligionEntries, COMDAT
; _this$ = ecx

; 70   : {

	mov	eax, ecx

; 71   : 	return m_paReligionEntries;
; 72   : }

	ret	0
?GetReligionEntries@CvReligionXMLEntries@@QAEAAV?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@XZ ENDP ; CvReligionXMLEntries::GetReligionEntries
_TEXT	ENDS
PUBLIC	??0CvReligion@@QAE@XZ				; CvReligion::CvReligion
EXTRN	??0CvReligionBeliefs@@QAE@XZ:PROC		; CvReligionBeliefs::CvReligionBeliefs
EXTRN	_memset:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??0CvReligion@@QAE@XZ
_TEXT	SEGMENT
??0CvReligion@@QAE@XZ PROC				; CvReligion::CvReligion, COMDAT
; _this$ = ecx

; 109  : {

	or	eax, -1
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+152]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+16], eax
	mov	BYTE PTR [esi+20], 0
	mov	BYTE PTR [esi+21], 0
	call	??0CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::CvReligionBeliefs

; 110  : 	ZeroMemory(m_szCustomName, sizeof(m_szCustomName));

	push	128					; 00000080H
	lea	eax, DWORD PTR [esi+22]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 111  : }

	mov	eax, esi
	pop	esi
	ret	0
??0CvReligion@@QAE@XZ ENDP				; CvReligion::CvReligion
_TEXT	ENDS
PUBLIC	??0CvReligionInCity@@QAE@XZ			; CvReligionInCity::CvReligionInCity
; Function compile flags: /Ogtpy
;	COMDAT ??0CvReligionInCity@@QAE@XZ
_TEXT	SEGMENT
??0CvReligionInCity@@QAE@XZ PROC			; CvReligionInCity::CvReligionInCity, COMDAT
; _this$ = ecx

; 224  : {

	mov	eax, ecx

; 225  : 	m_eReligion = NO_RELIGION;
; 226  : 	m_bFoundedHere = false;

	xor	ecx, ecx
	mov	DWORD PTR [eax], -1
	mov	BYTE PTR [eax+4], cl

; 227  : 	m_iFollowers = 0;

	mov	DWORD PTR [eax+8], ecx

; 228  : 	m_iPressure = 0;

	mov	DWORD PTR [eax+12], ecx

; 229  : 	m_iNumTradeRoutesApplyingPressure = 0;

	mov	DWORD PTR [eax+16], ecx

; 230  : 	m_iTemp = 0;

	mov	DWORD PTR [eax+20], ecx

; 231  : }

	ret	0
??0CvReligionInCity@@QAE@XZ ENDP			; CvReligionInCity::CvReligionInCity
_TEXT	ENDS
PUBLIC	??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z ; CvReligionInCity::CvReligionInCity
; Function compile flags: /Ogtpy
;	COMDAT ??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
_bFoundedHere$ = 12					; size = 1
_iFollowers$ = 16					; size = 4
_iPressure$ = 20					; size = 4
??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z PROC	; CvReligionInCity::CvReligionInCity, COMDAT
; _this$ = ecx

; 241  : {

	mov	dl, BYTE PTR _bFoundedHere$[esp-4]
	mov	eax, ecx
	mov	ecx, DWORD PTR _eReligion$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _iFollowers$[esp-4]
	mov	BYTE PTR [eax+4], dl
	mov	edx, DWORD PTR _iPressure$[esp-4]
	mov	DWORD PTR [eax+8], ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], ecx

; 242  : }

	ret	16					; 00000010H
??0CvReligionInCity@@QAE@W4ReligionTypes@@_NHH@Z ENDP	; CvReligionInCity::CvReligionInCity
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 371  : 		{	// construct from message string

	push	esi
	lea	eax, DWORD PTR __Message$[esp]
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 372  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtpy
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar:
	mov	eax, esi
	pop	esi
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 59   : 	return (_Where);

	mov	eax, DWORD PTR __Where$[esp-4]

; 60   : 	}

	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogtpy
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 64   : 	}

	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 26   : 		{	// construct from message string

	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+20], esi
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	eax, DWORD PTR __Message$[esp+16]
	push	eax
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[esp+32], 0
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z

; 27   : 		}

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 30   : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 31   : 		}

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
_TEXT	ENDS
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx

; 35   : 		return (_Str.c_str());

	add	ecx, 12					; 0000000cH
	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN6@scalar@2
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@2:
	mov	eax, esi
	pop	esi
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_R4length_error@std@@6B@			; std::length_error::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??_R3length_error@std@@8			; std::length_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2length_error@std@@8			; std::length_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@length_error@std@@8		; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@length_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@length_error@std@@8 DD FLAT:??_R0?AVlength_error@std@@@8 ; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2length_error@std@@8
rdata$r	SEGMENT
??_R2length_error@std@@8 DD FLAT:??_R1A@?0A@EA@length_error@std@@8 ; std::length_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3length_error@std@@8
rdata$r	SEGMENT
??_R3length_error@std@@8 DD 00H				; std::length_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4length_error@std@@6B@
rdata$r	SEGMENT
??_R4length_error@std@@6B@ DD 00H			; std::length_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_R4length_error@std@@6B@ ; std::length_error::`vftable'
	DD	FLAT:??_Elength_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 105  : 		{	// construct from message string

	mov	eax, DWORD PTR __Message$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR [esi], OFFSET ??_7length_error@std@@6B@

; 106  : 		}

	mov	eax, esi
	pop	esi
	ret	4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
; Function compile flags: /Ogtpy
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 109  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 110  : 		}

	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	pop	esi
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN8@scalar@3
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@scalar@3:
	mov	eax, esi
	pop	esi
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CvReligion@@QAE@XZ				; CvReligion::~CvReligion
EXTRN	??1CvReligionBeliefs@@QAE@XZ:PROC		; CvReligionBeliefs::~CvReligionBeliefs
; Function compile flags: /Ogtpy
;	COMDAT ??1CvReligion@@QAE@XZ
_TEXT	SEGMENT
??1CvReligion@@QAE@XZ PROC				; CvReligion::~CvReligion, COMDAT
; _this$ = ecx
	add	ecx, 152				; 00000098H
	jmp	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
??1CvReligion@@QAE@XZ ENDP				; CvReligion::~CvReligion
_TEXT	ENDS
PUBLIC	??0CvPlayerReligions@@QAE@XZ			; CvPlayerReligions::CvPlayerReligions
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
;	COMDAT ??0CvPlayerReligions@@QAE@XZ
_TEXT	SEGMENT
??0CvPlayerReligions@@QAE@XZ PROC			; CvPlayerReligions::CvPlayerReligions, COMDAT
; _this$ = ecx

; 2709 : {

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx

; 2710 : }

	ret	0
??0CvPlayerReligions@@QAE@XZ ENDP			; CvPlayerReligions::CvPlayerReligions
_TEXT	ENDS
PUBLIC	?Uninit@CvPlayerReligions@@QAEXXZ		; CvPlayerReligions::Uninit
; Function compile flags: /Ogtpy
;	COMDAT ?Uninit@CvPlayerReligions@@QAEXXZ
_TEXT	SEGMENT
?Uninit@CvPlayerReligions@@QAEXXZ PROC			; CvPlayerReligions::Uninit, COMDAT
; _this$ = ecx

; 2729 : 
; 2730 : }

	ret	0
?Uninit@CvPlayerReligions@@QAEXXZ ENDP			; CvPlayerReligions::Uninit
_TEXT	ENDS
PUBLIC	?Reset@CvPlayerReligions@@QAEXXZ		; CvPlayerReligions::Reset
; Function compile flags: /Ogtpy
;	COMDAT ?Reset@CvPlayerReligions@@QAEXXZ
_TEXT	SEGMENT
?Reset@CvPlayerReligions@@QAEXXZ PROC			; CvPlayerReligions::Reset, COMDAT
; _this$ = ecx

; 2735 : 	m_bFoundingReligion = false;

	xor	eax, eax
	mov	DWORD PTR [ecx+8], eax

; 2736 : 	m_iNumProphetsSpawned = 0;

	mov	DWORD PTR [ecx+4], eax

; 2737 : }

	ret	0
?Reset@CvPlayerReligions@@QAEXXZ ENDP			; CvPlayerReligions::Reset
_TEXT	ENDS
PUBLIC	?GetNumProphetsSpawned@CvPlayerReligions@@QBEHXZ ; CvPlayerReligions::GetNumProphetsSpawned
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumProphetsSpawned@CvPlayerReligions@@QBEHXZ
_TEXT	SEGMENT
?GetNumProphetsSpawned@CvPlayerReligions@@QBEHXZ PROC	; CvPlayerReligions::GetNumProphetsSpawned, COMDAT
; _this$ = ecx

; 2762 : 	return m_iNumProphetsSpawned;

	mov	eax, DWORD PTR [ecx+4]

; 2763 : }

	ret	0
?GetNumProphetsSpawned@CvPlayerReligions@@QBEHXZ ENDP	; CvPlayerReligions::GetNumProphetsSpawned
_TEXT	ENDS
PUBLIC	?ChangeNumProphetsSpawned@CvPlayerReligions@@QAEXH@Z ; CvPlayerReligions::ChangeNumProphetsSpawned
; Function compile flags: /Ogtpy
;	COMDAT ?ChangeNumProphetsSpawned@CvPlayerReligions@@QAEXH@Z
_TEXT	SEGMENT
_iValue$ = 8						; size = 4
?ChangeNumProphetsSpawned@CvPlayerReligions@@QAEXH@Z PROC ; CvPlayerReligions::ChangeNumProphetsSpawned, COMDAT
; _this$ = ecx

; 2768 : 	m_iNumProphetsSpawned += iValue;

	mov	eax, DWORD PTR _iValue$[esp-4]
	add	DWORD PTR [ecx+4], eax

; 2769 : }

	ret	4
?ChangeNumProphetsSpawned@CvPlayerReligions@@QAEXH@Z ENDP ; CvPlayerReligions::ChangeNumProphetsSpawned
_TEXT	ENDS
PUBLIC	?CanAffordFaithPurchase@CvPlayerReligions@@QBE_NXZ ; CvPlayerReligions::CanAffordFaithPurchase
EXTRN	?GetFaithPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z:PROC ; CvCity::GetFaithPurchaseCost
EXTRN	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z:PROC ; CvGlobals::getBuildingInfo
EXTRN	?getNumBuildingInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumBuildingInfos
EXTRN	?GetFaithPurchaseCost@CvCity@@QAEHW4UnitTypes@@_N@Z:PROC ; CvCity::GetFaithPurchaseCost
EXTRN	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z:PROC ; CvPlayer::IsCanPurchaseAnyCity
EXTRN	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z:PROC ; CvGlobals::getUnitInfo
EXTRN	?getNumUnitInfos@CvGlobals@@QAEHXZ:PROC		; CvGlobals::getNumUnitInfos
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
EXTRN	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ:PROC	; CvPlayer::getCapitalCity
EXTRN	?GetFaith@CvPlayer@@QBEHXZ:PROC			; CvPlayer::GetFaith
; Function compile flags: /Ogtpy
;	COMDAT ?CanAffordFaithPurchase@CvPlayerReligions@@QBE_NXZ
_TEXT	SEGMENT
?CanAffordFaithPurchase@CvPlayerReligions@@QBE_NXZ PROC	; CvPlayerReligions::CanAffordFaithPurchase, COMDAT
; _this$ = ecx

; 2844 : {

	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx

; 2845 : 	int iFaith = m_pPlayer->GetFaith();

	mov	ecx, DWORD PTR [edi]
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith

; 2846 : 	CvCity* pCapital = m_pPlayer->getCapitalCity();

	mov	ecx, DWORD PTR [edi]
	mov	ebp, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	ebx, eax

; 2847 : 	if(pCapital)

	test	ebx, ebx
	je	$LN4@CanAffordF

; 2848 : 	{
; 2849 : #ifdef AUI_WARNING_FIXES
; 2850 : 		for (uint iI = 0; iI < GC.getNumUnitInfos(); iI++)
; 2851 : #else
; 2852 : 		for (int iI = 0; iI < GC.getNumUnitInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	esi, esi
	call	?getNumUnitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitInfos
	test	eax, eax
	jle	SHORT $LN10@CanAffordF
$LL12@CanAffordF:

; 2853 : #endif
; 2854 : 		{
; 2855 : 			const UnitTypes eUnit = static_cast<UnitTypes>(iI);
; 2856 : 			CvUnitEntry* pkUnitInfo = GC.getUnitInfo(eUnit);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo

; 2857 : 			if(pkUnitInfo)

	test	eax, eax
	je	SHORT $LN11@CanAffordF

; 2858 : 			{
; 2859 : 				if (m_pPlayer->IsCanPurchaseAnyCity(false, false, eUnit, NO_BUILDING, YIELD_FAITH))

	mov	ecx, DWORD PTR [edi]
	push	5
	push	-1
	push	esi
	push	0
	push	0
	call	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z ; CvPlayer::IsCanPurchaseAnyCity
	test	al, al
	je	SHORT $LN11@CanAffordF

; 2860 : 				{
; 2861 : 					int iCost = pCapital->GetFaithPurchaseCost(eUnit, true);

	push	1
	push	esi
	mov	ecx, ebx
	call	?GetFaithPurchaseCost@CvCity@@QAEHW4UnitTypes@@_N@Z ; CvCity::GetFaithPurchaseCost

; 2862 : 					if(iCost != 0 && iFaith > iCost)

	test	eax, eax
	je	SHORT $LN11@CanAffordF
	cmp	ebp, eax
	jg	SHORT $LN18@CanAffordF
$LN11@CanAffordF:

; 2848 : 	{
; 2849 : #ifdef AUI_WARNING_FIXES
; 2850 : 		for (uint iI = 0; iI < GC.getNumUnitInfos(); iI++)
; 2851 : #else
; 2852 : 		for (int iI = 0; iI < GC.getNumUnitInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	esi
	call	?getNumUnitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitInfos
	cmp	esi, eax
	jl	SHORT $LL12@CanAffordF
$LN10@CanAffordF:

; 2865 : 					}
; 2866 : 				}
; 2867 : 			}
; 2868 : 		}
; 2869 : #ifdef AUI_WARNING_FIXES
; 2870 : 		for (uint iI = 0; iI < GC.getNumBuildingInfos(); iI++)
; 2871 : #else
; 2872 : 		for (int iI = 0; iI < GC.getNumBuildingInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	esi, esi
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	test	eax, eax
	jle	SHORT $LN4@CanAffordF
$LL6@CanAffordF:

; 2873 : #endif
; 2874 : 		{
; 2875 : 			const BuildingTypes eBuilding = static_cast<BuildingTypes>(iI);
; 2876 : 			CvBuildingEntry* pkBuildingInfo = GC.getBuildingInfo(eBuilding);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo

; 2877 : 			if(pkBuildingInfo)

	test	eax, eax
	je	SHORT $LN5@CanAffordF

; 2878 : 			{
; 2879 : 				if (m_pPlayer->IsCanPurchaseAnyCity(false, false, NO_UNIT, eBuilding, YIELD_FAITH))

	mov	ecx, DWORD PTR [edi]
	push	5
	push	esi
	push	-1
	push	0
	push	0
	call	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z ; CvPlayer::IsCanPurchaseAnyCity
	test	al, al
	je	SHORT $LN5@CanAffordF

; 2880 : 				{
; 2881 : 					int iCost = pCapital->GetFaithPurchaseCost(eBuilding);

	push	esi
	mov	ecx, ebx
	call	?GetFaithPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z ; CvCity::GetFaithPurchaseCost

; 2882 : 					if(iCost != 0 && iFaith > iCost)

	test	eax, eax
	je	SHORT $LN5@CanAffordF
	cmp	ebp, eax
	jg	SHORT $LN18@CanAffordF
$LN5@CanAffordF:

; 2865 : 					}
; 2866 : 				}
; 2867 : 			}
; 2868 : 		}
; 2869 : #ifdef AUI_WARNING_FIXES
; 2870 : 		for (uint iI = 0; iI < GC.getNumBuildingInfos(); iI++)
; 2871 : #else
; 2872 : 		for (int iI = 0; iI < GC.getNumBuildingInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	esi
	call	?getNumBuildingInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumBuildingInfos
	cmp	esi, eax
	jl	SHORT $LL6@CanAffordF
$LN4@CanAffordF:
	pop	edi
	pop	esi
	pop	ebp

; 2883 : 					{
; 2884 : 						return true;
; 2885 : 					}
; 2886 : 				}
; 2887 : 			}
; 2888 : 		}
; 2889 : 	}
; 2890 : 
; 2891 : 	return false;

	xor	al, al
	pop	ebx

; 2892 : }

	ret	0
$LN18@CanAffordF:
	pop	edi
	pop	esi
	pop	ebp

; 2863 : 					{
; 2864 : 						return true;

	mov	al, 1
	pop	ebx

; 2892 : }

	ret	0
?CanAffordFaithPurchase@CvPlayerReligions@@QBE_NXZ ENDP	; CvPlayerReligions::CanAffordFaithPurchase
_TEXT	ENDS
PUBLIC	?Uninit@CvCityReligions@@QAEXXZ			; CvCityReligions::Uninit
; Function compile flags: /Ogtpy
;	COMDAT ?Uninit@CvCityReligions@@QAEXXZ
_TEXT	SEGMENT
?Uninit@CvCityReligions@@QAEXXZ PROC			; CvCityReligions::Uninit, COMDAT
; _this$ = ecx

; 3134 : 
; 3135 : }

	ret	0
?Uninit@CvCityReligions@@QAEXXZ ENDP			; CvCityReligions::Uninit
_TEXT	ENDS
PUBLIC	??0CvUnitReligion@@QAE@XZ			; CvUnitReligion::CvUnitReligion
; Function compile flags: /Ogtpy
;	COMDAT ??0CvUnitReligion@@QAE@XZ
_TEXT	SEGMENT
??0CvUnitReligion@@QAE@XZ PROC				; CvUnitReligion::CvUnitReligion, COMDAT
; _this$ = ecx

; 4842 : {

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], -1
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx

; 4843 : }

	ret	0
??0CvUnitReligion@@QAE@XZ ENDP				; CvUnitReligion::CvUnitReligion
_TEXT	ENDS
PUBLIC	?Init@CvUnitReligion@@QAEXXZ			; CvUnitReligion::Init
; Function compile flags: /Ogtpy
;	COMDAT ?Init@CvUnitReligion@@QAEXXZ
_TEXT	SEGMENT
?Init@CvUnitReligion@@QAEXXZ PROC			; CvUnitReligion::Init, COMDAT
; _this$ = ecx

; 4848 : 	m_eReligion = NO_RELIGION;
; 4849 : 	m_iStrength = 0;

	xor	eax, eax
	mov	DWORD PTR [ecx], -1
	mov	DWORD PTR [ecx+4], eax

; 4850 : 	m_iSpreadsLeft = 0;

	mov	DWORD PTR [ecx+8], eax

; 4851 : }

	ret	0
?Init@CvUnitReligion@@QAEXXZ ENDP			; CvUnitReligion::Init
_TEXT	ENDS
PUBLIC	??0CvReligionAI@@QAE@XZ				; CvReligionAI::CvReligionAI
; Function compile flags: /Ogtpy
;	COMDAT ??0CvReligionAI@@QAE@XZ
_TEXT	SEGMENT
??0CvReligionAI@@QAE@XZ PROC				; CvReligionAI::CvReligionAI, COMDAT
; _this$ = ecx

; 4902 : {

	mov	eax, ecx
	mov	DWORD PTR [eax+4], 0

; 4903 : }

	ret	0
??0CvReligionAI@@QAE@XZ ENDP				; CvReligionAI::CvReligionAI
_TEXT	ENDS
PUBLIC	?Uninit@CvReligionAI@@QAEXXZ			; CvReligionAI::Uninit
; Function compile flags: /Ogtpy
;	COMDAT ?Uninit@CvReligionAI@@QAEXXZ
_TEXT	SEGMENT
?Uninit@CvReligionAI@@QAEXXZ PROC			; CvReligionAI::Uninit, COMDAT
; _this$ = ecx

; 4923 : 
; 4924 : }

	ret	0
?Uninit@CvReligionAI@@QAEXXZ ENDP			; CvReligionAI::Uninit
_TEXT	ENDS
PUBLIC	?Reset@CvReligionAI@@QAEXXZ			; CvReligionAI::Reset
; Function compile flags: /Ogtpy
;	COMDAT ?Reset@CvReligionAI@@QAEXXZ
_TEXT	SEGMENT
?Reset@CvReligionAI@@QAEXXZ PROC			; CvReligionAI::Reset, COMDAT
; _this$ = ecx

; 4929 : 
; 4930 : }

	ret	0
?Reset@CvReligionAI@@QAEXXZ ENDP			; CvReligionAI::Reset
_TEXT	ENDS
PUBLIC	??C?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ	; FObjectHandle<CvUnit>::operator->
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
;	COMDAT ??C?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ
_TEXT	SEGMENT
??C?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ PROC	; FObjectHandle<CvUnit>::operator->, COMDAT
; _this$ = ecx

; 88   : 		return m_target;

	mov	eax, DWORD PTR [ecx]

; 89   : 	}

	ret	0
??C?$FObjectHandle@VCvUnit@@@@QAEPAVCvUnit@@XZ ENDP	; FObjectHandle<CvUnit>::operator->
_TEXT	ENDS
PUBLIC	?size@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBEIXZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?size@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBEIXZ PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 727  : 		}

	ret	0
?size@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBEIXZ ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAEAAPAVCvReligionEntry@@I@Z ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAEAAPAVCvReligionEntry@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAEAAPAVCvReligionEntry@@I@Z PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator[], COMDAT
; _this$ = ecx

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 786  : 		}

	ret	4
??A?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAEAAPAVCvReligionEntry@@I@Z ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator[]
_TEXT	ENDS
PUBLIC	?size@?$BaseVector@VCvReligion@@$0A@@@QBEIXZ	; BaseVector<CvReligion,0>::size
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?size@?$BaseVector@VCvReligion@@$0A@@@QBEIXZ
_TEXT	SEGMENT
?size@?$BaseVector@VCvReligion@@$0A@@@QBEIXZ PROC	; BaseVector<CvReligion,0>::size, COMDAT
; _this$ = ecx

; 169  : 		return m_uiCurrSize;

	mov	eax, DWORD PTR [ecx+4]

; 170  : 	};

	ret	0
?size@?$BaseVector@VCvReligion@@$0A@@@QBEIXZ ENDP	; BaseVector<CvReligion,0>::size
_TEXT	ENDS
PUBLIC	?begin@?$BaseVector@VCvReligion@@$0A@@@QAEPAVCvReligion@@XZ ; BaseVector<CvReligion,0>::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$BaseVector@VCvReligion@@$0A@@@QAEPAVCvReligion@@XZ
_TEXT	SEGMENT
?begin@?$BaseVector@VCvReligion@@$0A@@@QAEPAVCvReligion@@XZ PROC ; BaseVector<CvReligion,0>::begin, COMDAT
; _this$ = ecx

; 194  :         return m_pData; 

	mov	eax, DWORD PTR [ecx]

; 195  :     };

	ret	0
?begin@?$BaseVector@VCvReligion@@$0A@@@QAEPAVCvReligion@@XZ ENDP ; BaseVector<CvReligion,0>::begin
_TEXT	ENDS
PUBLIC	?end@?$BaseVector@VCvReligion@@$0A@@@QAEPAVCvReligion@@XZ ; BaseVector<CvReligion,0>::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$BaseVector@VCvReligion@@$0A@@@QAEPAVCvReligion@@XZ
_TEXT	SEGMENT
?end@?$BaseVector@VCvReligion@@$0A@@@QAEPAVCvReligion@@XZ PROC ; BaseVector<CvReligion,0>::end, COMDAT
; _this$ = ecx

; 197  :         return m_pData+m_uiCurrSize; 

	mov	eax, DWORD PTR [ecx+4]
	imul	eax, 328				; 00000148H
	add	eax, DWORD PTR [ecx]

; 198  :     };

	ret	0
?end@?$BaseVector@VCvReligion@@$0A@@@QAEPAVCvReligion@@XZ ENDP ; BaseVector<CvReligion,0>::end
_TEXT	ENDS
PUBLIC	?begin@?$BaseVector@VCvReligion@@$0A@@@QBEPBVCvReligion@@XZ ; BaseVector<CvReligion,0>::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$BaseVector@VCvReligion@@$0A@@@QBEPBVCvReligion@@XZ
_TEXT	SEGMENT
?begin@?$BaseVector@VCvReligion@@$0A@@@QBEPBVCvReligion@@XZ PROC ; BaseVector<CvReligion,0>::begin, COMDAT
; _this$ = ecx

; 201  :         return m_pData; 

	mov	eax, DWORD PTR [ecx]

; 202  :     };

	ret	0
?begin@?$BaseVector@VCvReligion@@$0A@@@QBEPBVCvReligion@@XZ ENDP ; BaseVector<CvReligion,0>::begin
_TEXT	ENDS
PUBLIC	?end@?$BaseVector@VCvReligion@@$0A@@@QBEPBVCvReligion@@XZ ; BaseVector<CvReligion,0>::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$BaseVector@VCvReligion@@$0A@@@QBEPBVCvReligion@@XZ
_TEXT	SEGMENT
?end@?$BaseVector@VCvReligion@@$0A@@@QBEPBVCvReligion@@XZ PROC ; BaseVector<CvReligion,0>::end, COMDAT
; _this$ = ecx

; 204  :         return m_pData+m_uiCurrSize; 

	mov	eax, DWORD PTR [ecx+4]
	imul	eax, 328				; 00000148H
	add	eax, DWORD PTR [ecx]

; 205  :     };

	ret	0
?end@?$BaseVector@VCvReligion@@$0A@@@QBEPBVCvReligion@@XZ ENDP ; BaseVector<CvReligion,0>::end
_TEXT	ENDS
PUBLIC	?erase@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEXPAVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::erase
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEXPAVCvReligionInCity@@@Z
_TEXT	SEGMENT
_it$ = 8						; size = 4
?erase@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEXPAVCvReligionInCity@@@Z PROC ; FStaticVector<CvReligionInCity,8,0,297,0>::erase, COMDAT
; _this$ = ecx

; 703  : 		m_bIsResized = false;
; 704  : 
; 705  : 		unsigned int uIndex = it - m_pData;

	mov	edx, DWORD PTR _it$[esp-4]
	sub	edx, DWORD PTR [ecx]
	mov	eax, 715827883				; 2aaaaaabH
	imul	edx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	esi

; 706  : 
; 707  :         for(unsigned int i = uIndex; i + 1< m_uiCurrSize; ++i)

	lea	esi, DWORD PTR [eax+1]
	mov	BYTE PTR [ecx+204], 0
	cmp	esi, DWORD PTR [ecx+4]
	jae	SHORT $LN8@erase
	lea	edx, DWORD PTR [eax+eax*2]
	add	edx, edx
	add	edx, edx
	add	edx, edx
	push	edi
$LL3@erase:

; 708  :         {
; 709  :             m_pData[i] = m_pData[i+1];

	mov	eax, DWORD PTR [ecx]
	mov	edi, DWORD PTR [eax+edx+24]
	add	eax, edx
	mov	DWORD PTR [eax], edi
	mov	edi, DWORD PTR [eax+28]
	mov	DWORD PTR [eax+4], edi
	mov	edi, DWORD PTR [eax+32]
	mov	DWORD PTR [eax+8], edi
	mov	edi, DWORD PTR [eax+36]
	mov	DWORD PTR [eax+12], edi
	mov	edi, DWORD PTR [eax+40]
	mov	DWORD PTR [eax+16], edi
	mov	edi, DWORD PTR [eax+44]
	inc	esi
	mov	DWORD PTR [eax+20], edi
	add	edx, 24					; 00000018H
	cmp	esi, DWORD PTR [ecx+4]
	jb	SHORT $LL3@erase
	pop	edi
$LN8@erase:

; 710  :         }
; 711  : 		
; 712  : 		--m_uiCurrSize;

	dec	DWORD PTR [ecx+4]
	pop	esi

; 713  : 	}

	ret	4
?erase@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEXPAVCvReligionInCity@@@Z ENDP ; FStaticVector<CvReligionInCity,8,0,297,0>::erase
_TEXT	ENDS
PUBLIC	?size@?$BaseVector@VCvReligionInCity@@$0A@@@QBEIXZ ; BaseVector<CvReligionInCity,0>::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$BaseVector@VCvReligionInCity@@$0A@@@QBEIXZ
_TEXT	SEGMENT
?size@?$BaseVector@VCvReligionInCity@@$0A@@@QBEIXZ PROC	; BaseVector<CvReligionInCity,0>::size, COMDAT
; _this$ = ecx

; 169  : 		return m_uiCurrSize;

	mov	eax, DWORD PTR [ecx+4]

; 170  : 	};

	ret	0
?size@?$BaseVector@VCvReligionInCity@@$0A@@@QBEIXZ ENDP	; BaseVector<CvReligionInCity,0>::size
_TEXT	ENDS
PUBLIC	?begin@?$BaseVector@VCvReligionInCity@@$0A@@@QAEPAVCvReligionInCity@@XZ ; BaseVector<CvReligionInCity,0>::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$BaseVector@VCvReligionInCity@@$0A@@@QAEPAVCvReligionInCity@@XZ
_TEXT	SEGMENT
?begin@?$BaseVector@VCvReligionInCity@@$0A@@@QAEPAVCvReligionInCity@@XZ PROC ; BaseVector<CvReligionInCity,0>::begin, COMDAT
; _this$ = ecx

; 194  :         return m_pData; 

	mov	eax, DWORD PTR [ecx]

; 195  :     };

	ret	0
?begin@?$BaseVector@VCvReligionInCity@@$0A@@@QAEPAVCvReligionInCity@@XZ ENDP ; BaseVector<CvReligionInCity,0>::begin
_TEXT	ENDS
PUBLIC	?end@?$BaseVector@VCvReligionInCity@@$0A@@@QAEPAVCvReligionInCity@@XZ ; BaseVector<CvReligionInCity,0>::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$BaseVector@VCvReligionInCity@@$0A@@@QAEPAVCvReligionInCity@@XZ
_TEXT	SEGMENT
?end@?$BaseVector@VCvReligionInCity@@$0A@@@QAEPAVCvReligionInCity@@XZ PROC ; BaseVector<CvReligionInCity,0>::end, COMDAT
; _this$ = ecx

; 197  :         return m_pData+m_uiCurrSize; 

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 198  :     };

	ret	0
?end@?$BaseVector@VCvReligionInCity@@$0A@@@QAEPAVCvReligionInCity@@XZ ENDP ; BaseVector<CvReligionInCity,0>::end
_TEXT	ENDS
PUBLIC	?begin@?$BaseVector@VCvReligionInCity@@$0A@@@QBEPBVCvReligionInCity@@XZ ; BaseVector<CvReligionInCity,0>::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$BaseVector@VCvReligionInCity@@$0A@@@QBEPBVCvReligionInCity@@XZ
_TEXT	SEGMENT
?begin@?$BaseVector@VCvReligionInCity@@$0A@@@QBEPBVCvReligionInCity@@XZ PROC ; BaseVector<CvReligionInCity,0>::begin, COMDAT
; _this$ = ecx

; 201  :         return m_pData; 

	mov	eax, DWORD PTR [ecx]

; 202  :     };

	ret	0
?begin@?$BaseVector@VCvReligionInCity@@$0A@@@QBEPBVCvReligionInCity@@XZ ENDP ; BaseVector<CvReligionInCity,0>::begin
_TEXT	ENDS
PUBLIC	?end@?$BaseVector@VCvReligionInCity@@$0A@@@QBEPBVCvReligionInCity@@XZ ; BaseVector<CvReligionInCity,0>::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$BaseVector@VCvReligionInCity@@$0A@@@QBEPBVCvReligionInCity@@XZ
_TEXT	SEGMENT
?end@?$BaseVector@VCvReligionInCity@@$0A@@@QBEPBVCvReligionInCity@@XZ PROC ; BaseVector<CvReligionInCity,0>::end, COMDAT
; _this$ = ecx

; 204  :         return m_pData+m_uiCurrSize; 

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 205  :     };

	ret	0
?end@?$BaseVector@VCvReligionInCity@@$0A@@@QBEPBVCvReligionInCity@@XZ ENDP ; BaseVector<CvReligionInCity,0>::end
_TEXT	ENDS
PUBLIC	?size@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEIXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?size@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEIXZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::size, COMDAT
; _this$ = ecx

; 726  : 		return (_Mylast - _Myfirst);

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 727  : 		}

	ret	0
?size@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEIXZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::size
_TEXT	ENDS
PUBLIC	??0CvReligion@@QAE@ABV0@@Z			; CvReligion::CvReligion
EXTRN	??0CvReligionBeliefs@@QAE@ABV0@@Z:PROC		; CvReligionBeliefs::CvReligionBeliefs
; Function compile flags: /Ogtpy
;	COMDAT ??0CvReligion@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0CvReligion@@QAE@ABV0@@Z PROC				; CvReligion::CvReligion, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	ebx
	mov	ebx, ecx
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ebx], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ebx+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ebx+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [ebx+12], edx
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [ebx+16], ecx
	mov	dl, BYTE PTR [eax+20]
	push	esi
	mov	BYTE PTR [ebx+20], dl
	mov	cl, BYTE PTR [eax+21]
	push	edi
	mov	BYTE PTR [ebx+21], cl
	lea	esi, DWORD PTR [eax+22]
	lea	edi, DWORD PTR [ebx+22]
	mov	ecx, 32					; 00000020H
	add	eax, 152				; 00000098H
	rep movsd
	push	eax
	lea	ecx, DWORD PTR [ebx+152]
	call	??0CvReligionBeliefs@@QAE@ABV0@@Z	; CvReligionBeliefs::CvReligionBeliefs
	pop	edi
	pop	esi
	mov	eax, ebx
	pop	ebx
	ret	4
??0CvReligion@@QAE@ABV0@@Z ENDP				; CvReligion::CvReligion
_TEXT	ENDS
PUBLIC	?addTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z ; DestructionNotification<FObjectHandle<CvUnit> >::addTarget
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
;	COMDAT ?addTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
_target$ = 8						; size = 4
?addTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z PROC ; DestructionNotification<FObjectHandle<CvUnit> >::addTarget, COMDAT
; _this$ = ecx

; 52   : #ifdef TRACK_DESTRUCTION_NOTIFICATION
; 53   : 		m_targets.insert(&target);
; 54   : #endif
; 55   : 	}

	ret	4
?addTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z ENDP ; DestructionNotification<FObjectHandle<CvUnit> >::addTarget
_TEXT	ENDS
PUBLIC	?removeTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z ; DestructionNotification<FObjectHandle<CvUnit> >::removeTarget
; Function compile flags: /Ogtpy
;	COMDAT ?removeTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
_target$ = 8						; size = 4
?removeTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z PROC ; DestructionNotification<FObjectHandle<CvUnit> >::removeTarget, COMDAT
; _this$ = ecx

; 63   : #ifdef TRACK_DESTRUCTION_NOTIFICATION
; 64   : 		m_targets.erase(&target);
; 65   : #endif
; 66   : 	}

	ret	4
?removeTarget@?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@QAEXABV?$FObjectHandle@VCvUnit@@@@@Z ENDP ; DestructionNotification<FObjectHandle<CvUnit> >::removeTarget
_TEXT	ENDS
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<CvReligionEntry *> >::~_Container_base_aux_alloc_empty<std::allocator<CvReligionEntry *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<CvReligionEntry *> >::~_Container_base_aux_alloc_empty<std::allocator<CvReligionEntry *> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<CvReligionEntry *> >::~_Container_base_aux_alloc_empty<std::allocator<CvReligionEntry *> >
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVCvReligionEntry@@@std@@QAE@XZ	; std::allocator<CvReligionEntry *>::allocator<CvReligionEntry *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAVCvReligionEntry@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAVCvReligionEntry@@@std@@QAE@XZ PROC	; std::allocator<CvReligionEntry *>::allocator<CvReligionEntry *>, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@PAVCvReligionEntry@@@std@@QAE@XZ ENDP	; std::allocator<CvReligionEntry *>::allocator<CvReligionEntry *>
_TEXT	ENDS
PUBLIC	??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@ ; `string'
PUBLIC	?Alloc@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEPAVCvReligion@@I@Z ; FStaticVector<CvReligion,16,0,297,0>::Alloc
EXTRN	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z:PROC ; FireMallocAlignedNoTracking
;	COMDAT ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
CONST	SEGMENT
??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@ DB 'c:\users\eno'
	DB	'rmousapplepie\documents\github\lekmod\lekmod_dll\fireplace\in'
	DB	'clude\fireworks\FFastVector.h', 00H		; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?Alloc@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEPAVCvReligion@@I@Z
_TEXT	SEGMENT
_uiSize$ = 8						; size = 4
?Alloc@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEPAVCvReligion@@I@Z PROC ; FStaticVector<CvReligion,16,0,297,0>::Alloc, COMDAT
; _this$ = ecx

; 795  : 	T* Alloc(unsigned int uiSize){

	push	esi
	push	edi

; 796  : 		T* pRet;
; 797  : 		if( uiSize > L ){

	mov	edi, DWORD PTR _uiSize$[esp+4]
	mov	esi, ecx
	cmp	edi, 16					; 00000010H
	jbe	SHORT $LN2@Alloc

; 798  : 			pRet = (T*)FMALLOCALIGNED( uiSize*sizeof(T), __alignof(T), AllocPool, nSubID );

	mov	eax, edi
	imul	eax, 328				; 00000148H
	push	798					; 0000031eH
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H

; 799  : 			m_uiCurrMaxSize = uiSize;

	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi

; 803  : 		}
; 804  : 		return pRet;
; 805  : 	};

	ret	4
$LN2@Alloc:
	pop	edi

; 800  : 		}else{
; 801  : 			pRet = (T*)m_aData;

	lea	eax, DWORD PTR [esi+12]

; 802  : 			m_uiCurrMaxSize = L;

	mov	DWORD PTR [esi+8], 16			; 00000010H
	pop	esi

; 803  : 		}
; 804  : 		return pRet;
; 805  : 	};

	ret	4
?Alloc@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEPAVCvReligion@@I@Z ENDP ; FStaticVector<CvReligion,16,0,297,0>::Alloc
_TEXT	ENDS
PUBLIC	??1?$BaseVector@VCvReligion@@$0A@@@QAE@XZ	; BaseVector<CvReligion,0>::~BaseVector<CvReligion,0>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$BaseVector@VCvReligion@@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$BaseVector@VCvReligion@@$0A@@@QAE@XZ PROC		; BaseVector<CvReligion,0>::~BaseVector<CvReligion,0>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	ret	0
??1?$BaseVector@VCvReligion@@$0A@@@QAE@XZ ENDP		; BaseVector<CvReligion,0>::~BaseVector<CvReligion,0>
_TEXT	ENDS
PUBLIC	??0?$BaseVector@VCvReligion@@$0A@@@IAE@XZ	; BaseVector<CvReligion,0>::BaseVector<CvReligion,0>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$BaseVector@VCvReligion@@$0A@@@IAE@XZ
_TEXT	SEGMENT
??0?$BaseVector@VCvReligion@@$0A@@@IAE@XZ PROC		; BaseVector<CvReligion,0>::BaseVector<CvReligion,0>, COMDAT
; _this$ = ecx

; 216  : 	BaseVector() : m_uiCurrSize(0), m_uiCurrMaxSize(0), m_pData(NULL) {};

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$BaseVector@VCvReligion@@$0A@@@IAE@XZ ENDP		; BaseVector<CvReligion,0>::BaseVector<CvReligion,0>
_TEXT	ENDS
PUBLIC	?Alloc@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEPAVCvReligionInCity@@I@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::Alloc
; Function compile flags: /Ogtpy
;	COMDAT ?Alloc@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEPAVCvReligionInCity@@I@Z
_TEXT	SEGMENT
_uiSize$ = 8						; size = 4
?Alloc@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEPAVCvReligionInCity@@I@Z PROC ; FStaticVector<CvReligionInCity,8,0,297,0>::Alloc, COMDAT
; _this$ = ecx

; 795  : 	T* Alloc(unsigned int uiSize){

	push	esi
	push	edi

; 796  : 		T* pRet;
; 797  : 		if( uiSize > L ){

	mov	edi, DWORD PTR _uiSize$[esp+4]
	mov	esi, ecx
	cmp	edi, 8
	jbe	SHORT $LN2@Alloc@2

; 798  : 			pRet = (T*)FMALLOCALIGNED( uiSize*sizeof(T), __alignof(T), AllocPool, nSubID );

	push	798					; 0000031eH
	lea	eax, DWORD PTR [edi+edi*2]
	add	eax, eax
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	add	eax, eax
	add	eax, eax
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H

; 799  : 			m_uiCurrMaxSize = uiSize;

	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi

; 803  : 		}
; 804  : 		return pRet;
; 805  : 	};

	ret	4
$LN2@Alloc@2:
	pop	edi

; 800  : 		}else{
; 801  : 			pRet = (T*)m_aData;

	lea	eax, DWORD PTR [esi+12]

; 802  : 			m_uiCurrMaxSize = L;

	mov	DWORD PTR [esi+8], 8
	pop	esi

; 803  : 		}
; 804  : 		return pRet;
; 805  : 	};

	ret	4
?Alloc@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEPAVCvReligionInCity@@I@Z ENDP ; FStaticVector<CvReligionInCity,8,0,297,0>::Alloc
_TEXT	ENDS
PUBLIC	??1?$BaseVector@VCvReligionInCity@@$0A@@@QAE@XZ	; BaseVector<CvReligionInCity,0>::~BaseVector<CvReligionInCity,0>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$BaseVector@VCvReligionInCity@@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$BaseVector@VCvReligionInCity@@$0A@@@QAE@XZ PROC	; BaseVector<CvReligionInCity,0>::~BaseVector<CvReligionInCity,0>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	ret	0
??1?$BaseVector@VCvReligionInCity@@$0A@@@QAE@XZ ENDP	; BaseVector<CvReligionInCity,0>::~BaseVector<CvReligionInCity,0>
_TEXT	ENDS
PUBLIC	??0?$BaseVector@VCvReligionInCity@@$0A@@@IAE@XZ	; BaseVector<CvReligionInCity,0>::BaseVector<CvReligionInCity,0>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$BaseVector@VCvReligionInCity@@$0A@@@IAE@XZ
_TEXT	SEGMENT
??0?$BaseVector@VCvReligionInCity@@$0A@@@IAE@XZ PROC	; BaseVector<CvReligionInCity,0>::BaseVector<CvReligionInCity,0>, COMDAT
; _this$ = ecx

; 216  : 	BaseVector() : m_uiCurrSize(0), m_uiCurrMaxSize(0), m_pData(NULL) {};

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$BaseVector@VCvReligionInCity@@$0A@@@IAE@XZ ENDP	; BaseVector<CvReligionInCity,0>::BaseVector<CvReligionInCity,0>
_TEXT	ENDS
PUBLIC	?Destroy@?$BaseVector@VCvReligionInCity@@$0A@@@IAEXPAVCvReligionInCity@@I@Z ; BaseVector<CvReligionInCity,0>::Destroy
; Function compile flags: /Ogtpy
;	COMDAT ?Destroy@?$BaseVector@VCvReligionInCity@@$0A@@@IAEXPAVCvReligionInCity@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Destroy@?$BaseVector@VCvReligionInCity@@$0A@@@IAEXPAVCvReligionInCity@@I@Z PROC ; BaseVector<CvReligionInCity,0>::Destroy, COMDAT
; _this$ = ecx

; 221  : 		if( !bPODType){
; 222  : 			for(unsigned int i = 0; i < uiNumElements; ++i){
; 223  : 				pVal[i].~T();
; 224  : 			}
; 225  : 		}
; 226  : 	};

	ret	8
?Destroy@?$BaseVector@VCvReligionInCity@@$0A@@@IAEXPAVCvReligionInCity@@I@Z ENDP ; BaseVector<CvReligionInCity,0>::Destroy
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBEABQAVCvReligionEntry@@XZ ; std::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBEABQAVCvReligionEntry@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBEABQAVCvReligionEntry@@XZ PROC ; std::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator*, COMDAT
; _this$ = ecx

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());
; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [ecx]

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBEABQAVCvReligionEntry@@XZ ENDP ; std::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator++, COMDAT
; _this$ = ecx

; 115  : 		{	// preincrement

	mov	eax, ecx

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [eax], 4

; 126  : 		return (*this);
; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator++
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator==
_TEXT	ENDS
PUBLIC	?capacity@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEIXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::capacity
; Function compile flags: /Ogtpy
;	COMDAT ?capacity@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEIXZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::capacity, COMDAT
; _this$ = ecx

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	edx, DWORD PTR [ecx+4]
	test	edx, edx
	jne	SHORT $LN3@capacity
	xor	eax, eax

; 636  : 		}

	ret	0
$LN3@capacity:

; 635  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

	mov	eax, DWORD PTR [ecx+12]
	sub	eax, edx
	sar	eax, 2

; 636  : 		}

	ret	0
?capacity@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEIXZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::capacity
_TEXT	ENDS
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Xlen
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T232040 = -80						; size = 28
$T232039 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T232040[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T232039[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T232040[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T232039[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T232039[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T232039[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T232039[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen:
$LN12@Xlen:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T232040[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T232039[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Xlen
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[esp+20]
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _this$[esp+28], esi
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	add	edi, 12					; 0000000cH
	push	edi
	lea	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[esp+36], 0
	mov	DWORD PTR [esi], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
PUBLIC	??1?$_Container_base_aux_alloc_empty@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1?$_Container_base_aux_alloc_empty@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
??1?$_Container_base_aux_alloc_empty@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx

; 627  : 	~_Container_base_aux_alloc_empty() { }

	ret	0
??1?$_Container_base_aux_alloc_empty@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >::~_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??0?$allocator@W4BeliefTypes@@@std@@QAE@XZ	; std::allocator<enum BeliefTypes>::allocator<enum BeliefTypes>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@W4BeliefTypes@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@W4BeliefTypes@@@std@@QAE@XZ PROC		; std::allocator<enum BeliefTypes>::allocator<enum BeliefTypes>, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	mov	eax, ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	ret	0
??0?$allocator@W4BeliefTypes@@@std@@QAE@XZ ENDP		; std::allocator<enum BeliefTypes>::allocator<enum BeliefTypes>
_TEXT	ENDS
PUBLIC	??0?$allocator@W4BeliefTypes@@@std@@QAE@ABV01@@Z ; std::allocator<enum BeliefTypes>::allocator<enum BeliefTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$allocator@W4BeliefTypes@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@W4BeliefTypes@@@std@@QAE@ABV01@@Z PROC	; std::allocator<enum BeliefTypes>::allocator<enum BeliefTypes>, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@W4BeliefTypes@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<enum BeliefTypes>::allocator<enum BeliefTypes>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@I@Z ; std::allocator<enum BeliefTypes>::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@I@Z PROC ; std::allocator<enum BeliefTypes>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@I@Z ENDP ; std::allocator<enum BeliefTypes>::deallocate
_TEXT	ENDS
PUBLIC	??A?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAEAAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::operator[]
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??A?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAEAAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z
_TEXT	SEGMENT
_ui$ = 8						; size = 4
??A?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAEAAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z PROC ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::operator[], COMDAT
; _this$ = ecx

; 129  : 		FAssert(ui < m_uiCurrSize);
; 130  : 		return m_pData[ui];

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ui$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*8]

; 131  : 	};

	ret	4
??A?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAEAAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z ENDP ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::operator[]
_TEXT	ENDS
PUBLIC	??A?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QBEABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::operator[]
; Function compile flags: /Ogtpy
;	COMDAT ??A?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QBEABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z
_TEXT	SEGMENT
_ui$ = 8						; size = 4
??A?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QBEABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z PROC ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::operator[], COMDAT
; _this$ = ecx

; 135  : 		FAssert(ui < m_uiCurrSize);
; 136  : 		return m_pData[ui];

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ui$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*8]

; 137  : 	};

	ret	4
??A?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QBEABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z ENDP ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::operator[]
_TEXT	ENDS
PUBLIC	?size@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QBEIXZ ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QBEIXZ
_TEXT	SEGMENT
?size@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QBEIXZ PROC ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::size, COMDAT
; _this$ = ecx

; 169  : 		return m_uiCurrSize;

	mov	eax, DWORD PTR [ecx+4]

; 170  : 	};

	ret	0
?size@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QBEIXZ ENDP ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::size
_TEXT	ENDS
PUBLIC	?begin@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAEPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@XZ ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAEPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@XZ
_TEXT	SEGMENT
?begin@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAEPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@XZ PROC ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::begin, COMDAT
; _this$ = ecx

; 194  :         return m_pData; 

	mov	eax, DWORD PTR [ecx]

; 195  :     };

	ret	0
?begin@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAEPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@XZ ENDP ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::begin
_TEXT	ENDS
PUBLIC	?end@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAEPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@XZ ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAEPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@XZ
_TEXT	SEGMENT
?end@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAEPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@XZ PROC ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::end, COMDAT
; _this$ = ecx

; 197  :         return m_pData+m_uiCurrSize; 

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [ecx+eax*8]

; 198  :     };

	ret	0
?end@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAEPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@XZ ENDP ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::end
_TEXT	ENDS
PUBLIC	??0WeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ; CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement::WeightedElement
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
;	COMDAT ??0WeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ
_TEXT	SEGMENT
??0WeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ PROC ; CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement::WeightedElement, COMDAT
; _this$ = ecx

; 31   : 		{

	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0

; 32   : 		}

	ret	0
??0WeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ENDP ; CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement::WeightedElement
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEABW4BeliefTypes@@XZ ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??D?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEABW4BeliefTypes@@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEABW4BeliefTypes@@XZ PROC ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator*, COMDAT
; _this$ = ecx

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());
; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	eax, DWORD PTR [ecx]

; 107  : 		}

	ret	0
??D?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEABW4BeliefTypes@@XZ ENDP ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator++, COMDAT
; _this$ = ecx

; 115  : 		{	// preincrement

	mov	eax, ecx

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);
; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	add	DWORD PTR [eax], 4

; 126  : 		return (*this);
; 127  : 		}

	ret	0
??E?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator++
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator==
; Function compile flags: /Ogtpy
;	COMDAT ??8?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator==, COMDAT
; _this$ = ecx

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl

; 212  : 		}

	ret	4
??8?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator==
_TEXT	ENDS
PUBLIC	??_GCvReligion@@QAEPAXI@Z			; CvReligion::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvReligion@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvReligion@@QAEPAXI@Z PROC				; CvReligion::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	lea	ecx, DWORD PTR [esi+152]
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN7@scalar@4
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN7@scalar@4:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvReligion@@QAEPAXI@Z ENDP				; CvReligion::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ$2
__ehfuncinfo$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T232124 = -80						; size = 28
$T232123 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Xlen, COMDAT

; 1259 : 		{	// report a length_error

	push	-1
	push	__ehhandler$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H

; 1260 : 		_THROW(length_error, "vector<T> too long");

	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T232124[esp+84]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T232123[esp+80]
	mov	DWORD PTR __$EHRec$[esp+88], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	lea	eax, DWORD PTR $T232124[esp+80]
	push	eax
	lea	ecx, DWORD PTR $T232123[esp+96]
	mov	BYTE PTR __$EHRec$[esp+92], 1
	mov	DWORD PTR $T232123[esp+84], OFFSET ??_7logic_error@std@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T232123[esp+84]
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+96], 0
	mov	DWORD PTR $T232123[esp+88], OFFSET ??_7length_error@std@@6B@
	call	__CxxThrowException@8
$LN13@Xlen@2:
$LN12@Xlen@2:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T232124[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ$2:
	lea	ecx, DWORD PTR $T232123[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ:
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Xlen
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE@V?$allocator@PAVCvReligionEntry@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<CvReligionEntry *> >::_Container_base_aux_alloc_empty<std::allocator<CvReligionEntry *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE@V?$allocator@PAVCvReligionEntry@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE@V?$allocator@PAVCvReligionEntry@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<CvReligionEntry *> >::_Container_base_aux_alloc_empty<std::allocator<CvReligionEntry *> >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE@V?$allocator@PAVCvReligionEntry@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<CvReligionEntry *> >::_Container_base_aux_alloc_empty<std::allocator<CvReligionEntry *> >
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVCvReligionEntry@@@std@@QAE@ABV01@@Z ; std::allocator<CvReligionEntry *>::allocator<CvReligionEntry *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAVCvReligionEntry@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAVCvReligionEntry@@@std@@QAE@ABV01@@Z PROC ; std::allocator<CvReligionEntry *>::allocator<CvReligionEntry *>, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	eax, ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	ret	4
??0?$allocator@PAVCvReligionEntry@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<CvReligionEntry *>::allocator<CvReligionEntry *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVCvReligionEntry@@@std@@QAEXPAPAVCvReligionEntry@@I@Z ; std::allocator<CvReligionEntry *>::deallocate
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@PAVCvReligionEntry@@@std@@QAEXPAPAVCvReligionEntry@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVCvReligionEntry@@@std@@QAEXPAPAVCvReligionEntry@@I@Z PROC ; std::allocator<CvReligionEntry *>::deallocate, COMDAT
; _this$ = ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx

; 141  : 		}

	ret	8
?deallocate@?$allocator@PAVCvReligionEntry@@@std@@QAEXPAPAVCvReligionEntry@@I@Z ENDP ; std::allocator<CvReligionEntry *>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@PAPAVCvReligionEntry@@@Z ; std::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@PAPAVCvReligionEntry@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@PAPAVCvReligionEntry@@@Z PROC ; std::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@PAPAVCvReligionEntry@@@Z ENDP ; std::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >
_TEXT	ENDS
PUBLIC	??0?$_Container_base_aux_alloc_empty@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@V?$allocator@W4BeliefTypes@@@1@@Z ; std::_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >::_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??0?$_Container_base_aux_alloc_empty@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@V?$allocator@W4BeliefTypes@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??0?$_Container_base_aux_alloc_empty@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@V?$allocator@W4BeliefTypes@@@1@@Z PROC ; std::_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >::_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx

; 618  : 	explicit _Container_base_aux_alloc_empty(_Alloc) { }

	mov	eax, ecx
	ret	4
??0?$_Container_base_aux_alloc_empty@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@V?$allocator@W4BeliefTypes@@@1@@Z ENDP ; std::_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >::_Container_base_aux_alloc_empty<std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@W4BeliefTypes@@@std@@QBEIXZ ; std::allocator<enum BeliefTypes>::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@W4BeliefTypes@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@W4BeliefTypes@@@std@@QBEIXZ PROC	; std::allocator<enum BeliefTypes>::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 1073741823				; 3fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@W4BeliefTypes@@@std@@QBEIXZ ENDP	; std::allocator<enum BeliefTypes>::max_size
_TEXT	ENDS
PUBLIC	?Alloc@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::Alloc
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?Alloc@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z
_TEXT	SEGMENT
_uiSize$ = 8						; size = 4
?Alloc@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z PROC ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::Alloc, COMDAT
; _this$ = ecx

; 795  : 	T* Alloc(unsigned int uiSize){

	push	esi
	push	edi

; 796  : 		T* pRet;
; 797  : 		if( uiSize > L ){

	mov	edi, DWORD PTR _uiSize$[esp+4]
	mov	esi, ecx
	cmp	edi, 100				; 00000064H
	jbe	SHORT $LN2@Alloc@3

; 798  : 			pRet = (T*)FMALLOCALIGNED( uiSize*sizeof(T), __alignof(T), AllocPool, nSubID );

	push	798					; 0000031eH
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	lea	eax, DWORD PTR [edi*8]
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H

; 799  : 			m_uiCurrMaxSize = uiSize;

	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi

; 803  : 		}
; 804  : 		return pRet;
; 805  : 	};

	ret	4
$LN2@Alloc@3:
	pop	edi

; 800  : 		}else{
; 801  : 			pRet = (T*)m_aData;

	lea	eax, DWORD PTR [esi+12]

; 802  : 			m_uiCurrMaxSize = L;

	mov	DWORD PTR [esi+8], 100			; 00000064H
	pop	esi

; 803  : 		}
; 804  : 		return pRet;
; 805  : 	};

	ret	4
?Alloc@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z ENDP ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::Alloc
_TEXT	ENDS
PUBLIC	??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAE@XZ ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAE@XZ
_TEXT	SEGMENT
??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAE@XZ PROC ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>, COMDAT
; _this$ = ecx

; 111  : 	~BaseVector(){};

	ret	0
??1?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@QAE@XZ ENDP ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::~BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>
_TEXT	ENDS
PUBLIC	??0?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@IAE@XZ ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@IAE@XZ
_TEXT	SEGMENT
??0?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@IAE@XZ PROC ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>, COMDAT
; _this$ = ecx

; 216  : 	BaseVector() : m_uiCurrSize(0), m_uiCurrMaxSize(0), m_pData(NULL) {};

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	ret	0
??0?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@IAE@XZ ENDP ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>
_TEXT	ENDS
PUBLIC	??0WeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@ABU01@@Z ; CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement::WeightedElement
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
;	COMDAT ??0WeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@ABU01@@Z
_TEXT	SEGMENT
_source$ = 8						; size = 4
??0WeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@ABU01@@Z PROC ; CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement::WeightedElement, COMDAT
; _this$ = ecx

; 37   : 		{

	mov	eax, ecx
	mov	ecx, DWORD PTR _source$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx

; 38   : 		}

	ret	4
??0WeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@ABU01@@Z ENDP ; CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement::WeightedElement
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@PAW4BeliefTypes@@@Z ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@PAW4BeliefTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@PAW4BeliefTypes@@@Z PROC ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx

; 84   : 	explicit _Vector_const_iterator(_Tptr _Ptr)

	mov	eax, ecx

; 85   : 		{	// construct with pointer _Ptr
; 86   : 		_Myptr = _Ptr;

	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 87   : 		}

	ret	4
??0?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@PAW4BeliefTypes@@@Z ENDP ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??G?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator-
; Function compile flags: /Ogtpy
;	COMDAT ??G?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??G?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator-, COMDAT
; _this$ = ecx

; 187  : 
; 188  :  #if _HAS_ITERATOR_DEBUGGING
; 189  : 		_Compat(_Right);
; 190  :  #else
; 191  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));
; 192  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 193  : 
; 194  : 		return (_Myptr - _Right._Myptr);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Right$[esp-4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 195  : 		}

	ret	4
??G?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator-
_TEXT	ENDS
PUBLIC	?GetClosureThis@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AEHHPBD@ZP6AHH0@ZP6AHH0@Z@detail@fastdelegate@@QBEPAVGenericClass@23@XZ ; fastdelegate::detail::ClosurePtr<int (__thiscall fastdelegate::detail::GenericClass::*)(int,char const *),int (__cdecl*)(int,char const *),int (__cdecl*)(int,char const *)>::GetClosureThis
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\eventsystem\fastdelegate.h
;	COMDAT ?GetClosureThis@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AEHHPBD@ZP6AHH0@ZP6AHH0@Z@detail@fastdelegate@@QBEPAVGenericClass@23@XZ
_TEXT	SEGMENT
?GetClosureThis@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AEHHPBD@ZP6AHH0@ZP6AHH0@Z@detail@fastdelegate@@QBEPAVGenericClass@23@XZ PROC ; fastdelegate::detail::ClosurePtr<int (__thiscall fastdelegate::detail::GenericClass::*)(int,char const *),int (__cdecl*)(int,char const *),int (__cdecl*)(int,char const *)>::GetClosureThis, COMDAT
; _this$ = ecx

; 701  : 	inline GenericClass *GetClosureThis() const { return m_pthis; }

	mov	eax, DWORD PTR [ecx]
	ret	0
?GetClosureThis@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AEHHPBD@ZP6AHH0@ZP6AHH0@Z@detail@fastdelegate@@QBEPAVGenericClass@23@XZ ENDP ; fastdelegate::detail::ClosurePtr<int (__thiscall fastdelegate::detail::GenericClass::*)(int,char const *),int (__cdecl*)(int,char const *),int (__cdecl*)(int,char const *)>::GetClosureThis
_TEXT	ENDS
PUBLIC	?GetClosureMemPtr@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AEHHPBD@ZP6AHH0@ZP6AHH0@Z@detail@fastdelegate@@QBEP8GenericClass@23@AEHHPBD@ZXZ ; fastdelegate::detail::ClosurePtr<int (__thiscall fastdelegate::detail::GenericClass::*)(int,char const *),int (__cdecl*)(int,char const *),int (__cdecl*)(int,char const *)>::GetClosureMemPtr
; Function compile flags: /Ogtpy
;	COMDAT ?GetClosureMemPtr@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AEHHPBD@ZP6AHH0@ZP6AHH0@Z@detail@fastdelegate@@QBEP8GenericClass@23@AEHHPBD@ZXZ
_TEXT	SEGMENT
?GetClosureMemPtr@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AEHHPBD@ZP6AHH0@ZP6AHH0@Z@detail@fastdelegate@@QBEP8GenericClass@23@AEHHPBD@ZXZ PROC ; fastdelegate::detail::ClosurePtr<int (__thiscall fastdelegate::detail::GenericClass::*)(int,char const *),int (__cdecl*)(int,char const *),int (__cdecl*)(int,char const *)>::GetClosureMemPtr, COMDAT
; _this$ = ecx

; 702  : 	inline GenericMemFunc GetClosureMemPtr() const { return reinterpret_cast<GenericMemFunc>(m_pFunction); }

	mov	eax, DWORD PTR [ecx+4]
	ret	0
?GetClosureMemPtr@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AEHHPBD@ZP6AHH0@ZP6AHH0@Z@detail@fastdelegate@@QBEP8GenericClass@23@AEHHPBD@ZXZ ENDP ; fastdelegate::detail::ClosurePtr<int (__thiscall fastdelegate::detail::GenericClass::*)(int,char const *),int (__cdecl*)(int,char const *),int (__cdecl*)(int,char const *)>::GetClosureMemPtr
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVCvReligionEntry@@@std@@QBEIXZ ; std::allocator<CvReligionEntry *>::max_size
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@PAVCvReligionEntry@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAVCvReligionEntry@@@std@@QBEIXZ PROC ; std::allocator<CvReligionEntry *>::max_size, COMDAT
; _this$ = ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 166  : 		return (0 < _Count ? _Count : 1);

	mov	eax, 1073741823				; 3fffffffH

; 167  : 		}

	ret	0
?max_size@?$allocator@PAVCvReligionEntry@@@std@@QBEIXZ ENDP ; std::allocator<CvReligionEntry *>::max_size
_TEXT	ENDS
PUBLIC	?Destroy@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@IAEXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::Destroy
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?Destroy@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@IAEXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Destroy@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@IAEXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z PROC ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::Destroy, COMDAT
; _this$ = ecx

; 221  : 		if( !bPODType){
; 222  : 			for(unsigned int i = 0; i < uiNumElements; ++i){
; 223  : 				pVal[i].~T();
; 224  : 			}
; 225  : 		}
; 226  : 	};

	ret	8
?Destroy@?$BaseVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$00@@IAEXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z ENDP ; BaseVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,1>::Destroy
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator+=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator+=, COMDAT
; _this$ = ecx

; 159  : 		{	// increment by integer

	mov	eax, ecx

; 160  : 		_SCL_SECURE_VALIDATE(this->_Has_container());
; 161  : 		_SCL_SECURE_VALIDATE_RANGE(
; 162  : 			_Myptr + _Off <= ((_Myvec *)(this->_Getmycont()))->_Mylast &&
; 163  : 			_Myptr + _Off >= ((_Myvec *)(this->_Getmycont()))->_Myfirst);
; 164  : 		_Myptr += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*4]
	add	DWORD PTR [eax], edx

; 165  : 		return (*this);
; 166  : 		}

	ret	4
??Y?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator+=
_TEXT	ENDS
PUBLIC	??$max@H@std@@YAABHABH0@Z			; std::max<int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$max@H@std@@YAABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YAABHABH0@Z PROC				; std::max<int>, COMDAT

; 3384 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	edx, DWORD PTR [ecx]
	jge	SHORT $LN4@max
	mov	eax, ecx
$LN4@max:

; 3385 : 	}

	ret	0
??$max@H@std@@YAABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
PUBLIC	??0CvString@@QAE@XZ				; CvString::CvString
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??0CvString@@QAE@XZ
_TEXT	SEGMENT
??0CvString@@QAE@XZ PROC				; CvString::CvString, COMDAT
; _this$ = ecx

; 23   : 	CvString() {}

	push	esi
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, esi
	pop	esi
	ret	0
??0CvString@@QAE@XZ ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??0CvString@@QAE@PBD@Z				; CvString::CvString
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0CvString@@QAE@PBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
??0CvString@@QAE@PBD@Z PROC				; CvString::CvString, COMDAT
; _this$ = ecx

; 25   : 	CvString(const char* s) : std::string(s ? s : "") {CvAssertMsg(s != NULL, "Passing NULL to std::string; possible heap corruption!");}

	mov	eax, DWORD PTR _s$[esp-4]
	push	esi
	mov	esi, ecx
	test	eax, eax
	jne	SHORT $LN4@CvString
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN4@CvString:
	push	eax
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, esi
	pop	esi
	ret	4
??0CvString@@QAE@PBD@Z ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ; operator<<<char const *>
EXTRN	__imp_?PushArgument@String@Localization@@QAE_NPBD@Z:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvlocalization\include\cvlocalization.h
;	COMDAT ??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z PROC	; operator<<<char const *>, COMDAT

; 491  : 	s.PushArgument(val);

	mov	eax, DWORD PTR _val$[esp-4]
	mov	ecx, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR _s$[esp]
	push	ecx
	mov	ecx, esi
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 492  : 	return s;

	mov	eax, esi
	pop	esi

; 493  : }

	ret	0
??$?6PBD@@YAAAVString@Localization@@AAV01@ABQBD@Z ENDP	; operator<<<char const *>
_TEXT	ENDS
PUBLIC	??$strcpy_s@$0IA@@@YAHAAY0IA@DPBD@Z		; strcpy_s<128>
EXTRN	__imp__strcpy_s:PROC
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\string.h
;	COMDAT ??$strcpy_s@$0IA@@@YAHAAY0IA@DPBD@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Source$ = 12						; size = 4
??$strcpy_s@$0IA@@@YAHAAY0IA@DPBD@Z PROC		; strcpy_s<128>, COMDAT

; 73   : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1(errno_t, strcpy_s, _Deref_post_z_ char, _Dest, _In_z_ const char *, _Source)

	mov	eax, DWORD PTR __Source$[esp-4]
	mov	ecx, DWORD PTR __Dest$[esp-4]
	push	eax
	push	128					; 00000080H
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	add	esp, 12					; 0000000cH
	ret	0
??$strcpy_s@$0IA@@@YAHAAY0IA@DPBD@Z ENDP		; strcpy_s<128>
_TEXT	ENDS
PUBLIC	??1CvString@@QAE@XZ				; CvString::~CvString
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??1CvString@@QAE@XZ
_TEXT	SEGMENT
??1CvString@@QAE@XZ PROC				; CvString::~CvString, COMDAT
; _this$ = ecx

; 28   : 	~CvString() {}

	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
??1CvString@@QAE@XZ ENDP				; CvString::~CvString
_TEXT	ENDS
PUBLIC	??BCvString@@QBEPBDXZ				; CvString::operator char const *
; Function compile flags: /Ogtpy
;	COMDAT ??BCvString@@QBEPBDXZ
_TEXT	SEGMENT
??BCvString@@QBEPBDXZ PROC				; CvString::operator char const *, COMDAT
; _this$ = ecx

; 31   : 	operator const char*() const 	{ return c_str(); }												

	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
??BCvString@@QBEPBDXZ ENDP				; CvString::operator char const *
_TEXT	ENDS
PUBLIC	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ		; sprintf_s<256>
EXTRN	__imp__vsprintf_s:PROC
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdio.h
;	COMDAT ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Format$ = 12						; size = 4
??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ PROC		; sprintf_s<256>, COMDAT

; 322  : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(int, sprintf_s, vsprintf_s, char, _Dest, _In_z_ _Printf_format_string_ const char *, _Format)

	mov	ecx, DWORD PTR __Format$[esp-4]
	mov	edx, DWORD PTR __Dest$[esp-4]
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	ecx
	push	256					; 00000100H
	push	edx
	call	DWORD PTR __imp__vsprintf_s
	add	esp, 16					; 00000010H
	ret	0
??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ENDP		; sprintf_s<256>
_TEXT	ENDS
PUBLIC	??$min@H@std@@YAABHABH0@Z			; std::min<int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$min@H@std@@YAABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@H@std@@YAABHABH0@Z PROC				; std::min<int>, COMDAT

; 3399 : 	return (_DEBUG_LT(_Right, _Left) ? _Right : _Left);

	mov	eax, DWORD PTR __Right$[esp-4]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Left$[esp-4]
	cmp	edx, DWORD PTR [ecx]
	jl	SHORT $LN4@min
	mov	eax, ecx
$LN4@min:

; 3400 : 	}

	ret	0
??$min@H@std@@YAABHABH0@Z ENDP				; std::min<int>
_TEXT	ENDS
PUBLIC	??4CvString@@QAEAAV0@PBD@Z			; CvString::operator=
EXTRN	__imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ:PROC
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ??4CvString@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
??4CvString@@QAEAAV0@PBD@Z PROC				; CvString::operator=, COMDAT
; _this$ = ecx

; 37   : 	CvString& operator=( const char* s) { if (s) assign(s); else clear();	return *this; }	

	mov	eax, DWORD PTR _s$[esp-4]
	push	esi
	mov	esi, ecx
	test	eax, eax
	je	SHORT $LN2@operator
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	eax, esi
	pop	esi
	ret	4
$LN2@operator:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, esi
	pop	esi
	ret	4
??4CvString@@QAEAAV0@PBD@Z ENDP				; CvString::operator=
_TEXT	ENDS
PUBLIC	??4CvString@@QAEAAV0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CvString::operator=
; Function compile flags: /Ogtpy
;	COMDAT ??4CvString@@QAEAAV0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
??4CvString@@QAEAAV0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CvString::operator=, COMDAT
; _this$ = ecx

; 38   : 	CvString& operator=( const std::string& s) { assign(s.c_str());	return *this; }	

	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR _s$[esp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, esi
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	mov	eax, esi
	pop	esi
	ret	4
??4CvString@@QAEAAV0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CvString::operator=
_TEXT	ENDS
PUBLIC	?GetCString@CvString@@QBEPBDXZ			; CvString::GetCString
; Function compile flags: /Ogtpy
;	COMDAT ?GetCString@CvString@@QBEPBDXZ
_TEXT	SEGMENT
?GetCString@CvString@@QBEPBDXZ PROC			; CvString::GetCString, COMDAT
; _this$ = ecx

; 42   : 	const char* GetCString() const 	{ return c_str(); }

	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?GetCString@CvString@@QBEPBDXZ ENDP			; CvString::GetCString
_TEXT	ENDS
PUBLIC	?GetLength@CvString@@QBEHXZ			; CvString::GetLength
EXTRN	__imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?GetLength@CvString@@QBEHXZ
_TEXT	SEGMENT
?GetLength@CvString@@QBEHXZ PROC			; CvString::GetLength, COMDAT
; _this$ = ecx

; 46   : 	int GetLength() const { return (int) size(); }

	jmp	DWORD PTR __imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
?GetLength@CvString@@QBEHXZ ENDP			; CvString::GetLength
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@W4BeliefTypes@@@std@@YAPAW4BeliefTypes@@IPAW41@@Z ; std::_Allocate<enum BeliefTypes>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@W4BeliefTypes@@@std@@YAPAW4BeliefTypes@@IPAW41@@Z
_TEXT	SEGMENT
$T232257 = -12						; size = 12
$T232261 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@W4BeliefTypes@@@std@@YAPAW4BeliefTypes@@IPAW41@@Z PROC ; std::_Allocate<enum BeliefTypes>, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*4]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 4
	jae	SHORT $LN1@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T232261[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T232257[esp+16]
	mov	DWORD PTR $T232261[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T232257[esp+16]
	push	ecx
	mov	DWORD PTR $T232257[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate:
$LN8@Allocate:
	int	3
??$_Allocate@W4BeliefTypes@@@std@@YAPAW4BeliefTypes@@IPAW41@@Z ENDP ; std::_Allocate<enum BeliefTypes>
_TEXT	ENDS
PUBLIC	??$_Allocate@PAVCvReligionEntry@@@std@@YAPAPAVCvReligionEntry@@IPAPAV1@@Z ; std::_Allocate<CvReligionEntry *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Allocate@PAVCvReligionEntry@@@std@@YAPAPAVCvReligionEntry@@IPAPAV1@@Z
_TEXT	SEGMENT
$T232267 = -12						; size = 12
$T232271 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVCvReligionEntry@@@std@@YAPAPAVCvReligionEntry@@IPAPAV1@@Z PROC ; std::_Allocate<CvReligionEntry *>, COMDAT

; 37   : 	if (_Count <= 0)

	mov	ecx, DWORD PTR __Count$[esp-4]
	sub	esp, 12					; 0000000cH
	test	ecx, ecx
	ja	SHORT $LN3@Allocate@2

; 38   : 		_Count = 0;

	xor	ecx, ecx
$LN1@Allocate@2:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	lea	edx, DWORD PTR [ecx*4]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 44   : 	}

	add	esp, 12					; 0000000cH
	ret	0
$LN3@Allocate@2:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	ecx
	cmp	eax, 4
	jae	SHORT $LN1@Allocate@2

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	lea	eax, DWORD PTR $T232271[esp+8]
	push	eax
	lea	ecx, DWORD PTR $T232267[esp+16]
	mov	DWORD PTR $T232271[esp+12], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T232267[esp+16]
	push	ecx
	mov	DWORD PTR $T232267[esp+20], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN9@Allocate@2:
$LN8@Allocate@2:
	int	3
??$_Allocate@PAVCvReligionEntry@@@std@@YAPAPAVCvReligionEntry@@IPAPAV1@@Z ENDP ; std::_Allocate<CvReligionEntry *>
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAPAVCvReligionEntry@@PAPAV1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCvReligionEntry@@0@Z ; std::_Iter_random<CvReligionEntry * *,CvReligionEntry * *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Iter_random@PAPAVCvReligionEntry@@PAPAV1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCvReligionEntry@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAPAVCvReligionEntry@@PAPAV1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCvReligionEntry@@0@Z PROC ; std::_Iter_random<CvReligionEntry * *,CvReligionEntry * *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAPAVCvReligionEntry@@PAPAV1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVCvReligionEntry@@0@Z ENDP ; std::_Iter_random<CvReligionEntry * *,CvReligionEntry * *>
_TEXT	ENDS
PUBLIC	?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ; CvString::formatv
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__imp___vsnprintf:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
;	COMDAT ?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z
_TEXT	SEGMENT
_buf$ = -2048						; size = 2048
_out$ = 8						; size = 4
_fmt$ = 12						; size = 4
_args$ = 16						; size = 4
?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z PROC ; CvString::formatv, COMDAT

; 191  : {

	sub	esp, 2048				; 00000800H
	push	ebx
	push	ebp

; 192  : 	char buf[2048];
; 193  : 	char * pbuf = buf;

	mov	ebp, DWORD PTR _args$[esp+2052]
	push	esi
	push	edi
	lea	edi, DWORD PTR _buf$[esp+2064]
	mov	esi, 2047				; 000007ffH
	npad	6
$LL10@formatv:

; 194  : 	int len = 0;
; 195  : 	int attempts = 0;
; 196  : 	bool success = false;
; 197  : 	const int kMaxAttempts = 40;
; 198  : 
; 199  : 	do
; 200  : 	{
; 201  : 		int maxlen = 2047+2048*attempts;
; 202  : 		len = _vsnprintf(pbuf,maxlen,fmt,args);

	mov	eax, DWORD PTR _fmt$[esp+2060]
	push	ebp
	push	eax
	push	esi
	push	edi
	mov	ebx, esi
	call	DWORD PTR __imp___vsnprintf
	add	esp, 16					; 00000010H

; 203  : 		attempts++;

	add	esi, 2048				; 00000800H

; 204  : 		success = (len>=0 && len<=maxlen);

	test	eax, eax
	jl	SHORT $LN13@formatv
	cmp	eax, ebx
	jle	SHORT $LN18@formatv
$LN13@formatv:

; 205  : 		if (!success)
; 206  : 		{
; 207  : 			if (pbuf!=buf)

	lea	ecx, DWORD PTR _buf$[esp+2064]
	xor	bl, bl
	cmp	edi, ecx
	je	SHORT $LN6@formatv

; 208  : 				delete [] pbuf;

	push	edi
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN6@formatv:

; 209  : 			pbuf = new char[2048+2048*attempts];

	lea	edx, DWORD PTR [esi+1]
	push	edx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4

; 210  : 		}
; 211  : 	}
; 212  : 	while (!success && attempts<kMaxAttempts);

	cmp	esi, 83967				; 000147ffH
	mov	edi, eax
	jl	SHORT $LL10@formatv

; 222  : 		out = "";

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN21@formatv:
	mov	ecx, DWORD PTR _out$[esp+2064]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 223  : 
; 224  : 	if (pbuf!=buf)

	lea	eax, DWORD PTR _buf$[esp+2064]
	cmp	edi, eax
	je	SHORT $LN20@formatv

; 225  : 		delete [] pbuf;

	push	edi
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN20@formatv:
	pop	edi
	pop	esi
	pop	ebp

; 226  : 
; 227  : 	return success;

	mov	al, bl
	pop	ebx

; 228  : }

	add	esp, 2048				; 00000800H
	ret	0
$LN18@formatv:

; 204  : 		success = (len>=0 && len<=maxlen);

	mov	bl, 1

; 213  : 
; 214  : 	if ( attempts==kMaxAttempts )
; 215  : 	{
; 216  : 		// dxPrintNL( "CvString::formatv - Max reallocs occurred while formatting string. Result is likely truncated!", 0 );
; 217  : 	}
; 218  : 
; 219  : 	if (success)
; 220  : 		out = pbuf;

	push	edi

; 221  : 	else

	jmp	SHORT $LN21@formatv
?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ENDP ; CvString::formatv
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAPAVCvReligionEntry@@PAPAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAVCvReligionEntry@@0@Z ; std::_Ptr_cat<CvReligionEntry * *,CvReligionEntry * *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAPAVCvReligionEntry@@PAPAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAVCvReligionEntry@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAPAVCvReligionEntry@@PAPAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAVCvReligionEntry@@0@Z PROC ; std::_Ptr_cat<CvReligionEntry * *,CvReligionEntry * *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAPAVCvReligionEntry@@PAPAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAVCvReligionEntry@@0@Z ENDP ; std::_Ptr_cat<CvReligionEntry * *,CvReligionEntry * *>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAPAVCvReligionEntry@@PAPAV1@Urandom_access_iterator_tag@std@@@std@@YAPAPAVCvReligionEntry@@PAPAV1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<CvReligionEntry * *,CvReligionEntry * *,std::random_access_iterator_tag>
EXTRN	__imp__memmove_s:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_opt@PAPAVCvReligionEntry@@PAPAV1@Urandom_access_iterator_tag@std@@@std@@YAPAPAVCvReligionEntry@@PAPAV1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAPAVCvReligionEntry@@PAPAV1@Urandom_access_iterator_tag@std@@@std@@YAPAPAVCvReligionEntry@@PAPAV1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<CvReligionEntry * *,CvReligionEntry * *,std::random_access_iterator_tag>, COMDAT

; 2495 : 
; 2496 :  #if _HAS_ITERATOR_DEBUGGING
; 2497 : 	_DEBUG_RANGE(_First, _Last);
; 2498 : 	if (_First != _Last)
; 2499 : 		_DEBUG_POINTER(_Dest);
; 2500 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 2501 : 
; 2502 : 	ptrdiff_t _Off = _Last - _First;	// NB: non-overlapping move

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi

; 2503 : 	// if _OutIt is range checked, this will make sure there is enough space for the memmove
; 2504 : 	_OutIt _Result = _Dest + _Off;

	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]

; 2505 : 	if (_Off > 0)

	test	eax, eax
	jle	SHORT $LN4@Copy_opt

; 2506 : 		_CRT_SECURE_MEMMOVE(&*_Dest, _Off * sizeof (*_First), &*_First, _Off * sizeof (*_First));

	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN4@Copy_opt:
	pop	edi

; 2507 : 	return _Result;

	mov	eax, esi
	pop	esi

; 2508 : 	}

	ret	0
??$_Copy_opt@PAPAVCvReligionEntry@@PAPAV1@Urandom_access_iterator_tag@std@@@std@@YAPAPAVCvReligionEntry@@PAPAV1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<CvReligionEntry * *,CvReligionEntry * *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAW4BeliefTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4BeliefTypes@@0@Z ; std::_Ptr_cat<enum BeliefTypes *,enum BeliefTypes *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAW4BeliefTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4BeliefTypes@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAW4BeliefTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4BeliefTypes@@0@Z PROC ; std::_Ptr_cat<enum BeliefTypes *,enum BeliefTypes *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAW4BeliefTypes@@PAW41@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAW4BeliefTypes@@0@Z ENDP ; std::_Ptr_cat<enum BeliefTypes *,enum BeliefTypes *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVCvReligionEntry@@@std@@@std@@YAXPAPAVCvReligionEntry@@0AAV?$allocator@PAVCvReligionEntry@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<CvReligionEntry *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCvReligionEntry@@@std@@@std@@YAXPAPAVCvReligionEntry@@0AAV?$allocator@PAVCvReligionEntry@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAVCvReligionEntry@@@std@@@std@@YAXPAPAVCvReligionEntry@@0AAV?$allocator@PAVCvReligionEntry@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<CvReligionEntry *> >, COMDAT

; 242  : 	}

	ret	0
??$_Destroy_range@V?$allocator@PAVCvReligionEntry@@@std@@@std@@YAXPAPAVCvReligionEntry@@0AAV?$allocator@PAVCvReligionEntry@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<CvReligionEntry *> >
_TEXT	ENDS
PUBLIC	??$_Fill@PAW4BeliefTypes@@W41@@std@@YAXPAW4BeliefTypes@@0ABW41@@Z ; std::_Fill<enum BeliefTypes *,enum BeliefTypes>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Fill@PAW4BeliefTypes@@W41@@std@@YAXPAW4BeliefTypes@@0ABW41@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAW4BeliefTypes@@W41@@std@@YAXPAW4BeliefTypes@@0ABW41@@Z PROC ; std::_Fill<enum BeliefTypes *,enum BeliefTypes>, COMDAT

; 3157 : 	_DEBUG_RANGE(_First, _Last);
; 3158 : 	for (; _First != _Last; ++_First)

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@Fill
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL3@Fill:

; 3159 : 		*_First = _Val;

	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL3@Fill
	pop	esi
$LN1@Fill:

; 3160 : 	}

	ret	0
??$_Fill@PAW4BeliefTypes@@W41@@std@@YAXPAW4BeliefTypes@@0ABW41@@Z ENDP ; std::_Fill<enum BeliefTypes *,enum BeliefTypes>
_TEXT	ENDS
PUBLIC	?Format@CvString@@QAAXPBDZZ			; CvString::Format
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?Format@CvString@@QAAXPBDZZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Format@CvString@@QAAXPBDZZ$0
__ehfuncinfo$?Format@CvString@@QAAXPBDZZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Format@CvString@@QAAXPBDZZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?Format@CvString@@QAAXPBDZZ
_TEXT	SEGMENT
_result$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_lpszFormat$ = 12					; size = 4
?Format@CvString@@QAAXPBDZZ PROC			; CvString::Format, COMDAT

; 269  : {

	push	-1
	push	__ehhandler$?Format@CvString@@QAAXPBDZZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 28					; 0000001cH

; 270  : 	std::string result;

	lea	ecx, DWORD PTR _result$[esp+40]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 271  : 	va_list args;
; 272  : 	va_start(args,lpszFormat);
; 273  : 	formatv(result,lpszFormat,args);

	mov	ecx, DWORD PTR _lpszFormat$[esp+36]
	lea	eax, DWORD PTR _lpszFormat$[esp+40]
	push	eax
	push	ecx
	lea	edx, DWORD PTR _result$[esp+48]
	push	edx
	mov	DWORD PTR __$EHRec$[esp+60], 0
	call	?formatv@CvString@@SA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBDPAD@Z ; CvString::formatv
	add	esp, 12					; 0000000cH

; 274  : 	va_end(args);
; 275  : 	*this = result;

	lea	ecx, DWORD PTR _result$[esp+40]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR _this$[esp+36]
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z

; 276  : }

	lea	ecx, DWORD PTR _result$[esp+40]
	mov	DWORD PTR __$EHRec$[esp+48], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	DWORD PTR fs:0, ecx
	add	esp, 40					; 00000028H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Format@CvString@@QAAXPBDZZ$0:
	lea	ecx, DWORD PTR _result$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?Format@CvString@@QAAXPBDZZ:
	mov	eax, OFFSET __ehfuncinfo$?Format@CvString@@QAAXPBDZZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Format@CvString@@QAAXPBDZZ ENDP			; CvString::Format
PUBLIC	??$_Iter_random@PAW4BeliefTypes@@PAW41@@std@@YA?AUrandom_access_iterator_tag@0@ABQAW4BeliefTypes@@0@Z ; std::_Iter_random<enum BeliefTypes *,enum BeliefTypes *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Iter_random@PAW4BeliefTypes@@PAW41@@std@@YA?AUrandom_access_iterator_tag@0@ABQAW4BeliefTypes@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAW4BeliefTypes@@PAW41@@std@@YA?AUrandom_access_iterator_tag@0@ABQAW4BeliefTypes@@0@Z PROC ; std::_Iter_random<enum BeliefTypes *,enum BeliefTypes *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAW4BeliefTypes@@PAW41@@std@@YA?AUrandom_access_iterator_tag@0@ABQAW4BeliefTypes@@0@Z ENDP ; std::_Iter_random<enum BeliefTypes *,enum BeliefTypes *>
_TEXT	ENDS
PUBLIC	??$_Move_cat@PAW4BeliefTypes@@@std@@YA?AU_Undefined_move_tag@0@ABQAW4BeliefTypes@@@Z ; std::_Move_cat<enum BeliefTypes *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_cat@PAW4BeliefTypes@@@std@@YA?AU_Undefined_move_tag@0@ABQAW4BeliefTypes@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAW4BeliefTypes@@@std@@YA?AU_Undefined_move_tag@0@ABQAW4BeliefTypes@@@Z PROC ; std::_Move_cat<enum BeliefTypes *>, COMDAT

; 1200 : 	{

	push	ecx

; 1201 : 		typename _Move_operation_category<typename iterator_traits<_Iter>::value_type>::_Move_cat _Cat;
; 1202 : 		return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1203 : 	}

	pop	ecx
	ret	0
??$_Move_cat@PAW4BeliefTypes@@@std@@YA?AU_Undefined_move_tag@0@ABQAW4BeliefTypes@@@Z ENDP ; std::_Move_cat<enum BeliefTypes *>
_TEXT	ENDS
PUBLIC	??$implicit_cast@PAVCvGame@@PAV1@@detail@fastdelegate@@YAPAVCvGame@@PAV2@@Z ; fastdelegate::detail::implicit_cast<CvGame *,CvGame *>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\eventsystem\fastdelegate.h
;	COMDAT ??$implicit_cast@PAVCvGame@@PAV1@@detail@fastdelegate@@YAPAVCvGame@@PAV2@@Z
_TEXT	SEGMENT
_input$ = 8						; size = 4
??$implicit_cast@PAVCvGame@@PAV1@@detail@fastdelegate@@YAPAVCvGame@@PAV2@@Z PROC ; fastdelegate::detail::implicit_cast<CvGame *,CvGame *>, COMDAT

; 153  : 	return input;

	mov	eax, DWORD PTR _input$[esp-4]

; 154  : }

	ret	0
??$implicit_cast@PAVCvGame@@PAV1@@detail@fastdelegate@@YAPAVCvGame@@PAV2@@Z ENDP ; fastdelegate::detail::implicit_cast<CvGame *,CvGame *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@AAPAW4BeliefTypes@@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@AAPAW4BeliefTypes@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@AAPAW4BeliefTypes@@@Z PROC ; std::_Ptr_cat<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@AAPAW4BeliefTypes@@@Z ENDP ; std::_Ptr_cat<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAW4BeliefTypes@@PAW41@Urandom_access_iterator_tag@std@@@std@@YAPAW4BeliefTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<enum BeliefTypes *,enum BeliefTypes *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_backward_opt@PAW4BeliefTypes@@PAW41@Urandom_access_iterator_tag@std@@@std@@YAPAW4BeliefTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAW4BeliefTypes@@PAW41@Urandom_access_iterator_tag@std@@@std@@YAPAW4BeliefTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<enum BeliefTypes *,enum BeliefTypes *,std::random_access_iterator_tag>, COMDAT

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	edx, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN1@Copy_backw
	push	esi
$LL2@Copy_backw:

; 2676 : 		*--_Dest = *--_Last;

	mov	esi, DWORD PTR [ecx-4]
	sub	ecx, 4
	sub	eax, 4
	mov	DWORD PTR [eax], esi
	cmp	ecx, edx
	jne	SHORT $LL2@Copy_backw
	pop	esi
$LN1@Copy_backw:

; 2677 : 	return (_Dest);
; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAW4BeliefTypes@@PAW41@Urandom_access_iterator_tag@std@@@std@@YAPAW4BeliefTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<enum BeliefTypes *,enum BeliefTypes *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Construct@W4BeliefTypes@@W41@@std@@YAXPAW4BeliefTypes@@ABW41@@Z ; std::_Construct<enum BeliefTypes,enum BeliefTypes>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Construct@W4BeliefTypes@@W41@@std@@YAXPAW4BeliefTypes@@ABW41@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@W4BeliefTypes@@W41@@std@@YAXPAW4BeliefTypes@@ABW41@@Z PROC ; std::_Construct<enum BeliefTypes,enum BeliefTypes>, COMDAT

; 51   : 	void _FARQ *_Vptr = _Ptr;
; 52   : 	::new (_Vptr) _T1(_Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN3@Construct
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct:

; 53   : 	}

	ret	0
??$_Construct@W4BeliefTypes@@W41@@std@@YAXPAW4BeliefTypes@@ABW41@@Z ENDP ; std::_Construct<enum BeliefTypes,enum BeliefTypes>
_TEXT	ENDS
PUBLIC	??$_Destroy@W4BeliefTypes@@@std@@YAXPAW4BeliefTypes@@@Z ; std::_Destroy<enum BeliefTypes>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Destroy@W4BeliefTypes@@@std@@YAXPAW4BeliefTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@W4BeliefTypes@@@std@@YAXPAW4BeliefTypes@@@Z PROC ; std::_Destroy<enum BeliefTypes>, COMDAT

; 59   : 	_DESTRUCTOR(_Ty, _Ptr);
; 60   : 	}

	ret	0
??$_Destroy@W4BeliefTypes@@@std@@YAXPAW4BeliefTypes@@@Z ENDP ; std::_Destroy<enum BeliefTypes>
_TEXT	ENDS
PUBLIC	??MWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QBE_NABU01@@Z ; CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement::operator<
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
;	COMDAT ??MWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QBE_NABU01@@Z
_TEXT	SEGMENT
_b2$ = 8						; size = 4
??MWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QBE_NABU01@@Z PROC ; CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement::operator<, COMDAT
; _this$ = ecx

; 45   : 			// Reverse of the normal direction because we want highest weight first in our list
; 46   : 			return m_iWeight > b2.m_iWeight;

	mov	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _b2$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+4]
	setg	cl
	mov	al, cl

; 47   : 		};

	ret	4
??MWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QBE_NABU01@@Z ENDP ; CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement::operator<
_TEXT	ENDS
PUBLIC	??0?$pair@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@std@@QAE@ABQAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ; std::pair<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>::pair<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??0?$pair@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@std@@QAE@ABQAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@std@@QAE@ABQAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z PROC ; std::pair<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>::pair<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT
; _this$ = ecx

; 50   : 		{	// construct from specified values

	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[esp-4]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx

; 51   : 		}

	ret	8
??0?$pair@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@std@@QAE@ABQAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ENDP ; std::pair<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>::pair<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$Convert@VCvGame@@P81@AEHHPBD@ZP8GenericClass@detail@fastdelegate@@AEXXZ@?$SimplifyMemFunc@$03@detail@fastdelegate@@SAPAVGenericClass@12@PAVCvGame@@P84@AEHHPBD@ZAAP8312@AEXXZ@Z ; fastdelegate::detail::SimplifyMemFunc<4>::Convert<CvGame,int (__thiscall CvGame::*)(int,char const *),void (__thiscall fastdelegate::detail::GenericClass::*)(void)>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\eventsystem\fastdelegate.h
;	COMDAT ??$Convert@VCvGame@@P81@AEHHPBD@ZP8GenericClass@detail@fastdelegate@@AEXXZ@?$SimplifyMemFunc@$03@detail@fastdelegate@@SAPAVGenericClass@12@PAVCvGame@@P84@AEHHPBD@ZAAP8312@AEXXZ@Z
_TEXT	SEGMENT
_pthis$ = 8						; size = 4
_function_to_bind$ = 12					; size = 4
_bound_func$ = 16					; size = 4
??$Convert@VCvGame@@P81@AEHHPBD@ZP8GenericClass@detail@fastdelegate@@AEXXZ@?$SimplifyMemFunc@$03@detail@fastdelegate@@SAPAVGenericClass@12@PAVCvGame@@P84@AEHHPBD@ZAAP8312@AEXXZ@Z PROC ; fastdelegate::detail::SimplifyMemFunc<4>::Convert<CvGame,int (__thiscall CvGame::*)(int,char const *),void (__thiscall fastdelegate::detail::GenericClass::*)(void)>, COMDAT

; 306  : 			GenericMemFuncType &bound_func) {
; 307  : #if defined __DMC__  
; 308  : 		// Digital Mars doesn't allow you to cast between abitrary PMF's, 
; 309  : 		// even though the standard says you can. The 32-bit compiler lets you
; 310  : 		// static_cast through an int, but the DOS compiler doesn't.
; 311  : 		bound_func = horrible_cast<GenericMemFuncType>(function_to_bind);
; 312  : #else 
; 313  :         bound_func = reinterpret_cast<GenericMemFuncType>(function_to_bind);

	mov	eax, DWORD PTR _bound_func$[esp-4]
	mov	ecx, DWORD PTR _function_to_bind$[esp-4]
	mov	DWORD PTR [eax], ecx

; 314  : #endif
; 315  :         return reinterpret_cast<GenericClass *>(pthis);

	mov	eax, DWORD PTR _pthis$[esp-4]

; 316  : 	}

	ret	0
??$Convert@VCvGame@@P81@AEHHPBD@ZP8GenericClass@detail@fastdelegate@@AEXXZ@?$SimplifyMemFunc@$03@detail@fastdelegate@@SAPAVGenericClass@12@PAVCvGame@@P84@AEHHPBD@ZAAP8312@AEXXZ@Z ENDP ; fastdelegate::detail::SimplifyMemFunc<4>::Convert<CvGame,int (__thiscall CvGame::*)(int,char const *),void (__thiscall fastdelegate::detail::GenericClass::*)(void)>
_TEXT	ENDS
PUBLIC	??$_Dist_type@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAPAHPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z ; std::_Dist_type<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Dist_type@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAPAHPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Dist_type@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAPAHPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z PROC ; std::_Dist_type<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 1831 : 	return (0);

	xor	eax, eax

; 1832 : 	}

	ret	0
??$_Dist_type@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAPAHPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z ENDP ; std::_Dist_type<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@Z ; std::_Val_type<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Val_type@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@Z PROC ; std::_Val_type<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 1766 : 	return (0);

	xor	eax, eax

; 1767 : 	}

	ret	0
??$_Val_type@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@Z ENDP ; std::_Val_type<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@AAPAW4BeliefTypes@@@Z ; std::_Ptr_cat<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@AAPAW4BeliefTypes@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@AAPAW4BeliefTypes@@@Z PROC ; std::_Ptr_cat<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@AAPAW4BeliefTypes@@@Z ENDP ; std::_Ptr_cat<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *>
_TEXT	ENDS
PUBLIC	??$swap@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXAAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ; std::swap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
;	COMDAT ??$swap@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXAAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXAAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z PROC ; std::swap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>, COMDAT

; 18   : 	if (&_Left != &_Right)

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN1@swap

; 19   : 		{	// different, worth swapping
; 20   : 		_Ty _Tmp = _Left;

	mov	edx, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR [eax+4]
	push	edi

; 21   : 
; 22   : 		_Left = _Right;

	mov	edi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edi
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edi
	pop	edi

; 23   : 		_Right = _Tmp;

	mov	DWORD PTR [ecx+4], esi
	mov	DWORD PTR [ecx], edx
	pop	esi
$LN1@swap:

; 24   : 		}
; 25   : 	}

	ret	0
??$swap@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXAAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ENDP ; std::swap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
_TEXT	ENDS
PUBLIC	??$_Push_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z ; std::_Push_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Push_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Hole$ = 12						; size = 4
__Top$ = 16						; size = 4
__Val$ = 20						; size = 8
??$_Push_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z PROC ; std::_Push_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>, COMDAT

; 1973 : 	for (_Diff _Idx = (_Hole - 1) / 2;

	mov	ecx, DWORD PTR __Hole$[esp-4]
	push	ebx

; 1974 : 		_Top < _Hole && _DEBUG_LT(*(_First + _Idx), _Val);
; 1975 : 		_Idx = (_Hole - 1) / 2)

	mov	ebx, DWORD PTR __Val$[esp+4]
	lea	eax, DWORD PTR [ecx-1]
	cdq
	push	esi
	mov	esi, DWORD PTR __First$[esp+4]
	sub	eax, edx
	push	edi
	mov	edi, DWORD PTR __Top$[esp+8]
	sar	eax, 1
	cmp	edi, ecx
	jge	SHORT $LN1@Push_heap
	npad	1
$LL3@Push_heap:
	cmp	DWORD PTR [esi+eax*8+4], ebx
	jle	SHORT $LN1@Push_heap

; 1976 : 		{	// move _Hole up to parent
; 1977 : 		*(_First + _Hole) = *(_First + _Idx);

	mov	edx, DWORD PTR [esi+eax*8]
	mov	DWORD PTR [esi+ecx*8], edx
	mov	edx, DWORD PTR [esi+eax*8+4]
	mov	DWORD PTR [esi+ecx*8+4], edx

; 1978 : 		_Hole = _Idx;

	mov	ecx, eax
	dec	eax
	cdq
	sub	eax, edx
	sar	eax, 1
	cmp	edi, ecx
	jl	SHORT $LL3@Push_heap
$LN1@Push_heap:

; 1979 : 		}
; 1980 : 
; 1981 : 	*(_First + _Hole) = _Val;	// drop _Val into final hole

	mov	eax, DWORD PTR __Val$[esp+8]
	pop	edi
	mov	DWORD PTR [esi+ecx*8+4], ebx
	mov	DWORD PTR [esi+ecx*8], eax
	pop	esi
	pop	ebx

; 1982 : 	}

	ret	0
??$_Push_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z ENDP ; std::_Push_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
_TEXT	ENDS
PUBLIC	??$_Iter_random@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ; std::_Iter_random<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Iter_random@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z PROC ; std::_Iter_random<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 994  : 	typename _Iter_random_helper<
; 995  : 		iterator_traits<_Iter1>::iterator_category, 
; 996  : 		iterator_traits<_Iter2>::iterator_category>::_Iter_random_cat _Cat;
; 997  : 	return (_Cat);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 998  : 	}

	ret	0
??$_Iter_random@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ENDP ; std::_Iter_random<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ; std::_Ptr_cat<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Ptr_cat@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z PROC ; std::_Ptr_cat<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 1509 : 	{

	push	ecx

; 1510 : 	typename _Ptr_cat_helper<_T1, _T2>::_Ptr_cat _Cat;
; 1511 : 	return (_Cat);

	mov	al, BYTE PTR __Cat$[esp+4]

; 1512 : 	}

	pop	ecx
	ret	0
??$_Ptr_cat@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ENDP ; std::_Ptr_cat<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,std::random_access_iterator_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Copy_backward_opt@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,std::random_access_iterator_tag>, COMDAT

; 2674 : 	_DEBUG_RANGE(_First, _Last);
; 2675 : 	while (_First != _Last)

	mov	edx, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN1@Copy_backw@2
	push	esi
$LL2@Copy_backw@2:

; 2676 : 		*--_Dest = *--_Last;

	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL2@Copy_backw@2
	pop	esi
$LN1@Copy_backw@2:

; 2677 : 	return (_Dest);
; 2678 : 	}

	ret	0
??$_Copy_backward_opt@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@Urandom_access_iterator_tag@std@@@std@@YAPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??CCvLuaArgsHandle@@QBEPAVICvEngineScriptSystemArgs1@@XZ ; CvLuaArgsHandle::operator->
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaargshandle.h
;	COMDAT ??CCvLuaArgsHandle@@QBEPAVICvEngineScriptSystemArgs1@@XZ
_TEXT	SEGMENT
??CCvLuaArgsHandle@@QBEPAVICvEngineScriptSystemArgs1@@XZ PROC ; CvLuaArgsHandle::operator->, COMDAT
; _this$ = ecx

; 40   : 	return m_Ptr;

	mov	eax, DWORD PTR [ecx]

; 41   : }

	ret	0
??CCvLuaArgsHandle@@QBEPAVICvEngineScriptSystemArgs1@@XZ ENDP ; CvLuaArgsHandle::operator->
_TEXT	ENDS
PUBLIC	?get@CvLuaArgsHandle@@QBEPAVICvEngineScriptSystemArgs1@@XZ ; CvLuaArgsHandle::get
; Function compile flags: /Ogtpy
;	COMDAT ?get@CvLuaArgsHandle@@QBEPAVICvEngineScriptSystemArgs1@@XZ
_TEXT	SEGMENT
?get@CvLuaArgsHandle@@QBEPAVICvEngineScriptSystemArgs1@@XZ PROC ; CvLuaArgsHandle::get, COMDAT
; _this$ = ecx

; 45   : 	return m_Ptr;

	mov	eax, DWORD PTR [ecx]

; 46   : }

	ret	0
?get@CvLuaArgsHandle@@QBEPAVICvEngineScriptSystemArgs1@@XZ ENDP ; CvLuaArgsHandle::get
_TEXT	ENDS
PUBLIC	?GetID@CvBaseInfo@@QBEHXZ			; CvBaseInfo::GetID
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvinfos.h
;	COMDAT ?GetID@CvBaseInfo@@QBEHXZ
_TEXT	SEGMENT
?GetID@CvBaseInfo@@QBEHXZ PROC				; CvBaseInfo::GetID, COMDAT
; _this$ = ecx

; 54   : 		return m_iID;

	mov	eax, DWORD PTR [ecx+4]

; 55   : 	}

	ret	0
?GetID@CvBaseInfo@@QBEHXZ ENDP				; CvBaseInfo::GetID
_TEXT	ENDS
PUBLIC	?GetDescription@CvBaseInfo@@QBEPBDXZ		; CvBaseInfo::GetDescription
; Function compile flags: /Ogtpy
;	COMDAT ?GetDescription@CvBaseInfo@@QBEPBDXZ
_TEXT	SEGMENT
?GetDescription@CvBaseInfo@@QBEPBDXZ PROC		; CvBaseInfo::GetDescription, COMDAT
; _this$ = ecx

; 64   : 		return m_strDescription.c_str();

	add	ecx, 36					; 00000024H
	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?GetDescription@CvBaseInfo@@QBEPBDXZ ENDP		; CvBaseInfo::GetDescription
_TEXT	ENDS
PUBLIC	?GetDescriptionKey@CvBaseInfo@@QBEPBDXZ		; CvBaseInfo::GetDescriptionKey
; Function compile flags: /Ogtpy
;	COMDAT ?GetDescriptionKey@CvBaseInfo@@QBEPBDXZ
_TEXT	SEGMENT
?GetDescriptionKey@CvBaseInfo@@QBEPBDXZ PROC		; CvBaseInfo::GetDescriptionKey, COMDAT
; _this$ = ecx

; 69   : 		return m_strDescriptionKey.c_str();

	add	ecx, 64					; 00000040H
	jmp	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
?GetDescriptionKey@CvBaseInfo@@QBEPBDXZ ENDP		; CvBaseInfo::GetDescriptionKey
_TEXT	ENDS
PUBLIC	?GetReligionData@CvUnit@@QBEPAVCvUnitReligion@@XZ ; CvUnit::GetReligionData
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvunit.h
;	COMDAT ?GetReligionData@CvUnit@@QBEPAVCvUnitReligion@@XZ
_TEXT	SEGMENT
?GetReligionData@CvUnit@@QBEPAVCvUnitReligion@@XZ PROC	; CvUnit::GetReligionData, COMDAT
; _this$ = ecx

; 1317 : 		return m_pReligion;

	mov	eax, DWORD PTR [ecx+1888]

; 1318 : 	};

	ret	0
?GetReligionData@CvUnit@@QBEPAVCvUnitReligion@@XZ ENDP	; CvUnit::GetReligionData
_TEXT	ENDS
PUBLIC	?getMap@CvGlobals@@QAEAAVCvMap@@XZ		; CvGlobals::getMap
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
;	COMDAT ?getMap@CvGlobals@@QAEAAVCvMap@@XZ
_TEXT	SEGMENT
?getMap@CvGlobals@@QAEAAVCvMap@@XZ PROC			; CvGlobals::getMap, COMDAT
; _this$ = ecx

; 175  : 		return *m_map;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+52]

; 176  : 	}

	ret	0
?getMap@CvGlobals@@QAEAAVCvMap@@XZ ENDP			; CvGlobals::getMap
_TEXT	ENDS
PUBLIC	?getGame@CvGlobals@@QAEAAVCvGame@@XZ		; CvGlobals::getGame
; Function compile flags: /Ogtpy
;	COMDAT ?getGame@CvGlobals@@QAEAAVCvGame@@XZ
_TEXT	SEGMENT
?getGame@CvGlobals@@QAEAAVCvGame@@XZ PROC		; CvGlobals::getGame, COMDAT
; _this$ = ecx

; 183  : 		return *m_game;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+48]

; 184  : 	}

	ret	0
?getGame@CvGlobals@@QAEAAVCvGame@@XZ ENDP		; CvGlobals::getGame
_TEXT	ENDS
PUBLIC	?getPlotDirectionX@CvGlobals@@QAEPAHXZ		; CvGlobals::getPlotDirectionX
; Function compile flags: /Ogtpy
;	COMDAT ?getPlotDirectionX@CvGlobals@@QAEPAHXZ
_TEXT	SEGMENT
?getPlotDirectionX@CvGlobals@@QAEPAHXZ PROC		; CvGlobals::getPlotDirectionX, COMDAT
; _this$ = ecx

; 191  : 		return m_aiPlotDirectionX;

	lea	eax, DWORD PTR [ecx+112]

; 192  : 	}

	ret	0
?getPlotDirectionX@CvGlobals@@QAEPAHXZ ENDP		; CvGlobals::getPlotDirectionX
_TEXT	ENDS
PUBLIC	?getPlotDirectionY@CvGlobals@@QAEPAHXZ		; CvGlobals::getPlotDirectionY
; Function compile flags: /Ogtpy
;	COMDAT ?getPlotDirectionY@CvGlobals@@QAEPAHXZ
_TEXT	SEGMENT
?getPlotDirectionY@CvGlobals@@QAEPAHXZ PROC		; CvGlobals::getPlotDirectionY, COMDAT
; _this$ = ecx

; 195  : 		return m_aiPlotDirectionY;

	lea	eax, DWORD PTR [ecx+136]

; 196  : 	}

	ret	0
?getPlotDirectionY@CvGlobals@@QAEPAHXZ ENDP		; CvGlobals::getPlotDirectionY
_TEXT	ENDS
PUBLIC	?getNumFlavorTypes@CvGlobals@@QAEHXZ		; CvGlobals::getNumFlavorTypes
; Function compile flags: /Ogtpy
;	COMDAT ?getNumFlavorTypes@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getNumFlavorTypes@CvGlobals@@QAEHXZ PROC		; CvGlobals::getNumFlavorTypes, COMDAT
; _this$ = ecx

; 804  : 		return m_iNumFlavorTypes;

	mov	eax, DWORD PTR [ecx+1764]

; 805  : 	}

	ret	0
?getNumFlavorTypes@CvGlobals@@QAEHXZ ENDP		; CvGlobals::getNumFlavorTypes
_TEXT	ENDS
PUBLIC	?getRELIGION_BELIEF_SCORE_CITY_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_BELIEF_SCORE_CITY_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_BELIEF_SCORE_CITY_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_BELIEF_SCORE_CITY_MULTIPLIER@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_BELIEF_SCORE_CITY_MULTIPLIER, COMDAT
; _this$ = ecx

; 2481 : 		return m_iRELIGION_BELIEF_SCORE_CITY_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+3416]

; 2482 : 	}

	ret	0
?getRELIGION_BELIEF_SCORE_CITY_MULTIPLIER@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_BELIEF_SCORE_CITY_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getRELIGION_BELIEF_SCORE_WORKED_PLOT_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_BELIEF_SCORE_WORKED_PLOT_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_BELIEF_SCORE_WORKED_PLOT_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_BELIEF_SCORE_WORKED_PLOT_MULTIPLIER@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_BELIEF_SCORE_WORKED_PLOT_MULTIPLIER, COMDAT
; _this$ = ecx

; 2485 : 		return m_iRELIGION_BELIEF_SCORE_WORKED_PLOT_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+3420]

; 2486 : 	}

	ret	0
?getRELIGION_BELIEF_SCORE_WORKED_PLOT_MULTIPLIER@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_BELIEF_SCORE_WORKED_PLOT_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getRELIGION_BELIEF_SCORE_OWNED_PLOT_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_BELIEF_SCORE_OWNED_PLOT_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_BELIEF_SCORE_OWNED_PLOT_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_BELIEF_SCORE_OWNED_PLOT_MULTIPLIER@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_BELIEF_SCORE_OWNED_PLOT_MULTIPLIER, COMDAT
; _this$ = ecx

; 2489 : 		return m_iRELIGION_BELIEF_SCORE_OWNED_PLOT_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+3424]

; 2490 : 	}

	ret	0
?getRELIGION_BELIEF_SCORE_OWNED_PLOT_MULTIPLIER@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_BELIEF_SCORE_OWNED_PLOT_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getRELIGION_BELIEF_SCORE_UNOWNED_PLOT_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_BELIEF_SCORE_UNOWNED_PLOT_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_BELIEF_SCORE_UNOWNED_PLOT_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_BELIEF_SCORE_UNOWNED_PLOT_MULTIPLIER@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_BELIEF_SCORE_UNOWNED_PLOT_MULTIPLIER, COMDAT
; _this$ = ecx

; 2493 : 		return m_iRELIGION_BELIEF_SCORE_UNOWNED_PLOT_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+3428]

; 2494 : 	}

	ret	0
?getRELIGION_BELIEF_SCORE_UNOWNED_PLOT_MULTIPLIER@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_BELIEF_SCORE_UNOWNED_PLOT_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getRELIGION_MISSIONARY_RANGE_IN_TURNS@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_MISSIONARY_RANGE_IN_TURNS
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_MISSIONARY_RANGE_IN_TURNS@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_MISSIONARY_RANGE_IN_TURNS@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_MISSIONARY_RANGE_IN_TURNS, COMDAT
; _this$ = ecx

; 2497 : 		return m_iRELIGION_MISSIONARY_RANGE_IN_TURNS;

	mov	eax, DWORD PTR [ecx+3432]

; 2498 : 	}

	ret	0
?getRELIGION_MISSIONARY_RANGE_IN_TURNS@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_MISSIONARY_RANGE_IN_TURNS
_TEXT	ENDS
PUBLIC	?getRELIGION_MAX_MISSIONARIES@CvGlobals@@QAEHXZ	; CvGlobals::getRELIGION_MAX_MISSIONARIES
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_MAX_MISSIONARIES@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_MAX_MISSIONARIES@CvGlobals@@QAEHXZ PROC	; CvGlobals::getRELIGION_MAX_MISSIONARIES, COMDAT
; _this$ = ecx

; 2501 : 		return m_iRELIGION_MAX_MISSIONARIES;

	mov	eax, DWORD PTR [ecx+3436]

; 2502 : 	}

	ret	0
?getRELIGION_MAX_MISSIONARIES@CvGlobals@@QAEHXZ ENDP	; CvGlobals::getRELIGION_MAX_MISSIONARIES
_TEXT	ENDS
PUBLIC	?getGOLD_PURCHASE_VISIBLE_DIVISOR@CvGlobals@@QAEHXZ ; CvGlobals::getGOLD_PURCHASE_VISIBLE_DIVISOR
; Function compile flags: /Ogtpy
;	COMDAT ?getGOLD_PURCHASE_VISIBLE_DIVISOR@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getGOLD_PURCHASE_VISIBLE_DIVISOR@CvGlobals@@QAEHXZ PROC ; CvGlobals::getGOLD_PURCHASE_VISIBLE_DIVISOR, COMDAT
; _this$ = ecx

; 6068 : 		return m_iGOLD_PURCHASE_VISIBLE_DIVISOR;

	mov	eax, DWORD PTR [ecx+6992]

; 6069 : 	}

	ret	0
?getGOLD_PURCHASE_VISIBLE_DIVISOR@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getGOLD_PURCHASE_VISIBLE_DIVISOR
_TEXT	ENDS
PUBLIC	?getRELIGION_MIN_FAITH_FIRST_PANTHEON@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_MIN_FAITH_FIRST_PANTHEON
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_MIN_FAITH_FIRST_PANTHEON@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_MIN_FAITH_FIRST_PANTHEON@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_MIN_FAITH_FIRST_PANTHEON, COMDAT
; _this$ = ecx

; 7359 : 		return m_iRELIGION_MIN_FAITH_FIRST_PANTHEON;

	mov	eax, DWORD PTR [ecx+7860]

; 7360 : 	}

	ret	0
?getRELIGION_MIN_FAITH_FIRST_PANTHEON@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_MIN_FAITH_FIRST_PANTHEON
_TEXT	ENDS
PUBLIC	?getRELIGION_MIN_FAITH_FIRST_PROPHET@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_MIN_FAITH_FIRST_PROPHET
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_MIN_FAITH_FIRST_PROPHET@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_MIN_FAITH_FIRST_PROPHET@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_MIN_FAITH_FIRST_PROPHET, COMDAT
; _this$ = ecx

; 7363 : 		return m_iRELIGION_MIN_FAITH_FIRST_PROPHET;

	mov	eax, DWORD PTR [ecx+7864]

; 7364 : 	}

	ret	0
?getRELIGION_MIN_FAITH_FIRST_PROPHET@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_MIN_FAITH_FIRST_PROPHET
_TEXT	ENDS
PUBLIC	?getRELIGION_MIN_FAITH_FIRST_GREAT_PERSON@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_MIN_FAITH_FIRST_GREAT_PERSON
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_MIN_FAITH_FIRST_GREAT_PERSON@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_MIN_FAITH_FIRST_GREAT_PERSON@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_MIN_FAITH_FIRST_GREAT_PERSON, COMDAT
; _this$ = ecx

; 7367 : 		return m_iRELIGION_MIN_FAITH_FIRST_GREAT_PERSON;

	mov	eax, DWORD PTR [ecx+7868]

; 7368 : 	}

	ret	0
?getRELIGION_MIN_FAITH_FIRST_GREAT_PERSON@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_MIN_FAITH_FIRST_GREAT_PERSON
_TEXT	ENDS
PUBLIC	?getRELIGION_GAME_FAITH_DELTA_NEXT_PANTHEON@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_GAME_FAITH_DELTA_NEXT_PANTHEON
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_GAME_FAITH_DELTA_NEXT_PANTHEON@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_GAME_FAITH_DELTA_NEXT_PANTHEON@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_GAME_FAITH_DELTA_NEXT_PANTHEON, COMDAT
; _this$ = ecx

; 7371 : 		return m_iRELIGION_GAME_FAITH_DELTA_NEXT_PANTHEON;

	mov	eax, DWORD PTR [ecx+7872]

; 7372 : 	}

	ret	0
?getRELIGION_GAME_FAITH_DELTA_NEXT_PANTHEON@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_GAME_FAITH_DELTA_NEXT_PANTHEON
_TEXT	ENDS
PUBLIC	?getRELIGION_FAITH_DELTA_NEXT_PROPHET@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_FAITH_DELTA_NEXT_PROPHET
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_FAITH_DELTA_NEXT_PROPHET@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_FAITH_DELTA_NEXT_PROPHET@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_FAITH_DELTA_NEXT_PROPHET, COMDAT
; _this$ = ecx

; 7375 : 		return m_iRELIGION_FAITH_DELTA_NEXT_PROPHET;

	mov	eax, DWORD PTR [ecx+7876]

; 7376 : 	}

	ret	0
?getRELIGION_FAITH_DELTA_NEXT_PROPHET@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_FAITH_DELTA_NEXT_PROPHET
_TEXT	ENDS
PUBLIC	?getRELIGION_FAITH_DELTA_NEXT_GREAT_PERSON@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_FAITH_DELTA_NEXT_GREAT_PERSON
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_FAITH_DELTA_NEXT_GREAT_PERSON@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_FAITH_DELTA_NEXT_GREAT_PERSON@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_FAITH_DELTA_NEXT_GREAT_PERSON, COMDAT
; _this$ = ecx

; 7379 : 		return m_iRELIGION_FAITH_DELTA_NEXT_GREAT_PERSON;

	mov	eax, DWORD PTR [ecx+7880]

; 7380 : 	}

	ret	0
?getRELIGION_FAITH_DELTA_NEXT_GREAT_PERSON@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_FAITH_DELTA_NEXT_GREAT_PERSON
_TEXT	ENDS
PUBLIC	?getRELIGION_BASE_CHANCE_PROPHET_SPAWN@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_BASE_CHANCE_PROPHET_SPAWN
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_BASE_CHANCE_PROPHET_SPAWN@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_BASE_CHANCE_PROPHET_SPAWN@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_BASE_CHANCE_PROPHET_SPAWN, COMDAT
; _this$ = ecx

; 7383 : 		return m_iRELIGION_BASE_CHANCE_PROPHET_SPAWN;

	mov	eax, DWORD PTR [ecx+7884]

; 7384 : 	}

	ret	0
?getRELIGION_BASE_CHANCE_PROPHET_SPAWN@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_BASE_CHANCE_PROPHET_SPAWN
_TEXT	ENDS
PUBLIC	?getRELIGION_ATHEISM_PRESSURE_PER_POP@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_ATHEISM_PRESSURE_PER_POP
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_ATHEISM_PRESSURE_PER_POP@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_ATHEISM_PRESSURE_PER_POP@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_ATHEISM_PRESSURE_PER_POP, COMDAT
; _this$ = ecx

; 7387 : 		return m_iRELIGION_ATHEISM_PRESSURE_PER_POP;

	mov	eax, DWORD PTR [ecx+7888]

; 7388 : 	}

	ret	0
?getRELIGION_ATHEISM_PRESSURE_PER_POP@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_ATHEISM_PRESSURE_PER_POP
_TEXT	ENDS
PUBLIC	?getRELIGION_INITIAL_FOUNDING_CITY_PRESSURE@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_INITIAL_FOUNDING_CITY_PRESSURE
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_INITIAL_FOUNDING_CITY_PRESSURE@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_INITIAL_FOUNDING_CITY_PRESSURE@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_INITIAL_FOUNDING_CITY_PRESSURE, COMDAT
; _this$ = ecx

; 7391 : 		return m_iRELIGION_INITIAL_FOUNDING_CITY_PRESSURE;

	mov	eax, DWORD PTR [ecx+7892]

; 7392 : 	}

	ret	0
?getRELIGION_INITIAL_FOUNDING_CITY_PRESSURE@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_INITIAL_FOUNDING_CITY_PRESSURE
_TEXT	ENDS
PUBLIC	?getRELIGION_PER_TURN_FOUNDING_CITY_PRESSURE@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_PER_TURN_FOUNDING_CITY_PRESSURE
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_PER_TURN_FOUNDING_CITY_PRESSURE@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_PER_TURN_FOUNDING_CITY_PRESSURE@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_PER_TURN_FOUNDING_CITY_PRESSURE, COMDAT
; _this$ = ecx

; 7395 : 		return m_iRELIGION_PER_TURN_FOUNDING_CITY_PRESSURE;

	mov	eax, DWORD PTR [ecx+7896]

; 7396 : 	}

	ret	0
?getRELIGION_PER_TURN_FOUNDING_CITY_PRESSURE@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_PER_TURN_FOUNDING_CITY_PRESSURE
_TEXT	ENDS
PUBLIC	?getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER, COMDAT
; _this$ = ecx

; 7399 : 		return m_iRELIGION_MISSIONARY_PRESSURE_MULTIPLIER;

	mov	eax, DWORD PTR [ecx+7900]

; 7400 : 	}

	ret	0
?getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER
_TEXT	ENDS
PUBLIC	?getRELIGION_ADJACENT_CITY_DISTANCE@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_ADJACENT_CITY_DISTANCE
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_ADJACENT_CITY_DISTANCE@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_ADJACENT_CITY_DISTANCE@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_ADJACENT_CITY_DISTANCE, COMDAT
; _this$ = ecx

; 7403 : 		return m_iRELIGION_ADJACENT_CITY_DISTANCE;

	mov	eax, DWORD PTR [ecx+7904]

; 7404 : 	}

	ret	0
?getRELIGION_ADJACENT_CITY_DISTANCE@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_ADJACENT_CITY_DISTANCE
_TEXT	ENDS
PUBLIC	?getRELIGION_DIPLO_HIT_INITIAL_CONVERT_FRIENDLY_CITY@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_DIPLO_HIT_INITIAL_CONVERT_FRIENDLY_CITY
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_DIPLO_HIT_INITIAL_CONVERT_FRIENDLY_CITY@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_DIPLO_HIT_INITIAL_CONVERT_FRIENDLY_CITY@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_DIPLO_HIT_INITIAL_CONVERT_FRIENDLY_CITY, COMDAT
; _this$ = ecx

; 7407 : 		return m_iRELIGION_DIPLO_HIT_INITIAL_CONVERT_FRIENDLY_CITY;

	mov	eax, DWORD PTR [ecx+7908]

; 7408 : 	}

	ret	0
?getRELIGION_DIPLO_HIT_INITIAL_CONVERT_FRIENDLY_CITY@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_DIPLO_HIT_INITIAL_CONVERT_FRIENDLY_CITY
_TEXT	ENDS
PUBLIC	?getRELIGION_DIPLO_HIT_RELIGIOUS_FLIP_FRIENDLY_CITY@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_DIPLO_HIT_RELIGIOUS_FLIP_FRIENDLY_CITY
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_DIPLO_HIT_RELIGIOUS_FLIP_FRIENDLY_CITY@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_DIPLO_HIT_RELIGIOUS_FLIP_FRIENDLY_CITY@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_DIPLO_HIT_RELIGIOUS_FLIP_FRIENDLY_CITY, COMDAT
; _this$ = ecx

; 7411 : 		return m_iRELIGION_DIPLO_HIT_RELIGIOUS_FLIP_FRIENDLY_CITY;

	mov	eax, DWORD PTR [ecx+7912]

; 7412 : 	}

	ret	0
?getRELIGION_DIPLO_HIT_RELIGIOUS_FLIP_FRIENDLY_CITY@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_DIPLO_HIT_RELIGIOUS_FLIP_FRIENDLY_CITY
_TEXT	ENDS
PUBLIC	?getRELIGION_DIPLO_HIT_CONVERT_HOLY_CITY@CvGlobals@@QAEHXZ ; CvGlobals::getRELIGION_DIPLO_HIT_CONVERT_HOLY_CITY
; Function compile flags: /Ogtpy
;	COMDAT ?getRELIGION_DIPLO_HIT_CONVERT_HOLY_CITY@CvGlobals@@QAEHXZ
_TEXT	SEGMENT
?getRELIGION_DIPLO_HIT_CONVERT_HOLY_CITY@CvGlobals@@QAEHXZ PROC ; CvGlobals::getRELIGION_DIPLO_HIT_CONVERT_HOLY_CITY, COMDAT
; _this$ = ecx

; 7415 : 		return m_iRELIGION_DIPLO_HIT_CONVERT_HOLY_CITY;

	mov	eax, DWORD PTR [ecx+7916]

; 7416 : 	}

	ret	0
?getRELIGION_DIPLO_HIT_CONVERT_HOLY_CITY@CvGlobals@@QAEHXZ ENDP ; CvGlobals::getRELIGION_DIPLO_HIT_CONVERT_HOLY_CITY
_TEXT	ENDS
PUBLIC	?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ ; CvGlobals::getDLLIFace
; Function compile flags: /Ogtpy
;	COMDAT ?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ
_TEXT	SEGMENT
?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ PROC ; CvGlobals::getDLLIFace, COMDAT
; _this$ = ecx

; 7738 : 		return m_pDLL;

	mov	eax, DWORD PTR [ecx+8596]

; 7739 : 	}

	ret	0
?getDLLIFace@CvGlobals@@QAEPAVICvEngineUtility4@@XZ ENDP ; CvGlobals::getDLLIFace
_TEXT	ENDS
PUBLIC	?GetEngineUserInterface@CvGlobals@@QAEPAVICvUserInterface2@@XZ ; CvGlobals::GetEngineUserInterface
; Function compile flags: /Ogtpy
;	COMDAT ?GetEngineUserInterface@CvGlobals@@QAEPAVICvUserInterface2@@XZ
_TEXT	SEGMENT
?GetEngineUserInterface@CvGlobals@@QAEPAVICvUserInterface2@@XZ PROC ; CvGlobals::GetEngineUserInterface, COMDAT
; _this$ = ecx

; 7748 : 		return m_pEngineUI;

	mov	eax, DWORD PTR [ecx+8600]

; 7749 : 	}

	ret	0
?GetEngineUserInterface@CvGlobals@@QAEPAVICvUserInterface2@@XZ ENDP ; CvGlobals::GetEngineUserInterface
_TEXT	ENDS
PUBLIC	?GetGameDatabase@CvGlobals@@QAEPAVConnection@Database@@XZ ; CvGlobals::GetGameDatabase
; Function compile flags: /Ogtpy
;	COMDAT ?GetGameDatabase@CvGlobals@@QAEPAVConnection@Database@@XZ
_TEXT	SEGMENT
?GetGameDatabase@CvGlobals@@QAEPAVConnection@Database@@XZ PROC ; CvGlobals::GetGameDatabase, COMDAT
; _this$ = ecx

; 9792 : 	return m_pGameDatabase;

	mov	eax, DWORD PTR [ecx+912]

; 9793 : }

	ret	0
?GetGameDatabase@CvGlobals@@QAEPAVConnection@Database@@XZ ENDP ; CvGlobals::GetGameDatabase
_TEXT	ENDS
PUBLIC	??4CvString@@QAEAAV0@ABV0@@Z			; CvString::operator=
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??4CvString@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4CvString@@QAEAAV0@ABV0@@Z PROC			; CvString::operator=, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	eax, esi
	pop	esi
	ret	4
??4CvString@@QAEAAV0@ABV0@@Z ENDP			; CvString::operator=
_TEXT	ENDS
PUBLIC	?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z	; CvPlayerAI::getPlayer
EXTRN	?m_aPlayers@CvPlayerAI@@1PAV1@A:DWORD		; CvPlayerAI::m_aPlayers
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplayerai.h
;	COMDAT ?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z PROC	; CvPlayerAI::getPlayer, COMDAT

; 28   : 		CvAssertMsg(ePlayer != NO_PLAYER, "Player is not assigned a valid value");
; 29   : 		CvAssertMsg(ePlayer < MAX_PLAYERS, "Player is not assigned a valid value");
; 30   : 		return m_aPlayers[ePlayer];

	mov	eax, DWORD PTR _ePlayer$[esp-4]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 31   : 	}

	ret	0
?getPlayer@CvPlayerAI@@SAAAV1@W4PlayerTypes@@@Z ENDP	; CvPlayerAI::getPlayer
_TEXT	ENDS
PUBLIC	?getX@CvPlot@@QBEHXZ				; CvPlot::getX
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?getX@CvPlot@@QBEHXZ
_TEXT	SEGMENT
?getX@CvPlot@@QBEHXZ PROC				; CvPlot::getX, COMDAT
; _this$ = ecx

; 307  : 		return m_iX;

	movsx	eax, WORD PTR [ecx]

; 308  : 	}

	ret	0
?getX@CvPlot@@QBEHXZ ENDP				; CvPlot::getX
_TEXT	ENDS
PUBLIC	?getY@CvPlot@@QBEHXZ				; CvPlot::getY
; Function compile flags: /Ogtpy
;	COMDAT ?getY@CvPlot@@QBEHXZ
_TEXT	SEGMENT
?getY@CvPlot@@QBEHXZ PROC				; CvPlot::getY, COMDAT
; _this$ = ecx

; 312  : 		return m_iY;

	movsx	eax, WORD PTR [ecx+2]

; 313  : 	}

	ret	0
?getY@CvPlot@@QBEHXZ ENDP				; CvPlot::getY
_TEXT	ENDS
PUBLIC	?getOwner@CvPlot@@QBE?AW4PlayerTypes@@XZ	; CvPlot::getOwner
; Function compile flags: /Ogtpy
;	COMDAT ?getOwner@CvPlot@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
?getOwner@CvPlot@@QBE?AW4PlayerTypes@@XZ PROC		; CvPlot::getOwner, COMDAT
; _this$ = ecx

; 387  : 		return (PlayerTypes)m_eOwner;

	movsx	eax, BYTE PTR [ecx+4]

; 388  : 	}

	ret	0
?getOwner@CvPlot@@QBE?AW4PlayerTypes@@XZ ENDP		; CvPlot::getOwner
_TEXT	ENDS
PUBLIC	?isWater@CvPlot@@QBE_NXZ			; CvPlot::isWater
; Function compile flags: /Ogtpy
;	COMDAT ?isWater@CvPlot@@QBE_NXZ
_TEXT	SEGMENT
?isWater@CvPlot@@QBE_NXZ PROC				; CvPlot::isWater, COMDAT
; _this$ = ecx

; 409  : 		return (PlotTypes)m_ePlotType == PLOT_OCEAN;

	xor	eax, eax
	cmp	BYTE PTR [ecx+5], 3
	sete	al

; 410  : 	};

	ret	0
?isWater@CvPlot@@QBE_NXZ ENDP				; CvPlot::isWater
_TEXT	ENDS
PUBLIC	?getTerrainType@CvPlot@@QBE?AW4TerrainTypes@@XZ	; CvPlot::getTerrainType
; Function compile flags: /Ogtpy
;	COMDAT ?getTerrainType@CvPlot@@QBE?AW4TerrainTypes@@XZ
_TEXT	SEGMENT
?getTerrainType@CvPlot@@QBE?AW4TerrainTypes@@XZ PROC	; CvPlot::getTerrainType, COMDAT
; _this$ = ecx

; 431  : 		return (TerrainTypes)m_eTerrainType;

	movsx	eax, BYTE PTR [ecx+6]

; 432  : 	}

	ret	0
?getTerrainType@CvPlot@@QBE?AW4TerrainTypes@@XZ ENDP	; CvPlot::getTerrainType
_TEXT	ENDS
PUBLIC	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ		; CvPlot::getPlotCity
EXTRN	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z:PROC	; CvPlayer::getCity
; Function compile flags: /Ogtpy
;	COMDAT ?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ
_TEXT	SEGMENT
?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ PROC		; CvPlot::getPlotCity, COMDAT
; _this$ = ecx

; 533  : 		if((m_plotCity.eOwner >= 0) && m_plotCity.eOwner < MAX_PLAYERS)

	mov	eax, DWORD PTR [ecx+104]
	test	eax, eax
	jl	SHORT $LN1@getPlotCit
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN1@getPlotCit

; 534  : 			return (GET_PLAYER((PlayerTypes)m_plotCity.eOwner).getCity(m_plotCity.iID));

	mov	ecx, DWORD PTR [ecx+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity

; 537  : 	}

	ret	0
$LN1@getPlotCit:

; 535  : 
; 536  : 		return NULL;

	xor	eax, eax

; 537  : 	}

	ret	0
?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ ENDP		; CvPlot::getPlotCity
_TEXT	ENDS
PUBLIC	?GetBit@PlotBoolField@CvPlot@@QBE_NI@Z		; CvPlot::PlotBoolField::GetBit
; Function compile flags: /Ogtpy
;	COMDAT ?GetBit@PlotBoolField@CvPlot@@QBE_NI@Z
_TEXT	SEGMENT
_uiEntry$ = 8						; size = 4
?GetBit@PlotBoolField@CvPlot@@QBE_NI@Z PROC		; CvPlot::PlotBoolField::GetBit, COMDAT
; _this$ = ecx

; 767  : 		{

	mov	edx, ecx

; 768  : 			const uint uiOffset = uiEntry/eSize;

	mov	ecx, DWORD PTR _uiEntry$[esp-4]
	push	esi
	mov	eax, ecx
	shr	eax, 5

; 769  : 			return m_dwBits[uiOffset] & 1<<(uiEntry-(eSize*uiOffset));

	mov	esi, eax
	shl	esi, 5
	sub	ecx, esi
	mov	esi, 1
	shl	esi, cl
	test	esi, DWORD PTR [edx+eax*4]
	pop	esi
	setne	al

; 770  : 		}

	ret	4
?GetBit@PlotBoolField@CvPlot@@QBE_NI@Z ENDP		; CvPlot::PlotBoolField::GetBit
_TEXT	ENDS
PUBLIC	?coordRange@@YAHHH_N@Z				; coordRange
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?coordRange@@YAHHH_N@Z
_TEXT	SEGMENT
_iCoord$ = 8						; size = 4
_iRange$ = 12						; size = 4
_bWrap$ = 16						; size = 1
?coordRange@@YAHHH_N@Z PROC				; coordRange, COMDAT

; 88   : 	if(bWrap)

	cmp	BYTE PTR _bWrap$[esp-4], 0
	mov	eax, DWORD PTR _iCoord$[esp-4]
	je	SHORT $LN5@coordRange

; 89   : 	{
; 90   : 		if(iCoord < 0)
; 91   : 		{
; 92   : 			return (iRange + (iCoord % iRange));

	mov	ecx, DWORD PTR _iRange$[esp-4]
	test	eax, eax
	jge	SHORT $LN3@coordRange
	cdq
	idiv	ecx
	mov	eax, edx
	add	eax, ecx

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;
; 101  : }

	ret	0
$LN3@coordRange:

; 93   : 		}
; 94   : 		else if(iCoord >= iRange)

	cmp	eax, ecx
	jl	SHORT $LN5@coordRange

; 95   : 		{
; 96   : 			return (iCoord % iRange);

	cdq
	idiv	ecx
	mov	eax, edx
$LN5@coordRange:

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	return iCoord;
; 101  : }

	ret	0
?coordRange@@YAHHH_N@Z ENDP				; coordRange
_TEXT	ENDS
PUBLIC	?numPlots@CvMap@@QBEHXZ				; CvMap::numPlots
; Function compile flags: /Ogtpy
;	COMDAT ?numPlots@CvMap@@QBEHXZ
_TEXT	SEGMENT
?numPlots@CvMap@@QBEHXZ PROC				; CvMap::numPlots, COMDAT
; _this$ = ecx

; 170  : 		return m_iGridSize;

	mov	eax, DWORD PTR [ecx+4028]

; 171  : 	}

	ret	0
?numPlots@CvMap@@QBEHXZ ENDP				; CvMap::numPlots
_TEXT	ENDS
PUBLIC	?getGridWidth@CvMap@@QBEHXZ			; CvMap::getGridWidth
; Function compile flags: /Ogtpy
;	COMDAT ?getGridWidth@CvMap@@QBEHXZ
_TEXT	SEGMENT
?getGridWidth@CvMap@@QBEHXZ PROC			; CvMap::getGridWidth, COMDAT
; _this$ = ecx

; 198  : 		return m_iGridWidth;

	mov	eax, DWORD PTR [ecx+4020]

; 199  : 	}

	ret	0
?getGridWidth@CvMap@@QBEHXZ ENDP			; CvMap::getGridWidth
_TEXT	ENDS
PUBLIC	?getGridHeight@CvMap@@QBEHXZ			; CvMap::getGridHeight
; Function compile flags: /Ogtpy
;	COMDAT ?getGridHeight@CvMap@@QBEHXZ
_TEXT	SEGMENT
?getGridHeight@CvMap@@QBEHXZ PROC			; CvMap::getGridHeight, COMDAT
; _this$ = ecx

; 206  : 		return m_iGridHeight;

	mov	eax, DWORD PTR [ecx+4024]

; 207  : 	}

	ret	0
?getGridHeight@CvMap@@QBEHXZ ENDP			; CvMap::getGridHeight
_TEXT	ENDS
PUBLIC	?isWrapX@CvMap@@QBE_NXZ				; CvMap::isWrapX
; Function compile flags: /Ogtpy
;	COMDAT ?isWrapX@CvMap@@QBE_NXZ
_TEXT	SEGMENT
?isWrapX@CvMap@@QBE_NXZ PROC				; CvMap::isWrapX, COMDAT
; _this$ = ecx

; 228  : 		return m_bWrapX;

	mov	al, BYTE PTR [ecx+4056]

; 229  : 	}

	ret	0
?isWrapX@CvMap@@QBE_NXZ ENDP				; CvMap::isWrapX
_TEXT	ENDS
PUBLIC	?isWrapY@CvMap@@QBE_NXZ				; CvMap::isWrapY
; Function compile flags: /Ogtpy
;	COMDAT ?isWrapY@CvMap@@QBE_NXZ
_TEXT	SEGMENT
?isWrapY@CvMap@@QBE_NXZ PROC				; CvMap::isWrapY, COMDAT
; _this$ = ecx

; 233  : 		return m_bWrapY;

	mov	al, BYTE PTR [ecx+4057]

; 234  : 	}

	ret	0
?isWrapY@CvMap@@QBE_NXZ ENDP				; CvMap::isWrapY
_TEXT	ENDS
PUBLIC	?plotByIndexUnchecked@CvMap@@QBEPAVCvPlot@@H@Z	; CvMap::plotByIndexUnchecked
; Function compile flags: /Ogtpy
;	COMDAT ?plotByIndexUnchecked@CvMap@@QBEPAVCvPlot@@H@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?plotByIndexUnchecked@CvMap@@QBEPAVCvPlot@@H@Z PROC	; CvMap::plotByIndexUnchecked, COMDAT
; _this$ = ecx

; 268  : 		return &m_pMapPlots[iIndex];

	mov	eax, DWORD PTR _iIndex$[esp-4]
	imul	eax, 484				; 000001e4H
	add	eax, DWORD PTR [ecx+4068]

; 269  : 	}

	ret	4
?plotByIndexUnchecked@CvMap@@QBEPAVCvPlot@@H@Z ENDP	; CvMap::plotByIndexUnchecked
_TEXT	ENDS
PUBLIC	?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z		; CvTeam::getTeam
EXTRN	?m_aTeams@CvTeam@@1PAV1@A:DWORD			; CvTeam::m_aTeams
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvteam.h
;	COMDAT ?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z
_TEXT	SEGMENT
_eTeam$ = 8						; size = 4
?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z PROC		; CvTeam::getTeam, COMDAT

; 29   : 		CvAssertMsg(eTeam != NO_TEAM, "eTeam is not assigned a valid value");
; 30   : 		CvAssertMsg(eTeam < MAX_TEAMS, "eTeam is not assigned a valid value");
; 31   : 		return m_aTeams[eTeam];

	mov	eax, DWORD PTR _eTeam$[esp-4]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams

; 32   : 	}

	ret	0
?getTeam@CvTeam@@SAAAV1@W4TeamTypes@@@Z ENDP		; CvTeam::getTeam
_TEXT	ENDS
PUBLIC	??0CvString@@QAE@ABV0@@Z			; CvString::CvString
; Function compile flags: /Ogtpy
;	COMDAT ??0CvString@@QAE@ABV0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0CvString@@QAE@ABV0@@Z PROC				; CvString::CvString, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, esi
	pop	esi
	ret	4
??0CvString@@QAE@ABV0@@Z ENDP				; CvString::CvString
_TEXT	ENDS
PUBLIC	?GetTradeReligionModifier@CvPlayerTraits@@QBEHXZ ; CvPlayerTraits::GetTradeReligionModifier
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvtraitclasses.h
;	COMDAT ?GetTradeReligionModifier@CvPlayerTraits@@QBEHXZ
_TEXT	SEGMENT
?GetTradeReligionModifier@CvPlayerTraits@@QBEHXZ PROC	; CvPlayerTraits::GetTradeReligionModifier, COMDAT
; _this$ = ecx

; 740  : 		return m_iTradeReligionModifier;

	mov	eax, DWORD PTR [ecx+324]

; 741  : 	}

	ret	0
?GetTradeReligionModifier@CvPlayerTraits@@QBEHXZ ENDP	; CvPlayerTraits::GetTradeReligionModifier
_TEXT	ENDS
PUBLIC	?GetSpreadDistanceModifier@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetSpreadDistanceModifier
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvbeliefclasses.h
;	COMDAT ?GetSpreadDistanceModifier@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
?GetSpreadDistanceModifier@CvReligionBeliefs@@QBEHXZ PROC ; CvReligionBeliefs::GetSpreadDistanceModifier, COMDAT
; _this$ = ecx

; 369  : 		return m_iSpreadDistanceModifier;

	mov	eax, DWORD PTR [ecx+36]

; 370  : 	};

	ret	0
?GetSpreadDistanceModifier@CvReligionBeliefs@@QBEHXZ ENDP ; CvReligionBeliefs::GetSpreadDistanceModifier
_TEXT	ENDS
PUBLIC	?GetSpreadStrengthModifier@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetSpreadStrengthModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetSpreadStrengthModifier@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
?GetSpreadStrengthModifier@CvReligionBeliefs@@QBEHXZ PROC ; CvReligionBeliefs::GetSpreadStrengthModifier, COMDAT
; _this$ = ecx

; 373  : 		return m_iSpreadStrengthModifier;

	mov	eax, DWORD PTR [ecx+40]

; 374  : 	};

	ret	0
?GetSpreadStrengthModifier@CvReligionBeliefs@@QBEHXZ ENDP ; CvReligionBeliefs::GetSpreadStrengthModifier
_TEXT	ENDS
PUBLIC	?GetProphetCostModifier@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetProphetCostModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetProphetCostModifier@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
?GetProphetCostModifier@CvReligionBeliefs@@QBEHXZ PROC	; CvReligionBeliefs::GetProphetCostModifier, COMDAT
; _this$ = ecx

; 381  : 		return m_iProphetCostModifier;

	mov	eax, DWORD PTR [ecx+48]

; 382  : 	};

	ret	0
?GetProphetCostModifier@CvReligionBeliefs@@QBEHXZ ENDP	; CvReligionBeliefs::GetProphetCostModifier
_TEXT	ENDS
PUBLIC	?GetSpreadModifierOwnedCities@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetSpreadModifierOwnedCities
; Function compile flags: /Ogtpy
;	COMDAT ?GetSpreadModifierOwnedCities@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
?GetSpreadModifierOwnedCities@CvReligionBeliefs@@QBEHXZ PROC ; CvReligionBeliefs::GetSpreadModifierOwnedCities, COMDAT
; _this$ = ecx

; 402  : 		return m_iSpreadModifierOwnedCities;

	mov	eax, DWORD PTR [ecx+64]

; 403  : 	};

	ret	0
?GetSpreadModifierOwnedCities@CvReligionBeliefs@@QBEHXZ ENDP ; CvReligionBeliefs::GetSpreadModifierOwnedCities
_TEXT	ENDS
PUBLIC	?GetSpreadModifierUnownedCities@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetSpreadModifierUnownedCities
; Function compile flags: /Ogtpy
;	COMDAT ?GetSpreadModifierUnownedCities@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
?GetSpreadModifierUnownedCities@CvReligionBeliefs@@QBEHXZ PROC ; CvReligionBeliefs::GetSpreadModifierUnownedCities, COMDAT
; _this$ = ecx

; 406  : 		return m_iSpreadModifierUnownedCities;

	mov	eax, DWORD PTR [ecx+68]

; 407  : 	};

	ret	0
?GetSpreadModifierUnownedCities@CvReligionBeliefs@@QBEHXZ ENDP ; CvReligionBeliefs::GetSpreadModifierUnownedCities
_TEXT	ENDS
PUBLIC	?GetFriendlyCityStateSpreadModifier@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetFriendlyCityStateSpreadModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetFriendlyCityStateSpreadModifier@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
?GetFriendlyCityStateSpreadModifier@CvReligionBeliefs@@QBEHXZ PROC ; CvReligionBeliefs::GetFriendlyCityStateSpreadModifier, COMDAT
; _this$ = ecx

; 439  : 		return m_iFriendlyCityStateSpreadModifier;

	mov	eax, DWORD PTR [ecx+92]

; 440  : 	};

	ret	0
?GetFriendlyCityStateSpreadModifier@CvReligionBeliefs@@QBEHXZ ENDP ; CvReligionBeliefs::GetFriendlyCityStateSpreadModifier
_TEXT	ENDS
PUBLIC	?GetCityStateMinimumInfluence@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetCityStateMinimumInfluence
; Function compile flags: /Ogtpy
;	COMDAT ?GetCityStateMinimumInfluence@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
?GetCityStateMinimumInfluence@CvReligionBeliefs@@QBEHXZ PROC ; CvReligionBeliefs::GetCityStateMinimumInfluence, COMDAT
; _this$ = ecx

; 447  : 		return m_iCityStateMinimumInfluence;

	mov	eax, DWORD PTR [ecx+100]

; 448  : 	}

	ret	0
?GetCityStateMinimumInfluence@CvReligionBeliefs@@QBEHXZ ENDP ; CvReligionBeliefs::GetCityStateMinimumInfluence
_TEXT	ENDS
PUBLIC	?GetCityStateInfluenceModifier@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetCityStateInfluenceModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetCityStateInfluenceModifier@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
?GetCityStateInfluenceModifier@CvReligionBeliefs@@QBEHXZ PROC ; CvReligionBeliefs::GetCityStateInfluenceModifier, COMDAT
; _this$ = ecx

; 451  : 		return m_iCityStateInfluenceModifier;

	mov	eax, DWORD PTR [ecx+104]

; 452  : 	}

	ret	0
?GetCityStateInfluenceModifier@CvReligionBeliefs@@QBEHXZ ENDP ; CvReligionBeliefs::GetCityStateInfluenceModifier
_TEXT	ENDS
PUBLIC	?GetOtherReligionPressureErosion@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetOtherReligionPressureErosion
; Function compile flags: /Ogtpy
;	COMDAT ?GetOtherReligionPressureErosion@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
?GetOtherReligionPressureErosion@CvReligionBeliefs@@QBEHXZ PROC ; CvReligionBeliefs::GetOtherReligionPressureErosion, COMDAT
; _this$ = ecx

; 455  : 		return m_iOtherReligionPressureErosion;

	mov	eax, DWORD PTR [ecx+108]

; 456  : 	}

	ret	0
?GetOtherReligionPressureErosion@CvReligionBeliefs@@QBEHXZ ENDP ; CvReligionBeliefs::GetOtherReligionPressureErosion
_TEXT	ENDS
PUBLIC	?GetSpyPressure@CvReligionBeliefs@@QBEHXZ	; CvReligionBeliefs::GetSpyPressure
; Function compile flags: /Ogtpy
;	COMDAT ?GetSpyPressure@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
?GetSpyPressure@CvReligionBeliefs@@QBEHXZ PROC		; CvReligionBeliefs::GetSpyPressure, COMDAT
; _this$ = ecx

; 459  : 		return m_iSpyPressure;

	mov	eax, DWORD PTR [ecx+112]

; 460  : 	}

	ret	0
?GetSpyPressure@CvReligionBeliefs@@QBEHXZ ENDP		; CvReligionBeliefs::GetSpyPressure
_TEXT	ENDS
PUBLIC	?GetInquisitorPressureRetention@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetInquisitorPressureRetention
; Function compile flags: /Ogtpy
;	COMDAT ?GetInquisitorPressureRetention@CvReligionBeliefs@@QBEHXZ
_TEXT	SEGMENT
?GetInquisitorPressureRetention@CvReligionBeliefs@@QBEHXZ PROC ; CvReligionBeliefs::GetInquisitorPressureRetention, COMDAT
; _this$ = ecx

; 463  : 		return m_iInquisitorPressureRetention;

	mov	eax, DWORD PTR [ecx+116]

; 464  : 	}

	ret	0
?GetInquisitorPressureRetention@CvReligionBeliefs@@QBEHXZ ENDP ; CvReligionBeliefs::GetInquisitorPressureRetention
_TEXT	ENDS
PUBLIC	?GetSpreadModifierDoublingTech@CvReligionBeliefs@@QBE?AW4TechTypes@@XZ ; CvReligionBeliefs::GetSpreadModifierDoublingTech
; Function compile flags: /Ogtpy
;	COMDAT ?GetSpreadModifierDoublingTech@CvReligionBeliefs@@QBE?AW4TechTypes@@XZ
_TEXT	SEGMENT
?GetSpreadModifierDoublingTech@CvReligionBeliefs@@QBE?AW4TechTypes@@XZ PROC ; CvReligionBeliefs::GetSpreadModifierDoublingTech, COMDAT
; _this$ = ecx

; 480  : 		return m_eSpreadModifierDoublingTech;

	mov	eax, DWORD PTR [ecx+132]

; 481  : 	};

	ret	0
?GetSpreadModifierDoublingTech@CvReligionBeliefs@@QBE?AW4TechTypes@@XZ ENDP ; CvReligionBeliefs::GetSpreadModifierDoublingTech
_TEXT	ENDS
PUBLIC	??0DelegateMemento@fastdelegate@@QAE@XZ		; fastdelegate::DelegateMemento::DelegateMemento
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\eventsystem\fastdelegate.h
;	COMDAT ??0DelegateMemento@fastdelegate@@QAE@XZ
_TEXT	SEGMENT
??0DelegateMemento@fastdelegate@@QAE@XZ PROC		; fastdelegate::DelegateMemento::DelegateMemento, COMDAT
; _this$ = ecx

; 579  : 	DelegateMemento() : m_pthis(0), m_pFunction(0) {};

	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	ret	0
??0DelegateMemento@fastdelegate@@QAE@XZ ENDP		; fastdelegate::DelegateMemento::DelegateMemento
_TEXT	ENDS
PUBLIC	?SetMinimumFaithNextPantheon@CvGameReligions@@QAEXH@Z ; CvGameReligions::SetMinimumFaithNextPantheon
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.h
;	COMDAT ?SetMinimumFaithNextPantheon@CvGameReligions@@QAEXH@Z
_TEXT	SEGMENT
_iMinFaith$ = 8						; size = 4
?SetMinimumFaithNextPantheon@CvGameReligions@@QAEXH@Z PROC ; CvGameReligions::SetMinimumFaithNextPantheon, COMDAT
; _this$ = ecx

; 186  : 		m_iMinimumFaithForNextPantheon = iMinFaith;

	mov	eax, DWORD PTR _iMinFaith$[esp-4]
	mov	DWORD PTR [ecx+5264], eax

; 187  : 	};

	ret	4
?SetMinimumFaithNextPantheon@CvGameReligions@@QAEXH@Z ENDP ; CvGameReligions::SetMinimumFaithNextPantheon
_TEXT	ENDS
PUBLIC	?GetMinimumFaithNextPantheon@CvGameReligions@@QBEHXZ ; CvGameReligions::GetMinimumFaithNextPantheon
; Function compile flags: /Ogtpy
;	COMDAT ?GetMinimumFaithNextPantheon@CvGameReligions@@QBEHXZ
_TEXT	SEGMENT
?GetMinimumFaithNextPantheon@CvGameReligions@@QBEHXZ PROC ; CvGameReligions::GetMinimumFaithNextPantheon, COMDAT
; _this$ = ecx

; 190  : 		return m_iMinimumFaithForNextPantheon;

	mov	eax, DWORD PTR [ecx+5264]

; 191  : 	};

	ret	0
?GetMinimumFaithNextPantheon@CvGameReligions@@QBEHXZ ENDP ; CvGameReligions::GetMinimumFaithNextPantheon
_TEXT	ENDS
PUBLIC	?SetFoundingReligion@CvPlayerReligions@@QAEX_N@Z ; CvPlayerReligions::SetFoundingReligion
; Function compile flags: /Ogtpy
;	COMDAT ?SetFoundingReligion@CvPlayerReligions@@QAEX_N@Z
_TEXT	SEGMENT
_bNewValue$ = 8						; size = 1
?SetFoundingReligion@CvPlayerReligions@@QAEX_N@Z PROC	; CvPlayerReligions::SetFoundingReligion, COMDAT
; _this$ = ecx

; 320  : 		m_bFoundingReligion = bNewValue;

	movzx	eax, BYTE PTR _bNewValue$[esp-4]
	mov	DWORD PTR [ecx+8], eax

; 321  : 	};

	ret	4
?SetFoundingReligion@CvPlayerReligions@@QAEX_N@Z ENDP	; CvPlayerReligions::SetFoundingReligion
_TEXT	ENDS
PUBLIC	?HasPaidAdoptionBonus@CvCityReligions@@QBE_NXZ	; CvCityReligions::HasPaidAdoptionBonus
; Function compile flags: /Ogtpy
;	COMDAT ?HasPaidAdoptionBonus@CvCityReligions@@QBE_NXZ
_TEXT	SEGMENT
?HasPaidAdoptionBonus@CvCityReligions@@QBE_NXZ PROC	; CvCityReligions::HasPaidAdoptionBonus, COMDAT
; _this$ = ecx

; 403  : 		return m_bHasPaidAdoptionBonus;

	mov	al, BYTE PTR [ecx+420]

; 404  : 	};

	ret	0
?HasPaidAdoptionBonus@CvCityReligions@@QBE_NXZ ENDP	; CvCityReligions::HasPaidAdoptionBonus
_TEXT	ENDS
PUBLIC	?SetPaidAdoptionBonus@CvCityReligions@@QAEX_N@Z	; CvCityReligions::SetPaidAdoptionBonus
; Function compile flags: /Ogtpy
;	COMDAT ?SetPaidAdoptionBonus@CvCityReligions@@QAEX_N@Z
_TEXT	SEGMENT
_bNewValue$ = 8						; size = 1
?SetPaidAdoptionBonus@CvCityReligions@@QAEX_N@Z PROC	; CvCityReligions::SetPaidAdoptionBonus, COMDAT
; _this$ = ecx

; 407  : 		m_bHasPaidAdoptionBonus = bNewValue;

	mov	al, BYTE PTR _bNewValue$[esp-4]
	mov	BYTE PTR [ecx+420], al

; 408  : 	};

	ret	4
?SetPaidAdoptionBonus@CvCityReligions@@QAEX_N@Z ENDP	; CvCityReligions::SetPaidAdoptionBonus
_TEXT	ENDS
PUBLIC	?GetReligiousPressureModifier@CvCityReligions@@QBEHXZ ; CvCityReligions::GetReligiousPressureModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetReligiousPressureModifier@CvCityReligions@@QBEHXZ
_TEXT	SEGMENT
?GetReligiousPressureModifier@CvCityReligions@@QBEHXZ PROC ; CvCityReligions::GetReligiousPressureModifier, COMDAT
; _this$ = ecx

; 411  : 		return m_iReligiousPressureModifier;

	mov	eax, DWORD PTR [ecx+424]

; 412  : 	};

	ret	0
?GetReligiousPressureModifier@CvCityReligions@@QBEHXZ ENDP ; CvCityReligions::GetReligiousPressureModifier
_TEXT	ENDS
PUBLIC	?SetReligiousPressureModifier@CvCityReligions@@QAEXH@Z ; CvCityReligions::SetReligiousPressureModifier
; Function compile flags: /Ogtpy
;	COMDAT ?SetReligiousPressureModifier@CvCityReligions@@QAEXH@Z
_TEXT	SEGMENT
_iNewValue$ = 8						; size = 4
?SetReligiousPressureModifier@CvCityReligions@@QAEXH@Z PROC ; CvCityReligions::SetReligiousPressureModifier, COMDAT
; _this$ = ecx

; 415  : 		m_iReligiousPressureModifier = iNewValue;

	mov	eax, DWORD PTR _iNewValue$[esp-4]
	mov	DWORD PTR [ecx+424], eax

; 416  : 	};

	ret	4
?SetReligiousPressureModifier@CvCityReligions@@QAEXH@Z ENDP ; CvCityReligions::SetReligiousPressureModifier
_TEXT	ENDS
PUBLIC	?GetReligion@CvUnitReligion@@QBE?AW4ReligionTypes@@XZ ; CvUnitReligion::GetReligion
; Function compile flags: /Ogtpy
;	COMDAT ?GetReligion@CvUnitReligion@@QBE?AW4ReligionTypes@@XZ
_TEXT	SEGMENT
?GetReligion@CvUnitReligion@@QBE?AW4ReligionTypes@@XZ PROC ; CvUnitReligion::GetReligion, COMDAT
; _this$ = ecx

; 495  : 		return m_eReligion;

	mov	eax, DWORD PTR [ecx]

; 496  : 	};

	ret	0
?GetReligion@CvUnitReligion@@QBE?AW4ReligionTypes@@XZ ENDP ; CvUnitReligion::GetReligion
_TEXT	ENDS
PUBLIC	?SetReligion@CvUnitReligion@@QAEXW4ReligionTypes@@@Z ; CvUnitReligion::SetReligion
; Function compile flags: /Ogtpy
;	COMDAT ?SetReligion@CvUnitReligion@@QAEXW4ReligionTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
?SetReligion@CvUnitReligion@@QAEXW4ReligionTypes@@@Z PROC ; CvUnitReligion::SetReligion, COMDAT
; _this$ = ecx

; 499  : 		m_eReligion = eReligion;

	mov	eax, DWORD PTR _eReligion$[esp-4]
	mov	DWORD PTR [ecx], eax

; 500  : 	};

	ret	4
?SetReligion@CvUnitReligion@@QAEXW4ReligionTypes@@@Z ENDP ; CvUnitReligion::SetReligion
_TEXT	ENDS
PUBLIC	?GetReligiousStrength@CvUnitReligion@@QBEHXZ	; CvUnitReligion::GetReligiousStrength
; Function compile flags: /Ogtpy
;	COMDAT ?GetReligiousStrength@CvUnitReligion@@QBEHXZ
_TEXT	SEGMENT
?GetReligiousStrength@CvUnitReligion@@QBEHXZ PROC	; CvUnitReligion::GetReligiousStrength, COMDAT
; _this$ = ecx

; 503  : 		return m_iStrength;

	mov	eax, DWORD PTR [ecx+4]

; 504  : 	};

	ret	0
?GetReligiousStrength@CvUnitReligion@@QBEHXZ ENDP	; CvUnitReligion::GetReligiousStrength
_TEXT	ENDS
PUBLIC	?SetReligiousStrength@CvUnitReligion@@QAEXH@Z	; CvUnitReligion::SetReligiousStrength
; Function compile flags: /Ogtpy
;	COMDAT ?SetReligiousStrength@CvUnitReligion@@QAEXH@Z
_TEXT	SEGMENT
_iValue$ = 8						; size = 4
?SetReligiousStrength@CvUnitReligion@@QAEXH@Z PROC	; CvUnitReligion::SetReligiousStrength, COMDAT
; _this$ = ecx

; 507  : 		m_iStrength = iValue;

	mov	eax, DWORD PTR _iValue$[esp-4]
	mov	DWORD PTR [ecx+4], eax

; 508  : 	};

	ret	4
?SetReligiousStrength@CvUnitReligion@@QAEXH@Z ENDP	; CvUnitReligion::SetReligiousStrength
_TEXT	ENDS
PUBLIC	?GetSpreadsLeft@CvUnitReligion@@QBEHXZ		; CvUnitReligion::GetSpreadsLeft
; Function compile flags: /Ogtpy
;	COMDAT ?GetSpreadsLeft@CvUnitReligion@@QBEHXZ
_TEXT	SEGMENT
?GetSpreadsLeft@CvUnitReligion@@QBEHXZ PROC		; CvUnitReligion::GetSpreadsLeft, COMDAT
; _this$ = ecx

; 511  : 		return m_iSpreadsLeft;

	mov	eax, DWORD PTR [ecx+8]

; 512  : 	};

	ret	0
?GetSpreadsLeft@CvUnitReligion@@QBEHXZ ENDP		; CvUnitReligion::GetSpreadsLeft
_TEXT	ENDS
PUBLIC	?SetSpreadsLeft@CvUnitReligion@@QAEXH@Z		; CvUnitReligion::SetSpreadsLeft
; Function compile flags: /Ogtpy
;	COMDAT ?SetSpreadsLeft@CvUnitReligion@@QAEXH@Z
_TEXT	SEGMENT
_iValue$ = 8						; size = 4
?SetSpreadsLeft@CvUnitReligion@@QAEXH@Z PROC		; CvUnitReligion::SetSpreadsLeft, COMDAT
; _this$ = ecx

; 515  : 		m_iSpreadsLeft = iValue;

	mov	eax, DWORD PTR _iValue$[esp-4]
	mov	DWORD PTR [ecx+8], eax

; 516  : 	};

	ret	4
?SetSpreadsLeft@CvUnitReligion@@QAEXH@Z ENDP		; CvUnitReligion::SetSpreadsLeft
_TEXT	ENDS
PUBLIC	??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[]
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z PROC ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[], COMDAT
; _this$ = ecx

; 760  : 
; 761  :  #if _HAS_ITERATOR_DEBUGGING
; 762  : 		if (size() <= _Pos)
; 763  : 			{
; 764  : 			_DEBUG_ERROR("vector subscript out of range");
; 765  : 			_SCL_SECURE_OUT_OF_RANGE;
; 766  : 			}
; 767  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 768  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 769  : 
; 770  : 		return (*(_Myfirst + _Pos));

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR __Pos$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*4]

; 771  : 		}

	ret	4
??A?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@QBEABW4TeamTypes@@I@Z ENDP ; std::vector<enum TeamTypes,std::allocator<enum TeamTypes> >::operator[]
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7length_error@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
PUBLIC	?get@?$FAutoVariable@W4PlayerTypes@@VCvUnit@@@@QBEABW4PlayerTypes@@XZ ; FAutoVariable<enum PlayerTypes,CvUnit>::get
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fautovariable.h
;	COMDAT ?get@?$FAutoVariable@W4PlayerTypes@@VCvUnit@@@@QBEABW4PlayerTypes@@XZ
_TEXT	SEGMENT
?get@?$FAutoVariable@W4PlayerTypes@@VCvUnit@@@@QBEABW4PlayerTypes@@XZ PROC ; FAutoVariable<enum PlayerTypes,CvUnit>::get, COMDAT
; _this$ = ecx

; 177  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 178  : }

	ret	0
?get@?$FAutoVariable@W4PlayerTypes@@VCvUnit@@@@QBEABW4PlayerTypes@@XZ ENDP ; FAutoVariable<enum PlayerTypes,CvUnit>::get
_TEXT	ENDS
PUBLIC	?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ	; FAutoVariable<int,CvUnit>::get
; Function compile flags: /Ogtpy
;	COMDAT ?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ
_TEXT	SEGMENT
?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ PROC		; FAutoVariable<int,CvUnit>::get, COMDAT
; _this$ = ecx

; 177  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 178  : }

	ret	0
?get@?$FAutoVariable@HVCvUnit@@@@QBEABHXZ ENDP		; FAutoVariable<int,CvUnit>::get
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@HVCvUnit@@@@QBEABHXZ		; FAutoVariable<int,CvUnit>::operator int const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@HVCvUnit@@@@QBEABHXZ
_TEXT	SEGMENT
??B?$FAutoVariable@HVCvUnit@@@@QBEABHXZ PROC		; FAutoVariable<int,CvUnit>::operator int const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@HVCvUnit@@@@QBEABHXZ ENDP		; FAutoVariable<int,CvUnit>::operator int const &
_TEXT	ENDS
PUBLIC	??$?6H@FDataStream@@QAEAAV0@ABH@Z		; FDataStream::operator<<<int>
EXTRN	?Write@FDataStream@@IAEXABH@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?6H@FDataStream@@QAEAAV0@ABH@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6H@FDataStream@@QAEAAV0@ABH@Z PROC			; FDataStream::operator<<<int>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6H@FDataStream@@QAEAAV0@ABH@Z ENDP			; FDataStream::operator<<<int>
_TEXT	ENDS
PUBLIC	??$?5H@FDataStream@@QAEAAV0@AAH@Z		; FDataStream::operator>><int>
EXTRN	?Read@FDataStream@@IAEXAAH@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
;	COMDAT ??$?5H@FDataStream@@QAEAAV0@AAH@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5H@FDataStream@@QAEAAV0@AAH@Z PROC			; FDataStream::operator>><int>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5H@FDataStream@@QAEAAV0@AAH@Z ENDP			; FDataStream::operator>><int>
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ ; FAutoVariable<enum PlayerTypes,CvCity>::operator enum PlayerTypes const &
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fautovariable.h
;	COMDAT ??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ
_TEXT	SEGMENT
??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ PROC ; FAutoVariable<enum PlayerTypes,CvCity>::operator enum PlayerTypes const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@W4PlayerTypes@@VCvCity@@@@QBEABW4PlayerTypes@@XZ ENDP ; FAutoVariable<enum PlayerTypes,CvCity>::operator enum PlayerTypes const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ		; FAutoVariable<int,CvCity>::operator int const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ
_TEXT	SEGMENT
??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ PROC		; FAutoVariable<int,CvCity>::operator int const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@HVCvCity@@@@QBEABHXZ ENDP		; FAutoVariable<int,CvCity>::operator int const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ
_TEXT	SEGMENT
??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ PROC ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@W4PlayerTypes@@VCvPlayer@@@@QBEABW4PlayerTypes@@XZ ENDP ; FAutoVariable<enum PlayerTypes,CvPlayer>::operator enum PlayerTypes const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ	; FAutoVariable<bool,CvPlayer>::operator bool const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ
_TEXT	SEGMENT
??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ PROC	; FAutoVariable<bool,CvPlayer>::operator bool const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@_NVCvPlayer@@@@QBEAB_NXZ ENDP	; FAutoVariable<bool,CvPlayer>::operator bool const &
_TEXT	ENDS
PUBLIC	??B?$FAutoVariable@DVCvPlot@@@@QBEABDXZ		; FAutoVariable<char,CvPlot>::operator char const &
; Function compile flags: /Ogtpy
;	COMDAT ??B?$FAutoVariable@DVCvPlot@@@@QBEABDXZ
_TEXT	SEGMENT
??B?$FAutoVariable@DVCvPlot@@@@QBEABDXZ PROC		; FAutoVariable<char,CvPlot>::operator char const &, COMDAT
; _this$ = ecx

; 194  : 	return m_value;

	lea	eax, DWORD PTR [ecx+4]

; 195  : }

	ret	0
??B?$FAutoVariable@DVCvPlot@@@@QBEABDXZ ENDP		; FAutoVariable<char,CvPlot>::operator char const &
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR ___that$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, esi
	pop	esi
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$?5_N@FDataStream@@QAEAAV0@AA_N@Z		; FDataStream::operator>><bool>
EXTRN	?Read@FDataStream@@IAEXAA_N@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?5_N@FDataStream@@QAEAAV0@AA_N@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5_N@FDataStream@@QAEAAV0@AA_N@Z PROC		; FDataStream::operator>><bool>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5_N@FDataStream@@QAEAAV0@AA_N@Z ENDP		; FDataStream::operator>><bool>
_TEXT	ENDS
PUBLIC	??$?6_N@FDataStream@@QAEAAV0@AB_N@Z		; FDataStream::operator<<<bool>
EXTRN	?Write@FDataStream@@IAEXAB_N@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
;	COMDAT ??$?6_N@FDataStream@@QAEAAV0@AB_N@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6_N@FDataStream@@QAEAAV0@AB_N@Z PROC		; FDataStream::operator<<<bool>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6_N@FDataStream@@QAEAAV0@AB_N@Z ENDP		; FDataStream::operator<<<bool>
_TEXT	ENDS
PUBLIC	??$?5I@FDataStream@@QAEAAV0@AAI@Z		; FDataStream::operator>><unsigned int>
EXTRN	?Read@FDataStream@@IAEXAAI@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
;	COMDAT ??$?5I@FDataStream@@QAEAAV0@AAI@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5I@FDataStream@@QAEAAV0@AAI@Z PROC			; FDataStream::operator>><unsigned int>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5I@FDataStream@@QAEAAV0@AAI@Z ENDP			; FDataStream::operator>><unsigned int>
_TEXT	ENDS
PUBLIC	??$?6I@FDataStream@@QAEAAV0@ABI@Z		; FDataStream::operator<<<unsigned int>
EXTRN	?Write@FDataStream@@IAEXABI@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
;	COMDAT ??$?6I@FDataStream@@QAEAAV0@ABI@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6I@FDataStream@@QAEAAV0@ABI@Z PROC			; FDataStream::operator<<<unsigned int>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6I@FDataStream@@QAEAAV0@ABI@Z ENDP			; FDataStream::operator<<<unsigned int>
_TEXT	ENDS
PUBLIC	??$?5D@FDataStream@@QAEAAV0@AAD@Z		; FDataStream::operator>><char>
EXTRN	?Read@FDataStream@@IAEXAAD@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
;	COMDAT ??$?5D@FDataStream@@QAEAAV0@AAD@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5D@FDataStream@@QAEAAV0@AAD@Z PROC			; FDataStream::operator>><char>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAAD@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5D@FDataStream@@QAEAAV0@AAD@Z ENDP			; FDataStream::operator>><char>
_TEXT	ENDS
PUBLIC	??$?6D@FDataStream@@QAEAAV0@ABD@Z		; FDataStream::operator<<<char>
EXTRN	?Write@FDataStream@@IAEXABD@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
;	COMDAT ??$?6D@FDataStream@@QAEAAV0@ABD@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6D@FDataStream@@QAEAAV0@ABD@Z PROC			; FDataStream::operator<<<char>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXABD@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6D@FDataStream@@QAEAAV0@ABD@Z ENDP			; FDataStream::operator<<<char>
_TEXT	ENDS
PUBLIC	?dxWrap@@YAHH@Z					; dxWrap
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?dxWrap@@YAHH@Z
_TEXT	SEGMENT
_iDX$ = 8						; size = 4
?dxWrap@@YAHH@Z PROC					; dxWrap, COMDAT

; 74   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52

; 75   : 	return wrapCoordDifference(iDX, kMap.getGridWidth(), kMap.isWrapX());

	mov	edx, DWORD PTR [eax+4020]
	cmp	BYTE PTR [eax+4056], 0
	mov	eax, DWORD PTR _iDX$[esp-4]
	je	SHORT $LN13@dxWrap
	mov	ecx, edx
	shr	ecx, 1
	cmp	eax, ecx
	jle	SHORT $LN11@dxWrap
	sub	eax, edx

; 76   : }

	ret	0

; 75   : 	return wrapCoordDifference(iDX, kMap.getGridWidth(), kMap.isWrapX());

$LN11@dxWrap:
	neg	ecx
	cmp	eax, ecx
	jge	SHORT $LN13@dxWrap
	add	eax, edx
$LN13@dxWrap:

; 76   : }

	ret	0
?dxWrap@@YAHH@Z ENDP					; dxWrap
_TEXT	ENDS
PUBLIC	?dyWrap@@YAHH@Z					; dyWrap
; Function compile flags: /Ogtpy
;	COMDAT ?dyWrap@@YAHH@Z
_TEXT	SEGMENT
_iDY$ = 8						; size = 4
?dyWrap@@YAHH@Z PROC					; dyWrap, COMDAT

; 80   : 	const CvMap& kMap = GC.getMap();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52

; 81   : 	return wrapCoordDifference(iDY, kMap.getGridHeight(), kMap.isWrapY());

	mov	edx, DWORD PTR [eax+4024]
	cmp	BYTE PTR [eax+4057], 0
	mov	eax, DWORD PTR _iDY$[esp-4]
	je	SHORT $LN13@dyWrap
	mov	ecx, edx
	shr	ecx, 1
	cmp	eax, ecx
	jle	SHORT $LN11@dyWrap
	sub	eax, edx

; 82   : }

	ret	0

; 81   : 	return wrapCoordDifference(iDY, kMap.getGridHeight(), kMap.isWrapY());

$LN11@dyWrap:
	neg	ecx
	cmp	eax, ecx
	jge	SHORT $LN13@dyWrap
	add	eax, edx
$LN13@dyWrap:

; 82   : }

	ret	0
?dyWrap@@YAHH@Z ENDP					; dyWrap
_TEXT	ENDS
PUBLIC	?plotDistance@@YAHHHHH@Z			; plotDistance
; Function compile flags: /Ogtpy
;	COMDAT ?plotDistance@@YAHHHHH@Z
_TEXT	SEGMENT
_iDY$ = -12						; size = 4
tv320 = -8						; size = 4
tv357 = -4						; size = 4
_iX1$ = 8						; size = 4
_iDX$ = 12						; size = 4
_iY1$ = 12						; size = 4
$T232810 = 16						; size = 4
_iX2$ = 16						; size = 4
_iY2$ = 20						; size = 4
?plotDistance@@YAHHHHH@Z PROC				; plotDistance, COMDAT

; 144  : {

	sub	esp, 12					; 0000000cH

; 145  : 	int iDX;
; 146  : 	int iWrappedDX = dxWrap(iX2 - iX1);

	mov	ecx, DWORD PTR _iX2$[esp+8]
	sub	ecx, DWORD PTR _iX1$[esp+8]
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [edi+4056], 0
	mov	edx, DWORD PTR [edi+4020]
	mov	DWORD PTR tv320[esp+28], ecx
	je	SHORT $LN18@plotDistan
	mov	eax, edx
	shr	eax, 1
	cmp	ecx, eax
	jle	SHORT $LN20@plotDistan
	sub	ecx, edx
	jmp	SHORT $LN18@plotDistan
$LN20@plotDistan:
	neg	eax
	cmp	ecx, eax
	jge	SHORT $LN18@plotDistan
	add	ecx, edx
$LN18@plotDistan:

; 147  : 	int iWrappedDY = dyWrap(iY2 - iY1);

	mov	ebp, DWORD PTR _iY2$[esp+24]
	sub	ebp, DWORD PTR _iY1$[esp+24]
	cmp	BYTE PTR [edi+4057], 0
	mov	eax, DWORD PTR [edi+4024]
	je	SHORT $LN32@plotDistan
	mov	edx, eax
	shr	edx, 1
	cmp	ebp, edx
	jle	SHORT $LN34@plotDistan
	mov	ebx, ebp
	sub	ebx, eax
	mov	DWORD PTR $T232810[esp+24], ebx
	jmp	SHORT $LN36@plotDistan
$LN34@plotDistan:
	neg	edx
	cmp	ebp, edx
	jge	SHORT $LN32@plotDistan
	lea	ebx, DWORD PTR [eax+ebp]
	mov	DWORD PTR $T232810[esp+24], ebx
	jmp	SHORT $LN36@plotDistan
$LN32@plotDistan:
	mov	ebx, ebp
	mov	DWORD PTR $T232810[esp+24], ebp
$LN36@plotDistan:

; 148  : 	int iDY = abs(iWrappedDY);

	mov	eax, ebx
	cdq
	mov	esi, eax
	xor	esi, edx
	sub	esi, edx

; 149  : 
; 150  : #ifdef GAMECOREUTILS_FIX_PLOT_DISTANCE
; 151  : 	const CvMap& kMap = GC.getMap();
; 152  : 	// equidistant column joint fix (on X-wrapped maps):
; 153  : 	if ((kMap.isWrapX()) && (abs(iWrappedDX * 2) == kMap.getGridWidth()) && (iDY % 2 != 0) && ((iY1 % 2 == 0) == (iWrappedDX > (kMap.getGridWidth() >> 2))))

	cmp	BYTE PTR [edi+4056], 0
	mov	DWORD PTR _iDY$[esp+28], esi
	je	$LN77@plotDistan
	lea	eax, DWORD PTR [ecx+ecx]
	cdq
	mov	ebx, eax
	mov	eax, DWORD PTR [edi+4020]
	xor	ebx, edx
	sub	ebx, edx
	cmp	ebx, eax
	jne	SHORT $LN73@plotDistan
	mov	edx, esi
	and	edx, -2147483647			; 80000001H
	jns	SHORT $LN79@plotDistan
	dec	edx
	or	edx, -2					; fffffffeH
	inc	edx
$LN79@plotDistan:
	je	SHORT $LN73@plotDistan
	sar	eax, 2
	xor	edx, edx
	cmp	ecx, eax
	mov	eax, DWORD PTR _iY1$[esp+24]
	setg	dl
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN80@plotDistan
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN80@plotDistan:

; 154  : 	{
; 155  : 		iWrappedDX *= -1;  // change polarity

	mov	ebx, DWORD PTR $T232810[esp+24]
	neg	eax
	sbb	eax, eax
	inc	eax
	cmp	eax, edx
	jne	SHORT $LN5@plotDistan
	neg	ecx
	jmp	SHORT $LN5@plotDistan
$LN73@plotDistan:
	mov	ebx, DWORD PTR $T232810[esp+24]
$LN5@plotDistan:

; 156  : 	}
; 157  : 	if ((kMap.isWrapX()) && (abs(iWrappedDX * 2) == kMap.getGridWidth()) && (abs(iWrappedDY) < abs(iY2 - iY1)) && (iDY % 2 == 0) && (iX2 - iX1 < 0))

	cmp	BYTE PTR [edi+4056], 0
	je	$LN77@plotDistan
	lea	eax, DWORD PTR [ecx+ecx]
	cdq
	xor	eax, edx
	sub	eax, edx
	cmp	eax, DWORD PTR [edi+4020]
	jne	SHORT $LN75@plotDistan
	mov	eax, ebp
	cdq
	xor	eax, edx
	sub	eax, edx
	cmp	esi, eax
	jge	SHORT $LN75@plotDistan
	mov	edx, DWORD PTR _iDY$[esp+28]
	and	edx, -2147483647			; 80000001H
	jns	SHORT $LN81@plotDistan
	dec	edx
	or	edx, -2					; fffffffeH
	inc	edx
$LN81@plotDistan:
	jne	SHORT $LN75@plotDistan
	cmp	DWORD PTR tv320[esp+28], 0
	jge	SHORT $LN75@plotDistan

; 158  : 	{
; 159  : 		iWrappedDX *= -1;  // change polarity

	neg	ecx
$LN75@plotDistan:

; 160  : 	}
; 161  : 	// special case when map is toroidal AND map height is odd
; 162  : 	// TODO works but ugly
; 163  : 	if ((kMap.isWrapX()) && (kMap.getGridHeight() % 2 != 0) && (iY1 % 2 == kMap.getGridWidth() % 2) && (iY2 % 2 == 0) &&
; 164  : 		(abs(iWrappedDY) < abs(iY2 - iY1)) && (abs(iX2 - iX1) == kMap.getGridWidth() / 2 + ((kMap.getGridWidth() % 2 == 1) && (iX2 - iX1 > 0)) ? 1 : 0))

	cmp	BYTE PTR [edi+4056], 0
	je	$LN77@plotDistan
	mov	eax, DWORD PTR [edi+4024]
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN82@plotDistan
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN82@plotDistan:
	je	$LN77@plotDistan
	mov	edi, DWORD PTR [edi+4020]
	mov	DWORD PTR tv357[esp+28], edi
	and	edi, -2147483647			; 80000001H
	jns	SHORT $LN83@plotDistan
	dec	edi
	or	edi, -2					; fffffffeH
	inc	edi
$LN83@plotDistan:
	mov	edx, DWORD PTR _iY1$[esp+24]
	and	edx, -2147483647			; 80000001H
	jns	SHORT $LN84@plotDistan
	dec	edx
	or	edx, -2					; fffffffeH
	inc	edx
$LN84@plotDistan:
	cmp	edx, edi
	jne	SHORT $LN77@plotDistan
	mov	eax, DWORD PTR _iY2$[esp+24]
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN85@plotDistan
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN85@plotDistan:
	jne	SHORT $LN77@plotDistan
	mov	eax, ebp
	cdq
	xor	eax, edx
	sub	eax, edx
	cmp	esi, eax
	jge	SHORT $LN77@plotDistan
	cmp	edi, 1
	jne	SHORT $LN76@plotDistan
	cmp	DWORD PTR tv320[esp+28], 0
	jle	SHORT $LN76@plotDistan
	mov	esi, edi
	jmp	SHORT $LN9@plotDistan
$LN76@plotDistan:
	xor	esi, esi
$LN9@plotDistan:
	mov	eax, DWORD PTR tv320[esp+28]
	cdq
	mov	edi, eax
	mov	eax, DWORD PTR tv357[esp+28]
	xor	edi, edx
	sub	edi, edx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, esi
	cmp	edi, eax
	jne	SHORT $LN77@plotDistan

; 165  : 	{
; 166  : 		iWrappedDX -= (iWrappedDX > 0) - (iWrappedDX < 0);  // decrease regardless of polarity

	xor	edx, edx
	test	ecx, ecx
	setl	dl
	xor	eax, eax
	test	ecx, ecx
	setg	al
	sub	edx, eax
	add	ecx, edx
$LN77@plotDistan:

; 167  : 	}
; 168  : #endif
; 169  : 
; 170  : 	// convert to hex-space coordinates - the coordinate system axes are E and NE (not orthogonal)
; 171  : 	int iHX1 = xToHexspaceX(iX1, iY1);

	mov	eax, DWORD PTR _iY1$[esp+24]
	test	eax, eax
	jge	SHORT $LN88@plotDistan
	dec	eax
	cdq
	sub	eax, edx
$LN88@plotDistan:
	mov	edi, DWORD PTR _iX1$[esp+24]

; 172  : 	int iHX2 = xToHexspaceX(iX1 + iWrappedDX, iY1 + iWrappedDY);

	mov	edx, DWORD PTR _iY1$[esp+24]
	sar	eax, 1
	mov	esi, edi
	sub	esi, eax
	lea	eax, DWORD PTR [ebx+edx]
	test	eax, eax
	jge	SHORT $LN89@plotDistan
	dec	eax
	cdq
	sub	eax, edx
$LN89@plotDistan:
	sar	eax, 1
	sub	ecx, eax
	add	ecx, edi

; 173  : 
; 174  : #ifdef GAMECOREUTILS_FIX_PLOT_DISTANCE
; 175  : 	// obvious bug
; 176  : 	iDX = abs(iHX2 - iHX1);

	sub	ecx, esi
	mov	eax, ecx
	cdq
	xor	eax, edx
	sub	eax, edx

; 177  : #else
; 178  : 	iDX = abs(dxWrap(iHX2 - iHX1));
; 179  : #endif
; 180  : 
; 181  : #ifdef NQM_GAME_CORE_UTILS_OPTIMIZATIONS
; 182  : 	if (((iHX2 - iHX1) ^ (iWrappedDY)) >= 0)  // the signs match
; 183  : #else
; 184  : 	if((iHX2 - iHX1 >= 0) == (iWrappedDY >= 0))  // the signs match

	xor	edx, edx
	test	ecx, ecx
	setge	dl
	xor	ecx, ecx
	test	ebx, ebx
	setge	cl
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR _iDX$[esp+12], eax
	pop	ebx
	cmp	edx, ecx
	jne	SHORT $LN2@plotDistan

; 185  : #endif
; 186  : 	{
; 187  : 		return iDX + iDY;

	mov	edx, DWORD PTR _iDY$[esp+12]
	add	eax, edx

; 195  : #endif
; 196  : 	}
; 197  : }

	add	esp, 12					; 0000000cH
	ret	0
$LN2@plotDistan:

; 188  : 	}
; 189  : 	else
; 190  : 	{
; 191  : #ifdef NQM_FAST_COMP
; 192  : 		return (MAX(iDX, iDY));
; 193  : #else
; 194  : 		return (std::max(iDX, iDY));

	cmp	eax, DWORD PTR _iDY$[esp+12]
	lea	eax, DWORD PTR _iDY$[esp+12]
	jl	SHORT $LN71@plotDistan
	lea	eax, DWORD PTR _iDX$[esp+8]
$LN71@plotDistan:
	mov	eax, DWORD PTR [eax]

; 195  : #endif
; 196  : 	}
; 197  : }

	add	esp, 12					; 0000000cH
	ret	0
?plotDistance@@YAHHHHH@Z ENDP				; plotDistance
_TEXT	ENDS
PUBLIC	?GetLocalizedText@@YA?AVCvString@@PBD@Z		; GetLocalizedText
EXTRN	__imp_??1String@Localization@@UAE@XZ:PROC
EXTRN	__imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z:PROC
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z:PROC
EXTRN	__imp_?Lookup@Localization@@YA?AVString@1@PBD@Z:PROC
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?GetLocalizedText@@YA?AVCvString@@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$0
__ehfuncinfo$?GetLocalizedText@@YA?AVCvString@@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
xdata$x	ENDS
;	COMDAT ?GetLocalizedText@@YA?AVCvString@@PBD@Z
_TEXT	SEGMENT
_bytes$ = -100						; size = 4
$T232917 = -96						; size = 4
_text$ = -92						; size = 80
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_szString$ = 12						; size = 4
?GetLocalizedText@@YA?AVCvString@@PBD@Z PROC		; GetLocalizedText, COMDAT

; 514  : {

	push	-1
	push	__ehhandler$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 88					; 00000058H

; 515  : 	Localization::String text = Localization::Lookup(szString);

	mov	eax, DWORD PTR _szString$[esp+96]
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	ecx, DWORD PTR _text$[esp+116]
	xor	ebx, ebx
	push	ecx
	mov	DWORD PTR __$EHRec$[esp+128], ebx
	mov	DWORD PTR $T232917[esp+120], ebx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8

; 516  : 
; 517  : 	size_t bytes = 0;
; 518  : 	const char* szComposedString = text.toUTF8(bytes);

	push	1
	lea	edx, DWORD PTR _bytes$[esp+116]
	push	edx
	lea	ecx, DWORD PTR _text$[esp+120]
	mov	DWORD PTR __$EHRec$[esp+128], 1
	mov	DWORD PTR _bytes$[esp+120], ebx
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z

; 519  : 	CvString str;

	mov	esi, DWORD PTR ___$ReturnUdt$[esp+108]
	mov	ecx, esi
	mov	edi, eax
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 520  : 	str.assign(szComposedString, bytes);
; 521  : 	return str;

	mov	eax, DWORD PTR _bytes$[esp+112]
	push	eax
	push	edi
	mov	ecx, esi
	mov	DWORD PTR $T232917[esp+120], 1
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
	lea	ecx, DWORD PTR _text$[esp+112]
	mov	BYTE PTR __$EHRec$[esp+120], bl
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 522  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+112]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 100				; 00000064H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$0:
	lea	ecx, DWORD PTR _text$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?GetLocalizedText@@YA?AVCvString@@PBD@Z$1:
	mov	eax, DWORD PTR $T232917[ebp]
	and	eax, 1
	je	$LN5@GetLocaliz
	and	DWORD PTR $T232917[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN5@GetLocaliz:
	ret	0
__ehhandler$?GetLocalizedText@@YA?AVCvString@@PBD@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetLocalizedText@@YA?AVCvString@@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetLocalizedText@@YA?AVCvString@@PBD@Z ENDP		; GetLocalizedText
PUBLIC	??1CvBaseInfo@@QAE@XZ				; CvBaseInfo::~CvBaseInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CvBaseInfo@@QAE@XZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??1CvBaseInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CvBaseInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1CvBaseInfo@@QAE@XZ$7
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??1CvBaseInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CvBaseInfo@@QAE@XZ PROC				; CvBaseInfo::~CvBaseInfo, COMDAT
; _this$ = ecx
	push	-1
	push	__ehhandler$??1CvBaseInfo@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+20], esi
	lea	ecx, DWORD PTR [esi+232]
	mov	DWORD PTR __$EHRec$[esp+28], 7
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+204]
	mov	BYTE PTR __$EHRec$[esp+28], 6
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+176]
	mov	BYTE PTR __$EHRec$[esp+28], 5
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+148]
	mov	BYTE PTR __$EHRec$[esp+28], 4
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+120]
	mov	BYTE PTR __$EHRec$[esp+28], 3
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+92]
	mov	BYTE PTR __$EHRec$[esp+28], 2
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+64]
	mov	BYTE PTR __$EHRec$[esp+28], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+36]
	mov	BYTE PTR __$EHRec$[esp+28], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR __$EHRec$[esp+28], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 176				; 000000b0H
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??1CvBaseInfo@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$??1CvBaseInfo@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1CvBaseInfo@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvBaseInfo@@QAE@XZ ENDP				; CvBaseInfo::~CvBaseInfo
PUBLIC	??_7CvReligionEntry@@6B@			; CvReligionEntry::`vftable'
PUBLIC	??1CvReligionEntry@@QAE@XZ			; CvReligionEntry::~CvReligionEntry
PUBLIC	??_R4CvReligionEntry@@6B@			; CvReligionEntry::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCvReligionEntry@@@8			; CvReligionEntry `RTTI Type Descriptor'
PUBLIC	??_R3CvReligionEntry@@8				; CvReligionEntry::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CvReligionEntry@@8				; CvReligionEntry::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CvReligionEntry@@8		; CvReligionEntry::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CvBaseInfo@@8			; CvBaseInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCvBaseInfo@@@8				; CvBaseInfo `RTTI Type Descriptor'
PUBLIC	??_R3CvBaseInfo@@8				; CvBaseInfo::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CvBaseInfo@@8				; CvBaseInfo::`RTTI Base Class Array'
PUBLIC	?CacheResults@CvReligionEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ; CvReligionEntry::CacheResults
EXTRN	??8CvBaseInfo@@UBE_NABV0@@Z:PROC		; CvBaseInfo::operator==
EXTRN	?readFrom@CvBaseInfo@@UAEXAAVFDataStream@@@Z:PROC ; CvBaseInfo::readFrom
EXTRN	?writeTo@CvBaseInfo@@UBEXAAVFDataStream@@@Z:PROC ; CvBaseInfo::writeTo
;	COMDAT ??_R2CvBaseInfo@@8
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
rdata$r	SEGMENT
??_R2CvBaseInfo@@8 DD FLAT:??_R1A@?0A@EA@CvBaseInfo@@8	; CvBaseInfo::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CvBaseInfo@@8
rdata$r	SEGMENT
??_R3CvBaseInfo@@8 DD 00H				; CvBaseInfo::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CvBaseInfo@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCvBaseInfo@@@8
_DATA	SEGMENT
??_R0?AVCvBaseInfo@@@8 DD FLAT:??_7type_info@@6B@	; CvBaseInfo `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCvBaseInfo@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CvBaseInfo@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CvBaseInfo@@8 DD FLAT:??_R0?AVCvBaseInfo@@@8 ; CvBaseInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CvBaseInfo@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CvReligionEntry@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CvReligionEntry@@8 DD FLAT:??_R0?AVCvReligionEntry@@@8 ; CvReligionEntry::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CvReligionEntry@@8
rdata$r	ENDS
;	COMDAT ??_R2CvReligionEntry@@8
rdata$r	SEGMENT
??_R2CvReligionEntry@@8 DD FLAT:??_R1A@?0A@EA@CvReligionEntry@@8 ; CvReligionEntry::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CvBaseInfo@@8
rdata$r	ENDS
;	COMDAT ??_R3CvReligionEntry@@8
rdata$r	SEGMENT
??_R3CvReligionEntry@@8 DD 00H				; CvReligionEntry::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CvReligionEntry@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCvReligionEntry@@@8
_DATA	SEGMENT
??_R0?AVCvReligionEntry@@@8 DD FLAT:??_7type_info@@6B@	; CvReligionEntry `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCvReligionEntry@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CvReligionEntry@@6B@
rdata$r	SEGMENT
??_R4CvReligionEntry@@6B@ DD 00H			; CvReligionEntry::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCvReligionEntry@@@8
	DD	FLAT:??_R3CvReligionEntry@@8
rdata$r	ENDS
;	COMDAT ??_7CvReligionEntry@@6B@
CONST	SEGMENT
??_7CvReligionEntry@@6B@ DD FLAT:??_R4CvReligionEntry@@6B@ ; CvReligionEntry::`vftable'
	DD	FLAT:?CacheResults@CvReligionEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z
	DD	FLAT:??8CvBaseInfo@@UBE_NABV0@@Z
	DD	FLAT:?readFrom@CvBaseInfo@@UAEXAAVFDataStream@@@Z
	DD	FLAT:?writeTo@CvBaseInfo@@UBEXAAVFDataStream@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CvReligionEntry@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvReligionEntry@@QAE@XZ$0
__ehfuncinfo$??1CvReligionEntry@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CvReligionEntry@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ??1CvReligionEntry@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CvReligionEntry@@QAE@XZ PROC				; CvReligionEntry::~CvReligionEntry, COMDAT
; _this$ = ecx

; 32   : {

	push	-1
	push	__ehhandler$??1CvReligionEntry@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+20], esi
	mov	DWORD PTR [esi], OFFSET ??_7CvReligionEntry@@6B@

; 33   : }

	lea	ecx, DWORD PTR [esi+260]
	mov	DWORD PTR __$EHRec$[esp+28], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+28], -1
	call	??1CvBaseInfo@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvReligionEntry@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CvBaseInfo@@QAE@XZ
__ehhandler$??1CvReligionEntry@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1CvReligionEntry@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvReligionEntry@@QAE@XZ ENDP				; CvReligionEntry::~CvReligionEntry
EXTRN	__imp_?GetText@Results@Database@@QAEPBDPBD@Z:PROC
EXTRN	?CacheResults@CvBaseInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z:PROC ; CvBaseInfo::CacheResults
; Function compile flags: /Ogtpy
;	COMDAT ?CacheResults@CvReligionEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z
_TEXT	SEGMENT
_kResults$ = 8						; size = 4
_kUtility$ = 12						; size = 4
?CacheResults@CvReligionEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z PROC ; CvReligionEntry::CacheResults, COMDAT
; _this$ = ecx

; 38   : 	if(!CvBaseInfo::CacheResults(kResults, kUtility))

	mov	eax, DWORD PTR _kUtility$[esp-4]
	push	esi
	push	edi
	mov	edi, DWORD PTR _kResults$[esp+4]
	push	eax
	push	edi
	mov	esi, ecx
	call	?CacheResults@CvBaseInfo@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ; CvBaseInfo::CacheResults
	test	al, al
	jne	SHORT $LN1@CacheResul
	pop	edi
	pop	esi

; 45   : }

	ret	8
$LN1@CacheResul:

; 39   : 		return false;
; 40   : 
; 41   : 	//Basic Properties
; 42   : 	m_strIconString = kResults.GetText("IconString");

	push	OFFSET $SG224618
	mov	ecx, edi
	call	DWORD PTR __imp_?GetText@Results@Database@@QAEPBDPBD@Z
	lea	ecx, DWORD PTR [esi+260]
	test	eax, eax
	je	SHORT $LN5@CacheResul
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	pop	edi

; 43   : 	 
; 44   : 	return true;

	mov	al, 1
	pop	esi

; 45   : }

	ret	8

; 39   : 		return false;
; 40   : 
; 41   : 	//Basic Properties
; 42   : 	m_strIconString = kResults.GetText("IconString");

$LN5@CacheResul:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	pop	edi

; 43   : 	 
; 44   : 	return true;

	mov	al, 1
	pop	esi

; 45   : }

	ret	8
?CacheResults@CvReligionEntry@@UAE_NAAVResults@Database@@AAVCvDatabaseUtility@@@Z ENDP ; CvReligionEntry::CacheResults
_TEXT	ENDS
PUBLIC	?GetIconString@CvReligionEntry@@QBE?AVCvString@@XZ ; CvReligionEntry::GetIconString
; Function compile flags: /Ogtpy
;	COMDAT ?GetIconString@CvReligionEntry@@QBE?AVCvString@@XZ
_TEXT	SEGMENT
$T233022 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetIconString@CvReligionEntry@@QBE?AVCvString@@XZ PROC	; CvReligionEntry::GetIconString, COMDAT
; _this$ = ecx

; 49   : {

	push	ecx
	push	esi

; 50   : 	return m_strIconString;

	mov	esi, DWORD PTR ___$ReturnUdt$[esp+4]
	add	ecx, 260				; 00000104H
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR $T233022[esp+12], 0
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, esi
	pop	esi

; 51   : }

	pop	ecx
	ret	4
?GetIconString@CvReligionEntry@@QBE?AVCvString@@XZ ENDP	; CvReligionEntry::GetIconString
_TEXT	ENDS
PUBLIC	?GetNumReligions@CvReligionXMLEntries@@QAEHXZ	; CvReligionXMLEntries::GetNumReligions
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumReligions@CvReligionXMLEntries@@QAEHXZ
_TEXT	SEGMENT
?GetNumReligions@CvReligionXMLEntries@@QAEHXZ PROC	; CvReligionXMLEntries::GetNumReligions, COMDAT
; _this$ = ecx

; 77   : 	return m_paReligionEntries.size();

	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2

; 78   : }

	ret	0
?GetNumReligions@CvReligionXMLEntries@@QAEHXZ ENDP	; CvReligionXMLEntries::GetNumReligions
_TEXT	ENDS
PUBLIC	?GetEntry@CvReligionXMLEntries@@QAEPAVCvReligionEntry@@H@Z ; CvReligionXMLEntries::GetEntry
; Function compile flags: /Ogtpy
;	COMDAT ?GetEntry@CvReligionXMLEntries@@QAEPAVCvReligionEntry@@H@Z
_TEXT	SEGMENT
_index$ = 8						; size = 4
?GetEntry@CvReligionXMLEntries@@QAEPAVCvReligionEntry@@H@Z PROC ; CvReligionXMLEntries::GetEntry, COMDAT
; _this$ = ecx

; 94   : 	return m_paReligionEntries[index];

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _index$[esp-4]
	mov	eax, DWORD PTR [eax+ecx*4]

; 95   : }

	ret	4
?GetEntry@CvReligionXMLEntries@@QAEPAVCvReligionEntry@@H@Z ENDP ; CvReligionXMLEntries::GetEntry
_TEXT	ENDS
PUBLIC	?GetName@CvReligion@@QBE?AVCvString@@XZ		; CvReligion::GetName
EXTRN	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z:PROC ; CvGlobals::getReligionInfo
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?GetName@CvReligion@@QBE?AVCvString@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetName@CvReligion@@QBE?AVCvString@@XZ$0
__ehfuncinfo$?GetName@CvReligion@@QBE?AVCvString@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetName@CvReligion@@QBE?AVCvString@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetName@CvReligion@@QBE?AVCvString@@XZ
_TEXT	SEGMENT
tv75 = -44						; size = 4
$T233047 = -44						; size = 4
_szReligionName$224880 = -40				; size = 28
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetName@CvReligion@@QBE?AVCvString@@XZ PROC		; CvReligion::GetName, COMDAT
; _this$ = ecx

; 191  : {

	push	-1
	push	__ehhandler$?GetName@CvReligion@@QBE?AVCvString@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	esi, ecx

; 192  : #ifdef AUI_WARNING_FIXES
; 193  : 	CvString szReligionName = m_szCustomName;
; 194  : 	if (szReligionName.IsEmpty())
; 195  : 	{
; 196  : 		CvReligionEntry* pEntry = GC.getReligionInfo(m_eReligion);
; 197  : 		CvAssertMsg(pEntry, "pEntry for religion not expected to be NULL. Please send Anton or Ed your save file and version.");
; 198  : 		if (pEntry)
; 199  : 			szReligionName = pEntry->GetDescriptionKey();
; 200  : 		else
; 201  : 			szReligionName = "No Religion";
; 202  : 	}
; 203  : 	
; 204  : 	return szReligionName;
; 205  : #else
; 206  : 	CvReligionEntry* pEntry = GC.getReligionInfo(m_eReligion);

	mov	eax, DWORD PTR [esi]
	push	edi
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR $T233047[esp+56], 0
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo
	mov	edi, eax

; 207  : 	CvAssertMsg(pEntry, "pEntry for religion not expected to be NULL. Please send Anton or Ed your save file and version.");
; 208  : 	if (pEntry)

	test	edi, edi
	je	SHORT $LN1@GetName

; 209  : 	{
; 210  : 		CvString szReligionName = (m_szCustomName == NULL || strlen(m_szCustomName) == 0) ? pEntry->GetDescriptionKey() : m_szCustomName;

	lea	eax, DWORD PTR [esi+22]
	test	eax, eax
	je	SHORT $LN4@GetName
	mov	ecx, eax
	lea	esi, DWORD PTR [ecx+1]
$LL27@GetName:
	mov	dl, BYTE PTR [ecx]
	inc	ecx
	test	dl, dl
	jne	SHORT $LL27@GetName
	sub	ecx, esi
	jne	SHORT $LN5@GetName
$LN4@GetName:
	lea	ecx, DWORD PTR [edi+64]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
$LN5@GetName:
	test	eax, eax
	jne	SHORT $LN14@GetName
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN14@GetName:
	push	eax
	lea	ecx, DWORD PTR _szReligionName$224880[esp+56]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 211  : 		return szReligionName;

	mov	esi, DWORD PTR ___$ReturnUdt$[esp+48]
	lea	ecx, DWORD PTR _szReligionName$224880[esp+52]
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+64], 0
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	lea	ecx, DWORD PTR _szReligionName$224880[esp+52]
	mov	DWORD PTR __$EHRec$[esp+60], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	pop	edi

; 212  : 	}
; 213  : 
; 214  : 	const char* szReligionNameBackup = "No Religion";
; 215  : 	return szReligionNameBackup;

	mov	eax, esi
	pop	esi

; 216  : #endif
; 217  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	mov	DWORD PTR fs:0, ecx
	add	esp, 44					; 0000002cH
	ret	4
$LN1@GetName:

; 212  : 	}
; 213  : 
; 214  : 	const char* szReligionNameBackup = "No Religion";
; 215  : 	return szReligionNameBackup;

	mov	esi, DWORD PTR ___$ReturnUdt$[esp+48]
	push	OFFSET $SG224882
	mov	ecx, esi
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 216  : #endif
; 217  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 44					; 0000002cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetName@CvReligion@@QBE?AVCvString@@XZ$0:
	lea	ecx, DWORD PTR _szReligionName$224880[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?GetName@CvReligion@@QBE?AVCvString@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetName@CvReligion@@QBE?AVCvString@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetName@CvReligion@@QBE?AVCvString@@XZ ENDP		; CvReligion::GetName
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAVCvReligionInCity@@@Z ; operator>>
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4ReligionTypes@@@Z:PROC ; operator>>
; Function compile flags: /Ogtpy
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAVCvReligionInCity@@@Z
_TEXT	SEGMENT
_uiVersion$ = 8						; size = 4
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??5@YAAAVFDataStream@@AAV0@AAVCvReligionInCity@@@Z PROC	; operator>>, COMDAT

; 246  : {

	push	esi

; 247  : 	uint uiVersion;
; 248  : 	loadFrom >> uiVersion;

	mov	esi, DWORD PTR _loadFrom$[esp]
	push	edi
	lea	eax, DWORD PTR _uiVersion$[esp+4]
	push	eax
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 249  : 
; 250  : 	loadFrom >> writeTo.m_eReligion;

	mov	edi, DWORD PTR _writeTo$[esp+4]
	push	edi
	push	esi
	call	??5@YAAAVFDataStream@@AAV0@AAW4ReligionTypes@@@Z ; operator>>
	add	esp, 8

; 251  : 	loadFrom >> writeTo.m_bFoundedHere;

	lea	ecx, DWORD PTR [edi+4]
	push	ecx
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 252  : 	loadFrom >> writeTo.m_iFollowers;

	lea	edx, DWORD PTR [edi+8]
	push	edx
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 253  : 	loadFrom >> writeTo.m_iPressure;

	lea	eax, DWORD PTR [edi+12]
	push	eax
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 254  : 
; 255  : 	if (uiVersion == 2)

	cmp	DWORD PTR _uiVersion$[esp+4], 2
	jne	SHORT $LN2@operator@2

; 256  : 	{
; 257  : 		loadFrom >> writeTo.m_iNumTradeRoutesApplyingPressure;

	add	edi, 16					; 00000010H
	push	edi
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	pop	edi

; 262  : 	}
; 263  : 
; 264  : 	return loadFrom;

	mov	eax, esi
	pop	esi

; 265  : }

	ret	0
$LN2@operator@2:

; 258  : 	}
; 259  : 	else
; 260  : 	{
; 261  : 		writeTo.m_iNumTradeRoutesApplyingPressure = 0;

	mov	DWORD PTR [edi+16], 0
	pop	edi

; 262  : 	}
; 263  : 
; 264  : 	return loadFrom;

	mov	eax, esi
	pop	esi

; 265  : }

	ret	0
??5@YAAAVFDataStream@@AAV0@AAVCvReligionInCity@@@Z ENDP	; operator>>
_TEXT	ENDS
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABVCvReligionInCity@@@Z ; operator<<
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4ReligionTypes@@@Z:PROC ; operator<<
; Function compile flags: /Ogtpy
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABVCvReligionInCity@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??6@YAAAVFDataStream@@AAV0@ABVCvReligionInCity@@@Z PROC	; operator<<, COMDAT

; 269  : {

	push	ecx
	push	esi

; 270  : 	uint uiVersion = 2;
; 271  : 	saveTo << uiVersion;

	mov	esi, DWORD PTR _saveTo$[esp+4]
	push	edi
	lea	eax, DWORD PTR _uiVersion$[esp+12]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR _uiVersion$[esp+16], 2
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 272  : 
; 273  : 	saveTo << readFrom.m_eReligion;

	mov	edi, DWORD PTR _readFrom$[esp+8]
	push	edi
	push	esi
	call	??6@YAAAVFDataStream@@AAV0@ABW4ReligionTypes@@@Z ; operator<<
	add	esp, 8

; 274  : 	saveTo << readFrom.m_bFoundedHere;

	lea	ecx, DWORD PTR [edi+4]
	push	ecx
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 275  : 	saveTo << readFrom.m_iFollowers;

	lea	edx, DWORD PTR [edi+8]
	push	edx
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 276  : 	saveTo << readFrom.m_iPressure;

	lea	eax, DWORD PTR [edi+12]
	push	eax
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 277  : 	saveTo << readFrom.m_iNumTradeRoutesApplyingPressure;

	add	edi, 16					; 00000010H
	push	edi
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	pop	edi

; 278  : 
; 279  : 	return saveTo;

	mov	eax, esi
	pop	esi

; 280  : }

	pop	ecx
	ret	0
??6@YAAAVFDataStream@@AAV0@ABVCvReligionInCity@@@Z ENDP	; operator<<
_TEXT	ENDS
PUBLIC	?Init@CvGameReligions@@QAEXXZ			; CvGameReligions::Init
EXTRN	?getTrainPercent@CvGameSpeedInfo@@QBEHXZ:PROC	; CvGameSpeedInfo::getTrainPercent
EXTRN	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ:PROC ; CvGame::getGameSpeedInfo
; Function compile flags: /Ogtpy
;	COMDAT ?Init@CvGameReligions@@QAEXXZ
_TEXT	SEGMENT
?Init@CvGameReligions@@QAEXXZ PROC			; CvGameReligions::Init, COMDAT
; _this$ = ecx

; 300  : 	m_iMinimumFaithForNextPantheon = GC.getRELIGION_MIN_FAITH_FIRST_PANTHEON();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7860
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi+5264], eax

; 301  : 	m_iMinimumFaithForNextPantheon *= GC.getGame().getGameSpeedInfo().getTrainPercent();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getTrainPercent@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getTrainPercent
	mov	ecx, eax
	imul	ecx, DWORD PTR [esi+5264]

; 302  : 	m_iMinimumFaithForNextPantheon /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	mov	DWORD PTR [esi+5264], ecx
	pop	esi

; 303  : }

	ret	0
?Init@CvGameReligions@@QAEXXZ ENDP			; CvGameReligions::Init
_TEXT	ENDS
PUBLIC	?SetFounder@CvGameReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::SetFounder
; Function compile flags: /Ogtpy
;	COMDAT ?SetFounder@CvGameReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
_eFounder$ = 12						; size = 4
?SetFounder@CvGameReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvGameReligions::SetFounder, COMDAT
; _this$ = ecx

; 1441 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1442 : 	for (ReligionList::iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1443 : #else
; 1444 : 	ReligionList::iterator it;
; 1445 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	imul	ecx, 328				; 00000148H
	add	ecx, eax
	cmp	eax, ecx
	je	SHORT $LN2@SetFounder
	mov	edx, DWORD PTR _eReligion$[esp-4]
$LL4@SetFounder:

; 1446 : #endif
; 1447 : 	{
; 1448 : 		// If talking about a pantheon, make sure to match the player
; 1449 : 		if(it->m_eReligion == eReligion)

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN12@SetFounder
	add	eax, 328				; 00000148H
	cmp	eax, ecx
	jne	SHORT $LL4@SetFounder

; 1452 : 			break;
; 1453 : 		}
; 1454 : 	}
; 1455 : }

	ret	8
$LN12@SetFounder:

; 1450 : 		{
; 1451 : 			it->m_eFounder = eFounder;

	mov	ecx, DWORD PTR _eFounder$[esp-4]
	mov	DWORD PTR [eax+4], ecx
$LN2@SetFounder:

; 1452 : 			break;
; 1453 : 		}
; 1454 : 	}
; 1455 : }

	ret	8
?SetFounder@CvGameReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvGameReligions::SetFounder
_TEXT	ENDS
PUBLIC	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
; Function compile flags: /Ogtpy
;	COMDAT ?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvGameReligions::GetReligion, COMDAT
; _this$ = ecx

; 1482 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1483 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1484 : #else
; 1485 : 	ReligionList::const_iterator it;
; 1486 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	imul	edx, 328				; 00000148H
	add	edx, eax
	push	esi
	push	edi
	cmp	eax, edx
	je	SHORT $LN5@GetReligio
	mov	edi, DWORD PTR _ePlayer$[esp+4]
	mov	esi, DWORD PTR _eReligion$[esp+4]
	npad	5
$LL7@GetReligio:

; 1487 : #endif
; 1488 : 	{
; 1489 : 		// If talking about a pantheon, make sure to match the player
; 1490 : #ifdef AUI_WARNING_FIXES
; 1491 : 		if (it->m_eReligion == eReligion)
; 1492 : 		{
; 1493 : 			if (it->m_eReligion != RELIGION_PANTHEON || it->m_eFounder == ePlayer)
; 1494 : #else
; 1495 : 		if(it->m_eReligion == eReligion && it->m_eReligion == RELIGION_PANTHEON)

	mov	ecx, DWORD PTR [eax]
	cmp	ecx, esi
	jne	SHORT $LN6@GetReligio
	test	ecx, ecx
	jne	SHORT $LN8@GetReligio

; 1496 : 		{
; 1497 : 			if(it->m_eFounder == ePlayer)

	cmp	DWORD PTR [eax+4], edi
	je	SHORT $LN8@GetReligio
$LN6@GetReligio:

; 1482 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1483 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1484 : #else
; 1485 : 	ReligionList::const_iterator it;
; 1486 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	add	eax, 328				; 00000148H
	cmp	eax, edx
	jne	SHORT $LL7@GetReligio
$LN5@GetReligio:

; 1498 : #endif
; 1499 : 			{
; 1500 : 				return it;
; 1501 : 			}
; 1502 : 		}
; 1503 : #ifndef AUI_WARNING_FIXES
; 1504 : 		else if(it->m_eReligion == eReligion)
; 1505 : 		{
; 1506 : 			return it;
; 1507 : 		}
; 1508 : #endif
; 1509 : 	}
; 1510 : 
; 1511 : 	return NULL;

	xor	eax, eax
$LN8@GetReligio:
	pop	edi
	pop	esi

; 1512 : }

	ret	8
?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvGameReligions::GetReligion
_TEXT	ENDS
PUBLIC	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
EXTRN	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z:PROC ; CvReligionBeliefs::HasBelief
; Function compile flags: /Ogtpy
;	COMDAT ?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z
_TEXT	SEGMENT
_eBelief$ = 8						; size = 4
?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z PROC ; CvGameReligions::IsInSomeReligion, COMDAT
; _this$ = ecx

; 1516 : {

	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 1517 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1518 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1519 : #else
; 1520 : 	ReligionList::const_iterator it;
; 1521 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR [edi+4]
	mov	esi, DWORD PTR [edi]
	imul	eax, 328				; 00000148H
	add	eax, esi
	cmp	esi, eax
	je	SHORT $LN2@IsInSomeRe
	mov	ebx, DWORD PTR _eBelief$[esp+8]
	npad	6
$LL4@IsInSomeRe:

; 1522 : #endif
; 1523 : 	{
; 1524 : 		if(it->m_Beliefs.HasBelief(eBelief))

	push	ebx
	lea	ecx, DWORD PTR [esi+152]
	call	?HasBelief@CvReligionBeliefs@@QBE_NW4BeliefTypes@@@Z ; CvReligionBeliefs::HasBelief
	test	al, al
	jne	SHORT $LN12@IsInSomeRe
	mov	ecx, DWORD PTR [edi+4]
	imul	ecx, 328				; 00000148H
	add	ecx, DWORD PTR [edi]
	add	esi, 328				; 00000148H
	cmp	esi, ecx
	jne	SHORT $LL4@IsInSomeRe
$LN2@IsInSomeRe:
	pop	edi
	pop	esi

; 1527 : 		}
; 1528 : 	}
; 1529 : 
; 1530 : 	return false;

	xor	al, al
	pop	ebx

; 1531 : }

	ret	4
$LN12@IsInSomeRe:
	pop	edi
	pop	esi

; 1525 : 		{
; 1526 : 			return true;

	mov	al, 1
	pop	ebx

; 1531 : }

	ret	4
?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ENDP ; CvGameReligions::IsInSomeReligion
_TEXT	ENDS
PUBLIC	?GetBeliefInPantheon@CvGameReligions@@QBE?AW4BeliefTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetBeliefInPantheon
EXTRN	?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z:PROC ; CvReligionBeliefs::GetBelief
; Function compile flags: /Ogtpy
;	COMDAT ?GetBeliefInPantheon@CvGameReligions@@QBE?AW4BeliefTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
?GetBeliefInPantheon@CvGameReligions@@QBE?AW4BeliefTypes@@W4PlayerTypes@@@Z PROC ; CvGameReligions::GetBeliefInPantheon, COMDAT
; _this$ = ecx

; 1536 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1537 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1538 : #else
; 1539 : 	ReligionList::const_iterator it;
; 1540 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	imul	ecx, 328				; 00000148H
	add	ecx, eax
	cmp	eax, ecx
	je	SHORT $LN2@GetBeliefI
	mov	edx, DWORD PTR _ePlayer$[esp-4]
$LL4@GetBeliefI:

; 1541 : #endif
; 1542 : 	{
; 1543 : 		if(it->m_eFounder == ePlayer && it->m_bPantheon)

	cmp	DWORD PTR [eax+4], edx
	jne	SHORT $LN3@GetBeliefI
	cmp	BYTE PTR [eax+20], 0
	jne	SHORT $LN12@GetBeliefI
$LN3@GetBeliefI:

; 1536 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1537 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1538 : #else
; 1539 : 	ReligionList::const_iterator it;
; 1540 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	add	eax, 328				; 00000148H
	cmp	eax, ecx
	jne	SHORT $LL4@GetBeliefI
$LN2@GetBeliefI:

; 1546 : 		}
; 1547 : 	}
; 1548 : 
; 1549 : 	return NO_BELIEF;

	or	eax, -1

; 1550 : }

	ret	4
$LN12@GetBeliefI:

; 1544 : 		{
; 1545 : 			return (BeliefTypes)it->m_Beliefs.GetBelief(0);

	mov	DWORD PTR _ePlayer$[esp-4], 0
	lea	ecx, DWORD PTR [eax+152]
	jmp	?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z ; CvReligionBeliefs::GetBelief
?GetBeliefInPantheon@CvGameReligions@@QBE?AW4BeliefTypes@@W4PlayerTypes@@@Z ENDP ; CvGameReligions::GetBeliefInPantheon
_TEXT	ENDS
PUBLIC	?HasCreatedPantheon@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasCreatedPantheon
; Function compile flags: /Ogtpy
;	COMDAT ?HasCreatedPantheon@CvGameReligions@@QBE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
?HasCreatedPantheon@CvGameReligions@@QBE_NW4PlayerTypes@@@Z PROC ; CvGameReligions::HasCreatedPantheon, COMDAT
; _this$ = ecx

; 1555 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1556 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1557 : #else
; 1558 : 	ReligionList::const_iterator it;
; 1559 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	imul	ecx, 328				; 00000148H
	add	ecx, eax
	cmp	eax, ecx
	je	SHORT $LN2@HasCreated
	mov	edx, DWORD PTR _ePlayer$[esp-4]
$LL4@HasCreated:

; 1560 : #endif
; 1561 : 	{
; 1562 : 		if(it->m_eFounder == ePlayer && it->m_bPantheon)

	cmp	DWORD PTR [eax+4], edx
	jne	SHORT $LN3@HasCreated
	cmp	BYTE PTR [eax+20], 0
	jne	SHORT $LN12@HasCreated
$LN3@HasCreated:

; 1555 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1556 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1557 : #else
; 1558 : 	ReligionList::const_iterator it;
; 1559 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	add	eax, 328				; 00000148H
	cmp	eax, ecx
	jne	SHORT $LL4@HasCreated
$LN2@HasCreated:

; 1565 : 		}
; 1566 : 	}
; 1567 : 
; 1568 : 	return false;

	xor	al, al

; 1569 : }

	ret	4
$LN12@HasCreated:

; 1563 : 		{
; 1564 : 			return true;

	mov	al, 1

; 1569 : }

	ret	4
?HasCreatedPantheon@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ENDP ; CvGameReligions::HasCreatedPantheon
_TEXT	ENDS
PUBLIC	?GetNumPantheonsCreated@CvGameReligions@@QBEHXZ	; CvGameReligions::GetNumPantheonsCreated
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumPantheonsCreated@CvGameReligions@@QBEHXZ
_TEXT	SEGMENT
?GetNumPantheonsCreated@CvGameReligions@@QBEHXZ PROC	; CvGameReligions::GetNumPantheonsCreated, COMDAT
; _this$ = ecx

; 1574 : 	int iRtnValue = 0;
; 1575 : 
; 1576 : 	for(int iI = 0; iI < MAX_MAJOR_CIVS; iI++)

	mov	edx, DWORD PTR [ecx+4]
	imul	edx, 328				; 00000148H
	push	esi
	push	edi
	mov	edi, DWORD PTR [ecx]
	xor	eax, eax
	xor	esi, esi
	add	edx, edi
$LL7@GetNumPant:

; 1577 : 	{
; 1578 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1579 : 		for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1580 : #else
; 1581 : 		ReligionList::const_iterator it;
; 1582 : 		for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	ecx, edi
	cmp	ecx, edx
	je	SHORT $LN6@GetNumPant
	npad	7
$LL4@GetNumPant:

; 1583 : #endif
; 1584 : 		{
; 1585 : 			if (it->m_eFounder == iI)

	cmp	DWORD PTR [ecx+4], esi
	je	SHORT $LN16@GetNumPant
	add	ecx, 328				; 00000148H
	cmp	ecx, edx
	jne	SHORT $LL4@GetNumPant
	jmp	SHORT $LN6@GetNumPant
$LN16@GetNumPant:

; 1586 : 			{
; 1587 : 				iRtnValue++;

	inc	eax
$LN6@GetNumPant:

; 1574 : 	int iRtnValue = 0;
; 1575 : 
; 1576 : 	for(int iI = 0; iI < MAX_MAJOR_CIVS; iI++)

	inc	esi
	cmp	esi, 22					; 00000016H
	jl	SHORT $LL7@GetNumPant
	pop	edi
	pop	esi

; 1588 : 				break;
; 1589 : 			}
; 1590 : 		}
; 1591 : 	}
; 1592 : 
; 1593 : 	return iRtnValue;
; 1594 : }

	ret	0
?GetNumPantheonsCreated@CvGameReligions@@QBEHXZ ENDP	; CvGameReligions::GetNumPantheonsCreated
_TEXT	ENDS
PUBLIC	?IsPantheonBeliefAvailable@CvGameReligions@@QAE_NW4BeliefTypes@@@Z ; CvGameReligions::IsPantheonBeliefAvailable
EXTRN	?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ:PROC	; CvBeliefEntry::IsPantheonBelief
EXTRN	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z:PROC ; CvBeliefXMLEntries::GetEntry
EXTRN	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ:PROC ; CvGlobals::GetGameBeliefs
; Function compile flags: /Ogtpy
;	COMDAT ?IsPantheonBeliefAvailable@CvGameReligions@@QAE_NW4BeliefTypes@@@Z
_TEXT	SEGMENT
_eBelief$ = 8						; size = 4
?IsPantheonBeliefAvailable@CvGameReligions@@QAE_NW4BeliefTypes@@@Z PROC ; CvGameReligions::IsPantheonBeliefAvailable, COMDAT
; _this$ = ecx

; 1634 : {

	push	ebx
	push	esi
	mov	esi, ecx
	push	edi

; 1635 : 	CvBeliefXMLEntries* pkBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs

; 1636 : #ifdef AUI_WARNING_FIXES
; 1637 : 	CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);
; 1638 : 	if (pEntry && pEntry->IsPantheonBelief())
; 1639 : 	{
; 1640 : 		if (!IsInSomeReligion(eBelief))
; 1641 : #else
; 1642 : 	if(!IsInSomeReligion(eBelief))

	mov	ebx, DWORD PTR _eBelief$[esp+8]
	push	ebx
	mov	ecx, esi
	mov	edi, eax
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	test	al, al
	jne	SHORT $LN1@IsPantheon

; 1643 : 	{
; 1644 : 		CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);

	push	ebx
	mov	ecx, edi
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry

; 1645 : 		if(pEntry && pEntry->IsPantheonBelief())

	test	eax, eax
	je	SHORT $LN1@IsPantheon
	mov	ecx, eax
	call	?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsPantheonBelief
	test	al, al
	je	SHORT $LN1@IsPantheon
	pop	edi
	pop	esi

; 1646 : #endif
; 1647 : 		{
; 1648 : 			return true;

	mov	al, 1
	pop	ebx

; 1653 : }

	ret	4
$LN1@IsPantheon:
	pop	edi
	pop	esi

; 1649 : 		}
; 1650 : 	}
; 1651 : 
; 1652 : 	return false;

	xor	al, al
	pop	ebx

; 1653 : }

	ret	4
?IsPantheonBeliefAvailable@CvGameReligions@@QAE_NW4BeliefTypes@@@Z ENDP ; CvGameReligions::IsPantheonBeliefAvailable
_TEXT	ENDS
PUBLIC	?IsCityStateFriendOfReligionFounder@CvGameReligions@@QAE_NW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::IsCityStateFriendOfReligionFounder
EXTRN	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvMinorCivAI::IsFriends
EXTRN	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ:PROC ; CvPlayer::GetMinorCivAI
EXTRN	?isMinorCiv@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isMinorCiv
; Function compile flags: /Ogtpy
;	COMDAT ?IsCityStateFriendOfReligionFounder@CvGameReligions@@QAE_NW4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
?IsCityStateFriendOfReligionFounder@CvGameReligions@@QAE_NW4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvGameReligions::IsCityStateFriendOfReligionFounder, COMDAT
; _this$ = ecx

; 1776 : 	const CvReligion* religion = GetReligion(eReligion, NO_PLAYER);

	mov	eax, DWORD PTR _eReligion$[esp-4]
	push	esi
	push	edi
	push	-1
	push	eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	edi, eax

; 1777 : 	if(religion)

	test	edi, edi
	je	SHORT $LN1@IsCityStat

; 1778 : 	{
; 1779 : 		CvPlayer& kMinor = GET_PLAYER(ePlayer);
; 1780 : 		CvPlayer& kFounder = GET_PLAYER(religion->m_eFounder);

	mov	ecx, DWORD PTR [edi+4]
	mov	esi, DWORD PTR _ePlayer$[esp+4]
	imul	ecx, 63236				; 0000f704H
	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	imul	esi, 63236				; 0000f704H
	add	ecx, eax
	add	esi, eax

; 1781 : 		if(!kFounder.isMinorCiv() && kMinor.GetMinorCivAI()->IsFriends(religion->m_eFounder))

	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	test	al, al
	jne	SHORT $LN1@IsCityStat
	mov	ecx, DWORD PTR [edi+4]
	push	ecx
	mov	ecx, esi
	call	?GetMinorCivAI@CvPlayer@@QBEPAVCvMinorCivAI@@XZ ; CvPlayer::GetMinorCivAI
	mov	ecx, eax
	call	?IsFriends@CvMinorCivAI@@QAE_NW4PlayerTypes@@@Z ; CvMinorCivAI::IsFriends
	test	al, al
	je	SHORT $LN1@IsCityStat
	pop	edi

; 1782 : 		{
; 1783 : 			return true;

	mov	al, 1
	pop	esi

; 1788 : }

	ret	8
$LN1@IsCityStat:
	pop	edi

; 1784 : 		}
; 1785 : 	}
; 1786 : 
; 1787 : 	return false;

	xor	al, al
	pop	esi

; 1788 : }

	ret	8
?IsCityStateFriendOfReligionFounder@CvGameReligions@@QAE_NW4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvGameReligions::IsCityStateFriendOfReligionFounder
_TEXT	ENDS
PUBLIC	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvGameReligions::GetReligionCreatedByPlayer, COMDAT
; _this$ = ecx

; 1793 : 	ReligionTypes eRtnValue = NO_RELIGION;
; 1794 : 
; 1795 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1796 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1797 : #else
; 1798 : 	ReligionList::const_iterator it;
; 1799 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	imul	ecx, 328				; 00000148H
	add	ecx, edx
	or	eax, -1
	cmp	edx, ecx
	je	SHORT $LN3@GetReligio@2
	push	esi
	mov	esi, DWORD PTR _ePlayer$[esp]
	npad	7
$LL5@GetReligio@2:

; 1800 : #endif
; 1801 : 	{
; 1802 : 		if(it->m_eFounder == ePlayer)

	cmp	DWORD PTR [edx+4], esi
	jne	SHORT $LN4@GetReligio@2

; 1803 : 		{
; 1804 : 			if(!it->m_bPantheon)

	cmp	BYTE PTR [edx+20], 0
	jne	SHORT $LN4@GetReligio@2

; 1805 : 			{
; 1806 : 				eRtnValue = it->m_eReligion;

	mov	eax, DWORD PTR [edx]
$LN4@GetReligio@2:

; 1793 : 	ReligionTypes eRtnValue = NO_RELIGION;
; 1794 : 
; 1795 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1796 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1797 : #else
; 1798 : 	ReligionList::const_iterator it;
; 1799 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	add	edx, 328				; 00000148H
	cmp	edx, ecx
	jne	SHORT $LL5@GetReligio@2
	pop	esi
$LN3@GetReligio@2:

; 1807 : #ifdef AUI_WARNING_FIXES
; 1808 : 				break;
; 1809 : #endif
; 1810 : 			}
; 1811 : 		}
; 1812 : 	}
; 1813 : 
; 1814 : 	return eRtnValue;
; 1815 : }

	ret	4
?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvGameReligions::GetReligionCreatedByPlayer
_TEXT	ENDS
PUBLIC	?GetNumReligionsFounded@CvGameReligions@@QBEHXZ	; CvGameReligions::GetNumReligionsFounded
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumReligionsFounded@CvGameReligions@@QBEHXZ
_TEXT	SEGMENT
?GetNumReligionsFounded@CvGameReligions@@QBEHXZ PROC	; CvGameReligions::GetNumReligionsFounded, COMDAT
; _this$ = ecx

; 1849 : 	int iRtnValue = 0;
; 1850 : 
; 1851 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1852 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1853 : #else
; 1854 : 	ReligionList::const_iterator it;
; 1855 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	imul	ecx, 328				; 00000148H
	add	ecx, edx
	xor	eax, eax
	cmp	edx, ecx
	je	SHORT $LN2@GetNumReli
$LL4@GetNumReli:

; 1856 : #endif
; 1857 : 	{
; 1858 : 		if(!it->m_bPantheon)

	cmp	BYTE PTR [edx+20], 0
	jne	SHORT $LN3@GetNumReli

; 1859 : 		{
; 1860 : 			iRtnValue++;

	inc	eax
$LN3@GetNumReli:

; 1849 : 	int iRtnValue = 0;
; 1850 : 
; 1851 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1852 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1853 : #else
; 1854 : 	ReligionList::const_iterator it;
; 1855 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	add	edx, 328				; 00000148H
	cmp	edx, ecx
	jne	SHORT $LL4@GetNumReli
$LN2@GetNumReli:

; 1861 : 		}
; 1862 : 	}
; 1863 : 
; 1864 : 	return iRtnValue;
; 1865 : }

	ret	0
?GetNumReligionsFounded@CvGameReligions@@QBEHXZ ENDP	; CvGameReligions::GetNumReligionsFounded
_TEXT	ENDS
PUBLIC	?GetNumReligionsEnhanced@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsEnhanced
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumReligionsEnhanced@CvGameReligions@@QBEHXZ
_TEXT	SEGMENT
?GetNumReligionsEnhanced@CvGameReligions@@QBEHXZ PROC	; CvGameReligions::GetNumReligionsEnhanced, COMDAT
; _this$ = ecx

; 1870 : 	int iRtnValue = 0;
; 1871 : 
; 1872 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1873 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1874 : #else
; 1875 : 	ReligionList::const_iterator it;
; 1876 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	imul	ecx, 328				; 00000148H
	add	ecx, edx
	xor	eax, eax
	cmp	edx, ecx
	je	SHORT $LN2@GetNumReli@2
$LL4@GetNumReli@2:

; 1877 : #endif
; 1878 : 	{
; 1879 : 		if (it->m_bEnhanced)

	cmp	BYTE PTR [edx+21], 0
	je	SHORT $LN3@GetNumReli@2

; 1880 : 		{
; 1881 : 			iRtnValue++;

	inc	eax
$LN3@GetNumReli@2:

; 1870 : 	int iRtnValue = 0;
; 1871 : 
; 1872 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1873 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1874 : #else
; 1875 : 	ReligionList::const_iterator it;
; 1876 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	add	edx, 328				; 00000148H
	cmp	edx, ecx
	jne	SHORT $LL4@GetNumReli@2
$LN2@GetNumReli@2:

; 1882 : 		}
; 1883 : 	}
; 1884 : 
; 1885 : 	return iRtnValue;
; 1886 : }

	ret	0
?GetNumReligionsEnhanced@CvGameReligions@@QBEHXZ ENDP	; CvGameReligions::GetNumReligionsEnhanced
_TEXT	ENDS
PUBLIC	?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsStillToFound
EXTRN	?getMaxActiveReligions@CvWorldInfo@@QBEHXZ:PROC	; CvWorldInfo::getMaxActiveReligions
EXTRN	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ:PROC	; CvMap::getWorldInfo
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ
_TEXT	SEGMENT
?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ PROC ; CvGameReligions::GetNumReligionsStillToFound, COMDAT
; _this$ = ecx

; 1891 : 	return (GC.getMap().getWorldInfo().getMaxActiveReligions() - GetNumReligionsFounded());

	mov	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [ecx]
	imul	eax, 328				; 00000148H
	push	esi
	add	eax, edx
	xor	esi, esi
	cmp	edx, eax
	je	SHORT $LN6@GetNumReli@3
$LL8@GetNumReli@3:
	cmp	BYTE PTR [edx+20], 0
	jne	SHORT $LN7@GetNumReli@3
	inc	esi
$LN7@GetNumReli@3:
	add	edx, 328				; 00000148H
	cmp	edx, eax
	jne	SHORT $LL8@GetNumReli@3
$LN6@GetNumReli@3:
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	call	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ ; CvMap::getWorldInfo
	mov	ecx, eax
	call	?getMaxActiveReligions@CvWorldInfo@@QBEHXZ ; CvWorldInfo::getMaxActiveReligions
	sub	eax, esi
	pop	esi

; 1892 : }

	ret	0
?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ ENDP ; CvGameReligions::GetNumReligionsStillToFound
_TEXT	ENDS
PUBLIC	?GetFaithGreatProphetNumber@CvGameReligions@@QBEHH@Z ; CvGameReligions::GetFaithGreatProphetNumber
; Function compile flags: /Ogtpy
;	COMDAT ?GetFaithGreatProphetNumber@CvGameReligions@@QBEHH@Z
_TEXT	SEGMENT
_iNum$ = 8						; size = 4
?GetFaithGreatProphetNumber@CvGameReligions@@QBEHH@Z PROC ; CvGameReligions::GetFaithGreatProphetNumber, COMDAT
; _this$ = ecx

; 2307 : 	int iRtnValue = 0;
; 2308 : 
; 2309 : 	if(iNum >= 1)

	mov	edx, DWORD PTR _iNum$[esp-4]
	xor	eax, eax
	cmp	edx, 1
	jl	SHORT $LN1@GetFaithGr

; 2310 : 	{
; 2311 : 		if(iNum == 1)

	jne	SHORT $LN2@GetFaithGr

; 2318 : 		}
; 2319 : 	}
; 2320 : 
; 2321 : 	return iRtnValue;

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7864

; 2322 : }

	ret	4
$LN2@GetFaithGr:
	push	esi
	push	edi

; 2312 : 		{
; 2313 : 			iRtnValue = GC.getRELIGION_MIN_FAITH_FIRST_PROPHET();
; 2314 : 		}
; 2315 : 		else
; 2316 : 		{
; 2317 : 			iRtnValue = (GC.getRELIGION_FAITH_DELTA_NEXT_PROPHET() * (iNum - 1)) + GetFaithGreatProphetNumber(iNum - 1);

	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7876
	lea	esi, DWORD PTR [edx-1]
	push	esi
	call	?GetFaithGreatProphetNumber@CvGameReligions@@QBEHH@Z ; CvGameReligions::GetFaithGreatProphetNumber
	imul	esi, edi
	pop	edi
	add	eax, esi
	pop	esi
$LN1@GetFaithGr:

; 2322 : }

	ret	4
?GetFaithGreatProphetNumber@CvGameReligions@@QBEHH@Z ENDP ; CvGameReligions::GetFaithGreatProphetNumber
_TEXT	ENDS
PUBLIC	?GetFaithGreatPersonNumber@CvGameReligions@@QBEHH@Z ; CvGameReligions::GetFaithGreatPersonNumber
; Function compile flags: /Ogtpy
;	COMDAT ?GetFaithGreatPersonNumber@CvGameReligions@@QBEHH@Z
_TEXT	SEGMENT
_iNum$ = 8						; size = 4
?GetFaithGreatPersonNumber@CvGameReligions@@QBEHH@Z PROC ; CvGameReligions::GetFaithGreatPersonNumber, COMDAT
; _this$ = ecx

; 2327 : 	int iRtnValue = 0;
; 2328 : 
; 2329 : 	if(iNum >= 1)

	mov	edx, DWORD PTR _iNum$[esp-4]
	xor	eax, eax
	cmp	edx, 1
	jl	SHORT $LN1@GetFaithGr@2

; 2330 : 	{
; 2331 : 		if(iNum == 1)

	jne	SHORT $LN2@GetFaithGr@2

; 2338 : 		}
; 2339 : 	}
; 2340 : 
; 2341 : 	return iRtnValue;

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7868

; 2342 : }

	ret	4
$LN2@GetFaithGr@2:
	push	esi
	push	edi

; 2332 : 		{
; 2333 : 			iRtnValue = GC.getRELIGION_MIN_FAITH_FIRST_GREAT_PERSON();
; 2334 : 		}
; 2335 : 		else
; 2336 : 		{
; 2337 : 			iRtnValue = (GC.getRELIGION_FAITH_DELTA_NEXT_GREAT_PERSON() * (iNum - 1)) + GetFaithGreatPersonNumber(iNum - 1);

	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7880
	lea	esi, DWORD PTR [edx-1]
	push	esi
	call	?GetFaithGreatPersonNumber@CvGameReligions@@QBEHH@Z ; CvGameReligions::GetFaithGreatPersonNumber
	imul	esi, edi
	pop	edi
	add	eax, esi
	pop	esi
$LN1@GetFaithGr@2:

; 2342 : }

	ret	4
?GetFaithGreatPersonNumber@CvGameReligions@@QBEHH@Z ENDP ; CvGameReligions::GetFaithGreatPersonNumber
_TEXT	ENDS
PUBLIC	?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ ; CvGameReligions::GetLogFileName
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ$0
__ehfuncinfo$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ
_TEXT	SEGMENT
$T233321 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ PROC ; CvGameReligions::GetLogFileName, COMDAT
; _this$ = ecx

; 2402 : {

	push	-1
	push	__ehhandler$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	DWORD PTR $T233321[esp+20], 0

; 2403 : 	CvString strLogName;

	mov	esi, DWORD PTR ___$ReturnUdt$[esp+16]
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+28], 0
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2404 : 	strLogName = "ReligionLog.csv";
; 2405 : 	return strLogName;

	push	OFFSET $SG226218
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+32], 0
	mov	DWORD PTR $T233321[esp+24], 1
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z

; 2406 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ$0:
	mov	eax, DWORD PTR $T233321[ebp]
	and	eax, 1
	je	$LN4@GetLogFile
	and	DWORD PTR $T233321[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN4@GetLogFile:
	ret	0
__ehhandler$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ ENDP ; CvGameReligions::GetLogFileName
PUBLIC	?HasBeenFounded@CvGameReligions@@AAE_NW4ReligionTypes@@@Z ; CvGameReligions::HasBeenFounded
; Function compile flags: /Ogtpy
;	COMDAT ?HasBeenFounded@CvGameReligions@@AAE_NW4ReligionTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
?HasBeenFounded@CvGameReligions@@AAE_NW4ReligionTypes@@@Z PROC ; CvGameReligions::HasBeenFounded, COMDAT
; _this$ = ecx

; 2417 : 	ReligionList::const_iterator it;
; 2418 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 2419 : 	for (it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 2420 : #else
; 2421 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	imul	ecx, 328				; 00000148H
	add	ecx, eax
	cmp	eax, ecx
	je	SHORT $LN2@HasBeenFou
	mov	edx, DWORD PTR _eReligion$[esp-4]
$LL4@HasBeenFou:

; 2422 : #endif
; 2423 : 	{
; 2424 : 		if(it->m_eReligion == eReligion)

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN12@HasBeenFou
	add	eax, 328				; 00000148H
	cmp	eax, ecx
	jne	SHORT $LL4@HasBeenFou
$LN2@HasBeenFou:

; 2427 : 		}
; 2428 : 	}
; 2429 : 
; 2430 : 	return false;

	xor	al, al

; 2431 : }

	ret	4
$LN12@HasBeenFou:

; 2425 : 		{
; 2426 : 			return true;

	mov	al, 1

; 2431 : }

	ret	4
?HasBeenFounded@CvGameReligions@@AAE_NW4ReligionTypes@@@Z ENDP ; CvGameReligions::HasBeenFounded
_TEXT	ENDS
PUBLIC	?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z ; CvGameReligions::LogReligionMessage
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z:PROC
EXTRN	?getElapsedGameTurns@CvGame@@QBEHXZ:PROC	; CvGame::getElapsedGameTurns
EXTRN	?getGameTurnYear@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurnYear
EXTRN	?GetInstance@FILogFileMgr@@SAAAV1@XZ:PROC	; FILogFileMgr::GetInstance
EXTRN	?getAILogging@CvGlobals@@QAE_NXZ:PROC		; CvGlobals::getAILogging
EXTRN	?getLogging@CvGlobals@@QAE_NXZ:PROC		; CvGlobals::getLogging
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z$3
__ehfuncinfo$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z
_TEXT	SEGMENT
_strBaseString$226281 = -124				; size = 28
_strOutBuf$226280 = -96					; size = 28
$T233354 = -68						; size = 28
$T233355 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_strMsg$ = 8						; size = 4
?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z PROC ; CvGameReligions::LogReligionMessage, COMDAT
; _this$ = ecx

; 2568 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 112				; 00000070H
	push	edi
	mov	edi, ecx

; 2569 : 	if(GC.getLogging() && GC.getAILogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	$LN1@LogReligio
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getAILogging@CvGlobals@@QAE_NXZ	; CvGlobals::getAILogging
	test	al, al
	je	$LN1@LogReligio
	push	esi

; 2570 : 	{
; 2571 : 		CvString strOutBuf;

	lea	ecx, DWORD PTR _strOutBuf$226280[esp+132]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2572 : 		CvString strBaseString;

	lea	ecx, DWORD PTR _strBaseString$226281[esp+132]
	mov	DWORD PTR __$EHRec$[esp+140], 0
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[esp+140], 1

; 2573 : 		FILogFile* pLog;
; 2574 : 
; 2575 : 		pLog = LOGFILEMGR.GetLog(GetLogFileName(), FILogFile::kDontTimeStamp);

	call	?GetInstance@FILogFileMgr@@SAAAV1@XZ	; FILogFileMgr::GetInstance
	mov	esi, eax
	lea	eax, DWORD PTR $T233354[esp+132]
	push	eax
	mov	ecx, edi
	call	?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ ; CvGameReligions::GetLogFileName
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+140], 2
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	edx, DWORD PTR [esi]
	push	0
	push	1
	push	eax
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR $T233354[esp+132]
	mov	esi, eax
	mov	BYTE PTR __$EHRec$[esp+140], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2576 : 
; 2577 : 		// Get the leading info for this line
; 2578 : 		strBaseString.Format("%03d, %d, ", GC.getGame().getElapsedGameTurns(), GC.getGame().getGameTurnYear());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	edi, ecx
	call	?getGameTurnYear@CvGame@@QAEHXZ		; CvGame::getGameTurnYear
	push	eax
	mov	ecx, edi
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	push	eax
	lea	ecx, DWORD PTR _strBaseString$226281[esp+140]
	push	OFFSET $SG226284
	push	ecx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format

; 2579 : 		strOutBuf = strBaseString + strMsg;

	mov	edx, DWORD PTR _strMsg$[esp+144]
	push	edx
	lea	eax, DWORD PTR _strBaseString$226281[esp+152]
	push	eax
	lea	ecx, DWORD PTR $T233355[esp+156]
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 28					; 0000001cH
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+140], 3
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$226280[esp+136]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	lea	ecx, DWORD PTR $T233355[esp+132]
	mov	BYTE PTR __$EHRec$[esp+140], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2580 : 		pLog->Msg(strOutBuf);

	lea	ecx, DWORD PTR _strOutBuf$226280[esp+132]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	edx, DWORD PTR [esi]
	push	eax
	mov	eax, DWORD PTR [edx]
	push	esi
	call	eax
	add	esp, 8

; 2581 : 	}

	lea	ecx, DWORD PTR _strBaseString$226281[esp+132]
	mov	BYTE PTR __$EHRec$[esp+140], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strOutBuf$226280[esp+132]
	mov	DWORD PTR __$EHRec$[esp+140], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	pop	esi
$LN1@LogReligio:

; 2582 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+128]
	pop	edi
	mov	DWORD PTR fs:0, ecx
	add	esp, 124				; 0000007cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z$0:
	lea	ecx, DWORD PTR _strOutBuf$226280[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z$1:
	lea	ecx, DWORD PTR _strBaseString$226281[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z$2:
	lea	ecx, DWORD PTR $T233354[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z$3:
	lea	ecx, DWORD PTR $T233355[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z ENDP ; CvGameReligions::LogReligionMessage
PUBLIC	?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z ; CvGameReligions::NotifyPlayer
EXTRN	?AddToPlayer@CvNotifications@@SAXW4PlayerTypes@@W4NotificationTypes@@PBD2HHHH@Z:PROC ; CvNotifications::AddToPlayer
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__ehfuncinfo$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z DD 019930522H
	DD	012H
	DD	FLAT:__unwindtable$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$8
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$9
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$10
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$11
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$12
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$13
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$14
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$15
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$16
	DD	01H
	DD	FLAT:__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$17
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z
_TEXT	SEGMENT
_strMessage$ = -516					; size = 28
_strSummary$ = -488					; size = 28
$T233416 = -460						; size = 28
$T233418 = -432						; size = 28
$T233411 = -404						; size = 28
$T233419 = -376						; size = 28
$T233413 = -348						; size = 28
$T233420 = -320						; size = 28
$T233415 = -292						; size = 28
$T233421 = -264						; size = 28
$T233417 = -236						; size = 28
$T233422 = -208						; size = 28
$T233414 = -180						; size = 28
$T233423 = -152						; size = 28
$T233412 = -124						; size = 28
$T233424 = -96						; size = 28
$T233410 = -68						; size = 28
$T233425 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_eResult$ = 12						; size = 4
?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z PROC ; CvGameReligions::NotifyPlayer, COMDAT

; 2586 : {

	push	-1
	push	__ehhandler$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 504				; 000001f8H
	push	ebx

; 2587 : 	CvString strMessage;

	lea	ecx, DWORD PTR _strMessage$[esp+520]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2588 : 	CvString strSummary;

	lea	ecx, DWORD PTR _strSummary$[esp+520]
	mov	DWORD PTR __$EHRec$[esp+528], 0
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2589 : 
; 2590 : 	NotificationTypes eNotificationType = NOTIFICATION_RELIGION_ERROR;
; 2591 : 
; 2592 : 	switch(eResult)

	mov	eax, DWORD PTR _eResult$[esp+516]
	dec	eax
	mov	bl, 1
	mov	BYTE PTR __$EHRec$[esp+528], bl
	cmp	eax, 8
	ja	$LN12@NotifyPlay
	jmp	DWORD PTR $LN130@NotifyPlay[eax*4]
$LN10@NotifyPlay:

; 2593 : 	{
; 2594 : 	case FOUNDING_OK:
; 2595 : 		break;
; 2596 : 	case FOUNDING_BELIEF_IN_USE:
; 2597 : 		strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_PANTHEON_BELIEF_IN_USE");

	lea	eax, DWORD PTR $T233410[esp+520]
	push	OFFSET $SG226300
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strMessage$[esp+524]
	mov	BYTE PTR __$EHRec$[esp+532], 2
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233410[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2598 : 		strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_PANTHEON_BELIEF_IN_USE");

	lea	ecx, DWORD PTR $T233411[esp+520]
	push	OFFSET $SG226302
	push	ecx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strSummary$[esp+524]
	mov	BYTE PTR __$EHRec$[esp+532], 3
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233411[esp+520]

; 2599 : 		break;

	jmp	$LN129@NotifyPlay
$LN9@NotifyPlay:

; 2600 : 	case FOUNDING_RELIGION_IN_USE:
; 2601 : 		strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_RELIGION_IN_USE");

	lea	edx, DWORD PTR $T233412[esp+520]
	push	OFFSET $SG226305
	push	edx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strMessage$[esp+524]
	mov	BYTE PTR __$EHRec$[esp+532], 4
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233412[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2602 : 		strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_RELIGION_IN_USE");

	lea	eax, DWORD PTR $T233413[esp+520]
	push	OFFSET $SG226307
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strSummary$[esp+524]
	mov	BYTE PTR __$EHRec$[esp+532], 5
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233413[esp+520]

; 2603 : 		break;

	jmp	$LN129@NotifyPlay
$LN8@NotifyPlay:

; 2604 : 	case FOUNDING_NOT_ENOUGH_FAITH:
; 2605 : 		strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_NOT_ENOUGH_FAITH_FOR_PANTHEON");

	lea	ecx, DWORD PTR $T233414[esp+520]
	push	OFFSET $SG226310
	push	ecx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strMessage$[esp+524]
	mov	BYTE PTR __$EHRec$[esp+532], 6
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233414[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2606 : 		strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_NOT_ENOUGH_FAITH_FOR_PANTHEON");

	lea	edx, DWORD PTR $T233415[esp+520]
	push	OFFSET $SG226312
	push	edx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strSummary$[esp+524]
	mov	BYTE PTR __$EHRec$[esp+532], 7
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233415[esp+520]

; 2607 : 		break;

	jmp	$LN129@NotifyPlay
$LN7@NotifyPlay:

; 2608 : 	case FOUNDING_NO_RELIGIONS_AVAILABLE:
; 2609 : 		strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_NO_RELIGIONS_AVAILABLE");

	lea	eax, DWORD PTR $T233416[esp+520]
	push	OFFSET $SG226315
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strMessage$[esp+524]
	mov	BYTE PTR __$EHRec$[esp+532], 8
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233416[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2610 : 		strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_NO_RELIGIONS_AVAILABLE");

	lea	ecx, DWORD PTR $T233417[esp+520]
	push	OFFSET $SG226317
	push	ecx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strSummary$[esp+524]
	mov	BYTE PTR __$EHRec$[esp+532], 9
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233417[esp+520]

; 2611 : 		break;

	jmp	$LN129@NotifyPlay
$LN5@NotifyPlay:

; 2612 : 	case FOUNDING_INVALID_PLAYER:
; 2613 : 		break;
; 2614 : 	case FOUNDING_PLAYER_ALREADY_CREATED_RELIGION:
; 2615 : 		strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_ALREADY_CREATED_RELIGION");

	lea	edx, DWORD PTR $T233418[esp+520]
	push	OFFSET $SG226321
	push	edx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strMessage$[esp+524]
	mov	BYTE PTR __$EHRec$[esp+532], 10		; 0000000aH
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233418[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2616 : 		strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_ALREADY_CREATED_RELIGION");

	lea	eax, DWORD PTR $T233419[esp+520]
	push	OFFSET $SG226323
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strSummary$[esp+524]
	mov	BYTE PTR __$EHRec$[esp+532], 11		; 0000000bH
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233419[esp+520]

; 2617 : 		break;

	jmp	$LN129@NotifyPlay
$LN4@NotifyPlay:

; 2618 : 	case FOUNDING_PLAYER_ALREADY_CREATED_PANTHEON:
; 2619 : 		strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_ALREADY_CREATED_PANTHEON");

	lea	ecx, DWORD PTR $T233420[esp+520]
	push	OFFSET $SG226326
	push	ecx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strMessage$[esp+524]
	mov	BYTE PTR __$EHRec$[esp+532], 12		; 0000000cH
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233420[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2620 : 		strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_ALREADY_CREATED_PANTHEON");

	lea	edx, DWORD PTR $T233421[esp+520]
	push	OFFSET $SG226328
	push	edx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strSummary$[esp+524]
	mov	BYTE PTR __$EHRec$[esp+532], 13		; 0000000dH
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233421[esp+520]

; 2621 : 		break;

	jmp	$LN129@NotifyPlay
$LN3@NotifyPlay:

; 2622 : 	case FOUNDING_NAME_IN_USE:
; 2623 : 		strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_RELIGION_NAME_IN_USE");

	lea	eax, DWORD PTR $T233422[esp+520]
	push	OFFSET $SG226331
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strMessage$[esp+524]
	mov	BYTE PTR __$EHRec$[esp+532], 14		; 0000000eH
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233422[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2624 : 		strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_RELIGION_NAME_IN_USE");

	lea	ecx, DWORD PTR $T233423[esp+520]
	push	OFFSET $SG226333
	push	ecx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strSummary$[esp+524]
	mov	BYTE PTR __$EHRec$[esp+532], 15		; 0000000fH
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233423[esp+520]

; 2625 : 		break;

	jmp	SHORT $LN129@NotifyPlay
$LN2@NotifyPlay:

; 2626 : 	case FOUNDING_RELIGION_ENHANCED:
; 2627 : 		strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_ENHANCED_RELIGION_IN_USE");

	lea	edx, DWORD PTR $T233424[esp+520]
	push	OFFSET $SG226336
	push	edx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strMessage$[esp+524]
	mov	BYTE PTR __$EHRec$[esp+532], 16		; 00000010H
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233424[esp+520]
	mov	BYTE PTR __$EHRec$[esp+528], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2628 : 		strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_ENHANCED_RELIGION_IN_USE");

	lea	eax, DWORD PTR $T233425[esp+520]
	push	OFFSET $SG226338
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strSummary$[esp+524]
	mov	BYTE PTR __$EHRec$[esp+532], 17		; 00000011H
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233425[esp+520]
$LN129@NotifyPlay:
	mov	BYTE PTR __$EHRec$[esp+528], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN12@NotifyPlay:

; 2629 : 		break;
; 2630 : 	}
; 2631 : 
; 2632 : 	if(strMessage.GetLength() != 0)

	lea	ecx, DWORD PTR _strMessage$[esp+520]
	call	DWORD PTR __imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	pop	ebx
	test	eax, eax
	je	SHORT $LN1@NotifyPlay

; 2633 : 		CvNotifications::AddToPlayer(ePlayer, eNotificationType, strMessage.c_str(), strSummary.c_str());

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$[esp+532]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$[esp+536]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR _ePlayer$[esp+532]
	push	eax
	push	1903739133				; 7178c0fdH
	push	ecx
	call	?AddToPlayer@CvNotifications@@SAXW4PlayerTypes@@W4NotificationTypes@@PBD2HHHH@Z ; CvNotifications::AddToPlayer
	add	esp, 32					; 00000020H
$LN1@NotifyPlay:

; 2634 : }

	lea	ecx, DWORD PTR _strSummary$[esp+516]
	mov	BYTE PTR __$EHRec$[esp+524], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strMessage$[esp+516]
	mov	DWORD PTR __$EHRec$[esp+524], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[esp+516]
	mov	DWORD PTR fs:0, ecx
	add	esp, 516				; 00000204H
	ret	0
$LN130@NotifyPlay:
	DD	$LN10@NotifyPlay
	DD	$LN9@NotifyPlay
	DD	$LN8@NotifyPlay
	DD	$LN7@NotifyPlay
	DD	$LN12@NotifyPlay
	DD	$LN5@NotifyPlay
	DD	$LN4@NotifyPlay
	DD	$LN3@NotifyPlay
	DD	$LN2@NotifyPlay
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$0:
	lea	ecx, DWORD PTR _strMessage$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$1:
	lea	ecx, DWORD PTR _strSummary$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$2:
	lea	ecx, DWORD PTR $T233410[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$3:
	lea	ecx, DWORD PTR $T233411[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$4:
	lea	ecx, DWORD PTR $T233412[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$5:
	lea	ecx, DWORD PTR $T233413[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$6:
	lea	ecx, DWORD PTR $T233414[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$7:
	lea	ecx, DWORD PTR $T233415[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$8:
	lea	ecx, DWORD PTR $T233416[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$9:
	lea	ecx, DWORD PTR $T233417[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$10:
	lea	ecx, DWORD PTR $T233418[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$11:
	lea	ecx, DWORD PTR $T233419[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$12:
	lea	ecx, DWORD PTR $T233420[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$13:
	lea	ecx, DWORD PTR $T233421[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$14:
	lea	ecx, DWORD PTR $T233422[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$15:
	lea	ecx, DWORD PTR $T233423[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$16:
	lea	ecx, DWORD PTR $T233424[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z$17:
	lea	ecx, DWORD PTR $T233425[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z:
	mov	eax, OFFSET __ehfuncinfo$?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?NotifyPlayer@CvGameReligions@@SAXW4PlayerTypes@@W4FOUNDING_RESULT@1@@Z ENDP ; CvGameReligions::NotifyPlayer
PUBLIC	??1CvPlayerReligions@@QAE@XZ			; CvPlayerReligions::~CvPlayerReligions
; Function compile flags: /Ogtpy
;	COMDAT ??1CvPlayerReligions@@QAE@XZ
_TEXT	SEGMENT
??1CvPlayerReligions@@QAE@XZ PROC			; CvPlayerReligions::~CvPlayerReligions, COMDAT
; _this$ = ecx

; 2715 : 	Uninit();
; 2716 : }

	ret	0
??1CvPlayerReligions@@QAE@XZ ENDP			; CvPlayerReligions::~CvPlayerReligions
_TEXT	ENDS
PUBLIC	?Init@CvPlayerReligions@@QAEXPAVCvPlayer@@@Z	; CvPlayerReligions::Init
; Function compile flags: /Ogtpy
;	COMDAT ?Init@CvPlayerReligions@@QAEXPAVCvPlayer@@@Z
_TEXT	SEGMENT
_pPlayer$ = 8						; size = 4
?Init@CvPlayerReligions@@QAEXPAVCvPlayer@@@Z PROC	; CvPlayerReligions::Init, COMDAT
; _this$ = ecx

; 2721 : 	m_pPlayer = pPlayer;

	mov	eax, DWORD PTR _pPlayer$[esp-4]
	mov	DWORD PTR [ecx], eax

; 2722 : 
; 2723 : 	Reset();

	xor	eax, eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+4], eax

; 2724 : }

	ret	4
?Init@CvPlayerReligions@@QAEXPAVCvPlayer@@@Z ENDP	; CvPlayerReligions::Init
_TEXT	ENDS
PUBLIC	?Read@CvPlayerReligions@@QAEXAAVFDataStream@@@Z	; CvPlayerReligions::Read
; Function compile flags: /Ogtpy
;	COMDAT ?Read@CvPlayerReligions@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_uiVersion$ = 8						; size = 4
_kStream$ = 8						; size = 4
?Read@CvPlayerReligions@@QAEXAAVFDataStream@@@Z PROC	; CvPlayerReligions::Read, COMDAT
; _this$ = ecx

; 2741 : {

	push	esi
	push	edi

; 2742 : 	// Version number to maintain backwards compatibility
; 2743 : 	uint uiVersion;
; 2744 : 	kStream >> uiVersion;

	mov	edi, DWORD PTR _kStream$[esp+4]
	lea	eax, DWORD PTR _uiVersion$[esp+4]
	mov	esi, ecx
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 2745 : 	kStream >> m_iNumProphetsSpawned;

	lea	ecx, DWORD PTR [esi+4]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2746 : 	kStream >> m_bFoundingReligion;

	add	esi, 8
	push	esi
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	pop	edi
	pop	esi

; 2747 : }

	ret	4
?Read@CvPlayerReligions@@QAEXAAVFDataStream@@@Z ENDP	; CvPlayerReligions::Read
_TEXT	ENDS
PUBLIC	?Write@CvPlayerReligions@@QAEXAAVFDataStream@@@Z ; CvPlayerReligions::Write
; Function compile flags: /Ogtpy
;	COMDAT ?Write@CvPlayerReligions@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
_kStream$ = 8						; size = 4
?Write@CvPlayerReligions@@QAEXAAVFDataStream@@@Z PROC	; CvPlayerReligions::Write, COMDAT
; _this$ = ecx

; 2751 : {

	push	ecx
	push	esi
	push	edi

; 2752 : 	// Current version number
; 2753 : 	uint uiVersion = 1;
; 2754 : 	kStream << uiVersion;

	mov	edi, DWORD PTR _kStream$[esp+8]
	lea	eax, DWORD PTR _uiVersion$[esp+12]
	mov	esi, ecx
	push	eax
	mov	ecx, edi
	mov	DWORD PTR _uiVersion$[esp+16], 1
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 2755 : 	kStream << m_iNumProphetsSpawned;

	lea	ecx, DWORD PTR [esi+4]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2756 : 	kStream << m_bFoundingReligion;

	add	esi, 8
	push	esi
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	pop	edi
	pop	esi

; 2757 : }

	pop	ecx
	ret	4
?Write@CvPlayerReligions@@QAEXAAVFDataStream@@@Z ENDP	; CvPlayerReligions::Write
_TEXT	ENDS
PUBLIC	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z PROC ; CvCityReligions::GetNumFollowers, COMDAT
; _this$ = ecx

; 3160 : 	ReligionInCityList::iterator religionIt;
; 3161 : #endif
; 3162 : 
; 3163 : 	// Find the religion in the list
; 3164 : 	for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	ecx, DWORD PTR [eax+ecx*8]
	cmp	eax, ecx
	je	SHORT $LN2@GetNumFoll
	mov	edx, DWORD PTR _eReligion$[esp-4]
$LL4@GetNumFoll:

; 3165 : 	{
; 3166 : 		if(religionIt->m_eReligion == eReligion)

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN12@GetNumFoll
	add	eax, 24					; 00000018H
	cmp	eax, ecx
	jne	SHORT $LL4@GetNumFoll
$LN2@GetNumFoll:

; 3169 : 		}
; 3170 : 	}
; 3171 : 
; 3172 : 	return 0;

	xor	eax, eax

; 3173 : }

	ret	4
$LN12@GetNumFoll:

; 3167 : 		{
; 3168 : 			return religionIt->m_iFollowers;

	mov	eax, DWORD PTR [eax+8]

; 3173 : }

	ret	4
?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ENDP ; CvCityReligions::GetNumFollowers
_TEXT	ENDS
PUBLIC	?GetNumSimulatedFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumSimulatedFollowers
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumSimulatedFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
?GetNumSimulatedFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z PROC ; CvCityReligions::GetNumSimulatedFollowers, COMDAT
; _this$ = ecx

; 3183 : 	ReligionInCityList::iterator religionIt;
; 3184 : #endif
; 3185 : 
; 3186 : 	// Find the religion in the list
; 3187 : 	for(religionIt = m_SimulatedStatus.begin(); religionIt != m_SimulatedStatus.end(); ++religionIt)

	mov	eax, DWORD PTR [ecx+208]
	mov	edx, DWORD PTR [ecx+212]
	push	esi
	mov	esi, eax
	lea	edx, DWORD PTR [edx+edx*2]
	lea	edx, DWORD PTR [esi+edx*8]
	pop	esi
	cmp	eax, edx
	je	SHORT $LN2@GetNumSimu
	mov	edx, DWORD PTR [ecx+212]
	lea	edx, DWORD PTR [edx+edx*2]

; 3188 : 	{
; 3189 : 		if(religionIt->m_eReligion == eReligion)

	mov	ecx, eax
	lea	ecx, DWORD PTR [ecx+edx*8]
	mov	edx, DWORD PTR _eReligion$[esp-4]
	npad	4
$LL4@GetNumSimu:
	cmp	DWORD PTR [eax], edx
	je	SHORT $LN12@GetNumSimu
	add	eax, 24					; 00000018H
	cmp	eax, ecx
	jne	SHORT $LL4@GetNumSimu
$LN2@GetNumSimu:

; 3192 : 		}
; 3193 : 	}
; 3194 : 
; 3195 : 	return 0;

	xor	eax, eax

; 3196 : }

	ret	4
$LN12@GetNumSimu:

; 3190 : 		{
; 3191 : 			return religionIt->m_iFollowers;

	mov	eax, DWORD PTR [eax+8]

; 3196 : }

	ret	4
?GetNumSimulatedFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ENDP ; CvCityReligions::GetNumSimulatedFollowers
_TEXT	ENDS
PUBLIC	?GetNumReligionsWithFollowers@CvCityReligions@@QAEHXZ ; CvCityReligions::GetNumReligionsWithFollowers
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumReligionsWithFollowers@CvCityReligions@@QAEHXZ
_TEXT	SEGMENT
?GetNumReligionsWithFollowers@CvCityReligions@@QAEHXZ PROC ; CvCityReligions::GetNumReligionsWithFollowers, COMDAT
; _this$ = ecx

; 3205 : 	int iRtnValue = 0;
; 3206 : #ifdef AUI_CONSTIFY
; 3207 : 	ReligionInCityList::const_iterator religionIt;
; 3208 : #else
; 3209 : 	ReligionInCityList::iterator religionIt;
; 3210 : #endif
; 3211 : 
; 3212 : 	// Find the religion in the list
; 3213 : 	for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	ecx, DWORD PTR [edx+ecx*8]
	xor	eax, eax
	cmp	edx, ecx
	je	SHORT $LN2@GetNumReli@4
$LL4@GetNumReli@4:

; 3214 : 	{
; 3215 : 		if(religionIt->m_iFollowers > 0 && religionIt->m_eReligion > RELIGION_PANTHEON)

	cmp	DWORD PTR [edx+8], 0
	jle	SHORT $LN3@GetNumReli@4
	cmp	DWORD PTR [edx], 0
	jle	SHORT $LN3@GetNumReli@4

; 3216 : 		{
; 3217 : 			iRtnValue++;

	inc	eax
$LN3@GetNumReli@4:

; 3205 : 	int iRtnValue = 0;
; 3206 : #ifdef AUI_CONSTIFY
; 3207 : 	ReligionInCityList::const_iterator religionIt;
; 3208 : #else
; 3209 : 	ReligionInCityList::iterator religionIt;
; 3210 : #endif
; 3211 : 
; 3212 : 	// Find the religion in the list
; 3213 : 	for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	add	edx, 24					; 00000018H
	cmp	edx, ecx
	jne	SHORT $LL4@GetNumReli@4
$LN2@GetNumReli@4:

; 3218 : 		}
; 3219 : 	}
; 3220 : 
; 3221 : 	return iRtnValue;
; 3222 : }

	ret	0
?GetNumReligionsWithFollowers@CvCityReligions@@QAEHXZ ENDP ; CvCityReligions::GetNumReligionsWithFollowers
_TEXT	ENDS
PUBLIC	?IsReligionInCity@CvCityReligions@@QAE_NXZ	; CvCityReligions::IsReligionInCity
; Function compile flags: /Ogtpy
;	COMDAT ?IsReligionInCity@CvCityReligions@@QAE_NXZ
_TEXT	SEGMENT
?IsReligionInCity@CvCityReligions@@QAE_NXZ PROC		; CvCityReligions::IsReligionInCity, COMDAT
; _this$ = ecx

; 3232 : 	ReligionInCityList::iterator religionIt;
; 3233 : #endif
; 3234 : 
; 3235 : 	for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	ecx, DWORD PTR [eax+ecx*8]
	cmp	eax, ecx
	je	SHORT $LN2@IsReligion
	npad	1
$LL4@IsReligion:

; 3236 : 	{
; 3237 : 		if(religionIt->m_eReligion != NO_RELIGION)

	cmp	DWORD PTR [eax], -1
	jne	SHORT $LN12@IsReligion
	add	eax, 24					; 00000018H
	cmp	eax, ecx
	jne	SHORT $LL4@IsReligion
$LN2@IsReligion:

; 3240 : 		}
; 3241 : 	}
; 3242 : 
; 3243 : 	return false;

	xor	al, al

; 3244 : }

	ret	0
$LN12@IsReligion:

; 3238 : 		{
; 3239 : 			return true;

	mov	al, 1

; 3244 : }

	ret	0
?IsReligionInCity@CvCityReligions@@QAE_NXZ ENDP		; CvCityReligions::IsReligionInCity
_TEXT	ENDS
PUBLIC	?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsHolyCityForReligion
; Function compile flags: /Ogtpy
;	COMDAT ?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z PROC ; CvCityReligions::IsHolyCityForReligion, COMDAT
; _this$ = ecx

; 3254 : 	ReligionInCityList::iterator religionIt;
; 3255 : #endif
; 3256 : 
; 3257 : 	// Find the religion in the list
; 3258 : 	for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	ecx, DWORD PTR [eax+ecx*8]
	cmp	eax, ecx
	je	SHORT $LN2@IsHolyCity
	mov	edx, DWORD PTR _eReligion$[esp-4]
$LL4@IsHolyCity:

; 3259 : 	{
; 3260 : 		if(religionIt->m_eReligion == eReligion)

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN12@IsHolyCity
	add	eax, 24					; 00000018H
	cmp	eax, ecx
	jne	SHORT $LL4@IsHolyCity
$LN2@IsHolyCity:

; 3263 : 		}
; 3264 : 	}
; 3265 : 
; 3266 : 	return false;

	xor	al, al

; 3267 : }

	ret	4
$LN12@IsHolyCity:

; 3261 : 		{
; 3262 : 			return religionIt->m_bFoundedHere;

	mov	al, BYTE PTR [eax+4]

; 3267 : }

	ret	4
?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ENDP ; CvCityReligions::IsHolyCityForReligion
_TEXT	ENDS
PUBLIC	?IsHolyCityAnyReligion@CvCityReligions@@QAE_NXZ	; CvCityReligions::IsHolyCityAnyReligion
; Function compile flags: /Ogtpy
;	COMDAT ?IsHolyCityAnyReligion@CvCityReligions@@QAE_NXZ
_TEXT	SEGMENT
?IsHolyCityAnyReligion@CvCityReligions@@QAE_NXZ PROC	; CvCityReligions::IsHolyCityAnyReligion, COMDAT
; _this$ = ecx

; 3277 : 	ReligionInCityList::iterator religionIt;
; 3278 : #endif
; 3279 : 	for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	ecx, DWORD PTR [eax+ecx*8]
	cmp	eax, ecx
	je	SHORT $LN2@IsHolyCity@2
	npad	1
$LL4@IsHolyCity@2:

; 3280 : 	{
; 3281 : 		if(religionIt->m_bFoundedHere)

	cmp	BYTE PTR [eax+4], 0
	jne	SHORT $LN12@IsHolyCity@2
	add	eax, 24					; 00000018H
	cmp	eax, ecx
	jne	SHORT $LL4@IsHolyCity@2
$LN2@IsHolyCity@2:

; 3284 : 		}
; 3285 : 	}
; 3286 : 
; 3287 : 	return false;

	xor	al, al

; 3288 : }

	ret	0
$LN12@IsHolyCity@2:

; 3282 : 		{
; 3283 : 			return true;

	mov	al, 1

; 3288 : }

	ret	0
?IsHolyCityAnyReligion@CvCityReligions@@QAE_NXZ ENDP	; CvCityReligions::IsHolyCityAnyReligion
_TEXT	ENDS
PUBLIC	?IsReligionHereOtherThan@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsReligionHereOtherThan
; Function compile flags: /Ogtpy
;	COMDAT ?IsReligionHereOtherThan@CvCityReligions@@QAE_NW4ReligionTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
?IsReligionHereOtherThan@CvCityReligions@@QAE_NW4ReligionTypes@@@Z PROC ; CvCityReligions::IsReligionHereOtherThan, COMDAT
; _this$ = ecx

; 3298 : 	ReligionInCityList::iterator it;
; 3299 : #endif
; 3300 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3301 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 3302 : #else
; 3303 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	edx, DWORD PTR [eax+ecx*8]
	push	esi
	cmp	eax, edx
	je	SHORT $LN2@IsReligion@2
	mov	esi, DWORD PTR _eReligion$[esp]
$LL4@IsReligion@2:

; 3304 : #endif
; 3305 : 	{
; 3306 : 		if(it->m_eReligion != NO_RELIGION && it->m_eReligion != eReligion)

	mov	ecx, DWORD PTR [eax]
	cmp	ecx, -1
	je	SHORT $LN3@IsReligion@2
	cmp	ecx, esi
	jne	SHORT $LN12@IsReligion@2
$LN3@IsReligion@2:

; 3298 : 	ReligionInCityList::iterator it;
; 3299 : #endif
; 3300 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3301 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 3302 : #else
; 3303 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	add	eax, 24					; 00000018H
	cmp	eax, edx
	jne	SHORT $LL4@IsReligion@2
$LN2@IsReligion@2:

; 3309 : 		}
; 3310 : 	}
; 3311 : 	return false;

	xor	al, al
	pop	esi

; 3312 : }

	ret	4
$LN12@IsReligion@2:

; 3307 : 		{
; 3308 : 			return true;

	mov	al, 1
	pop	esi

; 3312 : }

	ret	4
?IsReligionHereOtherThan@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ENDP ; CvCityReligions::IsReligionHereOtherThan
_TEXT	ENDS
PUBLIC	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
; Function compile flags: /Ogtpy
;	COMDAT ?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ
_TEXT	SEGMENT
?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ PROC ; CvCityReligions::GetReligiousMajority, COMDAT
; _this$ = ecx

; 3384 : 	int iTotalFollowers = 0;
; 3385 : 	int iMostFollowerPressure = 0;
; 3386 : 	int iMostFollowers = -1;
; 3387 : 	ReligionTypes eMostFollowers = NO_RELIGION;
; 3388 : #ifdef AUI_CONSTIFY
; 3389 : 	ReligionInCityList::const_iterator religionIt;
; 3390 : #else
; 3391 : 	ReligionInCityList::iterator religionIt;
; 3392 : #endif
; 3393 : 
; 3394 : 	for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	push	ebx
	push	ebp
	push	esi
	or	esi, -1
	lea	ecx, DWORD PTR [ecx+ecx*2]
	push	edi
	lea	edi, DWORD PTR [edx+ecx*8]
	xor	ebp, ebp
	xor	ebx, ebx
	or	eax, esi
	cmp	edx, edi
	je	SHORT $LN5@GetReligio@3
	npad	4
$LL7@GetReligio@3:

; 3395 : 	{
; 3396 : 		iTotalFollowers += religionIt->m_iFollowers;

	mov	ecx, DWORD PTR [edx+8]
	add	ebp, ecx

; 3397 : 
; 3398 : 		if(religionIt->m_iFollowers > iMostFollowers || religionIt->m_iFollowers == iMostFollowers && religionIt->m_iPressure > iMostFollowerPressure)

	cmp	ecx, esi
	jg	SHORT $LN3@GetReligio@3
	jne	SHORT $LN6@GetReligio@3
	cmp	DWORD PTR [edx+12], ebx
	jle	SHORT $LN6@GetReligio@3
$LN3@GetReligio@3:

; 3399 : 		{
; 3400 : 			iMostFollowers = religionIt->m_iFollowers;
; 3401 : 			iMostFollowerPressure = religionIt->m_iPressure;

	mov	ebx, DWORD PTR [edx+12]

; 3402 : 			eMostFollowers = religionIt->m_eReligion;

	mov	eax, DWORD PTR [edx]
	mov	esi, ecx
$LN6@GetReligio@3:
	add	edx, 24					; 00000018H
	cmp	edx, edi
	jne	SHORT $LL7@GetReligio@3
$LN5@GetReligio@3:
	pop	edi

; 3403 : 		}
; 3404 : 	}
; 3405 : 
; 3406 : 	if ((iMostFollowers * 2) >= iTotalFollowers)

	lea	edx, DWORD PTR [esi+esi]
	pop	esi
	cmp	edx, ebp
	pop	ebp
	pop	ebx

; 3407 : 	{
; 3408 : 		return eMostFollowers;

	jge	SHORT $LN1@GetReligio@3

; 3409 : 	}
; 3410 : 	else
; 3411 : 	{
; 3412 : 		return NO_RELIGION;

	or	eax, -1
$LN1@GetReligio@3:

; 3413 : 	}
; 3414 : }

	ret	0
?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ENDP ; CvCityReligions::GetReligiousMajority
_TEXT	ENDS
PUBLIC	?GetSimulatedReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetSimulatedReligiousMajority
; Function compile flags: /Ogtpy
;	COMDAT ?GetSimulatedReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ
_TEXT	SEGMENT
?GetSimulatedReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ PROC ; CvCityReligions::GetSimulatedReligiousMajority, COMDAT
; _this$ = ecx

; 3422 : {

	push	ecx

; 3423 : 	int iTotalFollowers = 0;
; 3424 : 	int iMostFollowerPressure = 0;
; 3425 : 	int iMostFollowers = -1;
; 3426 : 	ReligionTypes eMostFollowers = NO_RELIGION;
; 3427 : #ifdef AUI_CONSTIFY
; 3428 : 	ReligionInCityList::const_iterator religionIt;
; 3429 : #else
; 3430 : 	ReligionInCityList::iterator religionIt;
; 3431 : #endif
; 3432 : 
; 3433 : 	for(religionIt = m_SimulatedStatus.begin(); religionIt != m_SimulatedStatus.end(); ++religionIt)

	mov	edx, DWORD PTR [ecx+208]
	push	ebx
	push	ebp
	push	esi
	mov	esi, DWORD PTR [ecx+212]
	lea	eax, DWORD PTR [esi+esi*2]
	mov	esi, edx
	push	edi
	lea	eax, DWORD PTR [esi+eax*8]
	xor	ebp, ebp
	xor	ebx, ebx
	or	edi, -1
	cmp	edx, eax
	je	SHORT $LN16@GetSimulat
	mov	esi, DWORD PTR [ecx+212]
	lea	eax, DWORD PTR [esi+esi*2]
	mov	ecx, edx
	lea	esi, DWORD PTR [ecx+eax*8]
	mov	eax, edi
$LL7@GetSimulat:

; 3434 : 	{
; 3435 : 		iTotalFollowers += religionIt->m_iFollowers;

	mov	ecx, DWORD PTR [edx+8]
	add	ebp, ecx

; 3436 : 
; 3437 : 		if(religionIt->m_iFollowers > iMostFollowers || religionIt->m_iFollowers == iMostFollowers && religionIt->m_iPressure > iMostFollowerPressure)

	cmp	ecx, edi
	jg	SHORT $LN3@GetSimulat
	jne	SHORT $LN6@GetSimulat
	cmp	DWORD PTR [edx+12], ebx
	jle	SHORT $LN6@GetSimulat
$LN3@GetSimulat:

; 3438 : 		{
; 3439 : 			iMostFollowers = religionIt->m_iFollowers;
; 3440 : 			iMostFollowerPressure = religionIt->m_iPressure;

	mov	ebx, DWORD PTR [edx+12]

; 3441 : 			eMostFollowers = religionIt->m_eReligion;

	mov	eax, DWORD PTR [edx]
	mov	edi, ecx
$LN6@GetSimulat:
	add	edx, 24					; 00000018H
	cmp	edx, esi
	jne	SHORT $LL7@GetSimulat

; 3423 : 	int iTotalFollowers = 0;
; 3424 : 	int iMostFollowerPressure = 0;
; 3425 : 	int iMostFollowers = -1;
; 3426 : 	ReligionTypes eMostFollowers = NO_RELIGION;
; 3427 : #ifdef AUI_CONSTIFY
; 3428 : 	ReligionInCityList::const_iterator religionIt;
; 3429 : #else
; 3430 : 	ReligionInCityList::iterator religionIt;
; 3431 : #endif
; 3432 : 
; 3433 : 	for(religionIt = m_SimulatedStatus.begin(); religionIt != m_SimulatedStatus.end(); ++religionIt)

	jmp	SHORT $LN5@GetSimulat
$LN16@GetSimulat:
	mov	eax, edi
$LN5@GetSimulat:

; 3442 : 		}
; 3443 : 	}
; 3444 : 
; 3445 : 	if ((iMostFollowers * 2) >= iTotalFollowers)

	lea	edx, DWORD PTR [edi+edi]
	pop	edi
	pop	esi
	cmp	edx, ebp
	pop	ebp
	pop	ebx

; 3446 : 	{
; 3447 : 		return eMostFollowers;

	jge	SHORT $LN1@GetSimulat

; 3448 : 	}
; 3449 : 	else
; 3450 : 	{
; 3451 : 		return NO_RELIGION;

	or	eax, -1
$LN1@GetSimulat:

; 3452 : 	}
; 3453 : }

	pop	ecx
	ret	0
?GetSimulatedReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ENDP ; CvCityReligions::GetSimulatedReligiousMajority
_TEXT	ENDS
PUBLIC	?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetSecondaryReligion
; Function compile flags: /Ogtpy
;	COMDAT ?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ
_TEXT	SEGMENT
_eMajority$ = -8					; size = 4
$T233762 = -4						; size = 4
?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ PROC ; CvCityReligions::GetSecondaryReligion, COMDAT
; _this$ = ecx

; 3461 : {

	sub	esp, 8
	push	ebx
	push	ebp
	push	esi

; 3462 : 	int iMostFollowers = -1;

	or	ebx, -1
	mov	esi, ecx

; 3463 : 	int iMostPressure = -1;

	or	ebp, ebx

; 3464 : 	ReligionTypes eMajority = GetReligiousMajority();

	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	edx, eax

; 3465 : 	ReligionTypes eMostFollowers = NO_RELIGION;

	or	eax, ebx
	mov	DWORD PTR _eMajority$[esp+20], edx

; 3466 : #ifdef AUI_CONSTIFY
; 3467 : 	ReligionInCityList::const_iterator religionIt;
; 3468 : #else
; 3469 : 	ReligionInCityList::iterator religionIt;
; 3470 : #endif
; 3471 : 
; 3472 : 	if (eMajority != NO_RELIGION)

	cmp	edx, ebx
	je	SHORT $LN5@GetSeconda

; 3473 : 	{	
; 3474 : 		for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	mov	ecx, DWORD PTR [esi]
	mov	esi, DWORD PTR [esi+4]
	lea	esi, DWORD PTR [esi+esi*2]
	lea	esi, DWORD PTR [ecx+esi*8]
	mov	DWORD PTR $T233762[esp+20], esi
	cmp	ecx, esi
	je	SHORT $LN5@GetSeconda
	push	edi
	jmp	SHORT $LN7@GetSeconda
$LL20@GetSeconda:
	mov	edx, DWORD PTR _eMajority$[esp+24]
$LN7@GetSeconda:

; 3475 : 		{
; 3476 : 			if (religionIt->m_eReligion != eMajority && religionIt->m_eReligion > RELIGION_PANTHEON && religionIt->m_iFollowers > 0)

	mov	esi, DWORD PTR [ecx]
	cmp	esi, edx
	je	SHORT $LN6@GetSeconda
	test	esi, esi
	jle	SHORT $LN6@GetSeconda
	mov	edx, DWORD PTR [ecx+8]
	test	edx, edx
	jle	SHORT $LN6@GetSeconda

; 3477 : 			{
; 3478 : 				if (religionIt->m_iFollowers > iMostFollowers)

	cmp	edx, ebx
	jle	SHORT $LN21@GetSeconda

; 3479 : 				{
; 3480 : 					iMostFollowers = religionIt->m_iFollowers;
; 3481 : 					eMostFollowers = religionIt->m_eReligion;
; 3482 : 					iMostPressure = religionIt->m_iPressure;

	mov	ebp, DWORD PTR [ecx+12]
	jmp	SHORT $LN22@GetSeconda
$LN21@GetSeconda:

; 3483 : 				}
; 3484 : 				else if (religionIt->m_iFollowers == iMostFollowers && religionIt->m_iPressure > iMostPressure)

	jne	SHORT $LN6@GetSeconda
	mov	edi, DWORD PTR [ecx+12]
	cmp	edi, ebp
	jle	SHORT $LN6@GetSeconda

; 3488 : 					iMostPressure = religionIt->m_iPressure;

	mov	ebp, edi
$LN22@GetSeconda:

; 3485 : 				{
; 3486 : 					iMostFollowers = religionIt->m_iFollowers;
; 3487 : 					eMostFollowers = religionIt->m_eReligion;

	mov	eax, esi
	mov	ebx, edx
$LN6@GetSeconda:
	add	ecx, 24					; 00000018H
	cmp	ecx, DWORD PTR $T233762[esp+24]
	jne	SHORT $LL20@GetSeconda
	pop	edi
$LN5@GetSeconda:
	pop	esi
	pop	ebp
	pop	ebx

; 3489 : 				}
; 3490 : 			}
; 3491 : 		}
; 3492 : 	}
; 3493 : 
; 3494 : 	return eMostFollowers;
; 3495 : }

	add	esp, 8
	ret	0
?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ENDP ; CvCityReligions::GetSecondaryReligion
_TEXT	ENDS
PUBLIC	?GetFollowersOtherReligions@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetFollowersOtherReligions
; Function compile flags: /Ogtpy
;	COMDAT ?GetFollowersOtherReligions@CvCityReligions@@QAEHW4ReligionTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
?GetFollowersOtherReligions@CvCityReligions@@QAEHW4ReligionTypes@@@Z PROC ; CvCityReligions::GetFollowersOtherReligions, COMDAT
; _this$ = ecx

; 3539 : 	int iOtherFollowers = 0;
; 3540 : #ifdef AUI_CONSTIFY
; 3541 : 	ReligionInCityList::const_iterator religionIt;
; 3542 : #else
; 3543 : 	ReligionInCityList::iterator religionIt;
; 3544 : #endif
; 3545 : 
; 3546 : 	for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	push	esi
	lea	esi, DWORD PTR [edx+ecx*8]
	xor	eax, eax
	cmp	edx, esi
	je	SHORT $LN2@GetFollowe
	push	edi
	mov	edi, DWORD PTR _eReligion$[esp+4]
$LL4@GetFollowe:

; 3547 : 	{
; 3548 : 		if (religionIt->m_eReligion > RELIGION_PANTHEON && religionIt->m_eReligion != eReligion)

	mov	ecx, DWORD PTR [edx]
	test	ecx, ecx
	jle	SHORT $LN3@GetFollowe
	cmp	ecx, edi
	je	SHORT $LN3@GetFollowe

; 3549 : 		{
; 3550 : 			iOtherFollowers += religionIt->m_iFollowers;

	add	eax, DWORD PTR [edx+8]
$LN3@GetFollowe:

; 3539 : 	int iOtherFollowers = 0;
; 3540 : #ifdef AUI_CONSTIFY
; 3541 : 	ReligionInCityList::const_iterator religionIt;
; 3542 : #else
; 3543 : 	ReligionInCityList::iterator religionIt;
; 3544 : #endif
; 3545 : 
; 3546 : 	for(religionIt = m_ReligionStatus.begin(); religionIt != m_ReligionStatus.end(); ++religionIt)

	add	edx, 24					; 00000018H
	cmp	edx, esi
	jne	SHORT $LL4@GetFollowe
	pop	edi
$LN2@GetFollowe:
	pop	esi

; 3551 : 		}
; 3552 : 	}
; 3553 : 
; 3554 : 	return iOtherFollowers;
; 3555 : }

	ret	4
?GetFollowersOtherReligions@CvCityReligions@@QAEHW4ReligionTypes@@@Z ENDP ; CvCityReligions::GetFollowersOtherReligions
_TEXT	ENDS
PUBLIC	?GetTotalPressure@CvCityReligions@@QAEHXZ	; CvCityReligions::GetTotalPressure
; Function compile flags: /Ogtpy
;	COMDAT ?GetTotalPressure@CvCityReligions@@QAEHXZ
_TEXT	SEGMENT
?GetTotalPressure@CvCityReligions@@QAEHXZ PROC		; CvCityReligions::GetTotalPressure, COMDAT
; _this$ = ecx

; 3564 : 	int iTotalPressure = 0;
; 3565 : 
; 3566 : #ifdef AUI_CONSTIFY
; 3567 : 	ReligionInCityList::const_iterator it;
; 3568 : #else
; 3569 : 	ReligionInCityList::iterator it;
; 3570 : #endif
; 3571 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3572 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 3573 : #else
; 3574 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	ecx, DWORD PTR [edx+ecx*8]
	xor	eax, eax
	cmp	edx, ecx
	je	SHORT $LN1@GetTotalPr
$LL3@GetTotalPr:

; 3575 : #endif
; 3576 : 	{
; 3577 : 		iTotalPressure += it->m_iPressure;

	add	eax, DWORD PTR [edx+12]
	add	edx, 24					; 00000018H
	cmp	edx, ecx
	jne	SHORT $LL3@GetTotalPr
$LN1@GetTotalPr:

; 3578 : 	}
; 3579 : 
; 3580 : 	return iTotalPressure;
; 3581 : }

	ret	0
?GetTotalPressure@CvCityReligions@@QAEHXZ ENDP		; CvCityReligions::GetTotalPressure
_TEXT	ENDS
PUBLIC	?GetPressure@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetPressure
; Function compile flags: /Ogtpy
;	COMDAT ?GetPressure@CvCityReligions@@QAEHW4ReligionTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
?GetPressure@CvCityReligions@@QAEHW4ReligionTypes@@@Z PROC ; CvCityReligions::GetPressure, COMDAT
; _this$ = ecx

; 3591 : 	ReligionInCityList::iterator it;
; 3592 : #endif
; 3593 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3594 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 3595 : #else
; 3596 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	ecx, DWORD PTR [eax+ecx*8]
	cmp	eax, ecx
	je	SHORT $LN2@GetPressur
	mov	edx, DWORD PTR _eReligion$[esp-4]
$LL4@GetPressur:

; 3597 : #endif
; 3598 : 	{
; 3599 : 		if(it->m_eReligion == eReligion)

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN12@GetPressur
	add	eax, 24					; 00000018H
	cmp	eax, ecx
	jne	SHORT $LL4@GetPressur
$LN2@GetPressur:

; 3602 : 		}
; 3603 : 	}
; 3604 : 
; 3605 : 	return 0;

	xor	eax, eax

; 3606 : }

	ret	4
$LN12@GetPressur:

; 3600 : 		{
; 3601 : 			return it->m_iPressure;

	mov	eax, DWORD PTR [eax+12]

; 3606 : }

	ret	4
?GetPressure@CvCityReligions@@QAEHW4ReligionTypes@@@Z ENDP ; CvCityReligions::GetPressure
_TEXT	ENDS
PUBLIC	?GetNumTradeRouteConnections@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumTradeRouteConnections
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumTradeRouteConnections@CvCityReligions@@QAEHW4ReligionTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
?GetNumTradeRouteConnections@CvCityReligions@@QAEHW4ReligionTypes@@@Z PROC ; CvCityReligions::GetNumTradeRouteConnections, COMDAT
; _this$ = ecx

; 3666 : 	ReligionInCityList::iterator it;
; 3667 : #endif
; 3668 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3669 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 3670 : #else
; 3671 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	ecx, DWORD PTR [eax+ecx*8]
	cmp	eax, ecx
	je	SHORT $LN2@GetNumTrad
	mov	edx, DWORD PTR _eReligion$[esp-4]
$LL4@GetNumTrad:

; 3672 : #endif
; 3673 : 	{
; 3674 : 		if(it->m_eReligion == eReligion)

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN12@GetNumTrad
	add	eax, 24					; 00000018H
	cmp	eax, ecx
	jne	SHORT $LL4@GetNumTrad
$LN2@GetNumTrad:

; 3677 : 		}
; 3678 : 	}
; 3679 : 
; 3680 : 	return 0;

	xor	eax, eax

; 3681 : }

	ret	4
$LN12@GetNumTrad:

; 3675 : 		{
; 3676 : 			return it->m_iNumTradeRoutesApplyingPressure;

	mov	eax, DWORD PTR [eax+16]

; 3681 : }

	ret	4
?GetNumTradeRouteConnections@CvCityReligions@@QAEHW4ReligionTypes@@@Z ENDP ; CvCityReligions::GetNumTradeRouteConnections
_TEXT	ENDS
PUBLIC	?IncrementNumTradeRouteConnections@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::IncrementNumTradeRouteConnections
; Function compile flags: /Ogtpy
;	COMDAT ?IncrementNumTradeRouteConnections@CvCityReligions@@QAEXW4ReligionTypes@@H@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
_iNum$ = 12						; size = 4
?IncrementNumTradeRouteConnections@CvCityReligions@@QAEXW4ReligionTypes@@H@Z PROC ; CvCityReligions::IncrementNumTradeRouteConnections, COMDAT
; _this$ = ecx

; 4229 : 	ReligionInCityList::iterator it;
; 4230 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4231 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4232 : #else
; 4233 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	ecx, DWORD PTR [eax+ecx*8]
	cmp	eax, ecx
	je	SHORT $LN2@IncrementN
	mov	edx, DWORD PTR _eReligion$[esp-4]
$LL4@IncrementN:

; 4234 : #endif
; 4235 : 	{
; 4236 : 		if(it->m_eReligion == eReligion)

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN12@IncrementN
	add	eax, 24					; 00000018H
	cmp	eax, ecx
	jne	SHORT $LL4@IncrementN

; 4239 : 			break;
; 4240 : 		}
; 4241 : 	}
; 4242 : }

	ret	8
$LN12@IncrementN:

; 4237 : 		{
; 4238 : 			it->m_iNumTradeRoutesApplyingPressure += iNum;

	mov	edx, DWORD PTR _iNum$[esp-4]
	add	DWORD PTR [eax+16], edx
$LN2@IncrementN:

; 4239 : 			break;
; 4240 : 		}
; 4241 : 	}
; 4242 : }

	ret	8
?IncrementNumTradeRouteConnections@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ENDP ; CvCityReligions::IncrementNumTradeRouteConnections
_TEXT	ENDS
PUBLIC	?ResetNumTradeRoutePressure@CvCityReligions@@QAEXXZ ; CvCityReligions::ResetNumTradeRoutePressure
; Function compile flags: /Ogtpy
;	COMDAT ?ResetNumTradeRoutePressure@CvCityReligions@@QAEXXZ
_TEXT	SEGMENT
?ResetNumTradeRoutePressure@CvCityReligions@@QAEXXZ PROC ; CvCityReligions::ResetNumTradeRoutePressure, COMDAT
; _this$ = ecx

; 4275 : 	ReligionInCityList::iterator it;
; 4276 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4277 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4278 : #else
; 4279 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx]
	lea	edx, DWORD PTR [edx+edx*2]
	lea	edx, DWORD PTR [eax+edx*8]
	cmp	eax, edx
	je	SHORT $LN1@ResetNumTr
	push	edi
$LL3@ResetNumTr:

; 4280 : #endif
; 4281 : 	{
; 4282 : 		it->m_iNumTradeRoutesApplyingPressure = 0;

	mov	DWORD PTR [eax+16], 0
	mov	edx, DWORD PTR [ecx+4]
	mov	edi, DWORD PTR [ecx]
	lea	edx, DWORD PTR [edx+edx*2]
	add	eax, 24					; 00000018H
	lea	edx, DWORD PTR [edi+edx*8]
	cmp	eax, edx
	jne	SHORT $LL3@ResetNumTr
	pop	edi
$LN1@ResetNumTr:

; 4283 : 	}
; 4284 : }

	ret	0
?ResetNumTradeRoutePressure@CvCityReligions@@QAEXXZ ENDP ; CvCityReligions::ResetNumTradeRoutePressure
_TEXT	ENDS
PUBLIC	?SimulateFollowers@CvCityReligions@@AAEXXZ	; CvCityReligions::SimulateFollowers
EXTRN	?getPopulation@CvCity@@QBEHXZ:PROC		; CvCity::getPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?SimulateFollowers@CvCityReligions@@AAEXXZ
_TEXT	SEGMENT
tv157 = -4						; size = 4
?SimulateFollowers@CvCityReligions@@AAEXXZ PROC		; CvCityReligions::SimulateFollowers, COMDAT
; _this$ = ecx

; 4382 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 4383 : 	int iUnassignedFollowers = m_pCity->getPopulation();

	mov	ecx, DWORD PTR [esi+416]
	push	edi
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation

; 4384 : 	int iPressurePerFollower;
; 4385 : 
; 4386 : 	// Find total pressure
; 4387 : 	int iTotalPressure = 0;
; 4388 : 	ReligionInCityList::iterator it;
; 4389 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4390 : 	for (it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); ++it)
; 4391 : #else
; 4392 : 	for(it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); it++)

	mov	ecx, DWORD PTR [esi+208]
	mov	edi, DWORD PTR [esi+212]
	lea	edi, DWORD PTR [edi+edi*2]
	mov	ebx, ecx
	mov	ebp, eax
	mov	edx, ecx
	lea	edi, DWORD PTR [ebx+edi*8]
	xor	eax, eax
	cmp	edx, edi
	je	$LN12@SimulateFo
	mov	edi, DWORD PTR [esi+212]
	lea	edi, DWORD PTR [edi+edi*2]
	lea	edi, DWORD PTR [ebx+edi*8]
$LL16@SimulateFo:

; 4393 : #endif
; 4394 : 	{
; 4395 : 		iTotalPressure += it->m_iPressure;

	add	eax, DWORD PTR [edx+12]
	add	edx, 24					; 00000018H
	cmp	edx, edi
	jne	SHORT $LL16@SimulateFo

; 4396 : 	}
; 4397 : 
; 4398 : 	// safety check
; 4399 : 	if (iTotalPressure == 0 || iUnassignedFollowers == 0)

	test	eax, eax
	je	$LN12@SimulateFo
	test	ebp, ebp
	je	$LN12@SimulateFo

; 4400 : 	{
; 4401 : 		CvAssertMsg(false, "Internal religion data error. Send save to Ed");
; 4402 : 		return;
; 4403 : 	}
; 4404 : 
; 4405 : 	iPressurePerFollower = iTotalPressure / iUnassignedFollowers;

	cdq
	idiv	ebp

; 4406 : 
; 4407 : 	// Loop through each religion
; 4408 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4409 : 	for (it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); ++it)
; 4410 : #else
; 4411 : 	for(it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); it++)

	mov	edx, ecx
	mov	ebx, eax
	mov	eax, DWORD PTR [esi+212]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [edx+eax*8]
	cmp	ecx, eax
	je	SHORT $LN9@SimulateFo
$LL11@SimulateFo:

; 4412 : #endif
; 4413 : 	{
; 4414 : 		it->m_iFollowers = it->m_iPressure / iPressurePerFollower;

	mov	edi, DWORD PTR [ecx+12]
	mov	eax, edi
	cdq
	idiv	ebx
	add	ecx, 24					; 00000018H
	mov	DWORD PTR [ecx-16], eax

; 4415 : 		iUnassignedFollowers -= it->m_iFollowers;

	sub	ebp, eax

; 4416 : 		it->m_iTemp = it->m_iPressure - (it->m_iFollowers * iPressurePerFollower);  // Remainder

	imul	eax, ebx
	sub	edi, eax
	mov	DWORD PTR [ecx-4], edi
	mov	eax, DWORD PTR [esi+212]
	lea	edx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR [esi+208]
	lea	edx, DWORD PTR [eax+edx*8]
	cmp	ecx, edx
	jne	SHORT $LL11@SimulateFo
$LN9@SimulateFo:

; 4417 : 	}
; 4418 : 
; 4419 : 	// Assign out the remainder
; 4420 : 	for (int iI = 0; iI < iUnassignedFollowers; iI++)

	test	ebp, ebp
	jle	SHORT $LN12@SimulateFo
	mov	DWORD PTR tv157[esp+20], ebp
	mov	ebp, 1
	npad	4
$LL39@SimulateFo:

; 4421 : 	{
; 4422 : 		ReligionInCityList::iterator itLargestRemainder = NULL;
; 4423 : 		int iLargestRemainder = 0;
; 4424 : 
; 4425 : #ifdef AUI_WARNING_FIXES
; 4426 : 		for (it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end() && it; ++it)
; 4427 : #else
; 4428 : 		for (it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); it++)

	mov	eax, DWORD PTR [esi+208]
	mov	ecx, DWORD PTR [esi+212]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	mov	ebx, eax
	lea	ebx, DWORD PTR [ebx+ecx*8]
	xor	edi, edi
	xor	edx, edx
	cmp	eax, ebx
	je	SHORT $LN7@SimulateFo
	npad	4
$LL5@SimulateFo:

; 4429 : #endif
; 4430 : 		{
; 4431 : 			if (it->m_iTemp > iLargestRemainder)

	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, edx
	jle	SHORT $LN4@SimulateFo

; 4432 : 			{
; 4433 : 				iLargestRemainder = it->m_iTemp;

	mov	edx, ecx

; 4434 : 				itLargestRemainder = it;

	mov	edi, eax
$LN4@SimulateFo:
	add	eax, 24					; 00000018H
	cmp	eax, ebx
	jne	SHORT $LL5@SimulateFo

; 4435 : 			}
; 4436 : 		}
; 4437 : 
; 4438 : 		if (itLargestRemainder && iLargestRemainder > 0)

	test	edi, edi
	je	SHORT $LN7@SimulateFo
	test	edx, edx
	jle	SHORT $LN7@SimulateFo

; 4439 : 		{
; 4440 : 			itLargestRemainder->m_iFollowers++;

	add	DWORD PTR [edi+8], ebp

; 4441 : 			itLargestRemainder->m_iTemp = 0;

	mov	DWORD PTR [edi+20], 0
$LN7@SimulateFo:

; 4417 : 	}
; 4418 : 
; 4419 : 	// Assign out the remainder
; 4420 : 	for (int iI = 0; iI < iUnassignedFollowers; iI++)

	sub	DWORD PTR tv157[esp+20], ebp
	jne	SHORT $LL39@SimulateFo
$LN12@SimulateFo:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 4442 : 		}
; 4443 : 	}
; 4444 : }

	pop	ecx
	ret	0
?SimulateFollowers@CvCityReligions@@AAEXXZ ENDP		; CvCityReligions::SimulateFollowers
_TEXT	ENDS
PUBLIC	?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z ; CvCityReligions::LogFollowersChange
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z:PROC
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z:PROC
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	?getName@CvCity@@QBE?BVCvString@@XZ:PROC	; CvCity::getName
EXTRN	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ:PROC ; CvGame::GetGameReligions
EXTRN	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ:PROC ; CvCity::GetCityReligions
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__ehfuncinfo$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$6
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z
_TEXT	SEGMENT
_strOutBuf$227261 = -156				; size = 28
_strReasonString$227262 = -128				; size = 28
_pLog$227264 = -100					; size = 4
_temp$227263 = -96					; size = 28
$T233884 = -68						; size = 28
$T233883 = -68						; size = 28
$T233882 = -68						; size = 28
$T233881 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_eReason$ = 8						; size = 4
?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z PROC ; CvCityReligions::LogFollowersChange, COMDAT
; _this$ = ecx

; 4671 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 144				; 00000090H
	push	ebp
	mov	ebp, ecx

; 4672 : 	if(GC.getLogging() && GC.getAILogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	$LN20@LogFollowe
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getAILogging@CvGlobals@@QAE_NXZ	; CvGlobals::getAILogging
	test	al, al
	je	$LN20@LogFollowe
	push	ebx
	push	esi
	push	edi

; 4673 : 	{
; 4674 : 		CvString strOutBuf;

	lea	ecx, DWORD PTR _strOutBuf$227261[esp+172]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4675 : 		CvString strReasonString;

	lea	ecx, DWORD PTR _strReasonString$227262[esp+172]
	mov	DWORD PTR __$EHRec$[esp+180], 0
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4676 : 		CvString temp;

	lea	ecx, DWORD PTR _temp$227263[esp+172]
	mov	BYTE PTR __$EHRec$[esp+180], 1
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4677 : 		FILogFile* pLog;
; 4678 : 		CvCityReligions* pCityRel = m_pCity->GetCityReligions();

	mov	ecx, DWORD PTR [ebp+416]
	mov	bl, 2
	mov	BYTE PTR __$EHRec$[esp+180], bl
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	edi, eax

; 4679 : 
; 4680 : 		pLog = LOGFILEMGR.GetLog(GC.getGame().GetGameReligions()->GetLogFileName(), FILogFile::kDontTimeStamp);

	call	?GetInstance@FILogFileMgr@@SAAAV1@XZ	; FILogFileMgr::GetInstance
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	esi, eax
	lea	eax, DWORD PTR $T233881[esp+172]
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ ; CvGameReligions::GetLogFileName
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+180], 3
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	edx, DWORD PTR [esi]
	push	0
	push	1
	push	eax
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR $T233881[esp+172]
	mov	DWORD PTR _pLog$227264[esp+172], eax
	mov	BYTE PTR __$EHRec$[esp+180], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4681 : 
; 4682 : 		// Get the leading info for this line
; 4683 : 		strOutBuf.Format("%03d, %d, ", GC.getGame().getElapsedGameTurns(), GC.getGame().getGameTurnYear());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	esi, ecx
	call	?getGameTurnYear@CvGame@@QAEHXZ		; CvGame::getGameTurnYear
	push	eax
	mov	ecx, esi
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$227261[esp+180]
	push	OFFSET $SG227267
	push	ecx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format

; 4684 : 		strOutBuf += m_pCity->getName();

	mov	ecx, DWORD PTR [ebp+416]
	add	esp, 16					; 00000010H
	lea	edx, DWORD PTR $T233882[esp+172]
	push	edx
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$227261[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], 4
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233882[esp+172]
	mov	BYTE PTR __$EHRec$[esp+180], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4685 : 		strOutBuf += ", ";

	push	OFFSET $SG227269
	lea	ecx, DWORD PTR _strOutBuf$227261[esp+176]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 4686 : 
; 4687 : 		// Add a reason string
; 4688 : 		switch(eReason)

	mov	eax, DWORD PTR _eReason$[esp+168]
	cmp	eax, 10					; 0000000aH
	ja	SHORT $LN18@LogFollowe
	jmp	DWORD PTR $LN87@LogFollowe[eax*4]
$LN17@LogFollowe:

; 4689 : 		{
; 4690 : 		case FOLLOWER_CHANGE_ADJACENT_PRESSURE:
; 4691 : 			strReasonString = "Adjacent city pressure";

	push	OFFSET $SG227275

; 4692 : 			break;

	jmp	SHORT $LN86@LogFollowe
$LN16@LogFollowe:

; 4693 : 		case FOLLOWER_CHANGE_HOLY_CITY:
; 4694 : 			strReasonString = "Holy city pressure";

	push	OFFSET $SG227277

; 4695 : 			break;

	jmp	SHORT $LN86@LogFollowe
$LN15@LogFollowe:

; 4696 : 		case FOLLOWER_CHANGE_POP_CHANGE:
; 4697 : 			strReasonString = "Population change";

	push	OFFSET $SG227279

; 4698 : 			break;

	jmp	SHORT $LN86@LogFollowe
$LN14@LogFollowe:

; 4699 : 		case FOLLOWER_CHANGE_RELIGION_FOUNDED:
; 4700 : 			strReasonString = "Religion founded";

	push	OFFSET $SG227281

; 4701 : 			break;

	jmp	SHORT $LN86@LogFollowe
$LN13@LogFollowe:

; 4702 : 		case FOLLOWER_CHANGE_PANTHEON_FOUNDED:
; 4703 : 			strReasonString = "Pantheon founded";

	push	OFFSET $SG227283

; 4704 : 			break;

	jmp	SHORT $LN86@LogFollowe
$LN12@LogFollowe:

; 4705 : 		case FOLLOWER_CHANGE_CONQUEST:
; 4706 : 			strReasonString = "City captured";

	push	OFFSET $SG227285

; 4707 : 			break;

	jmp	SHORT $LN86@LogFollowe
$LN11@LogFollowe:

; 4708 : 		case FOLLOWER_CHANGE_MISSIONARY:
; 4709 : 			strReasonString = "Missionary expended";

	push	OFFSET $SG227287

; 4710 : 			break;

	jmp	SHORT $LN86@LogFollowe
$LN10@LogFollowe:

; 4711 : 		case FOLLOWER_CHANGE_PROPHET:
; 4712 : 			strReasonString = "Prophet spreading";

	push	OFFSET $SG227289

; 4713 : 			break;

	jmp	SHORT $LN86@LogFollowe
$LN9@LogFollowe:

; 4714 : 		case FOLLOWER_CHANGE_REMOVE_HERESY:
; 4715 : 			strReasonString = "Remove heresy";

	push	OFFSET $SG227291

; 4716 : 			break;

	jmp	SHORT $LN86@LogFollowe
$LN8@LogFollowe:

; 4717 : 		case FOLLOWER_CHANGE_SCRIPTED_CONVERSION:
; 4718 : 			strReasonString = "Scripted conversion";

	push	OFFSET $SG227293

; 4719 : 			break;

	jmp	SHORT $LN86@LogFollowe
$LN7@LogFollowe:

; 4720 : 		case FOLLOWER_CHANGE_SPY_PRESSURE:
; 4721 : 			strReasonString = "Spy pressure";

	push	OFFSET $SG227295
$LN86@LogFollowe:
	lea	ecx, DWORD PTR _strReasonString$227262[esp+176]
	call	??4CvString@@QAEAAV0@PBD@Z		; CvString::operator=
$LN18@LogFollowe:

; 4722 : 			break;
; 4723 : 		}
; 4724 : 		strOutBuf += strReasonString + ", ";

	push	OFFSET $SG227297
	lea	eax, DWORD PTR _strReasonString$227262[esp+176]
	push	eax
	lea	ecx, DWORD PTR $T233883[esp+180]
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$227261[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], 5
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233883[esp+172]
	mov	BYTE PTR __$EHRec$[esp+180], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4725 : 		temp.Format("Pop: %d", m_pCity->getPopulation());

	mov	ecx, DWORD PTR [ebp+416]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	push	eax
	lea	edx, DWORD PTR _temp$227263[esp+176]
	push	OFFSET $SG227298
	push	edx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format
	add	esp, 12					; 0000000cH

; 4726 : 		strOutBuf += temp;

	lea	eax, DWORD PTR _temp$227263[esp+172]
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$227261[esp+176]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 4727 : 		if(pCityRel->IsReligionInCity())

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	ecx, DWORD PTR [eax+ecx*8]
	cmp	eax, ecx
	je	SHORT $LN84@LogFollowe
	npad	3
$LL56@LogFollowe:
	cmp	DWORD PTR [eax], -1
	jne	$LN81@LogFollowe
	add	eax, 24					; 00000018H
	cmp	eax, ecx
	jne	SHORT $LL56@LogFollowe
$LN84@LogFollowe:

; 4759 : 		{
; 4760 : 			strOutBuf += ", No religion in city";

	push	OFFSET $SG227316
	lea	ecx, DWORD PTR _strOutBuf$227261[esp+176]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN1@LogFollowe:

; 4761 : 		}
; 4762 : 
; 4763 : 		pLog->Msg(strOutBuf);

	lea	ecx, DWORD PTR _strOutBuf$227261[esp+172]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR _pLog$227264[esp+172]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx]
	push	ecx
	call	eax
	add	esp, 8

; 4764 : 	}

	lea	ecx, DWORD PTR _temp$227263[esp+172]
	mov	BYTE PTR __$EHRec$[esp+180], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strReasonString$227262[esp+172]
	mov	BYTE PTR __$EHRec$[esp+180], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strOutBuf$227261[esp+172]
	mov	DWORD PTR __$EHRec$[esp+180], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
$LN20@LogFollowe:

; 4765 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+160]
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	add	esp, 156				; 0000009cH
	ret	4
$LN81@LogFollowe:

; 4728 : 		{
; 4729 : 			ReligionTypes eMajority = pCityRel->GetReligiousMajority();

	mov	ecx, edi
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	esi, eax

; 4730 : 			if(eMajority != NO_RELIGION)

	cmp	esi, -1
	je	SHORT $LN82@LogFollowe

; 4731 : 			{
; 4732 : 				CvReligionEntry* pEntry = GC.getReligionInfo(eMajority);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo
	mov	ebp, eax

; 4733 : 				if(pEntry)

	test	ebp, ebp
	je	SHORT $LN82@LogFollowe

; 4734 : 				{
; 4735 : 					strOutBuf += ", Majority: ";

	push	OFFSET $SG227304
	lea	ecx, DWORD PTR _strOutBuf$227261[esp+176]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 4736 : 					strOutBuf += pEntry->GetDescription();

	lea	ecx, DWORD PTR [ebp+36]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$227261[esp+176]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 4737 : 					temp.Format("(%d)", pCityRel->GetNumFollowers(eMajority));

	push	esi
	mov	ecx, edi
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers
	push	eax
	lea	edx, DWORD PTR _temp$227263[esp+176]
	push	OFFSET $SG227305
	push	edx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format
	add	esp, 12					; 0000000cH

; 4738 : 					strOutBuf += temp;

	lea	eax, DWORD PTR _temp$227263[esp+172]
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$227261[esp+176]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
$LN82@LogFollowe:

; 4739 : 				}
; 4740 : 			}
; 4741 : 			
; 4742 : 			ReligionTypes eSecondary = pCityRel->GetSecondaryReligion();

	mov	ecx, edi
	call	?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetSecondaryReligion
	mov	esi, eax

; 4743 : 			if (eSecondary != NO_RELIGION)

	cmp	esi, -1
	je	SHORT $LN83@LogFollowe

; 4744 : 			{
; 4745 : 				CvReligionEntry* pEntry = GC.getReligionInfo(eSecondary);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo
	mov	ebp, eax

; 4746 : 				if(pEntry)

	test	ebp, ebp
	je	SHORT $LN83@LogFollowe

; 4747 : 				{
; 4748 : 					strOutBuf += ", Secondary: ";

	push	OFFSET $SG227310
	lea	ecx, DWORD PTR _strOutBuf$227261[esp+176]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 4749 : 					strOutBuf += pEntry->GetDescription();

	lea	ecx, DWORD PTR [ebp+36]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$227261[esp+176]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 4750 : 					temp.Format("(%d)", pCityRel->GetNumFollowers(eSecondary));

	push	esi
	mov	ecx, edi
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers
	push	eax
	lea	ecx, DWORD PTR _temp$227263[esp+176]
	push	OFFSET $SG227311
	push	ecx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format
	add	esp, 12					; 0000000cH

; 4751 : 					strOutBuf += temp;

	lea	edx, DWORD PTR _temp$227263[esp+172]
	push	edx
	lea	ecx, DWORD PTR _strOutBuf$227261[esp+176]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
$LN83@LogFollowe:

; 4752 : 				}
; 4753 : 			}
; 4754 : 
; 4755 : 			temp.Format("Atheists: %d", pCityRel->GetNumFollowers(NO_RELIGION));

	push	-1
	mov	ecx, edi
	call	?GetNumFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumFollowers
	push	eax
	lea	eax, DWORD PTR _temp$227263[esp+176]
	push	OFFSET $SG227312
	push	eax
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format

; 4756 : 			strOutBuf += ", " + temp;

	lea	ecx, DWORD PTR _temp$227263[esp+184]
	push	ecx
	lea	edx, DWORD PTR $T233884[esp+188]
	push	OFFSET $SG227314
	push	edx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
	add	esp, 24					; 00000018H
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$227261[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], 6
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T233884[esp+172]
	mov	BYTE PTR __$EHRec$[esp+180], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4757 : 		}
; 4758 : 		else

	jmp	$LN1@LogFollowe
	npad	2
$LN87@LogFollowe:

; 4765 : }

	DD	$LN15@LogFollowe
	DD	$LN16@LogFollowe
	DD	$LN17@LogFollowe
	DD	$LN14@LogFollowe
	DD	$LN13@LogFollowe
	DD	$LN12@LogFollowe
	DD	$LN11@LogFollowe
	DD	$LN10@LogFollowe
	DD	$LN9@LogFollowe
	DD	$LN8@LogFollowe
	DD	$LN7@LogFollowe
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$0:
	lea	ecx, DWORD PTR _strOutBuf$227261[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$1:
	lea	ecx, DWORD PTR _strReasonString$227262[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$2:
	lea	ecx, DWORD PTR _temp$227263[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$3:
	lea	ecx, DWORD PTR $T233881[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$4:
	lea	ecx, DWORD PTR $T233882[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$5:
	lea	ecx, DWORD PTR $T233883[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z$6:
	lea	ecx, DWORD PTR $T233884[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z ENDP ; CvCityReligions::LogFollowersChange
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABVCvCityReligions@@@Z ; operator<<
; Function compile flags: /Ogtpy
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABVCvCityReligions@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
_uiVersion$234049 = 8					; size = 4
$T233990 = 8						; size = 4
$T233989 = 8						; size = 4
$T233988 = 8						; size = 1
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??6@YAAAVFDataStream@@AAV0@ABVCvCityReligions@@@Z PROC	; operator<<, COMDAT

; 4811 : {

	push	ecx
	push	ebx
	push	esi
	push	edi

; 4812 : 	uint uiVersion = 3;
; 4813 : 
; 4814 : 	saveTo << uiVersion;

	mov	edi, DWORD PTR _saveTo$[esp+12]
	lea	eax, DWORD PTR _uiVersion$[esp+16]
	push	eax
	mov	ecx, edi
	mov	DWORD PTR _uiVersion$[esp+20], 3
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 4815 : 
; 4816 : 	saveTo << readFrom.HasPaidAdoptionBonus();

	mov	ebx, DWORD PTR _readFrom$[esp+12]
	mov	cl, BYTE PTR [ebx+420]
	lea	edx, DWORD PTR $T233988[esp+12]
	mov	BYTE PTR $T233988[esp+12], cl
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 4817 : 
; 4818 : 	saveTo << readFrom.GetReligiousPressureModifier();

	mov	eax, DWORD PTR [ebx+424]
	lea	ecx, DWORD PTR $T233989[esp+12]
	push	ecx
	mov	ecx, edi
	mov	DWORD PTR $T233989[esp+16], eax
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 4819 : 
; 4820 : 	ReligionInCityList::const_iterator it;
; 4821 : 	saveTo << readFrom.m_ReligionStatus.size();

	mov	edx, DWORD PTR [ebx+4]
	lea	eax, DWORD PTR $T233990[esp+12]
	push	eax
	mov	ecx, edi
	mov	DWORD PTR $T233990[esp+16], edx
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 4822 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4823 : 	for (it = readFrom.m_ReligionStatus.begin(); it != readFrom.m_ReligionStatus.end(); ++it)
; 4824 : #else
; 4825 : 	for(it = readFrom.m_ReligionStatus.begin(); it != readFrom.m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR [ebx+4]
	mov	esi, DWORD PTR [ebx]
	lea	ecx, DWORD PTR [eax+eax*2]
	lea	edx, DWORD PTR [esi+ecx*8]
	cmp	esi, edx
	je	SHORT $LN38@operator@3
	npad	2
$LL3@operator@3:

; 4826 : #endif
; 4827 : 	{
; 4828 : 		saveTo << *it;

	lea	eax, DWORD PTR _uiVersion$234049[esp+12]
	push	eax
	mov	ecx, edi
	mov	DWORD PTR _uiVersion$234049[esp+16], 2
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write
	push	esi
	push	edi
	call	??6@YAAAVFDataStream@@AAV0@ABW4ReligionTypes@@@Z ; operator<<
	add	esp, 8
	lea	ecx, DWORD PTR [esi+4]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write
	lea	edx, DWORD PTR [esi+8]
	push	edx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	lea	eax, DWORD PTR [esi+12]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	lea	ecx, DWORD PTR [esi+16]
	push	ecx
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	mov	eax, DWORD PTR [ebx+4]
	lea	edx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR [ebx]
	add	esi, 24					; 00000018H
	lea	ecx, DWORD PTR [eax+edx*8]
	cmp	esi, ecx
	jne	SHORT $LL3@operator@3
$LN38@operator@3:

; 4829 : 	}
; 4830 : 
; 4831 : 	return saveTo;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 4832 : }

	pop	ecx
	ret	0
??6@YAAAVFDataStream@@AAV0@ABVCvCityReligions@@@Z ENDP	; operator<<
_TEXT	ENDS
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAVCvUnitReligion@@@Z ; operator>>
; Function compile flags: /Ogtpy
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAVCvUnitReligion@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
_temp$ = 8						; size = 4
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??5@YAAAVFDataStream@@AAV0@AAVCvUnitReligion@@@Z PROC	; operator>>, COMDAT

; 4855 : {

	push	ecx
	push	esi

; 4856 : 	uint uiVersion;
; 4857 : 
; 4858 : 	loadFrom >> uiVersion;

	mov	esi, DWORD PTR _loadFrom$[esp+4]
	push	edi
	lea	eax, DWORD PTR _uiVersion$[esp+12]
	push	eax
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 4859 : 
; 4860 : 	int temp;
; 4861 : 	loadFrom >> temp;

	lea	ecx, DWORD PTR _temp$[esp+8]
	push	ecx
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 4862 : 	writeTo.SetReligion((ReligionTypes)temp);

	mov	edx, DWORD PTR _temp$[esp+8]
	mov	edi, DWORD PTR _writeTo$[esp+8]

; 4863 : 	loadFrom >> temp;

	lea	eax, DWORD PTR _temp$[esp+8]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR [edi], edx
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 4864 : 	writeTo.SetReligiousStrength(temp);
; 4865 : 
; 4866 : 	if(uiVersion >= 2)

	cmp	DWORD PTR _uiVersion$[esp+12], 2
	mov	ecx, DWORD PTR _temp$[esp+8]
	mov	DWORD PTR [edi+4], ecx
	jb	SHORT $LN2@operator@4

; 4867 : 	{
; 4868 : 		loadFrom >> temp;

	lea	edx, DWORD PTR _temp$[esp+8]
	push	edx
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 4869 : 		writeTo.SetSpreadsLeft(temp);

	mov	eax, DWORD PTR _temp$[esp+8]
	mov	DWORD PTR [edi+8], eax
	pop	edi

; 4874 : 	}
; 4875 : 
; 4876 : 	return loadFrom;

	mov	eax, esi
	pop	esi

; 4877 : }

	pop	ecx
	ret	0
$LN2@operator@4:

; 4870 : 	}
; 4871 : 	else
; 4872 : 	{
; 4873 : 		writeTo.SetSpreadsLeft(0);

	mov	DWORD PTR [edi+8], 0
	pop	edi

; 4874 : 	}
; 4875 : 
; 4876 : 	return loadFrom;

	mov	eax, esi
	pop	esi

; 4877 : }

	pop	ecx
	ret	0
??5@YAAAVFDataStream@@AAV0@AAVCvUnitReligion@@@Z ENDP	; operator>>
_TEXT	ENDS
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABVCvUnitReligion@@@Z ; operator<<
; Function compile flags: /Ogtpy
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABVCvUnitReligion@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
$T234089 = 8						; size = 4
$T234088 = 8						; size = 4
$T234087 = 8						; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??6@YAAAVFDataStream@@AAV0@ABVCvUnitReligion@@@Z PROC	; operator<<, COMDAT

; 4881 : {

	push	ecx
	push	esi

; 4882 : 	uint uiVersion = 2;
; 4883 : 
; 4884 : 	saveTo << uiVersion;

	mov	esi, DWORD PTR _saveTo$[esp+4]
	push	edi
	lea	eax, DWORD PTR _uiVersion$[esp+12]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR _uiVersion$[esp+16], 2
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 4885 : 
; 4886 : 	saveTo << readFrom.GetReligion();

	mov	edi, DWORD PTR _readFrom$[esp+8]
	mov	ecx, DWORD PTR [edi]
	lea	edx, DWORD PTR $T234087[esp+8]
	push	edx
	push	esi
	mov	DWORD PTR $T234087[esp+16], ecx
	call	??6@YAAAVFDataStream@@AAV0@ABW4ReligionTypes@@@Z ; operator<<

; 4887 : 	saveTo << readFrom.GetReligiousStrength();

	mov	eax, DWORD PTR [edi+4]
	add	esp, 8
	lea	ecx, DWORD PTR $T234088[esp+8]
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR $T234088[esp+12], eax
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 4888 : 	saveTo << readFrom.GetSpreadsLeft();

	mov	edx, DWORD PTR [edi+8]
	lea	eax, DWORD PTR $T234089[esp+8]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR $T234089[esp+12], edx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	pop	edi

; 4889 : 
; 4890 : 	return saveTo;

	mov	eax, esi
	pop	esi

; 4891 : }

	pop	ecx
	ret	0
??6@YAAAVFDataStream@@AAV0@ABVCvUnitReligion@@@Z ENDP	; operator<<
_TEXT	ENDS
PUBLIC	??1CvReligionAI@@QAE@XZ				; CvReligionAI::~CvReligionAI
; Function compile flags: /Ogtpy
;	COMDAT ??1CvReligionAI@@QAE@XZ
_TEXT	SEGMENT
??1CvReligionAI@@QAE@XZ PROC				; CvReligionAI::~CvReligionAI, COMDAT
; _this$ = ecx

; 4908 : 	Uninit();
; 4909 : }

	ret	0
??1CvReligionAI@@QAE@XZ ENDP				; CvReligionAI::~CvReligionAI
_TEXT	ENDS
PUBLIC	?Init@CvReligionAI@@QAEXPAVCvBeliefXMLEntries@@PAVCvPlayer@@@Z ; CvReligionAI::Init
; Function compile flags: /Ogtpy
;	COMDAT ?Init@CvReligionAI@@QAEXPAVCvBeliefXMLEntries@@PAVCvPlayer@@@Z
_TEXT	SEGMENT
_pBeliefs$ = 8						; size = 4
_pPlayer$ = 12						; size = 4
?Init@CvReligionAI@@QAEXPAVCvBeliefXMLEntries@@PAVCvPlayer@@@Z PROC ; CvReligionAI::Init, COMDAT
; _this$ = ecx

; 4914 : 	m_pBeliefs = pBeliefs;

	mov	eax, DWORD PTR _pBeliefs$[esp-4]

; 4915 : 	m_pPlayer = pPlayer;

	mov	edx, DWORD PTR _pPlayer$[esp-4]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx

; 4916 : 
; 4917 : 	Reset();
; 4918 : }

	ret	8
?Init@CvReligionAI@@QAEXPAVCvBeliefXMLEntries@@PAVCvPlayer@@@Z ENDP ; CvReligionAI::Init
_TEXT	ENDS
PUBLIC	?Read@CvReligionAI@@QAEXAAVFDataStream@@@Z	; CvReligionAI::Read
; Function compile flags: /Ogtpy
;	COMDAT ?Read@CvReligionAI@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_uiVersion$ = 8						; size = 4
_kStream$ = 8						; size = 4
?Read@CvReligionAI@@QAEXAAVFDataStream@@@Z PROC		; CvReligionAI::Read, COMDAT
; _this$ = ecx

; 4935 : 	// Version number to maintain backwards compatibility
; 4936 : 	uint uiVersion;
; 4937 : 	kStream >> uiVersion;

	mov	ecx, DWORD PTR _kStream$[esp-4]
	lea	eax, DWORD PTR _uiVersion$[esp-4]
	push	eax
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 4938 : }

	ret	4
?Read@CvReligionAI@@QAEXAAVFDataStream@@@Z ENDP		; CvReligionAI::Read
_TEXT	ENDS
PUBLIC	?Write@CvReligionAI@@QAEXAAVFDataStream@@@Z	; CvReligionAI::Write
; Function compile flags: /Ogtpy
;	COMDAT ?Write@CvReligionAI@@QAEXAAVFDataStream@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
_kStream$ = 8						; size = 4
?Write@CvReligionAI@@QAEXAAVFDataStream@@@Z PROC	; CvReligionAI::Write, COMDAT
; _this$ = ecx

; 4942 : {

	push	ecx

; 4943 : 	// Current version number
; 4944 : 	uint uiVersion = 1;
; 4945 : 	kStream << uiVersion;

	mov	ecx, DWORD PTR _kStream$[esp]
	lea	eax, DWORD PTR _uiVersion$[esp+4]
	push	eax
	mov	DWORD PTR _uiVersion$[esp+8], 1
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 4946 : }

	pop	ecx
	ret	4
?Write@CvReligionAI@@QAEXAAVFDataStream@@@Z ENDP	; CvReligionAI::Write
_TEXT	ENDS
PUBLIC	?ScoreBeliefAtCity@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvCity@@@Z ; CvReligionAI::ScoreBeliefAtCity
EXTRN	?GetMaxYieldModifierPerFollower@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetMaxYieldModifierPerFollower
EXTRN	?GetYieldChangeWorldWonder@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetYieldChangeWorldWonder
EXTRN	?getMaxPlayerInstances@CvBuildingClassInfo@@QBEHXZ:PROC ; CvBuildingClassInfo::getMaxPlayerInstances
EXTRN	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z:PROC ; CvCityBuildings::GetNumBuilding
EXTRN	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ:PROC ; CvCity::GetCityBuildings
EXTRN	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z:PROC ; CvCivilizationInfo::getCivilizationBuildings
EXTRN	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ:PROC ; CvPlayer::getCivilizationInfo
EXTRN	?GetBuildingClassYieldChange@CvBeliefEntry@@QBEHHH@Z:PROC ; CvBeliefEntry::GetBuildingClassYieldChange
EXTRN	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z:PROC ; CvGlobals::getBuildingClassInfo
EXTRN	?GetYieldChangeAnySpecialist@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetYieldChangeAnySpecialist
EXTRN	?IsRouteToCapitalConnected@CvCity@@QAE_NXZ:PROC	; CvCity::IsRouteToCapitalConnected
EXTRN	?GetYieldChangeTradeRoute@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetYieldChangeTradeRoute
EXTRN	?GetCityYieldChange@CvBeliefEntry@@QBEHH@Z:PROC	; CvBeliefEntry::GetCityYieldChange
EXTRN	?GetBuildingClassHappiness@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetBuildingClassHappiness
EXTRN	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ:PROC ; CvGlobals::getNumBuildingClassInfos
EXTRN	?GetHappinessPerCity@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetHappinessPerCity
EXTRN	?GetRiverHappiness@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetRiverHappiness
EXTRN	?GetWonderProductionModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetWonderProductionModifier
EXTRN	?getCurrentEra@CvGame@@QBE?AW4EraTypes@@XZ:PROC	; CvGame::getCurrentEra
EXTRN	?GetObsoleteEra@CvBeliefEntry@@QBE?AW4EraTypes@@XZ:PROC ; CvBeliefEntry::GetObsoleteEra
EXTRN	?GetFriendlyHealChange@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetFriendlyHealChange
EXTRN	?GetCityRangeStrikeModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetCityRangeStrikeModifier
EXTRN	?GetPlotCultureCostModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetPlotCultureCostModifier
EXTRN	?RequiresPeace@CvBeliefEntry@@QBE_NXZ:PROC	; CvBeliefEntry::RequiresPeace
EXTRN	?GetCityGrowthModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetCityGrowthModifier
EXTRN	?GetMinFollowers@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetMinFollowers
EXTRN	?GetMinPopulation@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetMinPopulation
EXTRN	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z:PROC ; CvFlavorManager::GetPersonalityIndividualFlavor
EXTRN	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z:PROC ; CvGlobals::getInfoTypeForString
EXTRN	?GetFlavorManager@CvPlayer@@QBEPAVCvFlavorManager@@XZ:PROC ; CvPlayer::GetFlavorManager
; Function compile flags: /Ogtpy
;	COMDAT ?ScoreBeliefAtCity@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvCity@@@Z
_TEXT	SEGMENT
_iHappinessMultiplier$ = -24				; size = 4
_iMinFollowers$ = -20					; size = 4
_iFlavorCityDefense$ = -16				; size = 4
_iMinPop$ = -12						; size = 4
$T234139 = -8						; size = 4
_pkBuildingClassInfo$228665 = -8			; size = 4
_iFlavorDefense$ = -8					; size = 4
_this$ = -4						; size = 4
$T234138 = 8						; size = 4
_iTempValue$ = 8					; size = 4
_pEntry$ = 8						; size = 4
_pCity$ = 12						; size = 4
?ScoreBeliefAtCity@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvCity@@@Z PROC ; CvReligionAI::ScoreBeliefAtCity, COMDAT
; _this$ = ecx

; 6180 : {

	sub	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	esi
	mov	DWORD PTR _this$[esp+36], ecx

; 6181 : 	int iRtnValue = 0;
; 6182 : 	int iTempValue;
; 6183 : 	int iMinPop;
; 6184 : 	int iMinFollowers;
; 6185 : 	int iHappinessMultiplier = 2;
; 6186 : 
; 6187 : 	CvFlavorManager* pFlavorManager = m_pPlayer->GetFlavorManager();

	mov	ecx, DWORD PTR [ecx+4]
	push	edi
	mov	DWORD PTR _iHappinessMultiplier$[esp+40], 2
	call	?GetFlavorManager@CvPlayer@@QBEPAVCvFlavorManager@@XZ ; CvPlayer::GetFlavorManager

; 6188 : 	int iFlavorOffense = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_OFFENSE"));

	push	0
	push	OFFSET $SG228623
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	esi, eax
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, esi
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor

; 6189 : 	int iFlavorDefense = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_DEFENSE"));

	push	0
	push	OFFSET $SG228626
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	edi, eax
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, esi
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor

; 6190 : 	int iFlavorCityDefense = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_CITY_DEFENSE"));

	push	0
	mov	ebp, eax
	push	OFFSET $SG228629
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iFlavorDefense$[esp+48], ebp
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, esi
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor

; 6191 : 	int iFlavorHappiness = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_HAPPINESS"));

	push	0
	push	OFFSET $SG228632
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iFlavorCityDefense$[esp+48], eax
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, esi
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor

; 6192 : 
; 6193 : 	int iHappinessNeedFactor = iFlavorOffense * 2 + iFlavorHappiness - iFlavorDefense;

	lea	ecx, DWORD PTR [edi+edi]
	sub	ecx, ebp
	add	eax, ecx

; 6194 : 	if (iHappinessNeedFactor > 15)

	cmp	eax, 15					; 0000000fH
	jle	SHORT $LN35@ScoreBelie

; 6195 : 	{
; 6196 : 		iHappinessMultiplier = 3;

	mov	DWORD PTR _iHappinessMultiplier$[esp+40], 3
	jmp	SHORT $LN33@ScoreBelie
$LN35@ScoreBelie:

; 6197 : 	}
; 6198 : 	else if (iHappinessNeedFactor < 6)

	cmp	eax, 6
	jge	SHORT $LN33@ScoreBelie

; 6199 : 	{
; 6200 : 		iHappinessMultiplier = 1;

	mov	DWORD PTR _iHappinessMultiplier$[esp+40], 1
$LN33@ScoreBelie:

; 6201 : 	}
; 6202 : 
; 6203 : 	iMinPop = pEntry->GetMinPopulation();

	mov	esi, DWORD PTR _pEntry$[esp+36]
	mov	ecx, esi
	call	?GetMinPopulation@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetMinPopulation
	mov	edi, eax

; 6204 : 	iMinFollowers = pEntry->GetMinFollowers();

	mov	ecx, esi
	mov	DWORD PTR _iMinPop$[esp+40], edi
	call	?GetMinFollowers@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetMinFollowers

; 6205 : 
; 6206 : 	// Simple ones
; 6207 : 	iRtnValue += pEntry->GetCityGrowthModifier() / 3;

	mov	ecx, esi
	mov	DWORD PTR _iMinFollowers$[esp+40], eax
	call	?GetCityGrowthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityGrowthModifier
	mov	ecx, eax
	mov	eax, 1431655766				; 55555556H
	imul	ecx
	mov	ebx, edx
	shr	ebx, 31					; 0000001fH

; 6208 : 	if(pEntry->RequiresPeace())

	mov	ecx, esi
	add	ebx, edx
	call	?RequiresPeace@CvBeliefEntry@@QBE_NXZ	; CvBeliefEntry::RequiresPeace
	test	al, al
	je	SHORT $LN32@ScoreBelie

; 6209 : 	{
; 6210 : 		iRtnValue /= 2;

	mov	eax, ebx
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ebx, eax
$LN32@ScoreBelie:

; 6211 : 	}
; 6212 : 	iRtnValue += (-pEntry->GetPlotCultureCostModifier() * 2) / 10;

	mov	ecx, esi
	call	?GetPlotCultureCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetPlotCultureCostModifier
	mov	ecx, eax
	neg	ecx
	add	ecx, ecx
	mov	eax, 1717986919				; 66666667H
	imul	ecx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	add	ebx, eax

; 6213 : 	iRtnValue += (pEntry->GetCityRangeStrikeModifier() / 10) * MAX(iFlavorDefense,iFlavorCityDefense);

	cmp	ebp, DWORD PTR _iFlavorCityDefense$[esp+40]
	lea	ebp, DWORD PTR _iFlavorCityDefense$[esp+40]
	jl	SHORT $LN41@ScoreBelie
	lea	ebp, DWORD PTR _iFlavorDefense$[esp+40]
$LN41@ScoreBelie:
	mov	ecx, esi
	call	?GetCityRangeStrikeModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityRangeStrikeModifier
	mov	ecx, eax
	mov	eax, 1717986919				; 66666667H
	imul	ecx
	sar	edx, 2
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	imul	ecx, DWORD PTR [ebp]
	add	ebx, ecx

; 6214 : 	iRtnValue += pEntry->GetFriendlyHealChange() / 10;

	mov	ecx, esi
	call	?GetFriendlyHealChange@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFriendlyHealChange
	mov	ecx, eax
	mov	eax, 1717986919				; 66666667H
	imul	ecx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 6215 : 
; 6216 : 	// Wonder production multiplier
; 6217 : 	if(pEntry->GetObsoleteEra() > 0)

	mov	ecx, esi
	add	ebx, eax
	call	?GetObsoleteEra@CvBeliefEntry@@QBE?AW4EraTypes@@XZ ; CvBeliefEntry::GetObsoleteEra
	test	eax, eax
	jle	SHORT $LN31@ScoreBelie

; 6218 : 	{	
; 6219 : 		if (pEntry->GetObsoleteEra() > GC.getGame().getCurrentEra())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getCurrentEra@CvGame@@QBE?AW4EraTypes@@XZ ; CvGame::getCurrentEra
	mov	ecx, esi
	mov	ebp, eax
	call	?GetObsoleteEra@CvBeliefEntry@@QBE?AW4EraTypes@@XZ ; CvBeliefEntry::GetObsoleteEra
	cmp	eax, ebp
	jle	SHORT $LN58@ScoreBelie

; 6220 : 		{
; 6221 : 			iRtnValue += (pEntry->GetWonderProductionModifier() * pEntry->GetObsoleteEra()) / 10;

	mov	ecx, esi
	call	?GetWonderProductionModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetWonderProductionModifier
	mov	ecx, esi
	mov	ebp, eax
	call	?GetObsoleteEra@CvBeliefEntry@@QBE?AW4EraTypes@@XZ ; CvBeliefEntry::GetObsoleteEra
	imul	ebp, eax
	mov	eax, 1717986919				; 66666667H
	imul	ebp
	sar	edx, 2
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	add	ebx, ecx

; 6222 : 		}
; 6223 : 	}
; 6224 : 	else

	jmp	SHORT $LN58@ScoreBelie
$LN31@ScoreBelie:

; 6225 : 	{
; 6226 : 		iRtnValue += pEntry->GetWonderProductionModifier() / 3;

	mov	ecx, esi
	call	?GetWonderProductionModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetWonderProductionModifier
	mov	ecx, eax
	mov	eax, 1431655766				; 55555556H
	imul	ecx
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	add	ebx, eax
$LN58@ScoreBelie:

; 6227 : 	}
; 6228 : 
; 6229 : 	// River happiness
; 6230 : 	iTempValue = pEntry->GetRiverHappiness() * iHappinessMultiplier;

	mov	ecx, esi
	call	?GetRiverHappiness@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetRiverHappiness
	mov	ebp, eax
	imul	ebp, DWORD PTR _iHappinessMultiplier$[esp+40]

; 6231 : 	if(iMinPop > 0)

	test	edi, edi
	jle	SHORT $LN54@ScoreBelie

; 6232 : 	{
; 6233 : 		if(pCity->getPopulation() >= iMinPop)

	mov	ecx, DWORD PTR _pCity$[esp+36]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, edi
	jl	SHORT $LN54@ScoreBelie

; 6234 : 		{
; 6235 : 			iTempValue *= 2;

	add	ebp, ebp
$LN54@ScoreBelie:

; 6236 : 		}
; 6237 : 	}
; 6238 : 	iRtnValue += iTempValue;
; 6239 : 
; 6240 : 	// Happiness per city
; 6241 : 	iTempValue = pEntry->GetHappinessPerCity() * iHappinessMultiplier;

	mov	ecx, esi
	add	ebx, ebp
	call	?GetHappinessPerCity@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetHappinessPerCity
	mov	ebp, eax
	imul	ebp, DWORD PTR _iHappinessMultiplier$[esp+40]

; 6242 : 	if(iMinPop > 0)

	test	edi, edi
	jle	SHORT $LN61@ScoreBelie

; 6243 : 	{
; 6244 : 		if(pCity->getPopulation() >= iMinPop)

	mov	ecx, DWORD PTR _pCity$[esp+36]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, edi
	jl	SHORT $LN61@ScoreBelie

; 6245 : 		{
; 6246 : 			iTempValue *= 2;

	add	ebp, ebp
$LN61@ScoreBelie:

; 6247 : 		}
; 6248 : 	}
; 6249 : 	iRtnValue += iTempValue;

	add	ebx, ebp

; 6250 : 
; 6251 : 	// Building class happiness
; 6252 : #ifdef AUI_WARNING_FIXES
; 6253 : 	for (uint jJ = 0; jJ < GC.getNumBuildingClassInfos(); jJ++)
; 6254 : #else
; 6255 : 	for(int jJ = 0; jJ < GC.getNumBuildingClassInfos(); jJ++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	ebp, ebp
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	test	eax, eax
	jle	SHORT $LN22@ScoreBelie
	npad	5
$LL24@ScoreBelie:

; 6256 : #endif
; 6257 : 	{
; 6258 : 		iTempValue = pEntry->GetBuildingClassHappiness(jJ) * iHappinessMultiplier;

	push	ebp
	mov	ecx, esi
	call	?GetBuildingClassHappiness@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetBuildingClassHappiness
	mov	edi, eax
	imul	edi, DWORD PTR _iHappinessMultiplier$[esp+40]

; 6259 : 		if(iMinFollowers > 0)

	cmp	DWORD PTR _iMinFollowers$[esp+40], 0
	jle	SHORT $LN20@ScoreBelie

; 6260 : 		{
; 6261 : 			if(pCity->getPopulation() >= iMinFollowers)

	mov	ecx, DWORD PTR _pCity$[esp+36]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, DWORD PTR _iMinFollowers$[esp+40]
	jl	SHORT $LN20@ScoreBelie

; 6262 : 			{
; 6263 : 				iTempValue *= 2;

	add	edi, edi
$LN20@ScoreBelie:

; 6250 : 
; 6251 : 	// Building class happiness
; 6252 : #ifdef AUI_WARNING_FIXES
; 6253 : 	for (uint jJ = 0; jJ < GC.getNumBuildingClassInfos(); jJ++)
; 6254 : #else
; 6255 : 	for(int jJ = 0; jJ < GC.getNumBuildingClassInfos(); jJ++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals

; 6264 : 			}
; 6265 : 		}
; 6266 : 		iRtnValue += iTempValue;

	add	ebx, edi
	inc	ebp
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	ebp, eax
	jl	SHORT $LL24@ScoreBelie

; 6250 : 
; 6251 : 	// Building class happiness
; 6252 : #ifdef AUI_WARNING_FIXES
; 6253 : 	for (uint jJ = 0; jJ < GC.getNumBuildingClassInfos(); jJ++)
; 6254 : #else
; 6255 : 	for(int jJ = 0; jJ < GC.getNumBuildingClassInfos(); jJ++)

	mov	edi, DWORD PTR _iMinPop$[esp+40]
$LN22@ScoreBelie:

; 6267 : 	}
; 6268 : 
; 6269 : 	for(int iI = 0; iI < NUM_YIELD_TYPES; iI++)

	xor	ebp, ebp
	jmp	SHORT $LN19@ScoreBelie
$LL55@ScoreBelie:
	mov	edi, DWORD PTR _iMinPop$[esp+40]
$LN19@ScoreBelie:

; 6270 : 	{
; 6271 : 		// City yield change
; 6272 : 		iTempValue = pEntry->GetCityYieldChange(iI);

	push	ebp
	mov	ecx, esi
	call	?GetCityYieldChange@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetCityYieldChange
	mov	DWORD PTR _iTempValue$[esp+36], eax

; 6273 : 		if(iMinPop > 0)

	test	edi, edi
	jle	SHORT $LN59@ScoreBelie

; 6274 : 		{
; 6275 : 			if(pCity->getPopulation() >= iMinPop)

	mov	ecx, DWORD PTR _pCity$[esp+36]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, edi
	jl	SHORT $LN59@ScoreBelie

; 6276 : 			{
; 6277 : 				iTempValue *= 2;

	mov	ecx, DWORD PTR _iTempValue$[esp+36]
	lea	edx, DWORD PTR [ecx+ecx]
	mov	DWORD PTR _iTempValue$[esp+36], edx
$LN59@ScoreBelie:

; 6278 : 			}
; 6279 : 		}
; 6280 : 		iRtnValue += iTempValue;

	add	ebx, DWORD PTR _iTempValue$[esp+36]

; 6281 : 
; 6282 : 		// Trade route yield change
; 6283 : 		iTempValue = pEntry->GetYieldChangeTradeRoute(iI);

	push	ebp
	mov	ecx, esi
	call	?GetYieldChangeTradeRoute@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangeTradeRoute
	mov	DWORD PTR _iTempValue$[esp+36], eax

; 6284 : 		if(iMinPop > 0)

	test	edi, edi
	jle	SHORT $LN13@ScoreBelie

; 6285 : 		{
; 6286 : 			if(pCity->getPopulation() >= iMinPop)

	mov	ecx, DWORD PTR _pCity$[esp+36]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, edi
	jl	SHORT $LN13@ScoreBelie

; 6287 : 			{
; 6288 : 				iTempValue *= 2;

	mov	eax, DWORD PTR _iTempValue$[esp+36]
	lea	ecx, DWORD PTR [eax+eax]
	mov	DWORD PTR _iTempValue$[esp+36], ecx
$LN13@ScoreBelie:

; 6289 : 			}
; 6290 : 		}
; 6291 : 		if(pCity->IsRouteToCapitalConnected())

	mov	ecx, DWORD PTR _pCity$[esp+36]
	call	?IsRouteToCapitalConnected@CvCity@@QAE_NXZ ; CvCity::IsRouteToCapitalConnected
	test	al, al
	je	SHORT $LN60@ScoreBelie

; 6292 : 		{
; 6293 : 			iTempValue *= 2;

	mov	edx, DWORD PTR _iTempValue$[esp+36]
	lea	eax, DWORD PTR [edx+edx]
	jmp	SHORT $LN12@ScoreBelie
$LN60@ScoreBelie:
	mov	eax, DWORD PTR _iTempValue$[esp+36]
$LN12@ScoreBelie:

; 6294 : 		}
; 6295 : 		iRtnValue += iTempValue;
; 6296 : 
; 6297 : 		// Specialist yield change
; 6298 : 		iTempValue = pEntry->GetYieldChangeAnySpecialist(iI);

	push	ebp
	mov	ecx, esi
	add	ebx, eax
	call	?GetYieldChangeAnySpecialist@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangeAnySpecialist

; 6299 : 		if(pCity->getPopulation() >= 8)  // Like it more with large cities

	mov	ecx, DWORD PTR _pCity$[esp+36]
	mov	edi, eax
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, 8
	jl	SHORT $LN11@ScoreBelie

; 6300 : 		{
; 6301 : 			iTempValue *= 3;

	lea	edi, DWORD PTR [edi+edi*2]
$LN11@ScoreBelie:

; 6302 : 		}
; 6303 : 		iRtnValue += iTempValue;

	add	ebx, edi

; 6304 : 
; 6305 : 		// Building class yield change
; 6306 : #ifdef AUI_WARNING_FIXES
; 6307 : 		for (uint jJ = 0; jJ < GC.getNumBuildingClassInfos(); jJ++)
; 6308 : #else
; 6309 : 		for(int jJ = 0; jJ < GC.getNumBuildingClassInfos(); jJ++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	edi, edi
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	test	eax, eax
	jle	$LN8@ScoreBelie
$LL10@ScoreBelie:

; 6310 : #endif
; 6311 : 		{
; 6312 : 			CvBuildingClassInfo* pkBuildingClassInfo = GC.getBuildingClassInfo((BuildingClassTypes)jJ);

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingClassInfo@CvGlobals@@QAEPAVCvBuildingClassInfo@@W4BuildingClassTypes@@@Z ; CvGlobals::getBuildingClassInfo
	mov	DWORD PTR _pkBuildingClassInfo$228665[esp+40], eax

; 6313 : 			if(!pkBuildingClassInfo)

	test	eax, eax
	je	$LN9@ScoreBelie

; 6314 : 			{
; 6315 : 				continue;
; 6316 : 			}
; 6317 : 
; 6318 : 			iTempValue = pEntry->GetBuildingClassYieldChange(jJ, iI);

	push	ebp
	push	edi
	mov	ecx, esi
	call	?GetBuildingClassYieldChange@CvBeliefEntry@@QBEHHH@Z ; CvBeliefEntry::GetBuildingClassYieldChange

; 6319 : 			if(iMinFollowers > 0)

	cmp	DWORD PTR _iMinFollowers$[esp+40], 0
	mov	DWORD PTR _iTempValue$[esp+36], eax
	jle	SHORT $LN5@ScoreBelie

; 6320 : 			{
; 6321 : 				if(pCity->getPopulation() < iMinFollowers)

	mov	ecx, DWORD PTR _pCity$[esp+36]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	cmp	eax, DWORD PTR _iMinFollowers$[esp+40]
	jge	SHORT $LN5@ScoreBelie

; 6322 : 				{
; 6323 : 					iTempValue /= 2;

	mov	eax, DWORD PTR _iTempValue$[esp+36]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _iTempValue$[esp+36], eax
$LN5@ScoreBelie:

; 6324 : 				}
; 6325 : 			}
; 6326 : 
; 6327 : 			BuildingTypes eBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings(jJ);

	mov	eax, DWORD PTR _this$[esp+40]
	mov	ecx, DWORD PTR [eax+4]
	push	edi
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings

; 6328 : 			if (eBuilding != NO_BUILDING)

	cmp	eax, -1
	je	SHORT $LN3@ScoreBelie

; 6329 : 			{
; 6330 : 				if(pCity->GetCityBuildings()->GetNumBuilding(eBuilding) > 0)

	mov	ecx, DWORD PTR _pCity$[esp+36]
	push	eax
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	test	eax, eax
	jle	SHORT $LN3@ScoreBelie

; 6331 : 				{
; 6332 : 					iTempValue *= 2;

	mov	ecx, DWORD PTR _iTempValue$[esp+36]
	lea	edx, DWORD PTR [ecx+ecx]
	mov	DWORD PTR _iTempValue$[esp+36], edx
$LN3@ScoreBelie:

; 6333 : 				}
; 6334 : 			}
; 6335 : 
; 6336 : 			if(pkBuildingClassInfo->getMaxPlayerInstances() == 1)

	mov	ecx, DWORD PTR _pkBuildingClassInfo$228665[esp+40]
	call	?getMaxPlayerInstances@CvBuildingClassInfo@@QBEHXZ ; CvBuildingClassInfo::getMaxPlayerInstances
	cmp	eax, 1

; 6337 : 			{
; 6338 : 				iTempValue /= 2;

	mov	eax, DWORD PTR _iTempValue$[esp+36]
	jne	SHORT $LN2@ScoreBelie
	cdq
	sub	eax, edx
	sar	eax, 1
$LN2@ScoreBelie:

; 6339 : 			}
; 6340 : 
; 6341 : 			iRtnValue += iTempValue;

	add	ebx, eax
$LN9@ScoreBelie:

; 6304 : 
; 6305 : 		// Building class yield change
; 6306 : #ifdef AUI_WARNING_FIXES
; 6307 : 		for (uint jJ = 0; jJ < GC.getNumBuildingClassInfos(); jJ++)
; 6308 : #else
; 6309 : 		for(int jJ = 0; jJ < GC.getNumBuildingClassInfos(); jJ++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	edi
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	edi, eax
	jl	$LL10@ScoreBelie
$LN8@ScoreBelie:

; 6342 : 		}
; 6343 : 
; 6344 : 		// World wonder change
; 6345 : 		iRtnValue += pEntry->GetYieldChangeWorldWonder(iI) * 3 / 2;

	push	ebp
	mov	ecx, esi
	call	?GetYieldChangeWorldWonder@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangeWorldWonder
	lea	eax, DWORD PTR [eax+eax*2]
	cdq
	sub	eax, edx
	sar	eax, 1

; 6346 : 
; 6347 : 		// Production per follower
; 6348 : 		if (pEntry->GetMaxYieldModifierPerFollower(iI) > 0)

	push	ebp
	mov	ecx, esi
	add	ebx, eax
	call	?GetMaxYieldModifierPerFollower@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetMaxYieldModifierPerFollower
	test	eax, eax
	jle	SHORT $LN18@ScoreBelie

; 6349 : 		{
; 6350 : 			iTempValue = min(pEntry->GetMaxYieldModifierPerFollower(iI), pCity->getPopulation());

	mov	ecx, DWORD PTR _pCity$[esp+36]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	mov	edi, eax
	push	ebp
	mov	ecx, esi
	mov	DWORD PTR $T234138[esp+40], edi
	call	?GetMaxYieldModifierPerFollower@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetMaxYieldModifierPerFollower
	mov	DWORD PTR $T234139[esp+40], eax
	cmp	edi, eax
	lea	eax, DWORD PTR $T234138[esp+36]
	jl	SHORT $LN47@ScoreBelie
	lea	eax, DWORD PTR $T234139[esp+40]
$LN47@ScoreBelie:

; 6351 : 			iTempValue /= 2;

	mov	eax, DWORD PTR [eax]
	cdq
	sub	eax, edx
	sar	eax, 1

; 6352 : 			iRtnValue += iTempValue;

	add	ebx, eax
$LN18@ScoreBelie:
	inc	ebp
	cmp	ebp, 6
	jl	$LL55@ScoreBelie
	pop	edi
	pop	esi
	pop	ebp

; 6353 : 		}
; 6354 : 	}
; 6355 : 
; 6356 : 	return iRtnValue;

	mov	eax, ebx
	pop	ebx

; 6357 : }

	add	esp, 24					; 00000018H
	ret	8
?ScoreBeliefAtCity@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvCity@@@Z ENDP ; CvReligionAI::ScoreBeliefAtCity
_TEXT	ENDS
PUBLIC	?ScoreBeliefForPlayer@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBeliefForPlayer
EXTRN	?GetFaithBuildingTourism@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetFaithBuildingTourism
EXTRN	?GetSpyPressure@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetSpyPressure
EXTRN	?GetInquisitorPressureRetention@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetInquisitorPressureRetention
EXTRN	?GetCityStateInfluenceModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetCityStateInfluenceModifier
EXTRN	?IsUsingStrategy@CvMilitaryAI@@QAE_NW4MilitaryAIStrategyTypes@@@Z:PROC ; CvMilitaryAI::IsUsingStrategy
EXTRN	?GetMilitaryAI@CvPlayer@@QBEPAVCvMilitaryAI@@XZ:PROC ; CvPlayer::GetMilitaryAI
EXTRN	?ConvertsBarbarians@CvBeliefEntry@@QBE_NXZ:PROC	; CvBeliefEntry::ConvertsBarbarians
EXTRN	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::IsPolicyBranchBlocked
EXTRN	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z:PROC ; CvPlayerPolicies::IsPolicyBranchFinished
EXTRN	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ:PROC ; CvPlayer::GetPlayerPolicies
EXTRN	?FaithPurchaseAllGreatPeople@CvBeliefEntry@@QBE_NXZ:PROC ; CvBeliefEntry::FaithPurchaseAllGreatPeople
EXTRN	?GetProphetCostModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetProphetCostModifier
EXTRN	?GetProphetStrengthModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetProphetStrengthModifier
EXTRN	?GetMissionaryCostModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetMissionaryCostModifier
EXTRN	?GetMissionaryStrengthModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetMissionaryStrengthModifier
EXTRN	?GetSpreadStrengthModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetSpreadStrengthModifier
EXTRN	?GetSpreadDistanceModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetSpreadDistanceModifier
EXTRN	?GetGoldenAgeTurns@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetGoldenAgeTurns
EXTRN	?DeusVult@CvBeliefEntry@@QBE_NXZ:PROC		; CvBeliefEntry::DeusVult
EXTRN	?GetCombatModifierEnemyCities@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetCombatModifierEnemyCities
EXTRN	?GetCombatModifierFriendlyCities@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetCombatModifierFriendlyCities
EXTRN	?GetFriendlyCityStateSpreadModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetFriendlyCityStateSpreadModifier
EXTRN	?GetGreatPersonExpendedFaith@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetGreatPersonExpendedFaith
EXTRN	?GetNumFreeSettlers@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetNumFreeSettlers
EXTRN	?GetYieldChangePerXForeignFollowers@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetYieldChangePerXForeignFollowers
EXTRN	?GetYieldChangePerForeignCity@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetYieldChangePerForeignCity
EXTRN	?GetCityStateMinimumInfluence@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetCityStateMinimumInfluence
EXTRN	?GetGoldWhenCityAdopts@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetGoldWhenCityAdopts
EXTRN	?GetGoldPerXFollowers@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetGoldPerXFollowers
EXTRN	?GetGoldPerFollowingCity@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetGoldPerFollowingCity
EXTRN	?GetSciencePerOtherReligionFollower@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetSciencePerOtherReligionFollower
EXTRN	?GetHappinessPerXPeacefulForeignFollowers@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetHappinessPerXPeacefulForeignFollowers
EXTRN	?GetHappinessPerFollowingCity@CvBeliefEntry@@QBEMXZ:PROC ; CvBeliefEntry::GetHappinessPerFollowingCity
EXTRN	?IsFaithUnitPurchaseEra@CvBeliefEntry@@QBE_NH@Z:PROC ; CvBeliefEntry::IsFaithUnitPurchaseEra
EXTRN	?getNumEraInfos@CvGlobals@@QAEHXZ:PROC		; CvGlobals::getNumEraInfos
EXTRN	?GetProductionCost@CvBuildingEntry@@QBEHXZ:PROC	; CvBuildingEntry::GetProductionCost
EXTRN	?GetFlavorValue@CvBuildingEntry@@QBEHH@Z:PROC	; CvBuildingEntry::GetFlavorValue
EXTRN	?GetEntry@CvBuildingXMLEntries@@QAEPAVCvBuildingEntry@@H@Z:PROC ; CvBuildingXMLEntries::GetEntry
EXTRN	?GetGameBuildings@CvGlobals@@QBEPAVCvBuildingXMLEntries@@XZ:PROC ; CvGlobals::GetGameBuildings
EXTRN	?IsBuildingClassEnabled@CvBeliefEntry@@QBE_NH@Z:PROC ; CvBeliefEntry::IsBuildingClassEnabled
EXTRN	?GetPlayerCultureModifier@CvBeliefEntry@@QBEHXZ:PROC ; CvBeliefEntry::GetPlayerCultureModifier
EXTRN	?GetPlayerHappiness@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetPlayerHappiness
EXTRN	?IsGoingForWorldConquest@CvDiplomacyAI@@QAE_NXZ:PROC ; CvDiplomacyAI::IsGoingForWorldConquest
EXTRN	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ:PROC ; CvPlayer::GetDiplomacyAI
EXTRN	?GetMaxDistance@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetMaxDistance
EXTRN	?GetFaithFromKills@CvBeliefEntry@@QBEHXZ:PROC	; CvBeliefEntry::GetFaithFromKills
EXTRN	__fltused:DWORD
EXTRN	__ftol2_sse_excpt:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?ScoreBeliefForPlayer@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z
_TEXT	SEGMENT
_iFlavorOffense$ = -52					; size = 4
_this$ = -48						; size = 4
_iFlavorDefense$ = -44					; size = 4
_iFlavorScience$ = -40					; size = 4
_iFlavorCulture$ = -36					; size = 4
_iFlavorDiplomacy$ = -32				; size = 4
_iRtnValue$234196 = -28					; size = 4
_pBuildingEntry$228724 = -28				; size = 4
_iI$228717 = -24					; size = 4
_iFlavorHappiness$ = -20				; size = 4
_iFlavorGold$ = -16					; size = 4
_iFlavorExpansion$ = -12				; size = 4
_iFlavorGP$ = -8					; size = 4
_iReligionsEnhancedPercent$ = -4			; size = 4
tv925 = 8						; size = 4
_iTemp$228758 = 8					; size = 4
_iFlavorLoop$228726 = 8					; size = 4
_pEntry$ = 8						; size = 4
?ScoreBeliefForPlayer@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z PROC ; CvReligionAI::ScoreBeliefForPlayer, COMDAT
; _this$ = ecx

; 6365 : {

	sub	esp, 52					; 00000034H
	push	ebx
	push	ebp
	mov	ebp, ecx

; 6366 : 	int iRtnValue = 0;
; 6367 : 	CvFlavorManager* pFlavorManager = m_pPlayer->GetFlavorManager();

	mov	ecx, DWORD PTR [ebp+4]
	push	esi
	push	edi
	mov	DWORD PTR _this$[esp+68], ebp
	xor	edi, edi
	call	?GetFlavorManager@CvPlayer@@QBEPAVCvFlavorManager@@XZ ; CvPlayer::GetFlavorManager

; 6368 : 	CvGameReligions* pGameReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	ebx, eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 6369 : 
; 6370 : 	//--------------------
; 6371 : 	// GET BACKGROUND DATA
; 6372 : 	//--------------------
; 6373 : 	int iFlavorOffense = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_OFFENSE"));

	push	edi
	push	OFFSET $SG228687
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	esi, eax
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, ebx
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor

; 6374 : 	int iFlavorDefense = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_DEFENSE"));

	push	edi
	push	OFFSET $SG228690
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iFlavorOffense$[esp+76], eax
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, ebx
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor

; 6375 : 	int iFlavorHappiness = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_HAPPINESS"));

	push	edi
	push	OFFSET $SG228693
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iFlavorDefense$[esp+76], eax
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, ebx
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor

; 6376 : 	int iFlavorCulture = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_CULTURE"));

	push	edi
	push	OFFSET $SG228696
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iFlavorHappiness$[esp+76], eax
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, ebx
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor

; 6377 : 	int iFlavorGold = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_GOLD"));

	push	edi
	push	OFFSET $SG228699
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iFlavorCulture$[esp+76], eax
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, ebx
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor

; 6378 : 	int iFlavorGP = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_GREAT_PEOPLE"));

	push	edi
	push	OFFSET $SG228702
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iFlavorGold$[esp+76], eax
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, ebx
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor

; 6379 : 	int iFlavorScience = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_SCIENCE"));

	push	edi
	push	OFFSET $SG228705
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iFlavorGP$[esp+76], eax
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, ebx
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor

; 6380 : 	int iFlavorDiplomacy = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_DIPLOMACY"));

	push	edi
	push	OFFSET $SG228708
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iFlavorScience$[esp+76], eax
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, ebx
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor

; 6381 : 	int iFlavorExpansion = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)GC.getInfoTypeForString("FLAVOR_EXPANSION"));

	push	edi
	push	OFFSET $SG228711
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iFlavorDiplomacy$[esp+76], eax
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	push	eax
	mov	ecx, ebx
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor

; 6382 : 
; 6383 : 	int iNumEnhancedReligions = pGameReligions->GetNumReligionsEnhanced();

	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR _iFlavorExpansion$[esp+68], eax
	mov	eax, DWORD PTR [esi+4]
	imul	eax, 328				; 00000148H
	xor	edx, edx
	add	eax, ecx
	mov	DWORD PTR _iRtnValue$234196[esp+68], edx
	cmp	ecx, eax
	je	SHORT $LN56@ScoreBelie@2
	npad	7
$LL58@ScoreBelie@2:
	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LN57@ScoreBelie@2
	inc	edx
$LN57@ScoreBelie@2:
	add	ecx, 328				; 00000148H
	cmp	ecx, eax
	jne	SHORT $LL58@ScoreBelie@2
	mov	DWORD PTR _iRtnValue$234196[esp+68], edx
$LN56@ScoreBelie@2:

; 6384 : 	int iReligionsEnhancedPercent = (100 * iNumEnhancedReligions) / GC.getMap().getWorldInfo().getMaxActiveReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	call	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ ; CvMap::getWorldInfo
	mov	ecx, eax
	call	?getMaxActiveReligions@CvWorldInfo@@QBEHXZ ; CvWorldInfo::getMaxActiveReligions
	mov	ecx, eax
	mov	eax, DWORD PTR _iRtnValue$234196[esp+68]
	imul	eax, 100				; 00000064H
	cdq
	idiv	ecx

; 6385 : 
; 6386 : 	//------------------------------
; 6387 : 	// PLAYER-LEVEL PANTHEON BELIEFS
; 6388 : 	//------------------------------
; 6389 : 	if(pEntry->GetFaithFromKills() > 0)

	mov	esi, DWORD PTR _pEntry$[esp+64]
	mov	ecx, esi
	mov	DWORD PTR _iReligionsEnhancedPercent$[esp+68], eax
	call	?GetFaithFromKills@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFaithFromKills
	test	eax, eax
	jle	SHORT $LN49@ScoreBelie@2

; 6390 : 	{
; 6391 : 		int iTemp = pEntry->GetFaithFromKills() * pEntry->GetMaxDistance() * iFlavorOffense / 100;

	mov	ecx, esi
	call	?GetFaithFromKills@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFaithFromKills
	mov	ecx, esi
	mov	edi, eax
	call	?GetMaxDistance@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetMaxDistance
	imul	edi, eax
	imul	edi, DWORD PTR _iFlavorOffense$[esp+68]

; 6392 : 		if (m_pPlayer->GetDiplomacyAI()->IsGoingForWorldConquest())

	mov	ecx, DWORD PTR [ebp+4]
	mov	eax, 1374389535				; 51eb851fH
	imul	edi
	sar	edx, 5
	mov	edi, edx
	shr	edi, 31					; 0000001fH
	add	edi, edx
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsGoingForWorldConquest@CvDiplomacyAI@@QAE_NXZ ; CvDiplomacyAI::IsGoingForWorldConquest
	test	al, al
	je	SHORT $LN49@ScoreBelie@2

; 6393 : 		{
; 6394 : 			iTemp *= 2;

	add	edi, edi
$LN49@ScoreBelie@2:

; 6395 : 		}
; 6396 : 		iRtnValue += iTemp;
; 6397 : 	}
; 6398 : 
; 6399 : 	//-------
; 6400 : 	// UNUSED
; 6401 : 	//-------
; 6402 : 	iRtnValue += pEntry->GetPlayerHappiness() * iFlavorHappiness;

	mov	ecx, esi
	call	?GetPlayerHappiness@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetPlayerHappiness
	imul	eax, DWORD PTR _iFlavorHappiness$[esp+68]

; 6403 : 	iRtnValue += pEntry->GetPlayerCultureModifier() * iFlavorCulture;

	mov	ecx, esi
	add	edi, eax
	call	?GetPlayerCultureModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetPlayerCultureModifier
	imul	eax, DWORD PTR _iFlavorCulture$[esp+68]

; 6404 : 
; 6405 : 	//-----------------
; 6406 : 	// FOLLOWER BELIEFS
; 6407 : 	//-----------------
; 6408 : 	// Unlocks a building
; 6409 : #ifdef AUI_WARNING_FIXES
; 6410 : 	for (uint iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)
; 6411 : #else
; 6412 : 	for (int iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)

	xor	ebp, ebp
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	add	edi, eax
	mov	DWORD PTR _iI$228717[esp+68], ebp
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	test	eax, eax
	jle	$LN46@ScoreBelie@2
$LL48@ScoreBelie@2:

; 6413 : #endif
; 6414 : 	{
; 6415 : 		if (pEntry->IsBuildingClassEnabled(iI))

	push	ebp
	mov	ecx, esi
	call	?IsBuildingClassEnabled@CvBeliefEntry@@QBE_NH@Z ; CvBeliefEntry::IsBuildingClassEnabled
	test	al, al
	je	$LN47@ScoreBelie@2

; 6416 : 		{
; 6417 : 			BuildingTypes eBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings(iI);

	mov	edx, DWORD PTR _this$[esp+68]
	mov	ecx, DWORD PTR [edx+4]
	push	ebp
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings

; 6418 : 			CvBuildingEntry* pBuildingEntry = GC.GetGameBuildings()->GetEntry(eBuilding);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBuildings@CvGlobals@@QBEPAVCvBuildingXMLEntries@@XZ ; CvGlobals::GetGameBuildings
	mov	ecx, eax
	call	?GetEntry@CvBuildingXMLEntries@@QAEPAVCvBuildingEntry@@H@Z ; CvBuildingXMLEntries::GetEntry
	mov	DWORD PTR _pBuildingEntry$228724[esp+68], eax

; 6419 : 
; 6420 : 			if(pBuildingEntry && pFlavorManager)

	test	eax, eax
	je	SHORT $LN47@ScoreBelie@2
	test	ebx, ebx
	je	SHORT $LN47@ScoreBelie@2

; 6421 : 			{
; 6422 : 				for(int iFlavorLoop = 0; iFlavorLoop < GC.getNumFlavorTypes(); iFlavorLoop++)

	cmp	DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764, 0
	mov	DWORD PTR _iFlavorLoop$228726[esp+64], 0
	jle	SHORT $LN47@ScoreBelie@2
	jmp	SHORT $LN43@ScoreBelie@2
	npad	3
$LL81@ScoreBelie@2:
	mov	eax, DWORD PTR _pBuildingEntry$228724[esp+68]
$LN43@ScoreBelie@2:

; 6423 : 				{
; 6424 : 					int iFlavorValue = pFlavorManager->GetPersonalityIndividualFlavor((FlavorTypes)iFlavorLoop) * pBuildingEntry->GetFlavorValue(iFlavorLoop);

	mov	ecx, DWORD PTR _iFlavorLoop$228726[esp+64]
	push	ecx
	mov	ecx, eax
	call	?GetFlavorValue@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetFlavorValue
	mov	edx, DWORD PTR _iFlavorLoop$228726[esp+64]
	push	edx
	mov	ecx, ebx
	mov	ebp, eax
	call	?GetPersonalityIndividualFlavor@CvFlavorManager@@QAEHW4FlavorTypes@@@Z ; CvFlavorManager::GetPersonalityIndividualFlavor
	imul	ebp, eax

; 6425 : 
; 6426 : 					// If can also be built with hammers, much less valuable
; 6427 : 					if (pBuildingEntry->GetProductionCost() > 0)

	mov	ecx, DWORD PTR _pBuildingEntry$228724[esp+68]
	call	?GetProductionCost@CvBuildingEntry@@QBEHXZ ; CvBuildingEntry::GetProductionCost
	test	eax, eax
	jle	SHORT $LN40@ScoreBelie@2

; 6428 : 					{
; 6429 : 						iFlavorValue /= 10;

	mov	eax, 1717986919				; 66666667H
	imul	ebp
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	ebp, eax
$LN40@ScoreBelie@2:
	mov	eax, DWORD PTR _iFlavorLoop$228726[esp+64]
	inc	eax

; 6430 : 					}
; 6431 : 					iRtnValue += iFlavorValue;

	add	edi, ebp
	cmp	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+1764
	mov	DWORD PTR _iFlavorLoop$228726[esp+64], eax
	jl	SHORT $LL81@ScoreBelie@2

; 6421 : 			{
; 6422 : 				for(int iFlavorLoop = 0; iFlavorLoop < GC.getNumFlavorTypes(); iFlavorLoop++)

	mov	ebp, DWORD PTR _iI$228717[esp+68]
$LN47@ScoreBelie@2:

; 6404 : 
; 6405 : 	//-----------------
; 6406 : 	// FOLLOWER BELIEFS
; 6407 : 	//-----------------
; 6408 : 	// Unlocks a building
; 6409 : #ifdef AUI_WARNING_FIXES
; 6410 : 	for (uint iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)
; 6411 : #else
; 6412 : 	for (int iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)

	inc	ebp
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iI$228717[esp+68], ebp
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	ebp, eax
	jl	$LL48@ScoreBelie@2
$LN46@ScoreBelie@2:

; 6432 : 				}
; 6433 : 			}
; 6434 : 		}
; 6435 : 	}
; 6436 : 
; 6437 : 	// Unlocks units?	
; 6438 : #ifdef AUI_WARNING_FIXES
; 6439 : 	for (uint i = 0; i < GC.getNumEraInfos(); i++)
; 6440 : #else
; 6441 : 	for(int i = 0; i < GC.getNumEraInfos(); i++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	ebp, ebp
	call	?getNumEraInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumEraInfos
	test	eax, eax
	jle	SHORT $LN37@ScoreBelie@2
	npad	1
$LL39@ScoreBelie@2:

; 6442 : #endif
; 6443 : 	{
; 6444 : 		// Add in for each era enabled
; 6445 : 		if (pEntry->IsFaithUnitPurchaseEra(i))

	push	ebp
	mov	ecx, esi
	call	?IsFaithUnitPurchaseEra@CvBeliefEntry@@QBE_NH@Z ; CvBeliefEntry::IsFaithUnitPurchaseEra
	test	al, al
	je	SHORT $LN38@ScoreBelie@2

; 6446 : 		{
; 6447 : 			int iTemp = (iFlavorOffense) + (iFlavorDefense / 2);

	mov	eax, DWORD PTR _iFlavorDefense$[esp+68]

; 6448 : 			if (m_pPlayer->GetDiplomacyAI()->IsGoingForWorldConquest())

	mov	ecx, DWORD PTR _this$[esp+68]
	mov	ecx, DWORD PTR [ecx+4]
	cdq
	sub	eax, edx
	mov	ebx, eax
	sar	ebx, 1
	add	ebx, DWORD PTR _iFlavorOffense$[esp+68]
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsGoingForWorldConquest@CvDiplomacyAI@@QAE_NXZ ; CvDiplomacyAI::IsGoingForWorldConquest
	test	al, al
	je	SHORT $LN35@ScoreBelie@2

; 6449 : 			{
; 6450 : 				iTemp *= 2;

	add	ebx, ebx
$LN35@ScoreBelie@2:

; 6451 : 			}
; 6452 : 			iRtnValue += iTemp;

	add	edi, ebx
$LN38@ScoreBelie@2:

; 6432 : 				}
; 6433 : 			}
; 6434 : 		}
; 6435 : 	}
; 6436 : 
; 6437 : 	// Unlocks units?	
; 6438 : #ifdef AUI_WARNING_FIXES
; 6439 : 	for (uint i = 0; i < GC.getNumEraInfos(); i++)
; 6440 : #else
; 6441 : 	for(int i = 0; i < GC.getNumEraInfos(); i++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	ebp
	call	?getNumEraInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumEraInfos
	cmp	ebp, eax
	jl	SHORT $LL39@ScoreBelie@2
$LN37@ScoreBelie@2:

; 6453 : 		}
; 6454 : 	}
; 6455 : 
; 6456 : 	//----------------
; 6457 : 	// FOUNDER BELIEFS
; 6458 : 	//----------------
; 6459 : 	iRtnValue += (int)(pEntry->GetHappinessPerFollowingCity() * (float)(iFlavorHappiness + 2 * iFlavorOffense - iFlavorDefense));

	mov	ecx, esi
	call	?GetHappinessPerFollowingCity@CvBeliefEntry@@QBEMXZ ; CvBeliefEntry::GetHappinessPerFollowingCity
	mov	edx, DWORD PTR _iFlavorOffense$[esp+68]
	mov	ebp, DWORD PTR _iFlavorDefense$[esp+68]
	mov	ebx, DWORD PTR _iFlavorHappiness$[esp+68]
	lea	eax, DWORD PTR [edx+edx]
	sub	eax, ebp
	add	eax, ebx
	mov	DWORD PTR tv925[esp+64], eax
	fimul	DWORD PTR tv925[esp+64]
	call	__ftol2_sse_excpt

; 6460 : 	if (pEntry->GetHappinessPerXPeacefulForeignFollowers() > 0 && iFlavorDefense > 0)

	mov	ecx, esi
	add	edi, eax
	call	?GetHappinessPerXPeacefulForeignFollowers@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetHappinessPerXPeacefulForeignFollowers
	test	eax, eax
	jle	SHORT $LN34@ScoreBelie@2
	test	ebp, ebp
	jle	SHORT $LN34@ScoreBelie@2

; 6461 : 	{
; 6462 : 		iRtnValue += (iFlavorHappiness * 10 * iFlavorDefense) / (pEntry->GetHappinessPerXPeacefulForeignFollowers() * iFlavorDefense);

	mov	ecx, esi
	call	?GetHappinessPerXPeacefulForeignFollowers@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetHappinessPerXPeacefulForeignFollowers
	imul	ebx, ebp
	mov	ecx, eax
	imul	ecx, ebp
	lea	eax, DWORD PTR [ebx+ebx*4]
	add	eax, eax
	cdq
	idiv	ecx
	add	edi, eax
$LN34@ScoreBelie@2:

; 6463 : 	}
; 6464 : 	iRtnValue += iFlavorScience * pEntry->GetSciencePerOtherReligionFollower() / 5;

	mov	ecx, esi
	call	?GetSciencePerOtherReligionFollower@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSciencePerOtherReligionFollower
	mov	ecx, eax
	imul	ecx, DWORD PTR _iFlavorScience$[esp+68]
	mov	eax, 1717986919				; 66666667H
	imul	ecx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 6465 : 	iRtnValue += pEntry->GetGoldPerFollowingCity() * iFlavorGold;

	mov	ecx, esi
	add	edi, eax
	call	?GetGoldPerFollowingCity@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGoldPerFollowingCity
	mov	ebx, DWORD PTR _iFlavorGold$[esp+68]
	imul	eax, ebx

; 6466 : 	if(pEntry->GetGoldPerXFollowers() > 0)

	mov	ecx, esi
	add	edi, eax
	call	?GetGoldPerXFollowers@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGoldPerXFollowers
	test	eax, eax
	jle	SHORT $LN33@ScoreBelie@2

; 6467 : 	{
; 6468 : 		iRtnValue += (iFlavorGold * 4 / pEntry->GetGoldPerXFollowers());

	mov	ecx, esi
	call	?GetGoldPerXFollowers@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGoldPerXFollowers
	mov	ecx, eax
	lea	eax, DWORD PTR [ebx*4]
	cdq
	idiv	ecx
	add	edi, eax
$LN33@ScoreBelie@2:

; 6469 : 	}
; 6470 : 	iRtnValue += iFlavorGold * pEntry->GetGoldWhenCityAdopts() / 50;

	mov	ecx, esi
	call	?GetGoldWhenCityAdopts@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGoldWhenCityAdopts
	mov	ecx, eax
	imul	ecx, ebx
	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 6471 : 
; 6472 : 	// Minimum influence with city states
; 6473 : 	iRtnValue += iFlavorDiplomacy * pEntry->GetCityStateMinimumInfluence() / 7;

	mov	ecx, esi
	add	edi, eax
	call	?GetCityStateMinimumInfluence@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityStateMinimumInfluence
	mov	ecx, eax
	imul	ecx, DWORD PTR _iFlavorDiplomacy$[esp+68]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 2
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	add	edi, ecx

; 6474 : 
; 6475 : 	// Yields for foreign followers
; 6476 : 	for(int iI = 0; iI < NUM_YIELD_TYPES; iI++)

	xor	ebx, ebx
	npad	6
$LL32@ScoreBelie@2:

; 6477 : 	{
; 6478 : 		if (iI == YIELD_CULTURE)
; 6479 : 		{
; 6480 : 			iRtnValue += pEntry->GetYieldChangePerForeignCity(iI) * 2 * iFlavorCulture;

	mov	ecx, esi
	cmp	ebx, 4
	jne	$LN29@ScoreBelie@2
	push	ebx
	call	?GetYieldChangePerForeignCity@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangePerForeignCity
	mov	ebp, DWORD PTR _iFlavorCulture$[esp+68]
	imul	eax, ebp

; 6481 : 			if (pEntry->GetYieldChangePerXForeignFollowers(iI) > 0)

	push	ebx
	mov	ecx, esi
	lea	edi, DWORD PTR [edi+eax*2]
	call	?GetYieldChangePerXForeignFollowers@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangePerXForeignFollowers
	test	eax, eax
	jle	SHORT $LN84@ScoreBelie@2

; 6482 : 			{
; 6483 : 				iRtnValue += 10 * iFlavorCulture / pEntry->GetYieldChangePerXForeignFollowers(iI);

	push	ebx
	mov	ecx, esi
	call	?GetYieldChangePerXForeignFollowers@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangePerXForeignFollowers
	mov	ecx, eax
	lea	eax, DWORD PTR [ebp+ebp*4]
	add	eax, eax
	cdq
	idiv	ecx
	add	edi, eax
$LN84@ScoreBelie@2:

; 6484 : 			}
; 6485 : 		}
; 6486 : 		else

	mov	ebp, DWORD PTR _iFlavorDefense$[esp+68]
$LN31@ScoreBelie@2:

; 6474 : 
; 6475 : 	// Yields for foreign followers
; 6476 : 	for(int iI = 0; iI < NUM_YIELD_TYPES; iI++)

	inc	ebx
	cmp	ebx, 6
	jl	SHORT $LL32@ScoreBelie@2

; 6492 : 			}
; 6493 : 		}
; 6494 : 	}
; 6495 : 
; 6496 : #ifdef NQ_FREE_SETTLERS_FROM_BELIEF
; 6497 : 	// extra value for expansionist civs
; 6498 : 	iRtnValue += pEntry->GetNumFreeSettlers() * iFlavorExpansion;

	mov	ecx, esi
	call	?GetNumFreeSettlers@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetNumFreeSettlers
	mov	ebx, DWORD PTR _iFlavorExpansion$[esp+68]
	imul	eax, ebx

; 6499 : #endif
; 6500 : 
; 6501 : 	//-----------------
; 6502 : 	// ENHANCER BELIEFS
; 6503 : 	//-----------------
; 6504 : 	iRtnValue += iFlavorGP * pEntry->GetGreatPersonExpendedFaith() / 10;

	mov	ecx, esi
	add	edi, eax
	call	?GetGreatPersonExpendedFaith@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGreatPersonExpendedFaith
	mov	ecx, eax
	imul	ecx, DWORD PTR _iFlavorGP$[esp+68]
	mov	eax, 1717986919				; 66666667H
	imul	ecx
	sar	edx, 2
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 6505 : 	iRtnValue += iFlavorDiplomacy * pEntry->GetFriendlyCityStateSpreadModifier() / 20;

	mov	ecx, esi
	add	edi, eax
	call	?GetFriendlyCityStateSpreadModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFriendlyCityStateSpreadModifier
	mov	ecx, eax
	imul	ecx, DWORD PTR _iFlavorDiplomacy$[esp+68]
	mov	eax, 1717986919				; 66666667H
	imul	ecx
	sar	edx, 3
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	add	edi, ecx

; 6506 : 	iRtnValue += iFlavorDefense * pEntry->GetCombatModifierFriendlyCities() / 4;

	mov	ecx, esi
	call	?GetCombatModifierFriendlyCities@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCombatModifierFriendlyCities
	imul	eax, ebp
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2

; 6507 : 	iRtnValue += iFlavorOffense * pEntry->GetCombatModifierEnemyCities() / 4;

	mov	ecx, esi
	add	edi, eax
	call	?GetCombatModifierEnemyCities@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCombatModifierEnemyCities
	imul	eax, DWORD PTR _iFlavorOffense$[esp+68]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2

; 6508 : #ifdef NQ_DEUS_VULT
; 6509 : 	if (pEntry->DeusVult())

	mov	ecx, esi
	add	edi, eax
	call	?DeusVult@CvBeliefEntry@@QBE_NXZ	; CvBeliefEntry::DeusVult
	test	al, al
	je	SHORT $LN25@ScoreBelie@2

; 6510 : 	{
; 6511 : 		iRtnValue += (iFlavorOffense + iFlavorDefense) * 3;

	mov	edx, DWORD PTR _iFlavorOffense$[esp+68]
	lea	eax, DWORD PTR [edx+ebp]
	lea	ecx, DWORD PTR [eax+edi]
	lea	edi, DWORD PTR [ecx+eax*2]
$LN25@ScoreBelie@2:

; 6512 : 	}
; 6513 : #endif
; 6514 : #ifdef NQ_GOLDEN_AGE_TURNS_FROM_BELIEF
; 6515 : 	iRtnValue += pEntry->GetGoldenAgeTurns() * (iFlavorGold + iFlavorCulture) / 5;

	mov	ecx, esi
	call	?GetGoldenAgeTurns@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetGoldenAgeTurns
	mov	edx, DWORD PTR _iFlavorCulture$[esp+68]
	mov	ecx, eax
	mov	eax, DWORD PTR _iFlavorGold$[esp+68]
	add	eax, edx
	imul	ecx, eax
	mov	eax, 1717986919				; 66666667H
	imul	ecx

; 6516 : #endif
; 6517 : 
; 6518 : 	// Chosen EARLY?
; 6519 : 	if (iReligionsEnhancedPercent < 33)

	mov	eax, DWORD PTR _iReligionsEnhancedPercent$[esp+68]
	sar	edx, 1
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	add	edi, ecx
	cmp	eax, 33					; 00000021H

; 6520 : 	{
; 6521 : 		// Good early
; 6522 : 		iRtnValue += (2 * iFlavorExpansion) + pEntry->GetSpreadDistanceModifier();

	mov	ecx, esi
	jge	$LN24@ScoreBelie@2
	call	?GetSpreadDistanceModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadDistanceModifier
	add	eax, edi

; 6523 : 		iRtnValue += (2 * iFlavorScience) + pEntry->GetSpreadStrengthModifier();

	mov	ecx, esi
	lea	edi, DWORD PTR [eax+ebx*2]
	call	?GetSpreadStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadStrengthModifier
	mov	edx, DWORD PTR _iFlavorScience$[esp+68]
	add	eax, edi

; 6524 : 		iRtnValue += pEntry->GetMissionaryStrengthModifier() * 2;

	mov	ecx, esi
	lea	edi, DWORD PTR [eax+edx*2]
	call	?GetMissionaryStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryStrengthModifier

; 6525 : 		iRtnValue += (-1 * pEntry->GetMissionaryCostModifier()) * 2;

	mov	ecx, esi
	lea	edi, DWORD PTR [edi+eax*2]
	call	?GetMissionaryCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryCostModifier
	neg	eax

; 6526 : 
; 6527 : 		// Poor early
; 6528 : 		iRtnValue += pEntry->GetProphetStrengthModifier() / 4;

	mov	ecx, esi
	lea	edi, DWORD PTR [edi+eax*2]
	call	?GetProphetStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetProphetStrengthModifier
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2

; 6529 : 		iRtnValue += (-1 * pEntry->GetProphetCostModifier()) / 4;

	mov	ecx, esi
	add	edi, eax
	call	?GetProphetCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetProphetCostModifier
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	neg	eax
	add	edi, eax
	jmp	$LN21@ScoreBelie@2
$LN29@ScoreBelie@2:

; 6487 : 		{
; 6488 : 			iRtnValue += pEntry->GetYieldChangePerForeignCity(iI) * 10;

	push	ebx
	call	?GetYieldChangePerForeignCity@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangePerForeignCity
	lea	edx, DWORD PTR [eax+eax*4]

; 6489 : 			if (pEntry->GetYieldChangePerXForeignFollowers(iI) > 0)

	push	ebx
	mov	ecx, esi
	lea	edi, DWORD PTR [edi+edx*2]
	call	?GetYieldChangePerXForeignFollowers@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangePerXForeignFollowers
	test	eax, eax
	jle	$LN31@ScoreBelie@2

; 6490 : 			{
; 6491 : 				iRtnValue += 50 / pEntry->GetYieldChangePerXForeignFollowers(iI);

	push	ebx
	mov	ecx, esi
	call	?GetYieldChangePerXForeignFollowers@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangePerXForeignFollowers
	mov	ecx, eax
	mov	eax, 50					; 00000032H
	cdq
	idiv	ecx
	add	edi, eax
	jmp	$LN31@ScoreBelie@2
$LN24@ScoreBelie@2:

; 6530 : 	}
; 6531 : 
; 6532 : 	// Chosen in the MIDDLE?
; 6533 : 	else if (iReligionsEnhancedPercent < 66)

	cmp	eax, 66					; 00000042H
	jge	SHORT $LN22@ScoreBelie@2

; 6534 : 	{
; 6535 : 		iRtnValue += iFlavorExpansion + pEntry->GetSpreadDistanceModifier() / 2;

	call	?GetSpreadDistanceModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadDistanceModifier
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, ebx

; 6536 : 		iRtnValue += iFlavorScience + pEntry->GetSpreadStrengthModifier() / 2;

	mov	ecx, esi
	add	edi, eax
	call	?GetSpreadStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadStrengthModifier
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _iFlavorScience$[esp+68]

; 6537 : 		iRtnValue += pEntry->GetProphetStrengthModifier() / 2;

	mov	ecx, esi
	add	edi, eax
	call	?GetProphetStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetProphetStrengthModifier
	cdq
	sub	eax, edx
	sar	eax, 1

; 6538 : 		iRtnValue += (-1 * pEntry->GetProphetCostModifier()) / 2;

	mov	ecx, esi
	add	edi, eax
	call	?GetProphetCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetProphetCostModifier
	cdq
	sub	eax, edx
	sar	eax, 1
	neg	eax

; 6539 : 		iRtnValue += pEntry->GetMissionaryStrengthModifier();

	mov	ecx, esi
	add	edi, eax
	call	?GetMissionaryStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryStrengthModifier

; 6540 : 		iRtnValue += (-1 * pEntry->GetMissionaryCostModifier());

	mov	ecx, esi
	add	edi, eax
	call	?GetMissionaryCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryCostModifier

; 6541 : 	}
; 6542 : 
; 6543 : 	// Chosen LATE?
; 6544 : 	else

	jmp	SHORT $LN91@ScoreBelie@2
$LN22@ScoreBelie@2:

; 6545 : 	{
; 6546 : 		// Poor late
; 6547 : 		iRtnValue += ((2 * iFlavorExpansion) + pEntry->GetSpreadDistanceModifier()) / 4;

	call	?GetSpreadDistanceModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadDistanceModifier
	lea	eax, DWORD PTR [eax+ebx*2]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2

; 6548 : 		iRtnValue += ((2 * iFlavorScience) + pEntry->GetSpreadStrengthModifier()) / 4;

	mov	ecx, esi
	add	edi, eax
	call	?GetSpreadStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetSpreadStrengthModifier
	mov	ecx, DWORD PTR _iFlavorScience$[esp+68]
	lea	eax, DWORD PTR [eax+ecx*2]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2

; 6549 : 		iRtnValue += pEntry->GetMissionaryStrengthModifier() / 2;

	mov	ecx, esi
	add	edi, eax
	call	?GetMissionaryStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryStrengthModifier
	cdq
	sub	eax, edx
	sar	eax, 1

; 6550 : 		iRtnValue += (-1 * pEntry->GetMissionaryCostModifier()) / 2;

	mov	ecx, esi
	add	edi, eax
	call	?GetMissionaryCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetMissionaryCostModifier
	cdq
	sub	eax, edx
	sar	eax, 1
	neg	eax

; 6551 : 
; 6552 : 		// Good late
; 6553 : 		iRtnValue += pEntry->GetProphetStrengthModifier();

	mov	ecx, esi
	add	edi, eax
	call	?GetProphetStrengthModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetProphetStrengthModifier

; 6554 : 		iRtnValue += (-1 * pEntry->GetProphetCostModifier());

	mov	ecx, esi
	add	edi, eax
	call	?GetProphetCostModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetProphetCostModifier
$LN91@ScoreBelie@2:
	sub	edi, eax
$LN21@ScoreBelie@2:

; 6555 : 	}
; 6556 : 
; 6557 : 	//-----------------
; 6558 : 	// REFORMATION BELIEFS
; 6559 : 	//-----------------
; 6560 : 	if (pEntry->FaithPurchaseAllGreatPeople())

	mov	ecx, esi
	call	?FaithPurchaseAllGreatPeople@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::FaithPurchaseAllGreatPeople
	test	al, al
	je	$LN83@ScoreBelie@2

; 6561 : 	{
; 6562 : 		// Count number of GP branches we have still to open and score based on that
; 6563 : 		int iTemp = 0;
; 6564 : 		PolicyBranchTypes eBranch;
; 6565 : 		eBranch = (PolicyBranchTypes)GC.getInfoTypeForString("POLICY_BRANCH_TRADITION", true /*bHideAssert*/);

	push	1
	push	OFFSET $SG228761
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iTemp$228758[esp+72], 0
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 6566 : 		if (eBranch != NO_POLICY_BRANCH_TYPE && (!m_pPlayer->GetPlayerPolicies()->IsPolicyBranchFinished(eBranch) || m_pPlayer->GetPlayerPolicies()->IsPolicyBranchBlocked(eBranch)))

	mov	ebp, DWORD PTR _this$[esp+68]
	mov	ebx, eax
	cmp	ebx, -1
	je	SHORT $LN85@ScoreBelie@2
	mov	ecx, DWORD PTR [ebp+4]
	push	ebx
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchFinished
	test	al, al
	je	SHORT $LN18@ScoreBelie@2
	mov	ecx, DWORD PTR [ebp+4]
	push	ebx
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchBlocked
	test	al, al
	je	SHORT $LN85@ScoreBelie@2
$LN18@ScoreBelie@2:

; 6567 : 		{
; 6568 : 			iTemp++;

	mov	DWORD PTR _iTemp$228758[esp+64], 1
$LN85@ScoreBelie@2:

; 6569 : 		}
; 6570 : 		eBranch = (PolicyBranchTypes)GC.getInfoTypeForString("POLICY_BRANCH_HONOR", true /*bHideAssert*/);

	push	1
	push	OFFSET $SG228765
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ebx, eax

; 6571 : 		if (eBranch != NO_POLICY_BRANCH_TYPE && (!m_pPlayer->GetPlayerPolicies()->IsPolicyBranchFinished(eBranch) || m_pPlayer->GetPlayerPolicies()->IsPolicyBranchBlocked(eBranch)))

	cmp	ebx, -1
	je	SHORT $LN86@ScoreBelie@2
	mov	ecx, DWORD PTR [ebp+4]
	push	ebx
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchFinished
	test	al, al
	je	SHORT $LN16@ScoreBelie@2
	mov	ecx, DWORD PTR [ebp+4]
	push	ebx
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchBlocked
	test	al, al
	je	SHORT $LN86@ScoreBelie@2
$LN16@ScoreBelie@2:

; 6572 : 		{
; 6573 : 			iTemp++;

	inc	DWORD PTR _iTemp$228758[esp+64]
$LN86@ScoreBelie@2:

; 6574 : 		}
; 6575 : 		eBranch = (PolicyBranchTypes)GC.getInfoTypeForString("POLICY_BRANCH_AESTHETICS", true /*bHideAssert*/);

	push	1
	push	OFFSET $SG228769
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ebx, eax

; 6576 : 		if (eBranch != NO_POLICY_BRANCH_TYPE && (!m_pPlayer->GetPlayerPolicies()->IsPolicyBranchFinished(eBranch) || m_pPlayer->GetPlayerPolicies()->IsPolicyBranchBlocked(eBranch)))

	cmp	ebx, -1
	je	SHORT $LN87@ScoreBelie@2
	mov	ecx, DWORD PTR [ebp+4]
	push	ebx
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchFinished
	test	al, al
	je	SHORT $LN14@ScoreBelie@2
	mov	ecx, DWORD PTR [ebp+4]
	push	ebx
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchBlocked
	test	al, al
	je	SHORT $LN87@ScoreBelie@2
$LN14@ScoreBelie@2:

; 6577 : 		{
; 6578 : 			iTemp++;

	inc	DWORD PTR _iTemp$228758[esp+64]
$LN87@ScoreBelie@2:

; 6579 : 		}
; 6580 : 		eBranch = (PolicyBranchTypes)GC.getInfoTypeForString("POLICY_BRANCH_COMMERCE", true /*bHideAssert*/);

	push	1
	push	OFFSET $SG228773
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ebx, eax

; 6581 : 		if (eBranch != NO_POLICY_BRANCH_TYPE && (!m_pPlayer->GetPlayerPolicies()->IsPolicyBranchFinished(eBranch) || m_pPlayer->GetPlayerPolicies()->IsPolicyBranchBlocked(eBranch)))

	cmp	ebx, -1
	je	SHORT $LN88@ScoreBelie@2
	mov	ecx, DWORD PTR [ebp+4]
	push	ebx
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchFinished
	test	al, al
	je	SHORT $LN12@ScoreBelie@2
	mov	ecx, DWORD PTR [ebp+4]
	push	ebx
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchBlocked
	test	al, al
	je	SHORT $LN88@ScoreBelie@2
$LN12@ScoreBelie@2:

; 6582 : 		{
; 6583 : 			iTemp++;

	inc	DWORD PTR _iTemp$228758[esp+64]
$LN88@ScoreBelie@2:

; 6584 : 		}
; 6585 : 		eBranch = (PolicyBranchTypes)GC.getInfoTypeForString("POLICY_BRANCH_EXPLORATION", true /*bHideAssert*/);

	push	1
	push	OFFSET $SG228777
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ebx, eax

; 6586 : 		if (eBranch != NO_POLICY_BRANCH_TYPE && (!m_pPlayer->GetPlayerPolicies()->IsPolicyBranchFinished(eBranch) || m_pPlayer->GetPlayerPolicies()->IsPolicyBranchBlocked(eBranch)))

	cmp	ebx, -1
	je	SHORT $LN89@ScoreBelie@2
	mov	ecx, DWORD PTR [ebp+4]
	push	ebx
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchFinished
	test	al, al
	je	SHORT $LN10@ScoreBelie@2
	mov	ecx, DWORD PTR [ebp+4]
	push	ebx
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchBlocked
	test	al, al
	je	SHORT $LN89@ScoreBelie@2
$LN10@ScoreBelie@2:

; 6587 : 		{
; 6588 : 			iTemp++;

	inc	DWORD PTR _iTemp$228758[esp+64]
$LN89@ScoreBelie@2:

; 6589 : 		}
; 6590 : 		eBranch = (PolicyBranchTypes)GC.getInfoTypeForString("POLICY_BRANCH_RATIONALISM", true /*bHideAssert*/);

	push	1
	push	OFFSET $SG228781
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ebx, eax

; 6591 : 		if (eBranch != NO_POLICY_BRANCH_TYPE && (!m_pPlayer->GetPlayerPolicies()->IsPolicyBranchFinished(eBranch) || m_pPlayer->GetPlayerPolicies()->IsPolicyBranchBlocked(eBranch)))

	cmp	ebx, -1
	je	SHORT $LN90@ScoreBelie@2
	mov	ecx, DWORD PTR [ebp+4]
	push	ebx
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchFinished@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchFinished
	test	al, al
	je	SHORT $LN8@ScoreBelie@2
	mov	ecx, DWORD PTR [ebp+4]
	push	ebx
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?IsPolicyBranchBlocked@CvPlayerPolicies@@QBE_NW4PolicyBranchTypes@@@Z ; CvPlayerPolicies::IsPolicyBranchBlocked
	test	al, al
	je	SHORT $LN90@ScoreBelie@2
$LN8@ScoreBelie@2:

; 6592 : 		{
; 6593 : 			iTemp++;

	mov	eax, DWORD PTR _iTemp$228758[esp+64]
	inc	eax

; 6594 : 		}
; 6595 : 
; 6596 : 		iRtnValue += (iTemp * 6);

	lea	edx, DWORD PTR [eax+eax*2]
	lea	edi, DWORD PTR [edi+edx*2]
	jmp	SHORT $LN20@ScoreBelie@2
$LN90@ScoreBelie@2:

; 6592 : 		{
; 6593 : 			iTemp++;

	mov	eax, DWORD PTR _iTemp$228758[esp+64]

; 6594 : 		}
; 6595 : 
; 6596 : 		iRtnValue += (iTemp * 6);

	lea	edx, DWORD PTR [eax+eax*2]
	lea	edi, DWORD PTR [edi+edx*2]
	jmp	SHORT $LN20@ScoreBelie@2
$LN83@ScoreBelie@2:
	mov	ebp, DWORD PTR _this$[esp+68]
$LN20@ScoreBelie@2:

; 6597 : 	}
; 6598 : 	if (pEntry->ConvertsBarbarians())

	mov	ecx, esi
	call	?ConvertsBarbarians@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::ConvertsBarbarians
	test	al, al
	je	SHORT $LN5@ScoreBelie@2

; 6599 : 	{
; 6600 : 		MilitaryAIStrategyTypes eStrategyBarbs = (MilitaryAIStrategyTypes) GC.getInfoTypeForString("MILITARYAISTRATEGY_ERADICATE_BARBARIANS");

	push	0
	push	OFFSET $SG228787
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 6601 : 		if (m_pPlayer->GetMilitaryAI()->IsUsingStrategy(eStrategyBarbs))

	mov	ecx, DWORD PTR [ebp+4]
	push	eax
	call	?GetMilitaryAI@CvPlayer@@QBEPAVCvMilitaryAI@@XZ ; CvPlayer::GetMilitaryAI
	mov	ecx, eax
	call	?IsUsingStrategy@CvMilitaryAI@@QAE_NW4MilitaryAIStrategyTypes@@@Z ; CvMilitaryAI::IsUsingStrategy
	test	al, al
	je	SHORT $LN6@ScoreBelie@2

; 6602 : 		{
; 6603 : 			iRtnValue += 40;

	add	edi, 40					; 00000028H

; 6604 : 		}
; 6605 : 		else

	jmp	SHORT $LN5@ScoreBelie@2
$LN6@ScoreBelie@2:

; 6606 : 		{
; 6607 : 			iRtnValue += 15;

	add	edi, 15					; 0000000fH
$LN5@ScoreBelie@2:

; 6608 : 		}
; 6609 : 	}
; 6610 : 	if (pEntry->GetCityStateInfluenceModifier() > 0)

	mov	ecx, esi
	call	?GetCityStateInfluenceModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityStateInfluenceModifier
	test	eax, eax
	jle	SHORT $LN4@ScoreBelie@2

; 6611 : 	{
; 6612 : 		iRtnValue += (pEntry->GetCityStateInfluenceModifier() * iFlavorDiplomacy / 5);

	mov	ecx, esi
	call	?GetCityStateInfluenceModifier@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetCityStateInfluenceModifier
	mov	ecx, eax
	imul	ecx, DWORD PTR _iFlavorDiplomacy$[esp+68]
	mov	eax, 1717986919				; 66666667H
	imul	ecx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	add	edi, eax
$LN4@ScoreBelie@2:

; 6613 : 	}
; 6614 : 	if (pEntry->GetInquisitorPressureRetention() > 0)

	mov	ecx, esi
	call	?GetInquisitorPressureRetention@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetInquisitorPressureRetention
	test	eax, eax
	jle	SHORT $LN3@ScoreBelie@2

; 6615 : 	{
; 6616 : 		iRtnValue += (pEntry->GetInquisitorPressureRetention() / 2);

	mov	ecx, esi
	call	?GetInquisitorPressureRetention@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetInquisitorPressureRetention
	cdq
	sub	eax, edx
	sar	eax, 1
	add	edi, eax
$LN3@ScoreBelie@2:

; 6617 : 	}
; 6618 : 	if (pEntry->GetSpyPressure() > 0)

	mov	ecx, esi
	call	?GetSpyPressure@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetSpyPressure
	test	eax, eax
	jle	SHORT $LN2@ScoreBelie@2

; 6619 : 	{
; 6620 : 		iRtnValue += (pEntry->GetSpyPressure()* 5);

	mov	ecx, esi
	call	?GetSpyPressure@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetSpyPressure
	lea	ecx, DWORD PTR [eax+edi]
	lea	edi, DWORD PTR [ecx+eax*4]
$LN2@ScoreBelie@2:

; 6621 : 	}
; 6622 : 	if (pEntry->GetFaithBuildingTourism() > 0)

	mov	ecx, esi
	call	?GetFaithBuildingTourism@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFaithBuildingTourism
	test	eax, eax
	jle	SHORT $LN79@ScoreBelie@2

; 6623 : 	{
; 6624 : 		iRtnValue += (pEntry->GetFaithBuildingTourism() * 20);

	mov	ecx, esi
	call	?GetFaithBuildingTourism@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFaithBuildingTourism
	lea	edx, DWORD PTR [eax+eax*4]
	lea	eax, DWORD PTR [edi+edx*4]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 6628 : }

	add	esp, 52					; 00000034H
	ret	4
$LN79@ScoreBelie@2:

; 6625 : 	}
; 6626 : 
; 6627 : 	return iRtnValue;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 6628 : }

	add	esp, 52					; 00000034H
	ret	4
?ScoreBeliefForPlayer@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ENDP ; CvReligionAI::ScoreBeliefForPlayer
_TEXT	ENDS
PUBLIC	?ShouldBecomeNewMajority@CvReligionAI@@ABE_NPAVCvCity@@W4ReligionTypes@@H@Z ; CvReligionAI::ShouldBecomeNewMajority
; Function compile flags: /Ogtpy
;	COMDAT ?ShouldBecomeNewMajority@CvReligionAI@@ABE_NPAVCvCity@@W4ReligionTypes@@H@Z
_TEXT	SEGMENT
_pCity$ = 8						; size = 4
_eReligion$ = 12					; size = 4
_iNewPressure$ = 16					; size = 4
?ShouldBecomeNewMajority@CvReligionAI@@ABE_NPAVCvCity@@W4ReligionTypes@@H@Z PROC ; CvReligionAI::ShouldBecomeNewMajority, COMDAT
; _this$ = ecx

; 6743 : 	CvCityReligions* pCityReligions = pCity->GetCityReligions();

	mov	ecx, DWORD PTR _pCity$[esp-4]
	push	esi
	push	edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions

; 6744 : 	int iTotalPressure = pCityReligions->GetTotalPressure() + iNewPressure;

	mov	esi, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	lea	eax, DWORD PTR [eax+eax*2]
	mov	ecx, esi
	lea	eax, DWORD PTR [esi+eax*8]
	xor	edx, edx
	cmp	ecx, eax
	je	SHORT $LN3@ShouldBeco
	npad	2
$LL5@ShouldBeco:
	add	edx, DWORD PTR [ecx+12]
	add	ecx, 24					; 00000018H
	cmp	ecx, eax
	jne	SHORT $LL5@ShouldBeco
$LN3@ShouldBeco:
	mov	edi, DWORD PTR _iNewPressure$[esp+4]

; 6745 : 	int iReligionPressure = pCityReligions->GetPressure(eReligion) + iNewPressure;

	mov	ecx, esi
	add	edx, edi
	cmp	ecx, eax
	je	SHORT $LN13@ShouldBeco
	mov	esi, DWORD PTR _eReligion$[esp+4]
	npad	6
$LL15@ShouldBeco:
	cmp	DWORD PTR [ecx], esi
	je	SHORT $LN24@ShouldBeco
	add	ecx, 24					; 00000018H
	cmp	ecx, eax
	jne	SHORT $LL15@ShouldBeco
$LN13@ShouldBeco:
	xor	ecx, ecx

; 6746 : 
; 6747 : 	return (iReligionPressure * 2) > iTotalPressure;

	mov	ecx, edi
	add	ecx, ecx
	xor	eax, eax
	cmp	ecx, edx
	pop	edi
	setg	al
	pop	esi

; 6748 : }

	ret	12					; 0000000cH
$LN24@ShouldBeco:

; 6745 : 	int iReligionPressure = pCityReligions->GetPressure(eReligion) + iNewPressure;

	mov	ecx, DWORD PTR [ecx+12]

; 6746 : 
; 6747 : 	return (iReligionPressure * 2) > iTotalPressure;

	add	ecx, edi
	add	ecx, ecx
	xor	eax, eax
	cmp	ecx, edx
	pop	edi
	setg	al
	pop	esi

; 6748 : }

	ret	12					; 0000000cH
?ShouldBecomeNewMajority@CvReligionAI@@ABE_NPAVCvCity@@W4ReligionTypes@@H@Z ENDP ; CvReligionAI::ShouldBecomeNewMajority
_TEXT	ENDS
PUBLIC	?AreAllOurCitiesConverted@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::AreAllOurCitiesConverted
EXTRN	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::nextCity
EXTRN	?IsPuppet@CvCity@@QBE_NXZ:PROC			; CvCity::IsPuppet
EXTRN	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z:PROC	; CvPlayer::firstCity
; Function compile flags: /Ogtpy
;	COMDAT ?AreAllOurCitiesConverted@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z
_TEXT	SEGMENT
_iLoop$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_bIncludePuppets$ = 12					; size = 1
?AreAllOurCitiesConverted@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z PROC ; CvReligionAI::AreAllOurCitiesConverted, COMDAT
; _this$ = ecx

; 6752 : {

	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 6753 : 	bool bRtnValue = true;
; 6754 : 
; 6755 : 	int iLoop;
; 6756 : 	CvCity* pLoopCity;
; 6757 : 	for(pLoopCity = m_pPlayer->firstCity(&iLoop); pLoopCity != NULL; pLoopCity = m_pPlayer->nextCity(&iLoop))

	mov	ecx, DWORD PTR [edi+4]
	push	0
	lea	eax, DWORD PTR _iLoop$[esp+20]
	push	eax
	mov	bl, 1
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN11@AreAllOurC
	mov	bl, BYTE PTR _bIncludePuppets$[esp+12]
	push	ebp
	mov	ebp, DWORD PTR _eReligion$[esp+16]
$LL6@AreAllOurC:

; 6758 : 	{
; 6759 : 		if(pLoopCity->GetCityReligions()->GetReligiousMajority() != eReligion)

	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, ebp
	je	SHORT $LN5@AreAllOurC

; 6760 : 		{
; 6761 : 			if(bIncludePuppets || !pLoopCity->IsPuppet())

	test	bl, bl
	jne	SHORT $LN1@AreAllOurC
	mov	ecx, esi
	call	?IsPuppet@CvCity@@QBE_NXZ		; CvCity::IsPuppet
	test	al, al
	je	SHORT $LN1@AreAllOurC
$LN5@AreAllOurC:

; 6753 : 	bool bRtnValue = true;
; 6754 : 
; 6755 : 	int iLoop;
; 6756 : 	CvCity* pLoopCity;
; 6757 : 	for(pLoopCity = m_pPlayer->firstCity(&iLoop); pLoopCity != NULL; pLoopCity = m_pPlayer->nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$[esp+24]
	push	ecx
	mov	ecx, DWORD PTR [edi+4]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LL6@AreAllOurC
	pop	ebp
	pop	edi
	pop	esi

; 6764 : 				break;
; 6765 : 			}
; 6766 : 		}
; 6767 : 	}
; 6768 : 
; 6769 : 	return bRtnValue;

	mov	al, 1
	pop	ebx

; 6770 : }

	pop	ecx
	ret	8
$LN1@AreAllOurC:
	pop	ebp
	pop	edi
	pop	esi

; 6762 : 			{
; 6763 : 				bRtnValue = false;

	xor	al, al
	pop	ebx

; 6770 : }

	pop	ecx
	ret	8
$LN11@AreAllOurC:
	pop	edi
	pop	esi

; 6764 : 				break;
; 6765 : 			}
; 6766 : 		}
; 6767 : 	}
; 6768 : 
; 6769 : 	return bRtnValue;

	mov	al, bl
	pop	ebx

; 6770 : }

	pop	ecx
	ret	8
?AreAllOurCitiesConverted@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ENDP ; CvReligionAI::AreAllOurCitiesConverted
_TEXT	ENDS
PUBLIC	?HaveEnoughInquisitors@CvReligionAI@@ABE_NW4ReligionTypes@@@Z ; CvReligionAI::HaveEnoughInquisitors
EXTRN	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z:PROC	; CvPlayer::nextUnit
EXTRN	?IsRemoveHeresy@CvUnitEntry@@QBE_NXZ:PROC	; CvUnitEntry::IsRemoveHeresy
EXTRN	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ:PROC	; CvUnit::getUnitInfo
EXTRN	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z:PROC	; CvPlayer::firstUnit
; Function compile flags: /Ogtpy
;	COMDAT ?HaveEnoughInquisitors@CvReligionAI@@ABE_NW4ReligionTypes@@@Z
_TEXT	SEGMENT
_iLoop$ = -4						; size = 4
_eReligion$ = 8						; size = 4
?HaveEnoughInquisitors@CvReligionAI@@ABE_NW4ReligionTypes@@@Z PROC ; CvReligionAI::HaveEnoughInquisitors, COMDAT
; _this$ = ecx

; 6914 : {

	push	ecx
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx

; 6915 : 	int iLoop;
; 6916 : 
; 6917 : 	// Need one for every city in our realm that is of another religion, plus one for defense
; 6918 : 	int iNumNeeded = 1;
; 6919 : 	for(CvCity* pCity = m_pPlayer->firstCity(&iLoop); pCity != NULL; pCity = m_pPlayer->nextCity(&iLoop))

	mov	ecx, DWORD PTR [edi+4]
	push	0
	lea	eax, DWORD PTR _iLoop$[esp+24]
	push	eax
	mov	ebp, 1
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	test	eax, eax
	je	SHORT $LN7@HaveEnough
	npad	1
$LL9@HaveEnough:

; 6920 : 	{
; 6921 : 		ReligionTypes eCityReligion = pCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority

; 6922 : 		if(eCityReligion > RELIGION_PANTHEON && eCityReligion != eReligion)

	test	eax, eax
	jle	SHORT $LN8@HaveEnough
	cmp	eax, DWORD PTR _eReligion$[esp+16]
	je	SHORT $LN8@HaveEnough

; 6923 : 		{
; 6924 : 			iNumNeeded++;

	inc	ebp
$LN8@HaveEnough:

; 6915 : 	int iLoop;
; 6916 : 
; 6917 : 	// Need one for every city in our realm that is of another religion, plus one for defense
; 6918 : 	int iNumNeeded = 1;
; 6919 : 	for(CvCity* pCity = m_pPlayer->firstCity(&iLoop); pCity != NULL; pCity = m_pPlayer->nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$[esp+24]
	push	ecx
	mov	ecx, DWORD PTR [edi+4]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	test	eax, eax
	jne	SHORT $LL9@HaveEnough
$LN7@HaveEnough:

; 6925 : 		}
; 6926 : 	}
; 6927 : 
; 6928 : 	// Count Inquisitors of our religion
; 6929 : 	int iNumInquisitors = 0;
; 6930 : 	for(CvUnit* pUnit = m_pPlayer->firstUnit(&iLoop); pUnit != NULL; pUnit = m_pPlayer->nextUnit(&iLoop))

	mov	ecx, DWORD PTR [edi+4]
	xor	ebx, ebx
	push	ebx
	lea	edx, DWORD PTR _iLoop$[esp+24]
	push	edx
	call	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN3@HaveEnough
$LL5@HaveEnough:

; 6931 : 	{
; 6932 : 		if(pUnit->getUnitInfo().IsRemoveHeresy())

	mov	ecx, esi
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?IsRemoveHeresy@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsRemoveHeresy
	test	al, al
	je	SHORT $LN4@HaveEnough

; 6933 : 		{
; 6934 : 			if(pUnit->GetReligionData()->GetReligion() == eReligion)

	mov	eax, DWORD PTR [esi+1888]
	mov	ecx, DWORD PTR _eReligion$[esp+16]
	cmp	DWORD PTR [eax], ecx
	jne	SHORT $LN4@HaveEnough

; 6935 : 			{
; 6936 : 				iNumInquisitors++;

	inc	ebx
$LN4@HaveEnough:

; 6925 : 		}
; 6926 : 	}
; 6927 : 
; 6928 : 	// Count Inquisitors of our religion
; 6929 : 	int iNumInquisitors = 0;
; 6930 : 	for(CvUnit* pUnit = m_pPlayer->firstUnit(&iLoop); pUnit != NULL; pUnit = m_pPlayer->nextUnit(&iLoop))

	mov	ecx, DWORD PTR [edi+4]
	push	0
	lea	edx, DWORD PTR _iLoop$[esp+24]
	push	edx
	call	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LL5@HaveEnough
$LN3@HaveEnough:
	pop	edi

; 6937 : 			}
; 6938 : 		}
; 6939 : 	}
; 6940 : 
; 6941 : 	return iNumInquisitors >= iNumNeeded;

	xor	eax, eax
	cmp	ebx, ebp
	pop	esi
	pop	ebp
	setge	al
	pop	ebx

; 6942 : }

	pop	ecx
	ret	4
?HaveEnoughInquisitors@CvReligionAI@@ABE_NW4ReligionTypes@@@Z ENDP ; CvReligionAI::HaveEnoughInquisitors
_TEXT	ENDS
PUBLIC	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
EXTRN	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ:PROC ; CvUnit::getDestructionNotification
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
;	COMDAT ??1?$FObjectHandle@VCvUnit@@@@QAE@XZ
_TEXT	SEGMENT
??1?$FObjectHandle@VCvUnit@@@@QAE@XZ PROC		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>, COMDAT
; _this$ = ecx

; 147  : 		if(m_target) 

	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN4@FObjectHan

; 148  : 		{
; 149  : 			m_target->getDestructionNotification().removeTarget(*this);

	jmp	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN4@FObjectHan:

; 150  : 		}
; 151  : 	}

	ret	0
??1?$FObjectHandle@VCvUnit@@@@QAE@XZ ENDP		; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
_TEXT	ENDS
PUBLIC	??0?$FObjectHandle@VCvUnit@@@@QAE@ABV0@@Z	; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$FObjectHandle@VCvUnit@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_source$ = 8						; size = 4
??0?$FObjectHandle@VCvUnit@@@@QAE@ABV0@@Z PROC		; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>, COMDAT
; _this$ = ecx

; 222  : 	{

	mov	eax, DWORD PTR _source$[esp-4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi], ecx
	mov	dl, BYTE PTR [eax+4]
	mov	BYTE PTR [esi+4], dl

; 223  : 		OBJECT_HANDLE_STACK;
; 224  : 		if(m_target)

	test	ecx, ecx
	je	SHORT $LN6@FObjectHan@2

; 225  : 		{
; 226  : 			m_target->getDestructionNotification().addTarget(*this);

	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN6@FObjectHan@2:

; 227  : 		}
; 228  : 	}

	mov	eax, esi
	pop	esi
	ret	4
??0?$FObjectHandle@VCvUnit@@@@QAE@ABV0@@Z ENDP		; FObjectHandle<CvUnit>::FObjectHandle<CvUnit>
_TEXT	ENDS
PUBLIC	??0?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligion,16,0,297,0>::FStaticVector<CvReligion,16,0,297,0>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??0?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
??0?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<CvReligion,16,0,297,0>::FStaticVector<CvReligion,16,0,297,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	mov	eax, ecx

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;
; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	lea	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 16			; 00000010H
	mov	DWORD PTR [eax], ecx

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	ret	0
??0?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<CvReligion,16,0,297,0>::FStaticVector<CvReligion,16,0,297,0>
_TEXT	ENDS
PUBLIC	??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligionInCity,8,0,297,0>::FStaticVector<CvReligionInCity,8,0,297,0>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<CvReligionInCity,8,0,297,0>::FStaticVector<CvReligionInCity,8,0,297,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	mov	eax, ecx

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;
; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	lea	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 8
	mov	DWORD PTR [eax], ecx

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	ret	0
??0?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<CvReligionInCity,8,0,297,0>::FStaticVector<CvReligionInCity,8,0,297,0>
_TEXT	ENDS
PUBLIC	?clear@?$BaseVector@VCvReligionInCity@@$0A@@@QAEXXZ ; BaseVector<CvReligionInCity,0>::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$BaseVector@VCvReligionInCity@@$0A@@@QAEXXZ
_TEXT	SEGMENT
?clear@?$BaseVector@VCvReligionInCity@@$0A@@@QAEXXZ PROC ; BaseVector<CvReligionInCity,0>::clear, COMDAT
; _this$ = ecx

; 121  : 		Destroy(m_pData, m_uiCurrSize);
; 122  : 		m_uiCurrSize = 0;

	mov	DWORD PTR [ecx+4], 0

; 123  : 	};

	ret	0
?clear@?$BaseVector@VCvReligionInCity@@$0A@@@QAEXXZ ENDP ; BaseVector<CvReligionInCity,0>::clear
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBEAAPAVCvReligionEntry@@XZ ; std::_Vector_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBEAAPAVCvReligionEntry@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBEAAPAVCvReligionEntry@@XZ PROC ; std::_Vector_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator*, COMDAT
; _this$ = ecx

; 339  : 		return ((reference)**(_Mybase *)this);

	mov	eax, DWORD PTR [ecx]

; 340  : 		}

	ret	0
??D?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBEAAPAVCvReligionEntry@@XZ ENDP ; std::_Vector_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator++, COMDAT
; _this$ = ecx

; 348  : 		{	// preincrement

	mov	eax, ecx

; 349  : 		++(*(_Mybase *)this);

	add	DWORD PTR [eax], 4

; 350  : 		return (*this);
; 351  : 		}

	ret	0
??E?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator++
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::operator!=
_TEXT	ENDS
PUBLIC	?GetElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QBEABW4BeliefTypes@@I@Z ; CvWeightedVector<enum BeliefTypes,100,1>::GetElement
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
;	COMDAT ?GetElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QBEABW4BeliefTypes@@I@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
?GetElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QBEABW4BeliefTypes@@I@Z PROC ; CvWeightedVector<enum BeliefTypes,100,1>::GetElement, COMDAT
; _this$ = ecx

; 64   : 		assert(iIndex < m_pItems.size());
; 65   : 		return m_pItems[iIndex].m_Element;

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _iIndex$[esp-4]
	lea	eax, DWORD PTR [eax+ecx*8]

; 66   : 	};

	ret	4
?GetElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QBEABW4BeliefTypes@@I@Z ENDP ; CvWeightedVector<enum BeliefTypes,100,1>::GetElement
_TEXT	ENDS
PUBLIC	?GetWeight@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QBEHI@Z ; CvWeightedVector<enum BeliefTypes,100,1>::GetWeight
; Function compile flags: /Ogtpy
;	COMDAT ?GetWeight@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QBEHI@Z
_TEXT	SEGMENT
_elem$ = -8						; size = 8
_iIndex$ = 8						; size = 4
?GetWeight@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QBEHI@Z PROC ; CvWeightedVector<enum BeliefTypes,100,1>::GetWeight, COMDAT
; _this$ = ecx

; 70   : 	{

	sub	esp, 8

; 71   : 		WeightedElement elem;
; 72   : 		assert(iIndex < m_pItems.size());
; 73   : 		elem = m_pItems[iIndex];

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _iIndex$[esp+4]
	mov	edx, DWORD PTR [eax+ecx*8]

; 74   : 		return elem.m_iWeight;

	mov	eax, DWORD PTR [eax+ecx*8+4]
	mov	DWORD PTR _elem$[esp+8], edx

; 75   : 	}

	add	esp, 8
	ret	4
?GetWeight@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QBEHI@Z ENDP ; CvWeightedVector<enum BeliefTypes,100,1>::GetWeight
_TEXT	ENDS
PUBLIC	?size@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEHXZ ; CvWeightedVector<enum BeliefTypes,100,1>::size
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEHXZ
_TEXT	SEGMENT
?size@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEHXZ PROC ; CvWeightedVector<enum BeliefTypes,100,1>::size, COMDAT
; _this$ = ecx

; 134  : 		return m_pItems.size();

	mov	eax, DWORD PTR [ecx+4]

; 135  : 	};

	ret	0
?size@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEHXZ ENDP ; CvWeightedVector<enum BeliefTypes,100,1>::size
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEAAW4BeliefTypes@@XZ ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator*
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??D?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEAAW4BeliefTypes@@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEAAW4BeliefTypes@@XZ PROC ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator*, COMDAT
; _this$ = ecx

; 339  : 		return ((reference)**(_Mybase *)this);

	mov	eax, DWORD PTR [ecx]

; 340  : 		}

	ret	0
??D?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEAAW4BeliefTypes@@XZ ENDP ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator++
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator++, COMDAT
; _this$ = ecx

; 348  : 		{	// preincrement

	mov	eax, ecx

; 349  : 		++(*(_Mybase *)this);

	add	DWORD PTR [eax], 4

; 350  : 		return (*this);
; 351  : 		}

	ret	0
??E?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator++
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator!=
; Function compile flags: /Ogtpy
;	COMDAT ??9?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator!=, COMDAT
; _this$ = ecx

; 216  : 		return (!(*this == _Right));

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[esp-4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	cl
	mov	al, cl

; 217  : 		}

	ret	4
??9?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator!=
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ ; std::_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >::~_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >::~_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >::~_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE@V?$allocator@PAVCvReligionEntry@@@1@@Z ; std::_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_val@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE@V?$allocator@PAVCvReligionEntry@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE@V?$allocator@PAVCvReligionEntry@@@1@@Z PROC ; std::_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE@V?$allocator@PAVCvReligionEntry@@@1@@Z ENDP ; std::_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Vector_val<CvReligionEntry *,std::allocator<CvReligionEntry *> >
_TEXT	ENDS
PUBLIC	?Destroy@?$BaseVector@VCvReligion@@$0A@@@IAEXPAVCvReligion@@I@Z ; BaseVector<CvReligion,0>::Destroy
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?Destroy@?$BaseVector@VCvReligion@@$0A@@@IAEXPAVCvReligion@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Destroy@?$BaseVector@VCvReligion@@$0A@@@IAEXPAVCvReligion@@I@Z PROC ; BaseVector<CvReligion,0>::Destroy, COMDAT
; _this$ = ecx

; 220  : 	{

	push	edi

; 221  : 		if( !bPODType){
; 222  : 			for(unsigned int i = 0; i < uiNumElements; ++i){

	mov	edi, DWORD PTR _uiNumElements$[esp]
	test	edi, edi
	jbe	SHORT $LN1@Destroy
	push	esi
	mov	esi, DWORD PTR _pVal$[esp+4]
	add	esi, 152				; 00000098H
$LL3@Destroy:

; 223  : 				pVal[i].~T();

	mov	ecx, esi
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	add	esi, 328				; 00000148H
	sub	edi, 1
	jne	SHORT $LL3@Destroy
	pop	esi
$LN1@Destroy:
	pop	edi

; 224  : 			}
; 225  : 		}
; 226  : 	};

	ret	8
?Destroy@?$BaseVector@VCvReligion@@$0A@@@IAEXPAVCvReligion@@I@Z ENDP ; BaseVector<CvReligion,0>::Destroy
_TEXT	ENDS
PUBLIC	?Free@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXPAVCvReligionInCity@@I@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::Free
EXTRN	?FireFreeAlignedNoTracking@@YAXPAX@Z:PROC	; FireFreeAlignedNoTracking
; Function compile flags: /Ogtpy
;	COMDAT ?Free@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXPAVCvReligionInCity@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Free@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXPAVCvReligionInCity@@I@Z PROC ; FStaticVector<CvReligionInCity,8,0,297,0>::Free, COMDAT
; _this$ = ecx

; 810  : 		if( !bPODType) Destroy(pVal, uiNumElements);
; 811  : 		if( pVal != (T*)m_aData )

	mov	eax, DWORD PTR _pVal$[esp-4]
	add	ecx, 12					; 0000000cH
	cmp	eax, ecx
	je	SHORT $LN1@Free

; 812  : 			FFREEALIGNED( (unsigned char*)pVal );

	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
$LN1@Free:

; 813  : 	};

	ret	8
?Free@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXPAVCvReligionInCity@@I@Z ENDP ; FStaticVector<CvReligionInCity,8,0,297,0>::Free
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@PAPAVCvReligionEntry@@@Z ; std::_Vector_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Vector_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@PAPAVCvReligionEntry@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@PAPAVCvReligionEntry@@@Z PROC ; std::_Vector_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Vector_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@PAPAVCvReligionEntry@@@Z ENDP ; std::_Vector_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Vector_iterator<CvReligionEntry *,std::allocator<CvReligionEntry *> >
_TEXT	ENDS
PUBLIC	?begin@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE?AV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::begin
; Function compile flags: /Ogtpy
;	COMDAT ?begin@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE?AV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE?AV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::begin, COMDAT
; _this$ = ecx

; 672  : 		return (const_iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 673  : 		}

	ret	4
?begin@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE?AV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE?AV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE?AV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE?AV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::end, COMDAT
; _this$ = ecx

; 682  : 		return (const_iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 683  : 		}

	ret	4
?end@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE?AV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::end
_TEXT	ENDS
PUBLIC	?max_size@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEIXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEIXZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 732  : 		}

	ret	0
?max_size@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBEIXZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@V?$allocator@W4BeliefTypes@@@1@@Z ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@V?$allocator@W4BeliefTypes@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@V?$allocator@W4BeliefTypes@@@1@@Z PROC ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx

; 425  : 		{	// construct allocator from _Al

	mov	eax, ecx

; 426  : 		}

	ret	4
??0?$_Vector_val@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE@V?$allocator@W4BeliefTypes@@@1@@Z ENDP ; std::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Vector_val<enum BeliefTypes,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@W4BeliefTypes@@@std@@QAEPAW4BeliefTypes@@I@Z ; std::allocator<enum BeliefTypes>::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@W4BeliefTypes@@@std@@QAEPAW4BeliefTypes@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@W4BeliefTypes@@@std@@QAEPAW4BeliefTypes@@I@Z PROC ; std::allocator<enum BeliefTypes>::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@W4BeliefTypes@@@std@@YAPAW4BeliefTypes@@IPAW41@@Z ; std::_Allocate<enum BeliefTypes>
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@W4BeliefTypes@@@std@@QAEPAW4BeliefTypes@@I@Z ENDP ; std::allocator<enum BeliefTypes>::allocate
_TEXT	ENDS
PUBLIC	??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
_TEXT	SEGMENT
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ PROC ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>, COMDAT
; _this$ = ecx

; 601  : 	FStaticVector()

	mov	eax, ecx

; 602  :     {
; 603  : 		m_uiCurrMaxSize = L;
; 604  : 		m_pData = Alloc(m_uiCurrMaxSize);

	lea	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 100			; 00000064H
	mov	DWORD PTR [eax], ecx

; 605  : #ifdef BREAK_ON_STATIC_RESIZE
; 606  : 		m_iNumResized = 0;
; 607  : #endif
; 608  :     };

	ret	0
??0?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ENDP ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@PAW4BeliefTypes@@@Z ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@PAW4BeliefTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@PAW4BeliefTypes@@@Z PROC ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx

; 333  : 		{	// construct with pointer _Ptr

	mov	eax, ecx
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	mov	DWORD PTR [eax], ecx

; 334  : 		}

	ret	4
??0?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@PAW4BeliefTypes@@@Z ENDP ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??R?$FastDelegate2@HPBDH@fastdelegate@@QBEHHPBD@Z ; fastdelegate::FastDelegate2<int,char const *,int>::operator()
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\eventsystem\fastdelegate.h
;	COMDAT ??R?$FastDelegate2@HPBDH@fastdelegate@@QBEHHPBD@Z
_TEXT	SEGMENT
_p1$ = 8						; size = 4
_p2$ = 12						; size = 4
??R?$FastDelegate2@HPBDH@fastdelegate@@QBEHHPBD@Z PROC	; fastdelegate::FastDelegate2<int,char const *,int>::operator(), COMDAT
; _this$ = ecx

; 1080 : 	return (m_Closure.GetClosureThis()->*(m_Closure.GetClosureMemPtr()))(p1, p2); }

	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [ecx]
	jmp	eax
??R?$FastDelegate2@HPBDH@fastdelegate@@QBEHHPBD@Z ENDP	; fastdelegate::FastDelegate2<int,char const *,int>::operator()
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@@Z ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Make_iter
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Make_iter@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@@Z PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Make_iter, COMDAT
; _this$ = ecx

; 687  : 		return (iterator(_Where._Myptr));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx

; 688  : 		}

	ret	8
?_Make_iter@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@@Z ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Make_iter
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBEIXZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::max_size
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBEIXZ PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::max_size, COMDAT
; _this$ = ecx

; 731  : 		return (this->_Alval.max_size());

	mov	eax, 1073741823				; 3fffffffH

; 732  : 		}

	ret	0
?max_size@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QBEIXZ ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAVCvReligionEntry@@@std@@QAEPAPAVCvReligionEntry@@I@Z ; std::allocator<CvReligionEntry *>::allocate
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@PAVCvReligionEntry@@@std@@QAEPAPAVCvReligionEntry@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVCvReligionEntry@@@std@@QAEPAPAVCvReligionEntry@@I@Z PROC ; std::allocator<CvReligionEntry *>::allocate, COMDAT
; _this$ = ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	mov	eax, DWORD PTR __Count$[esp-4]
	push	0
	push	eax
	call	??$_Allocate@PAVCvReligionEntry@@@std@@YAPAPAVCvReligionEntry@@IPAPAV1@@Z ; std::_Allocate<CvReligionEntry *>
	add	esp, 8

; 146  : 		}

	ret	4
?allocate@?$allocator@PAVCvReligionEntry@@@std@@QAEPAPAVCvReligionEntry@@I@Z ENDP ; std::allocator<CvReligionEntry *>::allocate
_TEXT	ENDS
PUBLIC	?Free@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::Free
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?Free@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Free@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z PROC ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::Free, COMDAT
; _this$ = ecx

; 810  : 		if( !bPODType) Destroy(pVal, uiNumElements);
; 811  : 		if( pVal != (T*)m_aData )

	mov	eax, DWORD PTR _pVal$[esp-4]
	add	ecx, 12					; 0000000cH
	cmp	eax, ecx
	je	SHORT $LN1@Free@2

; 812  : 			FFREEALIGNED( (unsigned char*)pVal );

	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
$LN1@Free@2:

; 813  : 	};

	ret	8
?Free@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@I@Z ENDP ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::Free
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator+=
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??Y?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator+=, COMDAT
; _this$ = ecx

; 374  : 		{	// increment by integer

	mov	eax, ecx

; 375  : 		(*(_Mybase *)this) += _Off;

	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [ecx*4]
	add	DWORD PTR [eax], edx

; 376  : 		return (*this);
; 377  : 		}

	ret	4
??Y?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator+=
_TEXT	ENDS
PUBLIC	??$?5D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@D@Z	; operator>><char,128>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?5D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@D@Z
_TEXT	SEGMENT
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??$?5D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@D@Z PROC	; operator>><char,128>, COMDAT

; 234  : {

	push	ebx

; 235  : 	size_t i = 0;
; 236  : 	for(i = 0; i < count; ++i)

	mov	ebx, DWORD PTR _writeTo$[esp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _loadFrom$[esp+8]
	xor	esi, esi
	npad	3
$LL3@operator@5:

; 237  : 	{
; 238  : 		loadFrom >> writeTo[i];

	lea	eax, DWORD PTR [esi+ebx]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAD@Z		; FDataStream::Read
	inc	esi
	cmp	esi, 128				; 00000080H
	jb	SHORT $LL3@operator@5

; 239  : 	}
; 240  : 	return loadFrom;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 241  : }

	ret	0
??$?5D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@D@Z ENDP	; operator>><char,128>
_TEXT	ENDS
PUBLIC	??$?6D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@$$CBD@Z ; operator<<<char,128>
; Function compile flags: /Ogtpy
;	COMDAT ??$?6D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@$$CBD@Z
_TEXT	SEGMENT
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??$?6D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@$$CBD@Z PROC	; operator<<<char,128>, COMDAT

; 223  : {

	push	ebx

; 224  : 	size_t i = 0;
; 225  : 	for(i = 0; i < count; ++i)

	mov	ebx, DWORD PTR _readFrom$[esp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _saveTo$[esp+8]
	xor	esi, esi
	npad	3
$LL3@operator@6:

; 226  : 	{
; 227  : 		saveTo << readFrom[i];

	lea	eax, DWORD PTR [esi+ebx]
	push	eax
	mov	ecx, edi
	call	?Write@FDataStream@@IAEXABD@Z		; FDataStream::Write
	inc	esi
	cmp	esi, 128				; 00000080H
	jb	SHORT $LL3@operator@6

; 228  : 	}
; 229  : 	return saveTo;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 230  : }

	ret	0
??$?6D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@$$CBD@Z ENDP	; operator<<<char,128>
_TEXT	ENDS
PUBLIC	??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ; operator<<<CvString>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvlocalization\include\cvlocalization.h
;	COMDAT ??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_val$ = 12						; size = 4
??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z PROC ; operator<<<CvString>, COMDAT

; 491  : 	s.PushArgument(val);

	mov	ecx, DWORD PTR _val$[esp-4]
	push	esi
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	esi, DWORD PTR _s$[esp]
	push	eax
	mov	ecx, esi
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 492  : 	return s;

	mov	eax, esi
	pop	esi

; 493  : }

	ret	0
??$?6VCvString@@@@YAAAVString@Localization@@AAV01@ABVCvString@@@Z ENDP ; operator<<<CvString>
_TEXT	ENDS
PUBLIC	??$unchecked_copy@PAPAVCvReligionEntry@@PAPAV1@@stdext@@YAPAPAVCvReligionEntry@@PAPAV1@00@Z ; stdext::unchecked_copy<CvReligionEntry * *,CvReligionEntry * *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy@PAPAVCvReligionEntry@@PAPAV1@@stdext@@YAPAPAVCvReligionEntry@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAPAVCvReligionEntry@@PAPAV1@@stdext@@YAPAPAVCvReligionEntry@@PAPAV1@00@Z PROC ; stdext::unchecked_copy<CvReligionEntry * *,CvReligionEntry * *>, COMDAT

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	sub	eax, edx
	push	esi
	sar	eax, 2
	push	edi
	mov	edi, DWORD PTR __Dest$[esp+4]
	lea	ecx, DWORD PTR [eax*4]
	lea	esi, DWORD PTR [ecx+edi]
	test	eax, eax
	jle	SHORT $LN10@unchecked_
	push	ecx
	push	edx
	push	ecx
	push	edi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN10@unchecked_:
	pop	edi
	mov	eax, esi
	pop	esi

; 3607 : 	}

	ret	0
??$unchecked_copy@PAPAVCvReligionEntry@@PAPAV1@@stdext@@YAPAPAVCvReligionEntry@@PAPAV1@00@Z ENDP ; stdext::unchecked_copy<CvReligionEntry * *,CvReligionEntry * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVCvReligionEntry@@@std@@@std@@YAXPAPAVCvReligionEntry@@0AAV?$allocator@PAVCvReligionEntry@@@0@@Z ; std::_Destroy_range<std::allocator<CvReligionEntry *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCvReligionEntry@@@std@@@std@@YAXPAPAVCvReligionEntry@@0AAV?$allocator@PAVCvReligionEntry@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCvReligionEntry@@@std@@@std@@YAXPAPAVCvReligionEntry@@0AAV?$allocator@PAVCvReligionEntry@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CvReligionEntry *> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@PAVCvReligionEntry@@@std@@@std@@YAXPAPAVCvReligionEntry@@0AAV?$allocator@PAVCvReligionEntry@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CvReligionEntry *> >
_TEXT	ENDS
PUBLIC	??$fill@PAW4BeliefTypes@@W41@@std@@YAXPAW4BeliefTypes@@0ABW41@@Z ; std::fill<enum BeliefTypes *,enum BeliefTypes>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$fill@PAW4BeliefTypes@@W41@@std@@YAXPAW4BeliefTypes@@0ABW41@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAW4BeliefTypes@@W41@@std@@YAXPAW4BeliefTypes@@0ABW41@@Z PROC ; std::fill<enum BeliefTypes *,enum BeliefTypes>, COMDAT

; 3187 : 	_Fill(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val);

	mov	eax, DWORD PTR __First$[esp-4]
	mov	ecx, DWORD PTR __Last$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN3@fill
	mov	edx, DWORD PTR __Val$[esp-4]
	push	esi
$LL5@fill:
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
	add	eax, 4
	cmp	eax, ecx
	jne	SHORT $LL5@fill
	pop	esi
$LN3@fill:

; 3188 : 	}

	ret	0
??$fill@PAW4BeliefTypes@@W41@@std@@YAXPAW4BeliefTypes@@0ABW41@@Z ENDP ; std::fill<enum BeliefTypes *,enum BeliefTypes>
_TEXT	ENDS
PUBLIC	??_GCvReligionEntry@@QAEPAXI@Z			; CvReligionEntry::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_GCvReligionEntry@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCvReligionEntry@@QAEPAXI@Z PROC			; CvReligionEntry::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	??1CvReligionEntry@@QAE@XZ		; CvReligionEntry::~CvReligionEntry
	test	BYTE PTR ___flags$[esp], 1
	je	SHORT $LN4@scalar@5
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@5:
	mov	eax, esi
	pop	esi
	ret	4
??_GCvReligionEntry@@QAEPAXI@Z ENDP			; CvReligionEntry::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAW4BeliefTypes@@PAW41@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAW4BeliefTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<enum BeliefTypes *,enum BeliefTypes *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Move_backward_opt@PAW4BeliefTypes@@PAW41@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAW4BeliefTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAW4BeliefTypes@@PAW41@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAW4BeliefTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<enum BeliefTypes *,enum BeliefTypes *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT

; 2753 : 	return _Copy_backward_opt(_First, _Last, _Dest,
; 2754 : 		_First_dest_cat, _Ptr_cat(_First, _Dest), _Range_checked_iterator_tag());

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN5@Move_backw
	push	esi
$LL6@Move_backw:
	mov	esi, DWORD PTR [ecx-4]
	sub	ecx, 4
	sub	eax, 4
	mov	DWORD PTR [eax], esi
	cmp	ecx, edx
	jne	SHORT $LL6@Move_backw
	pop	esi
$LN5@Move_backw:

; 2755 : 	}

	ret	0
??$_Move_backward_opt@PAW4BeliefTypes@@PAW41@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAW4BeliefTypes@@PAW41@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<enum BeliefTypes *,enum BeliefTypes *,std::random_access_iterator_tag,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??0?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AEHHPBD@ZP6AHH0@ZP6AHH0@Z@detail@fastdelegate@@QAE@XZ ; fastdelegate::detail::ClosurePtr<int (__thiscall fastdelegate::detail::GenericClass::*)(int,char const *),int (__cdecl*)(int,char const *),int (__cdecl*)(int,char const *)>::ClosurePtr<int (__thiscall fastdelegate::detail::GenericClass::*)(int,char const *),int (__cdecl*)(int,char const *),int (__cdecl*)(int,char const *)>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AEHHPBD@ZP6AHH0@ZP6AHH0@Z@detail@fastdelegate@@QAE@XZ
_TEXT	SEGMENT
??0?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AEHHPBD@ZP6AHH0@ZP6AHH0@Z@detail@fastdelegate@@QAE@XZ PROC ; fastdelegate::detail::ClosurePtr<int (__thiscall fastdelegate::detail::GenericClass::*)(int,char const *),int (__cdecl*)(int,char const *),int (__cdecl*)(int,char const *)>::ClosurePtr<int (__thiscall fastdelegate::detail::GenericClass::*)(int,char const *),int (__cdecl*)(int,char const *),int (__cdecl*)(int,char const *)>, COMDAT
; _this$ = ecx
	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	ret	0
??0?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AEHHPBD@ZP6AHH0@ZP6AHH0@Z@detail@fastdelegate@@QAE@XZ ENDP ; fastdelegate::detail::ClosurePtr<int (__thiscall fastdelegate::detail::GenericClass::*)(int,char const *),int (__cdecl*)(int,char const *),int (__cdecl*)(int,char const *)>::ClosurePtr<int (__thiscall fastdelegate::detail::GenericClass::*)(int,char const *),int (__cdecl*)(int,char const *),int (__cdecl*)(int,char const *)>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@ABW43@@Z ; std::allocator<enum BeliefTypes>::construct
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@ABW43@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@ABW43@@Z PROC ; std::allocator<enum BeliefTypes>::construct, COMDAT
; _this$ = ecx

; 155  : 		_Construct(_Ptr, _Val);

	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	eax, eax
	je	SHORT $LN5@construct
	mov	ecx, DWORD PTR __Val$[esp-4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct:

; 156  : 		}

	ret	8
?construct@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@ABW43@@Z ENDP ; std::allocator<enum BeliefTypes>::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@@Z ; std::allocator<enum BeliefTypes>::destroy
; Function compile flags: /Ogtpy
;	COMDAT ?destroy@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@@Z PROC ; std::allocator<enum BeliefTypes>::destroy, COMDAT
; _this$ = ecx

; 160  : 		_Destroy(_Ptr);
; 161  : 		}

	ret	4
?destroy@?$allocator@W4BeliefTypes@@@std@@QAEXPAW4BeliefTypes@@@Z ENDP ; std::allocator<enum BeliefTypes>::destroy
_TEXT	ENDS
PUBLIC	??$bindmemfunc@VCvGame@@P81@AEHHPBD@Z@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AEHHPBD@ZP6AHH0@ZP6AHH0@Z@detail@fastdelegate@@QAEXPAVCvGame@@P83@AEHHPBD@Z@Z ; fastdelegate::detail::ClosurePtr<int (__thiscall fastdelegate::detail::GenericClass::*)(int,char const *),int (__cdecl*)(int,char const *),int (__cdecl*)(int,char const *)>::bindmemfunc<CvGame,int (__thiscall CvGame::*)(int,char const *)>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\eventsystem\fastdelegate.h
;	COMDAT ??$bindmemfunc@VCvGame@@P81@AEHHPBD@Z@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AEHHPBD@ZP6AHH0@ZP6AHH0@Z@detail@fastdelegate@@QAEXPAVCvGame@@P83@AEHHPBD@Z@Z
_TEXT	SEGMENT
_pthis$ = 8						; size = 4
_function_to_bind$ = 12					; size = 4
??$bindmemfunc@VCvGame@@P81@AEHHPBD@Z@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AEHHPBD@ZP6AHH0@ZP6AHH0@Z@detail@fastdelegate@@QAEXPAVCvGame@@P83@AEHHPBD@Z@Z PROC ; fastdelegate::detail::ClosurePtr<int (__thiscall fastdelegate::detail::GenericClass::*)(int,char const *),int (__cdecl*)(int,char const *),int (__cdecl*)(int,char const *)>::bindmemfunc<CvGame,int (__thiscall CvGame::*)(int,char const *)>, COMDAT
; _this$ = ecx

; 673  : 		m_pthis = SimplifyMemFunc< sizeof(function_to_bind) >
; 674  : 			::Convert(pthis, function_to_bind, m_pFunction);

	mov	eax, DWORD PTR _function_to_bind$[esp-4]
	mov	edx, DWORD PTR _pthis$[esp-4]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx], edx

; 675  : #if !defined(FASTDELEGATE_USESTATICFUNCTIONHACK)
; 676  : 		m_pStaticFunction = 0;
; 677  : #endif
; 678  : 	}

	ret	8
??$bindmemfunc@VCvGame@@P81@AEHHPBD@Z@?$ClosurePtr@P8GenericClass@detail@fastdelegate@@AEHHPBD@ZP6AHH0@ZP6AHH0@Z@detail@fastdelegate@@QAEXPAVCvGame@@P83@AEHHPBD@Z@Z ENDP ; fastdelegate::detail::ClosurePtr<int (__thiscall fastdelegate::detail::GenericClass::*)(int,char const *),int (__cdecl*)(int,char const *),int (__cdecl*)(int,char const *)>::bindmemfunc<CvGame,int (__thiscall CvGame::*)(int,char const *)>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >, COMDAT

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN
; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN4@Uninit_cop
	push	esi
$LL14@Uninit_cop:

; 131  : 		_Al.construct(_Dest, *_First);

	test	eax, eax
	je	SHORT $LN5@Uninit_cop
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
$LN5@Uninit_cop:
	add	ecx, 4
	add	eax, 4
	mov	DWORD PTR __First$[esp], ecx
	cmp	ecx, edx
	jne	SHORT $LL14@Uninit_cop
	pop	esi
$LN4@Uninit_cop:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)
; 134  : 		_Al.destroy(_Next);
; 135  : 	_RERAISE;
; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	ret	0
??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??$iter_swap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ; std::iter_swap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$iter_swap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$iter_swap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z PROC ; std::iter_swap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 594  : 	swap(*_Left, *_Right);

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	eax, ecx
	je	SHORT $LN3@iter_swap
	mov	edx, DWORD PTR [eax]
	push	esi
	mov	esi, DWORD PTR [eax+4]
	push	edi
	mov	edi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edi
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edi
	pop	edi
	mov	DWORD PTR [ecx+4], esi
	mov	DWORD PTR [ecx], edx
	pop	esi
$LN3@iter_swap:

; 595  : 	}

	ret	0
??$iter_swap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ENDP ; std::iter_swap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >, COMDAT

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN
; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN4@Uninit_cop@2
	push	esi
$LL16@Uninit_cop@2:

; 131  : 		_Al.construct(_Dest, *_First);

	test	eax, eax
	je	SHORT $LN5@Uninit_cop@2
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
$LN5@Uninit_cop@2:
	add	ecx, 4
	add	eax, 4
	mov	DWORD PTR __First$[esp], ecx
	cmp	ecx, edx
	jne	SHORT $LL16@Uninit_cop@2
	pop	esi
$LN4@Uninit_cop@2:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)
; 134  : 		_Al.destroy(_Next);
; 135  : 	_RERAISE;
; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	ret	0
??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z PROC ; std::_Med3<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 2999 : 	if (_DEBUG_LT(*_Mid, *_First))

	mov	eax, DWORD PTR __Mid$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	push	esi
	push	edi
	jle	SHORT $LN10@Med3

; 3000 : 		std::iter_swap(_Mid, _First);

	cmp	eax, ecx
	je	SHORT $LN10@Med3
	mov	edi, DWORD PTR [ecx]
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [eax], edi
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edi
	mov	DWORD PTR [ecx], esi
	mov	DWORD PTR [ecx+4], edx
$LN10@Med3:

; 3001 : 	if (_DEBUG_LT(*_Last, *_Mid))

	mov	edx, DWORD PTR __Last$[esp+4]
	mov	esi, DWORD PTR [edx+4]
	cmp	esi, DWORD PTR [eax+4]
	jle	SHORT $LN19@Med3

; 3002 : 		std::iter_swap(_Last, _Mid);

	cmp	edx, eax
	je	SHORT $LN19@Med3
	mov	edi, DWORD PTR [edx]
	push	ebx
	mov	ebx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ebx
	mov	ebx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ebx
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], esi
	pop	ebx
$LN19@Med3:

; 3003 : 	if (_DEBUG_LT(*_Mid, *_First))

	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jle	SHORT $LN28@Med3

; 3004 : 		std::iter_swap(_Mid, _First);

	cmp	eax, ecx
	je	SHORT $LN28@Med3
	mov	edi, DWORD PTR [ecx]
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [eax], edi
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edi
	mov	DWORD PTR [ecx], esi
	mov	DWORD PTR [ecx+4], edx
$LN28@Med3:
	pop	edi
	pop	esi

; 3005 : 	}

	ret	0
??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ENDP ; std::_Med3<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 8
??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z PROC ; std::_Adjust_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>, COMDAT

; 2056 : 	_Diff _Top = _Hole;

	mov	edx, DWORD PTR __Hole$[esp-4]

; 2057 : 	_Diff _Idx = 2 * _Hole + 2;
; 2058 : 
; 2059 : 	for (; _Idx < _Bottom; _Idx = 2 * _Idx + 2)

	mov	ecx, DWORD PTR __First$[esp-4]
	push	ebx
	push	esi
	mov	esi, DWORD PTR __Bottom$[esp+4]
	lea	eax, DWORD PTR [edx+edx+2]
	cmp	eax, esi
	push	edi
	mov	edi, edx
	jge	SHORT $LN14@Adjust_hea
	npad	7
$LL5@Adjust_hea:

; 2060 : 		{	// move _Hole down to larger child
; 2061 : 		if (_DEBUG_LT(*(_First + _Idx), *(_First + (_Idx - 1))))

	mov	ebx, DWORD PTR [ecx+eax*8+4]
	cmp	ebx, DWORD PTR [ecx+eax*8-4]
	jle	SHORT $LN2@Adjust_hea

; 2062 : 			--_Idx;

	dec	eax
$LN2@Adjust_hea:

; 2063 : 		*(_First + _Hole) = *(_First + _Idx), _Hole = _Idx;

	mov	ebx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR [ecx+edx*8], ebx
	mov	ebx, DWORD PTR [ecx+eax*8+4]
	mov	DWORD PTR [ecx+edx*8+4], ebx
	mov	edx, eax
	lea	eax, DWORD PTR [eax+eax+2]
	cmp	eax, esi
	jl	SHORT $LL5@Adjust_hea
$LN14@Adjust_hea:

; 2064 : 		}
; 2065 : 
; 2066 : 	if (_Idx == _Bottom)

	jne	SHORT $LN1@Adjust_hea

; 2067 : 		{	// only child at bottom, move _Hole down to it
; 2068 : 		*(_First + _Hole) = *(_First + (_Bottom - 1));

	mov	eax, DWORD PTR [ecx+esi*8-8]
	mov	DWORD PTR [ecx+edx*8], eax
	mov	eax, DWORD PTR [ecx+esi*8-4]
	mov	DWORD PTR [ecx+edx*8+4], eax

; 2069 : 		_Hole = _Bottom - 1;

	lea	edx, DWORD PTR [esi-1]
$LN1@Adjust_hea:

; 2070 : 		}
; 2071 : 	std::_Push_heap(_First, _Hole, _Top, _Val);

	mov	esi, DWORD PTR __Val$[esp+8]
	sub	esp, 8
	mov	eax, esp
	push	edi
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR __Val$[esp+24]
	push	edx
	push	ecx
	mov	DWORD PTR [eax+4], esi
	call	??$_Push_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z ; std::_Push_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2072 : 	}

	pop	edi
	pop	esi
	pop	ebx
	ret	0
??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z ENDP ; std::_Adjust_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
_TEXT	ENDS
PUBLIC	??$unchecked_copy_backward@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@stdext@@YAPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@00@Z ; stdext::unchecked_copy_backward<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$unchecked_copy_backward@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@stdext@@YAPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy_backward@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@stdext@@YAPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@00@Z PROC ; stdext::unchecked_copy_backward<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 3637 : 		return (_STD _Copy_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3638 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN7@unchecked_@2
	push	esi
$LL8@unchecked_@2:
	mov	esi, DWORD PTR [ecx-8]
	sub	ecx, 8
	sub	eax, 8
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], esi
	cmp	ecx, edx
	jne	SHORT $LL8@unchecked_@2
	pop	esi
$LN7@unchecked_@2:

; 3639 : 	}

	ret	0
??$unchecked_copy_backward@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@stdext@@YAPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@00@Z ENDP ; stdext::unchecked_copy_backward<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >, COMDAT

; 125  : 	_DEBUG_RANGE(_First, _Last);
; 126  : 	_DEBUG_POINTER(_Dest);
; 127  : 	_FwdIt _Next = _Dest;
; 128  : 
; 129  : 	_TRY_BEGIN
; 130  : 	for (; _First != _Last; ++_Dest, ++_First)

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR __Last$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	ecx, edx
	je	SHORT $LN4@Uninit_cop@3
	push	esi
$LL6@Uninit_cop@3:

; 131  : 		_Al.construct(_Dest, *_First);

	test	eax, eax
	je	SHORT $LN5@Uninit_cop@3
	mov	esi, DWORD PTR [ecx]
	mov	DWORD PTR [eax], esi
$LN5@Uninit_cop@3:
	add	ecx, 4
	add	eax, 4
	cmp	ecx, edx
	jne	SHORT $LL6@Uninit_cop@3
	pop	esi
$LN4@Uninit_cop@3:

; 132  : 	_CATCH_ALL
; 133  : 	for (; _Next != _Dest; ++_Next)
; 134  : 		_Al.destroy(_Next);
; 135  : 	_RERAISE;
; 136  : 	_CATCH_END
; 137  : 	return (_Dest);
; 138  : 	}

	ret	0
??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??$_Pop_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00U12@PAH@Z ; std::_Pop_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Pop_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00U12@PAH@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Val$ = 20						; size = 8
___formal$ = 28						; size = 4
??$_Pop_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00U12@PAH@Z PROC ; std::_Pop_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>, COMDAT

; 2080 : 	*_Dest = *_First;

	mov	eax, DWORD PTR __First$[esp-4]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Dest$[esp-4]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx

; 2081 : 	std::_Adjust_heap(_First, _Diff(0), _Diff(_Last - _First), _Val);

	mov	edx, DWORD PTR __Val$[esp-4]
	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR __Val$[esp+8]
	mov	DWORD PTR [ecx+4], edx
	mov	ecx, DWORD PTR __Last$[esp+4]
	sub	ecx, eax
	sar	ecx, 3
	push	ecx
	push	0
	push	eax
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2082 : 	}

	ret	0
??$_Pop_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00U12@PAH@Z ENDP ; std::_Pop_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
_TEXT	ENDS
PUBLIC	?getX@CvUnit@@QBEHXZ				; CvUnit::getX
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvunit.h
;	COMDAT ?getX@CvUnit@@QBEHXZ
_TEXT	SEGMENT
?getX@CvUnit@@QBEHXZ PROC				; CvUnit::getX, COMDAT
; _this$ = ecx

; 673  : 		return m_iX.get();

	mov	eax, DWORD PTR [ecx+76]

; 674  : 	}

	ret	0
?getX@CvUnit@@QBEHXZ ENDP				; CvUnit::getX
_TEXT	ENDS
PUBLIC	?getY@CvUnit@@QBEHXZ				; CvUnit::getY
; Function compile flags: /Ogtpy
;	COMDAT ?getY@CvUnit@@QBEHXZ
_TEXT	SEGMENT
?getY@CvUnit@@QBEHXZ PROC				; CvUnit::getY, COMDAT
; _this$ = ecx

; 678  : 		return m_iY.get();

	mov	eax, DWORD PTR [ecx+88]

; 679  : 	}

	ret	0
?getY@CvUnit@@QBEHXZ ENDP				; CvUnit::getY
_TEXT	ENDS
PUBLIC	?getOwner@CvUnit@@QBE?AW4PlayerTypes@@XZ	; CvUnit::getOwner
; Function compile flags: /Ogtpy
;	COMDAT ?getOwner@CvUnit@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
?getOwner@CvUnit@@QBE?AW4PlayerTypes@@XZ PROC		; CvUnit::getOwner, COMDAT
; _this$ = ecx

; 1046 : 		return m_eOwner.get();

	mov	eax, DWORD PTR [ecx+40]

; 1047 : 	}

	ret	0
?getOwner@CvUnit@@QBE?AW4PlayerTypes@@XZ ENDP		; CvUnit::getOwner
_TEXT	ENDS
PUBLIC	?IsCombatUnit@CvUnit@@QBE_NXZ			; CvUnit::IsCombatUnit
; Function compile flags: /Ogtpy
;	COMDAT ?IsCombatUnit@CvUnit@@QBE_NXZ
_TEXT	SEGMENT
?IsCombatUnit@CvUnit@@QBE_NXZ PROC			; CvUnit::IsCombatUnit, COMDAT
; _this$ = ecx

; 1243 : 		return (m_iBaseCombat > 0);

	xor	eax, eax
	cmp	DWORD PTR [ecx+1044], eax
	setg	al

; 1244 : 	}

	ret	0
?IsCombatUnit@CvUnit@@QBE_NXZ ENDP			; CvUnit::IsCombatUnit
_TEXT	ENDS
EXTRN	?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B:DWORD ; CvPreGame::sr_TeamTypes
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvpregame.h
;	COMDAT ?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z PROC ; CvPreGame::teamType, COMDAT
; _p$ = eax

; 299  : 	if(p >= 0 && p < MAX_PLAYERS)

	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN1@teamType

; 300  : 		return sr_TeamTypes[p];

	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]

; 302  : }

	ret	0
$LN1@teamType:

; 301  : 	return NO_TEAM;

	or	eax, -1

; 302  : }

	ret	0
?teamType@CvPreGame@@YA?AW4TeamTypes@@W4PlayerTypes@@@Z ENDP ; CvPreGame::teamType
_TEXT	ENDS
PUBLIC	?GetID@CvCity@@QBEHXZ				; CvCity::GetID
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvcity.h
;	COMDAT ?GetID@CvCity@@QBEHXZ
_TEXT	SEGMENT
?GetID@CvCity@@QBEHXZ PROC				; CvCity::GetID, COMDAT
; _this$ = ecx

; 331  : 		return m_iID;

	mov	eax, DWORD PTR [ecx+120]

; 332  : 	}

	ret	0
?GetID@CvCity@@QBEHXZ ENDP				; CvCity::GetID
_TEXT	ENDS
PUBLIC	?getX@CvCity@@QBEHXZ				; CvCity::getX
; Function compile flags: /Ogtpy
;	COMDAT ?getX@CvCity@@QBEHXZ
_TEXT	SEGMENT
?getX@CvCity@@QBEHXZ PROC				; CvCity::getX, COMDAT
; _this$ = ecx

; 340  : 		return m_iX;

	mov	eax, DWORD PTR [ecx+96]

; 341  : 	}

	ret	0
?getX@CvCity@@QBEHXZ ENDP				; CvCity::getX
_TEXT	ENDS
PUBLIC	?getY@CvCity@@QBEHXZ				; CvCity::getY
; Function compile flags: /Ogtpy
;	COMDAT ?getY@CvCity@@QBEHXZ
_TEXT	SEGMENT
?getY@CvCity@@QBEHXZ PROC				; CvCity::getY, COMDAT
; _this$ = ecx

; 345  : 		return m_iY;

	mov	eax, DWORD PTR [ecx+108]

; 346  : 	}

	ret	0
?getY@CvCity@@QBEHXZ ENDP				; CvCity::getY
_TEXT	ENDS
PUBLIC	?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ	; CvCity::getOwner
; Function compile flags: /Ogtpy
;	COMDAT ?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ PROC		; CvCity::getOwner, COMDAT
; _this$ = ecx

; 604  : 		return m_eOwner;

	mov	eax, DWORD PTR [ecx+84]

; 605  : 	}

	ret	0
?getOwner@CvCity@@QBE?AW4PlayerTypes@@XZ ENDP		; CvCity::getOwner
_TEXT	ENDS
PUBLIC	?isAlive@CvPlayer@@QBE_NXZ			; CvPlayer::isAlive
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplayer.h
;	COMDAT ?isAlive@CvPlayer@@QBE_NXZ
_TEXT	SEGMENT
?isAlive@CvPlayer@@QBE_NXZ PROC				; CvPlayer::isAlive, COMDAT
; _this$ = ecx

; 1096 : 		return m_bAlive;

	mov	al, BYTE PTR [ecx+2256]

; 1097 : 	}

	ret	0
?isAlive@CvPlayer@@QBE_NXZ ENDP				; CvPlayer::isAlive
_TEXT	ENDS
PUBLIC	?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ		; CvPlayer::GetID
; Function compile flags: /Ogtpy
;	COMDAT ?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ
_TEXT	SEGMENT
?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ PROC		; CvPlayer::GetID, COMDAT
; _this$ = ecx

; 1172 : 		return m_eID;

	mov	eax, DWORD PTR [ecx+44]

; 1173 : 	}

	ret	0
?GetID@CvPlayer@@QBE?AW4PlayerTypes@@XZ ENDP		; CvPlayer::GetID
_TEXT	ENDS
PUBLIC	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ		; CvPlayer::getTeam
; Function compile flags: /Ogtpy
;	COMDAT ?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ
_TEXT	SEGMENT
?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ PROC		; CvPlayer::getTeam, COMDAT
; _this$ = ecx

; 1182 : 		return CvPreGame::teamType(m_eID);

	mov	eax, DWORD PTR [ecx+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN5@getTeam
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]

; 1183 : 	}

	ret	0

; 1182 : 		return CvPreGame::teamType(m_eID);

$LN5@getTeam:
	or	eax, -1

; 1183 : 	}

	ret	0
?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ ENDP		; CvPlayer::getTeam
_TEXT	ENDS
PUBLIC	?getFeatureType@CvPlot@@QBE?AW4FeatureTypes@@XZ	; CvPlot::getFeatureType
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvplot.h
;	COMDAT ?getFeatureType@CvPlot@@QBE?AW4FeatureTypes@@XZ
_TEXT	SEGMENT
?getFeatureType@CvPlot@@QBE?AW4FeatureTypes@@XZ PROC	; CvPlot::getFeatureType, COMDAT
; _this$ = ecx

; 435  : #ifdef AUI_WARNING_FIXES
; 436  : 		int f = m_eFeatureType;
; 437  : #else
; 438  : 		char f = m_eFeatureType;
; 439  : #endif
; 440  : 		return (FeatureTypes)f;

	movsx	eax, BYTE PTR [ecx+432]

; 441  : 	}

	ret	0
?getFeatureType@CvPlot@@QBE?AW4FeatureTypes@@XZ ENDP	; CvPlot::getFeatureType
_TEXT	ENDS
PUBLIC	?isRevealed@CvPlot@@QBE_NW4TeamTypes@@@Z	; CvPlot::isRevealed
; Function compile flags: /Ogtpy
;	COMDAT ?isRevealed@CvPlot@@QBE_NW4TeamTypes@@@Z
_TEXT	SEGMENT
_eTeam$ = 8						; size = 4
?isRevealed@CvPlot@@QBE_NW4TeamTypes@@@Z PROC		; CvPlot::isRevealed, COMDAT
; _this$ = ecx

; 620  : 	{

	mov	edx, ecx

; 621  : 		CvAssertMsg(eTeam >= 0, "eTeam is expected to be non-negative (invalid Index)");
; 622  : 		CvAssertMsg(eTeam < MAX_TEAMS, "eTeam is expected to be within maximum bounds (invalid Index)");
; 623  : 		return m_bfRevealed.GetBit(eTeam);

	mov	ecx, DWORD PTR _eTeam$[esp-4]
	push	esi
	mov	eax, ecx
	shr	eax, 5
	mov	esi, eax
	shl	esi, 5
	sub	ecx, esi
	mov	esi, 1
	shl	esi, cl
	test	esi, DWORD PTR [edx+eax*4+8]
	pop	esi
	setne	al

; 624  : 	}

	ret	4
?isRevealed@CvPlot@@QBE_NW4TeamTypes@@@Z ENDP		; CvPlot::isRevealed
_TEXT	ENDS
PUBLIC	?isPlot@CvMap@@QBEHHH@Z				; CvMap::isPlot
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvmap.h
;	COMDAT ?isPlot@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?isPlot@CvMap@@QBEHHH@Z PROC				; CvMap::isPlot, COMDAT
; _this$ = ecx

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	mov	eax, DWORD PTR _iX$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@isPlot
	cmp	eax, DWORD PTR [ecx+4020]
	jge	SHORT $LN3@isPlot
	mov	eax, DWORD PTR _iY$[esp-4]
	test	eax, eax
	jl	SHORT $LN3@isPlot
	cmp	eax, DWORD PTR [ecx+4024]
	jge	SHORT $LN3@isPlot
	mov	eax, 1

; 161  : #endif
; 162  : 	}

	ret	8
$LN3@isPlot:

; 157  : #ifdef AUI_WARNING_FIXES
; 158  : 		return ((iX >= 0) && (uint(iX) < getGridWidth()) && (iY >= 0) && (uint(iY) < getGridHeight()));
; 159  : #else
; 160  : 		return ((iX >= 0) && (iX < getGridWidth()) && (iY >= 0) && (iY < getGridHeight()));

	xor	eax, eax

; 161  : #endif
; 162  : 	}

	ret	8
?isPlot@CvMap@@QBEHHH@Z ENDP				; CvMap::isPlot
_TEXT	ENDS
PUBLIC	?plotNum@CvMap@@QBEHHH@Z			; CvMap::plotNum
; Function compile flags: /Ogtpy
;	COMDAT ?plotNum@CvMap@@QBEHHH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?plotNum@CvMap@@QBEHHH@Z PROC				; CvMap::plotNum, COMDAT
; _this$ = ecx

; 183  : 		return ((iY * getGridWidth()) + iX);

	mov	eax, DWORD PTR [ecx+4020]
	imul	eax, DWORD PTR _iY$[esp-4]
	add	eax, DWORD PTR _iX$[esp-4]

; 184  : #endif
; 185  : 	}

	ret	8
?plotNum@CvMap@@QBEHHH@Z ENDP				; CvMap::plotNum
_TEXT	ENDS
PUBLIC	?plot@CvMap@@QBEPAVCvPlot@@HH@Z			; CvMap::plot
; Function compile flags: /Ogtpy
;	COMDAT ?plot@CvMap@@QBEPAVCvPlot@@HH@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
?plot@CvMap@@QBEPAVCvPlot@@HH@Z PROC			; CvMap::plot, COMDAT
; _this$ = ecx

; 273  : 		if((iX == INVALID_PLOT_COORD) || (iY == INVALID_PLOT_COORD))

	mov	eax, DWORD PTR _iX$[esp-4]
	push	ebp
	cmp	eax, -2147483647			; 80000001H
	je	$LN1@plot
	mov	ebp, DWORD PTR _iY$[esp]
	cmp	ebp, -2147483647			; 80000001H
	je	$LN1@plot

; 276  : 		}
; 277  : 		int iMapX = coordRange(iX, getGridWidth(), isWrapX());

	cmp	BYTE PTR [ecx+4056], 0
	push	ebx
	push	esi
	mov	esi, DWORD PTR [ecx+4020]
	push	edi
	je	SHORT $LN11@plot
	test	eax, eax
	jge	SHORT $LN13@plot
	cdq
	idiv	esi
	mov	edi, edx
	add	edi, esi
	jmp	SHORT $LN15@plot
$LN13@plot:
	cmp	eax, esi
	jl	SHORT $LN11@plot
	cdq
	idiv	esi
	mov	edi, edx
	jmp	SHORT $LN15@plot
$LN11@plot:
	mov	edi, eax
$LN15@plot:

; 278  : 		int iMapY = coordRange(iY, getGridHeight(), isWrapY());

	cmp	BYTE PTR [ecx+4057], 0
	mov	ebx, DWORD PTR [ecx+4024]
	je	SHORT $LN40@plot
	test	ebp, ebp
	jge	SHORT $LN23@plot
	mov	eax, ebp
	cdq
	idiv	ebx
	add	edx, ebx
	jmp	SHORT $LN25@plot
$LN23@plot:
	cmp	ebp, ebx
	jl	SHORT $LN40@plot
	mov	eax, ebp
	cdq
	idiv	ebx
	jmp	SHORT $LN25@plot
$LN40@plot:
	mov	edx, ebp
$LN25@plot:

; 279  : 		return ((isPlot(iMapX, iMapY)) ? &(m_pMapPlots[plotNum(iMapX, iMapY)]) : NULL);

	test	edi, edi
	jl	SHORT $LN5@plot
	cmp	edi, esi
	jge	SHORT $LN5@plot
	test	edx, edx
	jl	SHORT $LN5@plot
	cmp	edx, ebx
	jge	SHORT $LN5@plot
	imul	esi, edx
	add	esi, edi
	imul	esi, 484				; 000001e4H
	add	esi, DWORD PTR [ecx+4068]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	ebp

; 280  : 	}

	ret	8
$LN5@plot:
	pop	edi
	pop	esi
	pop	ebx

; 279  : 		return ((isPlot(iMapX, iMapY)) ? &(m_pMapPlots[plotNum(iMapX, iMapY)]) : NULL);

	xor	eax, eax
	pop	ebp

; 280  : 	}

	ret	8
$LN1@plot:

; 274  : 		{
; 275  : 			return NULL;

	xor	eax, eax
	pop	ebp

; 280  : 	}

	ret	8
?plot@CvMap@@QBEPAVCvPlot@@HH@Z ENDP			; CvMap::plot
_TEXT	ENDS
PUBLIC	?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z ; plotDirection
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
;	COMDAT ?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z
_TEXT	SEGMENT
_iX$ = 8						; size = 4
_iY$ = 12						; size = 4
_eDirection$ = 16					; size = 4
?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z PROC ; plotDirection, COMDAT

; 219  : 	if(eDirection == NO_DIRECTION)

	mov	ecx, DWORD PTR _eDirection$[esp-4]
	push	ebx
	push	ebp
	push	esi
	push	edi
	cmp	ecx, -1
	jne	$LN2@plotDirect

; 220  : 	{
; 221  : 		return GC.getMap().plot(iX, iY);

	mov	eax, DWORD PTR _iX$[esp+12]
	cmp	eax, -2147483647			; 80000001H
	je	$LN59@plotDirect
	mov	ebx, DWORD PTR _iY$[esp+12]
	cmp	ebx, -2147483647			; 80000001H
	je	$LN59@plotDirect
	mov	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [ebp+4056], 0
	mov	ecx, DWORD PTR [ebp+4020]
	je	SHORT $LN99@plotDirect
	test	eax, eax
	jge	SHORT $LN19@plotDirect
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN21@plotDirect
$LN19@plotDirect:
	cmp	eax, ecx
	jl	SHORT $LN99@plotDirect
	cdq
	idiv	ecx
	mov	esi, edx
	jmp	SHORT $LN21@plotDirect
$LN99@plotDirect:
	mov	esi, eax
$LN21@plotDirect:
	cmp	BYTE PTR [ebp+4057], 0
	mov	edi, DWORD PTR [ebp+4024]
	je	SHORT $LN101@plotDirect
	test	ebx, ebx
	jge	SHORT $LN29@plotDirect
	mov	eax, ebx
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN31@plotDirect
$LN29@plotDirect:
	cmp	ebx, edi
	jl	SHORT $LN101@plotDirect
	mov	eax, ebx
	cdq
	idiv	edi
	jmp	SHORT $LN31@plotDirect
$LN101@plotDirect:
	mov	edx, ebx
$LN31@plotDirect:
	test	esi, esi
	jl	$LN59@plotDirect
	cmp	esi, ecx
	jge	$LN59@plotDirect
	test	edx, edx
	jl	$LN59@plotDirect
	cmp	edx, edi
	jge	$LN59@plotDirect
	imul	ecx, edx
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebp+4068]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, ecx
	pop	ebx

; 234  : 	}
; 235  : }

	ret	0
$LN2@plotDirect:

; 222  : 	}
; 223  : 	else
; 224  : 	{
; 225  : 		// convert to hex-space coordinates - the coordinate system axes are E and NE (not orthogonal)
; 226  : 		iX = xToHexspaceX(iX , iY);

	mov	esi, DWORD PTR _iY$[esp+12]
	test	esi, esi
	jl	SHORT $LN47@plotDirect
	mov	eax, esi
	jmp	SHORT $LN103@plotDirect
$LN47@plotDirect:
	lea	eax, DWORD PTR [esi-1]
	cdq
	sub	eax, edx
$LN103@plotDirect:

; 227  : 		iX += GC.getPlotDirectionX()[eDirection];

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A[ecx*4+112]
	mov	edi, DWORD PTR _iX$[esp+12]
	sar	eax, 1
	sub	edx, eax
	add	edi, edx

; 228  : 		iY += GC.getPlotDirectionY()[eDirection];

	add	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A[ecx*4+136]

; 229  : 
; 230  : 		// convert from hex-space coordinates to the storage array
; 231  : 		iX = hexspaceXToX(iX, iY);

	js	SHORT $LN55@plotDirect
	mov	eax, esi
	jmp	SHORT $LN104@plotDirect
$LN55@plotDirect:
	lea	eax, DWORD PTR [esi-1]
	cdq
	sub	eax, edx
$LN104@plotDirect:
	sar	eax, 1
	add	edi, eax

; 232  : 
; 233  : 		return GC.getMap().plot(iX, iY);

	cmp	edi, -2147483647			; 80000001H
	je	$LN59@plotDirect
	cmp	esi, -2147483647			; 80000001H
	je	$LN59@plotDirect
	mov	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [ebp+4056], 0
	mov	ecx, DWORD PTR [ebp+4020]
	je	SHORT $LN69@plotDirect
	test	edi, edi
	jge	SHORT $LN71@plotDirect
	mov	eax, edi
	cdq
	idiv	ecx
	mov	edi, edx
	add	edi, ecx
	jmp	SHORT $LN69@plotDirect
$LN71@plotDirect:
	cmp	edi, ecx
	jl	SHORT $LN69@plotDirect
	mov	eax, edi
	cdq
	idiv	ecx
	mov	edi, edx
$LN69@plotDirect:
	cmp	BYTE PTR [ebp+4057], 0
	mov	ebx, DWORD PTR [ebp+4024]
	je	SHORT $LN100@plotDirect
	test	esi, esi
	jge	SHORT $LN81@plotDirect
	mov	eax, esi
	cdq
	idiv	ebx
	add	edx, ebx
	jmp	SHORT $LN83@plotDirect
$LN81@plotDirect:
	cmp	esi, ebx
	jl	SHORT $LN100@plotDirect
	mov	eax, esi
	cdq
	idiv	ebx
	jmp	SHORT $LN83@plotDirect
$LN100@plotDirect:
	mov	edx, esi
$LN83@plotDirect:
	test	edi, edi
	jl	SHORT $LN59@plotDirect
	cmp	edi, ecx
	jge	SHORT $LN59@plotDirect
	test	edx, edx
	jl	SHORT $LN59@plotDirect
	cmp	edx, ebx
	jge	SHORT $LN59@plotDirect
	imul	ecx, edx
	add	ecx, edi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebp+4068]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, ecx
	pop	ebx

; 234  : 	}
; 235  : }

	ret	0

; 232  : 
; 233  : 		return GC.getMap().plot(iX, iY);

$LN59@plotDirect:
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx

; 234  : 	}
; 235  : }

	ret	0
?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z ENDP ; plotDirection
_TEXT	ENDS
PUBLIC	??0CvReligionEntry@@QAE@XZ			; CvReligionEntry::CvReligionEntry
EXTRN	??0CvBaseInfo@@QAE@XZ:PROC			; CvBaseInfo::CvBaseInfo
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$??0CvReligionEntry@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvReligionEntry@@QAE@XZ$0
__ehfuncinfo$??0CvReligionEntry@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CvReligionEntry@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ??0CvReligionEntry@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CvReligionEntry@@QAE@XZ PROC				; CvReligionEntry::CvReligionEntry, COMDAT
; _this$ = ecx

; 27   : {

	push	-1
	push	__ehhandler$??0CvReligionEntry@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+20], esi
	call	??0CvBaseInfo@@QAE@XZ			; CvBaseInfo::CvBaseInfo
	lea	ecx, DWORD PTR [esi+260]
	mov	DWORD PTR __$EHRec$[esp+28], 0
	mov	DWORD PTR [esi], OFFSET ??_7CvReligionEntry@@6B@
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 28   : }

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvReligionEntry@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CvBaseInfo@@QAE@XZ
__ehhandler$??0CvReligionEntry@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??0CvReligionEntry@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvReligionEntry@@QAE@XZ ENDP				; CvReligionEntry::CvReligionEntry
PUBLIC	??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z ; CvReligion::CvReligion
EXTRN	?getGameTurn@CvGame@@QAEHXZ:PROC		; CvGame::getGameTurn
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__unwindtable$??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z$0
__ehfuncinfo$??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_eReligion$ = 8						; size = 4
_eFounder$ = 12						; size = 4
_pHolyCity$ = 16					; size = 4
_bPantheon$ = 20					; size = 1
??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z PROC ; CvReligion::CvReligion, COMDAT
; _this$ = ecx

; 119  : {

	push	-1
	push	__ehhandler$??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	mov	eax, DWORD PTR _eReligion$[esp+12]
	mov	dl, BYTE PTR _bPantheon$[esp+12]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR _eFounder$[esp+16]
	mov	DWORD PTR [esi+4], ecx
	lea	ecx, DWORD PTR [esi+152]
	mov	DWORD PTR _this$[esp+20], esi
	mov	DWORD PTR [esi], eax
	mov	BYTE PTR [esi+20], dl
	mov	BYTE PTR [esi+21], 0
	call	??0CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::CvReligionBeliefs

; 120  : 	if(pHolyCity)

	mov	eax, DWORD PTR _pHolyCity$[esp+16]
	mov	DWORD PTR __$EHRec$[esp+28], 0
	test	eax, eax
	je	SHORT $LN1@CvReligion

; 121  : 	{
; 122  : 		m_iHolyCityX = pHolyCity->getX();

	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR [esi+8], ecx

; 123  : 		m_iHolyCityY = pHolyCity->getY();

	mov	edx, DWORD PTR [eax+108]
	mov	DWORD PTR [esi+12], edx
$LN1@CvReligion:

; 124  : 	}
; 125  : 	m_iTurnFounded = GC.getGame().getGameTurn();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn

; 126  : 	ZeroMemory(m_szCustomName, sizeof(m_szCustomName));

	push	128					; 00000080H
	mov	DWORD PTR [esi+16], eax
	lea	eax, DWORD PTR [esi+22]
	push	0
	push	eax
	call	_memset

; 127  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	add	esp, 12					; 0000000cH
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	jmp	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
__ehhandler$??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z:
	mov	eax, OFFSET __ehfuncinfo$??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z ENDP ; CvReligion::CvReligion
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAVCvReligion@@@Z	; operator>>
EXTRN	?Read@CvReligionBeliefs@@QAEXAAVFDataStream@@@Z:PROC ; CvReligionBeliefs::Read
EXTRN	??5@YAAAVFDataStream@@AAV0@AAW4PlayerTypes@@@Z:PROC ; operator>>
; Function compile flags: /Ogtpy
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAVCvReligion@@@Z
_TEXT	SEGMENT
_uiVersion$ = 8						; size = 4
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??5@YAAAVFDataStream@@AAV0@AAVCvReligion@@@Z PROC	; operator>>, COMDAT

; 131  : {

	push	ebp
	push	esi
	push	edi

; 132  : 	uint uiVersion;
; 133  : 	loadFrom >> uiVersion;

	mov	edi, DWORD PTR _loadFrom$[esp+8]
	lea	eax, DWORD PTR _uiVersion$[esp+8]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 134  : 
; 135  : 	loadFrom >> writeTo.m_eReligion;

	mov	esi, DWORD PTR _writeTo$[esp+8]
	push	esi
	push	edi
	call	??5@YAAAVFDataStream@@AAV0@AAW4ReligionTypes@@@Z ; operator>>

; 136  : 	loadFrom >> writeTo.m_eFounder;

	lea	ecx, DWORD PTR [esi+4]
	push	ecx
	push	edi
	call	??5@YAAAVFDataStream@@AAV0@AAW4PlayerTypes@@@Z ; operator>>
	add	esp, 16					; 00000010H

; 137  : 	loadFrom >> writeTo.m_iHolyCityX;

	lea	edx, DWORD PTR [esi+8]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 138  : 	loadFrom >> writeTo.m_iHolyCityY;

	lea	eax, DWORD PTR [esi+12]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 139  : 	loadFrom >> writeTo.m_iTurnFounded;

	lea	ecx, DWORD PTR [esi+16]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 140  : 
; 141  : 	if(uiVersion >= 2)

	cmp	DWORD PTR _uiVersion$[esp+8], 2
	jb	SHORT $LN5@operator@7

; 142  : 	{
; 143  : 		loadFrom >> writeTo.m_bPantheon;

	lea	edx, DWORD PTR [esi+20]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 144  : 	}
; 145  : 	else

	jmp	SHORT $LN4@operator@7
$LN5@operator@7:

; 146  : 	{
; 147  : 		writeTo.m_bPantheon = false;

	mov	BYTE PTR [esi+20], 0
$LN4@operator@7:

; 148  : 	}
; 149  : 
; 150  : 	if(uiVersion >= 4)

	cmp	DWORD PTR _uiVersion$[esp+8], 4
	jb	SHORT $LN3@operator@7

; 151  : 	{
; 152  : 		loadFrom >> writeTo.m_bEnhanced;

	lea	eax, DWORD PTR [esi+21]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 153  : 	}
; 154  : 	else

	jmp	SHORT $LN2@operator@7
$LN3@operator@7:

; 155  : 	{
; 156  : 		writeTo.m_bEnhanced = false;

	mov	BYTE PTR [esi+21], 0
$LN2@operator@7:

; 157  : 	}
; 158  : 
; 159  : 	ZeroMemory(writeTo.m_szCustomName, sizeof(writeTo.m_szCustomName));

	push	128					; 00000080H
	lea	ebp, DWORD PTR [esi+22]
	push	0
	push	ebp
	call	_memset
	add	esp, 12					; 0000000cH

; 160  : 	if(uiVersion >= 3)

	cmp	DWORD PTR _uiVersion$[esp+8], 3
	jb	SHORT $LN1@operator@7

; 161  : 	{
; 162  : 		loadFrom >> writeTo.m_szCustomName;

	push	ebp
	push	edi
	call	??$?5D$0IA@@@YAAAVFDataStream@@AAV0@AAY0IA@D@Z ; operator>><char,128>
	add	esp, 8
$LN1@operator@7:

; 163  : 	}
; 164  : 
; 165  : 	writeTo.m_Beliefs.Read(loadFrom);

	push	edi
	lea	ecx, DWORD PTR [esi+152]
	call	?Read@CvReligionBeliefs@@QAEXAAVFDataStream@@@Z ; CvReligionBeliefs::Read

; 166  : 
; 167  : 	return loadFrom;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp

; 168  : }

	ret	0
??5@YAAAVFDataStream@@AAV0@AAVCvReligion@@@Z ENDP	; operator>>
_TEXT	ENDS
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABVCvReligion@@@Z	; operator<<
EXTRN	?Write@CvReligionBeliefs@@QBEXAAVFDataStream@@@Z:PROC ; CvReligionBeliefs::Write
EXTRN	??6@YAAAVFDataStream@@AAV0@ABW4PlayerTypes@@@Z:PROC ; operator<<
; Function compile flags: /Ogtpy
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABVCvReligion@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??6@YAAAVFDataStream@@AAV0@ABVCvReligion@@@Z PROC	; operator<<, COMDAT

; 172  : {

	push	ecx
	push	ebx
	push	esi

; 173  : 	uint uiVersion = 4;
; 174  : 	saveTo << uiVersion;

	mov	esi, DWORD PTR _saveTo$[esp+8]
	push	edi
	lea	eax, DWORD PTR _uiVersion$[esp+16]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR _uiVersion$[esp+20], 4
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 175  : 
; 176  : 	saveTo << readFrom.m_eReligion;

	mov	ebx, DWORD PTR _readFrom$[esp+12]
	push	ebx
	push	esi
	call	??6@YAAAVFDataStream@@AAV0@ABW4ReligionTypes@@@Z ; operator<<

; 177  : 	saveTo << readFrom.m_eFounder;

	lea	ecx, DWORD PTR [ebx+4]
	push	ecx
	push	esi
	call	??6@YAAAVFDataStream@@AAV0@ABW4PlayerTypes@@@Z ; operator<<
	add	esp, 16					; 00000010H

; 178  : 	saveTo << readFrom.m_iHolyCityX;

	lea	edx, DWORD PTR [ebx+8]
	push	edx
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 179  : 	saveTo << readFrom.m_iHolyCityY;

	lea	eax, DWORD PTR [ebx+12]
	push	eax
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 180  : 	saveTo << readFrom.m_iTurnFounded;

	lea	ecx, DWORD PTR [ebx+16]
	push	ecx
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 181  : 	saveTo << readFrom.m_bPantheon;

	lea	edx, DWORD PTR [ebx+20]
	push	edx
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 182  : 	saveTo << readFrom.m_bEnhanced;

	lea	eax, DWORD PTR [ebx+21]
	push	eax
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXAB_N@Z		; FDataStream::Write

; 183  : 	saveTo << readFrom.m_szCustomName;

	xor	edi, edi
	npad	3
$LL17@operator@8:
	lea	ecx, DWORD PTR [ebx+edi+22]
	push	ecx
	mov	ecx, esi
	call	?Write@FDataStream@@IAEXABD@Z		; FDataStream::Write
	inc	edi
	cmp	edi, 128				; 00000080H
	jb	SHORT $LL17@operator@8

; 184  : 
; 185  : 	readFrom.m_Beliefs.Write(saveTo);

	push	esi
	lea	ecx, DWORD PTR [ebx+152]
	call	?Write@CvReligionBeliefs@@QBEXAAVFDataStream@@@Z ; CvReligionBeliefs::Write
	pop	edi

; 186  : 
; 187  : 	return saveTo;

	mov	eax, esi
	pop	esi
	pop	ebx

; 188  : }

	pop	ecx
	ret	0
??6@YAAAVFDataStream@@AAV0@ABVCvReligion@@@Z ENDP	; operator<<
_TEXT	ENDS
PUBLIC	?CanEnhanceReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z ; CvGameReligions::CanEnhanceReligion
; Function compile flags: /Ogtpy
;	COMDAT ?CanEnhanceReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
_eReligion$ = 12					; size = 4
_eBelief1$ = 16						; size = 4
_eBelief2$ = 20						; size = 4
?CanEnhanceReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z PROC ; CvGameReligions::CanEnhanceReligion, COMDAT
; _this$ = ecx

; 1224 : {

	push	esi
	mov	esi, ecx

; 1225 : #ifdef AUI_WARNING_FIXES
; 1226 : 	if (eBelief1 != NO_BELIEF && IsInSomeReligion(eBelief1))
; 1227 : 		return FOUNDING_BELIEF_IN_USE;
; 1228 : 	if (eBelief2 != NO_BELIEF && IsInSomeReligion(eBelief2))
; 1229 : 		return FOUNDING_BELIEF_IN_USE;
; 1230 : #else
; 1231 : 	bool bFoundIt = false;
; 1232 : #endif
; 1233 : #ifdef AUI_RELIGION_FIX_NO_BELIEFS_AVAILABLE_CHECK_FOR_NON_PANTHEON_MOVED
; 1234 : 	if (eReligion == NO_RELIGION)
; 1235 : 		return FOUNDING_INVALID_PLAYER;
; 1236 : 	if (!IsAnyAvailableEnhancerBeliefs() || !IsAnyAvailableFollowerBeliefs())
; 1237 : 	{
; 1238 : 		return FOUNDING_NO_BELIEFS_AVAILABLE;
; 1239 : 	}
; 1240 : 	if (eBelief1 == NO_BELIEF || eBelief2 == NO_BELIEF)
; 1241 : 	{
; 1242 : 		if (GET_PLAYER(ePlayer).GetReligions()->IsFoundingReligion())
; 1243 : 		{
; 1244 : 			return FOUNDING_PLAYER_ALREADY_CREATED_RELIGION;
; 1245 : 		}
; 1246 : 	}
; 1247 : #endif
; 1248 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1249 : 	for (ReligionList::iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1250 : #else
; 1251 : 	ReligionList::iterator it;
; 1252 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi]
	imul	ecx, 328				; 00000148H
	add	ecx, eax
	push	edi
	cmp	eax, ecx
	je	SHORT $LN3@CanEnhance
	mov	edx, DWORD PTR _eReligion$[esp+4]
	mov	edi, DWORD PTR _ePlayer$[esp+4]
	npad	3
$LL7@CanEnhance:

; 1253 : #endif
; 1254 : 	{
; 1255 : 		if(it->m_eReligion == eReligion && it->m_eFounder == ePlayer)

	cmp	DWORD PTR [eax], edx
	jne	SHORT $LN6@CanEnhance
	cmp	DWORD PTR [eax+4], edi
	je	SHORT $LN15@CanEnhance
$LN6@CanEnhance:

; 1225 : #ifdef AUI_WARNING_FIXES
; 1226 : 	if (eBelief1 != NO_BELIEF && IsInSomeReligion(eBelief1))
; 1227 : 		return FOUNDING_BELIEF_IN_USE;
; 1228 : 	if (eBelief2 != NO_BELIEF && IsInSomeReligion(eBelief2))
; 1229 : 		return FOUNDING_BELIEF_IN_USE;
; 1230 : #else
; 1231 : 	bool bFoundIt = false;
; 1232 : #endif
; 1233 : #ifdef AUI_RELIGION_FIX_NO_BELIEFS_AVAILABLE_CHECK_FOR_NON_PANTHEON_MOVED
; 1234 : 	if (eReligion == NO_RELIGION)
; 1235 : 		return FOUNDING_INVALID_PLAYER;
; 1236 : 	if (!IsAnyAvailableEnhancerBeliefs() || !IsAnyAvailableFollowerBeliefs())
; 1237 : 	{
; 1238 : 		return FOUNDING_NO_BELIEFS_AVAILABLE;
; 1239 : 	}
; 1240 : 	if (eBelief1 == NO_BELIEF || eBelief2 == NO_BELIEF)
; 1241 : 	{
; 1242 : 		if (GET_PLAYER(ePlayer).GetReligions()->IsFoundingReligion())
; 1243 : 		{
; 1244 : 			return FOUNDING_PLAYER_ALREADY_CREATED_RELIGION;
; 1245 : 		}
; 1246 : 	}
; 1247 : #endif
; 1248 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1249 : 	for (ReligionList::iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1250 : #else
; 1251 : 	ReligionList::iterator it;
; 1252 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	add	eax, 328				; 00000148H
	cmp	eax, ecx
	jne	SHORT $LL7@CanEnhance
$LN3@CanEnhance:
	pop	edi

; 1279 : 	}
; 1280 : #endif
; 1281 : 
; 1282 : 	return FOUNDING_RELIGION_IN_USE;

	mov	eax, 2
	pop	esi

; 1283 : }

	ret	16					; 00000010H
$LN15@CanEnhance:

; 1256 : 		{
; 1257 : #ifdef AUI_RELIGION_FIX_NO_BELIEFS_AVAILABLE_CHECK_FOR_NON_PANTHEON_MOVED
; 1258 : 			if (it->m_bEnhanced)
; 1259 : 				return FOUNDING_RELIGION_ENHANCED;
; 1260 : #endif
; 1261 : #ifdef AUI_WARNING_FIXES
; 1262 : 			return FOUNDING_OK;
; 1263 : #else
; 1264 : 			bFoundIt = true;
; 1265 : 			break;
; 1266 : #endif
; 1267 : 		}
; 1268 : 	}
; 1269 : 
; 1270 : #ifndef AUI_WARNING_FIXES
; 1271 : 	if(bFoundIt)
; 1272 : 	{
; 1273 : 		if(eBelief1 != NO_BELIEF && IsInSomeReligion(eBelief1))

	mov	eax, DWORD PTR _eBelief1$[esp+4]
	cmp	eax, -1
	je	SHORT $LN2@CanEnhance
	push	eax
	mov	ecx, esi
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	test	al, al
	je	SHORT $LN2@CanEnhance
$LN18@CanEnhance:
	pop	edi

; 1274 : 			return FOUNDING_BELIEF_IN_USE;

	mov	eax, 1
	pop	esi

; 1283 : }

	ret	16					; 00000010H
$LN2@CanEnhance:

; 1275 : 		if(eBelief2 != NO_BELIEF && IsInSomeReligion(eBelief2))

	mov	eax, DWORD PTR _eBelief2$[esp+4]
	cmp	eax, -1
	je	SHORT $LN1@CanEnhance
	push	eax
	mov	ecx, esi
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	test	al, al

; 1276 : 			return FOUNDING_BELIEF_IN_USE;

	jne	SHORT $LN18@CanEnhance
$LN1@CanEnhance:
	pop	edi

; 1277 : 
; 1278 : 		return FOUNDING_OK;

	xor	eax, eax
	pop	esi

; 1283 : }

	ret	16					; 00000010H
?CanEnhanceReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z ENDP ; CvGameReligions::CanEnhanceReligion
_TEXT	ENDS
PUBLIC	?SetHolyCity@CvGameReligions@@QAEXW4ReligionTypes@@PAVCvCity@@@Z ; CvGameReligions::SetHolyCity
; Function compile flags: /Ogtpy
;	COMDAT ?SetHolyCity@CvGameReligions@@QAEXW4ReligionTypes@@PAVCvCity@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
_pkHolyCity$ = 12					; size = 4
?SetHolyCity@CvGameReligions@@QAEXW4ReligionTypes@@PAVCvCity@@@Z PROC ; CvGameReligions::SetHolyCity, COMDAT
; _this$ = ecx

; 1421 : 	ReligionList::iterator it;
; 1422 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1423 : 	for (it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1424 : #else
; 1425 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	imul	ecx, 328				; 00000148H
	add	ecx, eax
	cmp	eax, ecx
	je	SHORT $LN2@SetHolyCit
	mov	edx, DWORD PTR _eReligion$[esp-4]
$LL4@SetHolyCit:

; 1426 : #endif
; 1427 : 	{
; 1428 : 		// If talking about a pantheon, make sure to match the player
; 1429 : 		if(it->m_eReligion == eReligion)

	cmp	DWORD PTR [eax], edx
	je	SHORT $LN20@SetHolyCit
	add	eax, 328				; 00000148H
	cmp	eax, ecx
	jne	SHORT $LL4@SetHolyCit

; 1433 : 			break;
; 1434 : 		}
; 1435 : 	}
; 1436 : }

	ret	8
$LN20@SetHolyCit:

; 1430 : 		{
; 1431 : 			it->m_iHolyCityX = pkHolyCity->getX();

	mov	ecx, DWORD PTR _pkHolyCity$[esp-4]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR [eax+8], edx

; 1432 : 			it->m_iHolyCityY = pkHolyCity->getY();

	mov	ecx, DWORD PTR [ecx+108]
	mov	DWORD PTR [eax+12], ecx
$LN2@SetHolyCit:

; 1433 : 			break;
; 1434 : 		}
; 1435 : 	}
; 1436 : }

	ret	8
?SetHolyCity@CvGameReligions@@QAEXW4ReligionTypes@@PAVCvCity@@@Z ENDP ; CvGameReligions::SetHolyCity
_TEXT	ENDS
PUBLIC	?UpdateAllCitiesThisReligion@CvGameReligions@@QAEXW4ReligionTypes@@@Z ; CvGameReligions::UpdateAllCitiesThisReligion
EXTRN	?UpdateReligion@CvCity@@QAEXW4ReligionTypes@@@Z:PROC ; CvCity::UpdateReligion
; Function compile flags: /Ogtpy
;	COMDAT ?UpdateAllCitiesThisReligion@CvGameReligions@@QAEXW4ReligionTypes@@@Z
_TEXT	SEGMENT
_iLoop$ = 8						; size = 4
_eReligion$ = 8						; size = 4
?UpdateAllCitiesThisReligion@CvGameReligions@@QAEXW4ReligionTypes@@@Z PROC ; CvGameReligions::UpdateAllCitiesThisReligion, COMDAT
; _this$ = ecx

; 1459 : {

	push	ebx
	push	ebp

; 1460 : 	int iLoop;
; 1461 : 
; 1462 : 	for(int iPlayer = 0; iPlayer < MAX_PLAYERS; iPlayer++)

	mov	ebp, DWORD PTR _eReligion$[esp+4]
	push	esi
	push	edi
	xor	ebx, ebx
	npad	6
$LL22@UpdateAllC:

; 1463 : 	{
; 1464 : 		PlayerTypes ePlayer = (PlayerTypes)iPlayer;
; 1465 : 		CvPlayer& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 1466 : 		if(kPlayer.isAlive())

	cmp	BYTE PTR [ebx+eax+2256], 0
	lea	edi, DWORD PTR [ebx+eax]
	je	SHORT $LN7@UpdateAllC

; 1467 : 		{
; 1468 : 			for(CvCity* pCity = kPlayer.firstCity(&iLoop); pCity != NULL; pCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$[esp+16]
	push	ecx
	mov	ecx, edi
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN7@UpdateAllC
$LL4@UpdateAllC:

; 1469 : 			{
; 1470 : 				if(pCity->GetCityReligions()->GetReligiousMajority() == eReligion)

	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, ebp
	jne	SHORT $LN3@UpdateAllC

; 1471 : 				{
; 1472 : 					pCity->UpdateReligion(eReligion);

	push	ebp
	mov	ecx, esi
	call	?UpdateReligion@CvCity@@QAEXW4ReligionTypes@@@Z ; CvCity::UpdateReligion
$LN3@UpdateAllC:
	push	0
	lea	edx, DWORD PTR _iLoop$[esp+16]
	push	edx
	mov	ecx, edi
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LL4@UpdateAllC
$LN7@UpdateAllC:

; 1460 : 	int iLoop;
; 1461 : 
; 1462 : 	for(int iPlayer = 0; iPlayer < MAX_PLAYERS; iPlayer++)

	add	ebx, 63236				; 0000f704H
	cmp	ebx, 4047104				; 003dc100H
	jl	SHORT $LL22@UpdateAllC
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 1473 : 				}
; 1474 : 			}
; 1475 : 		}
; 1476 : 	}
; 1477 : }

	ret	4
?UpdateAllCitiesThisReligion@CvGameReligions@@QAEXW4ReligionTypes@@@Z ENDP ; CvGameReligions::UpdateAllCitiesThisReligion
_TEXT	ENDS
PUBLIC	?GetNumFollowers@CvGameReligions@@QBEHW4ReligionTypes@@@Z ; CvGameReligions::GetNumFollowers
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumFollowers@CvGameReligions@@QBEHW4ReligionTypes@@@Z
_TEXT	SEGMENT
_iLoop$225897 = 8					; size = 4
_eReligion$ = 8						; size = 4
?GetNumFollowers@CvGameReligions@@QBEHW4ReligionTypes@@@Z PROC ; CvGameReligions::GetNumFollowers, COMDAT
; _this$ = ecx

; 1657 : {

	push	ebx
	push	ebp

; 1658 : 	int iRtnValue = 0;

	mov	ebp, DWORD PTR _eReligion$[esp+4]
	push	esi
	push	edi
	xor	edi, edi
	xor	ebx, ebx
	npad	4
$LL34@GetNumFoll@2:

; 1662 : 	{
; 1663 : 		CvPlayer& kPlayer = GET_PLAYER((PlayerTypes)iI);

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 1664 : 		if(kPlayer.isAlive())

	cmp	BYTE PTR [ebx+eax+2256], 0
	lea	esi, DWORD PTR [ebx+eax]
	je	SHORT $LN6@GetNumFoll@2

; 1665 : 		{
; 1666 : 			// Loop through each of their cities
; 1667 : 			int iLoop;
; 1668 : 			CvCity* pLoopCity;
; 1669 : 			for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$225897[esp+16]
	push	ecx
	mov	ecx, esi
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	test	eax, eax
	je	SHORT $LN6@GetNumFoll@2
$LL3@GetNumFoll@2:

; 1670 : 			{
; 1671 : 				iRtnValue += pLoopCity->GetCityReligions()->GetNumFollowers(eReligion);

	mov	ecx, eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	lea	edx, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+edx*8]
	cmp	ecx, eax
	je	SHORT $LN17@GetNumFoll@2
	npad	6
$LL19@GetNumFoll@2:
	cmp	DWORD PTR [ecx], ebp
	je	SHORT $LN29@GetNumFoll@2
	add	ecx, 24					; 00000018H
	cmp	ecx, eax
	jne	SHORT $LL19@GetNumFoll@2
$LN17@GetNumFoll@2:
	xor	ecx, ecx
$LN20@GetNumFoll@2:
	push	0
	lea	eax, DWORD PTR _iLoop$225897[esp+16]
	add	edi, ecx
	push	eax
	mov	ecx, esi
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	test	eax, eax
	jne	SHORT $LL3@GetNumFoll@2
$LN6@GetNumFoll@2:

; 1659 : 
; 1660 : 	// Loop through all the players
; 1661 : 	for(int iI = 0; iI < MAX_PLAYERS; iI++)

	add	ebx, 63236				; 0000f704H
	cmp	ebx, 4047104				; 003dc100H
	jl	SHORT $LL34@GetNumFoll@2

; 1672 : 			}
; 1673 : 		}
; 1674 : 	}
; 1675 : 	return iRtnValue;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 1676 : }

	ret	4
$LN29@GetNumFoll@2:

; 1670 : 			{
; 1671 : 				iRtnValue += pLoopCity->GetCityReligions()->GetNumFollowers(eReligion);

	mov	ecx, DWORD PTR [ecx+8]
	jmp	SHORT $LN20@GetNumFoll@2
?GetNumFollowers@CvGameReligions@@QBEHW4ReligionTypes@@@Z ENDP ; CvGameReligions::GetNumFollowers
_TEXT	ENDS
PUBLIC	?GetNumCitiesFollowing@CvGameReligions@@QBEHW4ReligionTypes@@@Z ; CvGameReligions::GetNumCitiesFollowing
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumCitiesFollowing@CvGameReligions@@QBEHW4ReligionTypes@@@Z
_TEXT	SEGMENT
_iLoop$225914 = 8					; size = 4
_eReligion$ = 8						; size = 4
?GetNumCitiesFollowing@CvGameReligions@@QBEHW4ReligionTypes@@@Z PROC ; CvGameReligions::GetNumCitiesFollowing, COMDAT
; _this$ = ecx

; 1680 : {

	push	ebx
	push	ebp

; 1681 : 	int iRtnValue = 0;

	mov	ebp, DWORD PTR _eReligion$[esp+4]
	push	esi
	push	edi
	xor	ebx, ebx
	xor	edi, edi
	npad	4
$LL22@GetNumCiti:

; 1685 : 	{
; 1686 : 		CvPlayer& kPlayer = GET_PLAYER((PlayerTypes)iI);

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 1687 : 		if(kPlayer.isAlive())

	cmp	BYTE PTR [edi+eax+2256], 0
	lea	esi, DWORD PTR [edi+eax]
	je	SHORT $LN7@GetNumCiti

; 1688 : 		{
; 1689 : 			// Loop through each of their cities
; 1690 : 			int iLoop;
; 1691 : 			CvCity* pLoopCity;
; 1692 : 			for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$225914[esp+16]
	push	ecx
	mov	ecx, esi
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	test	eax, eax
	je	SHORT $LN7@GetNumCiti
$LL4@GetNumCiti:

; 1693 : 			{
; 1694 : 				if(pLoopCity->GetCityReligions()->GetReligiousMajority() == eReligion)

	mov	ecx, eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, ebp
	jne	SHORT $LN3@GetNumCiti

; 1695 : 				{
; 1696 : 					iRtnValue++;

	inc	ebx
$LN3@GetNumCiti:

; 1688 : 		{
; 1689 : 			// Loop through each of their cities
; 1690 : 			int iLoop;
; 1691 : 			CvCity* pLoopCity;
; 1692 : 			for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$225914[esp+16]
	push	edx
	mov	ecx, esi
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	test	eax, eax
	jne	SHORT $LL4@GetNumCiti
$LN7@GetNumCiti:

; 1682 : 
; 1683 : 	// Loop through all the players
; 1684 : 	for(int iI = 0; iI < MAX_PLAYERS; iI++)

	add	edi, 63236				; 0000f704H
	cmp	edi, 4047104				; 003dc100H
	jl	SHORT $LL22@GetNumCiti
	pop	edi
	pop	esi
	pop	ebp

; 1697 : 				}
; 1698 : 			}
; 1699 : 		}
; 1700 : 	}
; 1701 : 	return iRtnValue;

	mov	eax, ebx
	pop	ebx

; 1702 : }

	ret	4
?GetNumCitiesFollowing@CvGameReligions@@QBEHW4ReligionTypes@@@Z ENDP ; CvGameReligions::GetNumCitiesFollowing
_TEXT	ENDS
PUBLIC	?HasCreatedReligion@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasCreatedReligion
; Function compile flags: /Ogtpy
;	COMDAT ?HasCreatedReligion@CvGameReligions@@QBE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
?HasCreatedReligion@CvGameReligions@@QBE_NW4PlayerTypes@@@Z PROC ; CvGameReligions::HasCreatedReligion, COMDAT
; _this$ = ecx

; 1707 : #ifdef AUI_WARNING_FIXES
; 1708 : 	return GetReligionCreatedByPlayer(ePlayer) > RELIGION_PANTHEON;
; 1709 : #else
; 1710 :     if (GetReligionCreatedByPlayer(ePlayer) > RELIGION_PANTHEON)

	mov	eax, DWORD PTR _ePlayer$[esp-4]
	push	eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	test	eax, eax
	setg	al

; 1711 : 	{
; 1712 : 		return true;
; 1713 : 	}
; 1714 : 
; 1715 : 	return false;
; 1716 : #endif
; 1717 : }

	ret	4
?HasCreatedReligion@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ENDP ; CvGameReligions::HasCreatedReligion
_TEXT	ENDS
PUBLIC	?HasAddedReformationBelief@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasAddedReformationBelief
EXTRN	?IsReformationBelief@CvBeliefEntry@@QBE_NXZ:PROC ; CvBeliefEntry::IsReformationBelief
EXTRN	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ:PROC	; CvReligionBeliefs::GetNumBeliefs
; Function compile flags: /Ogtpy
;	COMDAT ?HasAddedReformationBelief@CvGameReligions@@QBE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
?HasAddedReformationBelief@CvGameReligions@@QBE_NW4PlayerTypes@@@Z PROC ; CvGameReligions::HasAddedReformationBelief, COMDAT
; _this$ = ecx

; 1721 : {

	push	ebx
	push	esi
	mov	esi, ecx
	push	edi

; 1722 : 	CvBeliefXMLEntries* pkBeliefs = GC.GetGameBeliefs();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs

; 1723 : 
; 1724 : 	ReligionTypes eReligion = GetReligionCreatedByPlayer(ePlayer);

	mov	edi, DWORD PTR _ePlayer$[esp+8]
	push	edi
	mov	ecx, esi
	mov	ebx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer

; 1725 :     if (eReligion > RELIGION_PANTHEON)

	test	eax, eax
	jle	SHORT $LN2@HasAddedRe

; 1726 : 	{
; 1727 : 		const CvReligion* pMyReligion = GetReligion(eReligion, ePlayer);

	push	edi
	push	eax
	mov	ecx, esi
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 1728 : 		if (pMyReligion)

	test	eax, eax
	je	SHORT $LN2@HasAddedRe

; 1729 : 		{
; 1730 : 			for(int iI = 0; iI < pMyReligion->m_Beliefs.GetNumBeliefs(); iI++)

	lea	edi, DWORD PTR [eax+152]
	mov	ecx, edi
	xor	esi, esi
	call	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetNumBeliefs
	test	eax, eax
	jle	SHORT $LN2@HasAddedRe
$LL4@HasAddedRe:

; 1731 : 			{
; 1732 : 				const BeliefTypes eBelief = pMyReligion->m_Beliefs.GetBelief(iI);

	push	esi
	mov	ecx, edi
	call	?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z ; CvReligionBeliefs::GetBelief

; 1733 : 				CvBeliefEntry* pEntry = pkBeliefs->GetEntry((int)eBelief);

	push	eax
	mov	ecx, ebx
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry

; 1734 : 				if (pEntry && pEntry->IsReformationBelief())

	test	eax, eax
	je	SHORT $LN3@HasAddedRe
	mov	ecx, eax
	call	?IsReformationBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsReformationBelief
	test	al, al
	jne	SHORT $LN10@HasAddedRe
$LN3@HasAddedRe:

; 1729 : 		{
; 1730 : 			for(int iI = 0; iI < pMyReligion->m_Beliefs.GetNumBeliefs(); iI++)

	mov	ecx, edi
	inc	esi
	call	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetNumBeliefs
	cmp	esi, eax
	jl	SHORT $LL4@HasAddedRe
$LN2@HasAddedRe:
	pop	edi
	pop	esi

; 1737 : 				}
; 1738 : 			}
; 1739 : 		}
; 1740 : 	}
; 1741 : 
; 1742 : 	return false;

	xor	al, al
	pop	ebx

; 1743 : }

	ret	4
$LN10@HasAddedRe:
	pop	edi
	pop	esi

; 1735 : 				{
; 1736 : 					return true;

	mov	al, 1
	pop	ebx

; 1743 : }

	ret	4
?HasAddedReformationBelief@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ENDP ; CvGameReligions::HasAddedReformationBelief
_TEXT	ENDS
PUBLIC	?IsEligibleForFounderBenefits@CvGameReligions@@QBE_NW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::IsEligibleForFounderBenefits
; Function compile flags: /Ogtpy
;	COMDAT ?IsEligibleForFounderBenefits@CvGameReligions@@QBE_NW4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_religion$ = 8						; size = 4
_eReligion$ = 8						; size = 4
_ePlayer$ = 12						; size = 4
?IsEligibleForFounderBenefits@CvGameReligions@@QBE_NW4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvGameReligions::IsEligibleForFounderBenefits, COMDAT
; _this$ = ecx

; 1748 : 	const CvReligion* religion = GetReligion(eReligion, NO_PLAYER);

	mov	eax, DWORD PTR _eReligion$[esp-4]
	push	-1
	push	eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	edx, eax
	mov	DWORD PTR _religion$[esp-4], edx

; 1749 : 	if(religion)

	test	edx, edx
	je	$LN1@IsEligible

; 1750 : 	{
; 1751 : 		CvPlot* pHolyCityPlot = NULL;
; 1752 : 		pHolyCityPlot = GC.getMap().plot(religion->m_iHolyCityX, religion->m_iHolyCityY);

	mov	eax, DWORD PTR [edx+8]
	push	ebx
	mov	ebx, DWORD PTR [edx+12]
	push	ebp
	push	esi
	push	edi
	cmp	eax, -2147483647			; 80000001H
	je	$LN9@IsEligible
	cmp	ebx, -2147483647			; 80000001H
	je	$LN9@IsEligible
	mov	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [ebp+4056], 0
	mov	ecx, DWORD PTR [ebp+4020]
	je	SHORT $LN19@IsEligible
	test	eax, eax
	jge	SHORT $LN21@IsEligible
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN23@IsEligible
$LN21@IsEligible:
	cmp	eax, ecx
	jl	SHORT $LN19@IsEligible
	cdq
	idiv	ecx
	mov	esi, edx
	jmp	SHORT $LN23@IsEligible
$LN19@IsEligible:
	mov	esi, eax
$LN23@IsEligible:
	cmp	BYTE PTR [ebp+4057], 0
	mov	edi, DWORD PTR [ebp+4024]
	je	SHORT $LN29@IsEligible
	test	ebx, ebx
	jge	SHORT $LN31@IsEligible
	mov	eax, ebx
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN33@IsEligible
$LN31@IsEligible:
	cmp	ebx, edi
	jl	SHORT $LN29@IsEligible
	mov	eax, ebx
	cdq
	idiv	edi
	jmp	SHORT $LN33@IsEligible
$LN29@IsEligible:
	mov	edx, ebx
$LN33@IsEligible:
	test	esi, esi
	jl	SHORT $LN13@IsEligible
	cmp	esi, ecx
	jge	SHORT $LN13@IsEligible
	test	edx, edx
	jl	SHORT $LN13@IsEligible
	cmp	edx, edi
	jge	SHORT $LN13@IsEligible
	imul	ecx, edx
	mov	edx, DWORD PTR _religion$[esp+12]
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebp+4068]
	jmp	SHORT $LN11@IsEligible
$LN13@IsEligible:
	mov	edx, DWORD PTR _religion$[esp+12]
$LN9@IsEligible:
	xor	ecx, ecx
$LN11@IsEligible:

; 1753 : 
; 1754 : 		if(religion->m_eFounder == ePlayer)

	mov	eax, DWORD PTR _ePlayer$[esp+12]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	cmp	DWORD PTR [edx+4], eax
	jne	SHORT $LN1@IsEligible

; 1755 : 		{
; 1756 : 			if(!religion->m_bPantheon)

	cmp	BYTE PTR [edx+20], 0
	jne	SHORT $LN1@IsEligible

; 1757 : 			{
; 1758 : 				if(pHolyCityPlot && pHolyCityPlot->getOwner() == ePlayer)

	test	ecx, ecx
	je	SHORT $LN1@IsEligible
	movsx	ecx, BYTE PTR [ecx+4]
	cmp	ecx, eax
	jne	SHORT $LN1@IsEligible

; 1759 : 				{
; 1760 : 					return true;

	mov	al, 1

; 1767 : }

	ret	8
$LN1@IsEligible:

; 1761 : 				}
; 1762 : 			}
; 1763 : 		}
; 1764 : 	}
; 1765 : 
; 1766 : 	return false;

	xor	al, al

; 1767 : }

	ret	8
?IsEligibleForFounderBenefits@CvGameReligions@@QBE_NW4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvGameReligions::IsEligibleForFounderBenefits
_TEXT	ENDS
PUBLIC	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetFounderBenefitsReligion
EXTRN	??1CvLuaArgsHandle@@QAE@XZ:PROC			; CvLuaArgsHandle::~CvLuaArgsHandle
EXTRN	?CallAccumulator@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AAH@Z:PROC ; LuaSupport::CallAccumulator
EXTRN	??0CvLuaArgsHandle@@QAE@XZ:PROC			; CvLuaArgsHandle::CvLuaArgsHandle
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaargshandle.h
xdata$x	SEGMENT
__unwindtable$?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z$0
__ehfuncinfo$?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_iValue$225982 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_args$225981 = 8					; size = 4
_ePlayer$ = 8						; size = 4
?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvGameReligions::GetFounderBenefitsReligion, COMDAT
; _this$ = ecx

; 1819 : {

	push	-1
	push	__ehhandler$?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 1820 : 	ReligionTypes eReligion;
; 1821 : 
; 1822 : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8596
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	call	edx

; 1823 : 	if(pkScriptSystem)

	mov	ebx, DWORD PTR _ePlayer$[esp+24]
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN13@GetFounder

; 1824 : 	{
; 1825 : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$225981[esp+24]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle

; 1826 : 		args->Push(ePlayer);

	mov	ecx, DWORD PTR _args$225981[esp+24]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	push	ebx
	mov	DWORD PTR __$EHRec$[esp+40], 0
	call	edx

; 1827 : 
; 1828 : 		int iValue = 0;
; 1829 : 		if (LuaSupport::CallAccumulator(pkScriptSystem, "GetFounderBenefitsReligion", args.get(), iValue))

	mov	ecx, DWORD PTR _args$225981[esp+24]
	lea	eax, DWORD PTR _iValue$225982[esp+28]
	push	eax
	push	ecx
	push	OFFSET $SG225984
	push	esi
	mov	DWORD PTR _iValue$225982[esp+44], 0
	call	?CallAccumulator@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AAH@Z ; LuaSupport::CallAccumulator
	add	esp, 16					; 00000010H

; 1830 : 		{
; 1831 : 			eReligion = (ReligionTypes)iValue;
; 1832 : 			return eReligion;

	mov	DWORD PTR __$EHRec$[esp+36], -1
	lea	ecx, DWORD PTR _args$225981[esp+24]
	test	al, al
	je	SHORT $LN2@GetFounder
	mov	esi, DWORD PTR _iValue$225982[esp+28]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN15@GetFounder:
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx

; 1841 : 	}
; 1842 : 
; 1843 : 	return NO_RELIGION;
; 1844 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
$LN2@GetFounder:

; 1833 : 		}
; 1834 : 	}

	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN13@GetFounder:

; 1835 : 
; 1836 : 	eReligion = GetReligionCreatedByPlayer(ePlayer);

	push	ebx
	mov	ecx, edi
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	mov	esi, eax

; 1837 : 
; 1838 : 	if(IsEligibleForFounderBenefits(eReligion, ePlayer))

	push	ebx
	push	esi
	mov	ecx, edi
	call	?IsEligibleForFounderBenefits@CvGameReligions@@QBE_NW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::IsEligibleForFounderBenefits
	test	al, al

; 1839 : 	{
; 1840 : 		return eReligion;

	jne	SHORT $LN15@GetFounder

; 1841 : 	}
; 1842 : 
; 1843 : 	return NO_RELIGION;
; 1844 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	pop	edi
	pop	esi
	or	eax, -1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _args$225981[ebp-4]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__ehhandler$?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvGameReligions::GetFounderBenefitsReligion
PUBLIC	?GetAdjacentCityReligiousPressure@CvGameReligions@@QAEHW4ReligionTypes@@PAVCvCity@@1AAH_N@Z ; CvGameReligions::GetAdjacentCityReligiousPressure
EXTRN	?GetReligionSpreadStrengthModifier@CvGameLeagues@@QAEHW4PlayerTypes@@W4ReligionTypes@@@Z:PROC ; CvGameLeagues::GetReligionSpreadStrengthModifier
EXTRN	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ:PROC ; CvGame::GetGameLeagues
EXTRN	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z:PROC	; CvTeamTechs::HasTech
EXTRN	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ:PROC ; CvTeam::GetTeamTechs
EXTRN	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ:PROC ; CvPlayer::GetPlayerTraits
EXTRN	?IsCityConnectedFromCityToCity@CvGameTrade@@QAE_NPAVCvCity@@0@Z:PROC ; CvGameTrade::IsCityConnectedFromCityToCity
EXTRN	?getReligiousPressureAdjacentCity@CvGameSpeedInfo@@QBEHXZ:PROC ; CvGameSpeedInfo::getReligiousPressureAdjacentCity
EXTRN	?IsCityConnectedToCity@CvGameTrade@@QAE_NPAVCvCity@@0@Z:PROC ; CvGameTrade::IsCityConnectedToCity
EXTRN	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ:PROC ; CvGame::GetGameTrade
; Function compile flags: /Ogtpy
;	COMDAT ?GetAdjacentCityReligiousPressure@CvGameReligions@@QAEHW4ReligionTypes@@PAVCvCity@@1AAH_N@Z
_TEXT	SEGMENT
_bWithinDistance$ = -5					; size = 1
_this$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_pFromCity$ = 12					; size = 4
_pToCity$ = 16						; size = 4
_iNumTradeRoutesInfluencing$ = 20			; size = 4
_bConnectedWithTrade$ = 24				; size = 1
_bPretendTradeConnection$ = 24				; size = 1
?GetAdjacentCityReligiousPressure@CvGameReligions@@QAEHW4ReligionTypes@@PAVCvCity@@1AAH_N@Z PROC ; CvGameReligions::GetAdjacentCityReligiousPressure, COMDAT
; _this$ = ecx

; 2177 : {

	sub	esp, 8

; 2178 : 	int iPressure = 0;
; 2179 : 	iNumTradeRoutesInfluencing = 0;

	mov	eax, DWORD PTR _iNumTradeRoutesInfluencing$[esp+4]
	push	esi
	xor	esi, esi
	mov	DWORD PTR [eax], esi

; 2180 : 
; 2181 : 	if (eReligion <= RELIGION_PANTHEON)

	mov	eax, DWORD PTR _eReligion$[esp+8]
	mov	DWORD PTR _this$[esp+12], ecx
	test	eax, eax
	jg	SHORT $LN21@GetAdjacen

; 2182 : 	{
; 2183 : 		return iPressure;

	xor	eax, eax
	pop	esi

; 2302 : }

	add	esp, 8
	ret	20					; 00000014H
$LN21@GetAdjacen:
	push	ebx

; 2184 : 	}
; 2185 : 
; 2186 : 	const CvReligion* pReligion = GetReligion(eReligion, pFromCity->getOwner());

	mov	ebx, DWORD PTR _pFromCity$[esp+12]
	mov	edx, DWORD PTR [ebx+84]
	push	ebp
	push	edx
	push	eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	ebp, eax

; 2187 : 	if (!pReligion)

	test	ebp, ebp
	jne	SHORT $LN20@GetAdjacen
	pop	ebp
	pop	ebx
	pop	esi

; 2302 : }

	add	esp, 8
	ret	20					; 00000014H
$LN20@GetAdjacen:

; 2188 : 	{
; 2189 : 		return iPressure;
; 2190 : 	}
; 2191 : 
; 2192 : 	// Are the cities within the minimum distance?
; 2193 : 	int iDistance = GC.getRELIGION_ADJACENT_CITY_DISTANCE();
; 2194 : 
; 2195 : 	// Boost to distance due to belief?
; 2196 : 	int iDistanceMod = pReligion->m_Beliefs.GetSpreadDistanceModifier();

	mov	eax, DWORD PTR [ebp+188]
	push	edi
	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7904

; 2197 : 	if(iDistanceMod > 0)

	test	eax, eax
	jle	SHORT $LN19@GetAdjacen

; 2198 : 	{
; 2199 : 		iDistance *= (100 + iDistanceMod);

	lea	ecx, DWORD PTR [eax+100]
	imul	ecx, edi

; 2200 : 		iDistance /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	edi, eax
$LN19@GetAdjacen:

; 2201 : 	}
; 2202 : 
; 2203 : 	bool bWithinDistance = (plotDistance(pFromCity->getX(), pFromCity->getY(), pToCity->getX(), pToCity->getY()) <= iDistance);

	mov	eax, DWORD PTR _pToCity$[esp+20]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR [eax+96]
	mov	eax, DWORD PTR [ebx+108]
	push	ecx
	mov	ecx, DWORD PTR [ebx+96]
	push	edx
	push	eax
	push	ecx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance

; 2204 : 	bool bConnectedWithTrade = GC.getGame().GetGameTrade()->IsCityConnectedToCity(pFromCity, pToCity) || bPretendTradeConnection;

	mov	edx, DWORD PTR _pToCity$[esp+36]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	add	esp, 16					; 00000010H
	cmp	eax, edi
	mov	edi, DWORD PTR _pFromCity$[esp+20]
	push	edx
	setle	bl
	push	edi
	mov	BYTE PTR _bWithinDistance$[esp+32], bl
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ecx, eax
	call	?IsCityConnectedToCity@CvGameTrade@@QAE_NPAVCvCity@@0@Z ; CvGameTrade::IsCityConnectedToCity
	test	al, al
	jne	SHORT $LN24@GetAdjacen
	cmp	BYTE PTR _bPretendTradeConnection$[esp+20], al
	mov	BYTE PTR _bConnectedWithTrade$[esp+20], al
	je	SHORT $LN25@GetAdjacen
$LN24@GetAdjacen:
	mov	BYTE PTR _bConnectedWithTrade$[esp+20], 1
$LN25@GetAdjacen:

; 2205 : 
; 2206 : 	if(bWithinDistance || bConnectedWithTrade)

	test	bl, bl
	jne	SHORT $LN17@GetAdjacen
	cmp	BYTE PTR _bConnectedWithTrade$[esp+20], bl
	je	$LN1@GetAdjacen
$LN17@GetAdjacen:

; 2207 : 	{
; 2208 : 		bool bIncrementTRInfluencing = false;
; 2209 : 		iPressure = GC.getGame().getGameSpeedInfo().getReligiousPressureAdjacentCity();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	xor	bl, bl
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getReligiousPressureAdjacentCity@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getReligiousPressureAdjacentCity
	mov	esi, eax

; 2210 : 		if (bConnectedWithTrade && !bWithinDistance)

	cmp	BYTE PTR _bConnectedWithTrade$[esp+20], bl
	je	SHORT $LN96@GetAdjacen
	cmp	BYTE PTR _bWithinDistance$[esp+24], bl
	jne	SHORT $LN95@GetAdjacen

; 2211 : 		{
; 2212 : 			if (!bIncrementTRInfluencing)
; 2213 : 			{
; 2214 : 				iNumTradeRoutesInfluencing++;

	mov	eax, DWORD PTR _iNumTradeRoutesInfluencing$[esp+20]
	inc	DWORD PTR [eax]

; 2215 : 				bIncrementTRInfluencing = true;

	mov	bl, 1
$LN95@GetAdjacen:

; 2216 : 			}
; 2217 : 		}
; 2218 : 
; 2219 : 		if (bConnectedWithTrade)
; 2220 : 		{
; 2221 : 			if (GC.getGame().GetGameTrade()->IsCityConnectedFromCityToCity(pFromCity, pToCity))

	mov	eax, DWORD PTR _pToCity$[esp+20]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	push	edi
	call	?GetGameTrade@CvGame@@QAEPAVCvGameTrade@@XZ ; CvGame::GetGameTrade
	mov	ecx, eax
	call	?IsCityConnectedFromCityToCity@CvGameTrade@@QAE_NPAVCvCity@@0@Z ; CvGameTrade::IsCityConnectedFromCityToCity
	test	al, al
	je	SHORT $LN96@GetAdjacen

; 2222 : 			{
; 2223 : 				int iTradeReligionModifer = GET_PLAYER(pFromCity->getOwner()).GetPlayerTraits()->GetTradeReligionModifier();

	mov	ecx, DWORD PTR [edi+84]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?GetPlayerTraits@CvPlayer@@QBEPAVCvPlayerTraits@@XZ ; CvPlayer::GetPlayerTraits
	mov	eax, DWORD PTR [eax+324]

; 2224 : 				if (iTradeReligionModifer != 0)

	test	eax, eax
	je	SHORT $LN96@GetAdjacen

; 2225 : 				{
; 2226 : 					iPressure *= 100 + iTradeReligionModifer;

	lea	ecx, DWORD PTR [eax+100]
	imul	ecx, esi

; 2227 : 					iPressure /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	mov	esi, ecx

; 2228 : 
; 2229 : 					if (!bIncrementTRInfluencing)

	test	bl, bl
	jne	SHORT $LN96@GetAdjacen

; 2230 : 					{
; 2231 : 						iNumTradeRoutesInfluencing++;

	mov	eax, DWORD PTR _iNumTradeRoutesInfluencing$[esp+20]
	inc	DWORD PTR [eax]
$LN96@GetAdjacen:

; 2232 : 						bIncrementTRInfluencing = true;
; 2233 : 					}
; 2234 : 				}
; 2235 : 			}
; 2236 : 		}
; 2237 : 
; 2238 : 		// If we are spreading to a friendly city state, increase the effectiveness if we have the right belief
; 2239 : 		if(IsCityStateFriendOfReligionFounder(eReligion, pToCity->getOwner()))

	mov	edx, DWORD PTR _pToCity$[esp+20]
	mov	eax, DWORD PTR [edx+84]
	mov	ecx, DWORD PTR _this$[esp+24]
	push	eax
	mov	eax, DWORD PTR _eReligion$[esp+24]
	push	eax
	call	?IsCityStateFriendOfReligionFounder@CvGameReligions@@QAE_NW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::IsCityStateFriendOfReligionFounder
	test	al, al
	je	SHORT $LN9@GetAdjacen

; 2240 : 		{
; 2241 : 			int iFriendshipMod = pReligion->m_Beliefs.GetFriendlyCityStateSpreadModifier();

	mov	eax, DWORD PTR [ebp+244]

; 2242 : 			if(iFriendshipMod > 0)

	test	eax, eax
	jle	SHORT $LN9@GetAdjacen

; 2243 : 			{
; 2244 : 				iPressure *= (100 + iFriendshipMod);

	lea	ecx, DWORD PTR [eax+100]
	imul	ecx, esi

; 2245 : 				iPressure /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	mov	esi, ecx
$LN9@GetAdjacen:

; 2246 : 			}
; 2247 : 		}
; 2248 : 
; 2249 : 		// Have a belief that always strengthens spread?
; 2250 : 		int iStrengthMod = pReligion->m_Beliefs.GetSpreadStrengthModifier();

	mov	edi, DWORD PTR [ebp+192]

; 2251 : 		if(iStrengthMod > 0)

	test	edi, edi
	jle	SHORT $LN98@GetAdjacen

; 2252 : 		{
; 2253 : 			TechTypes eDoublingTech = pReligion->m_Beliefs.GetSpreadModifierDoublingTech();

	mov	ebx, DWORD PTR [ebp+284]

; 2254 : 			if(eDoublingTech != NO_TECH)

	cmp	ebx, -1
	je	SHORT $LN6@GetAdjacen

; 2255 : 			{
; 2256 : 				CvPlayer& kPlayer = GET_PLAYER(pReligion->m_eFounder);

	mov	ecx, DWORD PTR [ebp+4]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 2257 : 				if(GET_TEAM(kPlayer.getTeam()).GetTeamTechs()->HasTech(eDoublingTech))

	call	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ	; CvPlayer::getTeam
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	push	ebx
	mov	ecx, eax
	call	?GetTeamTechs@CvTeam@@QBEPAVCvTeamTechs@@XZ ; CvTeam::GetTeamTechs
	mov	ecx, eax
	call	?HasTech@CvTeamTechs@@QBE_NW4TechTypes@@@Z ; CvTeamTechs::HasTech
	test	al, al
	je	SHORT $LN6@GetAdjacen

; 2258 : 				{
; 2259 : 					iStrengthMod *= 2;

	add	edi, edi
$LN6@GetAdjacen:

; 2260 : 				}
; 2261 : 			}
; 2262 : 			iPressure *= (100 + iStrengthMod);

	lea	ecx, DWORD PTR [edi+100]
	imul	ecx, esi

; 2263 : 			iPressure /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	esi, eax
$LN98@GetAdjacen:

; 2264 : 		}
; 2265 : 
; 2266 : #ifdef NQ_SPREAD_MODIFIER_OWNED_CITIES
; 2267 : 		// modifier if this religion spreads to cities owned by founder or not owned by founder
; 2268 : 		int iOwnedCityModifier = 0;
; 2269 : 		if (pToCity->getOwner() == pReligion->m_eFounder)

	mov	ecx, DWORD PTR _pToCity$[esp+20]
	mov	edx, DWORD PTR [ecx+84]
	cmp	edx, DWORD PTR [ebp+4]
	jne	SHORT $LN5@GetAdjacen

; 2270 : 		{
; 2271 : 			iOwnedCityModifier = pReligion->m_Beliefs.GetSpreadModifierOwnedCities();

	mov	eax, DWORD PTR [ebp+216]

; 2272 : 		}
; 2273 : 		else

	jmp	SHORT $LN84@GetAdjacen
$LN5@GetAdjacen:

; 2274 : 		{
; 2275 : 			iOwnedCityModifier = pReligion->m_Beliefs.GetSpreadModifierUnownedCities();

	mov	eax, DWORD PTR [ebp+220]
$LN84@GetAdjacen:

; 2276 : 		}
; 2277 : 		if (iOwnedCityModifier != 0)

	test	eax, eax
	je	SHORT $LN99@GetAdjacen

; 2278 : 		{
; 2279 : 			iPressure *= (100 + iOwnedCityModifier);

	lea	ecx, DWORD PTR [eax+100]
	imul	ecx, esi

; 2280 : 			iPressure /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	esi, eax
$LN99@GetAdjacen:

; 2281 : 		}
; 2282 : #endif
; 2283 : 
; 2284 : 		// Strengthened spread from World Congress? (World Religion)
; 2285 : 		int iLeaguesMod = GC.getGame().GetGameLeagues()->GetReligionSpreadStrengthModifier(pFromCity->getOwner(), eReligion);

	mov	ecx, DWORD PTR _eReligion$[esp+20]
	mov	edi, DWORD PTR _pFromCity$[esp+20]
	mov	eax, DWORD PTR [edi+84]
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	call	?GetGameLeagues@CvGame@@QAEPAVCvGameLeagues@@XZ ; CvGame::GetGameLeagues
	mov	ecx, eax
	call	?GetReligionSpreadStrengthModifier@CvGameLeagues@@QAEHW4PlayerTypes@@W4ReligionTypes@@@Z ; CvGameLeagues::GetReligionSpreadStrengthModifier

; 2286 : 		if (iLeaguesMod > 0)

	test	eax, eax
	jle	SHORT $LN100@GetAdjacen

; 2287 : 		{
; 2288 : 			iPressure *= (100 + iLeaguesMod);

	lea	ecx, DWORD PTR [eax+100]
	imul	ecx, esi

; 2289 : 			iPressure /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	esi, eax
$LN100@GetAdjacen:

; 2290 : 		}
; 2291 : 
; 2292 : 		// Building that boosts pressure from originating city?
; 2293 : 		int iModifier = pFromCity->GetCityReligions()->GetReligiousPressureModifier();

	mov	ecx, edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	eax, DWORD PTR [eax+424]

; 2294 : 		if (iModifier > 0)

	test	eax, eax
	jle	SHORT $LN1@GetAdjacen

; 2295 : 		{
; 2296 : 			iPressure *= (100 + iModifier);

	lea	ecx, DWORD PTR [eax+100]
	imul	ecx, esi

; 2297 : 			iPressure /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	mov	esi, ecx
$LN1@GetAdjacen:
	pop	edi
	pop	ebp
	pop	ebx

; 2298 : 		}
; 2299 : 	}
; 2300 : 
; 2301 : 	return iPressure;

	mov	eax, esi
	pop	esi

; 2302 : }

	add	esp, 8
	ret	20					; 00000014H
?GetAdjacentCityReligiousPressure@CvGameReligions@@QAEHW4ReligionTypes@@PAVCvCity@@1AAH_N@Z ENDP ; CvGameReligions::GetAdjacentCityReligiousPressure
_TEXT	ENDS
PUBLIC	?IsPreferredByCivInGame@CvGameReligions@@AAE_NW4ReligionTypes@@@Z ; CvGameReligions::IsPreferredByCivInGame
EXTRN	?GetReligion@CvCivilizationInfo@@QBE?AW4ReligionTypes@@XZ:PROC ; CvCivilizationInfo::GetReligion
; Function compile flags: /Ogtpy
;	COMDAT ?IsPreferredByCivInGame@CvGameReligions@@AAE_NW4ReligionTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
?IsPreferredByCivInGame@CvGameReligions@@AAE_NW4ReligionTypes@@@Z PROC ; CvGameReligions::IsPreferredByCivInGame, COMDAT
; _this$ = ecx

; 2439 : {

	push	esi
	push	edi

; 2440 : 	PlayerTypes eLoopPlayer;
; 2441 : 
; 2442 : 	for(int iI = 0; iI < MAX_MAJOR_CIVS; iI++)

	mov	edi, DWORD PTR _eReligion$[esp+4]
	xor	esi, esi
	npad	8
$LL5@IsPreferre:

; 2443 : 	{
; 2444 : 		eLoopPlayer = (PlayerTypes) iI;
; 2445 : 		CvPlayer& loopPlayer = GET_PLAYER(eLoopPlayer);

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 2446 : 
; 2447 : 		if(!loopPlayer.isAlive())

	cmp	BYTE PTR [esi+eax+2256], 0
	lea	ecx, DWORD PTR [esi+eax]
	je	SHORT $LN4@IsPreferre

; 2448 : 		{
; 2449 : 			continue;
; 2450 : 		}
; 2451 : 
; 2452 : 		ReligionTypes eCivReligion = loopPlayer.getCivilizationInfo().GetReligion();

	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?GetReligion@CvCivilizationInfo@@QBE?AW4ReligionTypes@@XZ ; CvCivilizationInfo::GetReligion

; 2453 : 		if(eCivReligion == eReligion)

	cmp	eax, edi
	je	SHORT $LN15@IsPreferre
$LN4@IsPreferre:

; 2440 : 	PlayerTypes eLoopPlayer;
; 2441 : 
; 2442 : 	for(int iI = 0; iI < MAX_MAJOR_CIVS; iI++)

	add	esi, 63236				; 0000f704H
	cmp	esi, 1391192				; 00153a58H
	jl	SHORT $LL5@IsPreferre
	pop	edi

; 2456 : 		}
; 2457 : 	}
; 2458 : 
; 2459 : 	return false;

	xor	al, al
	pop	esi

; 2460 : }

	ret	4
$LN15@IsPreferre:
	pop	edi

; 2454 : 		{
; 2455 : 			return true;

	mov	al, 1
	pop	esi

; 2460 : }

	ret	4
?IsPreferredByCivInGame@CvGameReligions@@AAE_NW4ReligionTypes@@@Z ENDP ; CvGameReligions::IsPreferredByCivInGame
_TEXT	ENDS
PUBLIC	??6@YAAAVFDataStream@@AAV0@ABVCvGameReligions@@@Z ; operator<<
; Function compile flags: /Ogtpy
;	COMDAT ??6@YAAAVFDataStream@@AAV0@ABVCvGameReligions@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
$T235996 = 8						; size = 4
$T235995 = 8						; size = 4
_saveTo$ = 8						; size = 4
_readFrom$ = 12						; size = 4
??6@YAAAVFDataStream@@AAV0@ABVCvGameReligions@@@Z PROC	; operator<<, COMDAT

; 2681 : {

	push	ecx
	push	ebx

; 2682 : 	uint uiVersion = 4;
; 2683 : 	saveTo << uiVersion;

	mov	ebx, DWORD PTR _saveTo$[esp+4]
	push	esi
	push	edi
	lea	eax, DWORD PTR _uiVersion$[esp+16]
	push	eax
	mov	ecx, ebx
	mov	DWORD PTR _uiVersion$[esp+20], 4
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 2684 : 
; 2685 : 	saveTo << readFrom.GetMinimumFaithNextPantheon();

	mov	edi, DWORD PTR _readFrom$[esp+12]
	mov	ecx, DWORD PTR [edi+5264]
	lea	edx, DWORD PTR $T235995[esp+12]
	mov	DWORD PTR $T235995[esp+12], ecx
	push	edx
	mov	ecx, ebx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 2686 : 
; 2687 : 	ReligionList::const_iterator it;
; 2688 : 	saveTo << readFrom.m_CurrentReligions.size();

	mov	eax, DWORD PTR [edi+4]
	lea	ecx, DWORD PTR $T235996[esp+12]
	push	ecx
	mov	ecx, ebx
	mov	DWORD PTR $T235996[esp+16], eax
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 2689 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 2690 : 	for (it = readFrom.m_CurrentReligions.begin(); it != readFrom.m_CurrentReligions.end(); ++it)
; 2691 : #else
; 2692 : 	for(it = readFrom.m_CurrentReligions.begin(); it != readFrom.m_CurrentReligions.end(); it++)

	mov	edx, DWORD PTR [edi+4]
	mov	esi, DWORD PTR [edi]
	imul	edx, 328				; 00000148H
	add	edx, esi
	cmp	esi, edx
	je	SHORT $LN22@operator@9
	npad	6
$LL3@operator@9:

; 2693 : #endif
; 2694 : 	{
; 2695 : 		saveTo << *it;

	push	esi
	push	ebx
	call	??6@YAAAVFDataStream@@AAV0@ABVCvReligion@@@Z ; operator<<
	mov	eax, DWORD PTR [edi+4]
	imul	eax, 328				; 00000148H
	add	eax, DWORD PTR [edi]
	add	esi, 328				; 00000148H
	add	esp, 8
	cmp	esi, eax
	jne	SHORT $LL3@operator@9
$LN22@operator@9:
	pop	edi
	pop	esi

; 2696 : 	}
; 2697 : 
; 2698 : 	return saveTo;

	mov	eax, ebx
	pop	ebx

; 2699 : }

	pop	ecx
	ret	0
??6@YAAAVFDataStream@@AAV0@ABVCvGameReligions@@@Z ENDP	; operator<<
_TEXT	ENDS
PUBLIC	?HasCreatedPantheon@CvPlayerReligions@@QBE_NXZ	; CvPlayerReligions::HasCreatedPantheon
; Function compile flags: /Ogtpy
;	COMDAT ?HasCreatedPantheon@CvPlayerReligions@@QBE_NXZ
_TEXT	SEGMENT
?HasCreatedPantheon@CvPlayerReligions@@QBE_NXZ PROC	; CvPlayerReligions::HasCreatedPantheon, COMDAT
; _this$ = ecx

; 2821 : 	return GC.getGame().GetGameReligions()->HasCreatedPantheon(m_pPlayer->GetID());

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	mov	esi, DWORD PTR [eax+44]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	imul	eax, 328				; 00000148H
	add	eax, ecx
	cmp	ecx, eax
	je	SHORT $LN10@HasCreated@2
$LL12@HasCreated@2:
	cmp	DWORD PTR [ecx+4], esi
	jne	SHORT $LN11@HasCreated@2
	cmp	BYTE PTR [ecx+20], 0
	jne	SHORT $LN20@HasCreated@2
$LN11@HasCreated@2:
	add	ecx, 328				; 00000148H
	cmp	ecx, eax
	jne	SHORT $LL12@HasCreated@2
$LN10@HasCreated@2:
	xor	al, al
	pop	esi

; 2822 : }

	ret	0
$LN20@HasCreated@2:

; 2821 : 	return GC.getGame().GetGameReligions()->HasCreatedPantheon(m_pPlayer->GetID());

	mov	al, 1
	pop	esi

; 2822 : }

	ret	0
?HasCreatedPantheon@CvPlayerReligions@@QBE_NXZ ENDP	; CvPlayerReligions::HasCreatedPantheon
_TEXT	ENDS
PUBLIC	?HasCreatedReligion@CvPlayerReligions@@QBE_NXZ	; CvPlayerReligions::HasCreatedReligion
; Function compile flags: /Ogtpy
;	COMDAT ?HasCreatedReligion@CvPlayerReligions@@QBE_NXZ
_TEXT	SEGMENT
?HasCreatedReligion@CvPlayerReligions@@QBE_NXZ PROC	; CvPlayerReligions::HasCreatedReligion, COMDAT
; _this$ = ecx

; 2827 : 	return GC.getGame().GetGameReligions()->HasCreatedReligion(m_pPlayer->GetID());

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	mov	esi, DWORD PTR [eax+44]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	push	esi
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	test	eax, eax
	setg	al
	pop	esi

; 2828 : }

	ret	0
?HasCreatedReligion@CvPlayerReligions@@QBE_NXZ ENDP	; CvPlayerReligions::HasCreatedReligion
_TEXT	ENDS
PUBLIC	?HasAddedReformationBelief@CvPlayerReligions@@QBE_NXZ ; CvPlayerReligions::HasAddedReformationBelief
; Function compile flags: /Ogtpy
;	COMDAT ?HasAddedReformationBelief@CvPlayerReligions@@QBE_NXZ
_TEXT	SEGMENT
?HasAddedReformationBelief@CvPlayerReligions@@QBE_NXZ PROC ; CvPlayerReligions::HasAddedReformationBelief, COMDAT
; _this$ = ecx

; 2833 : 	return GC.getGame().GetGameReligions()->HasAddedReformationBelief(m_pPlayer->GetID());

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?HasAddedReformationBelief@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasAddedReformationBelief

; 2834 : }

	ret	0
?HasAddedReformationBelief@CvPlayerReligions@@QBE_NXZ ENDP ; CvPlayerReligions::HasAddedReformationBelief
_TEXT	ENDS
PUBLIC	?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionCreatedByPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ
_TEXT	SEGMENT
?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ PROC ; CvPlayerReligions::GetReligionCreatedByPlayer, COMDAT
; _this$ = ecx

; 2839 : 	return GC.getGame().GetGameReligions()->GetReligionCreatedByPlayer(m_pPlayer->GetID());

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer

; 2840 : }

	ret	0
?GetReligionCreatedByPlayer@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ENDP ; CvPlayerReligions::GetReligionCreatedByPlayer
_TEXT	ENDS
PUBLIC	?HasReligiousCity@CvPlayerReligions@@QBE_NXZ	; CvPlayerReligions::HasReligiousCity
; Function compile flags: /Ogtpy
;	COMDAT ?HasReligiousCity@CvPlayerReligions@@QBE_NXZ
_TEXT	SEGMENT
_iLoop$ = -4						; size = 4
?HasReligiousCity@CvPlayerReligions@@QBE_NXZ PROC	; CvPlayerReligions::HasReligiousCity, COMDAT
; _this$ = ecx

; 2896 : {

	push	ecx
	push	esi
	mov	esi, ecx

; 2897 : 	int iLoop = 0;
; 2898 : 	CvCity* pCity = NULL;
; 2899 : 
; 2900 : 	for(pCity = m_pPlayer->firstCity(&iLoop); pCity != NULL; pCity = m_pPlayer->nextCity(&iLoop))

	mov	ecx, DWORD PTR [esi]
	push	0
	lea	eax, DWORD PTR _iLoop$[esp+12]
	push	eax
	mov	DWORD PTR _iLoop$[esp+16], 0
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	test	eax, eax
	je	SHORT $LN3@HasReligio
$LN12@HasReligio:

; 2901 : 	{
; 2902 : 		if(pCity)
; 2903 : 		{
; 2904 : 			if(pCity->GetCityReligions()->GetReligiousMajority() > RELIGION_PANTHEON)

	mov	ecx, eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	test	eax, eax
	jg	SHORT $LN9@HasReligio
	push	0
	lea	ecx, DWORD PTR _iLoop$[esp+12]
	push	ecx
	mov	ecx, DWORD PTR [esi]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	test	eax, eax
	jne	SHORT $LN12@HasReligio
$LN3@HasReligio:

; 2907 : 			}
; 2908 : 		}
; 2909 : 	}
; 2910 : 
; 2911 : 	return false;

	xor	al, al
	pop	esi

; 2912 : }

	pop	ecx
	ret	0
$LN9@HasReligio:

; 2905 : 			{
; 2906 : 				return true;

	mov	al, 1
	pop	esi

; 2912 : }

	pop	ecx
	ret	0
?HasReligiousCity@CvPlayerReligions@@QBE_NXZ ENDP	; CvPlayerReligions::HasReligiousCity
_TEXT	ENDS
PUBLIC	?HasOthersReligionInMostCities@CvPlayerReligions@@QBE_NW4PlayerTypes@@@Z ; CvPlayerReligions::HasOthersReligionInMostCities
EXTRN	?getNumCities@CvPlayer@@QBEHXZ:PROC		; CvPlayer::getNumCities
; Function compile flags: /Ogtpy
;	COMDAT ?HasOthersReligionInMostCities@CvPlayerReligions@@QBE_NW4PlayerTypes@@@Z
_TEXT	SEGMENT
_iLoop$ = -4						; size = 4
_eOtherPlayer$ = 8					; size = 4
?HasOthersReligionInMostCities@CvPlayerReligions@@QBE_NW4PlayerTypes@@@Z PROC ; CvPlayerReligions::HasOthersReligionInMostCities, COMDAT
; _this$ = ecx

; 2916 : {

	push	ecx
	push	esi
	mov	esi, ecx

; 2917 : 	// Not happy about it if have their own religion
; 2918 : 	if(HasCreatedReligion())

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR [eax+44]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	push	edi
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	test	eax, eax
	jle	SHORT $LN7@HasOthersR
	pop	edi

; 2919 : 	{
; 2920 : 		return false;

	xor	al, al
	pop	esi

; 2946 : }

	pop	ecx
	ret	4
$LN7@HasOthersR:

; 2921 : 	}
; 2922 : 
; 2923 : 	ReligionTypes eOtherReligion = GC.getGame().GetGameReligions()->GetReligionCreatedByPlayer(eOtherPlayer);

	mov	ecx, DWORD PTR _eOtherPlayer$[esp+8]
	push	ebx
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	mov	ebx, eax

; 2924 : 
; 2925 : 	if(eOtherReligion <= RELIGION_PANTHEON)

	test	ebx, ebx
	jg	SHORT $LN6@HasOthersR
	pop	ebx
	pop	edi

; 2926 : 	{
; 2927 : 		return false;

	xor	al, al
	pop	esi

; 2946 : }

	pop	ecx
	ret	4
$LN6@HasOthersR:

; 2928 : 	}
; 2929 : 
; 2930 : 	int iNumFollowingCities = 0;
; 2931 : 	int iLoop = 0;
; 2932 : 	CvCity* pCity = NULL;
; 2933 : 	for(pCity = m_pPlayer->firstCity(&iLoop); pCity != NULL; pCity = m_pPlayer->nextCity(&iLoop))

	mov	ecx, DWORD PTR [esi]
	xor	edi, edi
	push	edi
	lea	edx, DWORD PTR _iLoop$[esp+20]
	push	edx
	mov	DWORD PTR _iLoop$[esp+24], edi
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	test	eax, eax
	je	SHORT $LN3@HasOthersR
$LN28@HasOthersR:

; 2934 : 	{
; 2935 : 		if(pCity)
; 2936 : 		{
; 2937 : 			if(pCity->GetCityReligions()->GetReligiousMajority() == eOtherReligion)

	mov	ecx, eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, ebx
	jne	SHORT $LN4@HasOthersR

; 2938 : 			{
; 2939 : 				iNumFollowingCities++;

	inc	edi
$LN4@HasOthersR:

; 2928 : 	}
; 2929 : 
; 2930 : 	int iNumFollowingCities = 0;
; 2931 : 	int iLoop = 0;
; 2932 : 	CvCity* pCity = NULL;
; 2933 : 	for(pCity = m_pPlayer->firstCity(&iLoop); pCity != NULL; pCity = m_pPlayer->nextCity(&iLoop))

	mov	ecx, DWORD PTR [esi]
	push	0
	lea	eax, DWORD PTR _iLoop$[esp+20]
	push	eax
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	test	eax, eax
	jne	SHORT $LN28@HasOthersR
$LN3@HasOthersR:

; 2940 : 			}
; 2941 : 		}
; 2942 : 	}
; 2943 : 
; 2944 : 	// Over half?
; 2945 : 	return (iNumFollowingCities * 2 > m_pPlayer->getNumCities());

	mov	ecx, DWORD PTR [esi]
	call	?getNumCities@CvPlayer@@QBEHXZ		; CvPlayer::getNumCities
	lea	ecx, DWORD PTR [edi+edi]
	xor	edx, edx
	cmp	ecx, eax
	pop	ebx
	setg	dl
	pop	edi
	mov	al, dl
	pop	esi

; 2946 : }

	pop	ecx
	ret	4
?HasOthersReligionInMostCities@CvPlayerReligions@@QBE_NW4PlayerTypes@@@Z ENDP ; CvPlayerReligions::HasOthersReligionInMostCities
_TEXT	ENDS
PUBLIC	?HasReligionInMostCities@CvPlayerReligions@@QBE_NW4ReligionTypes@@@Z ; CvPlayerReligions::HasReligionInMostCities
; Function compile flags: /Ogtpy
;	COMDAT ?HasReligionInMostCities@CvPlayerReligions@@QBE_NW4ReligionTypes@@@Z
_TEXT	SEGMENT
_iLoop$ = 8						; size = 4
_eReligion$ = 8						; size = 4
?HasReligionInMostCities@CvPlayerReligions@@QBE_NW4ReligionTypes@@@Z PROC ; CvPlayerReligions::HasReligionInMostCities, COMDAT
; _this$ = ecx

; 2950 : {

	push	ebx

; 2951 : 	if (eReligion <= RELIGION_PANTHEON)

	mov	ebx, DWORD PTR _eReligion$[esp]
	push	esi
	mov	esi, ecx
	test	ebx, ebx
	jg	SHORT $LN6@HasReligio@2
	pop	esi

; 2952 : 	{
; 2953 : 		return false;

	xor	al, al
	pop	ebx

; 2972 : }

	ret	4
$LN6@HasReligio@2:

; 2954 : 	}
; 2955 : 
; 2956 : 	int iNumFollowingCities = 0;
; 2957 : 	int iLoop = 0;
; 2958 : 	CvCity* pCity = NULL;
; 2959 : 	for(pCity = m_pPlayer->firstCity(&iLoop); pCity != NULL; pCity = m_pPlayer->nextCity(&iLoop))

	mov	ecx, DWORD PTR [esi]
	push	edi
	xor	edi, edi
	push	edi
	lea	eax, DWORD PTR _iLoop$[esp+12]
	push	eax
	mov	DWORD PTR _iLoop$[esp+16], edi
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	test	eax, eax
	je	SHORT $LN3@HasReligio@2
$LN12@HasReligio@2:

; 2960 : 	{
; 2961 : 		if(pCity)
; 2962 : 		{
; 2963 : 			if(pCity->GetCityReligions()->GetReligiousMajority() == eReligion)

	mov	ecx, eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, ebx
	jne	SHORT $LN4@HasReligio@2

; 2964 : 			{
; 2965 : 				iNumFollowingCities++;

	inc	edi
$LN4@HasReligio@2:

; 2954 : 	}
; 2955 : 
; 2956 : 	int iNumFollowingCities = 0;
; 2957 : 	int iLoop = 0;
; 2958 : 	CvCity* pCity = NULL;
; 2959 : 	for(pCity = m_pPlayer->firstCity(&iLoop); pCity != NULL; pCity = m_pPlayer->nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$[esp+12]
	push	ecx
	mov	ecx, DWORD PTR [esi]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	test	eax, eax
	jne	SHORT $LN12@HasReligio@2
$LN3@HasReligio@2:

; 2966 : 			}
; 2967 : 		}
; 2968 : 	}
; 2969 : 
; 2970 : 	// Over half?
; 2971 : 	return (iNumFollowingCities * 2 > m_pPlayer->getNumCities());

	mov	ecx, DWORD PTR [esi]
	call	?getNumCities@CvPlayer@@QBEHXZ		; CvPlayer::getNumCities
	lea	edx, DWORD PTR [edi+edi]
	xor	ecx, ecx
	cmp	edx, eax
	pop	edi
	setg	cl
	pop	esi
	mov	al, cl
	pop	ebx

; 2972 : }

	ret	4
?HasReligionInMostCities@CvPlayerReligions@@QBE_NW4ReligionTypes@@@Z ENDP ; CvPlayerReligions::HasReligionInMostCities
_TEXT	ENDS
PUBLIC	?GetReligionInMostCities@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ; CvPlayerReligions::GetReligionInMostCities
EXTRN	?GetGameReligions@CvGlobals@@QBEPAVCvReligionXMLEntries@@XZ:PROC ; CvGlobals::GetGameReligions
; Function compile flags: /Ogtpy
;	COMDAT ?GetReligionInMostCities@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ
_TEXT	SEGMENT
?GetReligionInMostCities@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ PROC ; CvPlayerReligions::GetReligionInMostCities, COMDAT
; _this$ = ecx

; 2976 : {

	push	esi
	push	edi
	mov	edi, ecx

; 2977 : 	for (int iI = RELIGION_PANTHEON + 1; iI < GC.GetGameReligions()->GetNumReligions(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	esi, 1
	call	?GetGameReligions@CvGlobals@@QBEPAVCvReligionXMLEntries@@XZ ; CvGlobals::GetGameReligions
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR [eax+4]
	and	ecx, -4					; fffffffcH
	cmp	ecx, 4
	jle	SHORT $LN2@GetReligio@4
$LL4@GetReligio@4:

; 2978 : 	{
; 2979 : 		ReligionTypes eReligion = (ReligionTypes)iI;
; 2980 : 		if (HasReligionInMostCities(eReligion))

	push	esi
	mov	ecx, edi
	call	?HasReligionInMostCities@CvPlayerReligions@@QBE_NW4ReligionTypes@@@Z ; CvPlayerReligions::HasReligionInMostCities
	test	al, al
	jne	SHORT $LN12@GetReligio@4
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	esi
	call	?GetGameReligions@CvGlobals@@QBEPAVCvReligionXMLEntries@@XZ ; CvGlobals::GetGameReligions
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [eax+4]
	sar	edx, 2
	cmp	esi, edx
	jl	SHORT $LL4@GetReligio@4
$LN2@GetReligio@4:
	pop	edi

; 2983 : 		}
; 2984 : 	}
; 2985 : 	return NO_RELIGION;

	or	eax, -1
	pop	esi

; 2986 : }

	ret	0
$LN12@GetReligio@4:
	pop	edi

; 2981 : 		{
; 2982 : 			return eReligion;

	mov	eax, esi
	pop	esi

; 2986 : }

	ret	0
?GetReligionInMostCities@CvPlayerReligions@@QBE?AW4ReligionTypes@@XZ ENDP ; CvPlayerReligions::GetReligionInMostCities
_TEXT	ENDS
PUBLIC	?GetCityStateMinimumInfluence@CvPlayerReligions@@QBEHW4ReligionTypes@@@Z ; CvPlayerReligions::GetCityStateMinimumInfluence
; Function compile flags: /Ogtpy
;	COMDAT ?GetCityStateMinimumInfluence@CvPlayerReligions@@QBEHW4ReligionTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
?GetCityStateMinimumInfluence@CvPlayerReligions@@QBEHW4ReligionTypes@@@Z PROC ; CvPlayerReligions::GetCityStateMinimumInfluence, COMDAT
; _this$ = ecx

; 2991 : 	int iMinInfluence = 0;
; 2992 : 
; 2993 : 	ReligionTypes eFounderBenefitReligion = GC.getGame().GetGameReligions()->GetFounderBenefitsReligion(m_pPlayer->GetID());

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	push	edi
	push	eax
	xor	edi, edi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetFounderBenefitsReligion
	mov	esi, eax

; 2994 : 	if (eReligion == eFounderBenefitReligion)

	cmp	DWORD PTR _eReligion$[esp+4], esi
	jne	SHORT $LN18@GetCitySta

; 2995 : 	{
; 2996 : 		CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 2997 : 		if(eFounderBenefitReligion != NO_RELIGION)

	cmp	esi, -1
	je	SHORT $LN18@GetCitySta

; 2998 : 		{
; 2999 : 			const CvReligion* pReligion = pReligions->GetReligion(eFounderBenefitReligion, NO_PLAYER);

	push	-1
	push	esi
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 3000 : 			if(pReligion)

	test	eax, eax
	je	SHORT $LN18@GetCitySta

; 3001 : 			{
; 3002 : 				iMinInfluence += pReligion->m_Beliefs.GetCityStateMinimumInfluence();
; 3003 : 			}
; 3004 : 		}
; 3005 : 	}
; 3006 : 
; 3007 : 	return iMinInfluence;

	mov	eax, DWORD PTR [eax+252]
	pop	edi
	pop	esi

; 3008 : }

	ret	4
$LN18@GetCitySta:

; 3001 : 			{
; 3002 : 				iMinInfluence += pReligion->m_Beliefs.GetCityStateMinimumInfluence();
; 3003 : 			}
; 3004 : 		}
; 3005 : 	}
; 3006 : 
; 3007 : 	return iMinInfluence;

	mov	eax, edi
	pop	edi
	pop	esi

; 3008 : }

	ret	4
?GetCityStateMinimumInfluence@CvPlayerReligions@@QBEHW4ReligionTypes@@@Z ENDP ; CvPlayerReligions::GetCityStateMinimumInfluence
_TEXT	ENDS
PUBLIC	?GetCityStateInfluenceModifier@CvPlayerReligions@@QBEHXZ ; CvPlayerReligions::GetCityStateInfluenceModifier
; Function compile flags: /Ogtpy
;	COMDAT ?GetCityStateInfluenceModifier@CvPlayerReligions@@QBEHXZ
_TEXT	SEGMENT
?GetCityStateInfluenceModifier@CvPlayerReligions@@QBEHXZ PROC ; CvPlayerReligions::GetCityStateInfluenceModifier, COMDAT
; _this$ = ecx

; 3013 : 	int iRtnValue = 0;
; 3014 : 	ReligionTypes eReligion = GetReligionCreatedByPlayer();

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	push	eax
	xor	esi, esi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer

; 3015 : 	if (eReligion != NO_RELIGION)

	cmp	eax, -1
	je	SHORT $LN18@GetCitySta@2

; 3016 : 	{
; 3017 : 		const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, NO_PLAYER);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	-1
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 3018 : 		if(pReligion)

	test	eax, eax
	je	SHORT $LN18@GetCitySta@2

; 3019 : 		{
; 3020 : 			iRtnValue += pReligion->m_Beliefs.GetCityStateInfluenceModifier();
; 3021 : 		}
; 3022 : 	}
; 3023 : 	return iRtnValue;

	mov	eax, DWORD PTR [eax+256]
	pop	esi

; 3024 : }

	ret	0
$LN18@GetCitySta@2:

; 3019 : 		{
; 3020 : 			iRtnValue += pReligion->m_Beliefs.GetCityStateInfluenceModifier();
; 3021 : 		}
; 3022 : 	}
; 3023 : 	return iRtnValue;

	mov	eax, esi
	pop	esi

; 3024 : }

	ret	0
?GetCityStateInfluenceModifier@CvPlayerReligions@@QBEHXZ ENDP ; CvPlayerReligions::GetCityStateInfluenceModifier
_TEXT	ENDS
PUBLIC	?GetSpyPressure@CvPlayerReligions@@QBEHXZ	; CvPlayerReligions::GetSpyPressure
; Function compile flags: /Ogtpy
;	COMDAT ?GetSpyPressure@CvPlayerReligions@@QBEHXZ
_TEXT	SEGMENT
?GetSpyPressure@CvPlayerReligions@@QBEHXZ PROC		; CvPlayerReligions::GetSpyPressure, COMDAT
; _this$ = ecx

; 3029 : 	int iRtnValue = 0;
; 3030 : 	ReligionTypes eReligion = GetReligionCreatedByPlayer();

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	push	eax
	xor	esi, esi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer

; 3031 : 	if (eReligion != NO_RELIGION)

	cmp	eax, -1
	je	SHORT $LN18@GetSpyPres

; 3032 : 	{
; 3033 : 		const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, NO_PLAYER);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	-1
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 3034 : 		if(pReligion)

	test	eax, eax
	je	SHORT $LN18@GetSpyPres

; 3035 : 		{
; 3036 : 			iRtnValue += pReligion->m_Beliefs.GetSpyPressure();
; 3037 : 		}
; 3038 : 	}
; 3039 : 	return iRtnValue;

	mov	eax, DWORD PTR [eax+264]
	pop	esi

; 3040 : }

	ret	0
$LN18@GetSpyPres:

; 3035 : 		{
; 3036 : 			iRtnValue += pReligion->m_Beliefs.GetSpyPressure();
; 3037 : 		}
; 3038 : 	}
; 3039 : 	return iRtnValue;

	mov	eax, esi
	pop	esi

; 3040 : }

	ret	0
?GetSpyPressure@CvPlayerReligions@@QBEHXZ ENDP		; CvPlayerReligions::GetSpyPressure
_TEXT	ENDS
PUBLIC	?GetNumForeignCitiesFollowing@CvPlayerReligions@@QBEHXZ ; CvPlayerReligions::GetNumForeignCitiesFollowing
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumForeignCitiesFollowing@CvPlayerReligions@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iCityLoop$ = -4					; size = 4
?GetNumForeignCitiesFollowing@CvPlayerReligions@@QBEHXZ PROC ; CvPlayerReligions::GetNumForeignCitiesFollowing, COMDAT
; _this$ = ecx

; 3044 : {

	sub	esp, 8

; 3045 : 	CvCity *pLoopCity;
; 3046 : 	int iCityLoop;
; 3047 : 	int iRtnValue = 0;
; 3048 : 
; 3049 : 	ReligionTypes eFounderBenefitReligion = GC.getGame().GetGameReligions()->GetFounderBenefitsReligion(m_pPlayer->GetID());

	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+44]
	push	ebx
	push	ebp
	mov	DWORD PTR _this$[esp+16], ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	xor	ebp, ebp
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetFounderBenefitsReligion
	mov	ebx, eax

; 3050 : 	if (eFounderBenefitReligion > RELIGION_PANTHEON)

	test	ebx, ebx
	jle	SHORT $LN36@GetNumFore
	push	esi
	push	edi

; 3051 : 	{
; 3052 : 		for(int iPlayerLoop = 0; iPlayerLoop < MAX_CIV_PLAYERS; iPlayerLoop++)

	xor	edi, edi
	xor	esi, esi
	npad	1
$LL8@GetNumFore:

; 3053 : 		{
; 3054 : 			CvPlayer &kLoopPlayer = GET_PLAYER((PlayerTypes)iPlayerLoop);
; 3055 : 			if(kLoopPlayer.isAlive() && iPlayerLoop != m_pPlayer->GetID())

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ecx, esi
	cmp	BYTE PTR [ecx+2256], 0
	je	SHORT $LN7@GetNumFore
	mov	edx, DWORD PTR _this$[esp+24]
	mov	eax, DWORD PTR [edx]
	cmp	edi, DWORD PTR [eax+44]
	je	SHORT $LN7@GetNumFore

; 3056 : 			{
; 3057 : 				for(pLoopCity = GET_PLAYER((PlayerTypes)iPlayerLoop).firstCity(&iCityLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER((PlayerTypes)iPlayerLoop).nextCity(&iCityLoop))

	push	0
	lea	edx, DWORD PTR _iCityLoop$[esp+28]
	push	edx
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	test	eax, eax
	je	SHORT $LN7@GetNumFore
	npad	4
$LL4@GetNumFore:

; 3058 : 				{
; 3059 : 					if (pLoopCity->GetCityReligions()->GetReligiousMajority() == eFounderBenefitReligion)

	mov	ecx, eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, ebx
	jne	SHORT $LN3@GetNumFore

; 3060 : 					{
; 3061 : 						iRtnValue++;

	inc	ebp
$LN3@GetNumFore:

; 3056 : 			{
; 3057 : 				for(pLoopCity = GET_PLAYER((PlayerTypes)iPlayerLoop).firstCity(&iCityLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER((PlayerTypes)iPlayerLoop).nextCity(&iCityLoop))

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	edx, DWORD PTR _iCityLoop$[esp+28]
	lea	ecx, DWORD PTR [esi+eax]
	push	edx
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	test	eax, eax
	jne	SHORT $LL4@GetNumFore
$LN7@GetNumFore:

; 3051 : 	{
; 3052 : 		for(int iPlayerLoop = 0; iPlayerLoop < MAX_CIV_PLAYERS; iPlayerLoop++)

	add	esi, 63236				; 0000f704H
	inc	edi
	cmp	esi, 3983868				; 003cc9fcH
	jl	SHORT $LL8@GetNumFore
	pop	edi
	pop	esi
$LN36@GetNumFore:

; 3062 : 					}
; 3063 : 				}
; 3064 : 			}
; 3065 : 		}
; 3066 : 	}
; 3067 : 
; 3068 : 	return iRtnValue;

	mov	eax, ebp
	pop	ebp
	pop	ebx

; 3069 : }

	add	esp, 8
	ret	0
?GetNumForeignCitiesFollowing@CvPlayerReligions@@QBEHXZ ENDP ; CvPlayerReligions::GetNumForeignCitiesFollowing
_TEXT	ENDS
PUBLIC	?GetNumForeignFollowers@CvPlayerReligions@@QBEH_N@Z ; CvPlayerReligions::GetNumForeignFollowers
EXTRN	?atWar@@YA_NW4TeamTypes@@0@Z:PROC		; atWar
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumForeignFollowers@CvPlayerReligions@@QBEH_N@Z
_TEXT	SEGMENT
_iPlayerLoop$226573 = -12				; size = 4
_this$ = -8						; size = 4
_iCityLoop$ = -4					; size = 4
_bAtPeace$ = 8						; size = 1
?GetNumForeignFollowers@CvPlayerReligions@@QBEH_N@Z PROC ; CvPlayerReligions::GetNumForeignFollowers, COMDAT
; _this$ = ecx

; 3073 : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	mov	ebx, ecx

; 3074 : 	CvCity *pLoopCity;
; 3075 : 	int iCityLoop;
; 3076 : 	int iRtnValue = 0;
; 3077 : 
; 3078 : 	ReligionTypes eFounderBenefitReligion = GC.getGame().GetGameReligions()->GetFounderBenefitsReligion(m_pPlayer->GetID());

	mov	eax, DWORD PTR [ebx]
	mov	eax, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	push	edi
	push	eax
	mov	DWORD PTR _this$[esp+32], ebx
	xor	esi, esi
	xor	edi, edi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetFounderBenefitsReligion@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetFounderBenefitsReligion
	mov	ebp, eax

; 3079 : 	if (eFounderBenefitReligion > RELIGION_PANTHEON)

	cmp	ebp, esi
	jle	$LN68@GetNumFore@2

; 3080 : 	{
; 3081 : 		for(int iPlayerLoop = 0; iPlayerLoop < MAX_CIV_PLAYERS; iPlayerLoop++)

	mov	DWORD PTR _iPlayerLoop$226573[esp+28], esi
	npad	9
$LL9@GetNumFore@2:

; 3082 : 		{
; 3083 : 			CvPlayer &kLoopPlayer = GET_PLAYER((PlayerTypes)iPlayerLoop);
; 3084 : 			if(kLoopPlayer.isAlive() && iPlayerLoop != m_pPlayer->GetID())

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	cmp	BYTE PTR [esi+eax+2256], 0
	je	$LN8@GetNumFore@2
	mov	ecx, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [ecx+44]
	cmp	DWORD PTR _iPlayerLoop$226573[esp+28], ecx
	je	$LN8@GetNumFore@2

; 3085 : 			{
; 3086 : 				if (!bAtPeace || !atWar(m_pPlayer->getTeam(), kLoopPlayer.getTeam()))

	cmp	BYTE PTR _bAtPeace$[esp+24], 0
	je	SHORT $LN4@GetNumFore@2
	mov	eax, DWORD PTR [esi+eax+44]
	mov	edx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN33@GetNumFore@2
	mov	ebx, DWORD PTR [edx+4]
	mov	eax, DWORD PTR [ebx+eax*4]
	mov	ebx, DWORD PTR _this$[esp+28]
	jmp	SHORT $LN34@GetNumFore@2
$LN33@GetNumFore@2:
	or	eax, -1
$LN34@GetNumFore@2:
	cmp	ecx, 63					; 0000003fH
	ja	SHORT $LN42@GetNumFore@2
	mov	edx, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	jmp	SHORT $LN43@GetNumFore@2
$LN42@GetNumFore@2:
	or	ecx, -1
$LN43@GetNumFore@2:
	push	eax
	push	ecx
	call	?atWar@@YA_NW4TeamTypes@@0@Z		; atWar
	add	esp, 8
	test	al, al
	jne	SHORT $LN8@GetNumFore@2
$LN4@GetNumFore@2:

; 3087 : 				{
; 3088 : 					for(pLoopCity = GET_PLAYER((PlayerTypes)iPlayerLoop).firstCity(&iCityLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER((PlayerTypes)iPlayerLoop).nextCity(&iCityLoop))

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	edx, DWORD PTR _iCityLoop$[esp+32]
	lea	ecx, DWORD PTR [esi+eax]
	push	edx
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	test	eax, eax
	je	SHORT $LN8@GetNumFore@2
	npad	3
$LL3@GetNumFore@2:

; 3089 : 					{
; 3090 : 						iRtnValue += pLoopCity->GetCityReligions()->GetNumFollowers(eFounderBenefitReligion);

	mov	ecx, eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]
	cmp	ecx, eax
	je	SHORT $LN52@GetNumFore@2
$LL54@GetNumFore@2:
	cmp	DWORD PTR [ecx], ebp
	je	SHORT $LN64@GetNumFore@2
	add	ecx, 24					; 00000018H
	cmp	ecx, eax
	jne	SHORT $LL54@GetNumFore@2
$LN52@GetNumFore@2:
	xor	ecx, ecx
$LN55@GetNumFore@2:
	add	edi, ecx
	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	edx, DWORD PTR _iCityLoop$[esp+32]
	add	ecx, esi
	push	edx
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	test	eax, eax
	jne	SHORT $LL3@GetNumFore@2
$LN8@GetNumFore@2:

; 3080 : 	{
; 3081 : 		for(int iPlayerLoop = 0; iPlayerLoop < MAX_CIV_PLAYERS; iPlayerLoop++)

	inc	DWORD PTR _iPlayerLoop$226573[esp+28]
	add	esi, 63236				; 0000f704H
	cmp	esi, 3983868				; 003cc9fcH
	jl	$LL9@GetNumFore@2
$LN68@GetNumFore@2:

; 3091 : 					}
; 3092 : 				}
; 3093 : 			}
; 3094 : 		}
; 3095 : 	}
; 3096 : 
; 3097 : 	return iRtnValue;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3098 : }

	add	esp, 12					; 0000000cH
	ret	4
$LN64@GetNumFore@2:

; 3089 : 					{
; 3090 : 						iRtnValue += pLoopCity->GetCityReligions()->GetNumFollowers(eFounderBenefitReligion);

	mov	ecx, DWORD PTR [ecx+8]
	jmp	SHORT $LN55@GetNumFore@2
?GetNumForeignFollowers@CvPlayerReligions@@QBEH_N@Z ENDP ; CvPlayerReligions::GetNumForeignFollowers
_TEXT	ENDS
PUBLIC	?Init@CvCityReligions@@QAEXPAVCvCity@@@Z	; CvCityReligions::Init
; Function compile flags: /Ogtpy
;	COMDAT ?Init@CvCityReligions@@QAEXPAVCvCity@@@Z
_TEXT	SEGMENT
_pCity$ = 8						; size = 4
?Init@CvCityReligions@@QAEXPAVCvCity@@@Z PROC		; CvCityReligions::Init, COMDAT
; _this$ = ecx

; 3125 : 	m_pCity = pCity;

	mov	eax, DWORD PTR _pCity$[esp-4]
	mov	DWORD PTR [ecx+416], eax

; 3126 : 	m_bHasPaidAdoptionBonus = false;

	xor	eax, eax
	mov	BYTE PTR [ecx+420], al

; 3127 : 	m_iReligiousPressureModifier = 0;

	mov	DWORD PTR [ecx+424], eax

; 3128 : 	m_ReligionStatus.clear();

	mov	DWORD PTR [ecx+4], eax

; 3129 : }

	ret	4
?Init@CvCityReligions@@QAEXPAVCvCity@@@Z ENDP		; CvCityReligions::Init
_TEXT	ENDS
PUBLIC	?IsDefendedAgainstSpread@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsDefendedAgainstSpread
EXTRN	?IsProhibitsSpread@CvUnitEntry@@QBE_NXZ:PROC	; CvUnitEntry::IsProhibitsSpread
EXTRN	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ:PROC	; CvUnit::getUnitType
EXTRN	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z:PROC	; CvPlot::getUnitByIndex
EXTRN	?getNumUnits@CvPlot@@QBEHXZ:PROC		; CvPlot::getNumUnits
EXTRN	?plot@CvCity@@QBEPAVCvPlot@@XZ:PROC		; CvCity::plot
; Function compile flags: /Ogtpy
;	COMDAT ?IsDefendedAgainstSpread@CvCityReligions@@QAE_NW4ReligionTypes@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_eReligion$ = 8						; size = 4
?IsDefendedAgainstSpread@CvCityReligions@@QAE_NW4ReligionTypes@@@Z PROC ; CvCityReligions::IsDefendedAgainstSpread, COMDAT
; _this$ = ecx

; 3320 : {

	push	ecx
	push	ebx
	push	esi
	mov	DWORD PTR _this$[esp+12], ecx

; 3321 : 	CvUnit* pLoopUnit;
; 3322 : 
; 3323 : 	CvPlot* pCityPlot = m_pCity->plot();

	mov	ecx, DWORD PTR [ecx+416]
	push	edi
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	edi, eax

; 3324 : 	if(pCityPlot)

	test	edi, edi
	je	SHORT $LN12@IsDefended

; 3325 : 	{
; 3326 : #ifdef AUI_WARNING_FIXES
; 3327 : 		for (uint iUnitLoop = 0; iUnitLoop < pCityPlot->getNumUnits(); iUnitLoop++)
; 3328 : #else
; 3329 : 		for(int iUnitLoop = 0; iUnitLoop < pCityPlot->getNumUnits(); iUnitLoop++)

	mov	ecx, edi
	xor	ebx, ebx
	call	?getNumUnits@CvPlot@@QBEHXZ		; CvPlot::getNumUnits
	test	eax, eax
	jle	SHORT $LN12@IsDefended
$LL14@IsDefended:

; 3330 : #endif
; 3331 : 		{
; 3332 : 			pLoopUnit = pCityPlot->getUnitByIndex(iUnitLoop);

	push	ebx
	mov	ecx, edi
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex
	mov	esi, eax

; 3333 : 			CvUnitEntry* pkEntry = GC.getUnitInfo(pLoopUnit->getUnitType());

	mov	ecx, esi
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo

; 3334 : 			if(pkEntry && pkEntry->IsProhibitsSpread())

	test	eax, eax
	je	SHORT $LN13@IsDefended
	mov	ecx, eax
	call	?IsProhibitsSpread@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsProhibitsSpread
	test	al, al
	je	SHORT $LN13@IsDefended

; 3335 : 			{
; 3336 : 				if(pLoopUnit->getOwner() == m_pCity->getOwner() && pLoopUnit->GetReligionData()->GetReligion() != eReligion)

	mov	eax, DWORD PTR _this$[esp+16]
	mov	ecx, DWORD PTR [eax+416]
	mov	edx, DWORD PTR [esi+40]
	cmp	edx, DWORD PTR [ecx+84]
	jne	SHORT $LN13@IsDefended
	mov	eax, DWORD PTR [esi+1888]
	mov	ecx, DWORD PTR _eReligion$[esp+12]
	cmp	DWORD PTR [eax], ecx
	jne	$LN53@IsDefended
$LN13@IsDefended:

; 3325 : 	{
; 3326 : #ifdef AUI_WARNING_FIXES
; 3327 : 		for (uint iUnitLoop = 0; iUnitLoop < pCityPlot->getNumUnits(); iUnitLoop++)
; 3328 : #else
; 3329 : 		for(int iUnitLoop = 0; iUnitLoop < pCityPlot->getNumUnits(); iUnitLoop++)

	mov	ecx, edi
	inc	ebx
	call	?getNumUnits@CvPlot@@QBEHXZ		; CvPlot::getNumUnits
	cmp	ebx, eax
	jl	SHORT $LL14@IsDefended
$LN12@IsDefended:
	push	ebp

; 3339 : 				}
; 3340 : 			}
; 3341 : 		}
; 3342 : 	}
; 3343 : 
; 3344 : 	CvPlot* pAdjacentPlot;
; 3345 : 	for(int iDirectionLoop = 0; iDirectionLoop < NUM_DIRECTION_TYPES; iDirectionLoop++)

	xor	ebp, ebp
	npad	12
$LL58@IsDefended:

; 3346 : 	{
; 3347 : 		pAdjacentPlot = plotDirection(m_pCity->getX(), m_pCity->getY(), ((DirectionTypes)iDirectionLoop));

	mov	edx, DWORD PTR _this$[esp+20]
	mov	eax, DWORD PTR [edx+416]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR [eax+96]
	push	ebp
	push	ecx
	push	edx
	call	?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z ; plotDirection
	mov	edi, eax
	add	esp, 12					; 0000000cH

; 3348 : 
; 3349 : 		if(pAdjacentPlot != NULL)

	test	edi, edi
	je	SHORT $LN8@IsDefended

; 3350 : 		{
; 3351 : #ifdef AUI_WARNING_FIXES
; 3352 : 			for (uint iUnitLoop = 0; iUnitLoop < pAdjacentPlot->getNumUnits(); iUnitLoop++)
; 3353 : #else
; 3354 : 			for(int iUnitLoop = 0; iUnitLoop < pAdjacentPlot->getNumUnits(); iUnitLoop++)

	mov	ecx, edi
	xor	ebx, ebx
	call	?getNumUnits@CvPlot@@QBEHXZ		; CvPlot::getNumUnits
	test	eax, eax
	jle	SHORT $LN8@IsDefended
	npad	2
$LL5@IsDefended:

; 3355 : #endif
; 3356 : 			{
; 3357 : 				pLoopUnit = pAdjacentPlot->getUnitByIndex(iUnitLoop);

	push	ebx
	mov	ecx, edi
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex
	mov	esi, eax

; 3358 : #ifdef AUI_CONSTIFY
; 3359 : 				if (pLoopUnit->getUnitInfo().IsProhibitsSpread())
; 3360 : #else
; 3361 : 				CvUnitEntry* pkEntry = GC.getUnitInfo(pLoopUnit->getUnitType());

	mov	ecx, esi
	call	?getUnitType@CvUnit@@QBE?BW4UnitTypes@@XZ ; CvUnit::getUnitType
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo

; 3362 : 				if(pkEntry && pkEntry->IsProhibitsSpread())

	test	eax, eax
	je	SHORT $LN4@IsDefended
	mov	ecx, eax
	call	?IsProhibitsSpread@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsProhibitsSpread
	test	al, al
	je	SHORT $LN4@IsDefended

; 3363 : #endif
; 3364 : 				{
; 3365 : 					if(pLoopUnit->getOwner() == m_pCity->getOwner() && pLoopUnit->GetReligionData()->GetReligion() != eReligion)

	mov	eax, DWORD PTR _this$[esp+20]
	mov	ecx, DWORD PTR [eax+416]
	mov	edx, DWORD PTR [esi+40]
	cmp	edx, DWORD PTR [ecx+84]
	jne	SHORT $LN4@IsDefended
	mov	eax, DWORD PTR [esi+1888]
	mov	ecx, DWORD PTR _eReligion$[esp+16]
	cmp	DWORD PTR [eax], ecx
	jne	SHORT $LN54@IsDefended
$LN4@IsDefended:

; 3350 : 		{
; 3351 : #ifdef AUI_WARNING_FIXES
; 3352 : 			for (uint iUnitLoop = 0; iUnitLoop < pAdjacentPlot->getNumUnits(); iUnitLoop++)
; 3353 : #else
; 3354 : 			for(int iUnitLoop = 0; iUnitLoop < pAdjacentPlot->getNumUnits(); iUnitLoop++)

	mov	ecx, edi
	inc	ebx
	call	?getNumUnits@CvPlot@@QBEHXZ		; CvPlot::getNumUnits
	cmp	ebx, eax
	jl	SHORT $LL5@IsDefended
$LN8@IsDefended:

; 3339 : 				}
; 3340 : 			}
; 3341 : 		}
; 3342 : 	}
; 3343 : 
; 3344 : 	CvPlot* pAdjacentPlot;
; 3345 : 	for(int iDirectionLoop = 0; iDirectionLoop < NUM_DIRECTION_TYPES; iDirectionLoop++)

	inc	ebp
	cmp	ebp, 6
	jl	$LL58@IsDefended
	pop	ebp
	pop	edi
	pop	esi

; 3368 : 					}
; 3369 : 				}
; 3370 : 			}
; 3371 : 		}
; 3372 : 	}
; 3373 : 
; 3374 : 	return false;

	xor	al, al
	pop	ebx

; 3375 : }

	pop	ecx
	ret	4
$LN53@IsDefended:
	pop	edi
	pop	esi

; 3337 : 				{
; 3338 : 					return true;

	mov	al, 1
	pop	ebx

; 3375 : }

	pop	ecx
	ret	4
$LN54@IsDefended:
	pop	ebp
	pop	edi
	pop	esi

; 3366 : 					{
; 3367 : 						return true;

	mov	al, 1
	pop	ebx

; 3375 : }

	pop	ecx
	ret	4
?IsDefendedAgainstSpread@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ENDP ; CvCityReligions::IsDefendedAgainstSpread
_TEXT	ENDS
PUBLIC	?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ ; CvCityReligions::GetSecondaryReligionPantheonBelief
EXTRN	?IsSecondReligionPantheon@CvPlayer@@QBE_NXZ:PROC ; CvPlayer::IsSecondReligionPantheon
; Function compile flags: /Ogtpy
;	COMDAT ?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ
_TEXT	SEGMENT
?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ PROC ; CvCityReligions::GetSecondaryReligionPantheonBelief, COMDAT
; _this$ = ecx

; 3503 : {

	push	ebp
	push	esi
	mov	esi, ecx

; 3504 : 	BeliefTypes eRtnValue = NO_BELIEF;
; 3505 : 
; 3506 : 	// Check for the policy that allows a secondary religion to be active
; 3507 : 	if (GET_PLAYER(m_pCity->getOwner()).IsSecondReligionPantheon())

	mov	eax, DWORD PTR [esi+416]
	mov	ecx, DWORD PTR [eax+84]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	or	ebp, -1
	call	?IsSecondReligionPantheon@CvPlayer@@QBE_NXZ ; CvPlayer::IsSecondReligionPantheon
	test	al, al
	je	$LN26@GetSeconda@2

; 3508 : 	{
; 3509 : 		ReligionTypes eSecondary = GetSecondaryReligion();

	mov	ecx, esi
	call	?GetSecondaryReligion@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetSecondaryReligion

; 3510 : 		if (eSecondary != NO_RELIGION)

	cmp	eax, ebp
	je	$LN26@GetSeconda@2

; 3511 : 		{
; 3512 : 			const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eSecondary, m_pCity->getOwner());

	mov	ecx, DWORD PTR [esi+416]
	mov	ecx, DWORD PTR [ecx+84]
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 3513 : 			if(pReligion)

	test	eax, eax
	je	SHORT $LN26@GetSeconda@2
	push	ebx

; 3514 : 			{
; 3515 : 				for(int iI = 0; iI < pReligion->m_Beliefs.GetNumBeliefs(); iI++)

	lea	ebx, DWORD PTR [eax+152]
	mov	ecx, ebx
	xor	esi, esi
	call	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetNumBeliefs
	test	eax, eax
	jle	SHORT $LN25@GetSeconda@2
	push	edi
	npad	2
$LL4@GetSeconda@2:

; 3516 : 				{
; 3517 : 					const BeliefTypes eBelief = pReligion->m_Beliefs.GetBelief(iI);

	push	esi
	mov	ecx, ebx
	call	?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z ; CvReligionBeliefs::GetBelief
	mov	edi, eax

; 3518 : 					CvBeliefEntry* pEntry = GC.GetGameBeliefs()->GetEntry((int)eBelief);

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ecx, eax
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry

; 3519 : 					if(pEntry && pEntry->IsPantheonBelief())

	test	eax, eax
	je	SHORT $LN3@GetSeconda@2
	mov	ecx, eax
	call	?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsPantheonBelief
	test	al, al
	jne	SHORT $LN23@GetSeconda@2
$LN3@GetSeconda@2:

; 3514 : 			{
; 3515 : 				for(int iI = 0; iI < pReligion->m_Beliefs.GetNumBeliefs(); iI++)

	mov	ecx, ebx
	inc	esi
	call	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetNumBeliefs
	cmp	esi, eax
	jl	SHORT $LL4@GetSeconda@2
	pop	edi
	pop	ebx
	pop	esi

; 3520 : 					{
; 3521 : 						eRtnValue = eBelief;
; 3522 : 						break;
; 3523 : 					}
; 3524 : 				}
; 3525 : 			}
; 3526 : 		}
; 3527 : 	}
; 3528 : 
; 3529 : 	return eRtnValue;

	mov	eax, ebp
	pop	ebp

; 3530 : }

	ret	0
$LN23@GetSeconda@2:

; 3520 : 					{
; 3521 : 						eRtnValue = eBelief;
; 3522 : 						break;
; 3523 : 					}
; 3524 : 				}
; 3525 : 			}
; 3526 : 		}
; 3527 : 	}
; 3528 : 
; 3529 : 	return eRtnValue;

	mov	eax, edi
	pop	edi
	pop	ebx
	pop	esi
	pop	ebp

; 3530 : }

	ret	0
$LN25@GetSeconda@2:
	pop	ebx
	pop	esi

; 3520 : 					{
; 3521 : 						eRtnValue = eBelief;
; 3522 : 						break;
; 3523 : 					}
; 3524 : 				}
; 3525 : 			}
; 3526 : 		}
; 3527 : 	}
; 3528 : 
; 3529 : 	return eRtnValue;

	mov	eax, ebp
	pop	ebp

; 3530 : }

	ret	0
$LN26@GetSeconda@2:
	pop	esi

; 3520 : 					{
; 3521 : 						eRtnValue = eBelief;
; 3522 : 						break;
; 3523 : 					}
; 3524 : 				}
; 3525 : 			}
; 3526 : 		}
; 3527 : 	}
; 3528 : 
; 3529 : 	return eRtnValue;

	mov	eax, ebp
	pop	ebp

; 3530 : }

	ret	0
?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ ENDP ; CvCityReligions::GetSecondaryReligionPantheonBelief
_TEXT	ENDS
PUBLIC	?GetPressurePerTurn@CvCityReligions@@QAEHW4ReligionTypes@@AAH@Z ; CvCityReligions::GetPressurePerTurn
; Function compile flags: /Ogtpy
;	COMDAT ?GetPressurePerTurn@CvCityReligions@@QAEHW4ReligionTypes@@AAH@Z
_TEXT	SEGMENT
_iPressure$ = -12					; size = 4
_iNumTradeRoutes$226810 = -8				; size = 4
_iLoop$226802 = -4					; size = 4
_eReligion$ = 8						; size = 4
tv294 = 12						; size = 4
_iNumTradeRoutesInvolved$ = 12				; size = 4
?GetPressurePerTurn@CvCityReligions@@QAEHW4ReligionTypes@@AAH@Z PROC ; CvCityReligions::GetPressurePerTurn, COMDAT
; _this$ = ecx

; 3614 : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi

; 3615 : 	int iPressure = 0;

	xor	esi, esi
	push	edi

; 3616 : 	iNumTradeRoutesInvolved = 0;

	mov	edi, DWORD PTR _iNumTradeRoutesInvolved$[esp+24]
	xor	ebp, ebp
	mov	ebx, ecx
	mov	DWORD PTR _iPressure$[esp+28], esi
	mov	DWORD PTR [edi], esi
	mov	DWORD PTR tv294[esp+24], ebp
	npad	5
$LL47@GetPressur@2:

; 3620 : 	{
; 3621 : 		CvPlayer& kPlayer = GET_PLAYER((PlayerTypes)iI);

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	ebp, eax

; 3622 : 		if(kPlayer.isAlive())

	cmp	BYTE PTR [ebp+2256], 0
	je	SHORT $LN9@GetPressur@2

; 3623 : 		{
; 3624 : 			// Loop through each of their cities
; 3625 : 			int iLoop;
; 3626 : 			CvCity* pLoopCity;
; 3627 : 			for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$226802[esp+32]
	push	ecx
	mov	ecx, ebp
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN44@GetPressur@2
$LL45@GetPressur@2:

; 3628 : 			{
; 3629 : 				// Ignore the same city
; 3630 : 				if (m_pCity == pLoopCity)

	cmp	DWORD PTR [ebx+416], esi
	je	SHORT $LN5@GetPressur@2

; 3631 : 				{
; 3632 : 					continue;
; 3633 : 				}
; 3634 : 
; 3635 : 				// Does this city have the matching majority religion?
; 3636 : 				ReligionTypes eMajorityReligion = pLoopCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority

; 3637 : 				if(eMajorityReligion == eReligion)

	cmp	eax, DWORD PTR _eReligion$[esp+24]
	jne	SHORT $LN5@GetPressur@2

; 3638 : 				{
; 3639 : 					int iNumTradeRoutes;
; 3640 : 					iPressure += GC.getGame().GetGameReligions()->GetAdjacentCityReligiousPressure (eMajorityReligion, pLoopCity, m_pCity, iNumTradeRoutes, false);

	mov	ecx, DWORD PTR [ebx+416]
	push	0
	lea	edx, DWORD PTR _iNumTradeRoutes$226810[esp+32]
	push	edx
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetAdjacentCityReligiousPressure@CvGameReligions@@QAEHW4ReligionTypes@@PAVCvCity@@1AAH_N@Z ; CvGameReligions::GetAdjacentCityReligiousPressure

; 3641 : 					iNumTradeRoutesInvolved += iNumTradeRoutes;

	mov	edx, DWORD PTR _iNumTradeRoutes$226810[esp+28]
	add	DWORD PTR _iPressure$[esp+28], eax
	add	DWORD PTR [edi], edx
$LN5@GetPressur@2:
	push	0
	lea	eax, DWORD PTR _iLoop$226802[esp+32]
	push	eax
	mov	ecx, ebp
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LL45@GetPressur@2
$LN44@GetPressur@2:

; 3623 : 		{
; 3624 : 			// Loop through each of their cities
; 3625 : 			int iLoop;
; 3626 : 			CvCity* pLoopCity;
; 3627 : 			for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	mov	esi, DWORD PTR _iPressure$[esp+28]
$LN9@GetPressur@2:

; 3617 : 
; 3618 : 	// Loop through all the players
; 3619 : 	for(int iI = 0; iI < MAX_PLAYERS; iI++)

	mov	ebp, DWORD PTR tv294[esp+24]
	add	ebp, 63236				; 0000f704H
	cmp	ebp, 4047104				; 003dc100H
	mov	DWORD PTR tv294[esp+24], ebp
	jl	$LL47@GetPressur@2

; 3642 : 				}
; 3643 : 			}
; 3644 : 		}
; 3645 : 	}
; 3646 : 
; 3647 : 	// Holy city for this religion?
; 3648 : 	if (IsHolyCityForReligion(eReligion))

	mov	eax, DWORD PTR [ebx]
	mov	ebx, DWORD PTR [ebx+4]
	lea	ecx, DWORD PTR [ebx+ebx*2]
	lea	ecx, DWORD PTR [eax+ecx*8]
	cmp	eax, ecx
	je	SHORT $LN43@GetPressur@2
	npad	3
$LL24@GetPressur@2:
	mov	edx, DWORD PTR _eReligion$[esp+24]
	cmp	DWORD PTR [eax], edx
	je	SHORT $LN38@GetPressur@2
	add	eax, 24					; 00000018H
	cmp	eax, ecx
	jne	SHORT $LL24@GetPressur@2
	pop	edi

; 3653 : 	}
; 3654 : 
; 3655 : 	return iPressure;

	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx

; 3656 : }

	add	esp, 12					; 0000000cH
	ret	8
$LN38@GetPressur@2:

; 3642 : 				}
; 3643 : 			}
; 3644 : 		}
; 3645 : 	}
; 3646 : 
; 3647 : 	// Holy city for this religion?
; 3648 : 	if (IsHolyCityForReligion(eReligion))

	cmp	BYTE PTR [eax+4], 0
	je	SHORT $LN43@GetPressur@2

; 3649 : 	{
; 3650 : 		int iHolyCityPressure = GC.getGame().getGameSpeedInfo().getReligiousPressureAdjacentCity();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getReligiousPressureAdjacentCity@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getReligiousPressureAdjacentCity

; 3651 : 		iHolyCityPressure *=  GC.getRELIGION_PER_TURN_FOUNDING_CITY_PRESSURE();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7896
	imul	ecx, eax

; 3652 : 		iPressure += iHolyCityPressure;

	add	esi, ecx
$LN43@GetPressur@2:
	pop	edi

; 3653 : 	}
; 3654 : 
; 3655 : 	return iPressure;

	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx

; 3656 : }

	add	esp, 12					; 0000000cH
	ret	8
?GetPressurePerTurn@CvCityReligions@@QAEHW4ReligionTypes@@AAH@Z ENDP ; CvCityReligions::GetPressurePerTurn
_TEXT	ENDS
PUBLIC	?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ; CvCityReligions::WouldExertTradeRoutePressureToward
; Function compile flags: /Ogtpy
;	COMDAT ?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z
_TEXT	SEGMENT
_pTargetCity$ = 8					; size = 4
_iNumTradeRoutes$226837 = 12				; size = 4
_eReligion$ = 12					; size = 4
_iAmount$ = 16						; size = 4
?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z PROC ; CvCityReligions::WouldExertTradeRoutePressureToward, COMDAT
; _this$ = ecx

; 3690 : 	eReligion = NO_RELIGION;

	mov	eax, DWORD PTR _eReligion$[esp-4]
	push	esi
	push	edi
	mov	edi, ecx

; 3691 : 	iAmount = 0;

	mov	ecx, DWORD PTR _iAmount$[esp+4]
	mov	DWORD PTR [eax], -1
	mov	DWORD PTR [ecx], 0

; 3692 : 
; 3693 : 	ReligionTypes eReligiousMajority = GetReligiousMajority();

	mov	ecx, edi
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	esi, eax

; 3694 : 
; 3695 : 	// if there isn't a religious connection, whatvz
; 3696 : 	if (eReligiousMajority == NO_RELIGION)

	cmp	esi, -1
	jne	SHORT $LN4@WouldExert
$LN36@WouldExert:
	pop	edi

; 3697 : 	{
; 3698 : 		return false;

	xor	al, al
	pop	esi

; 3730 : }

	ret	12					; 0000000cH
$LN4@WouldExert:

; 3699 : 	}
; 3700 : 
; 3701 : 	const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eReligiousMajority, m_pCity->getOwner());

	mov	edx, DWORD PTR [edi+416]
	mov	eax, DWORD PTR [edx+84]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	push	esi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 3702 : 	if (!pReligion)

	test	eax, eax

; 3703 : 	{
; 3704 : 		return false;

	je	SHORT $LN36@WouldExert

; 3705 : 	}
; 3706 : 
; 3707 : 	// Are the cities within the minimum distance?
; 3708 : 	int iDistance = GC.getRELIGION_ADJACENT_CITY_DISTANCE();
; 3709 : 
; 3710 : 	// Boost to distance due to belief?
; 3711 : 	int iDistanceMod = pReligion->m_Beliefs.GetSpreadDistanceModifier();

	mov	eax, DWORD PTR [eax+188]
	push	ebx
	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7904
	push	ebp

; 3712 : 	if(iDistanceMod > 0)

	test	eax, eax
	jle	SHORT $LN2@WouldExert

; 3713 : 	{
; 3714 : 		iDistance *= (100 + iDistanceMod);

	lea	ecx, DWORD PTR [eax+100]
	imul	ecx, ebx

; 3715 : 		iDistance /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	ebx, eax
$LN2@WouldExert:

; 3716 : 	}
; 3717 : 
; 3718 : 	bool bWithinDistance = (plotDistance(m_pCity->getX(), m_pCity->getY(), pTargetCity->getX(), pTargetCity->getY()) <= iDistance);

	mov	ebp, DWORD PTR _pTargetCity$[esp+12]
	mov	ecx, DWORD PTR [ebp+108]
	mov	eax, DWORD PTR [edi+416]
	mov	edx, DWORD PTR [ebp+96]
	push	ecx
	mov	ecx, DWORD PTR [eax+108]
	push	edx
	mov	edx, DWORD PTR [eax+96]
	push	ecx
	push	edx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	cmp	eax, ebx

; 3719 : 
; 3720 : 	// if not within distance, then we're using a trade route
; 3721 : 	if (!bWithinDistance) 

	jle	SHORT $LN1@WouldExert

; 3722 : 	{
; 3723 : 		eReligion = eReligiousMajority;

	mov	eax, DWORD PTR _eReligion$[esp+12]

; 3724 : 		int iNumTradeRoutes = 0;
; 3725 : 		iAmount = GC.getGame().GetGameReligions()->GetAdjacentCityReligiousPressure(eReligiousMajority, m_pCity, pTargetCity, iNumTradeRoutes, true);

	push	1
	lea	ecx, DWORD PTR _iNumTradeRoutes$226837[esp+16]
	push	ecx
	mov	DWORD PTR [eax], esi
	mov	edx, DWORD PTR [edi+416]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	ebp
	push	edx
	push	esi
	mov	DWORD PTR _iNumTradeRoutes$226837[esp+32], 0
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetAdjacentCityReligiousPressure@CvGameReligions@@QAEHW4ReligionTypes@@PAVCvCity@@1AAH_N@Z ; CvGameReligions::GetAdjacentCityReligiousPressure
	mov	ecx, DWORD PTR _iAmount$[esp+12]
	pop	ebp
	pop	ebx
	pop	edi
	mov	DWORD PTR [ecx], eax

; 3726 : 		return true;

	mov	al, 1
	pop	esi

; 3730 : }

	ret	12					; 0000000cH
$LN1@WouldExert:
	pop	ebp
	pop	ebx
	pop	edi

; 3727 : 	}
; 3728 : 
; 3729 : 	return false;

	xor	al, al
	pop	esi

; 3730 : }

	ret	12					; 0000000cH
?WouldExertTradeRoutePressureToward@CvCityReligions@@QAE_NPAVCvCity@@AAW4ReligionTypes@@AAH@Z ENDP ; CvCityReligions::WouldExertTradeRoutePressureToward
_TEXT	ENDS
PUBLIC	?UpdateNumTradeRouteConnections@CvCityReligions@@QAEXPAVCvCity@@@Z ; CvCityReligions::UpdateNumTradeRouteConnections
; Function compile flags: /Ogtpy
;	COMDAT ?UpdateNumTradeRouteConnections@CvCityReligions@@QAEXPAVCvCity@@@Z
_TEXT	SEGMENT
_pOtherCity$ = 8					; size = 4
?UpdateNumTradeRouteConnections@CvCityReligions@@QAEXPAVCvCity@@@Z PROC ; CvCityReligions::UpdateNumTradeRouteConnections, COMDAT
; _this$ = ecx

; 4191 : {

	push	ebx
	push	edi
	mov	edi, ecx

; 4192 : 	ReligionTypes eReligiousMajority = GetReligiousMajority();

	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	ebx, eax

; 4193 : 
; 4194 : 	// if there isn't a religious connection, whatvz
; 4195 : 	if (eReligiousMajority == NO_RELIGION)

	cmp	ebx, -1
	je	$LN1@UpdateNumT

; 4196 : 	{
; 4197 : 		return;
; 4198 : 	}
; 4199 : 
; 4200 : 	const CvReligion* pReligion = GC.getGame().GetGameReligions()->GetReligion(eReligiousMajority, m_pCity->getOwner());

	mov	eax, DWORD PTR [edi+416]
	mov	eax, DWORD PTR [eax+84]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	push	ebx
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 4201 : 	if (!pReligion)

	test	eax, eax
	je	SHORT $LN1@UpdateNumT

; 4202 : 	{
; 4203 : 		return;
; 4204 : 	}
; 4205 : 
; 4206 : 	// Are the cities within the minimum distance?
; 4207 : 	int iDistance = GC.getRELIGION_ADJACENT_CITY_DISTANCE();
; 4208 : 
; 4209 : 	// Boost to distance due to belief?
; 4210 : 	int iDistanceMod = pReligion->m_Beliefs.GetSpreadDistanceModifier();

	mov	eax, DWORD PTR [eax+188]
	push	esi
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7904

; 4211 : 	if(iDistanceMod > 0)

	test	eax, eax
	jle	SHORT $LN2@UpdateNumT

; 4212 : 	{
; 4213 : 		iDistance *= (100 + iDistanceMod);

	lea	ecx, DWORD PTR [eax+100]
	imul	ecx, esi

; 4214 : 		iDistance /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	mov	esi, ecx
$LN2@UpdateNumT:

; 4215 : 	}
; 4216 : 
; 4217 : 	bool bWithinDistance = (plotDistance(m_pCity->getX(), m_pCity->getY(), pOtherCity->getX(), pOtherCity->getY()) <= iDistance);

	mov	eax, DWORD PTR [edi+416]
	mov	edi, DWORD PTR _pOtherCity$[esp+8]
	mov	edx, DWORD PTR [edi+108]
	mov	ecx, DWORD PTR [edi+96]
	push	edx
	mov	edx, DWORD PTR [eax+108]
	mov	eax, DWORD PTR [eax+96]
	push	ecx
	push	edx
	push	eax
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	cmp	eax, esi
	pop	esi

; 4218 : 
; 4219 : 	// if not within distance, then we're using a trade route
; 4220 : 	if (!bWithinDistance) 

	jle	SHORT $LN1@UpdateNumT

; 4221 : 	{
; 4222 : 		pOtherCity->GetCityReligions()->IncrementNumTradeRouteConnections(eReligiousMajority, 1);

	push	1
	push	ebx
	mov	ecx, edi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IncrementNumTradeRouteConnections@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::IncrementNumTradeRouteConnections
$LN1@UpdateNumT:
	pop	edi
	pop	ebx

; 4223 : 	}
; 4224 : }

	ret	4
?UpdateNumTradeRouteConnections@CvCityReligions@@QAEXPAVCvCity@@@Z ENDP ; CvCityReligions::UpdateNumTradeRouteConnections
_TEXT	ENDS
PUBLIC	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fautovariable.h
xdata$x	SEGMENT
__unwindtable$?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ$0
__ehfuncinfo$?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ
_TEXT	SEGMENT
_args$228376 = -20					; size = 4
_iValue$228377 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ PROC ; CvReligionAI::GetReligionToSpread, COMDAT
; _this$ = ecx

; 5668 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	esi
	push	edi
	mov	edi, ecx

; 5669 : 	ReligionTypes eRtnValue = NO_RELIGION;
; 5670 : 
; 5671 : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8596
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	esi, eax

; 5672 : 	if(pkScriptSystem)

	test	esi, esi
	je	SHORT $LN3@GetReligio@5

; 5673 : 	{
; 5674 : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$228376[esp+28]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle

; 5675 : 		args->Push(m_pPlayer->GetID());

	mov	eax, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR _args$228376[esp+28]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __$EHRec$[esp+40], 0
	call	eax

; 5676 : 
; 5677 : 		int iValue = 0;
; 5678 : 		if (LuaSupport::CallAccumulator(pkScriptSystem, "GetReligionToSpread", args.get(), iValue))

	mov	edx, DWORD PTR _args$228376[esp+28]
	lea	ecx, DWORD PTR _iValue$228377[esp+28]
	push	ecx
	push	edx
	push	OFFSET $SG228379
	push	esi
	mov	DWORD PTR _iValue$228377[esp+44], 0
	call	?CallAccumulator@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AAH@Z ; LuaSupport::CallAccumulator
	add	esp, 16					; 00000010H

; 5679 : 		{
; 5680 : 			eRtnValue = (ReligionTypes)iValue;
; 5681 : 			return eRtnValue;

	mov	DWORD PTR __$EHRec$[esp+36], -1
	lea	ecx, DWORD PTR _args$228376[esp+28]
	test	al, al
	je	SHORT $LN2@GetReligio@5
	mov	esi, DWORD PTR _iValue$228377[esp+28]
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
	pop	edi
	mov	eax, esi
	pop	esi

; 5693 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	add	esp, 20					; 00000014H
	ret	0
$LN2@GetReligio@5:

; 5682 : 		}
; 5683 : 	}

	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN3@GetReligio@5:

; 5684 : 
; 5685 : 	CvGameReligions *pReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 5686 : 	eRtnValue = pReligions->GetReligionCreatedByPlayer(m_pPlayer->GetID());

	mov	ecx, DWORD PTR [edi+4]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer

; 5687 : 	if(eRtnValue > RELIGION_PANTHEON)

	test	eax, eax

; 5688 : 	{
; 5689 : 		return eRtnValue;

	jg	SHORT $LN4@GetReligio@5

; 5690 : 	}
; 5691 : 
; 5692 : 	return NO_RELIGION;

	or	eax, -1
$LN4@GetReligio@5:

; 5693 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 20					; 00000014H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ$0:
	lea	ecx, DWORD PTR _args$228376[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__ehhandler$?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ENDP ; CvReligionAI::GetReligionToSpread
PUBLIC	?BuyAnyAvailableNonFaithBuilding@CvReligionAI@@AAE_NXZ ; CvReligionAI::BuyAnyAvailableNonFaithBuilding
EXTRN	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z:PROC ; CvCity::Purchase
EXTRN	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z:PROC ; CvCity::IsCanPurchase
EXTRN	?GetYieldChange@CvBuildingEntry@@QBEHH@Z:PROC	; CvBuildingEntry::GetYieldChange
; Function compile flags: /Ogtpy
;	COMDAT ?BuyAnyAvailableNonFaithBuilding@CvReligionAI@@AAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iLoop$ = -4						; size = 4
?BuyAnyAvailableNonFaithBuilding@CvReligionAI@@AAE_NXZ PROC ; CvReligionAI::BuyAnyAvailableNonFaithBuilding, COMDAT
; _this$ = ecx

; 5969 : {

	sub	esp, 8

; 5970 : 	PlayerTypes ePlayer = m_pPlayer->GetID();

	mov	eax, DWORD PTR [ecx+4]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR [eax+44]

; 5971 : 
; 5972 : 	int iLoop;
; 5973 : 	CvCity* pLoopCity;
; 5974 : 	for(pLoopCity = GET_PLAYER(ePlayer).firstCity(&iLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(ePlayer).nextCity(&iLoop))

	imul	ebp, 63236				; 0000f704H
	push	esi
	push	edi
	mov	DWORD PTR _this$[esp+24], ecx
	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	edx, DWORD PTR _iLoop$[esp+28]
	add	ecx, ebp
	push	edx
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	edi, eax
	test	edi, edi
	je	$LN7@BuyAnyAvai
	npad	11
$LL9@BuyAnyAvai:

; 5975 : 	{
; 5976 : #ifdef AUI_WARNING_FIXES
; 5977 : 		for (uint iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)
; 5978 : #else
; 5979 : 		for (int iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	ebx, ebx
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	test	eax, eax
	jle	SHORT $LN8@BuyAnyAvai
$LL26@BuyAnyAvai:

; 5980 : #endif
; 5981 : 		{
; 5982 : 			BuildingTypes eBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings(iI);

	mov	eax, DWORD PTR _this$[esp+24]
	mov	ecx, DWORD PTR [eax+4]
	push	ebx
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings
	mov	esi, eax

; 5983 : 			if(eBuilding != NO_BUILDING)

	cmp	esi, -1
	je	SHORT $LN5@BuyAnyAvai

; 5984 : 			{
; 5985 : 				CvBuildingEntry* pBuildingEntry = GC.GetGameBuildings()->GetEntry(eBuilding);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBuildings@CvGlobals@@QBEPAVCvBuildingXMLEntries@@XZ ; CvGlobals::GetGameBuildings
	mov	ecx, eax
	call	?GetEntry@CvBuildingXMLEntries@@QAEPAVCvBuildingEntry@@H@Z ; CvBuildingXMLEntries::GetEntry

; 5986 : 
; 5987 : 				// Check to make sure this isn't a Faith-generating building
; 5988 : 				if(pBuildingEntry && pBuildingEntry->GetYieldChange(YIELD_FAITH) == 0)

	test	eax, eax
	je	SHORT $LN5@BuyAnyAvai
	push	5
	mov	ecx, eax
	call	?GetYieldChange@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetYieldChange
	test	eax, eax
	jne	SHORT $LN5@BuyAnyAvai

; 5989 : 				{
; 5990 : 					if(pLoopCity->IsCanPurchase(true, true, (UnitTypes)-1, eBuilding, (ProjectTypes)-1, YIELD_FAITH))

	push	5
	push	-1
	push	esi
	push	-1
	push	1
	push	1
	mov	ecx, edi
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	test	al, al
	jne	SHORT $LN22@BuyAnyAvai
$LN5@BuyAnyAvai:

; 5975 : 	{
; 5976 : #ifdef AUI_WARNING_FIXES
; 5977 : 		for (uint iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)
; 5978 : #else
; 5979 : 		for (int iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	ebx
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	ebx, eax
	jl	SHORT $LL26@BuyAnyAvai
$LN8@BuyAnyAvai:

; 5971 : 
; 5972 : 	int iLoop;
; 5973 : 	CvCity* pLoopCity;
; 5974 : 	for(pLoopCity = GET_PLAYER(ePlayer).firstCity(&iLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(ePlayer).nextCity(&iLoop))

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	edx, DWORD PTR _iLoop$[esp+28]
	add	ecx, ebp
	push	edx
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	edi, eax
	test	edi, edi
	jne	$LL9@BuyAnyAvai
$LN7@BuyAnyAvai:
	pop	edi
	pop	esi
	pop	ebp

; 5994 : 					}
; 5995 : 				}
; 5996 : 			}
; 5997 : 		}
; 5998 : 	}
; 5999 : 	return false;

	xor	al, al
	pop	ebx

; 6000 : }

	add	esp, 8
	ret	0
$LN22@BuyAnyAvai:

; 5991 : 					{
; 5992 : 						pLoopCity->Purchase((UnitTypes)-1, eBuilding, (ProjectTypes)-1, YIELD_FAITH);

	push	5
	push	-1
	push	esi
	push	-1
	mov	ecx, edi
	call	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::Purchase
	pop	edi
	pop	esi
	pop	ebp

; 5993 : 						return true;

	mov	al, 1
	pop	ebx

; 6000 : }

	add	esp, 8
	ret	0
?BuyAnyAvailableNonFaithBuilding@CvReligionAI@@AAE_NXZ ENDP ; CvReligionAI::BuyAnyAvailableNonFaithBuilding
_TEXT	ENDS
PUBLIC	?ScoreBeliefAtPlot@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvPlot@@@Z ; CvReligionAI::ScoreBeliefAtPlot
EXTRN	?GetImprovementYieldChange@CvBeliefEntry@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z:PROC ; CvBeliefEntry::GetImprovementYieldChange
EXTRN	?canHaveImprovement@CvPlot@@QBE_NW4ImprovementTypes@@W4TeamTypes@@_N@Z:PROC ; CvPlot::canHaveImprovement
EXTRN	?getNumImprovementInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumImprovementInfos
EXTRN	?GetResourceYieldChange@CvBeliefEntry@@QBEHHH@Z:PROC ; CvBeliefEntry::GetResourceYieldChange
EXTRN	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z:PROC ; CvPlot::getResourceType
EXTRN	?GetYieldModifierNaturalWonder@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetYieldModifierNaturalWonder
EXTRN	?GetYieldChangeNaturalWonder@CvBeliefEntry@@QBEHH@Z:PROC ; CvBeliefEntry::GetYieldChangeNaturalWonder
EXTRN	?IsNaturalWonder@CvPlot@@QBE_NXZ:PROC		; CvPlot::IsNaturalWonder
EXTRN	?GetFeatureYieldChange@CvBeliefEntry@@QBEHHH@Z:PROC ; CvBeliefEntry::GetFeatureYieldChange
EXTRN	?GetTerrainYieldChange@CvBeliefEntry@@QBEHHH@Z:PROC ; CvBeliefEntry::GetTerrainYieldChange
; Function compile flags: /Ogtpy
;	COMDAT ?ScoreBeliefAtPlot@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvPlot@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iNumImprovementInfos$228601 = 8			; size = 4
_pEntry$ = 8						; size = 4
_pPlot$ = 12						; size = 4
?ScoreBeliefAtPlot@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvPlot@@@Z PROC ; CvReligionAI::ScoreBeliefAtPlot, COMDAT
; _this$ = ecx

; 6124 : {

	push	ecx
	push	ebx
	push	ebp

; 6125 : 	int iRtnValue = 0;
; 6126 : 
; 6127 : 	for(int iI = 0; iI < NUM_YIELD_TYPES; iI++)

	mov	ebp, DWORD PTR _pEntry$[esp+8]
	push	esi
	push	edi
	xor	edi, edi
	mov	DWORD PTR _this$[esp+20], ecx
	xor	ebx, ebx
$LL11@ScoreBelie@3:

; 6128 : 	{
; 6129 : 		// Terrain
; 6130 : 		TerrainTypes eTerrain = pPlot->getTerrainType();

	mov	esi, DWORD PTR _pPlot$[esp+16]
	movsx	eax, BYTE PTR [esi+6]

; 6131 : 		if(eTerrain != NO_TERRAIN)

	cmp	eax, -1
	je	SHORT $LN8@ScoreBelie@3

; 6132 : 		{
; 6133 : 			iRtnValue += pEntry->GetTerrainYieldChange(eTerrain, iI);

	push	ebx
	push	eax
	mov	ecx, ebp
	call	?GetTerrainYieldChange@CvBeliefEntry@@QBEHHH@Z ; CvBeliefEntry::GetTerrainYieldChange
	add	edi, eax
$LN8@ScoreBelie@3:

; 6134 : 		}
; 6135 : 
; 6136 : 		// Feature
; 6137 : 		FeatureTypes eFeature = pPlot->getFeatureType();

	movsx	eax, BYTE PTR [esi+432]

; 6138 : 		if(eFeature != NO_FEATURE)

	cmp	eax, -1
	je	SHORT $LN34@ScoreBelie@3

; 6139 : 		{
; 6140 : 			iRtnValue += pEntry->GetFeatureYieldChange(eFeature, iI);

	push	ebx
	push	eax
	mov	ecx, ebp
	call	?GetFeatureYieldChange@CvBeliefEntry@@QBEHHH@Z ; CvBeliefEntry::GetFeatureYieldChange

; 6141 : 
; 6142 : 			if(pPlot->IsNaturalWonder())

	mov	ecx, esi
	add	edi, eax
	call	?IsNaturalWonder@CvPlot@@QBE_NXZ	; CvPlot::IsNaturalWonder
	test	al, al
	je	SHORT $LN34@ScoreBelie@3

; 6143 : 			{
; 6144 : 				iRtnValue += pEntry->GetYieldChangeNaturalWonder(iI);

	push	ebx
	mov	ecx, ebp
	call	?GetYieldChangeNaturalWonder@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldChangeNaturalWonder

; 6145 : 				iRtnValue += (pEntry->GetYieldModifierNaturalWonder(iI) / 25);

	push	ebx
	mov	ecx, ebp
	add	edi, eax
	call	?GetYieldModifierNaturalWonder@CvBeliefEntry@@QBEHH@Z ; CvBeliefEntry::GetYieldModifierNaturalWonder
	mov	ecx, eax
	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 3
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	add	edi, eax
$LN34@ScoreBelie@3:

; 6146 : 			}
; 6147 : 		}
; 6148 : 
; 6149 : 		// Resource
; 6150 : 		ResourceTypes eResource = pPlot->getResourceType();

	push	-1
	mov	ecx, esi
	call	?getResourceType@CvPlot@@QBE?AW4ResourceTypes@@W4TeamTypes@@@Z ; CvPlot::getResourceType

; 6151 : 		if(eResource != NO_RESOURCE)

	cmp	eax, -1
	je	SHORT $LN10@ScoreBelie@3

; 6152 : 		{
; 6153 : 			iRtnValue += pEntry->GetResourceYieldChange(eResource, iI);

	push	ebx
	push	eax
	mov	ecx, ebp
	call	?GetResourceYieldChange@CvBeliefEntry@@QBEHHH@Z ; CvBeliefEntry::GetResourceYieldChange

; 6154 : 
; 6155 : 			// Improvement
; 6156 : #ifdef AUI_WARNING_FIXES
; 6157 : 			for (uint jJ = 0; jJ < GC.getNumImprovementInfos(); jJ++)
; 6158 : #else
; 6159 : 			int iNumImprovementInfos = GC.getNumImprovementInfos();

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	add	edi, eax
	call	?getNumImprovementInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumImprovementInfos

; 6160 : 			for(int jJ = 0; jJ < iNumImprovementInfos; jJ++)

	xor	esi, esi
	mov	DWORD PTR _iNumImprovementInfos$228601[esp+16], eax
	test	eax, eax
	jle	SHORT $LN10@ScoreBelie@3
	npad	1
$LL4@ScoreBelie@3:

; 6161 : #endif
; 6162 : 			{
; 6163 : 				if(pPlot->canHaveImprovement((ImprovementTypes)jJ, m_pPlayer->getTeam()))

	mov	ecx, DWORD PTR _this$[esp+20]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN24@ScoreBelie@3
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN25@ScoreBelie@3
$LN24@ScoreBelie@3:
	or	eax, -1
$LN25@ScoreBelie@3:
	mov	ecx, DWORD PTR _pPlot$[esp+16]
	push	0
	push	eax
	push	esi
	call	?canHaveImprovement@CvPlot@@QBE_NW4ImprovementTypes@@W4TeamTypes@@_N@Z ; CvPlot::canHaveImprovement
	test	al, al
	je	SHORT $LN3@ScoreBelie@3

; 6164 : 				{
; 6165 : 					iRtnValue += (pEntry->GetImprovementYieldChange((ImprovementTypes)jJ, (YieldTypes)iI) * 2);

	push	ebx
	push	esi
	mov	ecx, ebp
	call	?GetImprovementYieldChange@CvBeliefEntry@@QBEHW4ImprovementTypes@@W4YieldTypes@@@Z ; CvBeliefEntry::GetImprovementYieldChange
	lea	edi, DWORD PTR [edi+eax*2]
$LN3@ScoreBelie@3:
	inc	esi
	cmp	esi, DWORD PTR _iNumImprovementInfos$228601[esp+16]
	jl	SHORT $LL4@ScoreBelie@3
$LN10@ScoreBelie@3:

; 6125 : 	int iRtnValue = 0;
; 6126 : 
; 6127 : 	for(int iI = 0; iI < NUM_YIELD_TYPES; iI++)

	inc	ebx
	cmp	ebx, 6
	jl	$LL11@ScoreBelie@3

; 6166 : 				}
; 6167 : 			}
; 6168 : 		}
; 6169 : 	}
; 6170 : 
; 6171 : 	return iRtnValue;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 6172 : }

	pop	ecx
	ret	8
?ScoreBeliefAtPlot@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvPlot@@@Z ENDP ; CvReligionAI::ScoreBeliefAtPlot
_TEXT	ENDS
PUBLIC	?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvReligionAI::ScoreCityForMissionary
EXTRN	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ:PROC ; CvPlayer::GetReligions
EXTRN	?IsPlayerAgreeNotToConvert@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z:PROC ; CvDiplomacyAI::IsPlayerAgreeNotToConvert
EXTRN	?isHuman@CvPlayer@@QBE_NXZ:PROC			; CvPlayer::isHuman
EXTRN	?isOption@CvGame@@QBE_NPBD@Z:PROC		; CvGame::isOption
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z$0
__ehfuncinfo$?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
tv502 = 8						; size = 4
_iScore$ = 8						; size = 4
_pCity$ = 8						; size = 4
_pUnit$ = 12						; size = 8
?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvReligionAI::ScoreCityForMissionary, COMDAT
; _this$ = ecx

; 6636 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	ebp, ecx
	mov	DWORD PTR __$EHRec$[esp+36], 0

; 6637 : 	int iScore = 0;
; 6638 : 
; 6639 : 	ReligionTypes eMyReligion = GetReligionToSpread();

	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread
	mov	ebx, eax

; 6640 : 
; 6641 : 	// Skip if not revealed
; 6642 : 	if(!pCity->plot()->isRevealed(m_pPlayer->getTeam()))

	mov	eax, DWORD PTR [ebp+4]
	mov	eax, DWORD PTR [eax+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN23@ScoreCityF
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	edi, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN24@ScoreCityF
$LN23@ScoreCityF:
	or	edi, -1
$LN24@ScoreCityF:
	mov	esi, DWORD PTR _pCity$[esp+24]
	mov	ecx, esi
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	edx, edi
	shr	edx, 5
	mov	ecx, edx
	shl	ecx, 5
	mov	DWORD PTR tv502[esp+24], ecx
	mov	ecx, edi
	mov	edi, DWORD PTR tv502[esp+24]
	sub	ecx, edi
	mov	edi, 1
	shl	edi, cl
	test	edi, DWORD PTR [eax+edx*4+8]

; 6643 : 	{
; 6644 : 		return iScore;

	je	$LN6@ScoreCityF

; 6645 : 	}
; 6646 : 
; 6647 : 	// Skip if already our religion
; 6648 : 	if(pCity->GetCityReligions()->GetReligiousMajority() == eMyReligion)

	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, ebx

; 6649 : 	{
; 6650 : 		return iScore;

	je	$LN6@ScoreCityF

; 6651 : 	}
; 6652 : 
; 6653 : 	// Base score based on if we are establishing majority
; 6654 : 	iScore = 100;
; 6655 : 	if(ShouldBecomeNewMajority(pCity, eMyReligion, pUnit->GetReligionData()->GetReligiousStrength() * GC.getRELIGION_MISSIONARY_PRESSURE_MULTIPLIER()))

	mov	edx, DWORD PTR _pUnit$[esp+24]
	mov	eax, DWORD PTR [edx+1888]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7900
	imul	ecx, eax
	push	ecx
	push	ebx
	push	esi
	mov	ecx, ebp
	mov	DWORD PTR _iScore$[esp+36], 100		; 00000064H
	call	?ShouldBecomeNewMajority@CvReligionAI@@ABE_NPAVCvCity@@W4ReligionTypes@@H@Z ; CvReligionAI::ShouldBecomeNewMajority
	test	al, al
	je	SHORT $LN13@ScoreCityF

; 6656 : 	{
; 6657 : 		iScore *= 2;

	mov	DWORD PTR _iScore$[esp+24], 200		; 000000c8H
$LN13@ScoreCityF:

; 6658 : 	}
; 6659 : 
; 6660 : 	if (!GET_PLAYER(pCity->getOwner()).isMinorCiv())

	mov	eax, DWORD PTR [esi+84]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, eax
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv

; 6661 : 	{
; 6662 : #ifdef NQM_AI_GIMP_NO_RELIGION_SPREAD
; 6663 : 		if ((GC.getGame().isOption("GAMEOPTION_AI_TWEAKS") || GC.getGame().isOption("GAMEOPTION_AI_GIMP_NO_RELIGION_SPREAD")) && GET_PLAYER(pCity->getOwner()).isHuman())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	test	al, al
	jne	SHORT $LN12@ScoreCityF
	push	OFFSET $SG228809
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	test	al, al
	jne	SHORT $LN10@ScoreCityF
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	OFFSET $SG228810
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	test	al, al
	je	SHORT $LN11@ScoreCityF
$LN10@ScoreCityF:
	mov	eax, DWORD PTR [esi+84]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, eax
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	test	al, al

; 6664 : 			return 0;

	jne	SHORT $LN6@ScoreCityF
$LN11@ScoreCityF:

; 6665 : #endif
; 6666 : 		if (m_pPlayer->GetDiplomacyAI()->IsPlayerAgreeNotToConvert(pCity->getOwner()))

	mov	eax, DWORD PTR [esi+84]
	mov	ecx, DWORD PTR [ebp+4]
	push	eax
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerAgreeNotToConvert@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerAgreeNotToConvert
	test	al, al
	je	SHORT $LN7@ScoreCityF
$LN6@ScoreCityF:

; 6675 : 		{
; 6676 : 			return 0;

	mov	ecx, DWORD PTR _pUnit$[esp+24]
	mov	DWORD PTR __$EHRec$[esp+36], -1
	test	ecx, ecx
	je	SHORT $LN87@ScoreCityF
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN87@ScoreCityF:
	xor	eax, eax

; 6709 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	12					; 0000000cH
$LN12@ScoreCityF:

; 6667 : 		{
; 6668 : 			return 0;
; 6669 : 		}
; 6670 : 	}
; 6671 : #ifdef NQ_AI_GIMP_NO_MINOR_SPREAD //EAP: From Bing with love - AI cannot spread religion to City-States
; 6672 : 	else
; 6673 : 	{
; 6674 : 		if (GC.getGame().isOption("GAMEOPTION_AI_TWEAKS") || GC.getGame().isOption("GAMEOPTION_AI_GIMP_NO_MINOR_RELIGION_SPREAD"))

	push	OFFSET $SG228817
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	test	al, al
	jne	SHORT $LN6@ScoreCityF
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	OFFSET $SG228818
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	test	al, al
	jne	SHORT $LN6@ScoreCityF
$LN7@ScoreCityF:

; 6677 : 		}
; 6678 : 	}
; 6679 : #endif
; 6680 : 
; 6681 : 	CvPlayer& kCityPlayer = GET_PLAYER(pCity->getOwner());

	mov	eax, DWORD PTR [esi+84]

; 6682 : 	// Much better score if our own city or if this city owner isn't starting a religion
; 6683 : 	if(pCity->getOwner() == m_pPlayer->GetID())

	mov	edx, DWORD PTR [ebp+4]
	mov	edi, eax
	imul	edi, 63236				; 0000f704H
	add	edi, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	cmp	eax, DWORD PTR [edx+44]
	jne	SHORT $LN5@ScoreCityF

; 6684 : 	{
; 6685 : 		iScore *= 5;

	mov	eax, DWORD PTR _iScore$[esp+24]
	lea	eax, DWORD PTR [eax+eax*4]
	mov	DWORD PTR _iScore$[esp+24], eax
	jmp	SHORT $LN3@ScoreCityF
$LN5@ScoreCityF:

; 6686 : 	}
; 6687 : 	else if(!kCityPlayer.GetReligions()->HasCreatedReligion())

	mov	ecx, edi
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?HasCreatedReligion@CvPlayerReligions@@QBE_NXZ ; CvPlayerReligions::HasCreatedReligion
	test	al, al
	jne	SHORT $LN3@ScoreCityF

; 6688 : 	{
; 6689 : 		iScore *= 3;

	mov	eax, DWORD PTR _iScore$[esp+24]
	lea	ecx, DWORD PTR [eax+eax*2]
	mov	DWORD PTR _iScore$[esp+24], ecx
$LN3@ScoreCityF:

; 6690 : 	}
; 6691 : 
; 6692 : 	// Then subtract distance
; 6693 : 	iScore -= plotDistance(pUnit->getX(), pUnit->getY(), pCity->getX(), pCity->getY());

	mov	eax, DWORD PTR [esi+108]
	mov	ecx, DWORD PTR [esi+96]
	mov	edx, DWORD PTR _pUnit$[esp+24]
	mov	ebx, DWORD PTR [edx+88]
	mov	edx, DWORD PTR [edx+76]
	push	eax
	push	ecx
	push	ebx
	push	edx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	mov	ebx, DWORD PTR _iScore$[esp+40]

; 6694 : 
; 6695 : 	// Multiplier by how safe it is
; 6696 : 	if(!atWar(m_pPlayer->getTeam(), kCityPlayer.getTeam()))

	mov	edx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	sub	ebx, eax
	mov	eax, DWORD PTR [edi+44]
	add	esp, 16					; 00000010H
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN127@ScoreCityF
	mov	ecx, DWORD PTR [edx+4]
	mov	eax, DWORD PTR [ecx+eax*4]
	jmp	SHORT $LN128@ScoreCityF
$LN127@ScoreCityF:
	or	eax, -1
$LN128@ScoreCityF:
	mov	ecx, DWORD PTR [ebp+4]
	mov	ecx, DWORD PTR [ecx+44]
	cmp	ecx, 63					; 0000003fH
	ja	SHORT $LN136@ScoreCityF
	mov	edx, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	jmp	SHORT $LN137@ScoreCityF
$LN136@ScoreCityF:
	or	ecx, -1
$LN137@ScoreCityF:
	push	eax
	push	ecx
	call	?atWar@@YA_NW4TeamTypes@@0@Z		; atWar
	add	esp, 8
	test	al, al
	jne	SHORT $LN2@ScoreCityF

; 6697 : 	{
; 6698 : 		iScore *= 2;

	lea	eax, DWORD PTR [ebx+ebx]
	mov	DWORD PTR _iScore$[esp+24], eax
	mov	ebx, eax
$LN2@ScoreCityF:

; 6699 : 	}
; 6700 : 
; 6701 : 	// Holy city will anger folks, let's not do that one right away
; 6702 : 	ReligionTypes eCityOwnersReligion = kCityPlayer.GetReligions()->GetReligionCreatedByPlayer();

	mov	ecx, edi
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+44]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer

; 6703 : 	if (eCityOwnersReligion > RELIGION_PANTHEON && pCity->GetCityReligions()->IsHolyCityForReligion(eCityOwnersReligion))

	test	eax, eax
	jle	SHORT $LN1@ScoreCityF
	push	eax
	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsHolyCityForReligion
	test	al, al
	je	SHORT $LN1@ScoreCityF

; 6704 : 	{
; 6705 : 		iScore /= 2;

	mov	eax, ebx
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _iScore$[esp+24], eax
	mov	ebx, eax
$LN1@ScoreCityF:

; 6706 : 	}
; 6707 : 
; 6708 : 	return iScore;

	mov	ecx, DWORD PTR _pUnit$[esp+24]
	mov	DWORD PTR __$EHRec$[esp+36], -1
	test	ecx, ecx
	je	SHORT $LN152@ScoreCityF
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN152@ScoreCityF:

; 6709 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, ebx
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 12					; 0000000cH
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _pUnit$[ebp-4]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvReligionAI::ScoreCityForMissionary
PUBLIC	?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvReligionAI::ScoreCityForInquisitor
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z$0
__ehfuncinfo$?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_pCity$ = 8						; size = 4
_pUnit$ = 12						; size = 8
?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvReligionAI::ScoreCityForInquisitor, COMDAT
; _this$ = ecx

; 6717 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[esp+28], 0

; 6718 : 	int iScore = 0;
; 6719 : 	ReligionTypes eMyReligion = GetReligionToSpread();

	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread

; 6720 : 
; 6721 : 	// Skip if already our religion
; 6722 : 	if(pCity->GetCityReligions()->GetReligiousMajority() == eMyReligion)

	mov	esi, DWORD PTR _pCity$[esp+16]
	mov	ecx, esi
	mov	edi, eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, edi
	jne	SHORT $LN1@ScoreCityF@2

; 6723 : 	{
; 6724 : 		return iScore;

	mov	ecx, DWORD PTR _pUnit$[esp+16]
	mov	DWORD PTR __$EHRec$[esp+28], -1
	test	ecx, ecx
	je	SHORT $LN8@ScoreCityF@2
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN8@ScoreCityF@2:
	xor	eax, eax

; 6734 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	add	esp, 12					; 0000000cH
	ret	12					; 0000000cH
$LN1@ScoreCityF@2:

; 6725 : 	}
; 6726 : 
; 6727 : 	// Base score based on if we are establishing majority
; 6728 : 	iScore = 100;
; 6729 : 
; 6730 : 	// Then subtract distance
; 6731 : 	iScore -= plotDistance(pUnit->getX(), pUnit->getY(), pCity->getX(), pCity->getY());

	mov	eax, DWORD PTR [esi+108]
	mov	edi, DWORD PTR _pUnit$[esp+16]
	mov	esi, DWORD PTR [esi+96]
	mov	ecx, DWORD PTR [edi+88]
	mov	edx, DWORD PTR [edi+76]
	push	eax
	push	esi
	push	ecx
	push	edx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	mov	esi, 100				; 00000064H
	add	esp, 16					; 00000010H

; 6732 : 
; 6733 : 	return iScore;

	mov	ecx, edi
	sub	esi, eax
	mov	DWORD PTR __$EHRec$[esp+28], -1
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification

; 6734 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	pop	edi
	mov	eax, esi
	mov	DWORD PTR fs:0, ecx
	pop	esi
	add	esp, 12					; 0000000cH
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _pUnit$[ebp-4]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvReligionAI::ScoreCityForInquisitor
PUBLIC	?HaveNearbyConversionTarget@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::HaveNearbyConversionTarget
EXTRN	?isRevealed@CvCity@@QBE_NW4TeamTypes@@_N@Z:PROC	; CvCity::isRevealed
EXTRN	?GetReligionAI@CvPlayer@@QBEPAVCvReligionAI@@XZ:PROC ; CvPlayer::GetReligionAI
EXTRN	?isBarbarian@CvPlayer@@QBE_NXZ:PROC		; CvPlayer::isBarbarian
EXTRN	?GetMoves@CvUnitEntry@@QBEHXZ:PROC		; CvUnitEntry::GetMoves
; Function compile flags: /Ogtpy
;	COMDAT ?HaveNearbyConversionTarget@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T237310 = -16						; size = 4
_iPlayer$228895 = -12					; size = 4
_iMissionaryMoves$ = -8					; size = 4
_iLoop$ = -4						; size = 4
_eReligion$ = 8						; size = 4
_bCanIncludeReligionStarter$ = 12			; size = 1
?HaveNearbyConversionTarget@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z PROC ; CvReligionAI::HaveNearbyConversionTarget, COMDAT
; _this$ = ecx

; 6825 : {

	sub	esp, 20					; 00000014H
	push	ebp
	push	edi
	mov	edi, ecx

; 6826 : 	int iLoop;
; 6827 : 	bool bStartedOwnReligion;
; 6828 : 	TeamTypes eTeam = m_pPlayer->getTeam();

	mov	eax, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [eax+44]
	mov	DWORD PTR _this$[esp+28], edi
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN30@HaveNearby
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR $T237310[esp+28], eax
	jmp	SHORT $LN31@HaveNearby
$LN30@HaveNearby:
	mov	DWORD PTR $T237310[esp+28], -1
$LN31@HaveNearby:

; 6829 : 	UnitTypes eMissionary = (UnitTypes)GC.getInfoTypeForString("UNIT_MISSIONARY");

	push	0
	push	OFFSET $SG228891
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 6830 : #ifdef AUI_WARNING_FIXES
; 6831 : 	CvUnitEntry* pMissionaryInfo = GC.getUnitInfo(eMissionary);
; 6832 : 	if (!pMissionaryInfo)
; 6833 : 	{
; 6834 : 		return false;
; 6835 : 	}
; 6836 : 	int iMissionaryMoves = pMissionaryInfo->GetMoves();
; 6837 : #else
; 6838 : 	int iMissionaryMoves = GC.getUnitInfo(eMissionary)->GetMoves();

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	ecx, eax
	call	?GetMoves@CvUnitEntry@@QBEHXZ		; CvUnitEntry::GetMoves

; 6839 : #endif
; 6840 : 
; 6841 : 	CvCity* pCapital = m_pPlayer->getCapitalCity();

	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR _iMissionaryMoves$[esp+28], eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	ebp, eax

; 6842 : 	if(pCapital == NULL)

	test	ebp, ebp
	jne	SHORT $LN23@HaveNearby
	pop	edi

; 6843 : 	{
; 6844 : 		return false;

	xor	al, al
	pop	ebp

; 6910 : }

	add	esp, 20					; 00000014H
	ret	8
$LN23@HaveNearby:
	push	ebx
	push	esi

; 6845 : 	}
; 6846 : 
; 6847 : 	for(int iPlayer = 0; iPlayer < MAX_PLAYERS; iPlayer++)

	xor	esi, esi
	mov	DWORD PTR _iPlayer$228895[esp+36], esi
	xor	ebx, ebx
	jmp	SHORT $LN22@HaveNearby
	npad	5
$LL80@HaveNearby:
	mov	edi, DWORD PTR _this$[esp+36]
$LN22@HaveNearby:

; 6848 : 	{
; 6849 : 		PlayerTypes ePlayer = (PlayerTypes)iPlayer;
; 6850 : 
; 6851 : 		// Must be someone else
; 6852 : 		if(ePlayer == m_pPlayer->GetID())

	mov	ecx, DWORD PTR [edi+4]
	cmp	esi, DWORD PTR [ecx+44]
	je	$LN21@HaveNearby

; 6853 : 		{
; 6854 : 			continue;
; 6855 : 
; 6856 : 		}
; 6857 : 		CvPlayer& kPlayer = GET_PLAYER(ePlayer);

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 6858 : 		if(kPlayer.isAlive())

	cmp	BYTE PTR [ebx+edx+2256], 0
	lea	edi, DWORD PTR [ebx+edx]
	je	$LN21@HaveNearby

; 6859 : 		{
; 6860 : 			if(kPlayer.isMinorCiv())

	mov	ecx, edi
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	test	al, al
	je	SHORT $LN17@HaveNearby

; 6861 : 			{
; 6862 : #ifdef NQ_AI_GIMP_NO_MINOR_SPREAD //EAP:  NQMP_Bing - AI cannot spread religion to City-States
; 6863 : 				if (GC.getGame().isOption("GAMEOPTION_AI_TWEAKS") || GC.getGame().isOption("GAMEOPTION_AI_GIMP_NO_MINOR_RELIGION_SPREAD"))

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	OFFSET $SG228907
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	test	al, al
	jne	$LN21@HaveNearby
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	OFFSET $SG228908
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	test	al, al

; 6865 : #endif
; 6866 : 				bStartedOwnReligion = false;
; 6867 : 			}
; 6868 : 			else

	je	SHORT $LN6@HaveNearby

; 6864 : 					continue;

	jmp	$LN21@HaveNearby
$LN17@HaveNearby:

; 6869 : 			{
; 6870 : 				if (!kPlayer.isBarbarian())

	mov	ecx, edi
	call	?isBarbarian@CvPlayer@@QBE_NXZ		; CvPlayer::isBarbarian
	test	al, al
	jne	SHORT $LN10@HaveNearby

; 6871 : 				{
; 6872 : #ifdef NQM_AI_GIMP_NO_RELIGION_SPREAD
; 6873 : 					if ((GC.getGame().isOption("GAMEOPTION_AI_TWEAKS") || GC.getGame().isOption("GAMEOPTION_AI_GIMP_NO_RELIGION_SPREAD")) && kPlayer.isHuman())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	OFFSET $SG228913
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	test	al, al
	jne	SHORT $LN11@HaveNearby
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	OFFSET $SG228914
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	test	al, al
	je	SHORT $LN12@HaveNearby
$LN11@HaveNearby:
	mov	ecx, edi
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	test	al, al
	jne	$LN21@HaveNearby
$LN12@HaveNearby:

; 6874 : 						continue;
; 6875 : #endif
; 6876 : 					if (m_pPlayer->GetDiplomacyAI()->IsPlayerAgreeNotToConvert(ePlayer))

	mov	eax, DWORD PTR _this$[esp+36]
	mov	ecx, DWORD PTR [eax+4]
	push	esi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?IsPlayerAgreeNotToConvert@CvDiplomacyAI@@QAE_NW4PlayerTypes@@@Z ; CvDiplomacyAI::IsPlayerAgreeNotToConvert
	test	al, al
	jne	$LN21@HaveNearby
$LN10@HaveNearby:

; 6877 : 					{
; 6878 : 						continue;
; 6879 : 					}
; 6880 : 				}
; 6881 : 
; 6882 : 				if(kPlayer.GetReligionAI()->GetReligionToSpread() > RELIGION_PANTHEON)

	mov	ecx, edi
	call	?GetReligionAI@CvPlayer@@QBEPAVCvReligionAI@@XZ ; CvPlayer::GetReligionAI
	mov	ecx, eax
	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread
	test	eax, eax

; 6883 : 				{
; 6884 : 					bStartedOwnReligion = true;
; 6885 : 				}
; 6886 : 				else
; 6887 : 				{
; 6888 : 					bStartedOwnReligion = false;
; 6889 : 				}
; 6890 : 			}
; 6891 : 
; 6892 : 			if(!bStartedOwnReligion || bCanIncludeReligionStarter)

	jle	SHORT $LN6@HaveNearby
	cmp	BYTE PTR _bCanIncludeReligionStarter$[esp+32], 0
	je	SHORT $LN21@HaveNearby
$LN6@HaveNearby:

; 6893 : 			{
; 6894 : 				for(CvCity* pCity = kPlayer.firstCity(&iLoop); pCity != NULL; pCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$[esp+40]
	push	ecx
	mov	ecx, edi
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN78@HaveNearby
	npad	2
$LL5@HaveNearby:

; 6895 : 				{
; 6896 : 					// Revealed and not currently our religion
; 6897 : 					if(pCity->isRevealed(eTeam, false) && pCity->GetCityReligions()->GetReligiousMajority() != eReligion)

	mov	edx, DWORD PTR $T237310[esp+36]
	push	0
	push	edx
	mov	ecx, esi
	call	?isRevealed@CvCity@@QBE_NW4TeamTypes@@_N@Z ; CvCity::isRevealed
	test	al, al
	je	SHORT $LN4@HaveNearby
	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eReligion$[esp+32]
	je	SHORT $LN4@HaveNearby

; 6898 : 					{
; 6899 : 						// Within 10 times Missionary movement allowance of our
; 6900 : 						if(plotDistance(pCapital->getX(), pCapital->getY(), pCity->getX(), pCity->getY()) <= (iMissionaryMoves * GC.getRELIGION_MISSIONARY_RANGE_IN_TURNS()))

	mov	eax, DWORD PTR [esi+108]
	mov	ecx, DWORD PTR [esi+96]
	mov	edx, DWORD PTR [ebp+108]
	push	eax
	mov	eax, DWORD PTR [ebp+96]
	push	ecx
	push	edx
	push	eax
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3432
	imul	ecx, DWORD PTR _iMissionaryMoves$[esp+52]
	add	esp, 16					; 00000010H
	cmp	eax, ecx
	jle	SHORT $LN73@HaveNearby
$LN4@HaveNearby:

; 6893 : 			{
; 6894 : 				for(CvCity* pCity = kPlayer.firstCity(&iLoop); pCity != NULL; pCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$[esp+40]
	push	edx
	mov	ecx, edi
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LL5@HaveNearby
$LN78@HaveNearby:
	mov	esi, DWORD PTR _iPlayer$228895[esp+36]
$LN21@HaveNearby:

; 6845 : 	}
; 6846 : 
; 6847 : 	for(int iPlayer = 0; iPlayer < MAX_PLAYERS; iPlayer++)

	inc	esi
	add	ebx, 63236				; 0000f704H
	cmp	ebx, 4047104				; 003dc100H
	mov	DWORD PTR _iPlayer$228895[esp+36], esi
	jl	$LL80@HaveNearby
	pop	esi
	pop	ebx
	pop	edi

; 6903 : 						}
; 6904 : 					}
; 6905 : 				}
; 6906 : 			}
; 6907 : 		}
; 6908 : 	}
; 6909 : 	return false;

	xor	al, al
	pop	ebp

; 6910 : }

	add	esp, 20					; 00000014H
	ret	8
$LN73@HaveNearby:
	pop	esi
	pop	ebx
	pop	edi

; 6901 : 						{
; 6902 : 							return true;

	mov	al, 1
	pop	ebp

; 6910 : }

	add	esp, 20					; 00000014H
	ret	8
?HaveNearbyConversionTarget@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ENDP ; CvReligionAI::HaveNearbyConversionTarget
_TEXT	ENDS
PUBLIC	?FaithBuildingAvailable@CvReligionAI@@ABE?AW4BuildingClassTypes@@W4ReligionTypes@@@Z ; CvReligionAI::FaithBuildingAvailable
EXTRN	?IsBuildingClassEnabled@CvReligionBeliefs@@QBE_NW4BuildingClassTypes@@@Z:PROC ; CvReligionBeliefs::IsBuildingClassEnabled
; Function compile flags: /Ogtpy
;	COMDAT ?FaithBuildingAvailable@CvReligionAI@@ABE?AW4BuildingClassTypes@@W4ReligionTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
?FaithBuildingAvailable@CvReligionAI@@ABE?AW4BuildingClassTypes@@W4ReligionTypes@@@Z PROC ; CvReligionAI::FaithBuildingAvailable, COMDAT
; _this$ = ecx

; 6950 : {

	push	ebx
	push	esi
	mov	ebx, ecx

; 6951 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 6952 : 	std::vector<BuildingClassTypes> aeFaithBuildings;
; 6953 : #endif
; 6954 : 	CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 6955 : 	const CvReligion* pMyReligion = pReligions->GetReligion(eReligion, m_pPlayer->GetID());

	mov	ecx, DWORD PTR [ebx+4]
	mov	edx, DWORD PTR [ecx+44]
	mov	ecx, DWORD PTR _eReligion$[esp+8]
	push	edx
	push	ecx
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	edi, eax

; 6956 : 
; 6957 : 	if (pMyReligion)

	test	edi, edi
	je	SHORT $LN4@FaithBuild

; 6958 : 	{
; 6959 : #ifdef AUI_WARNING_FIXES
; 6960 : 		for (uint iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)
; 6961 : #else
; 6962 : 		for (int iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	esi, esi
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	test	eax, eax
	jle	SHORT $LN4@FaithBuild
	add	edi, 152				; 00000098H
	npad	1
$LL6@FaithBuild:

; 6963 : #endif
; 6964 : 		{
; 6965 : 			if (pMyReligion->m_Beliefs.IsBuildingClassEnabled((BuildingClassTypes)iI))

	push	esi
	mov	ecx, edi
	call	?IsBuildingClassEnabled@CvReligionBeliefs@@QBE_NW4BuildingClassTypes@@@Z ; CvReligionBeliefs::IsBuildingClassEnabled
	test	al, al
	je	SHORT $LN5@FaithBuild

; 6966 : 			{
; 6967 : 				BuildingTypes eBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings((BuildingClassTypes)iI);

	mov	ecx, DWORD PTR [ebx+4]
	push	esi
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings

; 6968 : 				if(eBuilding != NO_BUILDING)

	cmp	eax, -1
	je	SHORT $LN5@FaithBuild

; 6969 : 				{
; 6970 : 					CvBuildingEntry* pBuildingEntry = GC.getBuildingInfo(eBuilding);

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo

; 6971 : 					if (pBuildingEntry && pBuildingEntry->GetYieldChange(YIELD_FAITH) > 0)

	test	eax, eax
	je	SHORT $LN5@FaithBuild
	push	5
	mov	ecx, eax
	call	?GetYieldChange@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetYieldChange
	test	eax, eax
	jg	SHORT $LN17@FaithBuild
$LN5@FaithBuild:

; 6958 : 	{
; 6959 : #ifdef AUI_WARNING_FIXES
; 6960 : 		for (uint iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)
; 6961 : #else
; 6962 : 		for (int iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	esi
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	esi, eax
	jl	SHORT $LL6@FaithBuild
$LN4@FaithBuild:
	pop	edi
	pop	esi

; 6977 : #endif
; 6978 : 					}
; 6979 : 				}
; 6980 : 			}
; 6981 : 		}
; 6982 : 	}
; 6983 : 
; 6984 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 6985 : 	return aeFaithBuildings;
; 6986 : #else
; 6987 : 	return NO_BUILDINGCLASS;

	or	eax, -1
	pop	ebx

; 6988 : #endif
; 6989 : }

	ret	4
$LN17@FaithBuild:
	pop	edi

; 6972 : 					{
; 6973 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 6974 : 						aeFaithBuildings.push_back((BuildingClassTypes)iI);
; 6975 : #else
; 6976 : 						return (BuildingClassTypes)iI;

	mov	eax, esi
	pop	esi
	pop	ebx

; 6988 : #endif
; 6989 : }

	ret	4
?FaithBuildingAvailable@CvReligionAI@@ABE?AW4BuildingClassTypes@@W4ReligionTypes@@@Z ENDP ; CvReligionAI::FaithBuildingAvailable
_TEXT	ENDS
PUBLIC	?CanBuyNonFaithBuilding@CvReligionAI@@ABE_NXZ	; CvReligionAI::CanBuyNonFaithBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?CanBuyNonFaithBuilding@CvReligionAI@@ABE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iLoop$ = -4						; size = 4
?CanBuyNonFaithBuilding@CvReligionAI@@ABE_NXZ PROC	; CvReligionAI::CanBuyNonFaithBuilding, COMDAT
; _this$ = ecx

; 6993 : {

	sub	esp, 8

; 6994 : 	PlayerTypes ePlayer = m_pPlayer->GetID();

	mov	eax, DWORD PTR [ecx+4]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR [eax+44]

; 6995 : 
; 6996 : 	int iLoop;
; 6997 : 	CvCity* pLoopCity;
; 6998 : 	for(pLoopCity = GET_PLAYER(ePlayer).firstCity(&iLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(ePlayer).nextCity(&iLoop))

	imul	ebp, 63236				; 0000f704H
	push	esi
	push	edi
	mov	DWORD PTR _this$[esp+24], ecx
	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	edx, DWORD PTR _iLoop$[esp+28]
	add	ecx, ebp
	push	edx
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	ebx, eax
	test	ebx, ebx
	je	$LN7@CanBuyNonF
	npad	11
$LL9@CanBuyNonF:

; 6999 : 	{
; 7000 : #ifdef AUI_WARNING_FIXES
; 7001 : 		for (uint iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)
; 7002 : #else
; 7003 : 		for (int iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	edi, edi
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	test	eax, eax
	jle	SHORT $LN8@CanBuyNonF
$LL26@CanBuyNonF:

; 7004 : #endif
; 7005 : 		{
; 7006 : 			BuildingTypes eBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings(iI);

	mov	eax, DWORD PTR _this$[esp+24]
	mov	ecx, DWORD PTR [eax+4]
	push	edi
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings
	mov	esi, eax

; 7007 : 			if(eBuilding != NO_BUILDING)

	cmp	esi, -1
	je	SHORT $LN5@CanBuyNonF

; 7008 : 			{
; 7009 : 				CvBuildingEntry* pBuildingEntry = GC.GetGameBuildings()->GetEntry(eBuilding);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBuildings@CvGlobals@@QBEPAVCvBuildingXMLEntries@@XZ ; CvGlobals::GetGameBuildings
	mov	ecx, eax
	call	?GetEntry@CvBuildingXMLEntries@@QAEPAVCvBuildingEntry@@H@Z ; CvBuildingXMLEntries::GetEntry

; 7010 : 
; 7011 : 				// Check to make sure this isn't a Faith-generating building
; 7012 : 				if(pBuildingEntry && pBuildingEntry->GetYieldChange(YIELD_FAITH) == 0)

	test	eax, eax
	je	SHORT $LN5@CanBuyNonF
	push	5
	mov	ecx, eax
	call	?GetYieldChange@CvBuildingEntry@@QBEHH@Z ; CvBuildingEntry::GetYieldChange
	test	eax, eax
	jne	SHORT $LN5@CanBuyNonF

; 7013 : 				{
; 7014 : 					if(pLoopCity->IsCanPurchase(true, true, (UnitTypes)-1, eBuilding, (ProjectTypes)-1, YIELD_FAITH))

	push	5
	push	-1
	push	esi
	push	-1
	push	1
	push	1
	mov	ecx, ebx
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	test	al, al
	jne	SHORT $LN22@CanBuyNonF
$LN5@CanBuyNonF:

; 6999 : 	{
; 7000 : #ifdef AUI_WARNING_FIXES
; 7001 : 		for (uint iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)
; 7002 : #else
; 7003 : 		for (int iI = 0; iI < GC.getNumBuildingClassInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	edi
	call	?getNumBuildingClassInfos@CvGlobals@@QAEHXZ ; CvGlobals::getNumBuildingClassInfos
	cmp	edi, eax
	jl	SHORT $LL26@CanBuyNonF
$LN8@CanBuyNonF:

; 6995 : 
; 6996 : 	int iLoop;
; 6997 : 	CvCity* pLoopCity;
; 6998 : 	for(pLoopCity = GET_PLAYER(ePlayer).firstCity(&iLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(ePlayer).nextCity(&iLoop))

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	edx, DWORD PTR _iLoop$[esp+28]
	add	ecx, ebp
	push	edx
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	ebx, eax
	test	ebx, ebx
	jne	$LL9@CanBuyNonF
$LN7@CanBuyNonF:
	pop	edi
	pop	esi
	pop	ebp

; 7017 : 					}
; 7018 : 				}
; 7019 : 			}
; 7020 : 		}
; 7021 : 	}
; 7022 : 	return false;

	xor	al, al
	pop	ebx

; 7023 : }

	add	esp, 8
	ret	0
$LN22@CanBuyNonF:
	pop	edi
	pop	esi
	pop	ebp

; 7015 : 					{
; 7016 : 						return true;

	mov	al, 1
	pop	ebx

; 7023 : }

	add	esp, 8
	ret	0
?CanBuyNonFaithBuilding@CvReligionAI@@ABE_NXZ ENDP	; CvReligionAI::CanBuyNonFaithBuilding
_TEXT	ENDS
PUBLIC	?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z ; CvReligionAI::LogBeliefChoices
EXTRN	?getShortDescription@CvBeliefEntry@@QBEPBDXZ:PROC ; CvBeliefEntry::getShortDescription
EXTRN	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationShortDescription
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__ehfuncinfo$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$7
	DD	04H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$8
	DD	04H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$9
	DD	04H
	DD	FLAT:__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$10
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z
_TEXT	SEGMENT
$T237462 = -216						; size = 28
$T237461 = -216						; size = 28
$T237460 = -216						; size = 28
$T237459 = -216						; size = 28
$T237458 = -216						; size = 28
_strBaseString$229093 = -188				; size = 28
_strOutBuf$229092 = -160				; size = 28
_strDesc$229096 = -132					; size = 28
_strTemp$229094 = -104					; size = 28
_playerName$229095 = -76				; size = 28
_elem$237559 = -48					; size = 8
$T237457 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_beliefChoices$ = 8					; size = 4
_iChoice$ = 12						; size = 4
?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z PROC ; CvReligionAI::LogBeliefChoices, COMDAT
; _this$ = ecx

; 7220 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 204				; 000000ccH
	push	esi
	mov	esi, ecx

; 7221 : 	if(GC.getLogging() && GC.getAILogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	$LN4@LogBeliefC
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getAILogging@CvGlobals@@QAE_NXZ	; CvGlobals::getAILogging
	test	al, al
	je	$LN4@LogBeliefC
	push	ebx
	push	ebp
	push	edi

; 7222 : 	{
; 7223 : 		CvString strOutBuf;

	lea	ecx, DWORD PTR _strOutBuf$229092[esp+232]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7224 : 		CvString strBaseString;

	lea	ecx, DWORD PTR _strBaseString$229093[esp+232]
	mov	DWORD PTR __$EHRec$[esp+240], 0
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7225 : 		CvString strTemp;

	lea	ecx, DWORD PTR _strTemp$229094[esp+232]
	mov	BYTE PTR __$EHRec$[esp+240], 1
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7226 : 		CvString playerName;

	lea	ecx, DWORD PTR _playerName$229095[esp+232]
	mov	BYTE PTR __$EHRec$[esp+240], 2
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7227 : 		CvString strDesc;

	lea	ecx, DWORD PTR _strDesc$229096[esp+232]
	mov	BYTE PTR __$EHRec$[esp+240], 3
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7228 : 		BeliefTypes eBelief;
; 7229 : 
; 7230 : 		// Find the name of this civ
; 7231 : 		playerName = m_pPlayer->getCivilizationShortDescription();

	mov	ecx, DWORD PTR [esi+4]
	mov	bl, 4
	mov	BYTE PTR __$EHRec$[esp+240], bl
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	lea	ecx, DWORD PTR _playerName$229095[esp+232]
	test	eax, eax
	je	SHORT $LN34@LogBeliefC
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN33@LogBeliefC
$LN34@LogBeliefC:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN33@LogBeliefC:

; 7232 : 
; 7233 : 		// Open the log file
; 7234 : 		FILogFile* pLog;
; 7235 : 		pLog = LOGFILEMGR.GetLog(GC.getGame().GetGameReligions()->GetLogFileName(), FILogFile::kDontTimeStamp);

	call	?GetInstance@FILogFileMgr@@SAAAV1@XZ	; FILogFileMgr::GetInstance
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	esi, eax
	lea	eax, DWORD PTR $T237457[esp+232]
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetLogFileName@CvGameReligions@@QBE?AVCvString@@XZ ; CvGameReligions::GetLogFileName
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+240], 5
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	edx, DWORD PTR [esi]
	push	0
	push	1
	push	eax
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, esi
	call	eax
	lea	ecx, DWORD PTR $T237457[esp+232]
	mov	ebp, eax
	mov	BYTE PTR __$EHRec$[esp+240], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7236 : 
; 7237 : 		// Get the leading info for this line
; 7238 : 		strBaseString.Format("%03d, %d, ", GC.getGame().getElapsedGameTurns(), GC.getGame().getGameTurnYear());

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	esi, ecx
	call	?getGameTurnYear@CvGame@@QAEHXZ		; CvGame::getGameTurnYear
	push	eax
	mov	ecx, esi
	call	?getElapsedGameTurns@CvGame@@QBEHXZ	; CvGame::getElapsedGameTurns
	push	eax
	lea	ecx, DWORD PTR _strBaseString$229093[esp+240]
	push	OFFSET $SG229100
	push	ecx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format

; 7239 : 		strBaseString += playerName + ", ";

	push	OFFSET $SG229102
	lea	edx, DWORD PTR _playerName$229095[esp+252]
	push	edx
	lea	eax, DWORD PTR $T237458[esp+256]
	push	eax
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 28					; 0000001cH
	push	eax
	lea	ecx, DWORD PTR _strBaseString$229093[esp+236]
	mov	BYTE PTR __$EHRec$[esp+244], 6
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T237458[esp+232]
	mov	BYTE PTR __$EHRec$[esp+240], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7240 : 
; 7241 : 		// Dump out the weight of each belief item
; 7242 : 		for(int iI = 0; iI < beliefChoices.size(); iI++)

	mov	edi, DWORD PTR _beliefChoices$[esp+228]
	xor	esi, esi
	cmp	DWORD PTR [edi+4], esi
	jle	$LN1@LogBeliefC
$LL3@LogBeliefC:

; 7243 : 		{
; 7244 : 			eBelief = beliefChoices.GetElement(iI);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ecx+esi*8]

; 7245 : 			strDesc = GetLocalizedText(GC.GetGameBeliefs()->GetEntry(eBelief)->getShortDescription());

	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ecx, eax
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?getShortDescription@CvBeliefEntry@@QBEPBDXZ ; CvBeliefEntry::getShortDescription
	push	eax
	lea	edx, DWORD PTR $T237459[esp+236]
	push	edx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strDesc$229096[esp+236]
	mov	BYTE PTR __$EHRec$[esp+244], 7
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T237459[esp+232]
	mov	BYTE PTR __$EHRec$[esp+240], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7246 : 			strTemp.Format("Belief, %s, %d", strDesc.GetCString(), beliefChoices.GetWeight(iI));

	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+esi*8]
	mov	eax, DWORD PTR [eax+esi*8+4]
	mov	DWORD PTR _elem$237559[esp+232], ecx
	push	eax
	lea	ecx, DWORD PTR _strDesc$229096[esp+236]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	edx, DWORD PTR _strTemp$229094[esp+240]
	push	OFFSET $SG229108
	push	edx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format

; 7247 : 			strOutBuf = strBaseString + strTemp;

	lea	eax, DWORD PTR _strTemp$229094[esp+248]
	push	eax
	lea	ecx, DWORD PTR _strBaseString$229093[esp+252]
	push	ecx
	lea	edx, DWORD PTR $T237460[esp+256]
	push	edx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 28					; 0000001cH
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+240], 8
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$229092[esp+236]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	lea	ecx, DWORD PTR $T237460[esp+232]
	mov	BYTE PTR __$EHRec$[esp+240], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7248 : 			pLog->Msg(strOutBuf);

	lea	ecx, DWORD PTR _strOutBuf$229092[esp+232]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR [ebp]
	mov	edx, DWORD PTR [ecx]
	push	eax
	push	ebp
	call	edx
	inc	esi
	add	esp, 8
	cmp	esi, DWORD PTR [edi+4]
	jl	$LL3@LogBeliefC
$LN1@LogBeliefC:

; 7249 : 		}
; 7250 : 
; 7251 : 		// Finally the chosen one
; 7252 : 		eBelief = (BeliefTypes)iChoice;
; 7253 : 		strDesc = GetLocalizedText(GC.GetGameBeliefs()->GetEntry(eBelief)->getShortDescription());

	mov	eax, DWORD PTR _iChoice$[esp+228]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ecx, eax
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?getShortDescription@CvBeliefEntry@@QBEPBDXZ ; CvBeliefEntry::getShortDescription
	push	eax
	lea	ecx, DWORD PTR $T237461[esp+236]
	push	ecx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strDesc$229096[esp+236]
	mov	BYTE PTR __$EHRec$[esp+244], 9
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T237461[esp+232]
	mov	BYTE PTR __$EHRec$[esp+240], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7254 : 		strTemp.Format("CHOSEN, %s", strDesc.GetCString());

	lea	ecx, DWORD PTR _strDesc$229096[esp+232]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	edx, DWORD PTR _strTemp$229094[esp+236]
	push	OFFSET $SG229112
	push	edx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format

; 7255 : 		strOutBuf = strBaseString + strTemp;

	lea	eax, DWORD PTR _strTemp$229094[esp+244]
	push	eax
	lea	ecx, DWORD PTR _strBaseString$229093[esp+248]
	push	ecx
	lea	edx, DWORD PTR $T237462[esp+252]
	push	edx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 24					; 00000018H
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+240], 10		; 0000000aH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strOutBuf$229092[esp+236]
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	lea	ecx, DWORD PTR $T237462[esp+232]
	mov	BYTE PTR __$EHRec$[esp+240], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 7256 : 		pLog->Msg(strOutBuf);

	lea	ecx, DWORD PTR _strOutBuf$229092[esp+232]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR [ebp]
	mov	edx, DWORD PTR [ecx]
	push	eax
	push	ebp
	call	edx
	add	esp, 8

; 7257 : 	}

	lea	ecx, DWORD PTR _strDesc$229096[esp+232]
	mov	BYTE PTR __$EHRec$[esp+240], 3
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _playerName$229095[esp+232]
	mov	BYTE PTR __$EHRec$[esp+240], 2
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strTemp$229094[esp+232]
	mov	BYTE PTR __$EHRec$[esp+240], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strBaseString$229093[esp+232]
	mov	BYTE PTR __$EHRec$[esp+240], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strOutBuf$229092[esp+232]
	mov	DWORD PTR __$EHRec$[esp+240], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	pop	edi
	pop	ebp
	pop	ebx
$LN4@LogBeliefC:

; 7258 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+220]
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 216				; 000000d8H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$0:
	lea	ecx, DWORD PTR _strOutBuf$229092[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$1:
	lea	ecx, DWORD PTR _strBaseString$229093[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$2:
	lea	ecx, DWORD PTR _strTemp$229094[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$3:
	lea	ecx, DWORD PTR _playerName$229095[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$4:
	lea	ecx, DWORD PTR _strDesc$229096[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$5:
	lea	ecx, DWORD PTR $T237457[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$6:
	lea	ecx, DWORD PTR $T237458[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$7:
	lea	ecx, DWORD PTR $T237459[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$8:
	lea	ecx, DWORD PTR $T237460[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$9:
	lea	ecx, DWORD PTR $T237461[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z$10:
	lea	ecx, DWORD PTR $T237462[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z:
	mov	eax, OFFSET __ehfuncinfo$?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z ENDP ; CvReligionAI::LogBeliefChoices
PUBLIC	?GetBestCityFaithUnitPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4UnitTypes@@W4ReligionTypes@@@Z ; CvReligionAIHelpers::GetBestCityFaithUnitPurchase
EXTRN	?GetReligionSpreads@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetReligionSpreads
EXTRN	?GetMissionaryExtraSpreads@CvCityBuildings@@QBEHXZ:PROC ; CvCityBuildings::GetMissionaryExtraSpreads
EXTRN	?GetSpecialUnitType@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetSpecialUnitType
EXTRN	?IsSpreadReligion@CvUnitEntry@@QBE_NXZ:PROC	; CvUnitEntry::IsSpreadReligion
; Function compile flags: /Ogtpy
;	COMDAT ?GetBestCityFaithUnitPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4UnitTypes@@W4ReligionTypes@@@Z
_TEXT	SEGMENT
_bReligious$ = -13					; size = 1
_pHolyCity$ = -12					; size = 4
_iLoop$ = -8						; size = 4
_pMyReligion$ = -4					; size = 4
_kPlayer$ = 8						; size = 4
_eUnit$ = 12						; size = 4
_eReligion$ = 16					; size = 4
?GetBestCityFaithUnitPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4UnitTypes@@W4ReligionTypes@@@Z PROC ; CvReligionAIHelpers::GetBestCityFaithUnitPurchase, COMDAT

; 7263 : {

	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 7264 : 	bool bReligious = false;
; 7265 : 	CvCity *pHolyCity = NULL;
; 7266 : 	SpecialUnitTypes eSpecialUnitGreatPerson = (SpecialUnitTypes) GC.getInfoTypeForString("SPECIALUNIT_PEOPLE");

	push	0
	push	OFFSET $SG229123
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	BYTE PTR _bReligious$[esp+40], 0
	mov	DWORD PTR _pHolyCity$[esp+40], 0
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 7267 : 	int iLoop;
; 7268 : 	CvCity* pLoopCity;
; 7269 : 
; 7270 : 	CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	esi, eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 7271 : 	const CvReligion* pMyReligion = pReligions->GetReligion(eReligion, kPlayer.GetID());

	mov	ebx, DWORD PTR _kPlayer$[esp+28]
	mov	ecx, DWORD PTR [ebx+44]
	mov	edx, DWORD PTR _eReligion$[esp+28]
	push	ecx
	push	edx
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 7272 : 
; 7273 : 	CvUnitEntry *pkUnitEntry = GC.getUnitInfo(eUnit);

	mov	ebp, DWORD PTR _eUnit$[esp+28]
	push	ebp
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _pMyReligion$[esp+36], eax
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	edi, eax

; 7274 : 	if (pkUnitEntry)

	test	edi, edi
	je	$LN8@GetBestCit

; 7275 : 	{
; 7276 : 		// Religious unit?
; 7277 : 		if (pkUnitEntry->IsSpreadReligion() || pkUnitEntry->IsRemoveHeresy())

	mov	ecx, edi
	call	?IsSpreadReligion@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsSpreadReligion
	test	al, al
	jne	SHORT $LN27@GetBestCit
	mov	ecx, edi
	call	?IsRemoveHeresy@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsRemoveHeresy
	test	al, al
	jne	SHORT $LN27@GetBestCit

; 7278 : 		{
; 7279 : 			bReligious = true;
; 7280 : 		}
; 7281 : 	
; 7282 : 		// Great person?
; 7283 : 		else if (pkUnitEntry->GetSpecialUnitType() == eSpecialUnitGreatPerson)

	mov	ecx, edi
	call	?GetSpecialUnitType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetSpecialUnitType
	cmp	eax, esi
	jne	$LN8@GetBestCit

; 7284 : 		{
; 7285 : 			for (pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$[esp+36]
	push	eax
	mov	ecx, ebx
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	$LN5@GetBestCit
$LL24@GetBestCit:

; 7286 : 			{
; 7287 : 				if (pLoopCity->IsCanPurchase(true/*bTestPurchaseCost*/, true/*bTestTrainable*/, eUnit, NO_BUILDING, NO_PROJECT, YIELD_FAITH))

	push	5
	push	-1
	push	-1
	push	ebp
	push	1
	push	1
	mov	ecx, esi
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	test	al, al
	jne	$LN111@GetBestCit
	push	0
	lea	ecx, DWORD PTR _iLoop$[esp+36]
	push	ecx
	mov	ecx, ebx
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LL24@GetBestCit
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 7362 : }

	add	esp, 16					; 00000010H
	ret	0
$LN27@GetBestCit:

; 7288 : 				{
; 7289 : 					return pLoopCity;
; 7290 : 				}
; 7291 : 			}
; 7292 : 			return NULL;
; 7293 : 		}
; 7294 : 	}
; 7295 : 
; 7296 : 	// If religious, try to buy in the city with the Great Mosque first if a Missionary
; 7297 : 	if (bReligious && pMyReligion)

	cmp	DWORD PTR _pMyReligion$[esp+32], 0
	mov	BYTE PTR _bReligious$[esp+32], 1
	je	$LN8@GetBestCit

; 7298 : 	{
; 7299 : 		for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$[esp+36]
	push	edx
	mov	ecx, ebx
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN117@GetBestCit
	npad	6
$LL128@GetBestCit:

; 7300 : 		{
; 7301 : 			if (pLoopCity->getOwner() != kPlayer.GetID())

	mov	eax, DWORD PTR [esi+84]
	cmp	eax, DWORD PTR [ebx+44]
	jne	SHORT $LN18@GetBestCit

; 7302 : 			{
; 7303 : 				continue;
; 7304 : 			}
; 7305 : 
; 7306 : 			if (pLoopCity->GetCityBuildings()->GetMissionaryExtraSpreads() < 1 || pkUnitEntry->GetReligionSpreads() < 1)

	mov	ecx, esi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetMissionaryExtraSpreads@CvCityBuildings@@QBEHXZ ; CvCityBuildings::GetMissionaryExtraSpreads
	cmp	eax, 1
	jl	SHORT $LN18@GetBestCit
	mov	ecx, edi
	call	?GetReligionSpreads@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetReligionSpreads
	cmp	eax, 1
	jl	SHORT $LN18@GetBestCit

; 7307 : 			{
; 7308 : 				continue;
; 7309 : 			}
; 7310 : 
; 7311 : 			if (pLoopCity->GetCityReligions()->GetReligiousMajority() == eReligion)

	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eReligion$[esp+28]
	jne	SHORT $LN18@GetBestCit

; 7312 : 			{
; 7313 : 				if(pLoopCity->IsCanPurchase(true, true, eUnit, NO_BUILDING, NO_PROJECT, YIELD_FAITH))

	push	5
	push	-1
	push	-1
	push	ebp
	push	1
	push	1
	mov	ecx, esi
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	test	al, al
	jne	SHORT $LN111@GetBestCit
$LN18@GetBestCit:

; 7298 : 	{
; 7299 : 		for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$[esp+36]
	push	ecx
	mov	ecx, ebx
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LL128@GetBestCit
$LN117@GetBestCit:

; 7316 : 				}
; 7317 : 			}
; 7318 : 		}
; 7319 : 	}
; 7320 : 
; 7321 : 	// If religious, next try to buy in the holy city, assuming it hasn't been converted
; 7322 : 	if (bReligious && pMyReligion)
; 7323 : 	{
; 7324 : 		CvPlot* pHolyCityPlot = GC.getMap().plot(pMyReligion->m_iHolyCityX, pMyReligion->m_iHolyCityY);

	mov	edx, DWORD PTR _pMyReligion$[esp+32]
	mov	ebp, DWORD PTR [edx+12]
	mov	eax, edx
	mov	eax, DWORD PTR [eax+8]
	cmp	eax, -2147483647			; 80000001H
	je	$LN8@GetBestCit
	cmp	ebp, -2147483647			; 80000001H
	je	$LN8@GetBestCit
	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [ebx+4056], 0
	mov	ecx, DWORD PTR [ebx+4020]
	je	SHORT $LN58@GetBestCit
	test	eax, eax
	jge	SHORT $LN60@GetBestCit
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN62@GetBestCit
$LN111@GetBestCit:
	pop	edi

; 7314 : 				{
; 7315 : 					return pLoopCity;

	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx

; 7362 : }

	add	esp, 16					; 00000010H
	ret	0

; 7316 : 				}
; 7317 : 			}
; 7318 : 		}
; 7319 : 	}
; 7320 : 
; 7321 : 	// If religious, next try to buy in the holy city, assuming it hasn't been converted
; 7322 : 	if (bReligious && pMyReligion)
; 7323 : 	{
; 7324 : 		CvPlot* pHolyCityPlot = GC.getMap().plot(pMyReligion->m_iHolyCityX, pMyReligion->m_iHolyCityY);

$LN60@GetBestCit:
	cmp	eax, ecx
	jl	SHORT $LN58@GetBestCit
	cdq
	idiv	ecx
	mov	esi, edx
	jmp	SHORT $LN62@GetBestCit
$LN58@GetBestCit:
	mov	esi, eax
$LN62@GetBestCit:
	cmp	BYTE PTR [ebx+4057], 0
	mov	edi, DWORD PTR [ebx+4024]
	je	SHORT $LN119@GetBestCit
	test	ebp, ebp
	jge	SHORT $LN70@GetBestCit
	mov	eax, ebp
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN72@GetBestCit
$LN70@GetBestCit:
	cmp	ebp, edi
	jl	SHORT $LN119@GetBestCit
	mov	eax, ebp
	cdq
	idiv	edi
	jmp	SHORT $LN72@GetBestCit
$LN119@GetBestCit:
	mov	edx, ebp
$LN72@GetBestCit:
	test	esi, esi
	jl	$LN127@GetBestCit
	cmp	esi, ecx
	jge	$LN127@GetBestCit
	test	edx, edx
	jl	$LN127@GetBestCit
	cmp	edx, edi
	jge	$LN127@GetBestCit
	imul	ecx, edx
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebx+4068]

; 7325 : 		if (pHolyCityPlot)

	test	ecx, ecx
	je	SHORT $LN127@GetBestCit

; 7326 : 		{
; 7327 : 			pHolyCity = pHolyCityPlot->getPlotCity();

	mov	eax, DWORD PTR [ecx+104]
	test	eax, eax
	jl	SHORT $LN86@GetBestCit
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN86@GetBestCit
	mov	ecx, DWORD PTR [ecx+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pHolyCity$[esp+32], eax

; 7328 : 
; 7329 : 			if (pHolyCity && (pHolyCity->getOwner() == kPlayer.GetID()))

	test	eax, eax
	je	SHORT $LN127@GetBestCit
	mov	ecx, DWORD PTR _kPlayer$[esp+28]
	mov	edx, eax
	mov	eax, DWORD PTR [edx+84]
	cmp	eax, DWORD PTR [ecx+44]
	jne	SHORT $LN127@GetBestCit

; 7330 : 			{
; 7331 : 				if (pHolyCity->GetCityReligions()->GetReligiousMajority() == eReligion && pHolyCity->IsCanPurchase(true, true, eUnit, NO_BUILDING, NO_PROJECT, YIELD_FAITH))

	mov	ecx, edx
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eReligion$[esp+28]
	jne	SHORT $LN127@GetBestCit
	mov	edx, DWORD PTR _eUnit$[esp+28]
	mov	ecx, DWORD PTR _pHolyCity$[esp+32]
	push	5
	push	-1
	push	-1
	push	edx
	push	1
	push	1
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	test	al, al
	je	SHORT $LN127@GetBestCit

; 7332 : 				{
; 7333 : 					return pHolyCity;

	mov	eax, DWORD PTR _pHolyCity$[esp+32]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 7362 : }

	add	esp, 16					; 00000010H
	ret	0

; 7326 : 		{
; 7327 : 			pHolyCity = pHolyCityPlot->getPlotCity();

$LN86@GetBestCit:
	mov	DWORD PTR _pHolyCity$[esp+32], 0
$LN127@GetBestCit:

; 7328 : 
; 7329 : 			if (pHolyCity && (pHolyCity->getOwner() == kPlayer.GetID()))

	mov	ebx, DWORD PTR _kPlayer$[esp+28]
$LN8@GetBestCit:

; 7334 : 				}
; 7335 : 			}
; 7336 : 		}
; 7337 : 	}
; 7338 : 
; 7339 : 	// Now see if there is another city with our majority religion
; 7340 : 	for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$[esp+36]
	push	eax
	mov	ecx, ebx
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN5@GetBestCit
	mov	edi, DWORD PTR _eUnit$[esp+28]
	mov	ebp, DWORD PTR _pHolyCity$[esp+32]
	npad	4
$LL131@GetBestCit:

; 7341 : 	{
; 7342 : 		if (bReligious && pMyReligion && pLoopCity == pHolyCity)

	cmp	BYTE PTR _bReligious$[esp+32], 0
	je	SHORT $LN4@GetBestCit
	cmp	DWORD PTR _pMyReligion$[esp+32], 0
	je	SHORT $LN4@GetBestCit
	cmp	esi, ebp
	je	SHORT $LN6@GetBestCit
$LN4@GetBestCit:

; 7343 : 		{
; 7344 : 			continue;
; 7345 : 		}
; 7346 : 
; 7347 : 		if (pLoopCity->getOwner() != kPlayer.GetID())

	mov	ecx, DWORD PTR [esi+84]
	cmp	ecx, DWORD PTR [ebx+44]
	jne	SHORT $LN6@GetBestCit

; 7348 : 		{
; 7349 : 			continue;
; 7350 : 		}
; 7351 : 
; 7352 : 		if (pLoopCity->GetCityReligions()->GetReligiousMajority() == eReligion)

	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, DWORD PTR _eReligion$[esp+28]
	jne	SHORT $LN6@GetBestCit

; 7353 : 		{
; 7354 : 			if(pLoopCity->IsCanPurchase(true, true, eUnit, NO_BUILDING, NO_PROJECT, YIELD_FAITH))

	push	5
	push	-1
	push	-1
	push	edi
	push	1
	push	1
	mov	ecx, esi
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	test	al, al
	jne	$LN111@GetBestCit
$LN6@GetBestCit:

; 7334 : 				}
; 7335 : 			}
; 7336 : 		}
; 7337 : 	}
; 7338 : 
; 7339 : 	// Now see if there is another city with our majority religion
; 7340 : 	for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$[esp+36]
	push	edx
	mov	ecx, ebx
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LL131@GetBestCit
$LN5@GetBestCit:
	pop	edi
	pop	esi
	pop	ebp

; 7355 : 			{
; 7356 : 				return pLoopCity;
; 7357 : 			}
; 7358 : 		}
; 7359 : 	}
; 7360 : 
; 7361 : 	return NULL;

	xor	eax, eax
	pop	ebx

; 7362 : }

	add	esp, 16					; 00000010H
	ret	0
?GetBestCityFaithUnitPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4UnitTypes@@W4ReligionTypes@@@Z ENDP ; CvReligionAIHelpers::GetBestCityFaithUnitPurchase
_TEXT	ENDS
PUBLIC	?GetBestCityFaithBuildingPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4BuildingTypes@@W4ReligionTypes@@@Z ; CvReligionAIHelpers::GetBestCityFaithBuildingPurchase
; Function compile flags: /Ogtpy
;	COMDAT ?GetBestCityFaithBuildingPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4BuildingTypes@@W4ReligionTypes@@@Z
_TEXT	SEGMENT
_pHolyCity$ = -8					; size = 4
_iLoop$ = -4						; size = 4
_kPlayer$ = 8						; size = 4
_eBuilding$ = 12					; size = 4
_eReligion$ = 16					; size = 4
?GetBestCityFaithBuildingPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4BuildingTypes@@W4ReligionTypes@@@Z PROC ; CvReligionAIHelpers::GetBestCityFaithBuildingPurchase, COMDAT

; 7365 : {

	sub	esp, 8

; 7366 : 	CvCity *pHolyCity = NULL;
; 7367 : 	CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	DWORD PTR _pHolyCity$[esp+24], 0
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 7368 : 	const CvReligion* pMyReligion = pReligions->GetReligion(eReligion, kPlayer.GetID());

	mov	ecx, DWORD PTR _kPlayer$[esp+20]
	mov	edx, DWORD PTR [ecx+44]
	mov	ecx, DWORD PTR _eReligion$[esp+20]
	push	edx
	push	ecx
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 7369 : 
; 7370 : 	// Try to buy in the holy city first
; 7371 : 	if (pMyReligion)

	test	eax, eax
	je	$LN84@GetBestCit@2

; 7372 : 	{
; 7373 : 		CvPlot* pHolyCityPlot = GC.getMap().plot(pMyReligion->m_iHolyCityX, pMyReligion->m_iHolyCityY);

	mov	ebx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR [eax+8]
	cmp	eax, -2147483647			; 80000001H
	je	$LN84@GetBestCit@2
	cmp	ebx, -2147483647			; 80000001H
	je	$LN84@GetBestCit@2
	mov	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [ebp+4056], 0
	mov	ecx, DWORD PTR [ebp+4020]
	je	SHORT $LN30@GetBestCit@2
	test	eax, eax
	jge	SHORT $LN32@GetBestCit@2
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN34@GetBestCit@2
$LN32@GetBestCit@2:
	cmp	eax, ecx
	jl	SHORT $LN30@GetBestCit@2
	cdq
	idiv	ecx
	mov	esi, edx
	jmp	SHORT $LN34@GetBestCit@2
$LN30@GetBestCit@2:
	mov	esi, eax
$LN34@GetBestCit@2:
	cmp	BYTE PTR [ebp+4057], 0
	mov	edi, DWORD PTR [ebp+4024]
	je	SHORT $LN83@GetBestCit@2
	test	ebx, ebx
	jge	SHORT $LN42@GetBestCit@2
	mov	eax, ebx
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN44@GetBestCit@2
$LN42@GetBestCit@2:
	cmp	ebx, edi
	jl	SHORT $LN83@GetBestCit@2
	mov	eax, ebx
	cdq
	idiv	edi
	jmp	SHORT $LN44@GetBestCit@2
$LN83@GetBestCit@2:
	mov	edx, ebx
$LN44@GetBestCit@2:
	test	esi, esi
	jl	$LN84@GetBestCit@2
	cmp	esi, ecx
	jge	$LN84@GetBestCit@2
	test	edx, edx
	jl	$LN84@GetBestCit@2
	cmp	edx, edi
	jge	SHORT $LN84@GetBestCit@2
	imul	ecx, edx
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebp+4068]

; 7374 : 		if (pHolyCityPlot)

	test	ecx, ecx
	je	SHORT $LN84@GetBestCit@2

; 7375 : 		{
; 7376 : 			pHolyCity = pHolyCityPlot->getPlotCity();

	mov	eax, DWORD PTR [ecx+104]
	test	eax, eax
	jl	SHORT $LN58@GetBestCit@2
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN58@GetBestCit@2
	mov	edx, DWORD PTR [ecx+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	edx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	DWORD PTR _pHolyCity$[esp+24], eax

; 7377 : 
; 7378 : 			if (pHolyCity && (pHolyCity->getOwner() == kPlayer.GetID()) && pHolyCity->IsCanPurchase(true, true, NO_UNIT, eBuilding, NO_PROJECT, YIELD_FAITH))

	test	eax, eax
	je	SHORT $LN84@GetBestCit@2
	mov	ecx, DWORD PTR [eax+84]
	mov	edx, DWORD PTR _kPlayer$[esp+20]
	cmp	ecx, DWORD PTR [edx+44]
	jne	SHORT $LN84@GetBestCit@2
	mov	eax, DWORD PTR _eBuilding$[esp+20]
	mov	ecx, DWORD PTR _pHolyCity$[esp+24]
	push	5
	push	-1
	push	eax
	push	-1
	push	1
	push	1
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	test	al, al
	je	SHORT $LN84@GetBestCit@2

; 7379 : 			{
; 7380 : 				return pHolyCity;

	mov	eax, DWORD PTR _pHolyCity$[esp+24]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 7407 : }

	add	esp, 8
	ret	0

; 7375 : 		{
; 7376 : 			pHolyCity = pHolyCityPlot->getPlotCity();

$LN58@GetBestCit@2:
	mov	DWORD PTR _pHolyCity$[esp+24], 0
$LN84@GetBestCit@2:

; 7381 : 			}
; 7382 : 		}
; 7383 : 	}
; 7384 : 
; 7385 : 	// Now see if there is another city with our majority religion
; 7386 : 	int iLoop;
; 7387 : 	CvCity* pLoopCity;
; 7388 : 	for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	mov	edi, DWORD PTR _kPlayer$[esp+20]
	push	0
	lea	ecx, DWORD PTR _iLoop$[esp+28]
	push	ecx
	mov	ecx, edi
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN4@GetBestCit@2
	mov	ebp, DWORD PTR _pHolyCity$[esp+24]
	mov	ebx, DWORD PTR _eBuilding$[esp+20]
$LL6@GetBestCit@2:

; 7389 : 	{
; 7390 : 		if(pLoopCity == pHolyCity)

	cmp	esi, ebp
	je	SHORT $LN5@GetBestCit@2

; 7391 : 		{
; 7392 : 			continue;
; 7393 : 		}
; 7394 : 
; 7395 : 		if(pLoopCity->getOwner() != kPlayer.GetID())

	mov	edx, DWORD PTR [esi+84]
	cmp	edx, DWORD PTR [edi+44]
	jne	SHORT $LN5@GetBestCit@2

; 7396 : 		{
; 7397 : 			continue;
; 7398 : 		}
; 7399 : 
; 7400 : 		if(pLoopCity->IsCanPurchase(true, true, NO_UNIT, eBuilding, NO_PROJECT, YIELD_FAITH))

	push	5
	push	-1
	push	ebx
	push	-1
	push	1
	push	1
	mov	ecx, esi
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	test	al, al
	jne	SHORT $LN80@GetBestCit@2
$LN5@GetBestCit@2:

; 7381 : 			}
; 7382 : 		}
; 7383 : 	}
; 7384 : 
; 7385 : 	// Now see if there is another city with our majority religion
; 7386 : 	int iLoop;
; 7387 : 	CvCity* pLoopCity;
; 7388 : 	for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	eax, DWORD PTR _iLoop$[esp+28]
	push	eax
	mov	ecx, edi
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LL6@GetBestCit@2
$LN4@GetBestCit@2:
	pop	edi
	pop	esi
	pop	ebp

; 7403 : 		}
; 7404 : 	}
; 7405 : 
; 7406 : 	return NULL;

	xor	eax, eax
	pop	ebx

; 7407 : }

	add	esp, 8
	ret	0
$LN80@GetBestCit@2:
	pop	edi

; 7401 : 		{
; 7402 : 			return pLoopCity;

	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx

; 7407 : }

	add	esp, 8
	ret	0
?GetBestCityFaithBuildingPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4BuildingTypes@@W4ReligionTypes@@@Z ENDP ; CvReligionAIHelpers::GetBestCityFaithBuildingPurchase
_TEXT	ENDS
PUBLIC	?DoesUnitPassFaithPurchaseCheck@CvReligionAIHelpers@@YA_NAAVCvPlayer@@W4UnitTypes@@@Z ; CvReligionAIHelpers::DoesUnitPassFaithPurchaseCheck
; Function compile flags: /Ogtpy
;	COMDAT ?DoesUnitPassFaithPurchaseCheck@CvReligionAIHelpers@@YA_NAAVCvPlayer@@W4UnitTypes@@@Z
_TEXT	SEGMENT
_bRtnValue$ = -5					; size = 1
_iLoop$229188 = -4					; size = 4
_kPlayer$ = 8						; size = 4
_eUnit$ = 12						; size = 4
?DoesUnitPassFaithPurchaseCheck@CvReligionAIHelpers@@YA_NAAVCvPlayer@@W4UnitTypes@@@Z PROC ; CvReligionAIHelpers::DoesUnitPassFaithPurchaseCheck, COMDAT

; 7410 : {

	sub	esp, 8
	push	ebx
	push	ebp

; 7411 : 	bool bRtnValue = true;
; 7412 : 
; 7413 : 	CvUnitEntry *pkUnitEntry = GC.getUnitInfo(eUnit);

	mov	ebp, DWORD PTR _eUnit$[esp+12]
	push	esi
	push	edi
	push	ebp
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	BYTE PTR _bRtnValue$[esp+28], 1
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	esi, eax

; 7414 : 	if (pkUnitEntry)

	test	esi, esi
	je	$LN32@DoesUnitPa

; 7415 : 	{
; 7416 : 		if (pkUnitEntry->IsSpreadReligion() || pkUnitEntry->IsRemoveHeresy())

	mov	ecx, esi
	call	?IsSpreadReligion@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsSpreadReligion
	test	al, al
	jne	SHORT $LN8@DoesUnitPa
	mov	ecx, esi
	call	?IsRemoveHeresy@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsRemoveHeresy
	test	al, al
	je	SHORT $LN32@DoesUnitPa
$LN8@DoesUnitPa:

; 7417 : 		{
; 7418 : 			bRtnValue = false;
; 7419 : 
; 7420 : 			// Religious unit, have to find a city with the majority religion we started
; 7421 : 			// Now see if there is another city with our majority religion
; 7422 : 			int iLoop;
; 7423 : 			CvCity* pLoopCity;
; 7424 : 
; 7425 : 			CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	BYTE PTR _bRtnValue$[esp+24], 0
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 7426 : 			ReligionTypes eReligion = pReligions->GetReligionCreatedByPlayer(kPlayer.GetID());

	mov	edi, DWORD PTR _kPlayer$[esp+20]
	mov	ecx, DWORD PTR [edi+44]
	push	ecx
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	mov	ebx, eax

; 7427 : 			if (eReligion > RELIGION_PANTHEON)

	test	ebx, ebx
	jle	SHORT $LN32@DoesUnitPa

; 7428 : 			{
; 7429 : 				for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$229188[esp+28]
	push	edx
	mov	ecx, edi
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN32@DoesUnitPa
$LL30@DoesUnitPa:

; 7430 : 				{
; 7431 : 					if (pLoopCity->getOwner() != kPlayer.GetID())

	mov	eax, DWORD PTR [esi+84]
	cmp	eax, DWORD PTR [edi+44]
	jne	SHORT $LN5@DoesUnitPa

; 7432 : 					{
; 7433 : 						continue;
; 7434 : 					}
; 7435 : 
; 7436 : 					if (pLoopCity->GetCityReligions()->GetReligiousMajority() == eReligion)

	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, ebx
	jne	SHORT $LN5@DoesUnitPa

; 7437 : 					{
; 7438 : 						if(pLoopCity->IsCanPurchase(false /*bTestPurchaseCost*/, true, eUnit, NO_BUILDING, NO_PROJECT, YIELD_FAITH))

	push	5
	push	-1
	push	-1
	push	ebp
	push	1
	push	0
	mov	ecx, esi
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	test	al, al
	jne	SHORT $LN28@DoesUnitPa
$LN5@DoesUnitPa:

; 7428 : 			{
; 7429 : 				for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$229188[esp+28]
	push	ecx
	mov	ecx, edi
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LL30@DoesUnitPa
$LN32@DoesUnitPa:

; 7441 : 						}
; 7442 : 					}
; 7443 : 				}
; 7444 : 			}
; 7445 : 		}
; 7446 : 	}
; 7447 : 
; 7448 : 	return bRtnValue;

	mov	al, BYTE PTR _bRtnValue$[esp+24]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 7449 : }

	add	esp, 8
	ret	0
$LN28@DoesUnitPa:
	pop	edi
	pop	esi
	pop	ebp

; 7439 : 						{
; 7440 : 							return true;

	mov	al, 1
	pop	ebx

; 7449 : }

	add	esp, 8
	ret	0
?DoesUnitPassFaithPurchaseCheck@CvReligionAIHelpers@@YA_NAAVCvPlayer@@W4UnitTypes@@@Z ENDP ; CvReligionAIHelpers::DoesUnitPassFaithPurchaseCheck
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@XZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?begin@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@XZ PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@XZ ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@XZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@XZ PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@XZ ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::end
_TEXT	ENDS
PUBLIC	?clear@?$BaseVector@VCvReligion@@$0A@@@QAEXXZ	; BaseVector<CvReligion,0>::clear
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?clear@?$BaseVector@VCvReligion@@$0A@@@QAEXXZ
_TEXT	SEGMENT
?clear@?$BaseVector@VCvReligion@@$0A@@@QAEXXZ PROC	; BaseVector<CvReligion,0>::clear, COMDAT
; _this$ = ecx

; 120  : 	void clear(){

	push	ebx
	mov	ebx, ecx

; 121  : 		Destroy(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [ebx+4]
	mov	ecx, DWORD PTR [ebx]
	test	eax, eax
	jbe	SHORT $LN17@clear
	push	esi
	push	edi
	lea	esi, DWORD PTR [ecx+152]
	mov	edi, eax
$LL5@clear:
	mov	ecx, esi
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	add	esi, 328				; 00000148H
	sub	edi, 1
	jne	SHORT $LL5@clear
	pop	edi
	pop	esi
$LN17@clear:

; 122  : 		m_uiCurrSize = 0;

	mov	DWORD PTR [ebx+4], 0
	pop	ebx

; 123  : 	};

	ret	0
?clear@?$BaseVector@VCvReligion@@$0A@@@QAEXXZ ENDP	; BaseVector<CvReligion,0>::clear
_TEXT	ENDS
PUBLIC	??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligionInCity,8,0,297,0>::~FStaticVector<CvReligionInCity,8,0,297,0>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<CvReligionInCity,8,0,297,0>::~FStaticVector<CvReligionInCity,8,0,297,0>, COMDAT
; _this$ = ecx

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [ecx]
	add	ecx, 12					; 0000000cH
	cmp	eax, ecx
	je	SHORT $LN3@FStaticVec
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
$LN3@FStaticVec:

; 619  : 	};

	ret	0
??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<CvReligionInCity,8,0,297,0>::~FStaticVector<CvReligionInCity,8,0,297,0>
_TEXT	ENDS
PUBLIC	?begin@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::begin
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?begin@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::begin, COMDAT
; _this$ = ecx

; 667  : 		return (iterator(_Myfirst));

	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 668  : 		}

	ret	4
?begin@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::end
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::end, COMDAT
; _this$ = ecx

; 677  : 		return (iterator(_Mylast));

	mov	ecx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], ecx

; 678  : 		}

	ret	4
?end@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@XZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::end
_TEXT	ENDS
PUBLIC	?ChooseFromTopChoices@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE?AW4BeliefTypes@@HPAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z ; CvWeightedVector<enum BeliefTypes,100,1>::ChooseFromTopChoices
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
;	COMDAT ?ChooseFromTopChoices@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE?AW4BeliefTypes@@HPAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z
_TEXT	SEGMENT
_iNumChoices$ = 8					; size = 4
_rndFcn$ = 12						; size = 4
_szRollName$ = 16					; size = 4
?ChooseFromTopChoices@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE?AW4BeliefTypes@@HPAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z PROC ; CvWeightedVector<enum BeliefTypes,100,1>::ChooseFromTopChoices, COMDAT
; _this$ = ecx

; 223  : 	{

	push	ebx
	push	esi
	mov	ebx, ecx

; 224  : 		// Loop through the top choices, or the total vector size, whichever is smaller
; 225  : 		if (iNumChoices > (int) m_pItems.size())

	mov	eax, DWORD PTR [ebx+4]
	push	edi
	mov	edi, DWORD PTR _iNumChoices$[esp+8]
	cmp	edi, eax
	jle	SHORT $LN8@ChooseFrom

; 226  : 		{
; 227  : 			iNumChoices = (int) m_pItems.size();

	mov	edi, eax
$LN8@ChooseFrom:

; 228  : 		}
; 229  : 
; 230  : 		WeightedElement elem;

	xor	esi, esi

; 231  : 		int i;
; 232  : 		int iChoice;
; 233  : 		int iTotalTopChoicesWeight = 0;

	xor	ecx, ecx

; 234  : 
; 235  : 		// Get the total weight
; 236  : 		for (i = 0; i < iNumChoices; i++)

	test	edi, edi
	jle	SHORT $LN5@ChooseFrom
	mov	eax, DWORD PTR [ebx]
	mov	edx, edi
	npad	2
$LL7@ChooseFrom:

; 237  : 		{
; 238  : 			elem = m_pItems[i];
; 239  : 			iTotalTopChoicesWeight += elem.m_iWeight;

	add	ecx, DWORD PTR [eax+4]
	mov	esi, DWORD PTR [eax]
	add	eax, 8
	sub	edx, 1
	jne	SHORT $LL7@ChooseFrom
$LN5@ChooseFrom:

; 240  : 		}
; 241  : 
; 242  : 		// Random roll up to total weight
; 243  : 		iChoice = (*rndFcn)(iTotalTopChoicesWeight, szRollName);

	mov	eax, DWORD PTR _szRollName$[esp+8]
	push	eax
	mov	eax, DWORD PTR _rndFcn$[esp+12]
	mov	edx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR [eax]
	call	edx

; 244  : 
; 245  : 		// Find out which element was chosen
; 246  : 		for (i = 0; i < iNumChoices; i++)

	xor	edx, edx
	test	edi, edi
	jle	SHORT $LN2@ChooseFrom

; 240  : 		}
; 241  : 
; 242  : 		// Random roll up to total weight
; 243  : 		iChoice = (*rndFcn)(iTotalTopChoicesWeight, szRollName);

	mov	ecx, DWORD PTR [ebx]
$LL4@ChooseFrom:

; 247  : 		{
; 248  : 			elem = m_pItems[i];
; 249  : 			iChoice -= elem.m_iWeight;

	sub	eax, DWORD PTR [ecx+4]
	mov	esi, DWORD PTR [ecx]

; 250  : 			if (iChoice < 0)

	js	SHORT $LN2@ChooseFrom
	inc	edx
	add	ecx, 8
	cmp	edx, edi
	jl	SHORT $LL4@ChooseFrom
$LN2@ChooseFrom:
	pop	edi

; 251  : 			{
; 252  : 				return elem.m_Element;
; 253  : 			}
; 254  : 		}
; 255  : 
; 256  : 		// We should have found something, so reaching here is an error
; 257  : 		//    Just return last thing accessed
; 258  : 		CvAssertMsg (false, "Internal error in CvWeightedVector.");
; 259  : 		return elem.m_Element;

	mov	eax, esi
	pop	esi
	pop	ebx

; 260  : 	};

	ret	12					; 0000000cH
?ChooseFromTopChoices@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE?AW4BeliefTypes@@HPAV?$FastDelegate2@HPBDH@fastdelegate@@PBD@Z ENDP ; CvWeightedVector<enum BeliefTypes,100,1>::ChooseFromTopChoices
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE_NI@Z ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Buy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Buy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE_NI@Z PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 1073741823				; 3fffffffH
	jbe	SHORT $LN2@Buy

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@KAXXZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Xlen
$LN16@Buy:
$LN2@Buy:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@PAVCvReligionEntry@@@std@@YAPAPAVCvReligionEntry@@IPAPAV1@@Z ; std::_Allocate<CvReligionEntry *>
	mov	DWORD PTR [esi+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	DWORD PTR [esi+8], eax
	add	esp, 8

; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	eax, DWORD PTR [eax+edi*4]
	mov	DWORD PTR [esi+12], eax
	pop	edi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy:
?_Buy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Buy
_TEXT	ENDS
PUBLIC	?Free@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXPAVCvReligion@@I@Z ; FStaticVector<CvReligion,16,0,297,0>::Free
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?Free@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXPAVCvReligion@@I@Z
_TEXT	SEGMENT
_pVal$ = 8						; size = 4
_uiNumElements$ = 12					; size = 4
?Free@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXPAVCvReligion@@I@Z PROC ; FStaticVector<CvReligion,16,0,297,0>::Free, COMDAT
; _this$ = ecx

; 809  : 	{

	push	ebx

; 810  : 		if( !bPODType) Destroy(pVal, uiNumElements);

	mov	ebx, DWORD PTR _pVal$[esp]
	push	ebp
	push	edi
	mov	edi, DWORD PTR _uiNumElements$[esp+8]
	mov	ebp, ecx
	test	edi, edi
	jbe	SHORT $LN5@Free@3
	push	esi
	lea	esi, DWORD PTR [ebx+152]
$LL7@Free@3:
	mov	ecx, esi
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	add	esi, 328				; 00000148H
	sub	edi, 1
	jne	SHORT $LL7@Free@3
	pop	esi
$LN5@Free@3:

; 811  : 		if( pVal != (T*)m_aData )

	add	ebp, 12					; 0000000cH
	cmp	ebx, ebp
	je	SHORT $LN1@Free@3

; 812  : 			FFREEALIGNED( (unsigned char*)pVal );

	push	ebx
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN1@Free@3:
	pop	edi
	pop	ebp
	pop	ebx

; 813  : 	};

	ret	8
?Free@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXPAVCvReligion@@I@Z ENDP ; FStaticVector<CvReligion,16,0,297,0>::Free
_TEXT	ENDS
PUBLIC	?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize
; Function compile flags: /Ogtpy
;	COMDAT ?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z
_TEXT	SEGMENT
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z PROC ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	ebp
	push	esi
	mov	esi, ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	cmp	DWORD PTR [esi+8], 0
	push	edi
	jne	SHORT $LN30@GrowSize
	mov	DWORD PTR [esi+8], 1
$LN30@GrowSize:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _uiFit$[esp+8]
	cmp	edx, DWORD PTR [esi+8]
	jb	SHORT $LN7@GrowSize
	npad	5
$LL8@GrowSize:

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	eax, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR [eax+eax]

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	cmp	ecx, eax
	jb	SHORT $LN33@GrowSize

; 754  : 				break;
; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	DWORD PTR [esi+8], ecx
	cmp	edx, ecx
	jae	SHORT $LL8@GrowSize

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	jmp	SHORT $LN7@GrowSize
$LN33@GrowSize:

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	DWORD PTR [esi+8], edx
$LN7@GrowSize:

; 759  : 		}
; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	edi, DWORD PTR [esi+8]
	cmp	edi, 8
	jbe	SHORT $LN15@GrowSize
	push	798					; 0000031eH
	lea	eax, DWORD PTR [edi+edi*2]
	add	eax, eax
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	add	eax, eax
	add	eax, eax
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	ebp, eax
	mov	DWORD PTR [esi+8], edi
	jmp	SHORT $LN14@GrowSize
$LN15@GrowSize:
	lea	ebp, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+8], 8
$LN14@GrowSize:

; 762  : 		if( bPODType ){
; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);
; 764  : 		}else{
; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	xor	edi, edi
	cmp	DWORD PTR [esi+4], edi
	jbe	SHORT $LN1@GrowSize
	xor	edx, edx
	mov	ecx, ebp
	push	ebx
	npad	7
$LL38@GrowSize:

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	test	ecx, ecx
	je	SHORT $LN2@GrowSize
	mov	eax, DWORD PTR [esi]
	mov	ebx, DWORD PTR [eax+edx]
	add	eax, edx
	mov	DWORD PTR [ecx], ebx
	mov	ebx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], ebx
	mov	ebx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], ebx
	mov	ebx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], ebx
	mov	ebx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+16], ebx
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx+20], eax
$LN2@GrowSize:
	inc	edi
	add	edx, 24					; 00000018H
	add	ecx, 24					; 00000018H
	cmp	edi, DWORD PTR [esi+4]
	jb	SHORT $LL38@GrowSize
	pop	ebx
$LN1@GrowSize:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR [esi+12]
	cmp	eax, ecx
	je	SHORT $LN37@GrowSize
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN37@GrowSize:
	pop	edi

; 769  : 		m_pData = pTemp;

	mov	DWORD PTR [esi], ebp

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	BYTE PTR [esi+204], 1
	pop	esi
	pop	ebp

; 772  : 	};

	ret	4
?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ENDP ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE_NI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Buy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Buy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE_NI@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Buy, COMDAT
; _this$ = ecx

; 1102 : 		{	// allocate array with _Capacity elements

	push	esi

; 1103 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	xor	eax, eax
	push	edi

; 1104 : 		if (_Capacity == 0)

	mov	edi, DWORD PTR __Capacity$[esp+4]
	mov	esi, ecx
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	jne	SHORT $LN4@Buy@2
	pop	edi

; 1105 : 			return (false);

	xor	al, al
	pop	esi

; 1115 : 		}

	ret	4
$LN4@Buy@2:

; 1106 : 		else if (max_size() < _Capacity)

	cmp	edi, 1073741823				; 3fffffffH
	jbe	SHORT $LN2@Buy@2

; 1107 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Xlen
$LN16@Buy@2:
$LN2@Buy@2:

; 1108 : 		else
; 1109 : 			{	// nonempty array, allocate storage
; 1110 : 			_Myfirst = this->_Alval.allocate(_Capacity);

	push	eax
	push	edi
	call	??$_Allocate@W4BeliefTypes@@@std@@YAPAW4BeliefTypes@@IPAW41@@Z ; std::_Allocate<enum BeliefTypes>
	mov	DWORD PTR [esi+4], eax

; 1111 : 			_Mylast = _Myfirst;

	mov	DWORD PTR [esi+8], eax
	add	esp, 8

; 1112 : 			_Myend = _Myfirst + _Capacity;

	lea	eax, DWORD PTR [eax+edi*4]
	mov	DWORD PTR [esi+12], eax
	pop	edi

; 1113 : 			}
; 1114 : 		return (true);

	mov	al, 1
	pop	esi

; 1115 : 		}

	ret	4
$LN15@Buy@2:
?_Buy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Buy
_TEXT	ENDS
PUBLIC	??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ PROC ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>, COMDAT
; _this$ = ecx

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [ecx]
	add	ecx, 12					; 0000000cH
	cmp	eax, ecx
	je	SHORT $LN3@FStaticVec@2
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
$LN3@FStaticVec@2:

; 619  : 	};

	ret	0
??1?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAE@XZ ENDP ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::~FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAEXPAPAVCvReligionEntry@@0@Z ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAEXPAPAVCvReligionEntry@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAEXPAPAVCvReligionEntry@@0@Z PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAEXPAPAVCvReligionEntry@@0@Z ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Destroy
_TEXT	ENDS
PUBLIC	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::GrowSize
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z
_TEXT	SEGMENT
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z PROC ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	push	esi
	mov	esi, ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	cmp	DWORD PTR [esi+8], 0
	push	edi
	jne	SHORT $LN33@GrowSize@2
	mov	DWORD PTR [esi+8], 1
$LN33@GrowSize@2:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _uiFit$[esp+4]
	cmp	edx, DWORD PTR [esi+8]
	jb	SHORT $LN7@GrowSize@2
	npad	6
$LL8@GrowSize@2:

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	eax, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR [eax+eax]

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	cmp	ecx, eax
	jb	SHORT $LN34@GrowSize@2

; 754  : 				break;
; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	DWORD PTR [esi+8], ecx
	cmp	edx, ecx
	jae	SHORT $LL8@GrowSize@2

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	jmp	SHORT $LN7@GrowSize@2
$LN34@GrowSize@2:

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	DWORD PTR [esi+8], edx
$LN7@GrowSize@2:
	push	ebp

; 759  : 		}
; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	ebp, DWORD PTR [esi+8]
	cmp	ebp, 100				; 00000064H
	jbe	SHORT $LN16@GrowSize@2
	push	798					; 0000031eH
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	lea	eax, DWORD PTR [ebp*8]
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	edi, eax
	mov	DWORD PTR [esi+8], ebp
	jmp	SHORT $LN15@GrowSize@2
$LN16@GrowSize@2:
	lea	edi, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+8], 100			; 00000064H
$LN15@GrowSize@2:

; 762  : 		if( bPODType ){
; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);

	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi]
	add	ecx, ecx
	add	ecx, ecx
	add	ecx, ecx
	push	ecx
	push	edx
	push	edi
	call	_memcpy

; 764  : 		}else{
; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)
; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);
; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [esi]
	add	esp, 12					; 0000000cH
	lea	ecx, DWORD PTR [esi+12]
	pop	ebp
	cmp	eax, ecx
	je	SHORT $LN36@GrowSize@2
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN36@GrowSize@2:

; 769  : 		m_pData = pTemp;

	mov	DWORD PTR [esi], edi
	pop	edi

; 770  : 
; 771  : 		m_bIsResized = true;

	mov	BYTE PTR [esi+812], 1
	pop	esi

; 772  : 	};

	ret	4
?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z ENDP ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::GrowSize
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator+
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??H?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator+, COMDAT
; _this$ = ecx

; 381  : 		_Myt _Tmp = *this;
; 382  : 		return (_Tmp += _Off);

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Off$[esp-4]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx

; 383  : 		}

	ret	8
??H?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >::operator+
_TEXT	ENDS
PUBLIC	??$SAFE_DELETE@VCvReligionEntry@@@@YAXAAPAVCvReligionEntry@@@Z ; SAFE_DELETE<CvReligionEntry>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffiretypes.h
;	COMDAT ??$SAFE_DELETE@VCvReligionEntry@@@@YAXAAPAVCvReligionEntry@@@Z
_TEXT	SEGMENT
_pkInstance$ = 8					; size = 4
??$SAFE_DELETE@VCvReligionEntry@@@@YAXAAPAVCvReligionEntry@@@Z PROC ; SAFE_DELETE<CvReligionEntry>, COMDAT

; 305  : {

	push	esi
	push	edi

; 306  : 	delete pkInstance;

	mov	edi, DWORD PTR _pkInstance$[esp+4]
	mov	esi, DWORD PTR [edi]
	test	esi, esi
	je	SHORT $LN8@SAFE_DELET
	mov	ecx, esi
	call	??1CvReligionEntry@@QAE@XZ		; CvReligionEntry::~CvReligionEntry
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@SAFE_DELET:

; 307  : 	pkInstance = NULL;

	mov	DWORD PTR [edi], 0
	pop	edi
	pop	esi

; 308  : };

	ret	0
??$SAFE_DELETE@VCvReligionEntry@@@@YAXAAPAVCvReligionEntry@@@Z ENDP ; SAFE_DELETE<CvReligionEntry>
_TEXT	ENDS
PUBLIC	??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z ; GetLocalizedText<CvString,char const *>
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z$0
__ehfuncinfo$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
xdata$x	ENDS
;	COMDAT ??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z
_TEXT	SEGMENT
_bytes$ = -100						; size = 4
$T238435 = -96						; size = 4
_text$ = -92						; size = 80
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_szString$ = 12						; size = 4
_arg1$ = 16						; size = 4
_arg2$ = 20						; size = 4
??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z PROC ; GetLocalizedText<CvString,char const *>, COMDAT

; 539  : {

	push	-1
	push	__ehhandler$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 88					; 00000058H

; 540  : 	Localization::String text = Localization::Lookup(szString);

	mov	eax, DWORD PTR _szString$[esp+96]
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	ecx, DWORD PTR _text$[esp+116]
	xor	ebx, ebx
	push	ecx
	mov	DWORD PTR __$EHRec$[esp+128], ebx
	mov	DWORD PTR $T238435[esp+120], ebx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8

; 541  : 	text << arg1 << arg2;

	mov	ecx, DWORD PTR _arg1$[esp+108]
	mov	DWORD PTR __$EHRec$[esp+120], 1
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	esi, DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z
	push	eax
	lea	ecx, DWORD PTR _text$[esp+116]
	call	esi
	mov	edx, DWORD PTR _arg2$[esp+108]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR _text$[esp+116]
	call	esi

; 542  : 
; 543  : 	size_t bytes = 0;
; 544  : 	const char* szComposedString = text.toUTF8(bytes);

	push	1
	lea	ecx, DWORD PTR _bytes$[esp+116]
	push	ecx
	lea	ecx, DWORD PTR _text$[esp+120]
	mov	DWORD PTR _bytes$[esp+120], ebx
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z

; 545  : 	CvString str;

	mov	esi, DWORD PTR ___$ReturnUdt$[esp+108]
	mov	ecx, esi
	mov	edi, eax
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 546  : 	str.assign(szComposedString, bytes);
; 547  : 	return str;

	mov	edx, DWORD PTR _bytes$[esp+112]
	push	edx
	push	edi
	mov	ecx, esi
	mov	DWORD PTR $T238435[esp+120], 1
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
	lea	ecx, DWORD PTR _text$[esp+112]
	mov	BYTE PTR __$EHRec$[esp+120], bl
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 548  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+112]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 100				; 00000064H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z$0:
	lea	ecx, DWORD PTR _text$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z$1:
	mov	eax, DWORD PTR $T238435[ebp]
	and	eax, 1
	je	$LN5@GetLocaliz@2
	and	DWORD PTR $T238435[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN5@GetLocaliz@2:
	ret	0
__ehhandler$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z:
	mov	eax, OFFSET __ehfuncinfo$??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z ENDP ; GetLocalizedText<CvString,char const *>
PUBLIC	??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z ; GetLocalizedText<CvString>
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z$1
__ehfuncinfo$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvgamecoreutils.h
xdata$x	ENDS
;	COMDAT ??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z
_TEXT	SEGMENT
_bytes$ = -100						; size = 4
$T238464 = -96						; size = 4
_text$ = -92						; size = 80
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_szString$ = 12						; size = 4
_arg1$ = 16						; size = 28
??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z PROC ; GetLocalizedText<CvString>, COMDAT

; 526  : {

	push	-1
	push	__ehhandler$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 88					; 00000058H
	push	esi
	xor	esi, esi
	push	edi
	mov	DWORD PTR $T238464[esp+108], esi

; 527  : 	Localization::String text = Localization::Lookup(szString);

	mov	eax, DWORD PTR _szString$[esp+104]
	push	eax
	lea	ecx, DWORD PTR _text$[esp+112]
	push	ecx
	mov	DWORD PTR __$EHRec$[esp+124], 1
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8

; 528  : 	text << arg1;

	lea	ecx, DWORD PTR _arg1$[esp+104]
	mov	BYTE PTR __$EHRec$[esp+116], 2
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _text$[esp+112]
	call	DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 529  : 
; 530  : 	size_t bytes = 0;
; 531  : 	const char* szComposedString = text.toUTF8(bytes);

	push	1
	lea	edx, DWORD PTR _bytes$[esp+112]
	push	edx
	lea	ecx, DWORD PTR _text$[esp+116]
	mov	DWORD PTR _bytes$[esp+116], esi
	call	DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDAAIH@Z

; 532  : 	CvString str;

	mov	esi, DWORD PTR ___$ReturnUdt$[esp+104]
	mov	ecx, esi
	mov	edi, eax
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 533  : 	str.assign(szComposedString, bytes);
; 534  : 	return str;

	mov	eax, DWORD PTR _bytes$[esp+108]
	push	eax
	push	edi
	mov	ecx, esi
	mov	DWORD PTR $T238464[esp+116], 1
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
	lea	ecx, DWORD PTR _text$[esp+108]
	mov	BYTE PTR __$EHRec$[esp+116], 1
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	lea	ecx, DWORD PTR _arg1$[esp+104]
	mov	BYTE PTR __$EHRec$[esp+116], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 535  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+108]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 100				; 00000064H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z$0:
	lea	ecx, DWORD PTR _arg1$[ebp-4]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z$1:
	lea	ecx, DWORD PTR _text$[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z$2:
	mov	eax, DWORD PTR $T238464[ebp]
	and	eax, 1
	je	$LN6@GetLocaliz@3
	and	DWORD PTR $T238464[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
$LN6@GetLocaliz@3:
	ret	0
__ehhandler$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z:
	mov	eax, OFFSET __ehfuncinfo$??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z ENDP ; GetLocalizedText<CvString>
PUBLIC	??$_Unchecked_move_backward@PAW4BeliefTypes@@PAW41@@stdext@@YAPAW4BeliefTypes@@PAW41@00@Z ; stdext::_Unchecked_move_backward<enum BeliefTypes *,enum BeliefTypes *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$_Unchecked_move_backward@PAW4BeliefTypes@@PAW41@@stdext@@YAPAW4BeliefTypes@@PAW41@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAW4BeliefTypes@@PAW41@@stdext@@YAPAW4BeliefTypes@@PAW41@00@Z PROC ; stdext::_Unchecked_move_backward<enum BeliefTypes *,enum BeliefTypes *>, COMDAT

; 3695 : 		return (_STD _Move_backward_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3696 : 			_STD _Iter_random(_First, _Dest), _STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Dest$[esp-4]
	cmp	edx, ecx
	je	SHORT $LN11@Unchecked_
	push	esi
$LL12@Unchecked_:
	mov	esi, DWORD PTR [ecx-4]
	sub	ecx, 4
	sub	eax, 4
	mov	DWORD PTR [eax], esi
	cmp	ecx, edx
	jne	SHORT $LL12@Unchecked_
	pop	esi
$LN11@Unchecked_:

; 3697 : 	}

	ret	0
??$_Unchecked_move_backward@PAW4BeliefTypes@@PAW41@@stdext@@YAPAW4BeliefTypes@@PAW41@00@Z ENDP ; stdext::_Unchecked_move_backward<enum BeliefTypes *,enum BeliefTypes *>
_TEXT	ENDS
PUBLIC	??$?0VCvGame@@V0@@?$FastDelegate2@HPBDH@fastdelegate@@QAE@PAVCvGame@@P82@AEHHPBD@Z@Z ; fastdelegate::FastDelegate2<int,char const *,int>::FastDelegate2<int,char const *,int><CvGame,CvGame>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\eventsystem\fastdelegate.h
;	COMDAT ??$?0VCvGame@@V0@@?$FastDelegate2@HPBDH@fastdelegate@@QAE@PAVCvGame@@P82@AEHHPBD@Z@Z
_TEXT	SEGMENT
_pthis$ = 8						; size = 4
_function_to_bind$ = 12					; size = 4
??$?0VCvGame@@V0@@?$FastDelegate2@HPBDH@fastdelegate@@QAE@PAVCvGame@@P82@AEHHPBD@Z@Z PROC ; fastdelegate::FastDelegate2<int,char const *,int>::FastDelegate2<int,char const *,int><CvGame,CvGame>, COMDAT
; _this$ = ecx

; 1057 : 		m_Closure.bindmemfunc(detail::implicit_cast<X*>(pthis), function_to_bind); }

	mov	edx, DWORD PTR _pthis$[esp-4]
	mov	eax, ecx
	mov	ecx, DWORD PTR _function_to_bind$[esp-4]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], edx
	ret	8
??$?0VCvGame@@V0@@?$FastDelegate2@HPBDH@fastdelegate@@QAE@PAVCvGame@@P82@AEHHPBD@Z@Z ENDP ; fastdelegate::FastDelegate2<int,char const *,int>::FastDelegate2<int,char const *,int><CvGame,CvGame>
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@stdext@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@0PAW41@AAV?$allocator@W4BeliefTypes@@@3@@Z ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@stdext@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@0PAW41@AAV?$allocator@W4BeliefTypes@@@3@@Z
_TEXT	SEGMENT
$T238561 = -4						; size = 1
__Cat$238565 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@stdext@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@0PAW41@AAV?$allocator@W4BeliefTypes@@@3@@Z PROC ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T238561[esp+4], 0
	mov	eax, DWORD PTR $T238561[esp+4]
	mov	ecx, DWORD PTR __Cat$238565[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@stdext@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@0PAW41@AAV?$allocator@W4BeliefTypes@@@3@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<enum BeliefTypes> >, COMDAT

; 233  : 	for (; _First != _Last; ++_First)
; 234  : 		_Al.destroy(_First);
; 235  : 	}

	ret	0
??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<enum BeliefTypes *,unsigned int,enum BeliefTypes,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<enum BeliefTypes *,unsigned int,enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT

; 394  : 
; 395  :  #if _HAS_ITERATOR_DEBUGGING
; 396  : //	if (_Count < 0)
; 397  : //		_DEBUG_ERROR("negative count in uninitialized fill");
; 398  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 399  : 
; 400  : 	_FwdIt _Next = _First;
; 401  : 
; 402  : 	_TRY_BEGIN
; 403  : 	for (; 0 < _Count; --_Count, ++_First)

	mov	ecx, DWORD PTR __Count$[esp-4]
	test	ecx, ecx
	jbe	SHORT $LN4@Uninit_fil
	mov	edx, DWORD PTR __Val$[esp-4]
	mov	eax, DWORD PTR __First$[esp-4]
	push	esi
$LL6@Uninit_fil:

; 404  : 		_Al.construct(_First, _Val);

	test	eax, eax
	je	SHORT $LN5@Uninit_fil
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax], esi
$LN5@Uninit_fil:
	dec	ecx
	add	eax, 4
	test	ecx, ecx
	ja	SHORT $LL6@Uninit_fil
	pop	esi
$LN4@Uninit_fil:

; 405  : 	_CATCH_ALL
; 406  : 	for (; _Next != _First; ++_Next)
; 407  : 		_Al.destroy(_Next);
; 408  : 	_RERAISE;
; 409  : 	_CATCH_END
; 410  : 	}

	ret	0
??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<enum BeliefTypes *,unsigned int,enum BeliefTypes,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@stdext@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@0PAW41@AAV?$allocator@W4BeliefTypes@@@3@@Z ; stdext::unchecked_uninitialized_copy<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??$unchecked_uninitialized_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@stdext@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@0PAW41@AAV?$allocator@W4BeliefTypes@@@3@@Z
_TEXT	SEGMENT
$T238613 = -4						; size = 1
__Cat$238618 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@stdext@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@0PAW41@AAV?$allocator@W4BeliefTypes@@@3@@Z PROC ; stdext::unchecked_uninitialized_copy<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T238613[esp+4], 0
	mov	eax, DWORD PTR $T238613[esp+4]
	mov	ecx, DWORD PTR __Cat$238618[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@stdext@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@0PAW41@AAV?$allocator@W4BeliefTypes@@@3@@Z ENDP ; stdext::unchecked_uninitialized_copy<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??$_Median@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Median<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Median@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z
_TEXT	SEGMENT
tv200 = 8						; size = 4
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
tv203 = 16						; size = 4
__Last$ = 16						; size = 4
??$_Median@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z PROC ; std::_Median<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 3010 : 	if (40 < _Last - _First)

	mov	ecx, DWORD PTR __First$[esp-4]
	push	esi
	mov	esi, DWORD PTR __Last$[esp]
	mov	eax, esi
	sub	eax, ecx
	sar	eax, 3
	cmp	eax, 40					; 00000028H
	jle	SHORT $LN2@Median

; 3011 : 		{	// median of nine
; 3012 : 		size_t _Step = (_Last - _First + 1) / 8;

	inc	eax
	cdq
	push	ebx
	and	edx, 7
	add	eax, edx
	push	ebp
	push	edi
	sar	eax, 3

; 3013 : 		std::_Med3(_First, _First + _Step, _First + 2 * _Step);

	mov	edi, eax
	shl	edi, 4
	lea	ebx, DWORD PTR [eax*8]
	lea	edx, DWORD PTR [edi+ecx]
	lea	eax, DWORD PTR [ebx+ecx]
	push	edx
	push	eax
	push	ecx
	mov	DWORD PTR tv200[esp+24], eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>

; 3014 : 		std::_Med3(_Mid - _Step, _Mid, _Mid + _Step);

	mov	ebp, DWORD PTR __Mid$[esp+24]
	lea	eax, DWORD PTR [ebx+ebp]
	push	eax
	mov	ecx, ebp
	sub	ecx, ebx
	push	ebp
	push	ecx
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>

; 3015 : 		std::_Med3(_Last - 2 * _Step, _Last - _Step, _Last);

	mov	eax, esi
	sub	eax, ebx
	push	esi
	push	eax
	sub	esi, edi
	push	esi
	mov	DWORD PTR tv203[esp+48], eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>

; 3016 : 		std::_Med3(_First + _Step, _Mid, _Last - _Step);

	mov	edx, DWORD PTR tv203[esp+48]
	mov	eax, DWORD PTR tv200[esp+48]
	push	edx
	push	ebp
	push	eax
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
	add	esp, 48					; 00000030H
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi

; 3020 : 	}

	ret	0
$LN2@Median:

; 3017 : 		}
; 3018 : 	else
; 3019 : 		std::_Med3(_First, _Mid, _Last);

	mov	edx, DWORD PTR __Mid$[esp]
	push	esi
	push	edx
	push	ecx
	call	??$_Med3@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Med3<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
	add	esp, 12					; 0000000cH
	pop	esi

; 3020 : 	}

	ret	0
??$_Median@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ENDP ; std::_Median<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0PAH0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0PAH0@Z PROC ; std::_Make_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>, COMDAT

; 2164 : 	{	// make nontrivial [_First, _Last) into a heap, using operator<

	push	ebx

; 2165 : 	_Diff _Bottom = _Last - _First;

	mov	ebx, DWORD PTR __Last$[esp]
	push	esi
	push	edi
	mov	edi, DWORD PTR __First$[esp+8]
	sub	ebx, edi
	sar	ebx, 3

; 2166 : 
; 2167 : 	for (_Diff _Hole = _Bottom / 2; 0 < _Hole; )

	mov	eax, ebx
	cdq
	sub	eax, edx
	mov	esi, eax
	sar	esi, 1
	test	esi, esi
	jle	SHORT $LN1@Make_heap
	npad	3
$LL2@Make_heap:

; 2168 : 		{	// reheap top half, bottom to top
; 2169 : 		--_Hole;
; 2170 : 		std::_Adjust_heap(_First, _Hole, _Bottom,
; 2171 : 			_Ty(*(_First + _Hole)));

	mov	ecx, DWORD PTR [edi+esi*8-8]
	sub	esp, 8
	mov	eax, esp
	dec	esi
	push	ebx
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [edi+esi*8+4]
	push	esi
	push	edi
	mov	DWORD PTR [eax+4], edx
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
	add	esp, 20					; 00000014H
	test	esi, esi
	jg	SHORT $LL2@Make_heap
$LN1@Make_heap:

; 2172 : 		}
; 2173 : 	}

	pop	edi
	pop	esi
	pop	ebx
	ret	0
??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0PAH0@Z ENDP ; std::_Make_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
_TEXT	ENDS
PUBLIC	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z PROC ; std::_Insertion_sort1<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>, COMDAT

; 2967 : 	{	// insertion sort [_First, _Last), using operator<

	push	ebp

; 2968 : 	if (_First != _Last)

	mov	ebp, DWORD PTR __Last$[esp]
	push	edi
	mov	edi, DWORD PTR __First$[esp+4]
	cmp	edi, ebp
	je	SHORT $LN6@Insertion_

; 2969 : 		for (_BidIt _Next = _First; ++_Next != _Last; )

	lea	edx, DWORD PTR [edi+8]
	cmp	edx, ebp
	je	SHORT $LN6@Insertion_
	push	ebx
	push	esi
$LL7@Insertion_:

; 2970 : 			{	// order next element
; 2971 : 			_BidIt _Next1 = _Next;
; 2972 : 			_Ty _Val = *_Next;

	mov	esi, DWORD PTR [edx+4]

; 2973 : 
; 2974 : 			if (_DEBUG_LT(_Val, *_First))

	cmp	esi, DWORD PTR [edi+4]
	mov	ebx, DWORD PTR [edx]
	mov	ecx, edx
	jle	SHORT $LN5@Insertion_

; 2975 : 				{	// found new earliest element, move to front
; 2976 : 				_STDEXT unchecked_copy_backward(_First, _Next, ++_Next1);

	mov	eax, edx
	cmp	edi, edx
	je	SHORT $LN21@Insertion_
	npad	7
$LL22@Insertion_:
	mov	ecx, DWORD PTR [eax-8]
	sub	eax, 8
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [eax+12], ecx
	cmp	eax, edi
	jne	SHORT $LL22@Insertion_
$LN21@Insertion_:

; 2977 : 				*_First = _Val;

	mov	DWORD PTR [edi], ebx
	mov	DWORD PTR [edi+4], esi

; 2978 : 				}
; 2979 : 			else

	jmp	SHORT $LN4@Insertion_
$LN5@Insertion_:

; 2980 : 				{	// look for insertion point after first
; 2981 : 				for (_BidIt _First1 = _Next1;
; 2982 : 					_DEBUG_LT(_Val, *--_First1);
; 2983 : 					_Next1 = _First1)

	cmp	esi, DWORD PTR [edx-4]
	lea	eax, DWORD PTR [edx-8]
	jle	SHORT $LN1@Insertion_
$LL3@Insertion_:

; 2984 : 					*_Next1 = *_First1;	// move hole down

	mov	ebp, DWORD PTR [eax]
	mov	DWORD PTR [ecx], ebp
	mov	ebp, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], ebp
	mov	ecx, eax
	sub	eax, 8
	cmp	esi, DWORD PTR [eax+4]
	jg	SHORT $LL3@Insertion_

; 2980 : 				{	// look for insertion point after first
; 2981 : 				for (_BidIt _First1 = _Next1;
; 2982 : 					_DEBUG_LT(_Val, *--_First1);
; 2983 : 					_Next1 = _First1)

	mov	ebp, DWORD PTR __Last$[esp+12]
$LN1@Insertion_:

; 2985 : 				*_Next1 = _Val;	// insert element in hole

	mov	DWORD PTR [ecx], ebx
	mov	DWORD PTR [ecx+4], esi
$LN4@Insertion_:
	add	edx, 8
	cmp	edx, ebp
	jne	SHORT $LL7@Insertion_
	pop	esi
	pop	ebx
$LN6@Insertion_:
	pop	edi
	pop	ebp

; 2986 : 				}
; 2987 : 			}
; 2988 : 	}

	ret	0
??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ENDP ; std::_Insertion_sort1<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@std@@@Z ; stdext::unchecked_uninitialized_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@std@@@Z
_TEXT	SEGMENT
$T238692 = -4						; size = 1
__Cat$238696 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >, COMDAT

; 819  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 820  : 	return (_STD _Uninit_copy(_CHECKED_BASE(_First),
; 821  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 822  : 		_STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T238692[esp+4], 0
	mov	eax, DWORD PTR $T238692[esp+4]
	mov	ecx, DWORD PTR __Cat$238696[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >

; 823  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Pop_heap_0<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z PROC ; std::_Pop_heap_0<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>, COMDAT

; 2088 : 	_Pop_heap(_First, _Last - 1, _Last - 1,
; 2089 : 		_Ty(*(_Last - 1)), _Dist_type(_First));

	mov	ecx, DWORD PTR __First$[esp-4]
	mov	eax, DWORD PTR __Last$[esp-4]
	mov	edx, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR [eax-8]
	push	edi
	mov	edi, DWORD PTR [eax-4]
	mov	DWORD PTR [eax-8], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax-4], edx
	sub	eax, ecx
	sub	esp, 8
	mov	edx, esp
	sub	eax, 8
	sar	eax, 3
	push	eax
	push	0
	push	ecx
	mov	DWORD PTR [edx], esi
	mov	DWORD PTR [edx+4], edi
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
	add	esp, 20					; 00000014H

; 2090 : 	}

	pop	edi
	pop	esi
	ret	0
??$_Pop_heap_0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ENDP ; std::_Pop_heap_0<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
_TEXT	ENDS
PUBLIC	?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionToFound
EXTRN	?getNumReligionInfos@CvGlobals@@QAEHXZ:PROC	; CvGlobals::getNumReligionInfos
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z$0
__ehfuncinfo$?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_iValue$225426 = -20					; size = 4
$T238761 = -16						; size = 1
__$EHRec$ = -12						; size = 12
_args$225425 = 8					; size = 4
_ePlayer$ = 8						; size = 4
?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvGameReligions::GetReligionToFound, COMDAT
; _this$ = ecx

; 668  : {

	push	-1
	mov	eax, DWORD PTR fs:0
	push	__ehhandler$?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	ebp
	push	esi
	push	edi

; 669  : 	ReligionTypes eCivReligion;
; 670  : 	eCivReligion = GET_PLAYER(ePlayer).getCivilizationInfo().GetReligion();

	mov	edi, DWORD PTR _ePlayer$[esp+32]
	mov	ebx, ecx
	mov	ecx, edi
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?GetReligion@CvCivilizationInfo@@QBE?AW4ReligionTypes@@XZ ; CvCivilizationInfo::GetReligion

; 671  : 
; 672  : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8596
	mov	esi, eax
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	ebp, eax

; 673  : 	if(pkScriptSystem) 

	test	ebp, ebp
	je	$LN103@GetReligio@6

; 674  : 	{
; 675  : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$225425[esp+32]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle

; 676  : 		args->Push(ePlayer);

	mov	ecx, DWORD PTR _args$225425[esp+32]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	push	edi
	mov	DWORD PTR __$EHRec$[esp+48], 0
	call	edx

; 677  : 		args->Push(eCivReligion);

	mov	ecx, DWORD PTR _args$225425[esp+32]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	push	esi
	call	edx

; 678  : 		args->Push(HasBeenFounded(eCivReligion));

	mov	ecx, DWORD PTR [ebx+4]
	mov	eax, DWORD PTR [ebx]
	imul	ecx, 328				; 00000148H
	add	ecx, eax
	cmp	eax, ecx
	je	SHORT $LN33@GetReligio@6
	npad	1
$LL35@GetReligio@6:
	cmp	DWORD PTR [eax], esi
	je	$LN88@GetReligio@6
	add	eax, 328				; 00000148H
	cmp	eax, ecx
	jne	SHORT $LL35@GetReligio@6
$LN33@GetReligio@6:
	mov	BYTE PTR $T238761[esp+36], 0
$LN36@GetReligio@6:
	mov	ecx, DWORD PTR _args$225425[esp+32]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR $T238761[esp+36]
	mov	edx, DWORD PTR [edx+16]
	push	eax
	call	edx

; 679  : 
; 680  : 		int iValue = 0;
; 681  : 		if (LuaSupport::CallAccumulator(pkScriptSystem, "GetReligionToFound", args.get(), iValue)) 

	mov	ecx, DWORD PTR _args$225425[esp+32]
	lea	eax, DWORD PTR _iValue$225426[esp+36]
	push	eax
	push	ecx
	push	OFFSET $SG225428
	push	ebp
	mov	DWORD PTR _iValue$225426[esp+52], 0
	call	?CallAccumulator@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AAH@Z ; LuaSupport::CallAccumulator
	add	esp, 16					; 00000010H
	test	al, al
	je	SHORT $LN102@GetReligio@6

; 682  : 		{
; 683  : #ifdef AUI_WARNING_FIXES
; 684  : 			if (uint(iValue) < GC.getNumReligionInfos() && iValue != RELIGION_PANTHEON)
; 685  : #else
; 686  : 			if (iValue >= 0 && iValue < GC.getNumReligionInfos() && iValue != RELIGION_PANTHEON)

	cmp	DWORD PTR _iValue$225426[esp+36], 0
	jl	SHORT $LN102@GetReligio@6
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getNumReligionInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumReligionInfos
	mov	ecx, DWORD PTR _iValue$225426[esp+36]
	cmp	ecx, eax
	jge	SHORT $LN102@GetReligio@6
	test	ecx, ecx
	je	SHORT $LN102@GetReligio@6

; 687  : #endif
; 688  : 			{
; 689  : 				eCivReligion = (ReligionTypes)iValue;

	mov	esi, ecx
$LN102@GetReligio@6:

; 690  : 			}
; 691  : 		}
; 692  : 	}

	lea	ecx, DWORD PTR _args$225425[esp+32]
	mov	DWORD PTR __$EHRec$[esp+44], -1
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN103@GetReligio@6:

; 693  : 
; 694  : 	if(!HasBeenFounded(eCivReligion))

	mov	edx, DWORD PTR [ebx+4]
	mov	eax, DWORD PTR [ebx]
	imul	edx, 328				; 00000148H
	lea	ecx, DWORD PTR [edx+eax]
	cmp	eax, ecx
	je	SHORT $LN45@GetReligio@6
	npad	4
$LL47@GetReligio@6:
	cmp	DWORD PTR [eax], esi
	je	SHORT $LN104@GetReligio@6
	add	eax, 328				; 00000148H
	cmp	eax, ecx
	jne	SHORT $LL47@GetReligio@6
$LN45@GetReligio@6:

; 695  : 	{
; 696  : 		CvReligionEntry* pEntry = GC.getReligionInfo(eCivReligion);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo

; 697  : 		if(pEntry)

	test	eax, eax
	je	SHORT $LN104@GetReligio@6
$LN7@GetReligio@6:
	pop	edi

; 698  : 		{
; 699  : 			return eCivReligion;

	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx

; 755  : 		{
; 756  : 			continue;
; 757  : 		}
; 758  : 
; 759  : 		return (eReligion);
; 760  : 	}
; 761  : 
; 762  : 	return NO_RELIGION;
; 763  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+20]
	mov	DWORD PTR fs:0, ecx
	add	esp, 20					; 00000014H
	ret	4
$LN88@GetReligio@6:

; 678  : 		args->Push(HasBeenFounded(eCivReligion));

	mov	BYTE PTR $T238761[esp+36], 1
	jmp	$LN36@GetReligio@6
$LN104@GetReligio@6:

; 700  : 		}
; 701  : 	}
; 702  : 
; 703  : 	// Need to "borrow" from another civ.  Loop through all religions looking for one that is eligible
; 704  : #ifdef AUI_WARNING_FIXES
; 705  : 	for (uint iI = 0; iI < GC.getNumReligionInfos(); iI++)
; 706  : #else
; 707  : 	for(int iI = 0; iI < GC.getNumReligionInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	esi, esi
	call	?getNumReligionInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumReligionInfos
	test	eax, eax
	jle	SHORT $LN105@GetReligio@6
	npad	3
$LL13@GetReligio@6:

; 708  : #endif
; 709  : 	{
; 710  : 		ReligionTypes eReligion = (ReligionTypes)iI;
; 711  : 		CvReligionEntry* pEntry = GC.getReligionInfo(eReligion);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo

; 712  : 		if(!pEntry)

	test	eax, eax
	je	SHORT $LN12@GetReligio@6

; 713  : 		{
; 714  : 			continue;
; 715  : 		}
; 716  : 
; 717  : 		if(pEntry->GetID() == RELIGION_PANTHEON)

	mov	edx, DWORD PTR [eax+4]
	test	edx, edx
	je	SHORT $LN12@GetReligio@6

; 718  : 		{
; 719  : 			continue;
; 720  : 		}
; 721  : 
; 722  : 		if(HasBeenFounded((ReligionTypes)pEntry->GetID()))

	mov	ecx, DWORD PTR [ebx+4]
	mov	eax, DWORD PTR [ebx]
	imul	ecx, 328				; 00000148H
	add	ecx, eax
	cmp	eax, ecx
	je	SHORT $LN59@GetReligio@6
$LL61@GetReligio@6:
	cmp	DWORD PTR [eax], edx
	je	SHORT $LN12@GetReligio@6
	add	eax, 328				; 00000148H
	cmp	eax, ecx
	jne	SHORT $LL61@GetReligio@6
$LN59@GetReligio@6:

; 723  : 		{
; 724  : 			continue;
; 725  : 		}
; 726  : 
; 727  : 		if(IsPreferredByCivInGame(eReligion))

	push	esi
	mov	ecx, ebx
	call	?IsPreferredByCivInGame@CvGameReligions@@AAE_NW4ReligionTypes@@@Z ; CvGameReligions::IsPreferredByCivInGame
	test	al, al
	je	SHORT $LN7@GetReligio@6
$LN12@GetReligio@6:

; 700  : 		}
; 701  : 	}
; 702  : 
; 703  : 	// Need to "borrow" from another civ.  Loop through all religions looking for one that is eligible
; 704  : #ifdef AUI_WARNING_FIXES
; 705  : 	for (uint iI = 0; iI < GC.getNumReligionInfos(); iI++)
; 706  : #else
; 707  : 	for(int iI = 0; iI < GC.getNumReligionInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	esi
	call	?getNumReligionInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumReligionInfos
	cmp	esi, eax
	jl	SHORT $LL13@GetReligio@6
$LN105@GetReligio@6:

; 728  : 		{
; 729  : 			continue;
; 730  : 		}
; 731  : 
; 732  : 		return (eReligion);
; 733  : 	}
; 734  : 
; 735  : 	// Will have to use a religion that someone else prefers
; 736  : #ifdef AUI_WARNING_FIXES
; 737  : 	for (uint iI = 0; iI < GC.getNumReligionInfos(); iI++)
; 738  : #else
; 739  : 	for(int iI = 0; iI < GC.getNumReligionInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	xor	esi, esi
	call	?getNumReligionInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumReligionInfos
	test	eax, eax
	jle	SHORT $LN4@GetReligio@6
	npad	1
$LL6@GetReligio@6:

; 740  : #endif
; 741  : 	{
; 742  : 		ReligionTypes eReligion = (ReligionTypes)iI;
; 743  : 		CvReligionEntry* pEntry = GC.getReligionInfo(eReligion);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo

; 744  : 		if(!pEntry)

	test	eax, eax
	je	SHORT $LN5@GetReligio@6

; 745  : 		{
; 746  : 			continue;
; 747  : 		}
; 748  : 
; 749  : 		if(pEntry->GetID() == RELIGION_PANTHEON)

	mov	edx, DWORD PTR [eax+4]
	test	edx, edx
	je	SHORT $LN5@GetReligio@6

; 750  : 		{
; 751  : 			continue;
; 752  : 		}
; 753  : 
; 754  : 		if(HasBeenFounded((ReligionTypes)pEntry->GetID()))

	mov	ecx, DWORD PTR [ebx+4]
	mov	eax, DWORD PTR [ebx]
	imul	ecx, 328				; 00000148H
	add	ecx, eax
	cmp	eax, ecx
	je	$LN7@GetReligio@6
	npad	5
$LL75@GetReligio@6:
	cmp	DWORD PTR [eax], edx
	je	SHORT $LN5@GetReligio@6
	add	eax, 328				; 00000148H
	cmp	eax, ecx
	jne	SHORT $LL75@GetReligio@6
	jmp	$LN7@GetReligio@6
$LN5@GetReligio@6:

; 728  : 		{
; 729  : 			continue;
; 730  : 		}
; 731  : 
; 732  : 		return (eReligion);
; 733  : 	}
; 734  : 
; 735  : 	// Will have to use a religion that someone else prefers
; 736  : #ifdef AUI_WARNING_FIXES
; 737  : 	for (uint iI = 0; iI < GC.getNumReligionInfos(); iI++)
; 738  : #else
; 739  : 	for(int iI = 0; iI < GC.getNumReligionInfos(); iI++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	inc	esi
	call	?getNumReligionInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumReligionInfos
	cmp	esi, eax
	jl	SHORT $LL6@GetReligio@6
$LN4@GetReligio@6:

; 755  : 		{
; 756  : 			continue;
; 757  : 		}
; 758  : 
; 759  : 		return (eReligion);
; 760  : 	}
; 761  : 
; 762  : 	return NO_RELIGION;
; 763  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	pop	edi
	pop	esi
	pop	ebp
	or	eax, -1
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 20					; 00000014H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _args$225425[ebp-4]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__ehhandler$?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetReligionToFound@CvGameReligions@@QAE?AW4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvGameReligions::GetReligionToFound
PUBLIC	?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z ; CvGameReligions::CanFoundReligion
EXTRN	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z:PROC ; CvReligionBeliefs::AddBelief
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$0
__ehfuncinfo$?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z
_TEXT	SEGMENT
_it$225619 = -348					; size = 4
_this$ = -344						; size = 4
_kReligion$ = -340					; size = 328
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_eReligion$ = 12					; size = 4
_szCustomName$ = 16					; size = 4
_eBelief1$ = 20						; size = 4
_eBelief2$ = 24						; size = 4
_eBelief3$ = 28						; size = 4
_eBelief4$ = 32						; size = 4
_pkHolyCity$ = 36					; size = 4
?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z PROC ; CvGameReligions::CanFoundReligion, COMDAT
; _this$ = ecx

; 1032 : {

	push	-1
	push	__ehhandler$?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 336				; 00000150H
	push	esi
	push	edi
	mov	edi, ecx

; 1033 : 	if(GetNumReligionsStillToFound() <= 0)

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi]
	imul	ecx, 328				; 00000148H
	add	ecx, eax
	xor	esi, esi
	mov	DWORD PTR _this$[esp+356], edi
	cmp	eax, ecx
	je	SHORT $LN27@CanFoundRe
$LL29@CanFoundRe:
	cmp	BYTE PTR [eax+20], 0
	jne	SHORT $LN28@CanFoundRe
	inc	esi
$LN28@CanFoundRe:
	add	eax, 328				; 00000148H
	cmp	eax, ecx
	jne	SHORT $LL29@CanFoundRe
$LN27@CanFoundRe:
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	call	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ ; CvMap::getWorldInfo
	mov	ecx, eax
	call	?getMaxActiveReligions@CvWorldInfo@@QBEHXZ ; CvWorldInfo::getMaxActiveReligions
	sub	eax, esi
	test	eax, eax
	jg	SHORT $LN18@CanFoundRe

; 1034 : 		return FOUNDING_NO_RELIGIONS_AVAILABLE;

	mov	eax, 4
	jmp	$LN19@CanFoundRe
$LN18@CanFoundRe:
	push	ebx

; 1035 : 
; 1036 : 	if(ePlayer == NO_PLAYER)

	mov	ebx, DWORD PTR _ePlayer$[esp+356]
	cmp	ebx, -1
	jne	SHORT $LN17@CanFoundRe

; 1037 : 		return FOUNDING_INVALID_PLAYER;

	lea	eax, DWORD PTR [ebx+6]
	jmp	$LN77@CanFoundRe
$LN17@CanFoundRe:

; 1038 : 
; 1039 : 	if(HasCreatedReligion(ePlayer))

	push	ebx
	mov	ecx, edi
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	test	eax, eax
	jle	SHORT $LN16@CanFoundRe

; 1040 : 		return FOUNDING_PLAYER_ALREADY_CREATED_RELIGION;

	mov	eax, 6
	jmp	$LN77@CanFoundRe
$LN16@CanFoundRe:

; 1041 : 
; 1042 : 	CvPlayer& kPlayer = GET_PLAYER(ePlayer);
; 1043 : 
; 1044 : #ifdef AUI_RELIGION_FIX_NO_BELIEFS_AVAILABLE_CHECK_FOR_NON_PANTHEON_MOVED
; 1045 : 	if (!IsAnyAvailableFounderBeliefs() || !IsAnyAvailableFollowerBeliefs())
; 1046 : 	{
; 1047 : 		return FOUNDING_NO_BELIEFS_AVAILABLE;
; 1048 : 	}
; 1049 : 	if (eReligion == NO_RELIGION || pkHolyCity == NULL || eBelief1 == NO_BELIEF || eBelief2 == NO_BELIEF)
; 1050 : 	{
; 1051 : 		if (kPlayer.GetReligions()->IsFoundingReligion())
; 1052 : 		{
; 1053 : 			return FOUNDING_PLAYER_ALREADY_CREATED_RELIGION;
; 1054 : 		}
; 1055 : 		return FOUNDING_OK;
; 1056 : 	}
; 1057 : #endif
; 1058 : 
; 1059 : 	CvReligion kReligion(eReligion, ePlayer, pkHolyCity, false);

	mov	edx, DWORD PTR _pkHolyCity$[esp+356]
	mov	eax, DWORD PTR _eReligion$[esp+356]
	mov	esi, ebx
	imul	esi, 63236				; 0000f704H
	add	esi, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	push	edx
	push	ebx
	push	eax
	lea	ecx, DWORD PTR _kReligion$[esp+376]
	call	??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z ; CvReligion::CvReligion

; 1060 : 
; 1061 : 	// Copy over belief from your pantheon
; 1062 : 	BeliefTypes eBelief = GC.getGame().GetGameReligions()->GetBeliefInPantheon(kPlayer.GetID());

	mov	esi, DWORD PTR [esi+44]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	esi
	mov	DWORD PTR __$EHRec$[esp+372], 0
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetBeliefInPantheon@CvGameReligions@@QBE?AW4BeliefTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetBeliefInPantheon

; 1063 : 	if(eBelief != NO_BELIEF)

	cmp	eax, -1
	je	SHORT $LN15@CanFoundRe

; 1064 : 		kReligion.m_Beliefs.AddBelief(eBelief);

	push	eax
	lea	ecx, DWORD PTR _kReligion$[esp+516]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief
$LN15@CanFoundRe:

; 1065 : 
; 1066 : 	kReligion.m_Beliefs.AddBelief(eBelief1);

	mov	ecx, DWORD PTR _eBelief1$[esp+356]
	push	ecx
	lea	ecx, DWORD PTR _kReligion$[esp+516]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief

; 1067 : 	kReligion.m_Beliefs.AddBelief(eBelief2);

	mov	edx, DWORD PTR _eBelief2$[esp+356]
	push	edx
	lea	ecx, DWORD PTR _kReligion$[esp+516]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief

; 1068 : 
; 1069 : 	if(eBelief3 != NO_BELIEF)

	mov	eax, DWORD PTR _eBelief3$[esp+356]
	cmp	eax, -1
	je	SHORT $LN14@CanFoundRe

; 1070 : 	{
; 1071 : 		kReligion.m_Beliefs.AddBelief(eBelief3);

	push	eax
	lea	ecx, DWORD PTR _kReligion$[esp+516]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief
$LN14@CanFoundRe:

; 1072 : 	}
; 1073 : 
; 1074 : 	if(eBelief4 != NO_BELIEF)

	mov	eax, DWORD PTR _eBelief4$[esp+356]
	cmp	eax, -1
	je	SHORT $LN13@CanFoundRe

; 1075 : 	{
; 1076 : 		kReligion.m_Beliefs.AddBelief(eBelief4);

	push	eax
	lea	ecx, DWORD PTR _kReligion$[esp+516]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief
$LN13@CanFoundRe:

; 1077 : 	}
; 1078 : 
; 1079 : 	if(szCustomName != NULL && strlen(szCustomName) <= sizeof(kReligion.m_szCustomName))

	mov	esi, DWORD PTR _szCustomName$[esp+356]
	test	esi, esi
	je	SHORT $LN12@CanFoundRe
	mov	eax, esi
	lea	edx, DWORD PTR [eax+1]
	npad	6
$LL71@CanFoundRe:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL71@CanFoundRe
	sub	eax, edx
	cmp	eax, 128				; 00000080H
	ja	SHORT $LN12@CanFoundRe

; 1080 : 	{
; 1081 : 		strcpy_s(kReligion.m_szCustomName, szCustomName);

	lea	eax, DWORD PTR _kReligion$[esp+382]
	push	esi
	push	eax
	call	??$strcpy_s@$0IA@@@YAHAAY0IA@DPBD@Z	; strcpy_s<128>
	add	esp, 8
$LN12@CanFoundRe:

; 1082 : 	}
; 1083 : 
; 1084 : 	// Now see if there are any conflicts.
; 1085 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1086 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1087 : #else
; 1088 : 	for(ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	ecx, DWORD PTR [edi+4]
	mov	esi, DWORD PTR [edi]
	imul	ecx, 328				; 00000148H
	add	ecx, esi
	push	ebp
	mov	DWORD PTR _it$225619[esp+364], esi
	cmp	esi, ecx
	je	$LN9@CanFoundRe
	lea	ebp, DWORD PTR [esi+152]
	npad	2
$LL11@CanFoundRe:

; 1089 : #endif
; 1090 : 	{
; 1091 : 		if ((*it).m_eFounder != ePlayer)	// Only check other player's religions

	cmp	DWORD PTR [ebp-148], ebx
	je	SHORT $LN10@CanFoundRe

; 1092 : 		{
; 1093 : 			if(kReligion.m_eReligion == (*it).m_eReligion)

	mov	edx, DWORD PTR _kReligion$[esp+364]
	cmp	edx, DWORD PTR [esi]
	je	$LN65@CanFoundRe

; 1095 : 
; 1096 : 			for(int iSrcBelief = (*it).m_Beliefs.GetNumBeliefs(); iSrcBelief--;)

	mov	ecx, ebp
	call	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetNumBeliefs
	mov	ebx, eax
	test	ebx, ebx
	je	SHORT $LN75@CanFoundRe
$LL6@CanFoundRe:
	dec	ebx

; 1097 : 			{
; 1098 : 				BeliefTypes eSrcBelief = (*it).m_Beliefs.GetBelief(iSrcBelief);

	push	ebx
	mov	ecx, ebp
	call	?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z ; CvReligionBeliefs::GetBelief
	mov	edi, eax

; 1099 : 				if(eSrcBelief != NO_BELIEF)

	cmp	edi, -1
	je	SHORT $LN72@CanFoundRe

; 1100 : 				{
; 1101 : 					for(int iDestBelief = kReligion.m_Beliefs.GetNumBeliefs(); iDestBelief--;)

	lea	ecx, DWORD PTR _kReligion$[esp+516]
	call	?GetNumBeliefs@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetNumBeliefs
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN72@CanFoundRe
$LL3@CanFoundRe:
	dec	esi

; 1102 : 					{
; 1103 : 						BeliefTypes eDestBelief = kReligion.m_Beliefs.GetBelief(iDestBelief);

	push	esi
	lea	ecx, DWORD PTR _kReligion$[esp+520]
	call	?GetBelief@CvReligionBeliefs@@QBE?AW4BeliefTypes@@H@Z ; CvReligionBeliefs::GetBelief

; 1104 : 						if(eDestBelief != NO_BELIEF && eDestBelief == eSrcBelief)

	cmp	eax, -1
	je	SHORT $LN1@CanFoundRe
	cmp	eax, edi
	je	$LN64@CanFoundRe
$LN1@CanFoundRe:

; 1100 : 				{
; 1101 : 					for(int iDestBelief = kReligion.m_Beliefs.GetNumBeliefs(); iDestBelief--;)

	test	esi, esi
	jne	SHORT $LL3@CanFoundRe
$LN72@CanFoundRe:

; 1095 : 
; 1096 : 			for(int iSrcBelief = (*it).m_Beliefs.GetNumBeliefs(); iSrcBelief--;)

	test	ebx, ebx
	jne	SHORT $LL6@CanFoundRe
	mov	edi, DWORD PTR _this$[esp+364]
	mov	esi, DWORD PTR _it$225619[esp+364]
$LN75@CanFoundRe:
	mov	ebx, DWORD PTR _ePlayer$[esp+360]
$LN10@CanFoundRe:

; 1082 : 	}
; 1083 : 
; 1084 : 	// Now see if there are any conflicts.
; 1085 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1086 : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1087 : #else
; 1088 : 	for(ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR [edi+4]
	imul	eax, 328				; 00000148H
	add	eax, DWORD PTR [edi]
	add	esi, 328				; 00000148H
	add	ebp, 328				; 00000148H
	mov	DWORD PTR _it$225619[esp+364], esi
	cmp	esi, eax
	jne	$LL11@CanFoundRe
$LN9@CanFoundRe:

; 1106 : 					}
; 1107 : 				}
; 1108 : 			}
; 1109 : 		}
; 1110 : 	}
; 1111 : 
; 1112 : 	return FOUNDING_OK;

	lea	ecx, DWORD PTR _kReligion$[esp+516]
	mov	DWORD PTR __$EHRec$[esp+372], -1
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	xor	eax, eax
$LN78@CanFoundRe:
	pop	ebp
$LN77@CanFoundRe:
	pop	ebx
$LN19@CanFoundRe:

; 1113 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+356]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 348				; 0000015cH
	ret	32					; 00000020H
$LN65@CanFoundRe:

; 1094 : 				return FOUNDING_RELIGION_IN_USE;

	lea	ecx, DWORD PTR _kReligion$[esp+516]
	mov	DWORD PTR __$EHRec$[esp+372], -1
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	mov	eax, 2
	jmp	SHORT $LN78@CanFoundRe
$LN64@CanFoundRe:

; 1105 : 							return FOUNDING_BELIEF_IN_USE;

	lea	ecx, DWORD PTR _kReligion$[esp+516]
	mov	DWORD PTR __$EHRec$[esp+372], -1
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	mov	eax, 1
	jmp	SHORT $LN78@CanFoundRe
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$0:
	lea	ecx, DWORD PTR _kReligion$[ebp]
	jmp	??1CvReligion@@QAE@XZ
__ehhandler$?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CanFoundReligion@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z ENDP ; CvGameReligions::CanFoundReligion
PUBLIC	?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z ; CvGameReligions::EnhanceReligion
EXTRN	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z:PROC ; CvNotifications::Add
EXTRN	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z:PROC	; CvTeam::isHasMet
EXTRN	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ:PROC ; CvPlayer::getCivilizationShortDescriptionKey
EXTRN	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ:PROC ; CvPlayer::GetNotifications
EXTRN	__imp_?toUTF8@String@Localization@@QAEPBDXZ:PROC
EXTRN	?DoReligionOneShots@CvPlayer@@QAEXW4ReligionTypes@@@Z:PROC ; CvPlayer::DoReligionOneShots
EXTRN	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z:PROC ; LuaSupport::CallHook
EXTRN	?UpdateReligion@CvPlayer@@QAEXXZ:PROC		; CvPlayer::UpdateReligion
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__ehfuncinfo$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$8
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z
_TEXT	SEGMENT
_pNotifications$225667 = -344				; size = 4
_args$225657 = -344					; size = 4
_iNotifyLoop$225660 = -340				; size = 4
tv625 = -336						; size = 4
_kPlayer$ = -332					; size = 4
_bResult$225658 = -325					; size = 1
_kNotifyTeam$225683 = -324				; size = 4
_kNotifyPlayer$225666 = -324				; size = 4
_this$ = -320						; size = 4
$T238984 = -316						; size = 4
$T239038 = -312						; size = 4
$T238986 = -308						; size = 28
$T238985 = -308						; size = 28
$T238983 = -308						; size = 28
_strLogMsg$225691 = -280				; size = 28
_unknownText$225686 = -252				; size = 80
_localizedText$225678 = -252				; size = 80
_notificationText$225672 = -172				; size = 80
_strSummary$225669 = -92				; size = 80
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_eReligion$ = 12					; size = 4
_eBelief1$ = 16						; size = 4
_eBelief2$ = 20						; size = 4
?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z PROC ; CvGameReligions::EnhanceReligion, COMDAT
; _this$ = ecx

; 1117 : {

	push	-1
	push	__ehhandler$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 332				; 0000014cH

; 1118 : 	bool bFoundIt = false;
; 1119 : 	CvPlayer& kPlayer = GET_PLAYER(ePlayer);
; 1120 : 	ReligionList::iterator it;
; 1121 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1122 : 	for (it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1123 : #else
; 1124 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR [ecx+4]
	push	ebx
	imul	eax, 328				; 00000148H
	mov	ebx, DWORD PTR _ePlayer$[esp+344]
	imul	ebx, 63236				; 0000f704H
	add	ebx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	esi
	mov	esi, DWORD PTR [ecx]
	add	eax, esi
	mov	DWORD PTR _this$[esp+352], ecx
	mov	DWORD PTR _kPlayer$[esp+352], ebx
	cmp	esi, eax
	je	$LN16@EnhanceRel
	push	ebp
	mov	ebp, DWORD PTR _eReligion$[esp+352]
$LL15@EnhanceRel:

; 1125 : #endif
; 1126 : 	{
; 1127 : 		if(it->m_eReligion == eReligion)

	cmp	DWORD PTR [esi], ebp
	je	SHORT $LN95@EnhanceRel
	add	esi, 328				; 00000148H
	cmp	esi, eax
	jne	SHORT $LL15@EnhanceRel
	jmp	$LN101@EnhanceRel
$LN95@EnhanceRel:

; 1128 : 		{
; 1129 : 			bFoundIt = true;
; 1130 : 			break;
; 1131 : 		}
; 1132 : 	}
; 1133 : 	if(!bFoundIt)
; 1134 : 	{
; 1135 : 		CvAssertMsg(false, "Internal error in religion code.");
; 1136 : 		return;
; 1137 : 	}
; 1138 : 
; 1139 : #ifdef AUI_WARNING_FIXES
; 1140 : 	it->m_bEnhanced = true;
; 1141 : #endif
; 1142 : 	it->m_Beliefs.AddBelief(eBelief1);

	mov	ecx, DWORD PTR _eBelief1$[esp+352]
	push	edi
	lea	edi, DWORD PTR [esi+152]
	push	ecx
	mov	ecx, edi
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief

; 1143 : 	it->m_Beliefs.AddBelief(eBelief2);

	mov	edx, DWORD PTR _eBelief2$[esp+356]
	push	edx
	mov	ecx, edi
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief

; 1144 : #ifndef AUI_WARNING_FIXES
; 1145 : 	it->m_bEnhanced = true;
; 1146 : #endif
; 1147 : 
; 1148 : 	// Update game systems
; 1149 : 	UpdateAllCitiesThisReligion(eReligion);

	mov	ecx, DWORD PTR _this$[esp+360]
	push	ebp
	mov	BYTE PTR [esi+21], 1
	call	?UpdateAllCitiesThisReligion@CvGameReligions@@QAEXW4ReligionTypes@@@Z ; CvGameReligions::UpdateAllCitiesThisReligion

; 1150 : 	kPlayer.UpdateReligion();

	mov	ecx, ebx
	call	?UpdateReligion@CvPlayer@@QAEXXZ	; CvPlayer::UpdateReligion

; 1151 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 1152 : 	kPlayer.doSelfConsistencyCheckAllCities();
; 1153 : #endif
; 1154 : #ifdef AUI_RELIGION_FIX_SIMULTANEOUS_ENHANCE_OR_FOUND_CAUSING_MULTIPLE
; 1155 : 	kPlayer.GetReligions()->SetFoundingReligion(false);
; 1156 : #endif
; 1157 : 
; 1158 : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8596
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	edi, eax

; 1159 : 	if(pkScriptSystem) 

	test	edi, edi
	je	$LN10@EnhanceRel

; 1160 : 	{
; 1161 : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$225657[esp+360]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle

; 1162 : 		args->Push(ePlayer);

	mov	ecx, DWORD PTR _args$225657[esp+360]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _ePlayer$[esp+356]
	mov	eax, DWORD PTR [eax+8]
	push	edx
	mov	DWORD PTR __$EHRec$[esp+372], 0
	call	eax

; 1163 : 		args->Push(eReligion);

	mov	ecx, DWORD PTR _args$225657[esp+360]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	push	ebp
	call	eax

; 1164 : 		args->Push(eBelief1);

	mov	ecx, DWORD PTR _args$225657[esp+360]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _eBelief1$[esp+356]
	mov	edx, DWORD PTR [edx+8]
	push	eax
	call	edx

; 1165 : 		args->Push(eBelief2);

	mov	ecx, DWORD PTR _args$225657[esp+360]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _eBelief2$[esp+356]
	mov	eax, DWORD PTR [eax+8]
	push	edx
	call	eax

; 1166 : 
; 1167 : 		bool bResult;
; 1168 : 		LuaSupport::CallHook(pkScriptSystem, "ReligionEnhanced", args.get(), bResult);

	mov	edx, DWORD PTR _args$225657[esp+360]
	lea	ecx, DWORD PTR _bResult$225658[esp+360]
	push	ecx
	push	edx
	push	OFFSET $SG225659
	push	edi
	call	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallHook
	add	esp, 16					; 00000010H

; 1169 : 	}

	lea	ecx, DWORD PTR _args$225657[esp+360]
	mov	DWORD PTR __$EHRec$[esp+368], -1
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN10@EnhanceRel:

; 1170 : 
; 1171 : #ifdef NQ_ALLOW_RELIGION_ONE_SHOTS
; 1172 : 	kPlayer.DoReligionOneShots(eReligion);

	push	ebp
	mov	ecx, ebx
	call	?DoReligionOneShots@CvPlayer@@QAEXW4ReligionTypes@@@Z ; CvPlayer::DoReligionOneShots
	mov	ebp, DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	mov	edi, DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	ebx, DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 1173 : #endif
; 1174 : 
; 1175 : 	//Notify the masses
; 1176 : 	for(int iNotifyLoop = 0; iNotifyLoop < MAX_MAJOR_CIVS; ++iNotifyLoop){

	xor	eax, eax
	mov	DWORD PTR _iNotifyLoop$225660[esp+360], eax
	mov	DWORD PTR tv625[esp+360], eax
$LL99@EnhanceRel:

; 1177 : 		PlayerTypes eNotifyPlayer = (PlayerTypes) iNotifyLoop;
; 1178 : 		CvPlayerAI& kNotifyPlayer = GET_PLAYER(eNotifyPlayer);

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, DWORD PTR tv625[esp+360]
	add	ecx, eax
	mov	DWORD PTR _kNotifyPlayer$225666[esp+360], ecx

; 1179 : 		CvNotifications* pNotifications = kNotifyPlayer.GetNotifications();

	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$225667[esp+360], eax

; 1180 : 		if(pNotifications){

	test	eax, eax
	je	$LN6@EnhanceRel

; 1181 : 			Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_ENHANCED_S");

	lea	edx, DWORD PTR _strSummary$225669[esp+360]
	push	OFFSET $SG225671
	push	edx
	call	ebp

; 1182 : 			Localization::String notificationText = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_ENHANCED");

	lea	eax, DWORD PTR _notificationText$225672[esp+368]
	push	OFFSET $SG225674
	push	eax
	mov	DWORD PTR __$EHRec$[esp+384], 1
	call	ebp
	add	esp, 16					; 00000010H

; 1183 : 			notificationText << kPlayer.getCivilizationShortDescriptionKey() << it->GetName();

	mov	ecx, DWORD PTR _kPlayer$[esp+360]
	mov	BYTE PTR __$EHRec$[esp+368], 2
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	lea	ecx, DWORD PTR $T238983[esp+360]
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR $T238984[esp+364], eax
	call	?GetName@CvReligion@@QBE?AVCvString@@XZ	; CvReligion::GetName
	mov	DWORD PTR $T239038[esp+360], eax
	mov	edx, DWORD PTR $T238984[esp+360]
	push	edx
	lea	ecx, DWORD PTR _notificationText$225672[esp+364]
	mov	BYTE PTR __$EHRec$[esp+372], 3
	call	ebx
	mov	ecx, DWORD PTR $T239038[esp+360]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _notificationText$225672[esp+364]
	call	ebx
	lea	ecx, DWORD PTR $T238983[esp+360]
	mov	BYTE PTR __$EHRec$[esp+368], 2
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1184 : 
; 1185 : 			// Message slightly different for enhancing player
; 1186 : 			if(ePlayer == eNotifyPlayer)

	mov	eax, DWORD PTR _iNotifyLoop$225660[esp+360]
	cmp	DWORD PTR _ePlayer$[esp+356], eax
	jne	SHORT $LN5@EnhanceRel

; 1187 : 			{
; 1188 : 				Localization::String localizedText = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_ENHANCED_ACTIVE_PLAYER");

	lea	ecx, DWORD PTR _localizedText$225678[esp+360]
	push	OFFSET $SG225680
	push	ecx
	call	ebp
	add	esp, 8

; 1189 : 				localizedText << it->GetName();

	lea	edx, DWORD PTR $T238985[esp+360]
	push	edx
	mov	ecx, esi
	mov	BYTE PTR __$EHRec$[esp+372], 4
	call	?GetName@CvReligion@@QBE?AVCvString@@XZ	; CvReligion::GetName
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+368], 5
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _localizedText$225678[esp+364]
	call	ebx
	lea	ecx, DWORD PTR $T238985[esp+360]
	mov	BYTE PTR __$EHRec$[esp+368], 4
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1190 : 
; 1191 : 				pNotifications->Add(NOTIFICATION_RELIGION_ENHANCED_ACTIVE_PLAYER, localizedText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$225669[esp+376]
	call	edi
	push	eax
	lea	ecx, DWORD PTR _localizedText$225678[esp+380]
	call	edi
	push	eax
	push	-403868607				; e7ed7441H

; 1192 : 			}
; 1193 : 			else

	jmp	$LN102@EnhanceRel
$LN5@EnhanceRel:

; 1194 : 			{
; 1195 : 				CvTeam& kNotifyTeam = GET_TEAM(kNotifyPlayer.getTeam());

	mov	eax, DWORD PTR _kNotifyPlayer$225666[esp+360]
	mov	eax, DWORD PTR [eax+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN67@EnhanceRel
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN68@EnhanceRel
$LN67@EnhanceRel:
	or	eax, -1
$LN68@EnhanceRel:

; 1196 : 				if(kNotifyTeam.isHasMet(kPlayer.getTeam()))

	mov	ecx, DWORD PTR _kPlayer$[esp+360]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _kNotifyTeam$225683[esp+360], eax
	call	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ	; CvPlayer::getTeam
	mov	ecx, DWORD PTR _kNotifyTeam$225683[esp+360]
	push	eax
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	test	al, al
	je	SHORT $LN3@EnhanceRel

; 1197 : 				{
; 1198 : 					pNotifications->Add(NOTIFICATION_RELIGION_ENHANCED, notificationText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$225669[esp+376]
	call	edi
	push	eax
	lea	ecx, DWORD PTR _notificationText$225672[esp+380]
	call	edi
	mov	ecx, DWORD PTR _pNotifications$225667[esp+380]
	push	eax
	push	26690275				; 019742e3H
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 1199 : 				}
; 1200 : 				else

	jmp	$LN2@EnhanceRel
$LN3@EnhanceRel:

; 1201 : 				{
; 1202 : 					Localization::String unknownText = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_ENHANCED_UNKNOWN");

	lea	eax, DWORD PTR _unknownText$225686[esp+360]
	push	OFFSET $SG225688
	push	eax
	call	ebp
	add	esp, 8

; 1203 : 					unknownText << it->GetName();

	lea	ecx, DWORD PTR $T238986[esp+360]
	push	ecx
	mov	ecx, esi
	mov	BYTE PTR __$EHRec$[esp+372], 6
	call	?GetName@CvReligion@@QBE?AVCvString@@XZ	; CvReligion::GetName
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+368], 7
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _unknownText$225686[esp+364]
	call	ebx
	lea	ecx, DWORD PTR $T238986[esp+360]
	mov	BYTE PTR __$EHRec$[esp+368], 6
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1204 : 
; 1205 : 					pNotifications->Add(NOTIFICATION_RELIGION_ENHANCED, unknownText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$225669[esp+376]
	call	edi
	push	eax
	lea	ecx, DWORD PTR _unknownText$225686[esp+380]
	call	edi
	push	eax
	push	26690275				; 019742e3H
$LN102@EnhanceRel:
	mov	ecx, DWORD PTR _pNotifications$225667[esp+388]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 1206 : 				}

	lea	ecx, DWORD PTR _unknownText$225686[esp+360]
	mov	BYTE PTR __$EHRec$[esp+368], 2
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN2@EnhanceRel:

; 1207 : 			}
; 1208 : 		}

	lea	ecx, DWORD PTR _notificationText$225672[esp+360]
	mov	BYTE PTR __$EHRec$[esp+368], 1
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	lea	ecx, DWORD PTR _strSummary$225669[esp+360]
	mov	DWORD PTR __$EHRec$[esp+368], -1
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN6@EnhanceRel:

; 1209 : 
; 1210 : 		// Logging
; 1211 : 		if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	SHORT $LN8@EnhanceRel

; 1212 : 		{
; 1213 : 			CvString strLogMsg;

	lea	ecx, DWORD PTR _strLogMsg$225691[esp+360]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1214 : 			strLogMsg = kPlayer.getCivilizationShortDescription();

	mov	ecx, DWORD PTR _kPlayer$[esp+360]
	mov	DWORD PTR __$EHRec$[esp+368], 8
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	lea	ecx, DWORD PTR _strLogMsg$225691[esp+360]
	test	eax, eax
	je	SHORT $LN85@EnhanceRel
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN84@EnhanceRel
$LN85@EnhanceRel:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN84@EnhanceRel:

; 1215 : 			strLogMsg += ", RELIGION ENHANCED";

	push	OFFSET $SG225692
	lea	ecx, DWORD PTR _strLogMsg$225691[esp+364]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1216 : 			LogReligionMessage(strLogMsg);

	mov	ecx, DWORD PTR _this$[esp+360]
	lea	edx, DWORD PTR _strLogMsg$225691[esp+360]
	push	edx
	call	?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z ; CvGameReligions::LogReligionMessage

; 1217 : 		}

	lea	ecx, DWORD PTR _strLogMsg$225691[esp+360]
	mov	DWORD PTR __$EHRec$[esp+368], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN8@EnhanceRel:
	mov	eax, DWORD PTR tv625[esp+360]
	inc	DWORD PTR _iNotifyLoop$225660[esp+360]
	add	eax, 63236				; 0000f704H
	cmp	eax, 1391192				; 00153a58H
	mov	DWORD PTR tv625[esp+360], eax
	jl	$LL99@EnhanceRel

; 1218 : 	}
; 1219 : 	GC.GetEngineUserInterface()->setDirty(CityInfo_DIRTY_BIT, true);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8600
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+260]
	push	1
	push	18					; 00000012H
	call	edx
	pop	edi
$LN101@EnhanceRel:
	pop	ebp
$LN16@EnhanceRel:

; 1220 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+352]
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 344				; 00000158H
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$0:
	lea	ecx, DWORD PTR _args$225657[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$1:
	lea	ecx, DWORD PTR _strSummary$225669[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$2:
	lea	ecx, DWORD PTR _notificationText$225672[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$3:
	lea	ecx, DWORD PTR $T238983[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$4:
	lea	ecx, DWORD PTR _localizedText$225678[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$5:
	lea	ecx, DWORD PTR $T238985[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$6:
	lea	ecx, DWORD PTR _unknownText$225686[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$7:
	lea	ecx, DWORD PTR $T238986[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z$8:
	lea	ecx, DWORD PTR _strLogMsg$225691[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z:
	mov	eax, OFFSET __ehfuncinfo$?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?EnhanceReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@2@Z ENDP ; CvGameReligions::EnhanceReligion
PUBLIC	?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z ; CvGameReligions::AddReformationBelief
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
xdata$x	SEGMENT
__ehfuncinfo$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$8
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z
_TEXT	SEGMENT
_pNotifications$225735 = -344				; size = 4
_args$225725 = -344					; size = 4
_kPlayer$ = -340					; size = 4
_iNotifyLoop$225728 = -336				; size = 4
tv581 = -332						; size = 4
_kNotifyTeam$225751 = -328				; size = 4
_kNotifyPlayer$225734 = -328				; size = 4
_bResult$225726 = -321					; size = 1
$T239184 = -320						; size = 4
$T239133 = -316						; size = 4
_this$ = -312						; size = 4
$T239135 = -308						; size = 28
$T239134 = -308						; size = 28
$T239132 = -308						; size = 28
_strLogMsg$225759 = -280				; size = 28
_unknownText$225754 = -252				; size = 80
_localizedText$225746 = -252				; size = 80
_notificationText$225740 = -172				; size = 80
_strSummary$225737 = -92				; size = 80
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_eReligion$ = 12					; size = 4
_eBelief1$ = 16						; size = 4
?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z PROC ; CvGameReligions::AddReformationBelief, COMDAT
; _this$ = ecx

; 1287 : {

	push	-1
	push	__ehhandler$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi

; 1288 : 	bool bFoundIt = false;
; 1289 : 	CvPlayer& kPlayer = GET_PLAYER(ePlayer);

	mov	esi, DWORD PTR _ePlayer$[esp+348]
	push	edi
	imul	esi, 63236				; 0000f704H
	add	esi, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	edi, ecx

; 1290 : 	ReligionList::iterator it;
; 1291 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 1292 : 	for (it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 1293 : #else
; 1294 : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR [edi+4]
	mov	ebx, DWORD PTR [edi]
	imul	eax, 328				; 00000148H
	add	eax, ebx
	mov	DWORD PTR _this$[esp+356], edi
	mov	DWORD PTR _kPlayer$[esp+356], esi
	cmp	ebx, eax
	je	$LN16@AddReforma
	push	ebp
	mov	ebp, DWORD PTR _eReligion$[esp+356]
$LL15@AddReforma:

; 1295 : #endif
; 1296 : 	{
; 1297 : 		if(it->m_eReligion == eReligion)

	cmp	DWORD PTR [ebx], ebp
	je	SHORT $LN93@AddReforma
	add	ebx, 328				; 00000148H
	cmp	ebx, eax
	jne	SHORT $LL15@AddReforma
	jmp	$LN99@AddReforma
$LN93@AddReforma:

; 1298 : 		{
; 1299 : 			bFoundIt = true;
; 1300 : 			break;
; 1301 : 		}
; 1302 : 	}
; 1303 : 	if(!bFoundIt)
; 1304 : 	{
; 1305 : 		CvAssertMsg(false, "Internal error in religion code.");
; 1306 : 		return;
; 1307 : 	}
; 1308 : 
; 1309 : 	it->m_Beliefs.AddBelief(eBelief1);

	mov	ecx, DWORD PTR _eBelief1$[esp+356]
	push	ecx
	lea	ecx, DWORD PTR [ebx+152]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief

; 1310 : 
; 1311 : 	// Update game systems
; 1312 : 	UpdateAllCitiesThisReligion(eReligion);

	push	ebp
	mov	ecx, edi
	call	?UpdateAllCitiesThisReligion@CvGameReligions@@QAEXW4ReligionTypes@@@Z ; CvGameReligions::UpdateAllCitiesThisReligion

; 1313 : 	kPlayer.UpdateReligion();

	mov	ecx, esi
	call	?UpdateReligion@CvPlayer@@QAEXXZ	; CvPlayer::UpdateReligion

; 1314 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 1315 : 	kPlayer.doSelfConsistencyCheckAllCities();
; 1316 : #endif
; 1317 : 
; 1318 : #ifdef NQ_ADD_REFORMATION_LUA_HOOK
; 1319 : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8596
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	edi, eax

; 1320 : 	if(pkScriptSystem) 

	test	edi, edi
	je	SHORT $LN10@AddReforma

; 1321 : 	{
; 1322 : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$225725[esp+360]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle

; 1323 : 		args->Push(ePlayer);

	mov	ecx, DWORD PTR _args$225725[esp+360]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _ePlayer$[esp+356]
	mov	edx, DWORD PTR [edx+8]
	push	eax
	mov	DWORD PTR __$EHRec$[esp+372], 0
	call	edx

; 1324 : 		args->Push(eReligion);

	mov	ecx, DWORD PTR _args$225725[esp+360]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	push	ebp
	call	edx

; 1325 : 		args->Push(eBelief1);

	mov	ecx, DWORD PTR _args$225725[esp+360]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _eBelief1$[esp+356]
	mov	eax, DWORD PTR [eax+8]
	push	edx
	call	eax

; 1326 : 		bool bResult;
; 1327 : 		LuaSupport::CallHook(pkScriptSystem, "ReformationAdded", args.get(), bResult);

	mov	edx, DWORD PTR _args$225725[esp+360]
	lea	ecx, DWORD PTR _bResult$225726[esp+360]
	push	ecx
	push	edx
	push	OFFSET $SG225727
	push	edi
	call	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallHook
	add	esp, 16					; 00000010H

; 1328 : 	}

	lea	ecx, DWORD PTR _args$225725[esp+360]
	mov	DWORD PTR __$EHRec$[esp+368], -1
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN10@AddReforma:

; 1329 : #endif
; 1330 : 
; 1331 : #ifdef NQ_ALLOW_RELIGION_ONE_SHOTS
; 1332 : 	kPlayer.DoReligionOneShots(eReligion);

	push	ebp
	mov	ecx, esi
	call	?DoReligionOneShots@CvPlayer@@QAEXW4ReligionTypes@@@Z ; CvPlayer::DoReligionOneShots
	mov	edi, DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	mov	esi, DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	mov	ebp, DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z

; 1333 : #endif
; 1334 : #ifdef LEKMOD_REFORMATION_NOTIFICATION_MID_TURN
; 1335 : 	kPlayer.DoReformationNotification();
; 1336 : #endif
; 1337 : 
; 1338 : 	//Notify the masses
; 1339 : 	for(int iNotifyLoop = 0; iNotifyLoop < MAX_MAJOR_CIVS; ++iNotifyLoop){

	xor	eax, eax
	mov	DWORD PTR _iNotifyLoop$225728[esp+360], eax
	mov	DWORD PTR tv581[esp+360], eax
	npad	10
$LL97@AddReforma:

; 1340 : 		PlayerTypes eNotifyPlayer = (PlayerTypes) iNotifyLoop;
; 1341 : 		CvPlayerAI& kNotifyPlayer = GET_PLAYER(eNotifyPlayer);

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, DWORD PTR tv581[esp+360]
	add	ecx, eax
	mov	DWORD PTR _kNotifyPlayer$225734[esp+360], ecx

; 1342 : 		CvNotifications* pNotifications = kNotifyPlayer.GetNotifications();

	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	DWORD PTR _pNotifications$225735[esp+360], eax

; 1343 : 		if(pNotifications){

	test	eax, eax
	je	$LN6@AddReforma

; 1344 : 			Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_REFORMATION_BELIEF_ADDED_S");

	lea	edx, DWORD PTR _strSummary$225737[esp+360]
	push	OFFSET $SG225739
	push	edx
	call	edi

; 1345 : 			Localization::String notificationText = Localization::Lookup("TXT_KEY_NOTIFICATION_REFORMATION_BELIEF_ADDED");

	lea	eax, DWORD PTR _notificationText$225740[esp+368]
	push	OFFSET $SG225742
	push	eax
	mov	DWORD PTR __$EHRec$[esp+384], 1
	call	edi
	add	esp, 16					; 00000010H

; 1346 : 			notificationText << kPlayer.getCivilizationShortDescriptionKey() << it->GetName();

	mov	ecx, DWORD PTR _kPlayer$[esp+360]
	mov	BYTE PTR __$EHRec$[esp+368], 2
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	lea	ecx, DWORD PTR $T239132[esp+360]
	push	ecx
	mov	ecx, ebx
	mov	DWORD PTR $T239133[esp+364], eax
	call	?GetName@CvReligion@@QBE?AVCvString@@XZ	; CvReligion::GetName
	mov	DWORD PTR $T239184[esp+360], eax
	mov	edx, DWORD PTR $T239133[esp+360]
	push	edx
	lea	ecx, DWORD PTR _notificationText$225740[esp+364]
	mov	BYTE PTR __$EHRec$[esp+372], 3
	call	ebp
	mov	ecx, DWORD PTR $T239184[esp+360]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _notificationText$225740[esp+364]
	call	ebp
	lea	ecx, DWORD PTR $T239132[esp+360]
	mov	BYTE PTR __$EHRec$[esp+368], 2
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1347 : 
; 1348 : 			// Message slightly different for reformation player
; 1349 : 			if(ePlayer == eNotifyPlayer)

	mov	eax, DWORD PTR _iNotifyLoop$225728[esp+360]
	cmp	DWORD PTR _ePlayer$[esp+356], eax
	jne	SHORT $LN5@AddReforma

; 1350 : 			{
; 1351 : 				Localization::String localizedText = Localization::Lookup("TXT_KEY_NOTIFICATION_REFORMATION_BELIEF_ADDED_ACTIVE_PLAYER");

	lea	ecx, DWORD PTR _localizedText$225746[esp+360]
	push	OFFSET $SG225748
	push	ecx
	call	edi
	add	esp, 8

; 1352 : 				localizedText << it->GetName();

	lea	edx, DWORD PTR $T239134[esp+360]
	push	edx
	mov	ecx, ebx
	mov	BYTE PTR __$EHRec$[esp+372], 4
	call	?GetName@CvReligion@@QBE?AVCvString@@XZ	; CvReligion::GetName
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+368], 5
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _localizedText$225746[esp+364]
	call	ebp
	lea	ecx, DWORD PTR $T239134[esp+360]
	mov	BYTE PTR __$EHRec$[esp+368], 4
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1353 : 
; 1354 : 				pNotifications->Add(NOTIFICATION_REFORMATION_BELIEF_ADDED_ACTIVE_PLAYER, localizedText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$225737[esp+376]
	call	esi
	push	eax
	lea	ecx, DWORD PTR _localizedText$225746[esp+380]
	call	esi
	push	eax
	push	-90445226				; fa9bea56H

; 1355 : 			}
; 1356 : 			else

	jmp	$LN100@AddReforma
$LN5@AddReforma:

; 1357 : 			{
; 1358 : 				CvTeam& kNotifyTeam = GET_TEAM(kNotifyPlayer.getTeam());

	mov	eax, DWORD PTR _kNotifyPlayer$225734[esp+360]
	mov	eax, DWORD PTR [eax+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN65@AddReforma
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN66@AddReforma
$LN65@AddReforma:
	or	eax, -1
$LN66@AddReforma:

; 1359 : 				if(kNotifyTeam.isHasMet(kPlayer.getTeam()))

	mov	ecx, DWORD PTR _kPlayer$[esp+360]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _kNotifyTeam$225751[esp+360], eax
	call	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ	; CvPlayer::getTeam
	mov	ecx, DWORD PTR _kNotifyTeam$225751[esp+360]
	push	eax
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	test	al, al
	je	SHORT $LN3@AddReforma

; 1360 : 				{
; 1361 : 					pNotifications->Add(NOTIFICATION_REFORMATION_BELIEF_ADDED, notificationText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$225737[esp+376]
	call	esi
	push	eax
	lea	ecx, DWORD PTR _notificationText$225740[esp+380]
	call	esi
	mov	ecx, DWORD PTR _pNotifications$225735[esp+380]
	push	eax
	push	1614113729				; 60356bc1H
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 1362 : 				}
; 1363 : 				else

	jmp	$LN2@AddReforma
$LN3@AddReforma:

; 1364 : 				{
; 1365 : 					Localization::String unknownText = Localization::Lookup("TXT_KEY_NOTIFICATION_REFORMATION_BELIEF_ADDED_UNKNOWN");

	lea	eax, DWORD PTR _unknownText$225754[esp+360]
	push	OFFSET $SG225756
	push	eax
	call	edi
	add	esp, 8

; 1366 : 					unknownText << it->GetName();

	lea	ecx, DWORD PTR $T239135[esp+360]
	push	ecx
	mov	ecx, ebx
	mov	BYTE PTR __$EHRec$[esp+372], 6
	call	?GetName@CvReligion@@QBE?AVCvString@@XZ	; CvReligion::GetName
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+368], 7
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _unknownText$225754[esp+364]
	call	ebp
	lea	ecx, DWORD PTR $T239135[esp+360]
	mov	BYTE PTR __$EHRec$[esp+368], 6
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1367 : 
; 1368 : 					pNotifications->Add(NOTIFICATION_REFORMATION_BELIEF_ADDED, unknownText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$225737[esp+376]
	call	esi
	push	eax
	lea	ecx, DWORD PTR _unknownText$225754[esp+380]
	call	esi
	push	eax
	push	1614113729				; 60356bc1H
$LN100@AddReforma:
	mov	ecx, DWORD PTR _pNotifications$225735[esp+388]
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 1369 : 				}

	lea	ecx, DWORD PTR _unknownText$225754[esp+360]
	mov	BYTE PTR __$EHRec$[esp+368], 2
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN2@AddReforma:

; 1370 : 			}
; 1371 : 		}

	lea	ecx, DWORD PTR _notificationText$225740[esp+360]
	mov	BYTE PTR __$EHRec$[esp+368], 1
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
	lea	ecx, DWORD PTR _strSummary$225737[esp+360]
	mov	DWORD PTR __$EHRec$[esp+368], -1
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN6@AddReforma:

; 1372 : 
; 1373 : 		// Logging
; 1374 : 		if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	SHORT $LN8@AddReforma

; 1375 : 		{
; 1376 : 			CvString strLogMsg;

	lea	ecx, DWORD PTR _strLogMsg$225759[esp+360]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1377 : 			strLogMsg = kPlayer.getCivilizationShortDescription();

	mov	ecx, DWORD PTR _kPlayer$[esp+360]
	mov	DWORD PTR __$EHRec$[esp+368], 8
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	lea	ecx, DWORD PTR _strLogMsg$225759[esp+360]
	test	eax, eax
	je	SHORT $LN83@AddReforma
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN82@AddReforma
$LN83@AddReforma:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN82@AddReforma:

; 1378 : 			strLogMsg += ", REFORMATION BELIEF ADDED";

	push	OFFSET $SG225760
	lea	ecx, DWORD PTR _strLogMsg$225759[esp+364]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1379 : 			LogReligionMessage(strLogMsg);

	mov	ecx, DWORD PTR _this$[esp+360]
	lea	edx, DWORD PTR _strLogMsg$225759[esp+360]
	push	edx
	call	?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z ; CvGameReligions::LogReligionMessage

; 1380 : 		}

	lea	ecx, DWORD PTR _strLogMsg$225759[esp+360]
	mov	DWORD PTR __$EHRec$[esp+368], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN8@AddReforma:
	mov	eax, DWORD PTR tv581[esp+360]
	inc	DWORD PTR _iNotifyLoop$225728[esp+360]
	add	eax, 63236				; 0000f704H
	cmp	eax, 1391192				; 00153a58H
	mov	DWORD PTR tv581[esp+360], eax
	jl	$LL97@AddReforma

; 1381 : 	}
; 1382 : 
; 1383 : 	GC.GetEngineUserInterface()->setDirty(CityInfo_DIRTY_BIT, true);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8600
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+260]
	push	1
	push	18					; 00000012H
	call	edx
$LN99@AddReforma:
	pop	ebp
$LN16@AddReforma:

; 1384 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+356]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 344				; 00000158H
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$0:
	lea	ecx, DWORD PTR _args$225725[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$1:
	lea	ecx, DWORD PTR _strSummary$225737[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$2:
	lea	ecx, DWORD PTR _notificationText$225740[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$3:
	lea	ecx, DWORD PTR $T239132[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$4:
	lea	ecx, DWORD PTR _localizedText$225746[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$5:
	lea	ecx, DWORD PTR $T239134[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$6:
	lea	ecx, DWORD PTR _unknownText$225754[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$7:
	lea	ecx, DWORD PTR $T239135[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z$8:
	lea	ecx, DWORD PTR _strLogMsg$225759[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z ENDP ; CvGameReligions::AddReformationBelief
PUBLIC	?GetBeliefYieldForKill@CvGameReligions@@QAEHW4YieldTypes@@HHW4PlayerTypes@@@Z ; CvGameReligions::GetBeliefYieldForKill
EXTRN	?GetFaithFromKills@CvReligionBeliefs@@QBEHH@Z:PROC ; CvReligionBeliefs::GetFaithFromKills
; Function compile flags: /Ogtpy
;	COMDAT ?GetBeliefYieldForKill@CvGameReligions@@QAEHW4YieldTypes@@HHW4PlayerTypes@@@Z
_TEXT	SEGMENT
_iRtnValue$ = -8					; size = 4
_this$ = -4						; size = 4
_iLoop$ = 8						; size = 4
_eYield$ = 8						; size = 4
_iX$ = 12						; size = 4
_iY$ = 16						; size = 4
_eWinningPlayer$ = 20					; size = 4
?GetBeliefYieldForKill@CvGameReligions@@QAEHW4YieldTypes@@HHW4PlayerTypes@@@Z PROC ; CvGameReligions::GetBeliefYieldForKill, COMDAT
; _this$ = ecx

; 2350 : {

	sub	esp, 8

; 2351 : 	int iRtnValue = 0;
; 2352 : 	int iMultiplier;
; 2353 : 	int iLoop;
; 2354 : 	CvCity* pLoopCity;
; 2355 : 
; 2356 : 	// Only Faith supported for now
; 2357 : 	if(eYield != YIELD_FAITH)

	cmp	DWORD PTR _eYield$[esp+4], 5
	mov	DWORD PTR _this$[esp+8], ecx
	mov	DWORD PTR _iRtnValue$[esp+8], 0
	je	SHORT $LN9@GetBeliefY

; 2358 : 	{
; 2359 : 		return iRtnValue;

	xor	eax, eax

; 2398 : }

	add	esp, 8
	ret	16					; 00000010H
$LN9@GetBeliefY:

; 2360 : 	}
; 2361 : 
; 2362 : 	for(pLoopCity = GET_PLAYER(eWinningPlayer).firstCity(&iLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(eWinningPlayer).nextCity(&iLoop))

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ebp
	mov	ebp, DWORD PTR _eWinningPlayer$[esp+8]
	imul	ebp, 63236				; 0000f704H
	push	esi
	push	0
	lea	edx, DWORD PTR _iLoop$[esp+16]
	lea	ecx, DWORD PTR [eax+ebp]
	push	edx
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	$LN6@GetBeliefY
	push	ebx
	push	edi
	npad	7
$LL8@GetBeliefY:

; 2363 : 	{
; 2364 : 		// Find religion in this city
; 2365 : 		ReligionTypes eReligion = pLoopCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	ebx, eax

; 2366 : 
; 2367 : 		if(eReligion != NO_RELIGION)

	cmp	ebx, -1
	je	$LN7@GetBeliefY

; 2368 : 		{
; 2369 : 			// Find distance to this city
; 2370 : 			int iDistance = plotDistance(iX, iY, pLoopCity->getX(), pLoopCity->getY());

	mov	eax, DWORD PTR [esi+108]
	mov	ecx, DWORD PTR [esi+96]
	mov	edx, DWORD PTR _iY$[esp+20]
	push	eax
	mov	eax, DWORD PTR _iX$[esp+24]
	push	ecx
	push	edx
	push	eax
	call	?plotDistance@@YAHHHHH@Z		; plotDistance

; 2371 : 
; 2372 : 			// Do we have a yield from this?
; 2373 : 			iMultiplier = GetReligion(eReligion, eWinningPlayer)->m_Beliefs.GetFaithFromKills(iDistance);

	mov	ecx, DWORD PTR _eWinningPlayer$[esp+36]
	add	esp, 16					; 00000010H
	mov	edi, eax
	push	edi
	push	ecx
	mov	ecx, DWORD PTR _this$[esp+32]
	push	ebx
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	ecx, eax
	add	ecx, 152				; 00000098H
	call	?GetFaithFromKills@CvReligionBeliefs@@QBEHH@Z ; CvReligionBeliefs::GetFaithFromKills

; 2374 : 			if(iMultiplier > 0)

	test	eax, eax
	jg	SHORT $LN25@GetBeliefY

; 2378 : 				break;
; 2379 : 			}
; 2380 : 			else
; 2381 : 			{
; 2382 : 				BeliefTypes eSecondaryPantheon = pLoopCity->GetCityReligions()->GetSecondaryReligionPantheonBelief();

	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetSecondaryReligionPantheonBelief@CvCityReligions@@QAE?AW4BeliefTypes@@XZ ; CvCityReligions::GetSecondaryReligionPantheonBelief
	mov	esi, eax

; 2383 : 				if (eSecondaryPantheon != NO_BELIEF)

	cmp	esi, -1
	je	SHORT $LN7@GetBeliefY

; 2384 : 				{
; 2385 : 					iMultiplier = GC.GetGameBeliefs()->GetEntry(eSecondaryPantheon)->GetFaithFromKills();

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ecx, eax
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetFaithFromKills@CvBeliefEntry@@QBEHXZ ; CvBeliefEntry::GetFaithFromKills
	mov	ebx, eax

; 2386 : 					if(iMultiplier > 0 && iDistance <= GC.GetGameBeliefs()->GetEntry(eSecondaryPantheon)->GetMaxDistance())

	test	ebx, ebx
	jle	SHORT $LN7@GetBeliefY
	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ecx, eax
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	ecx, eax
	call	?GetMaxDistance@CvBeliefEntry@@QBEHXZ	; CvBeliefEntry::GetMaxDistance
	cmp	edi, eax
	jle	SHORT $LN26@GetBeliefY
$LN7@GetBeliefY:

; 2360 : 	}
; 2361 : 
; 2362 : 	for(pLoopCity = GET_PLAYER(eWinningPlayer).firstCity(&iLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(eWinningPlayer).nextCity(&iLoop))

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	eax, DWORD PTR _iLoop$[esp+24]
	lea	ecx, DWORD PTR [edx+ebp]
	push	eax
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	$LL8@GetBeliefY

; 2390 : 						break;
; 2391 : 					}	
; 2392 : 				}
; 2393 : 			}
; 2394 : 		}
; 2395 : 	}
; 2396 : 
; 2397 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[esp+24]
	pop	edi
	pop	ebx
	pop	esi
	pop	ebp

; 2398 : }

	add	esp, 8
	ret	16					; 00000010H
$LN25@GetBeliefY:
	pop	edi
	pop	ebx
	pop	esi

; 2375 : 			{
; 2376 : 				// Just looking for one city providing this
; 2377 : 				iRtnValue = iMultiplier;

	mov	DWORD PTR _iRtnValue$[esp+12], eax
	pop	ebp

; 2398 : }

	add	esp, 8
	ret	16					; 00000010H
$LN26@GetBeliefY:
	pop	edi

; 2387 : 					{
; 2388 : 						// Just looking for one city providing this
; 2389 : 						iRtnValue = iMultiplier;

	mov	DWORD PTR _iRtnValue$[esp+20], ebx
	pop	ebx
$LN6@GetBeliefY:

; 2390 : 						break;
; 2391 : 					}	
; 2392 : 				}
; 2393 : 			}
; 2394 : 		}
; 2395 : 	}
; 2396 : 
; 2397 : 	return iRtnValue;

	mov	eax, DWORD PTR _iRtnValue$[esp+16]
	pop	esi
	pop	ebp

; 2398 : }

	add	esp, 8
	ret	16					; 00000010H
?GetBeliefYieldForKill@CvGameReligions@@QAEHW4YieldTypes@@HHW4PlayerTypes@@@Z ENDP ; CvGameReligions::GetBeliefYieldForKill
_TEXT	ENDS
PUBLIC	?GetCostNextProphet@CvPlayerReligions@@QBEH_N0@Z ; CvPlayerReligions::GetCostNextProphet
EXTRN	?getAITrainPercent@CvHandicapInfo@@QBEHXZ:PROC	; CvHandicapInfo::getAITrainPercent
EXTRN	?getHandicapInfo@CvGame@@QBEAAVCvHandicapInfo@@XZ:PROC ; CvGame::getHandicapInfo
EXTRN	?IsAITeammateOfHuman@CvPlayer@@QBE_NXZ:PROC	; CvPlayer::IsAITeammateOfHuman
; Function compile flags: /Ogtpy
;	COMDAT ?GetCostNextProphet@CvPlayerReligions@@QBEH_N0@Z
_TEXT	SEGMENT
_bIncludeBeliefDiscounts$ = 8				; size = 1
_bAdjustForSpeedDifficulty$ = 12			; size = 1
?GetCostNextProphet@CvPlayerReligions@@QBEH_N0@Z PROC	; CvPlayerReligions::GetCostNextProphet, COMDAT
; _this$ = ecx

; 2773 : {

	push	ebx
	push	esi
	mov	ebx, ecx

; 2774 : 	int iCost = GC.getGame().GetGameReligions()->GetFaithGreatProphetNumber(m_iNumProphetsSpawned + 1);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	mov	edi, DWORD PTR [ebx+4]
	inc	edi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	xor	esi, esi
	cmp	edi, 1
	jl	SHORT $LN10@GetCostNex
	jne	SHORT $LN11@GetCostNex
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7864
	jmp	SHORT $LN10@GetCostNex
$LN11@GetCostNex:
	dec	edi
	push	edi
	mov	ecx, eax
	call	?GetFaithGreatProphetNumber@CvGameReligions@@QBEHH@Z ; CvGameReligions::GetFaithGreatProphetNumber
	imul	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7876
	mov	esi, eax
	add	esi, edi
$LN10@GetCostNex:

; 2775 : 
; 2776 : 	// Boost to faith due to belief?
; 2777 : 	ReligionTypes ePlayerReligion = GetReligionCreatedByPlayer();

	mov	eax, DWORD PTR [ebx]
	mov	eax, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer

; 2778 : 	if (bIncludeBeliefDiscounts && ePlayerReligion > RELIGION_PANTHEON)

	cmp	BYTE PTR _bIncludeBeliefDiscounts$[esp+8], 0
	je	SHORT $LN3@GetCostNex
	test	eax, eax
	jle	SHORT $LN3@GetCostNex

; 2779 : 	{
; 2780 : 		const CvReligion* pReligion = NULL;
; 2781 : 		pReligion = GC.getGame().GetGameReligions()->GetReligion(ePlayerReligion, m_pPlayer->GetID());

	mov	ecx, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [ecx+44]
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 2782 : 		if(pReligion)

	test	eax, eax
	je	SHORT $LN3@GetCostNex

; 2783 : 		{
; 2784 : 			int iProphetCostMod = pReligion->m_Beliefs.GetProphetCostModifier();

	mov	eax, DWORD PTR [eax+200]

; 2785 : 
; 2786 : 			if(iProphetCostMod != 0)

	test	eax, eax
	je	SHORT $LN3@GetCostNex

; 2787 : 			{
; 2788 : 				iCost *= (100 + iProphetCostMod);

	lea	ecx, DWORD PTR [eax+100]
	imul	ecx, esi

; 2789 : 				iCost /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
$LN3@GetCostNex:

; 2790 : 			}
; 2791 : 		}
; 2792 : 	}
; 2793 : 
; 2794 : 	if (bAdjustForSpeedDifficulty)

	cmp	BYTE PTR _bAdjustForSpeedDifficulty$[esp+8], 0
	je	SHORT $LN1@GetCostNex

; 2795 : 	{
; 2796 : 		// Adjust for game speed
; 2797 : 		iCost *= GC.getGame().getGameSpeedInfo().getTrainPercent();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getTrainPercent@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getTrainPercent
	mov	ecx, eax
	imul	ecx, esi

; 2798 : 		iCost /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx

; 2799 : 
; 2800 : 		// Adjust for difficulty
; 2801 : 		if(!m_pPlayer->isHuman() && !m_pPlayer->IsAITeammateOfHuman() && !m_pPlayer->isBarbarian())

	mov	ecx, DWORD PTR [ebx]
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	esi, eax
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	test	al, al
	jne	SHORT $LN1@GetCostNex
	mov	ecx, DWORD PTR [ebx]
	call	?IsAITeammateOfHuman@CvPlayer@@QBE_NXZ	; CvPlayer::IsAITeammateOfHuman
	test	al, al
	jne	SHORT $LN1@GetCostNex
	mov	ecx, DWORD PTR [ebx]
	call	?isBarbarian@CvPlayer@@QBE_NXZ		; CvPlayer::isBarbarian
	test	al, al
	jne	SHORT $LN1@GetCostNex

; 2802 : 		{
; 2803 : 			iCost *= GC.getGame().getHandicapInfo().getAITrainPercent();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getHandicapInfo@CvGame@@QBEAAVCvHandicapInfo@@XZ ; CvGame::getHandicapInfo
	mov	ecx, eax
	call	?getAITrainPercent@CvHandicapInfo@@QBEHXZ ; CvHandicapInfo::getAITrainPercent
	mov	ecx, eax
	imul	ecx, esi

; 2804 : 			iCost /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	mov	esi, ecx
$LN1@GetCostNex:

; 2805 : 		}
; 2806 : 	}
; 2807 : 
; 2808 : #ifdef NQ_SPAWN_PROPHETS_REMOVE_ONLY_REQUIRED_FAITH
; 2809 : 	// Make the number not be funky
; 2810 : 	int iDivisor = /*10*/ GC.getGOLD_PURCHASE_VISIBLE_DIVISOR();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+6992

; 2811 : 	iCost /= iDivisor;

	mov	eax, esi
	cdq
	idiv	ecx
	pop	edi
	pop	esi
	pop	ebx

; 2812 : 	iCost *= iDivisor;

	imul	eax, ecx

; 2813 : #endif
; 2814 : 
; 2815 : 	return iCost;
; 2816 : }

	ret	8
?GetCostNextProphet@CvPlayerReligions@@QBEH_N0@Z ENDP	; CvPlayerReligions::GetCostNextProphet
_TEXT	ENDS
PUBLIC	??0CvCityReligions@@QAE@XZ			; CvCityReligions::CvCityReligions
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$??0CvCityReligions@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CvCityReligions@@QAE@XZ$0
__ehfuncinfo$??0CvCityReligions@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CvCityReligions@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ??0CvCityReligions@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CvCityReligions@@QAE@XZ PROC				; CvCityReligions::CvCityReligions, COMDAT
; _this$ = ecx

; 3112 : {

	push	-1
	push	__ehhandler$??0CvCityReligions@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	mov	eax, ecx
	lea	edx, DWORD PTR [eax+12]
	xor	ecx, ecx
	mov	DWORD PTR [eax+8], 8
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+212], ecx
	mov	DWORD PTR [eax+216], 8
	lea	edx, DWORD PTR [eax+220]
	mov	DWORD PTR [eax+208], edx
	mov	BYTE PTR [eax+420], cl
	mov	DWORD PTR [eax+424], ecx

; 3113 : 	m_ReligionStatus.clear();

	mov	DWORD PTR [eax+4], ecx

; 3114 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CvCityReligions@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligionInCity,8,0,297,0>::~FStaticVector<CvReligionInCity,8,0,297,0>
__ehhandler$??0CvCityReligions@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??0CvCityReligions@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CvCityReligions@@QAE@XZ ENDP				; CvCityReligions::CvCityReligions
PUBLIC	??1CvCityReligions@@QAE@XZ			; CvCityReligions::~CvCityReligions
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$??1CvCityReligions@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvCityReligions@@QAE@XZ$0
__ehfuncinfo$??1CvCityReligions@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CvCityReligions@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ??1CvCityReligions@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CvCityReligions@@QAE@XZ PROC				; CvCityReligions::~CvCityReligions, COMDAT
; _this$ = ecx

; 3118 : {

	push	-1
	push	__ehhandler$??1CvCityReligions@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+20], esi

; 3119 : 
; 3120 : }

	mov	eax, DWORD PTR [esi+208]
	lea	ecx, DWORD PTR [esi+220]
	mov	DWORD PTR __$EHRec$[esp+28], 0
	cmp	eax, ecx
	je	SHORT $LN7@CvCityReli
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN7@CvCityReli:
	mov	eax, DWORD PTR [esi]
	add	esi, 12					; 0000000cH
	cmp	eax, esi
	mov	DWORD PTR __$EHRec$[esp+28], -1
	pop	esi
	je	SHORT $LN21@CvCityReli
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN21@CvCityReli:
	mov	ecx, DWORD PTR __$EHRec$[esp+16]
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvCityReligions@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligionInCity,8,0,297,0>::~FStaticVector<CvReligionInCity,8,0,297,0>
__ehhandler$??1CvCityReligions@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1CvCityReligions@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvCityReligions@@QAE@XZ ENDP				; CvCityReligions::~CvCityReligions
PUBLIC	?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z ; CvCityReligions::CityConvertsReligion
EXTRN	?ChangeNegativeReligiousConversionPoints@CvDiplomacyAI@@QAEXW4PlayerTypes@@H@Z:PROC ; CvDiplomacyAI::ChangeNegativeReligiousConversionPoints
EXTRN	__imp_??1Results@Database@@UAE@XZ:PROC
EXTRN	__imp_?GetInt@Results@Database@@QAEHH@Z:PROC
EXTRN	?getWorldSize@CvMap@@QAE?AW4WorldSizeTypes@@XZ:PROC ; CvMap::getWorldSize
EXTRN	__imp_?ColumnPosition@Results@Database@@QAEHPBD@Z:PROC
EXTRN	__imp_?Step@Results@Database@@QAE_NXZ:PROC
EXTRN	__imp_?SelectAt@Connection@Database@@QAE_NAAVResults@2@PBD11@Z:PROC
EXTRN	__imp_??0Results@Database@@QAE@PBD@Z:PROC
EXTRN	?isCapital@CvCity@@QBE_NXZ:PROC			; CvCity::isCapital
EXTRN	__imp_??4String@Localization@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_??4String@Localization@@QAEAAV01@PBD@Z:PROC
EXTRN	__imp_??0String@Localization@@QAE@XZ:PROC
EXTRN	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ:PROC ; CvGame::getActivePlayer
EXTRN	?ChangeGold@CvTreasury@@QAEXH@Z:PROC		; CvTreasury::ChangeGold
EXTRN	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ:PROC ; CvPlayer::GetTreasury
EXTRN	?GetGoldWhenCityAdopts@CvReligionBeliefs@@QBEHXZ:PROC ; CvReligionBeliefs::GetGoldWhenCityAdopts
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaargshandle.h
xdata$x	SEGMENT
__ehfuncinfo$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$6
	DD	05H
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$8
	DD	05H
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$11
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z
_TEXT	SEGMENT
_args$227253 = -556					; size = 4
_eOwnerPlayerReligion$227183 = -556			; size = 4
_bResult$227254 = -549					; size = 1
_pNewReligion$227169 = -548				; size = 4
$T239563 = -544						; size = 4
$T239560 = -544						; size = 4
_eOwnerPlayer$227181 = -540				; size = 4
_kStandardSize$227214 = -536				; size = 64
_strMessage$227201 = -536				; size = 80
_strSummary$227187 = -536				; size = 80
$T239564 = -456						; size = 28
$T239561 = -456						; size = 28
_strSummary$227202 = -428				; size = 80
_strMessage$227186 = -428				; size = 80
$T239565 = -348						; size = 80
$T239562 = -348						; size = 80
_text$227174 = -268					; size = 256
__$EHRec$ = -12						; size = 12
_eMajority$ = 8						; size = 4
_eOldMajority$ = 12					; size = 4
_eResponsibleParty$ = 16				; size = 4
?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z PROC ; CvCityReligions::CityConvertsReligion, COMDAT
; _this$ = ecx

; 4464 : {

	push	-1
	mov	eax, DWORD PTR fs:0
	push	__ehhandler$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 544				; 00000220H
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 4465 : 	CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 4466 : 
; 4467 : 	m_pCity->UpdateReligion(eMajority);

	mov	ebx, DWORD PTR _eMajority$[esp+568]
	mov	ecx, DWORD PTR [esi+416]
	push	ebx
	mov	edi, eax
	call	?UpdateReligion@CvCity@@QAEXW4ReligionTypes@@@Z ; CvCity::UpdateReligion

; 4468 : 
; 4469 : 	if(eOldMajority > RELIGION_PANTHEON)

	mov	eax, DWORD PTR _eOldMajority$[esp+568]
	test	eax, eax
	jle	SHORT $LN207@CityConver

; 4470 : 	{
; 4471 : 		const CvReligion* pOldReligion = pReligions->GetReligion(eOldMajority, NO_PLAYER);

	push	-1
	push	eax
	mov	ecx, edi
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 4472 : 		GET_PLAYER(pOldReligion->m_eFounder).UpdateReligion();

	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	call	?UpdateReligion@CvPlayer@@QAEXXZ	; CvPlayer::UpdateReligion
$LN207@CityConver:

; 4473 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 4474 : 		GET_PLAYER(pOldReligion->m_eFounder).doSelfConsistencyCheckAllCities();
; 4475 : #endif
; 4476 : 	}
; 4477 : 
; 4478 : 	if(eMajority > RELIGION_PANTHEON)

	test	ebx, ebx
	jle	$LN1@CityConver

; 4479 : 	{
; 4480 : 		const CvReligion* pNewReligion = pReligions->GetReligion(eMajority, NO_PLAYER);

	push	-1
	push	ebx
	mov	ecx, edi
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	ebx, eax

; 4481 : 		GET_PLAYER(pNewReligion->m_eFounder).UpdateReligion();

	mov	ecx, DWORD PTR [ebx+4]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _pNewReligion$227169[esp+572], ebx
	call	?UpdateReligion@CvPlayer@@QAEXXZ	; CvPlayer::UpdateReligion

; 4482 : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 4483 : 		GET_PLAYER(pNewReligion->m_eFounder).doSelfConsistencyCheckAllCities();
; 4484 : #endif
; 4485 : 
; 4486 : 		// Pay adoption bonuses (if any)
; 4487 : 		if(!m_bHasPaidAdoptionBonus)

	cmp	BYTE PTR [esi+420], 0
	jne	$LN33@CityConver

; 4488 : 		{
; 4489 : 			int iGoldBonus = pNewReligion->m_Beliefs.GetGoldWhenCityAdopts();

	lea	ecx, DWORD PTR [ebx+152]
	call	?GetGoldWhenCityAdopts@CvReligionBeliefs@@QBEHXZ ; CvReligionBeliefs::GetGoldWhenCityAdopts

; 4490 : 			iGoldBonus *= GC.getGame().getGameSpeedInfo().getTrainPercent();;

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	edi, eax
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getTrainPercent@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getTrainPercent
	mov	ecx, eax
	imul	ecx, edi

; 4491 : 			iGoldBonus /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	edi, edx
	shr	edi, 31					; 0000001fH
	add	edi, edx

; 4492 : 
; 4493 : 			if(iGoldBonus > 0)

	test	edi, edi
	jle	$LN33@CityConver

; 4494 : 			{
; 4495 : 				GET_PLAYER(pNewReligion->m_eFounder).GetTreasury()->ChangeGold(iGoldBonus);

	mov	ecx, DWORD PTR [ebx+4]
	imul	ecx, 63236				; 0000f704H
	add	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	edi
	call	?GetTreasury@CvPlayer@@QBEPAVCvTreasury@@XZ ; CvPlayer::GetTreasury
	mov	ecx, eax
	call	?ChangeGold@CvTreasury@@QAEXH@Z		; CvTreasury::ChangeGold

; 4496 : 				SetPaidAdoptionBonus(true);

	mov	BYTE PTR [esi+420], 1

; 4497 : 
; 4498 : 				if(pNewReligion->m_eFounder == GC.getGame().getActivePlayer())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR [ebx+4], eax
	jne	SHORT $LN33@CityConver

; 4499 : 				{
; 4500 : 					char text[256] = {0};

	push	255					; 000000ffH
	lea	eax, DWORD PTR _text$227174[esp+577]
	push	0
	push	eax
	mov	BYTE PTR _text$227174[esp+584], 0
	call	_memset

; 4501 : 					sprintf_s(text, "[COLOR_YELLOW]+%d[ENDCOLOR][ICON_GOLD]", iGoldBonus);

	push	edi
	lea	ecx, DWORD PTR _text$227174[esp+588]
	push	OFFSET $SG227180
	push	ecx
	call	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ	; sprintf_s<256>

; 4502 : 					GC.GetEngineUserInterface()->AddPopupText(m_pCity->getX(), m_pCity->getY(), text, 0.5f);

	mov	eax, DWORD PTR [esi+416]
	mov	edx, DWORD PTR [eax+108]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8600
	mov	eax, DWORD PTR [eax+96]
	mov	edi, DWORD PTR [ecx]
	add	esp, 20					; 00000014H
	mov	DWORD PTR [esp], 1056964608		; 3f000000H
	lea	ebx, DWORD PTR _text$227174[esp+576]
	push	ebx
	push	edx
	mov	edx, DWORD PTR [edi+184]
	push	eax
	call	edx
$LN33@CityConver:

; 4503 : 				}
; 4504 : 			}
; 4505 : 		}
; 4506 : 
; 4507 : 		// Notification if the player's city was converted to a religion they didn't found
; 4508 : 		PlayerTypes eOwnerPlayer = m_pCity->getOwner();

	mov	eax, DWORD PTR [esi+416]
	mov	ebp, DWORD PTR [eax+84]

; 4509 : 		CvPlayerAI& kOwnerPlayer = GET_PLAYER(eOwnerPlayer);

	mov	edi, ebp
	imul	edi, 63236				; 0000f704H
	add	edi, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	DWORD PTR _eOwnerPlayer$227181[esp+572], ebp

; 4510 : 		const ReligionTypes eOwnerPlayerReligion = kOwnerPlayer.GetReligions()->GetReligionCreatedByPlayer();

	mov	ecx, edi
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+44]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	mov	ebx, eax
	mov	DWORD PTR _eOwnerPlayerReligion$227183[esp+572], ebx

; 4511 : 
; 4512 : 		if(eOwnerPlayer != eResponsibleParty && eMajority != eOldMajority && pNewReligion->m_eFounder != eOwnerPlayer
; 4513 : 			&& eOwnerPlayerReligion > RELIGION_PANTHEON)

	cmp	ebp, DWORD PTR _eResponsibleParty$[esp+568]
	je	$LN208@CityConver
	mov	eax, DWORD PTR _eOldMajority$[esp+568]
	cmp	DWORD PTR _eMajority$[esp+568], eax
	je	$LN208@CityConver
	mov	edx, DWORD PTR _pNewReligion$227169[esp+572]
	cmp	DWORD PTR [edx+4], ebp
	je	$LN32@CityConver
	test	ebx, ebx
	jle	$LN32@CityConver

; 4514 : 		{
; 4515 : 			if(kOwnerPlayer.GetNotifications())

	mov	ecx, edi
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	test	eax, eax
	je	$LN31@CityConver

; 4516 : 			{
; 4517 : 				Localization::String strMessage;

	mov	ebp, DWORD PTR __imp_??0String@Localization@@QAE@XZ
	lea	ecx, DWORD PTR _strMessage$227186[esp+572]
	call	ebp

; 4518 : 				Localization::String strSummary;

	lea	ecx, DWORD PTR _strSummary$227187[esp+572]
	mov	DWORD PTR __$EHRec$[esp+580], 0
	call	ebp

; 4519 : 				strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_RELIGION_SPREAD_ACTIVE_PLAYER", m_pCity->getName());

	mov	ecx, DWORD PTR [esi+416]
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T239560[esp+600], esp
	push	eax
	mov	BYTE PTR __$EHRec$[esp+612], 1
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	lea	ecx, DWORD PTR $T239561[esp+600]
	push	OFFSET $SG227191
	push	ecx
	call	??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z ; GetLocalizedText<CvString>
	add	esp, 36					; 00000024H
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+580], 2
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$227186[esp+576]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@PBD@Z
	lea	ecx, DWORD PTR $T239561[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4520 : 				strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_SPREAD_ACTIVE_PLAYER_S");

	lea	edx, DWORD PTR $T239562[esp+572]
	push	OFFSET $SG227193
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strSummary$227187[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 3
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	ebp, DWORD PTR __imp_??1String@Localization@@UAE@XZ
	lea	ecx, DWORD PTR $T239562[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 1
	call	ebp

; 4521 : 				kOwnerPlayer.GetNotifications()->Add(NOTIFICATION_RELIGION_SPREAD, strMessage.toUTF8(), strSummary.toUTF8(), m_pCity->getX(), m_pCity->getY(), -1);

	mov	eax, DWORD PTR [esi+416]
	mov	ecx, DWORD PTR [eax+108]
	mov	eax, DWORD PTR [eax+96]
	mov	ebx, DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	-1
	push	-1
	push	ecx
	push	eax
	lea	ecx, DWORD PTR _strSummary$227187[esp+588]
	call	ebx
	push	eax
	lea	ecx, DWORD PTR _strMessage$227186[esp+592]
	call	ebx
	push	eax
	push	1912276298				; 71fb054aH
	mov	ecx, edi
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 4522 : 			}

	lea	ecx, DWORD PTR _strSummary$227187[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 0
	call	ebp
	lea	ecx, DWORD PTR _strMessage$227186[esp+572]
	mov	DWORD PTR __$EHRec$[esp+580], -1
	call	ebp
	mov	ebp, DWORD PTR _eOwnerPlayer$227181[esp+572]
	mov	ebx, DWORD PTR _eOwnerPlayerReligion$227183[esp+572]
$LN31@CityConver:

; 4523 : 
; 4524 : 			//Achievements!
; 4525 : 			if(eOwnerPlayer == GC.getGame().getActivePlayer()){

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	ebp, eax
	jne	$LN208@CityConver

; 4526 : 				const CvReligion* pkReligion = GC.getGame().GetGameReligions()->GetReligion(eOwnerPlayerReligion, eOwnerPlayer);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	ebp
	push	ebx
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 4527 : 				if(pkReligion != NULL)

	test	eax, eax
	je	$LN208@CityConver

; 4528 : 				{
; 4529 : 					if(m_pCity->getX() == pkReligion->m_iHolyCityX && m_pCity->getY() == pkReligion->m_iHolyCityY)

	mov	ecx, DWORD PTR [esi+416]
	mov	edx, DWORD PTR [ecx+96]
	cmp	edx, DWORD PTR [eax+8]
	jne	$LN208@CityConver
	mov	ecx, DWORD PTR [ecx+108]
	cmp	ecx, DWORD PTR [eax+12]
	jne	$LN208@CityConver

; 4530 : 					{
; 4531 : 						gDLL->UnlockAchievement(ACHIEVEMENT_XP1_20);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8596
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+828]
	push	210					; 000000d2H
	call	edx

; 4532 : 					}
; 4533 : 				}
; 4534 : 			}
; 4535 : 		}

	jmp	$LN208@CityConver
$LN32@CityConver:

; 4536 : 
; 4537 : 		else if(eOwnerPlayer != eResponsibleParty && eMajority != eOldMajority && eOldMajority == NO_RELIGION)

	cmp	eax, -1
	jne	$LN208@CityConver

; 4538 : 		{
; 4539 : 			if(kOwnerPlayer.GetNotifications())

	mov	ecx, edi
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	test	eax, eax
	je	$LN208@CityConver

; 4540 : 			{
; 4541 : 				Localization::String strMessage;

	mov	ebp, DWORD PTR __imp_??0String@Localization@@QAE@XZ
	lea	ecx, DWORD PTR _strMessage$227201[esp+572]
	call	ebp

; 4542 : 				Localization::String strSummary;

	lea	ecx, DWORD PTR _strSummary$227202[esp+572]
	mov	DWORD PTR __$EHRec$[esp+580], 4
	call	ebp

; 4543 : 				strMessage = GetLocalizedText("TXT_KEY_NOTIFICATION_RELIGION_SPREAD_INITIAL_CONVERSION", m_pCity->getName());

	mov	ecx, DWORD PTR [esi+416]
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T239563[esp+600], esp
	mov	bl, 5
	push	eax
	mov	BYTE PTR __$EHRec$[esp+612], bl
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	lea	ecx, DWORD PTR $T239564[esp+600]
	push	OFFSET $SG227206
	push	ecx
	call	??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z ; GetLocalizedText<CvString>
	add	esp, 36					; 00000024H
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+580], 6
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strMessage$227201[esp+576]
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@PBD@Z
	lea	ecx, DWORD PTR $T239564[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 4544 : 				strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_SPREAD_INITIAL_CONVERSION_S");

	lea	edx, DWORD PTR $T239565[esp+572]
	push	OFFSET $SG227208
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _strSummary$227202[esp+576]
	mov	BYTE PTR __$EHRec$[esp+584], 7
	call	DWORD PTR __imp_??4String@Localization@@QAEAAV01@ABV01@@Z
	mov	ebp, DWORD PTR __imp_??1String@Localization@@UAE@XZ
	lea	ecx, DWORD PTR $T239565[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], bl
	call	ebp

; 4545 : 				kOwnerPlayer.GetNotifications()->Add(NOTIFICATION_RELIGION_SPREAD_NATURAL, strMessage.toUTF8(), strSummary.toUTF8(), m_pCity->getX(), m_pCity->getY(), -1);

	mov	eax, DWORD PTR [esi+416]
	mov	ecx, DWORD PTR [eax+108]
	mov	eax, DWORD PTR [eax+96]
	mov	ebx, DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	push	-1
	push	-1
	push	ecx
	push	eax
	lea	ecx, DWORD PTR _strSummary$227202[esp+588]
	call	ebx
	push	eax
	lea	ecx, DWORD PTR _strMessage$227201[esp+592]
	call	ebx
	push	eax
	push	-976947174				; c5c4f81aH
	mov	ecx, edi
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ecx, eax
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 4546 : 			}

	lea	ecx, DWORD PTR _strSummary$227202[esp+572]
	mov	BYTE PTR __$EHRec$[esp+580], 4
	call	ebp
	lea	ecx, DWORD PTR _strMessage$227201[esp+572]
	mov	DWORD PTR __$EHRec$[esp+580], -1
	call	ebp
$LN208@CityConver:

; 4547 : 		}
; 4548 : 
; 4549 : 		//More Achievements
; 4550 : 		if(m_pCity->getOwner() != GC.getGame().getActivePlayer() && pNewReligion->m_eFounder == GC.getGame().getActivePlayer())

	mov	eax, DWORD PTR [esi+416]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	edi, DWORD PTR [eax+84]
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	edi, eax
	je	SHORT $LN209@CityConver
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	mov	edi, DWORD PTR _pNewReligion$227169[esp+572]
	cmp	DWORD PTR [edi+4], eax
	jne	SHORT $LN23@CityConver

; 4551 : 		{
; 4552 : 			if(m_pCity->GetCityReligions()->IsHolyCityAnyReligion() && !m_pCity->GetCityReligions()->IsHolyCityForReligion(pNewReligion->m_eReligion))

	mov	ecx, DWORD PTR [esi+416]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsHolyCityAnyReligion@CvCityReligions@@QAE_NXZ ; CvCityReligions::IsHolyCityAnyReligion
	test	al, al
	je	SHORT $LN23@CityConver
	mov	ecx, DWORD PTR [edi]
	push	ecx
	mov	ecx, DWORD PTR [esi+416]
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsHolyCityForReligion
	test	al, al
	jne	SHORT $LN23@CityConver

; 4553 : 			{
; 4554 : 				gDLL->UnlockAchievement(ACHIEVEMENT_XP1_18);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8596
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+828]
	push	208					; 000000d0H
	call	eax
	jmp	SHORT $LN23@CityConver
$LN209@CityConver:
	mov	edi, DWORD PTR _pNewReligion$227169[esp+572]
$LN23@CityConver:

; 4555 : 			}
; 4556 : 		}
; 4557 : 
; 4558 : #ifndef AUI_ACHIEVEMENT_FIX_RELIGION_WE_ARE_FAMILY_WORKING
; 4559 : 		if(m_pCity->isCapital() && pNewReligion->m_eFounder == GC.getGame().getActivePlayer())

	mov	ecx, DWORD PTR [esi+416]
	call	?isCapital@CvCity@@QBE_NXZ		; CvCity::isCapital
	test	al, al
	je	$LN210@CityConver
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR [edi+4], eax
	jne	$LN210@CityConver

; 4560 : 		{
; 4561 : 			//Determine if this is a standard size or larger map.
; 4562 : 			bool bIsStandardOrLarger = false;
; 4563 : 			Database::Connection* pDB = GC.GetGameDatabase();

	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+912

; 4564 : 			Database::Results kStandardSize;

	push	0
	lea	ecx, DWORD PTR _kStandardSize$227214[esp+576]
	call	DWORD PTR __imp_??0Results@Database@@QAE@PBD@Z

; 4565 : 			if(pDB->SelectAt(kStandardSize, "Worlds", "Type", "WORLDSIZE_STANDARD"))

	push	OFFSET $SG227216
	push	OFFSET $SG227217
	push	OFFSET $SG227218
	lea	ecx, DWORD PTR _kStandardSize$227214[esp+584]
	push	ecx
	mov	ecx, edi
	mov	DWORD PTR __$EHRec$[esp+596], 8
	call	DWORD PTR __imp_?SelectAt@Connection@Database@@QAE_NAAVResults@2@PBD11@Z
	test	al, al
	je	$LN203@CityConver

; 4566 : 			{
; 4567 : 				if(kStandardSize.Step())

	lea	ecx, DWORD PTR _kStandardSize$227214[esp+572]
	call	DWORD PTR __imp_?Step@Results@Database@@QAE_NXZ
	test	al, al
	je	$LN203@CityConver

; 4568 : 				{
; 4569 : 					int idColumn = kStandardSize.ColumnPosition("ID");

	push	OFFSET $SG227221
	lea	ecx, DWORD PTR _kStandardSize$227214[esp+576]
	call	DWORD PTR __imp_?ColumnPosition@Results@Database@@QAEHPBD@Z
	mov	edi, eax

; 4570 : 					if(idColumn >= 0)

	test	edi, edi
	jl	$LN203@CityConver

; 4571 : 					{
; 4572 : 						WorldSizeTypes eWorldSize = GC.getMap().getWorldSize();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	call	?getWorldSize@CvMap@@QAE?AW4WorldSizeTypes@@XZ ; CvMap::getWorldSize

; 4573 : 						int standardWorldSize = kStandardSize.GetInt(idColumn);

	push	edi
	lea	ecx, DWORD PTR _kStandardSize$227214[esp+576]
	mov	ebx, eax
	call	DWORD PTR __imp_?GetInt@Results@Database@@QAEHH@Z

; 4574 : 						if(eWorldSize >= standardWorldSize)

	cmp	ebx, eax
	jl	SHORT $LN203@CityConver

; 4575 : 						{
; 4576 : 							bIsStandardOrLarger = true;
; 4577 : 						}
; 4578 : 					}
; 4579 : 				}
; 4580 : 			}
; 4581 : 
; 4582 : 			if(bIsStandardOrLarger)
; 4583 : 			{
; 4584 : 				//Determine if this religion has spread to all capitals
; 4585 : 				bool bSpreadToAllCapitals = true;
; 4586 : 				for(int i = 0; i < MAX_MAJOR_CIVS; ++i)

	xor	edi, edi
	npad	12
$LL16@CityConver:

; 4587 : 				{
; 4588 : 					CvPlayerAI& kPlayer = GET_PLAYER(static_cast<PlayerTypes>(i));

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 4589 : 					if(kPlayer.isAlive())

	cmp	BYTE PTR [edi+edx+2256], 0
	lea	ecx, DWORD PTR [edi+edx]
	je	SHORT $LN206@CityConver

; 4590 : 					{
; 4591 : 						CvCity* pCapital = kPlayer.getCapitalCity();

	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity

; 4592 : 						if(pCapital != NULL)

	test	eax, eax
	je	SHORT $LN206@CityConver

; 4593 : 						{
; 4594 : 							CvCityReligions* pCityReligions = pCapital->GetCityReligions();

	mov	ecx, eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions

; 4595 : 							if(pCityReligions != NULL)

	test	eax, eax
	je	SHORT $LN206@CityConver

; 4596 : 							{
; 4597 : 								if(pCityReligions->GetReligiousMajority() != pNewReligion->m_eFounder)

	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	ecx, DWORD PTR _pNewReligion$227169[esp+572]
	cmp	eax, DWORD PTR [ecx+4]
	jne	SHORT $LN203@CityConver
$LN206@CityConver:

; 4598 : 								{
; 4599 : 									bSpreadToAllCapitals = false;
; 4600 : 									break;
; 4601 : 								}
; 4602 : 							}
; 4603 : 						}
; 4604 : 					}
; 4605 : 
; 4606 : 					if(bSpreadToAllCapitals)
; 4607 : 					{
; 4608 : 						gDLL->UnlockAchievement(ACHIEVEMENT_XP1_19);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8596
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+828]
	push	209					; 000000d1H
	call	eax
	add	edi, 63236				; 0000f704H
	cmp	edi, 1391192				; 00153a58H
	jl	SHORT $LL16@CityConver
$LN203@CityConver:

; 4609 : 					}
; 4610 : 				}
; 4611 : 			}
; 4612 : 		}

	lea	ecx, DWORD PTR _kStandardSize$227214[esp+572]
	mov	DWORD PTR __$EHRec$[esp+580], -1
	call	DWORD PTR __imp_??1Results@Database@@UAE@XZ
	mov	edi, DWORD PTR _pNewReligion$227169[esp+572]
$LN210@CityConver:

; 4613 : #endif
; 4614 : 
; 4615 : 		// Diplo implications (there must have been religion switch and a responsible party)
; 4616 : 		if(eMajority != eOldMajority && eResponsibleParty != NO_PLAYER)

	mov	ebx, DWORD PTR _eMajority$[esp+568]
	mov	ebp, DWORD PTR _eOldMajority$[esp+568]
	cmp	ebx, ebp
	je	$LN6@CityConver
	cmp	DWORD PTR _eResponsibleParty$[esp+568], -1
	je	$LN6@CityConver

; 4617 : 		{
; 4618 : 			// Is the city owner not the founder of this religion?
; 4619 : 			if(pNewReligion->m_eFounder != m_pCity->getOwner())

	mov	ecx, DWORD PTR [esi+416]
	mov	eax, DWORD PTR [ecx+84]
	cmp	DWORD PTR [edi+4], eax
	je	SHORT $LN6@CityConver

; 4620 : 			{
; 4621 : 				CvPlayer& kCityOwnerPlayer = GET_PLAYER(m_pCity->getOwner());

	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	edi, eax

; 4622 : 
; 4623 : 				// Did he found another religion?
; 4624 : 				ReligionTypes eCityOwnerReligion = kCityOwnerPlayer.GetReligions()->GetReligionCreatedByPlayer();

	mov	ecx, edi
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+44]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer

; 4625 : 				if(eCityOwnerReligion >= RELIGION_PANTHEON)

	test	eax, eax
	jl	SHORT $LN6@CityConver

; 4626 : 				{
; 4627 : 					int iPoints = 0;
; 4628 : 
; 4629 : 					// His religion wasn't present here, minor hit
; 4630 : 					if(eOldMajority != eCityOwnerReligion)

	cmp	ebp, eax
	je	SHORT $LN5@CityConver

; 4631 : 					{
; 4632 : 						iPoints = GC.getRELIGION_DIPLO_HIT_INITIAL_CONVERT_FRIENDLY_CITY(); /*1*/

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7908
	jmp	SHORT $LN176@CityConver
$LN5@CityConver:

; 4633 : 					}
; 4634 : 
; 4635 : 					// This was his holy city; huge hit!
; 4636 : 					else if(m_pCity->GetCityReligions()->IsHolyCityForReligion(eCityOwnerReligion))

	mov	ecx, DWORD PTR [esi+416]
	push	eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsHolyCityForReligion@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsHolyCityForReligion
	test	al, al

; 4637 : 					{
; 4638 : 						iPoints = GC.getRELIGION_DIPLO_HIT_CONVERT_HOLY_CITY(); /*25*/

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7916
	jne	SHORT $LN176@CityConver

; 4639 : 					}
; 4640 : 
; 4641 : 					// He had established his religion here, major hit
; 4642 : 					else
; 4643 : 					{
; 4644 : 						iPoints = GC.getRELIGION_DIPLO_HIT_RELIGIOUS_FLIP_FRIENDLY_CITY(); /*3*/

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7912
$LN176@CityConver:

; 4645 : 					}
; 4646 : 
; 4647 : 					kCityOwnerPlayer.GetDiplomacyAI()->ChangeNegativeReligiousConversionPoints(eResponsibleParty, iPoints);

	push	eax
	mov	eax, DWORD PTR _eResponsibleParty$[esp+572]
	push	eax
	mov	ecx, edi
	call	?GetDiplomacyAI@CvPlayer@@QBEPAVCvDiplomacyAI@@XZ ; CvPlayer::GetDiplomacyAI
	mov	ecx, eax
	call	?ChangeNegativeReligiousConversionPoints@CvDiplomacyAI@@QAEXW4PlayerTypes@@H@Z ; CvDiplomacyAI::ChangeNegativeReligiousConversionPoints
$LN6@CityConver:

; 4648 : 				}
; 4649 : 			}
; 4650 : 		}
; 4651 : 
; 4652 : 		ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8596
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	edi, eax

; 4653 : 		if(pkScriptSystem)

	test	edi, edi
	je	$LN1@CityConver

; 4654 : 		{
; 4655 : 			CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$227253[esp+572]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle

; 4656 : 			args->Push(m_pCity->getOwner());

	mov	ecx, DWORD PTR [esi+416]
	mov	eax, DWORD PTR [ecx+84]
	mov	ecx, DWORD PTR _args$227253[esp+572]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __$EHRec$[esp+584], 9
	call	eax

; 4657 : 			args->Push(eMajority);

	mov	ecx, DWORD PTR _args$227253[esp+572]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	push	ebx
	call	eax

; 4658 : 			args->Push(m_pCity->getX());

	mov	ecx, DWORD PTR [esi+416]
	mov	eax, DWORD PTR [ecx+96]
	mov	ecx, DWORD PTR _args$227253[esp+572]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 4659 : 			args->Push(m_pCity->getY());

	mov	ecx, DWORD PTR [esi+416]
	mov	eax, DWORD PTR [ecx+108]
	mov	ecx, DWORD PTR _args$227253[esp+572]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 4660 : 
; 4661 : 			// Attempt to execute the game events.
; 4662 : 			// Will return false if there are no registered listeners.
; 4663 : 			bool bResult = false;
; 4664 : 			LuaSupport::CallHook(pkScriptSystem, "CityConvertsReligion", args.get(), bResult);

	mov	edx, DWORD PTR _args$227253[esp+572]
	lea	ecx, DWORD PTR _bResult$227254[esp+572]
	push	ecx
	push	edx
	push	OFFSET $SG227255
	push	edi
	mov	BYTE PTR _bResult$227254[esp+588], 0
	call	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallHook
	add	esp, 16					; 00000010H

; 4665 : 		}

	lea	ecx, DWORD PTR _args$227253[esp+572]
	mov	DWORD PTR __$EHRec$[esp+580], -1
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN1@CityConver:

; 4666 : 	}
; 4667 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+572]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 556				; 0000022cH
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _strMessage$227186[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$1:
	lea	ecx, DWORD PTR _strSummary$227187[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$3:
	lea	ecx, DWORD PTR $T239561[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$4:
	lea	ecx, DWORD PTR $T239562[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$5:
	lea	ecx, DWORD PTR _strMessage$227201[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$6:
	lea	ecx, DWORD PTR _strSummary$227202[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$8:
	lea	ecx, DWORD PTR $T239564[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$9:
	lea	ecx, DWORD PTR $T239565[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$10:
	lea	ecx, DWORD PTR _kStandardSize$227214[ebp]
	jmp	DWORD PTR __imp_??1Results@Database@@UAE@XZ
__unwindfunclet$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z$11:
	lea	ecx, DWORD PTR _args$227253[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__ehhandler$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z ENDP ; CvCityReligions::CityConvertsReligion
PUBLIC	?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvReligionAI::ChooseMissionaryTargetCity
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z$0
__ehfuncinfo$?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
tv238 = -32						; size = 4
_pBestCity$ = -28					; size = 4
_eMyReligion$ = -24					; size = 4
_iLoop$228162 = -20					; size = 4
$T239907 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pUnit$ = 8						; size = 8
?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvReligionAI::ChooseMissionaryTargetCity, COMDAT
; _this$ = ecx

; 5205 : {

	push	-1
	push	__ehhandler$?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 20					; 00000014H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	ebp, ecx
	xor	edi, edi
	mov	DWORD PTR __$EHRec$[esp+56], edi

; 5206 : 	ReligionTypes eMyReligion = GetReligionToSpread();

	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread

; 5207 : 	int iBestScore = 0;

	xor	ebx, ebx

; 5208 : 	CvCity* pBestCity = NULL;
; 5209 : 
; 5210 : 	if(eMyReligion <= RELIGION_PANTHEON)

	cmp	eax, edi
	mov	DWORD PTR _eMyReligion$[esp+48], eax
	mov	DWORD PTR _pBestCity$[esp+48], edi
	jg	SHORT $LN10@ChooseMiss

; 5211 : 	{
; 5212 : 		return NULL;

	mov	ecx, DWORD PTR _pUnit$[esp+44]
	mov	DWORD PTR __$EHRec$[esp+56], -1
	cmp	ecx, edi
	je	SHORT $LN18@ChooseMiss
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN18@ChooseMiss:
	xor	eax, eax

; 5245 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+48]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 32					; 00000020H
	ret	8
$LN10@ChooseMiss:

; 5213 : 	}
; 5214 : 
; 5215 : #pragma warning ( push )
; 5216 : #pragma warning ( disable : 6011 ) // Dereferencing NULL pointer
; 5217 : 	AI_PERF_FORMAT("AI-perf-tact.csv", ("ChooseMissionaryTargetCity: %s %d, Turn %03d, %s", pUnit->getName().c_str(), pUnit->GetID(), GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()) );
; 5218 : #pragma warning ( pop )
; 5219 : 
; 5220 : 	// Loop through all the players
; 5221 : 	for(int iI = 0; iI < MAX_PLAYERS; iI++)

	mov	DWORD PTR tv238[esp+48], edi
	npad	9
$LL43@ChooseMiss:

; 5222 : 	{
; 5223 : 		CvPlayer& kPlayer = GET_PLAYER((PlayerTypes)iI);

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	add	edi, eax

; 5224 : 		if(kPlayer.isAlive())

	cmp	BYTE PTR [edi+2256], 0
	je	SHORT $LN8@ChooseMiss

; 5225 : 		{
; 5226 : 			// Loop through each of their cities
; 5227 : 			int iLoop;
; 5228 : 			CvCity* pLoopCity;
; 5229 : 			for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$228162[esp+52]
	push	ecx
	mov	ecx, edi
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN8@ChooseMiss
$LN46@ChooseMiss:

; 5230 : 			{
; 5231 : 				if(pLoopCity && !pLoopCity->GetCityReligions()->IsDefendedAgainstSpread(eMyReligion))

	mov	edx, DWORD PTR _eMyReligion$[esp+48]
	push	edx
	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsDefendedAgainstSpread@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsDefendedAgainstSpread
	test	al, al
	jne	SHORT $LN4@ChooseMiss

; 5232 : 				{
; 5233 : 					int iScore = ScoreCityForMissionary(pLoopCity, pUnit);

	mov	ecx, DWORD PTR _pUnit$[esp+44]
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	dl, BYTE PTR _pUnit$[esp+56]
	mov	BYTE PTR [eax+4], dl
	mov	eax, ecx
	mov	DWORD PTR $T239907[esp+56], esp
	test	eax, eax
	je	SHORT $LN29@ChooseMiss
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN29@ChooseMiss:
	push	esi
	mov	ecx, ebp
	call	?ScoreCityForMissionary@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvReligionAI::ScoreCityForMissionary

; 5234 : 					if(iScore > iBestScore)

	cmp	eax, ebx
	jle	SHORT $LN4@ChooseMiss

; 5235 : 					{
; 5236 : 						iBestScore = iScore;

	mov	ebx, eax

; 5237 : 						pBestCity = pLoopCity;

	mov	DWORD PTR _pBestCity$[esp+48], esi
$LN4@ChooseMiss:
	push	0
	lea	eax, DWORD PTR _iLoop$228162[esp+52]
	push	eax
	mov	ecx, edi
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN46@ChooseMiss
$LN8@ChooseMiss:

; 5213 : 	}
; 5214 : 
; 5215 : #pragma warning ( push )
; 5216 : #pragma warning ( disable : 6011 ) // Dereferencing NULL pointer
; 5217 : 	AI_PERF_FORMAT("AI-perf-tact.csv", ("ChooseMissionaryTargetCity: %s %d, Turn %03d, %s", pUnit->getName().c_str(), pUnit->GetID(), GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()) );
; 5218 : #pragma warning ( pop )
; 5219 : 
; 5220 : 	// Loop through all the players
; 5221 : 	for(int iI = 0; iI < MAX_PLAYERS; iI++)

	mov	edi, DWORD PTR tv238[esp+48]
	add	edi, 63236				; 0000f704H
	cmp	edi, 4047104				; 003dc100H
	mov	DWORD PTR tv238[esp+48], edi
	jl	$LL43@ChooseMiss

; 5238 : 					}
; 5239 : 				}
; 5240 : 			}
; 5241 : 		}
; 5242 : 	}
; 5243 : 
; 5244 : 	return pBestCity;

	mov	ecx, DWORD PTR _pUnit$[esp+44]
	mov	DWORD PTR __$EHRec$[esp+56], -1
	test	ecx, ecx
	je	SHORT $LN34@ChooseMiss
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN34@ChooseMiss:

; 5245 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+48]
	mov	eax, DWORD PTR _pBestCity$[esp+48]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 32					; 00000020H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _pUnit$[ebp-4]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvReligionAI::ChooseMissionaryTargetCity
PUBLIC	?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z ; CvReligionAI::ChooseMissionaryTargetPlot
EXTRN	?CanSpreadReligion@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::CanSpreadReligion
EXTRN	?TurnsToReachTarget@@YAHV?$FObjectHandle@VCvUnit@@@@PAVCvPlot@@_N22@Z:PROC ; TurnsToReachTarget
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z$0
__ehfuncinfo$?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
_TEXT	SEGMENT
_iBestNumTurns$ = -36					; size = 4
_iBestDistance$ = -32					; size = 4
_iI$228195 = -28					; size = 4
$T239972 = -28						; size = 4
_pBestTarget$ = -24					; size = 4
$T239970 = -24						; size = 4
_this$ = -20						; size = 4
$T239974 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pUnit$ = 8						; size = 8
_piTurns$ = 16						; size = 4
?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z PROC ; CvReligionAI::ChooseMissionaryTargetPlot, COMDAT
; _this$ = ecx

; 5253 : {

	push	-1
	push	__ehhandler$?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _this$[esp+52], edi

; 5254 : 	CvCity* pCity = ChooseMissionaryTargetCity(pUnit);

	mov	ecx, DWORD PTR _pUnit$[esp+48]
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	dl, BYTE PTR _pUnit$[esp+60]
	xor	esi, esi
	mov	BYTE PTR [eax+4], dl
	mov	eax, ecx
	mov	DWORD PTR __$EHRec$[esp+68], esi
	mov	DWORD PTR $T239970[esp+60], esp
	cmp	eax, esi
	je	SHORT $LN26@ChooseMiss@2
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN26@ChooseMiss@2:
	mov	ecx, edi
	call	?ChooseMissionaryTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvReligionAI::ChooseMissionaryTargetCity
	mov	ebp, eax

; 5255 : 	int iBestNumTurns = MAX_INT;

	mov	ebx, 2147483647				; 7fffffffH
	mov	DWORD PTR _iBestNumTurns$[esp+52], ebx

; 5256 : 	int iTurns;
; 5257 : 	int iBestDistance = MAX_INT;

	mov	DWORD PTR _iBestDistance$[esp+52], ebx

; 5258 : 	int iDistance;
; 5259 : 	CvPlot* pBestTarget = NULL;

	mov	DWORD PTR _pBestTarget$[esp+52], esi

; 5260 : 
; 5261 : 	if(pCity == NULL)

	cmp	ebp, esi
	jne	SHORT $LN16@ChooseMiss@2

; 5262 : 	{
; 5263 : 		return NULL;

	mov	ecx, DWORD PTR _pUnit$[esp+48]
	mov	DWORD PTR __$EHRec$[esp+60], -1
	cmp	ecx, esi
	je	SHORT $LN31@ChooseMiss@2
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN31@ChooseMiss@2:
	xor	eax, eax

; 5331 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 36					; 00000024H
	ret	12					; 0000000cH
$LN16@ChooseMiss@2:

; 5264 : 	}
; 5265 : 
; 5266 : 	// Our city with no civilian units?  If so go right in there
; 5267 : 	if(pCity->getOwner() == m_pPlayer->GetID())

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [ebp+84]
	mov	ecx, DWORD PTR [ecx+44]
	cmp	eax, ecx
	jne	$LN12@ChooseMiss@2

; 5268 : 	{
; 5269 : 		CvUnit* pFirstUnit = pCity->plot()->getUnitByIndex(0);

	push	esi
	mov	ecx, ebp
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	ecx, eax
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex

; 5270 : 		if(!pFirstUnit || pFirstUnit->IsCombatUnit())

	cmp	eax, esi
	je	SHORT $LN13@ChooseMiss@2
	cmp	DWORD PTR [eax+1044], esi
	jle	SHORT $LN12@ChooseMiss@2
$LN13@ChooseMiss@2:

; 5271 : 		{
; 5272 : 			iTurns = TurnsToReachTarget(pUnit, pCity->plot(), true /* bReusePaths */);

	push	esi
	push	esi
	push	1
	mov	ecx, ebp
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	edx, DWORD PTR _pUnit$[esp+60]
	push	eax
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	cl, BYTE PTR _pUnit$[esp+76]
	mov	BYTE PTR [eax+4], cl
	mov	eax, edx
	mov	DWORD PTR $T239972[esp+76], esp
	cmp	eax, esi
	je	SHORT $LN48@ChooseMiss@2
	mov	ecx, eax
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN48@ChooseMiss@2:
	call	?TurnsToReachTarget@@YAHV?$FObjectHandle@VCvUnit@@@@PAVCvPlot@@_N22@Z ; TurnsToReachTarget
	add	esp, 24					; 00000018H

; 5273 : 			if(iTurns < MAX_INT)

	cmp	eax, ebx
	jge	SHORT $LN12@ChooseMiss@2

; 5274 : 			{
; 5275 : 				*piTurns = iTurns;

	mov	edx, DWORD PTR _piTurns$[esp+48]

; 5276 : 				return pCity->plot();

	mov	ecx, ebp
	mov	DWORD PTR [edx], eax
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	ecx, DWORD PTR _pUnit$[esp+48]
	mov	esi, eax
	mov	DWORD PTR __$EHRec$[esp+60], -1
	test	ecx, ecx
	je	SHORT $LN53@ChooseMiss@2
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN53@ChooseMiss@2:
	mov	eax, esi

; 5331 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 36					; 00000024H
	ret	12					; 0000000cH
$LN12@ChooseMiss@2:

; 5277 : 			}
; 5278 : 		}
; 5279 : 	}
; 5280 : 
; 5281 : #pragma warning ( push )
; 5282 : #pragma warning ( disable : 6011 ) // Dereferencing NULL pointer
; 5283 : #ifdef AUI_PERF_LOGGING_FORMATTING_TWEAKS
; 5284 : 	AI_PERF_FORMAT("AI-perf-tact.csv", ("ChooseMissionaryTargetPlot: %s %d (Targeting %s), Turn %03d, %s", pUnit->getName().c_str(), pUnit->GetID(), pCity->getName().c_str(), GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()));
; 5285 : #else
; 5286 : 	AI_PERF_FORMAT("AI-perf-tact.csv", ("ChooseMissionaryTargetPlot: %s %d; %s, Turn %03d, %s", pUnit->getName().c_str(), pUnit->GetID(), pCity->getName().c_str(), GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()) );
; 5287 : #endif
; 5288 : #pragma warning ( pop )
; 5289 : 
; 5290 : 	// Find adjacent plot with no units (that aren't our own)
; 5291 : 	CvPlot* pLoopPlot;
; 5292 : 	for(int iI = 0; iI < NUM_DIRECTION_TYPES; iI++)

	mov	ebx, DWORD PTR _pUnit$[esp+48]
	xor	edx, edx
	mov	DWORD PTR _iI$228195[esp+52], edx
	jmp	SHORT $LN11@ChooseMiss@2
$LL107@ChooseMiss@2:
	mov	edi, DWORD PTR _this$[esp+52]
$LN11@ChooseMiss@2:

; 5293 : 	{
; 5294 : 		pLoopPlot = plotDirection(pCity->getX(), pCity->getY(), ((DirectionTypes)iI));

	mov	eax, DWORD PTR [ebp+108]
	mov	ecx, DWORD PTR [ebp+96]
	push	edx
	push	eax
	push	ecx
	call	?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z ; plotDirection
	mov	esi, eax
	add	esp, 12					; 0000000cH

; 5295 : 
; 5296 : 		if(pLoopPlot != NULL)

	test	esi, esi
	je	$LN10@ChooseMiss@2

; 5297 : 		{
; 5298 : 			CvUnit* pFirstUnit = pLoopPlot->getUnitByIndex(0);

	push	0
	mov	ecx, esi
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex

; 5299 : 			if(pFirstUnit && pFirstUnit->getOwner() != m_pPlayer->GetID())

	test	eax, eax
	je	SHORT $LN7@ChooseMiss@2
	mov	eax, DWORD PTR [eax+40]
	mov	ecx, DWORD PTR [edi+4]
	cmp	eax, DWORD PTR [ecx+44]
	jne	$LN103@ChooseMiss@2
$LN7@ChooseMiss@2:

; 5300 : 			{
; 5301 : 				continue;
; 5302 : 			}
; 5303 : 
; 5304 : 			if(pUnit->CanSpreadReligion(pLoopPlot))

	mov	ecx, DWORD PTR _pUnit$[esp+48]
	push	esi
	call	?CanSpreadReligion@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::CanSpreadReligion
	test	al, al
	je	$LN103@ChooseMiss@2

; 5305 : 			{
; 5306 : 				iTurns = TurnsToReachTarget(pUnit, pLoopPlot, true /* bReusePaths */);

	mov	edx, DWORD PTR _pUnit$[esp+48]
	push	0
	push	0
	push	1
	push	esi
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	cl, BYTE PTR _pUnit$[esp+76]
	mov	BYTE PTR [eax+4], cl
	mov	eax, edx
	mov	DWORD PTR $T239974[esp+76], esp
	test	eax, eax
	je	SHORT $LN76@ChooseMiss@2
	mov	ecx, eax
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN76@ChooseMiss@2:
	call	?TurnsToReachTarget@@YAHV?$FObjectHandle@VCvUnit@@@@PAVCvPlot@@_N22@Z ; TurnsToReachTarget
	mov	edi, eax
	add	esp, 24					; 00000018H

; 5307 : 				if(iTurns < MAX_INT)

	cmp	edi, 2147483647				; 7fffffffH
	jge	SHORT $LN103@ChooseMiss@2

; 5308 : 				{
; 5309 : 					iDistance = plotDistance(pUnit->getX(), pUnit->getY(), pLoopPlot->getX(), pLoopPlot->getY());

	movsx	edx, WORD PTR [esi+2]
	mov	ebx, DWORD PTR _pUnit$[esp+48]
	mov	eax, DWORD PTR [ebx+88]
	mov	ecx, DWORD PTR [ebx+76]
	push	edx
	movsx	edx, WORD PTR [esi]
	push	edx
	push	eax
	push	ecx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H

; 5310 : 
; 5311 : 					// Consider it to be twice as far if a water plot (those are dangerous!)
; 5312 : 					if(pLoopPlot->isWater())

	cmp	BYTE PTR [esi+5], 3
	jne	SHORT $LN4@ChooseMiss@2

; 5313 : 					{
; 5314 : 						iDistance *= 2;

	add	eax, eax
$LN4@ChooseMiss@2:

; 5315 : 					}
; 5316 : 
; 5317 : 					if(iTurns < iBestNumTurns || (iTurns == iBestNumTurns && iDistance < iBestDistance))

	mov	ecx, DWORD PTR _iBestNumTurns$[esp+52]
	cmp	edi, ecx
	jl	SHORT $LN2@ChooseMiss@2
	jne	SHORT $LN10@ChooseMiss@2
	cmp	eax, DWORD PTR _iBestDistance$[esp+52]
	jge	SHORT $LN10@ChooseMiss@2
$LN2@ChooseMiss@2:

; 5318 : 					{
; 5319 : 						iBestNumTurns = iTurns;

	mov	DWORD PTR _iBestNumTurns$[esp+52], edi

; 5320 : 						iBestDistance = iDistance;

	mov	DWORD PTR _iBestDistance$[esp+52], eax

; 5321 : 						pBestTarget = pLoopPlot;

	mov	DWORD PTR _pBestTarget$[esp+52], esi
	jmp	SHORT $LN10@ChooseMiss@2
$LN103@ChooseMiss@2:
	mov	ebx, DWORD PTR _pUnit$[esp+48]
$LN10@ChooseMiss@2:

; 5277 : 			}
; 5278 : 		}
; 5279 : 	}
; 5280 : 
; 5281 : #pragma warning ( push )
; 5282 : #pragma warning ( disable : 6011 ) // Dereferencing NULL pointer
; 5283 : #ifdef AUI_PERF_LOGGING_FORMATTING_TWEAKS
; 5284 : 	AI_PERF_FORMAT("AI-perf-tact.csv", ("ChooseMissionaryTargetPlot: %s %d (Targeting %s), Turn %03d, %s", pUnit->getName().c_str(), pUnit->GetID(), pCity->getName().c_str(), GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()));
; 5285 : #else
; 5286 : 	AI_PERF_FORMAT("AI-perf-tact.csv", ("ChooseMissionaryTargetPlot: %s %d; %s, Turn %03d, %s", pUnit->getName().c_str(), pUnit->GetID(), pCity->getName().c_str(), GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()) );
; 5287 : #endif
; 5288 : #pragma warning ( pop )
; 5289 : 
; 5290 : 	// Find adjacent plot with no units (that aren't our own)
; 5291 : 	CvPlot* pLoopPlot;
; 5292 : 	for(int iI = 0; iI < NUM_DIRECTION_TYPES; iI++)

	mov	edx, DWORD PTR _iI$228195[esp+52]
	inc	edx
	cmp	edx, 6
	mov	DWORD PTR _iI$228195[esp+52], edx
	jl	$LL107@ChooseMiss@2

; 5322 : 					}
; 5323 : 				}
; 5324 : 			}
; 5325 : 		}
; 5326 : 	}
; 5327 : 
; 5328 : 	if(piTurns)

	mov	eax, DWORD PTR _piTurns$[esp+48]
	test	eax, eax
	je	SHORT $LN1@ChooseMiss@2

; 5329 : 		*piTurns = iBestNumTurns;

	mov	ecx, DWORD PTR _iBestNumTurns$[esp+52]
	mov	DWORD PTR [eax], ecx
$LN1@ChooseMiss@2:

; 5330 : 	return pBestTarget;

	mov	DWORD PTR __$EHRec$[esp+60], -1
	test	ebx, ebx
	je	SHORT $LN99@ChooseMiss@2
	mov	ecx, ebx
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN99@ChooseMiss@2:

; 5331 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	eax, DWORD PTR _pBestTarget$[esp+52]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 36					; 00000024H
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z$0:
	lea	ecx, DWORD PTR _pUnit$[ebp-4]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z:
	mov	eax, OFFSET __ehfuncinfo$?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseMissionaryTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z ENDP ; CvReligionAI::ChooseMissionaryTargetPlot
PUBLIC	?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvReligionAI::ChooseInquisitorTargetCity
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z$0
__ehfuncinfo$?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
_TEXT	SEGMENT
_iLoop$ = -20						; size = 4
$T240153 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pUnit$ = 8						; size = 8
?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z PROC ; CvReligionAI::ChooseInquisitorTargetCity, COMDAT
; _this$ = ecx

; 5339 : {

	push	-1
	push	__ehhandler$?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx
	xor	ebp, ebp
	mov	DWORD PTR __$EHRec$[esp+44], ebp

; 5340 : 	ReligionTypes eMyReligion = GetReligionToSpread();

	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread

; 5341 : 	int iBestScore = 0;

	xor	ebx, ebx

; 5342 : 	CvCity* pBestCity = NULL;
; 5343 : 
; 5344 : 	if(eMyReligion <= RELIGION_PANTHEON)

	cmp	eax, ebp
	jg	SHORT $LN6@ChooseInqu

; 5345 : 	{
; 5346 : 		return NULL;

	mov	ecx, DWORD PTR _pUnit$[esp+32]
	mov	DWORD PTR __$EHRec$[esp+44], -1
	cmp	ecx, ebp
	je	SHORT $LN14@ChooseInqu
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN14@ChooseInqu:
	xor	eax, eax

; 5371 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 20					; 00000014H
	ret	8
$LN6@ChooseInqu:

; 5347 : 	}
; 5348 : 
; 5349 : #pragma warning ( push )
; 5350 : #pragma warning ( disable : 6011 ) // Dereferencing NULL pointer
; 5351 : 	AI_PERF_FORMAT("AI-perf-tact.csv", ("ChooseInquisitorTargetCity: %s %d, Turn %03d, %s", pUnit->getName().c_str(), pUnit->GetID(), GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()) );
; 5352 : #pragma warning ( pop )
; 5353 : 
; 5354 : 	// Loop through each of my cities
; 5355 : 	int iLoop;
; 5356 : 	CvCity* pLoopCity;
; 5357 : 	for(pLoopCity = m_pPlayer->firstCity(&iLoop); pLoopCity != NULL; pLoopCity = m_pPlayer->nextCity(&iLoop))

	mov	ecx, DWORD PTR [edi+4]
	push	ebp
	lea	eax, DWORD PTR _iLoop$[esp+40]
	push	eax
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN3@ChooseInqu
$LN32@ChooseInqu:

; 5358 : 	{
; 5359 : 		if(pLoopCity)
; 5360 : 		{
; 5361 : 			int iScore = ScoreCityForInquisitor(pLoopCity, pUnit);

	mov	ecx, DWORD PTR _pUnit$[esp+32]
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	dl, BYTE PTR _pUnit$[esp+44]
	mov	BYTE PTR [eax+4], dl
	mov	eax, ecx
	mov	DWORD PTR $T240153[esp+44], esp
	test	eax, eax
	je	SHORT $LN19@ChooseInqu
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN19@ChooseInqu:
	push	esi
	mov	ecx, edi
	call	?ScoreCityForInquisitor@CvReligionAI@@AAEHPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvReligionAI::ScoreCityForInquisitor

; 5362 : 			if(iScore > iBestScore)

	cmp	eax, ebx
	jle	SHORT $LN4@ChooseInqu

; 5363 : 			{
; 5364 : 				iBestScore = iScore;

	mov	ebx, eax

; 5365 : 				pBestCity = pLoopCity;

	mov	ebp, esi
$LN4@ChooseInqu:
	mov	ecx, DWORD PTR [edi+4]
	push	0
	lea	eax, DWORD PTR _iLoop$[esp+40]
	push	eax
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN32@ChooseInqu
$LN3@ChooseInqu:

; 5366 : 			}
; 5367 : 		}
; 5368 : 	}
; 5369 : 
; 5370 : 	return pBestCity;

	mov	ecx, DWORD PTR _pUnit$[esp+32]
	mov	DWORD PTR __$EHRec$[esp+44], -1
	test	ecx, ecx
	je	SHORT $LN24@ChooseInqu
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN24@ChooseInqu:

; 5371 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+36]
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 20					; 00000014H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z$0:
	lea	ecx, DWORD PTR _pUnit$[ebp-4]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ENDP ; CvReligionAI::ChooseInquisitorTargetCity
PUBLIC	?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z ; CvReligionAI::ChooseInquisitorTargetPlot
EXTRN	?CanRemoveHeresy@CvUnit@@QBE_NPBVCvPlot@@@Z:PROC ; CvUnit::CanRemoveHeresy
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z$0
__ehfuncinfo$?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
_TEXT	SEGMENT
_iBestNumTurns$ = -36					; size = 4
_iBestDistance$ = -32					; size = 4
_iI$228254 = -28					; size = 4
$T240202 = -28						; size = 4
_pBestTarget$ = -24					; size = 4
$T240200 = -24						; size = 4
_this$ = -20						; size = 4
$T240204 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pUnit$ = 8						; size = 8
_piTurns$ = 16						; size = 4
?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z PROC ; CvReligionAI::ChooseInquisitorTargetPlot, COMDAT
; _this$ = ecx

; 5379 : {

	push	-1
	push	__ehhandler$?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _this$[esp+52], edi

; 5380 : 	CvCity* pCity = ChooseInquisitorTargetCity(pUnit);

	mov	ecx, DWORD PTR _pUnit$[esp+48]
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	dl, BYTE PTR _pUnit$[esp+60]
	xor	esi, esi
	mov	BYTE PTR [eax+4], dl
	mov	eax, ecx
	mov	DWORD PTR __$EHRec$[esp+68], esi
	mov	DWORD PTR $T240200[esp+60], esp
	cmp	eax, esi
	je	SHORT $LN26@ChooseInqu@2
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN26@ChooseInqu@2:
	mov	ecx, edi
	call	?ChooseInquisitorTargetCity@CvReligionAI@@QAEPAVCvCity@@V?$FObjectHandle@VCvUnit@@@@@Z ; CvReligionAI::ChooseInquisitorTargetCity
	mov	ebp, eax

; 5381 : 	int iBestNumTurns = MAX_INT;

	mov	ebx, 2147483647				; 7fffffffH
	mov	DWORD PTR _iBestNumTurns$[esp+52], ebx

; 5382 : 	int iTurns;
; 5383 : 	int iBestDistance = MAX_INT;

	mov	DWORD PTR _iBestDistance$[esp+52], ebx

; 5384 : 	int iDistance;
; 5385 : 	CvPlot* pBestTarget = NULL;

	mov	DWORD PTR _pBestTarget$[esp+52], esi

; 5386 : 
; 5387 : 	if(pCity == NULL)

	cmp	ebp, esi
	jne	SHORT $LN16@ChooseInqu@2

; 5388 : 	{
; 5389 : 		return NULL;

	mov	ecx, DWORD PTR _pUnit$[esp+48]
	mov	DWORD PTR __$EHRec$[esp+60], -1
	cmp	ecx, esi
	je	SHORT $LN31@ChooseInqu@2
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN31@ChooseInqu@2:
	xor	eax, eax

; 5453 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 36					; 00000024H
	ret	12					; 0000000cH
$LN16@ChooseInqu@2:

; 5390 : 	}
; 5391 : 
; 5392 : 	// Our city with no civilian units?  If so go right in there
; 5393 : 	if(pCity->getOwner() == m_pPlayer->GetID())

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [ebp+84]
	mov	ecx, DWORD PTR [ecx+44]
	cmp	eax, ecx
	jne	$LN12@ChooseInqu@2

; 5394 : 	{
; 5395 : 		CvUnit* pFirstUnit = pCity->plot()->getUnitByIndex(0);

	push	esi
	mov	ecx, ebp
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	ecx, eax
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex

; 5396 : 		if(!pFirstUnit || pFirstUnit->IsCombatUnit())

	cmp	eax, esi
	je	SHORT $LN13@ChooseInqu@2
	cmp	DWORD PTR [eax+1044], esi
	jle	SHORT $LN12@ChooseInqu@2
$LN13@ChooseInqu@2:

; 5397 : 		{
; 5398 : 			iTurns = TurnsToReachTarget(pUnit, pCity->plot(), true /* bReusePaths */);

	push	esi
	push	esi
	push	1
	mov	ecx, ebp
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	edx, DWORD PTR _pUnit$[esp+60]
	push	eax
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	cl, BYTE PTR _pUnit$[esp+76]
	mov	BYTE PTR [eax+4], cl
	mov	eax, edx
	mov	DWORD PTR $T240202[esp+76], esp
	cmp	eax, esi
	je	SHORT $LN48@ChooseInqu@2
	mov	ecx, eax
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN48@ChooseInqu@2:
	call	?TurnsToReachTarget@@YAHV?$FObjectHandle@VCvUnit@@@@PAVCvPlot@@_N22@Z ; TurnsToReachTarget
	add	esp, 24					; 00000018H

; 5399 : 			if(iTurns < MAX_INT)

	cmp	eax, ebx
	jge	SHORT $LN12@ChooseInqu@2

; 5400 : 			{
; 5401 : 				*piTurns = iTurns;

	mov	edx, DWORD PTR _piTurns$[esp+48]

; 5402 : 				return pCity->plot();

	mov	ecx, ebp
	mov	DWORD PTR [edx], eax
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	ecx, DWORD PTR _pUnit$[esp+48]
	mov	esi, eax
	mov	DWORD PTR __$EHRec$[esp+60], -1
	test	ecx, ecx
	je	SHORT $LN53@ChooseInqu@2
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN53@ChooseInqu@2:
	mov	eax, esi

; 5453 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 36					; 00000024H
	ret	12					; 0000000cH
$LN12@ChooseInqu@2:

; 5403 : 			}
; 5404 : 		}
; 5405 : 	}
; 5406 : 
; 5407 : #pragma warning ( push )
; 5408 : #pragma warning ( disable : 6011 ) // Dereferencing NULL pointer
; 5409 : 	AI_PERF_FORMAT("AI-perf-tact.csv", ("ChooseInquisitorTargetPlot: %s %d; %s, Turn %03d, %s", pUnit->getName().c_str(), pUnit->GetID(), pCity->getName().c_str(), GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()) );
; 5410 : #pragma warning ( pop )
; 5411 : 
; 5412 : 	// Find adjacent plot with no units (that aren't our own)
; 5413 : 	CvPlot* pLoopPlot;
; 5414 : 	for(int iI = 0; iI < NUM_DIRECTION_TYPES; iI++)

	mov	ebx, DWORD PTR _pUnit$[esp+48]
	xor	edx, edx
	mov	DWORD PTR _iI$228254[esp+52], edx
	jmp	SHORT $LN11@ChooseInqu@2
$LL107@ChooseInqu@2:
	mov	edi, DWORD PTR _this$[esp+52]
$LN11@ChooseInqu@2:

; 5415 : 	{
; 5416 : 		pLoopPlot = plotDirection(pCity->getX(), pCity->getY(), ((DirectionTypes)iI));

	mov	eax, DWORD PTR [ebp+108]
	mov	ecx, DWORD PTR [ebp+96]
	push	edx
	push	eax
	push	ecx
	call	?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z ; plotDirection
	mov	esi, eax
	add	esp, 12					; 0000000cH

; 5417 : 
; 5418 : 		if(pLoopPlot != NULL)

	test	esi, esi
	je	$LN10@ChooseInqu@2

; 5419 : 		{
; 5420 : 			CvUnit* pFirstUnit = pLoopPlot->getUnitByIndex(0);

	push	0
	mov	ecx, esi
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex

; 5421 : 			if(pFirstUnit && pFirstUnit->getOwner() != m_pPlayer->GetID())

	test	eax, eax
	je	SHORT $LN7@ChooseInqu@2
	mov	eax, DWORD PTR [eax+40]
	mov	ecx, DWORD PTR [edi+4]
	cmp	eax, DWORD PTR [ecx+44]
	jne	$LN103@ChooseInqu@2
$LN7@ChooseInqu@2:

; 5422 : 			{
; 5423 : 				continue;
; 5424 : 			}
; 5425 : 
; 5426 : 			if(pUnit->CanRemoveHeresy(pLoopPlot))

	mov	ecx, DWORD PTR _pUnit$[esp+48]
	push	esi
	call	?CanRemoveHeresy@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::CanRemoveHeresy
	test	al, al
	je	$LN103@ChooseInqu@2

; 5427 : 			{
; 5428 : 				iTurns = TurnsToReachTarget(pUnit, pLoopPlot, true /* bReusePaths */);

	mov	edx, DWORD PTR _pUnit$[esp+48]
	push	0
	push	0
	push	1
	push	esi
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	cl, BYTE PTR _pUnit$[esp+76]
	mov	BYTE PTR [eax+4], cl
	mov	eax, edx
	mov	DWORD PTR $T240204[esp+76], esp
	test	eax, eax
	je	SHORT $LN76@ChooseInqu@2
	mov	ecx, eax
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN76@ChooseInqu@2:
	call	?TurnsToReachTarget@@YAHV?$FObjectHandle@VCvUnit@@@@PAVCvPlot@@_N22@Z ; TurnsToReachTarget
	mov	edi, eax
	add	esp, 24					; 00000018H

; 5429 : 				if(iTurns < MAX_INT)

	cmp	edi, 2147483647				; 7fffffffH
	jge	SHORT $LN103@ChooseInqu@2

; 5430 : 				{
; 5431 : 					iDistance = plotDistance(pUnit->getX(), pUnit->getY(), pLoopPlot->getX(), pLoopPlot->getY());

	movsx	edx, WORD PTR [esi+2]
	mov	ebx, DWORD PTR _pUnit$[esp+48]
	mov	eax, DWORD PTR [ebx+88]
	mov	ecx, DWORD PTR [ebx+76]
	push	edx
	movsx	edx, WORD PTR [esi]
	push	edx
	push	eax
	push	ecx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H

; 5432 : 
; 5433 : 					// Consider it to be twice as far if a water plot (those are dangerous!)
; 5434 : 					if(pLoopPlot->isWater())

	cmp	BYTE PTR [esi+5], 3
	jne	SHORT $LN4@ChooseInqu@2

; 5435 : 					{
; 5436 : 						iDistance *= 2;

	add	eax, eax
$LN4@ChooseInqu@2:

; 5437 : 					}
; 5438 : 
; 5439 : 					if(iTurns < iBestNumTurns || (iTurns == iBestNumTurns && iDistance < iBestDistance))

	mov	ecx, DWORD PTR _iBestNumTurns$[esp+52]
	cmp	edi, ecx
	jl	SHORT $LN2@ChooseInqu@2
	jne	SHORT $LN10@ChooseInqu@2
	cmp	eax, DWORD PTR _iBestDistance$[esp+52]
	jge	SHORT $LN10@ChooseInqu@2
$LN2@ChooseInqu@2:

; 5440 : 					{
; 5441 : 						iBestNumTurns = iTurns;

	mov	DWORD PTR _iBestNumTurns$[esp+52], edi

; 5442 : 						iBestDistance = iDistance;

	mov	DWORD PTR _iBestDistance$[esp+52], eax

; 5443 : 						pBestTarget = pLoopPlot;

	mov	DWORD PTR _pBestTarget$[esp+52], esi
	jmp	SHORT $LN10@ChooseInqu@2
$LN103@ChooseInqu@2:
	mov	ebx, DWORD PTR _pUnit$[esp+48]
$LN10@ChooseInqu@2:

; 5403 : 			}
; 5404 : 		}
; 5405 : 	}
; 5406 : 
; 5407 : #pragma warning ( push )
; 5408 : #pragma warning ( disable : 6011 ) // Dereferencing NULL pointer
; 5409 : 	AI_PERF_FORMAT("AI-perf-tact.csv", ("ChooseInquisitorTargetPlot: %s %d; %s, Turn %03d, %s", pUnit->getName().c_str(), pUnit->GetID(), pCity->getName().c_str(), GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()) );
; 5410 : #pragma warning ( pop )
; 5411 : 
; 5412 : 	// Find adjacent plot with no units (that aren't our own)
; 5413 : 	CvPlot* pLoopPlot;
; 5414 : 	for(int iI = 0; iI < NUM_DIRECTION_TYPES; iI++)

	mov	edx, DWORD PTR _iI$228254[esp+52]
	inc	edx
	cmp	edx, 6
	mov	DWORD PTR _iI$228254[esp+52], edx
	jl	$LL107@ChooseInqu@2

; 5444 : 					}
; 5445 : 				}
; 5446 : 			}
; 5447 : 		}
; 5448 : 	}
; 5449 : 
; 5450 : 	if(piTurns)

	mov	eax, DWORD PTR _piTurns$[esp+48]
	test	eax, eax
	je	SHORT $LN1@ChooseInqu@2

; 5451 : 		*piTurns = iBestNumTurns;

	mov	ecx, DWORD PTR _iBestNumTurns$[esp+52]
	mov	DWORD PTR [eax], ecx
$LN1@ChooseInqu@2:

; 5452 : 	return pBestTarget;

	mov	DWORD PTR __$EHRec$[esp+60], -1
	test	ebx, ebx
	je	SHORT $LN99@ChooseInqu@2
	mov	ecx, ebx
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN99@ChooseInqu@2:

; 5453 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	eax, DWORD PTR _pBestTarget$[esp+52]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 36					; 00000024H
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z$0:
	lea	ecx, DWORD PTR _pUnit$[ebp-4]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z:
	mov	eax, OFFSET __ehfuncinfo$?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseInquisitorTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z ENDP ; CvReligionAI::ChooseInquisitorTargetPlot
PUBLIC	?ChooseProphetConversionCity@CvReligionAI@@QBEPAVCvCity@@_N@Z ; CvReligionAI::ChooseProphetConversionCity
; Function compile flags: /Ogtpy
;	COMDAT ?ChooseProphetConversionCity@CvReligionAI@@QBEPAVCvCity@@_N@Z
_TEXT	SEGMENT
_eReligion$ = -36					; size = 4
_iBestScore$ = -32					; size = 4
_this$ = -28						; size = 4
_iPlayerLoop$228299 = -24				; size = 4
_pBestCity$ = -20					; size = 4
_eMajorityReligion$228321 = -16				; size = 4
_iLoop$ = -12						; size = 4
_pHolyCity$ = -8					; size = 4
_iCityLoop$228314 = -4					; size = 4
tv1003 = 8						; size = 4
_bOnlyBetterThanEnhancingReligion$ = 8			; size = 1
?ChooseProphetConversionCity@CvReligionAI@@QBEPAVCvCity@@_N@Z PROC ; CvReligionAI::ChooseProphetConversionCity, COMDAT
; _this$ = ecx

; 5457 : {

	sub	esp, 36					; 00000024H
	push	esi
	mov	esi, ecx
	mov	DWORD PTR _this$[esp+40], esi

; 5458 : 	CvCity *pBestCity = NULL;

	mov	DWORD PTR _pBestCity$[esp+40], 0

; 5459 : 	CvCity *pHolyCity = NULL;
; 5460 : 	int iBestScore = 50;  // Not zero because we don't want prophets to ALWAYS pick something up

	mov	DWORD PTR _iBestScore$[esp+40], 50	; 00000032H

; 5461 : 
; 5462 : 	// Make sure we're spreading a religion and find holy city
; 5463 : 	ReligionTypes eReligion = GetReligionToSpread();

	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread
	mov	ecx, eax
	mov	DWORD PTR _eReligion$[esp+40], ecx

; 5464 : 	if (eReligion <= RELIGION_PANTHEON)

	test	ecx, ecx
	jg	SHORT $LN29@ChooseProp

; 5465 : 	{
; 5466 : 		return pBestCity;

	xor	eax, eax
	pop	esi

; 5582 : }

	add	esp, 36					; 00000024H
	ret	4
$LN29@ChooseProp:

; 5467 : 	}
; 5468 : 
; 5469 : 	const CvReligion* pkReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, m_pPlayer->GetID());

	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+44]
	push	ebx
	push	ebp
	push	edi
	push	eax
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 5470 : 	if (pkReligion)

	test	eax, eax
	je	$LN197@ChooseProp

; 5471 : 	{
; 5472 : 		CvPlot* pkPlot = GC.getMap().plot(pkReligion->m_iHolyCityX, pkReligion->m_iHolyCityY);

	mov	ebx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR [eax+8]
	cmp	eax, -2147483647			; 80000001H
	je	$LN197@ChooseProp
	cmp	ebx, -2147483647			; 80000001H
	je	$LN197@ChooseProp
	mov	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	cmp	BYTE PTR [ebp+4056], 0
	mov	ecx, DWORD PTR [ebp+4020]
	je	SHORT $LN50@ChooseProp
	test	eax, eax
	jge	SHORT $LN52@ChooseProp
	cdq
	idiv	ecx
	mov	esi, edx
	add	esi, ecx
	jmp	SHORT $LN54@ChooseProp
$LN52@ChooseProp:
	cmp	eax, ecx
	jl	SHORT $LN50@ChooseProp
	cdq
	idiv	ecx
	mov	esi, edx
	jmp	SHORT $LN54@ChooseProp
$LN50@ChooseProp:
	mov	esi, eax
$LN54@ChooseProp:
	cmp	BYTE PTR [ebp+4057], 0
	mov	edi, DWORD PTR [ebp+4024]
	je	SHORT $LN201@ChooseProp
	test	ebx, ebx
	jge	SHORT $LN62@ChooseProp
	mov	eax, ebx
	cdq
	idiv	edi
	add	edx, edi
	jmp	SHORT $LN64@ChooseProp
$LN62@ChooseProp:
	cmp	ebx, edi
	jl	SHORT $LN201@ChooseProp
	mov	eax, ebx
	cdq
	idiv	edi
	jmp	SHORT $LN64@ChooseProp
$LN201@ChooseProp:
	mov	edx, ebx
$LN64@ChooseProp:
	test	esi, esi
	jl	SHORT $LN197@ChooseProp
	cmp	esi, ecx
	jge	SHORT $LN197@ChooseProp
	test	edx, edx
	jl	SHORT $LN197@ChooseProp
	cmp	edx, edi
	jge	SHORT $LN197@ChooseProp
	imul	ecx, edx
	add	ecx, esi
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [ebp+4068]

; 5473 : 		if(pkPlot)

	test	ecx, ecx
	je	SHORT $LN197@ChooseProp

; 5474 : 		{
; 5475 : 			pHolyCity = pkPlot->getPlotCity();

	mov	eax, DWORD PTR [ecx+104]
	test	eax, eax
	jl	SHORT $LN197@ChooseProp
	cmp	eax, 64					; 00000040H
	jge	SHORT $LN197@ChooseProp
	mov	ecx, DWORD PTR [ecx+108]
	imul	eax, 63236				; 0000f704H
	add	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	ecx
	mov	ecx, eax
	call	?getCity@CvPlayer@@QAEPAVCvCity@@H@Z	; CvPlayer::getCity
	mov	ebp, eax
	mov	DWORD PTR _pHolyCity$[esp+52], ebp

; 5476 : 		}
; 5477 : 	}
; 5478 : 	if (!pHolyCity)

	test	ebp, ebp
	jne	SHORT $LN26@ChooseProp
$LN197@ChooseProp:
	pop	edi
	pop	ebp
	pop	ebx

; 5479 : 	{
; 5480 : 		return pBestCity;

	xor	eax, eax
	pop	esi

; 5582 : }

	add	esp, 36					; 00000024H
	ret	4
$LN26@ChooseProp:

; 5481 : 	}
; 5482 : 
; 5483 : 	// Look at our cities first, checking them for followers of other religions
; 5484 : 	int iLoop;
; 5485 : 	CvCity* pLoopCity;
; 5486 : 	for(pLoopCity = m_pPlayer->firstCity(&iLoop); pLoopCity != NULL; pLoopCity = m_pPlayer->nextCity(&iLoop))

	mov	eax, DWORD PTR _this$[esp+52]
	mov	ecx, DWORD PTR [eax+4]
	push	0
	lea	edx, DWORD PTR _iLoop$[esp+56]
	push	edx
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	$LN23@ChooseProp
$LL25@ChooseProp:

; 5487 : 	{
; 5488 : 		ReligionTypes eMajorityReligion = pLoopCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority

; 5489 : 		int iHeretics = pLoopCity->GetCityReligions()->GetFollowersOtherReligions(eReligion);

	mov	ecx, esi
	mov	ebx, eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	lea	edx, DWORD PTR [eax+eax*2]
	lea	edx, DWORD PTR [ecx+edx*8]
	xor	edi, edi
	cmp	ecx, edx
	je	SHORT $LN84@ChooseProp
	npad	1
$LL86@ChooseProp:
	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jle	SHORT $LN85@ChooseProp
	cmp	eax, DWORD PTR _eReligion$[esp+52]
	je	SHORT $LN85@ChooseProp
	add	edi, DWORD PTR [ecx+8]
$LN85@ChooseProp:
	add	ecx, 24					; 00000018H
	cmp	ecx, edx
	jne	SHORT $LL86@ChooseProp
$LN84@ChooseProp:

; 5490 : 		int iDistanceToHolyCity = plotDistance(pLoopCity->getX(), pLoopCity->getY(), pHolyCity->getX(), pHolyCity->getY());

	mov	eax, DWORD PTR [ebp+108]
	mov	ecx, DWORD PTR [ebp+96]
	mov	edx, DWORD PTR [esi+108]
	push	eax
	mov	eax, DWORD PTR [esi+96]
	push	ecx
	push	edx
	push	eax
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H
	mov	ecx, eax

; 5491 : 
; 5492 : 		// If this is the holy city and it has been converted, want to go there no matter what
; 5493 : 		if (pLoopCity == pHolyCity && eMajorityReligion != eReligion)

	cmp	esi, ebp
	jne	SHORT $LN202@ChooseProp
	cmp	ebx, DWORD PTR _eReligion$[esp+52]
	jne	$LN189@ChooseProp
$LN202@ChooseProp:

; 5496 : 		}
; 5497 : 
; 5498 : 		// Otherwise score this city
; 5499 : 		int iScore = (iHeretics * 100) / (iDistanceToHolyCity + 1);

	mov	eax, edi
	imul	eax, 100				; 00000064H
	inc	ecx
	cdq
	idiv	ecx

; 5500 : 		if (eMajorityReligion != eReligion && eMajorityReligion > RELIGION_PANTHEON)

	cmp	ebx, DWORD PTR _eReligion$[esp+52]
	je	SHORT $LN205@ChooseProp
	test	ebx, ebx
	jle	SHORT $LN205@ChooseProp

; 5501 : 		{
; 5502 : 			iScore *= 3;

	lea	eax, DWORD PTR [eax+eax*2]
	jmp	SHORT $LN206@ChooseProp
$LN205@ChooseProp:

; 5503 : 		}
; 5504 : 
; 5505 : 		// Don't give it any score if our religion hasn't been enhanced yet
; 5506 : 		else if (bOnlyBetterThanEnhancingReligion)

	cmp	BYTE PTR _bOnlyBetterThanEnhancingReligion$[esp+48], 0
	je	SHORT $LN206@ChooseProp

; 5507 : 		{
; 5508 : 			iScore = 0;

	xor	eax, eax
$LN206@ChooseProp:

; 5509 : 		}
; 5510 : 
; 5511 : 		if (iScore > iBestScore)

	cmp	eax, DWORD PTR _iBestScore$[esp+52]
	jle	SHORT $LN24@ChooseProp

; 5512 : 		{
; 5513 : 			iBestScore = iScore;

	mov	DWORD PTR _iBestScore$[esp+52], eax

; 5514 : 			pBestCity = pLoopCity;

	mov	DWORD PTR _pBestCity$[esp+52], esi
$LN24@ChooseProp:
	mov	edx, DWORD PTR _this$[esp+52]
	push	0
	lea	ecx, DWORD PTR _iLoop$[esp+56]
	push	ecx
	mov	ecx, DWORD PTR [edx+4]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	$LL25@ChooseProp
$LN23@ChooseProp:

; 5515 : 		}
; 5516 : 	}
; 5517 : 
; 5518 : 	// Now try other players, assuming don't need to enhance religion
; 5519 : 	if (!bOnlyBetterThanEnhancingReligion)

	cmp	BYTE PTR _bOnlyBetterThanEnhancingReligion$[esp+48], 0
	jne	$LN14@ChooseProp

; 5520 : 	{
; 5521 : 		for(int iPlayerLoop = 0; iPlayerLoop < MAX_CIV_PLAYERS; iPlayerLoop++)

	xor	edi, edi
	mov	DWORD PTR _iPlayerLoop$228299[esp+52], edi
	mov	DWORD PTR tv1003[esp+48], edi
	npad	1
$LL207@ChooseProp:

; 5522 : 		{
; 5523 : 			CvPlayer &kLoopPlayer = GET_PLAYER((PlayerTypes)iPlayerLoop);

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 5524 : 			if(kLoopPlayer.isAlive() && iPlayerLoop != m_pPlayer->GetID())

	cmp	BYTE PTR [edi+eax+2256], 0
	lea	esi, DWORD PTR [edi+eax]
	je	$LN15@ChooseProp
	mov	ecx, DWORD PTR _this$[esp+52]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _iPlayerLoop$228299[esp+52]
	cmp	eax, DWORD PTR [edx+44]
	je	$LN15@ChooseProp

; 5525 : 			{
; 5526 : #ifdef NQM_AI_GIMP_NO_RELIGION_SPREAD
; 5527 : 				if ((GC.getGame().isOption("GAMEOPTION_AI_TWEAKS") || GC.getGame().isOption("GAMEOPTION_AI_GIMP_NO_RELIGION_SPREAD")) && kLoopPlayer.isHuman())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	OFFSET $SG228308
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	test	al, al
	jne	SHORT $LN11@ChooseProp
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	OFFSET $SG228309
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	test	al, al
	je	SHORT $LN12@ChooseProp
$LN11@ChooseProp:
	mov	ecx, esi
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	test	al, al
	jne	$LN15@ChooseProp
$LN12@ChooseProp:

; 5528 : 					continue;
; 5529 : #endif
; 5530 : #ifdef NQ_AI_GIMP_NO_MINOR_SPREAD // NQMP_Bing - AI cannot spread religion to City-States
; 5531 : 				if ((GC.getGame().isOption("GAMEOPTION_AI_TWEAKS") || GC.getGame().isOption("GAMEOPTION_AI_GIMP_NO_MINOR_RELIGION_SPREAD")) && kLoopPlayer.isMinorCiv())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	OFFSET $SG228312
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	test	al, al
	jne	SHORT $LN9@ChooseProp
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	OFFSET $SG228313
	call	?isOption@CvGame@@QBE_NPBD@Z		; CvGame::isOption
	test	al, al
	je	SHORT $LN10@ChooseProp
$LN9@ChooseProp:
	mov	ecx, esi
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	test	al, al
	jne	$LN15@ChooseProp
$LN10@ChooseProp:

; 5532 : 					continue;
; 5533 : #endif
; 5534 : #ifdef AUI_RELIGION_FIX_CHOOSE_PROPHET_CONVERSION_CITY_HONOR_NONCONVERT_PROMISE
; 5535 : 				if (m_pPlayer->GetDiplomacyAI()->IsPlayerAgreeNotToConvert((PlayerTypes)iPlayerLoop))
; 5536 : 					continue;
; 5537 : #endif
; 5538 : 				int iCityLoop;
; 5539 : 				for(pLoopCity = GET_PLAYER((PlayerTypes)iPlayerLoop).firstCity(&iCityLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER((PlayerTypes)iPlayerLoop).nextCity(&iCityLoop))

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	edx, DWORD PTR _iCityLoop$228314[esp+56]
	add	ecx, edi
	push	edx
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	$LN15@ChooseProp
$LL8@ChooseProp:

; 5540 : 				{
; 5541 : 					if (!pLoopCity->GetCityReligions()->IsDefendedAgainstSpread(eReligion))

	mov	ebp, DWORD PTR _eReligion$[esp+52]
	push	ebp
	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?IsDefendedAgainstSpread@CvCityReligions@@QAE_NW4ReligionTypes@@@Z ; CvCityReligions::IsDefendedAgainstSpread
	test	al, al
	jne	$LN7@ChooseProp

; 5542 : 					{
; 5543 : 						ReligionTypes eMajorityReligion = pLoopCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority

; 5544 : 						int iHeretics = pLoopCity->GetCityReligions()->GetFollowersOtherReligions(eReligion);

	mov	ecx, esi
	mov	DWORD PTR _eMajorityReligion$228321[esp+52], eax
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	edx, DWORD PTR [ecx+eax*8]
	xor	edi, edi
	cmp	ecx, edx
	je	SHORT $LN132@ChooseProp
	npad	5
$LL134@ChooseProp:
	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jle	SHORT $LN133@ChooseProp
	cmp	eax, ebp
	je	SHORT $LN133@ChooseProp
	add	edi, DWORD PTR [ecx+8]
$LN133@ChooseProp:
	add	ecx, 24					; 00000018H
	cmp	ecx, edx
	jne	SHORT $LL134@ChooseProp
$LN132@ChooseProp:

; 5545 : 						int iDistanceToHolyCity = plotDistance(pLoopCity->getX(), pLoopCity->getY(), pHolyCity->getX(), pHolyCity->getY());

	mov	eax, DWORD PTR _pHolyCity$[esp+52]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR [eax+96]
	mov	eax, DWORD PTR [esi+108]
	push	ecx
	mov	ecx, DWORD PTR [esi+96]
	push	edx
	push	eax
	push	ecx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	mov	ecx, eax

; 5546 : 
; 5547 : 						// Score this city
; 5548 : 						int iScore = (iHeretics * 50) / (iDistanceToHolyCity + 1);

	mov	eax, edi
	imul	eax, 50					; 00000032H
	inc	ecx
	cdq
	idiv	ecx
	add	esp, 16					; 00000010H
	mov	ebx, eax

; 5549 : 
; 5550 : 						//    - high score if this city has another religion as its majority
; 5551 : 						if (eMajorityReligion != eReligion)

	cmp	DWORD PTR _eMajorityReligion$228321[esp+52], ebp
	je	SHORT $LN4@ChooseProp

; 5552 : 						{
; 5553 : 							iScore *= 3;

	lea	ebx, DWORD PTR [ebx+ebx*2]
$LN4@ChooseProp:

; 5554 : 						}
; 5555 : 
; 5556 : 						//    - Holy city will anger folks, let's not do that one right away
; 5557 : 						ReligionTypes eCityOwnersReligion = GET_PLAYER((PlayerTypes)iPlayerLoop).GetReligions()->GetReligionCreatedByPlayer();

	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	eax, DWORD PTR tv1003[esp+48]
	lea	ecx, DWORD PTR [eax+edx]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+44]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	mov	edi, eax

; 5558 : 						if (eCityOwnersReligion > RELIGION_PANTHEON && pLoopCity->GetCityReligions()->IsHolyCityForReligion(eCityOwnersReligion))

	test	edi, edi
	jle	SHORT $LN3@ChooseProp
	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	lea	edx, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+edx*8]
	cmp	ecx, eax
	je	SHORT $LN3@ChooseProp
	npad	4
$LL170@ChooseProp:
	cmp	DWORD PTR [ecx], edi
	je	SHORT $LN190@ChooseProp
	add	ecx, 24					; 00000018H
	cmp	ecx, eax
	jne	SHORT $LL170@ChooseProp
	jmp	SHORT $LN3@ChooseProp
$LN189@ChooseProp:
	pop	edi

; 5494 : 		{
; 5495 : 			return pHolyCity;

	mov	eax, ebp
	pop	ebp
	pop	ebx
	pop	esi

; 5582 : }

	add	esp, 36					; 00000024H
	ret	4
$LN190@ChooseProp:

; 5558 : 						if (eCityOwnersReligion > RELIGION_PANTHEON && pLoopCity->GetCityReligions()->IsHolyCityForReligion(eCityOwnersReligion))

	cmp	BYTE PTR [ecx+4], 0
	je	SHORT $LN3@ChooseProp

; 5559 : 						{
; 5560 : 							iScore /= 2;

	mov	eax, ebx
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ebx, eax
$LN3@ChooseProp:

; 5561 : 						}
; 5562 : 
; 5563 : 						//    - City not owned by religion founder, won't anger folks as much
; 5564 : 						const CvReligion* pkMajorityReligion = GC.getGame().GetGameReligions()->GetReligion(eMajorityReligion, NO_PLAYER);

	mov	eax, DWORD PTR _eMajorityReligion$228321[esp+52]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	-1
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 5565 : 						if (pkMajorityReligion && pkMajorityReligion->m_eFounder != pLoopCity->getOwner())

	test	eax, eax
	je	SHORT $LN2@ChooseProp
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR [esi+84]
	je	SHORT $LN2@ChooseProp

; 5566 : 						{
; 5567 : 							iScore *= 2;

	add	ebx, ebx
$LN2@ChooseProp:

; 5568 : 						}
; 5569 : 
; 5570 : 						if (iScore > iBestScore)

	cmp	ebx, DWORD PTR _iBestScore$[esp+52]

; 5571 : 						{
; 5572 : 							iBestScore = iScore;
; 5573 : 							pBestCity = pLoopCity;

	mov	edi, DWORD PTR tv1003[esp+48]
	jle	SHORT $LN7@ChooseProp
	mov	DWORD PTR _iBestScore$[esp+52], ebx
	mov	DWORD PTR _pBestCity$[esp+52], esi
$LN7@ChooseProp:
	mov	edx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	eax, DWORD PTR _iCityLoop$228314[esp+56]
	lea	ecx, DWORD PTR [edi+edx]
	push	eax
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	$LL8@ChooseProp
$LN15@ChooseProp:

; 5520 : 	{
; 5521 : 		for(int iPlayerLoop = 0; iPlayerLoop < MAX_CIV_PLAYERS; iPlayerLoop++)

	inc	DWORD PTR _iPlayerLoop$228299[esp+52]
	add	edi, 63236				; 0000f704H
	cmp	edi, 3983868				; 003cc9fcH
	mov	DWORD PTR tv1003[esp+48], edi
	jl	$LL207@ChooseProp
$LN14@ChooseProp:

; 5574 : 						}
; 5575 : 					}
; 5576 : 				}
; 5577 : 			}
; 5578 : 		}
; 5579 : 	}
; 5580 : 
; 5581 : 	return pBestCity;

	mov	eax, DWORD PTR _pBestCity$[esp+52]
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi

; 5582 : }

	add	esp, 36					; 00000024H
	ret	4
?ChooseProphetConversionCity@CvReligionAI@@QBEPAVCvCity@@_N@Z ENDP ; CvReligionAI::ChooseProphetConversionCity
_TEXT	ENDS
PUBLIC	?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z ; CvReligionAI::ChooseProphetTargetPlot
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\fobjecthandle.h
xdata$x	SEGMENT
__unwindtable$?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z$0
__ehfuncinfo$?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
_TEXT	SEGMENT
_iBestNumTurns$ = -36					; size = 4
_iBestDistance$ = -32					; size = 4
_iI$228354 = -28					; size = 4
$T240764 = -28						; size = 4
_pBestTarget$ = -24					; size = 4
_this$ = -20						; size = 4
$T240766 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pUnit$ = 8						; size = 8
_piTurns$ = 16						; size = 4
?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z PROC ; CvReligionAI::ChooseProphetTargetPlot, COMDAT
; _this$ = ecx

; 5590 : {

	push	-1
	push	__ehhandler$?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 24					; 00000018H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR _this$[esp+52], edi
	xor	esi, esi

; 5591 : 	CvCity* pCity = ChooseProphetConversionCity(false/*bOnlyBetterThanEnhancingReligion*/);

	push	esi
	mov	DWORD PTR __$EHRec$[esp+64], esi
	call	?ChooseProphetConversionCity@CvReligionAI@@QBEPAVCvCity@@_N@Z ; CvReligionAI::ChooseProphetConversionCity
	mov	ebp, eax

; 5592 : 	int iBestNumTurns = MAX_INT;

	mov	ebx, 2147483647				; 7fffffffH
	mov	DWORD PTR _iBestNumTurns$[esp+52], ebx

; 5593 : 	int iTurns;
; 5594 : 	int iBestDistance = MAX_INT;

	mov	DWORD PTR _iBestDistance$[esp+52], ebx

; 5595 : 	int iDistance;
; 5596 : 	CvPlot* pBestTarget = NULL;

	mov	DWORD PTR _pBestTarget$[esp+52], esi

; 5597 : 
; 5598 : 	if(pCity == NULL)

	cmp	ebp, esi
	jne	SHORT $LN16@ChooseProp@2

; 5599 : 	{
; 5600 : 		return NULL;

	mov	ecx, DWORD PTR _pUnit$[esp+48]
	mov	DWORD PTR __$EHRec$[esp+60], -1
	cmp	ecx, esi
	je	SHORT $LN25@ChooseProp@2
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN25@ChooseProp@2:
	xor	eax, eax

; 5664 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 36					; 00000024H
	ret	12					; 0000000cH
$LN16@ChooseProp@2:

; 5601 : 	}
; 5602 : 
; 5603 : 	// Our city with no civilian units?  If so go right in there
; 5604 : 	if(pCity->getOwner() == m_pPlayer->GetID())

	mov	ecx, DWORD PTR [edi+4]
	mov	eax, DWORD PTR [ebp+84]
	mov	ecx, DWORD PTR [ecx+44]
	cmp	eax, ecx
	jne	$LN12@ChooseProp@2

; 5605 : 	{
; 5606 : 		CvUnit* pFirstUnit = pCity->plot()->getUnitByIndex(0);

	push	esi
	mov	ecx, ebp
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	ecx, eax
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex

; 5607 : 		if(!pFirstUnit || pFirstUnit->IsCombatUnit())

	cmp	eax, esi
	je	SHORT $LN13@ChooseProp@2
	cmp	DWORD PTR [eax+1044], esi
	jle	SHORT $LN12@ChooseProp@2
$LN13@ChooseProp@2:

; 5608 : 		{
; 5609 : 			iTurns = TurnsToReachTarget(pUnit, pCity->plot(), true /* bReusePaths */);

	push	esi
	push	esi
	push	1
	mov	ecx, ebp
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	edx, DWORD PTR _pUnit$[esp+60]
	push	eax
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	cl, BYTE PTR _pUnit$[esp+76]
	mov	BYTE PTR [eax+4], cl
	mov	eax, edx
	mov	DWORD PTR $T240764[esp+76], esp
	cmp	eax, esi
	je	SHORT $LN42@ChooseProp@2
	mov	ecx, eax
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN42@ChooseProp@2:
	call	?TurnsToReachTarget@@YAHV?$FObjectHandle@VCvUnit@@@@PAVCvPlot@@_N22@Z ; TurnsToReachTarget
	add	esp, 24					; 00000018H

; 5610 : 			if(iTurns < MAX_INT)

	cmp	eax, ebx
	jge	SHORT $LN12@ChooseProp@2

; 5611 : 			{
; 5612 : 				*piTurns = iTurns;

	mov	edx, DWORD PTR _piTurns$[esp+48]

; 5613 : 				return pCity->plot();

	mov	ecx, ebp
	mov	DWORD PTR [edx], eax
	call	?plot@CvCity@@QBEPAVCvPlot@@XZ		; CvCity::plot
	mov	ecx, DWORD PTR _pUnit$[esp+48]
	mov	esi, eax
	mov	DWORD PTR __$EHRec$[esp+60], -1
	test	ecx, ecx
	je	SHORT $LN47@ChooseProp@2
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN47@ChooseProp@2:
	mov	eax, esi

; 5664 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 36					; 00000024H
	ret	12					; 0000000cH
$LN12@ChooseProp@2:

; 5614 : 			}
; 5615 : 		}
; 5616 : 	}
; 5617 : 
; 5618 : #pragma warning ( push )
; 5619 : #pragma warning ( disable : 6011 ) // Dereferencing NULL pointer
; 5620 : 	AI_PERF_FORMAT("AI-perf-tact.csv", ("ChooseProphetTargetPlot: %s %d; %s, Turn %03d, %s", pUnit->getName().c_str(), pUnit->GetID(), pCity->getName().c_str(), GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()) );
; 5621 : #pragma warning ( pop )
; 5622 : 
; 5623 : 	// Find adjacent plot with no units (that aren't our own)
; 5624 : 	CvPlot* pLoopPlot;
; 5625 : 	for(int iI = 0; iI < NUM_DIRECTION_TYPES; iI++)

	mov	ebx, DWORD PTR _pUnit$[esp+48]
	xor	edx, edx
	mov	DWORD PTR _iI$228354[esp+52], edx
	jmp	SHORT $LN11@ChooseProp@2
	npad	1
$LL101@ChooseProp@2:
	mov	edi, DWORD PTR _this$[esp+52]
$LN11@ChooseProp@2:

; 5626 : 	{
; 5627 : 		pLoopPlot = plotDirection(pCity->getX(), pCity->getY(), ((DirectionTypes)iI));

	mov	eax, DWORD PTR [ebp+108]
	mov	ecx, DWORD PTR [ebp+96]
	push	edx
	push	eax
	push	ecx
	call	?plotDirection@@YAPAVCvPlot@@HHW4DirectionTypes@@@Z ; plotDirection
	mov	esi, eax
	add	esp, 12					; 0000000cH

; 5628 : 
; 5629 : 		if(pLoopPlot != NULL)

	test	esi, esi
	je	$LN10@ChooseProp@2

; 5630 : 		{
; 5631 : 			CvUnit* pFirstUnit = pLoopPlot->getUnitByIndex(0);

	push	0
	mov	ecx, esi
	call	?getUnitByIndex@CvPlot@@QBEPAVCvUnit@@H@Z ; CvPlot::getUnitByIndex

; 5632 : 			if(pFirstUnit && pFirstUnit->getOwner() != m_pPlayer->GetID())

	test	eax, eax
	je	SHORT $LN7@ChooseProp@2
	mov	eax, DWORD PTR [eax+40]
	mov	ecx, DWORD PTR [edi+4]
	cmp	eax, DWORD PTR [ecx+44]
	jne	$LN97@ChooseProp@2
$LN7@ChooseProp@2:

; 5633 : 			{
; 5634 : 				continue;
; 5635 : 			}
; 5636 : 
; 5637 : 			if(pUnit->CanSpreadReligion(pLoopPlot))

	mov	ecx, DWORD PTR _pUnit$[esp+48]
	push	esi
	call	?CanSpreadReligion@CvUnit@@QBE_NPBVCvPlot@@@Z ; CvUnit::CanSpreadReligion
	test	al, al
	je	$LN97@ChooseProp@2

; 5638 : 			{
; 5639 : 				iTurns = TurnsToReachTarget(pUnit, pLoopPlot, true /* bReusePaths */);

	mov	edx, DWORD PTR _pUnit$[esp+48]
	push	0
	push	0
	push	1
	push	esi
	sub	esp, 8
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	cl, BYTE PTR _pUnit$[esp+76]
	mov	BYTE PTR [eax+4], cl
	mov	eax, edx
	mov	DWORD PTR $T240766[esp+76], esp
	test	eax, eax
	je	SHORT $LN70@ChooseProp@2
	mov	ecx, eax
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN70@ChooseProp@2:
	call	?TurnsToReachTarget@@YAHV?$FObjectHandle@VCvUnit@@@@PAVCvPlot@@_N22@Z ; TurnsToReachTarget
	mov	edi, eax
	add	esp, 24					; 00000018H

; 5640 : 				if(iTurns < MAX_INT)

	cmp	edi, 2147483647				; 7fffffffH
	jge	SHORT $LN97@ChooseProp@2

; 5641 : 				{
; 5642 : 					iDistance = plotDistance(pUnit->getX(), pUnit->getY(), pLoopPlot->getX(), pLoopPlot->getY());

	movsx	edx, WORD PTR [esi+2]
	mov	ebx, DWORD PTR _pUnit$[esp+48]
	mov	eax, DWORD PTR [ebx+88]
	mov	ecx, DWORD PTR [ebx+76]
	push	edx
	movsx	edx, WORD PTR [esi]
	push	edx
	push	eax
	push	ecx
	call	?plotDistance@@YAHHHHH@Z		; plotDistance
	add	esp, 16					; 00000010H

; 5643 : 
; 5644 : 					// Consider it to be twice as far if a water plot (those are dangerous!)
; 5645 : 					if(pLoopPlot->isWater())

	cmp	BYTE PTR [esi+5], 3
	jne	SHORT $LN4@ChooseProp@2

; 5646 : 					{
; 5647 : 						iDistance *= 2;

	add	eax, eax
$LN4@ChooseProp@2:

; 5648 : 					}
; 5649 : 
; 5650 : 					if(iTurns < iBestNumTurns || (iTurns == iBestNumTurns && iDistance < iBestDistance))

	mov	ecx, DWORD PTR _iBestNumTurns$[esp+52]
	cmp	edi, ecx
	jl	SHORT $LN2@ChooseProp@2
	jne	SHORT $LN10@ChooseProp@2
	cmp	eax, DWORD PTR _iBestDistance$[esp+52]
	jge	SHORT $LN10@ChooseProp@2
$LN2@ChooseProp@2:

; 5651 : 					{
; 5652 : 						iBestNumTurns = iTurns;

	mov	DWORD PTR _iBestNumTurns$[esp+52], edi

; 5653 : 						iBestDistance = iDistance;

	mov	DWORD PTR _iBestDistance$[esp+52], eax

; 5654 : 						pBestTarget = pLoopPlot;

	mov	DWORD PTR _pBestTarget$[esp+52], esi
	jmp	SHORT $LN10@ChooseProp@2
$LN97@ChooseProp@2:
	mov	ebx, DWORD PTR _pUnit$[esp+48]
$LN10@ChooseProp@2:

; 5614 : 			}
; 5615 : 		}
; 5616 : 	}
; 5617 : 
; 5618 : #pragma warning ( push )
; 5619 : #pragma warning ( disable : 6011 ) // Dereferencing NULL pointer
; 5620 : 	AI_PERF_FORMAT("AI-perf-tact.csv", ("ChooseProphetTargetPlot: %s %d; %s, Turn %03d, %s", pUnit->getName().c_str(), pUnit->GetID(), pCity->getName().c_str(), GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()) );
; 5621 : #pragma warning ( pop )
; 5622 : 
; 5623 : 	// Find adjacent plot with no units (that aren't our own)
; 5624 : 	CvPlot* pLoopPlot;
; 5625 : 	for(int iI = 0; iI < NUM_DIRECTION_TYPES; iI++)

	mov	edx, DWORD PTR _iI$228354[esp+52]
	inc	edx
	cmp	edx, 6
	mov	DWORD PTR _iI$228354[esp+52], edx
	jl	$LL101@ChooseProp@2

; 5655 : 					}
; 5656 : 				}
; 5657 : 			}
; 5658 : 		}
; 5659 : 	}
; 5660 : 
; 5661 : 	if(piTurns)

	mov	eax, DWORD PTR _piTurns$[esp+48]
	test	eax, eax
	je	SHORT $LN1@ChooseProp@2

; 5662 : 		*piTurns = iBestNumTurns;

	mov	ecx, DWORD PTR _iBestNumTurns$[esp+52]
	mov	DWORD PTR [eax], ecx
$LN1@ChooseProp@2:

; 5663 : 	return pBestTarget;

	mov	DWORD PTR __$EHRec$[esp+60], -1
	test	ebx, ebx
	je	SHORT $LN93@ChooseProp@2
	mov	ecx, ebx
	call	?getDestructionNotification@CvUnit@@QAEAAU?$DestructionNotification@V?$FObjectHandle@VCvUnit@@@@@@XZ ; CvUnit::getDestructionNotification
$LN93@ChooseProp@2:

; 5664 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+52]
	mov	eax, DWORD PTR _pBestTarget$[esp+52]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 36					; 00000024H
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z$0:
	lea	ecx, DWORD PTR _pUnit$[ebp-4]
	jmp	??1?$FObjectHandle@VCvUnit@@@@QAE@XZ	; FObjectHandle<CvUnit>::~FObjectHandle<CvUnit>
__ehhandler$?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z:
	mov	eax, OFFSET __ehfuncinfo$?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseProphetTargetPlot@CvReligionAI@@QAEPAVCvPlot@@V?$FObjectHandle@VCvUnit@@@@PAH@Z ENDP ; CvReligionAI::ChooseProphetTargetPlot
PUBLIC	?BuyMissionary@CvReligionAI@@AAEXW4ReligionTypes@@@Z ; CvReligionAI::BuyMissionary
; Function compile flags: /Ogtpy
;	COMDAT ?BuyMissionary@CvReligionAI@@AAEXW4ReligionTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
?BuyMissionary@CvReligionAI@@AAEXW4ReligionTypes@@@Z PROC ; CvReligionAI::BuyMissionary, COMDAT
; _this$ = ecx

; 5891 : 	CvPlayer &kPlayer = GET_PLAYER(m_pPlayer->GetID());

	mov	eax, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR [eax+44]
	imul	esi, 63236				; 0000f704H
	add	esi, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	edi

; 5892 : 	UnitTypes eMissionary = (UnitTypes)GC.getInfoTypeForString("UNIT_MISSIONARY");

	push	0
	push	OFFSET $SG228459
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 5893 : 	CvCity *pCapital = kPlayer.getCapitalCity();

	mov	ecx, esi
	mov	edi, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity

; 5894 : 	if (pCapital)

	test	eax, eax
	je	SHORT $LN1@BuyMission
	push	ebx

; 5895 : 	{
; 5896 : 		int iCost = pCapital->GetFaithPurchaseCost(eMissionary, true /*bIncludeBeliefDiscounts*/);

	push	1
	push	edi
	mov	ecx, eax
	call	?GetFaithPurchaseCost@CvCity@@QAEHW4UnitTypes@@_N@Z ; CvCity::GetFaithPurchaseCost

; 5897 : 		if (iCost <= kPlayer.GetFaith())

	mov	ecx, esi
	mov	ebx, eax
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	cmp	ebx, eax
	pop	ebx
	jg	SHORT $LN1@BuyMission

; 5898 : 		{
; 5899 : 			CvCity *pBestCity = CvReligionAIHelpers::GetBestCityFaithUnitPurchase(kPlayer, eMissionary, eReligion);

	mov	ecx, DWORD PTR _eReligion$[esp+4]
	push	ecx
	push	edi
	push	esi
	call	?GetBestCityFaithUnitPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4UnitTypes@@W4ReligionTypes@@@Z ; CvReligionAIHelpers::GetBestCityFaithUnitPurchase
	add	esp, 12					; 0000000cH

; 5900 : 			if (pBestCity)

	test	eax, eax
	je	SHORT $LN1@BuyMission

; 5901 : 			{
; 5902 : 				pBestCity->Purchase(eMissionary, (BuildingTypes)-1, (ProjectTypes)-1, YIELD_FAITH);

	push	5
	push	-1
	push	-1
	push	edi
	mov	ecx, eax
	call	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::Purchase
$LN1@BuyMission:
	pop	edi
	pop	esi

; 5903 : 			}
; 5904 : 		}
; 5905 : 	}
; 5906 : }

	ret	4
?BuyMissionary@CvReligionAI@@AAEXW4ReligionTypes@@@Z ENDP ; CvReligionAI::BuyMissionary
_TEXT	ENDS
PUBLIC	?BuyInquisitor@CvReligionAI@@AAEXW4ReligionTypes@@@Z ; CvReligionAI::BuyInquisitor
; Function compile flags: /Ogtpy
;	COMDAT ?BuyInquisitor@CvReligionAI@@AAEXW4ReligionTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
?BuyInquisitor@CvReligionAI@@AAEXW4ReligionTypes@@@Z PROC ; CvReligionAI::BuyInquisitor, COMDAT
; _this$ = ecx

; 5911 : 	CvPlayer &kPlayer = GET_PLAYER(m_pPlayer->GetID());

	mov	eax, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR [eax+44]
	imul	esi, 63236				; 0000f704H
	add	esi, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	edi

; 5912 : 	UnitTypes eInquisitor = (UnitTypes)GC.getInfoTypeForString("UNIT_INQUISITOR");

	push	0
	push	OFFSET $SG228475
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 5913 : 	CvCity *pCapital = kPlayer.getCapitalCity();

	mov	ecx, esi
	mov	edi, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity

; 5914 : 	if (pCapital)

	test	eax, eax
	je	SHORT $LN1@BuyInquisi
	push	ebx

; 5915 : 	{
; 5916 : 		int iCost = pCapital->GetFaithPurchaseCost(eInquisitor, true /*bIncludeBeliefDiscounts*/);

	push	1
	push	edi
	mov	ecx, eax
	call	?GetFaithPurchaseCost@CvCity@@QAEHW4UnitTypes@@_N@Z ; CvCity::GetFaithPurchaseCost

; 5917 : 		if (iCost <= kPlayer.GetFaith())

	mov	ecx, esi
	mov	ebx, eax
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	cmp	ebx, eax
	pop	ebx
	jg	SHORT $LN1@BuyInquisi

; 5918 : 		{
; 5919 : 			CvCity *pBestCity = CvReligionAIHelpers::GetBestCityFaithUnitPurchase(kPlayer, eInquisitor, eReligion);

	mov	ecx, DWORD PTR _eReligion$[esp+4]
	push	ecx
	push	edi
	push	esi
	call	?GetBestCityFaithUnitPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4UnitTypes@@W4ReligionTypes@@@Z ; CvReligionAIHelpers::GetBestCityFaithUnitPurchase
	add	esp, 12					; 0000000cH

; 5920 : 			if (pBestCity)

	test	eax, eax
	je	SHORT $LN1@BuyInquisi

; 5921 : 			{
; 5922 : 				pBestCity->Purchase(eInquisitor, (BuildingTypes)-1, (ProjectTypes)-1, YIELD_FAITH);

	push	5
	push	-1
	push	-1
	push	edi
	mov	ecx, eax
	call	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::Purchase
$LN1@BuyInquisi:
	pop	edi
	pop	esi

; 5923 : 			}
; 5924 : 		}
; 5925 : 	}
; 5926 : }

	ret	4
?BuyInquisitor@CvReligionAI@@AAEXW4ReligionTypes@@@Z ENDP ; CvReligionAI::BuyInquisitor
_TEXT	ENDS
PUBLIC	?BuyGreatPerson@CvReligionAI@@AAEXW4UnitTypes@@@Z ; CvReligionAI::BuyGreatPerson
; Function compile flags: /Ogtpy
;	COMDAT ?BuyGreatPerson@CvReligionAI@@AAEXW4UnitTypes@@@Z
_TEXT	SEGMENT
_eUnit$ = 8						; size = 4
?BuyGreatPerson@CvReligionAI@@AAEXW4UnitTypes@@@Z PROC	; CvReligionAI::BuyGreatPerson, COMDAT
; _this$ = ecx

; 5931 : 	CvPlayer &kPlayer = GET_PLAYER(m_pPlayer->GetID());

	mov	eax, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR [eax+44]
	imul	esi, 63236				; 0000f704H
	add	esi, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 5932 : 	CvCity *pCapital = kPlayer.getCapitalCity();

	mov	ecx, esi
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity

; 5933 : 	if (pCapital)

	test	eax, eax
	je	SHORT $LN1@BuyGreatPe
	push	ebx
	push	edi

; 5934 : 	{
; 5935 : 		int iCost = pCapital->GetFaithPurchaseCost(eUnit, true /*bIncludeBeliefDiscounts*/);

	mov	edi, DWORD PTR _eUnit$[esp+8]
	push	1
	push	edi
	mov	ecx, eax
	call	?GetFaithPurchaseCost@CvCity@@QAEHW4UnitTypes@@_N@Z ; CvCity::GetFaithPurchaseCost

; 5936 : 		if (iCost <= kPlayer.GetFaith())

	mov	ecx, esi
	mov	ebx, eax
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	cmp	ebx, eax
	jg	SHORT $LN12@BuyGreatPe

; 5937 : 		{
; 5938 : 			CvCity *pBestCity = CvReligionAIHelpers::GetBestCityFaithUnitPurchase(kPlayer, eUnit, NO_RELIGION);

	push	-1
	push	edi
	push	esi
	call	?GetBestCityFaithUnitPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4UnitTypes@@W4ReligionTypes@@@Z ; CvReligionAIHelpers::GetBestCityFaithUnitPurchase
	add	esp, 12					; 0000000cH

; 5939 : 			if (pBestCity)

	test	eax, eax
	je	SHORT $LN12@BuyGreatPe

; 5940 : 			{
; 5941 : 				pBestCity->Purchase(eUnit, (BuildingTypes)-1, (ProjectTypes)-1, YIELD_FAITH);

	push	5
	push	-1
	push	-1
	push	edi
	mov	ecx, eax
	call	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::Purchase
$LN12@BuyGreatPe:
	pop	edi
	pop	ebx
$LN1@BuyGreatPe:
	pop	esi

; 5942 : 			}
; 5943 : 		}
; 5944 : 	}
; 5945 : }

	ret	4
?BuyGreatPerson@CvReligionAI@@AAEXW4UnitTypes@@@Z ENDP	; CvReligionAI::BuyGreatPerson
_TEXT	ENDS
PUBLIC	?BuyFaithBuilding@CvReligionAI@@AAEXW4ReligionTypes@@W4BuildingClassTypes@@@Z ; CvReligionAI::BuyFaithBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?BuyFaithBuilding@CvReligionAI@@AAEXW4ReligionTypes@@W4BuildingClassTypes@@@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
_eBuildingClass$ = 12					; size = 4
?BuyFaithBuilding@CvReligionAI@@AAEXW4ReligionTypes@@W4BuildingClassTypes@@@Z PROC ; CvReligionAI::BuyFaithBuilding, COMDAT
; _this$ = ecx

; 5950 : 	CvPlayer &kPlayer = GET_PLAYER(m_pPlayer->GetID());

	mov	ecx, DWORD PTR [ecx+4]

; 5951 : 	BuildingTypes eBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings(eBuildingClass);

	mov	eax, DWORD PTR _eBuildingClass$[esp-4]
	push	esi
	mov	esi, DWORD PTR [ecx+44]
	imul	esi, 63236				; 0000f704H
	add	esi, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	edi
	push	eax
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings

; 5952 : 	CvCity *pCapital = kPlayer.getCapitalCity();

	mov	ecx, esi
	mov	edi, eax
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity

; 5953 : 	if (pCapital)

	test	eax, eax
	je	SHORT $LN1@BuyFaithBu
	push	ebx

; 5954 : 	{
; 5955 : 		int iCost = pCapital->GetFaithPurchaseCost(eBuilding);

	push	edi
	mov	ecx, eax
	call	?GetFaithPurchaseCost@CvCity@@QAEHW4BuildingTypes@@@Z ; CvCity::GetFaithPurchaseCost

; 5956 : 		if (iCost <= kPlayer.GetFaith())

	mov	ecx, esi
	mov	ebx, eax
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	cmp	ebx, eax
	pop	ebx
	jg	SHORT $LN1@BuyFaithBu

; 5957 : 		{
; 5958 : 			CvCity *pBestCity = CvReligionAIHelpers::GetBestCityFaithBuildingPurchase(kPlayer, eBuilding, eReligion);

	mov	ecx, DWORD PTR _eReligion$[esp+4]
	push	ecx
	push	edi
	push	esi
	call	?GetBestCityFaithBuildingPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4BuildingTypes@@W4ReligionTypes@@@Z ; CvReligionAIHelpers::GetBestCityFaithBuildingPurchase
	add	esp, 12					; 0000000cH

; 5959 : 			if (pBestCity)

	test	eax, eax
	je	SHORT $LN1@BuyFaithBu

; 5960 : 			{
; 5961 : 				pBestCity->Purchase((UnitTypes)-1, eBuilding, (ProjectTypes)-1, YIELD_FAITH);

	push	5
	push	-1
	push	edi
	push	-1
	mov	ecx, eax
	call	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::Purchase
$LN1@BuyFaithBu:
	pop	edi
	pop	esi

; 5962 : 			}
; 5963 : 		}
; 5964 : 	}
; 5965 : }

	ret	8
?BuyFaithBuilding@CvReligionAI@@AAEXW4ReligionTypes@@W4BuildingClassTypes@@@Z ENDP ; CvReligionAI::BuyFaithBuilding
_TEXT	ENDS
PUBLIC	?BuyAnyAvailableFaithBuilding@CvReligionAI@@AAE_NXZ ; CvReligionAI::BuyAnyAvailableFaithBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?BuyAnyAvailableFaithBuilding@CvReligionAI@@AAE_NXZ
_TEXT	SEGMENT
_iLoop$ = -4						; size = 4
?BuyAnyAvailableFaithBuilding@CvReligionAI@@AAE_NXZ PROC ; CvReligionAI::BuyAnyAvailableFaithBuilding, COMDAT
; _this$ = ecx

; 6004 : {

	push	ecx
	push	ebx
	push	ebp
	mov	ebp, ecx

; 6005 : 	PlayerTypes ePlayer = m_pPlayer->GetID();

	mov	eax, DWORD PTR [ebp+4]
	mov	ebx, DWORD PTR [eax+44]

; 6006 : 
; 6007 : 	int iLoop;
; 6008 : 	CvCity* pLoopCity;
; 6009 : 	for(pLoopCity = GET_PLAYER(ePlayer).firstCity(&iLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(ePlayer).nextCity(&iLoop))

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	imul	ebx, 63236				; 0000f704H
	push	esi
	push	edi
	push	0
	lea	edx, DWORD PTR _iLoop$[esp+24]
	add	ecx, ebx
	push	edx
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN5@BuyAnyAvai@2
	npad	3
$LL7@BuyAnyAvai@2:

; 6010 : 	{
; 6011 : 		ReligionTypes eReligion = pLoopCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority

; 6012 : 		if(eReligion > RELIGION_PANTHEON)

	test	eax, eax
	jle	SHORT $LN6@BuyAnyAvai@2

; 6013 : 		{
; 6014 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 6015 : 			std::vector<BuildingClassTypes> eBuildingClass = FaithBuildingAvailable(eReligion);
; 6016 : 			if (eBuildingClass.size() > 0)
; 6017 : 			{
; 6018 : 				for (std::vector<BuildingClassTypes>::iterator it = eBuildingClass.begin(); it != eBuildingClass.end(); ++it)
; 6019 : 				{
; 6020 : 					BuildingTypes eBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings((*it));
; 6021 : #else
; 6022 : 			BuildingClassTypes eBuildingClass = FaithBuildingAvailable(eReligion);

	push	eax
	mov	ecx, ebp
	call	?FaithBuildingAvailable@CvReligionAI@@ABE?AW4BuildingClassTypes@@W4ReligionTypes@@@Z ; CvReligionAI::FaithBuildingAvailable

; 6023 : 			if(eBuildingClass != NO_BUILDINGCLASS)

	cmp	eax, -1
	je	SHORT $LN6@BuyAnyAvai@2

; 6024 : 			{
; 6025 : 				BuildingTypes eBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings(eBuildingClass);

	mov	ecx, DWORD PTR [ebp+4]
	push	eax
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings
	mov	edi, eax

; 6026 : #endif
; 6027 : 				if(eBuilding != NO_BUILDING)

	cmp	edi, -1
	je	SHORT $LN6@BuyAnyAvai@2

; 6028 : 				{
; 6029 : 					if(pLoopCity->IsCanPurchase(true, true, (UnitTypes)-1, eBuilding, (ProjectTypes)-1, YIELD_FAITH))

	push	5
	push	-1
	push	edi
	push	-1
	push	1
	push	1
	mov	ecx, esi
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	test	al, al
	jne	SHORT $LN19@BuyAnyAvai@2
$LN6@BuyAnyAvai@2:

; 6006 : 
; 6007 : 	int iLoop;
; 6008 : 	CvCity* pLoopCity;
; 6009 : 	for(pLoopCity = GET_PLAYER(ePlayer).firstCity(&iLoop); pLoopCity != NULL; pLoopCity = GET_PLAYER(ePlayer).nextCity(&iLoop))

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	push	0
	lea	edx, DWORD PTR _iLoop$[esp+24]
	lea	ecx, DWORD PTR [ebx+eax]
	push	edx
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LL7@BuyAnyAvai@2
$LN5@BuyAnyAvai@2:
	pop	edi
	pop	esi
	pop	ebp

; 6033 : 					}
; 6034 : 				}
; 6035 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 6036 : 				}
; 6037 : #endif
; 6038 : 			}
; 6039 : 		}
; 6040 : 	}
; 6041 : 	return false;

	xor	al, al
	pop	ebx

; 6042 : }

	pop	ecx
	ret	0
$LN19@BuyAnyAvai@2:

; 6030 : 					{
; 6031 : 						pLoopCity->Purchase((UnitTypes)-1, eBuilding, (ProjectTypes)-1, YIELD_FAITH);

	push	5
	push	-1
	push	edi
	push	-1
	mov	ecx, esi
	call	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::Purchase
	pop	edi
	pop	esi
	pop	ebp

; 6032 : 						return true;

	mov	al, 1
	pop	ebx

; 6042 : }

	pop	ecx
	ret	0
?BuyAnyAvailableFaithBuilding@CvReligionAI@@AAE_NXZ ENDP ; CvReligionAI::BuyAnyAvailableFaithBuilding
_TEXT	ENDS
PUBLIC	?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBelief
EXTRN	?isBeingWorked@CvPlot@@QBE_NXZ:PROC		; CvPlot::isBeingWorked
EXTRN	?GetClosestFriendlyCity@CvPlayer@@QAEPAVCvCity@@AAVCvPlot@@H@Z:PROC ; CvPlayer::GetClosestFriendlyCity
; Function compile flags: /Ogtpy
;	COMDAT ?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z
_TEXT	SEGMENT
tv316 = -20						; size = 4
_iRtnValue$ = -16					; size = 4
_iPlotLoop$ = -12					; size = 4
_ePlotOwner$228567 = -8					; size = 4
_iLoop$ = -4						; size = 4
_pEntry$ = 8						; size = 4
?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z PROC ; CvReligionAI::ScoreBelief, COMDAT
; _this$ = ecx

; 6050 : {

	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	mov	ebx, ecx

; 6051 : 	int iRtnValue = 5;  // Base value since everything has SOME value
; 6052 : 
; 6053 : 	// Loop through each plot on map
; 6054 : #ifdef AUI_WARNING_FIXES
; 6055 : 	CvPlot* pPlot;
; 6056 : 	for (uint iPlotLoop = 0; iPlotLoop < GC.getMap().numPlots(); iPlotLoop++)
; 6057 : #else
; 6058 : 	int iPlotLoop;
; 6059 : 	CvPlot* pPlot;
; 6060 : 	for(iPlotLoop = 0; iPlotLoop < GC.getMap().numPlots(); iPlotLoop++)

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	xor	eax, eax
	cmp	DWORD PTR [ecx+4028], eax
	push	edi
	mov	edi, 5
	mov	DWORD PTR _iRtnValue$[esp+32], edi
	mov	DWORD PTR _iPlotLoop$[esp+32], eax
	jle	$LN12@ScoreBelie@4
	mov	DWORD PTR tv316[esp+32], eax
	push	ebp
	npad	2
$LL14@ScoreBelie@4:

; 6061 : #endif
; 6062 : 	{
; 6063 : 		pPlot = GC.getMap().plotByIndexUnchecked(iPlotLoop);

	mov	esi, DWORD PTR [ecx+4068]
	add	esi, DWORD PTR tv316[esp+36]

; 6064 : 
; 6065 : 		// Skip if not revealed or in enemy territory
; 6066 : 		PlayerTypes ePlotOwner = pPlot->getOwner();
; 6067 : 		if(pPlot->isRevealed(m_pPlayer->getTeam()) && (ePlotOwner == NO_PLAYER || ePlotOwner == m_pPlayer->GetID()))

	mov	edi, DWORD PTR [ebx+4]
	movsx	eax, BYTE PTR [esi+4]
	mov	edx, DWORD PTR [edi+44]
	mov	DWORD PTR _ePlotOwner$228567[esp+36], eax
	cmp	edx, 63					; 0000003fH
	ja	SHORT $LN31@ScoreBelie@4
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax+edx*4]
	jmp	SHORT $LN32@ScoreBelie@4
$LN31@ScoreBelie@4:
	or	ecx, -1
$LN32@ScoreBelie@4:
	mov	eax, ecx
	shr	eax, 5
	mov	ebp, eax
	shl	ebp, 5
	sub	ecx, ebp
	mov	ebp, 1
	shl	ebp, cl
	test	ebp, DWORD PTR [esi+eax*4+8]
	je	SHORT $LN13@ScoreBelie@4
	mov	ebp, DWORD PTR _ePlotOwner$228567[esp+36]
	cmp	ebp, -1
	je	SHORT $LN10@ScoreBelie@4
	cmp	ebp, edx
	jne	SHORT $LN13@ScoreBelie@4
$LN10@ScoreBelie@4:

; 6068 : 		{
; 6069 : 			// Also skip if closest city of ours is not within 3
; 6070 : 			CvCity* pClosestCity = m_pPlayer->GetClosestFriendlyCity(*pPlot, 3);

	push	3
	push	esi
	mov	ecx, edi
	call	?GetClosestFriendlyCity@CvPlayer@@QAEPAVCvCity@@AAVCvPlot@@H@Z ; CvPlayer::GetClosestFriendlyCity

; 6071 : 			if(pClosestCity)

	test	eax, eax
	je	SHORT $LN13@ScoreBelie@4

; 6072 : 			{
; 6073 : 				// Score it
; 6074 : 				int iScoreAtPlot = ScoreBeliefAtPlot(pEntry, pPlot);

	mov	ecx, DWORD PTR _pEntry$[esp+32]
	push	esi
	push	ecx
	mov	ecx, ebx
	call	?ScoreBeliefAtPlot@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvPlot@@@Z ; CvReligionAI::ScoreBeliefAtPlot

; 6075 : 
; 6076 : 				// Apply multiplier based on whether or not being worked, within culture borders, or not
; 6077 : 				if(pPlot->isBeingWorked())

	mov	ecx, esi
	mov	edi, eax
	call	?isBeingWorked@CvPlot@@QBE_NXZ		; CvPlot::isBeingWorked
	test	al, al
	je	SHORT $LN8@ScoreBelie@4

; 6078 : 				{
; 6079 : 					iScoreAtPlot *= GC.getRELIGION_BELIEF_SCORE_WORKED_PLOT_MULTIPLIER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3420
	jmp	SHORT $LN60@ScoreBelie@4
$LN8@ScoreBelie@4:

; 6080 : 				}
; 6081 : 				else if(ePlotOwner != NO_PLAYER)
; 6082 : 				{
; 6083 : 					iScoreAtPlot *= GC.getRELIGION_BELIEF_SCORE_OWNED_PLOT_MULTIPLIER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3424
	cmp	ebp, -1
	jne	SHORT $LN60@ScoreBelie@4

; 6084 : 				}
; 6085 : 				else
; 6086 : 				{
; 6087 : 					iScoreAtPlot *= GC.getRELIGION_BELIEF_SCORE_UNOWNED_PLOT_MULTIPLIER();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3428
$LN60@ScoreBelie@4:
	imul	eax, edi

; 6088 : 				}
; 6089 : 
; 6090 : 				iRtnValue += iScoreAtPlot;

	add	DWORD PTR _iRtnValue$[esp+36], eax
$LN13@ScoreBelie@4:
	mov	eax, DWORD PTR _iPlotLoop$[esp+36]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	add	DWORD PTR tv316[esp+36], 484		; 000001e4H
	inc	eax
	cmp	eax, DWORD PTR [ecx+4028]
	mov	DWORD PTR _iPlotLoop$[esp+36], eax
	jl	$LL14@ScoreBelie@4
	mov	edi, DWORD PTR _iRtnValue$[esp+36]
	pop	ebp
$LN12@ScoreBelie@4:

; 6091 : 			}
; 6092 : 		}
; 6093 : 	}
; 6094 : 
; 6095 : 	// Add in value at city level
; 6096 : 	int iLoop;
; 6097 : 	CvCity* pLoopCity;
; 6098 : 	for(pLoopCity = m_pPlayer->firstCity(&iLoop); pLoopCity != NULL; pLoopCity = m_pPlayer->nextCity(&iLoop))

	mov	ecx, DWORD PTR [ebx+4]
	push	0
	lea	edx, DWORD PTR _iLoop$[esp+36]
	push	edx
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	test	eax, eax
	je	SHORT $LN2@ScoreBelie@4
$LL4@ScoreBelie@4:

; 6099 : 	{
; 6100 : 		int iScoreAtCity = ScoreBeliefAtCity(pEntry, pLoopCity);

	push	eax
	mov	eax, DWORD PTR _pEntry$[esp+32]
	push	eax
	mov	ecx, ebx
	call	?ScoreBeliefAtCity@CvReligionAI@@AAEHPAVCvBeliefEntry@@PAVCvCity@@@Z ; CvReligionAI::ScoreBeliefAtCity

; 6101 : 		iScoreAtCity *= GC.getRELIGION_BELIEF_SCORE_CITY_MULTIPLIER();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3416
	imul	ecx, eax
	push	0
	lea	edx, DWORD PTR _iLoop$[esp+36]

; 6102 : 
; 6103 : 		iRtnValue += iScoreAtCity;

	add	edi, ecx
	mov	ecx, DWORD PTR [ebx+4]
	push	edx
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	test	eax, eax
	jne	SHORT $LL4@ScoreBelie@4
$LN2@ScoreBelie@4:

; 6104 : 	}
; 6105 : 
; 6106 : 	// Add in player-level value
; 6107 : 	iRtnValue += ScoreBeliefForPlayer(pEntry);

	mov	esi, DWORD PTR _pEntry$[esp+28]
	push	esi
	mov	ecx, ebx
	call	?ScoreBeliefForPlayer@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBeliefForPlayer

; 6108 : 
; 6109 : 	// Divide by 2 if a Pantheon belief (to deemphasize these to Byzantine bonus belief)
; 6110 : 	if (pEntry->IsPantheonBelief())

	mov	ecx, esi
	add	edi, eax
	call	?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsPantheonBelief
	test	al, al

; 6111 : 	{
; 6112 : 		iRtnValue /= 2;

	mov	eax, edi
	je	SHORT $LN1@ScoreBelie@4
	cdq
	sub	eax, edx
	sar	eax, 1
$LN1@ScoreBelie@4:
	pop	edi
	pop	esi
	pop	ebx

; 6113 : 	}
; 6114 : 
; 6115 : 	return iRtnValue;
; 6116 : }

	add	esp, 20					; 00000014H
	ret	4
?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ENDP ; CvReligionAI::ScoreBelief
_TEXT	ENDS
PUBLIC	?AreAllOurCitiesHaveFaithBuilding@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::AreAllOurCitiesHaveFaithBuilding
; Function compile flags: /Ogtpy
;	COMDAT ?AreAllOurCitiesHaveFaithBuilding@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z
_TEXT	SEGMENT
_bRtnValue$ = -1					; size = 1
_iLoop$ = 8						; size = 4
_eReligion$ = 8						; size = 4
_bIncludePuppets$ = 12					; size = 1
?AreAllOurCitiesHaveFaithBuilding@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z PROC ; CvReligionAI::AreAllOurCitiesHaveFaithBuilding, COMDAT
; _this$ = ecx

; 6774 : {

	push	ecx
	push	ebx

; 6775 : 	bool bRtnValue = true;
; 6776 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 6777 : 	std::vector<BuildingClassTypes> eFaithBuildingClass = FaithBuildingAvailable(eReligion);
; 6778 : 	if (eFaithBuildingClass.size() == 0)
; 6779 : 	{
; 6780 : 		return true;
; 6781 : 	}
; 6782 : 	for (std::vector<BuildingClassTypes>::iterator it = eFaithBuildingClass.begin(); it != eFaithBuildingClass.end() && bRtnValue; ++it)
; 6783 : 	{
; 6784 : 		BuildingTypes eFaithBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings((*it));
; 6785 : 
; 6786 : 		if (eFaithBuilding == NO_BUILDING)
; 6787 : 		{
; 6788 : 			continue;
; 6789 : 		}
; 6790 : #else
; 6791 : 	BuildingClassTypes eFaithBuildingClass = FaithBuildingAvailable(eReligion);

	mov	ebx, DWORD PTR _eReligion$[esp+4]
	push	ebp
	push	esi
	push	edi
	push	ebx
	mov	edi, ecx
	mov	BYTE PTR _bRtnValue$[esp+24], 1
	call	?FaithBuildingAvailable@CvReligionAI@@ABE?AW4BuildingClassTypes@@W4ReligionTypes@@@Z ; CvReligionAI::FaithBuildingAvailable

; 6792 : 	BuildingTypes eFaithBuilding = (BuildingTypes)m_pPlayer->getCivilizationInfo().getCivilizationBuildings(eFaithBuildingClass);

	mov	ecx, DWORD PTR [edi+4]
	mov	esi, eax
	push	esi
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationBuildings@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationBuildings
	mov	ebp, eax

; 6793 : 
; 6794 : 	if(eFaithBuildingClass == NO_BUILDINGCLASS || eFaithBuilding == NO_BUILDING)

	cmp	esi, -1
	je	$LN8@AreAllOurC@2
	cmp	ebp, -1
	je	$LN8@AreAllOurC@2

; 6797 : 	}
; 6798 : #endif
; 6799 : 
; 6800 : 	int iLoop;
; 6801 : 	CvCity* pLoopCity;
; 6802 : 	for(pLoopCity = m_pPlayer->firstCity(&iLoop); pLoopCity != NULL; pLoopCity = m_pPlayer->nextCity(&iLoop))

	mov	ecx, DWORD PTR [edi+4]
	push	0
	lea	eax, DWORD PTR _iLoop$[esp+20]
	push	eax
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN15@AreAllOurC@2
$LL7@AreAllOurC@2:

; 6803 : 	{
; 6804 : 		if(pLoopCity->GetCityReligions()->GetReligiousMajority() == eReligion)

	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	cmp	eax, ebx
	jne	SHORT $LN6@AreAllOurC@2

; 6805 : 		{
; 6806 : 			if(bIncludePuppets || !pLoopCity->IsPuppet())

	cmp	BYTE PTR _bIncludePuppets$[esp+16], 0
	jne	SHORT $LN2@AreAllOurC@2
	mov	ecx, esi
	call	?IsPuppet@CvCity@@QBE_NXZ		; CvCity::IsPuppet
	test	al, al
	jne	SHORT $LN6@AreAllOurC@2
$LN2@AreAllOurC@2:

; 6807 : 			{
; 6808 : 				if(pLoopCity->GetCityBuildings()->GetNumBuilding(eFaithBuilding) < 1)

	push	ebp
	mov	ecx, esi
	call	?GetCityBuildings@CvCity@@QBEPAVCvCityBuildings@@XZ ; CvCity::GetCityBuildings
	mov	ecx, eax
	call	?GetNumBuilding@CvCityBuildings@@QBEHW4BuildingTypes@@@Z ; CvCityBuildings::GetNumBuilding
	cmp	eax, 1
	jl	SHORT $LN13@AreAllOurC@2
$LN6@AreAllOurC@2:

; 6797 : 	}
; 6798 : #endif
; 6799 : 
; 6800 : 	int iLoop;
; 6801 : 	CvCity* pLoopCity;
; 6802 : 	for(pLoopCity = m_pPlayer->firstCity(&iLoop); pLoopCity != NULL; pLoopCity = m_pPlayer->nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$[esp+20]
	push	ecx
	mov	ecx, DWORD PTR [edi+4]
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LL7@AreAllOurC@2

; 6811 : 					break;
; 6812 : 				}
; 6813 : 			}
; 6814 : 		}
; 6815 : 	}
; 6816 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 6817 : 	}
; 6818 : #endif
; 6819 : 
; 6820 : 	return bRtnValue;

	mov	al, BYTE PTR _bRtnValue$[esp+20]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 6821 : }

	pop	ecx
	ret	8
$LN13@AreAllOurC@2:

; 6809 : 				{
; 6810 : 					bRtnValue = false;

	mov	BYTE PTR _bRtnValue$[esp+20], 0
$LN15@AreAllOurC@2:

; 6811 : 					break;
; 6812 : 				}
; 6813 : 			}
; 6814 : 		}
; 6815 : 	}
; 6816 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 6817 : 	}
; 6818 : #endif
; 6819 : 
; 6820 : 	return bRtnValue;

	mov	al, BYTE PTR _bRtnValue$[esp+20]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 6821 : }

	pop	ecx
	ret	8
$LN8@AreAllOurC@2:
	pop	edi
	pop	esi
	pop	ebp

; 6795 : 	{
; 6796 : 		return true;

	mov	al, 1
	pop	ebx

; 6821 : }

	pop	ecx
	ret	8
?AreAllOurCitiesHaveFaithBuilding@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ENDP ; CvReligionAI::AreAllOurCitiesHaveFaithBuilding
_TEXT	ENDS
PUBLIC	?GetDesiredFaithGreatPerson@CvReligionAI@@ABE?AW4UnitTypes@@XZ ; CvReligionAI::GetDesiredFaithGreatPerson
EXTRN	?getAdmiralsFromFaith@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getAdmiralsFromFaith
EXTRN	?getGeneralsFromFaith@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getGeneralsFromFaith
EXTRN	?GetNumUnitsWithUnitAI@CvPlayer@@QAEHW4UnitAITypes@@_N1@Z:PROC ; CvPlayer::GetNumUnitsWithUnitAI
EXTRN	?GetAIMapHint@CvMap@@QAEHXZ:PROC		; CvMap::GetAIMapHint
EXTRN	?getEngineersFromFaith@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getEngineersFromFaith
EXTRN	?IsUsingStrategy@CvEconomicAI@@QAE_NW4EconomicAIStrategyTypes@@@Z:PROC ; CvEconomicAI::IsUsingStrategy
EXTRN	?GetEconomicAI@CvPlayer@@QBEPAVCvEconomicAI@@XZ:PROC ; CvPlayer::GetEconomicAI
EXTRN	?getMerchantsFromFaith@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getMerchantsFromFaith
EXTRN	?getScientistsFromFaith@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getScientistsFromFaith
EXTRN	?getMusiciansFromFaith@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getMusiciansFromFaith
EXTRN	?getArtistsFromFaith@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getArtistsFromFaith
EXTRN	?getWritersFromFaith@CvPlayer@@QBEHXZ:PROC	; CvPlayer::getWritersFromFaith
EXTRN	?GetActiveGrandStrategy@CvGrandStrategyAI@@QBE?AW4AIGrandStrategyTypes@@XZ:PROC ; CvGrandStrategyAI::GetActiveGrandStrategy
EXTRN	?GetGrandStrategyAI@CvPlayer@@QBEPAVCvGrandStrategyAI@@XZ:PROC ; CvPlayer::GetGrandStrategyAI
EXTRN	?canTrain@CvPlayer@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z:PROC ; CvPlayer::canTrain
EXTRN	?GetProductionCost@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetProductionCost
EXTRN	?GetUnitClassType@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetUnitClassType
; Function compile flags: /Ogtpy
;	COMDAT ?GetDesiredFaithGreatPerson@CvReligionAI@@ABE?AW4UnitTypes@@XZ
_TEXT	SEGMENT
_iUnitLoop$228995 = -20					; size = 4
_eReligion$ = -16					; size = 4
_iBestScore$ = -12					; size = 4
_eRtnValue$ = -8					; size = 4
_eSpecialUnitGreatPerson$ = -4				; size = 4
?GetDesiredFaithGreatPerson@CvReligionAI@@ABE?AW4UnitTypes@@XZ PROC ; CvReligionAI::GetDesiredFaithGreatPerson, COMDAT
; _this$ = ecx

; 7027 : {

	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi

; 7028 : 	SpecialUnitTypes eSpecialUnitGreatPerson = (SpecialUnitTypes) GC.getInfoTypeForString("SPECIALUNIT_PEOPLE");

	xor	esi, esi
	push	esi
	mov	ebx, ecx
	push	OFFSET $SG228991
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 7029 : 	UnitTypes eRtnValue = NO_UNIT;

	or	edi, -1

; 7030 : 	int iBestScore = 0;
; 7031 : 	ReligionTypes eReligion = GetReligionToSpread();

	mov	ecx, ebx
	mov	DWORD PTR _eSpecialUnitGreatPerson$[esp+32], eax
	mov	DWORD PTR _eRtnValue$[esp+32], edi
	mov	DWORD PTR _iBestScore$[esp+32], esi
	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread

; 7032 : 
; 7033 : 	// Loop through all Units and see if they're possible
; 7034 : #ifdef AUI_WARNING_FIXES
; 7035 : 	for (uint iUnitLoop = 0; iUnitLoop < GC.getNumUnitInfos(); iUnitLoop++)
; 7036 : #else
; 7037 : 	for(int iUnitLoop = 0; iUnitLoop < GC.getNumUnitInfos(); iUnitLoop++)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _eReligion$[esp+32], eax
	mov	DWORD PTR _iUnitLoop$228995[esp+32], esi
	call	?getNumUnitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitInfos
	test	eax, eax
	jle	$LN64@GetDesired
	push	ebp
	npad	5
$LL69@GetDesired:

; 7038 : #endif
; 7039 : 	{
; 7040 : 		const UnitTypes eUnit = static_cast<UnitTypes>(iUnitLoop);
; 7041 : 		CvUnitEntry* pkUnitInfo = GC.getUnitInfo(eUnit);

	push	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	mov	edi, eax

; 7042 : 
; 7043 : 		if(pkUnitInfo == NULL)

	test	edi, edi
	je	$LN52@GetDesired

; 7044 : 			continue;
; 7045 : 
; 7046 : 		UnitClassTypes eUnitClass = (UnitClassTypes)pkUnitInfo->GetUnitClassType();

	mov	ecx, edi
	call	?GetUnitClassType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetUnitClassType

; 7047 : 
; 7048 : 		// Can't be able to train it
; 7049 : 		if(pkUnitInfo->GetProductionCost() != -1)

	mov	ecx, edi
	mov	ebp, eax
	call	?GetProductionCost@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetProductionCost
	cmp	eax, -1
	jne	$LN52@GetDesired

; 7050 : 		{
; 7051 : 			continue;
; 7052 : 		}
; 7053 : 
; 7054 : 		// Must be a Great Person (defined in SpecialUnitType in Unit XML)
; 7055 : 		if(pkUnitInfo->GetSpecialUnitType() != eSpecialUnitGreatPerson)

	mov	ecx, edi
	call	?GetSpecialUnitType@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetSpecialUnitType
	cmp	eax, DWORD PTR _eSpecialUnitGreatPerson$[esp+36]
	jne	$LN52@GetDesired

; 7056 : 		{
; 7057 : 			continue;
; 7058 : 		}
; 7059 : 
; 7060 : 		// Must be a Great Person for this player's civ
; 7061 : 		if(!m_pPlayer->canTrain(eUnit, false /*bContinue*/, false /*bTestVisible*/, true /*bIgnoreCost*/))

	mov	ecx, DWORD PTR [ebx+4]
	push	0
	push	0
	push	1
	push	0
	push	0
	push	esi
	call	?canTrain@CvPlayer@@QBE_NW4UnitTypes@@_N111PAVCvString@@@Z ; CvPlayer::canTrain
	test	al, al
	je	$LN52@GetDesired

; 7062 : 		{
; 7063 : 			continue;
; 7064 : 		}
; 7065 : 
; 7066 : 		// Can we purchase this one in the capital?
; 7067 : 		CvCity *pCapital = m_pPlayer->getCapitalCity();

	mov	ecx, DWORD PTR [ebx+4]
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity

; 7068 : 		if (pCapital)

	test	eax, eax
	je	$LN52@GetDesired

; 7069 : 		{
; 7070 : 			if (pCapital->IsCanPurchase(false/*bTestPurchaseCost*/, false/*bTestTrainable*/, eUnit, NO_BUILDING, NO_PROJECT, YIELD_FAITH))

	push	5
	push	-1
	push	-1
	push	esi
	push	0
	push	0
	mov	ecx, eax
	call	?IsCanPurchase@CvCity@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::IsCanPurchase
	test	al, al
	je	$LN52@GetDesired

; 7071 : 			{
; 7072 : 				int iScore = 0;
; 7073 : 				AIGrandStrategyTypes eVictoryStrategy = m_pPlayer->GetGrandStrategyAI()->GetActiveGrandStrategy();

	mov	ecx, DWORD PTR [ebx+4]
	xor	edi, edi
	call	?GetGrandStrategyAI@CvPlayer@@QBEPAVCvGrandStrategyAI@@XZ ; CvPlayer::GetGrandStrategyAI
	mov	ecx, eax
	call	?GetActiveGrandStrategy@CvGrandStrategyAI@@QBE?AW4AIGrandStrategyTypes@@XZ ; CvGrandStrategyAI::GetActiveGrandStrategy

; 7074 : 
; 7075 : 				// Score it
; 7076 : 				if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_PROPHET"))

	push	edi
	push	OFFSET $SG229014
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	esi, eax
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	ebp, eax
	jne	SHORT $LN44@GetDesired

; 7077 : 				{
; 7078 : 					if (GetReligionToSpread() > RELIGION_PANTHEON)

	mov	ecx, ebx
	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread
	test	eax, eax
	jle	$LN2@GetDesired

; 7079 : 					{
; 7080 : 						if (ChooseProphetConversionCity(true/*bOnlyBetterThanEnhancingReligion*/))

	push	1
	mov	ecx, ebx
	call	?ChooseProphetConversionCity@CvReligionAI@@QBEPAVCvCity@@_N@Z ; CvReligionAI::ChooseProphetConversionCity
	test	eax, eax
	je	SHORT $LN42@GetDesired

; 7087 : 						}
; 7088 : 						iScore /= (1+ m_pPlayer->GetReligions()->GetNumProphetsSpawned());

	mov	ecx, DWORD PTR [ebx+4]
	mov	edi, 1500				; 000005dcH
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, edi

; 7089 : 					}
; 7090 : 				}

	jmp	$LN70@GetDesired
$LN42@GetDesired:

; 7081 : 						{
; 7082 : 							iScore = 1500;
; 7083 : 						}
; 7084 : 						else if (ChooseProphetConversionCity(false/*bOnlyBetterThanEnhancingReligion*/))

	push	0
	mov	ecx, ebx
	call	?ChooseProphetConversionCity@CvReligionAI@@QBEPAVCvCity@@_N@Z ; CvReligionAI::ChooseProphetConversionCity
	test	eax, eax
	je	SHORT $LN40@GetDesired

; 7085 : 						{
; 7086 : 							iScore = 750;

	mov	edi, 750				; 000002eeH
$LN40@GetDesired:

; 7087 : 						}
; 7088 : 						iScore /= (1+ m_pPlayer->GetReligions()->GetNumProphetsSpawned());

	mov	ecx, DWORD PTR [ebx+4]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, edi

; 7089 : 					}
; 7090 : 				}

	jmp	$LN70@GetDesired
$LN44@GetDesired:

; 7091 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_WRITER"))

	push	0
	push	OFFSET $SG229021
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 7092 : 				{
; 7093 : 					if (eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_CULTURE"))

	push	0
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	cmp	ebp, eax
	jne	SHORT $LN38@GetDesired
	push	OFFSET $SG229024
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 7094 : 					{
; 7095 : 						iScore = 1000;
; 7096 : 					}
; 7097 : 					else
; 7098 : 					{
; 7099 : 						iScore = 400;
; 7100 : 					}
; 7101 : 					iScore /= (1+ m_pPlayer->getWritersFromFaith());

	mov	ecx, DWORD PTR [ebx+4]
	sub	esi, eax
	neg	esi
	sbb	esi, esi
	and	esi, -600				; fffffda8H
	add	esi, 1000				; 000003e8H
	call	?getWritersFromFaith@CvPlayer@@QBEHXZ	; CvPlayer::getWritersFromFaith
	mov	ecx, eax
	mov	eax, esi
	jmp	$LN70@GetDesired
$LN38@GetDesired:

; 7102 : 				}
; 7103 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_ARTIST"))

	push	OFFSET $SG229028
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 7104 : 				{
; 7105 : 					if (eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_CULTURE"))

	push	0
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	cmp	ebp, eax
	jne	SHORT $LN34@GetDesired
	push	OFFSET $SG229031
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 7106 : 					{
; 7107 : 						iScore = 1000;
; 7108 : 					}
; 7109 : 					else
; 7110 : 					{
; 7111 : 						iScore = 400;
; 7112 : 					}
; 7113 : 					iScore /= (1+ m_pPlayer->getArtistsFromFaith());

	mov	ecx, DWORD PTR [ebx+4]
	sub	esi, eax
	neg	esi
	sbb	esi, esi
	and	esi, -600				; fffffda8H
	add	esi, 1000				; 000003e8H
	call	?getArtistsFromFaith@CvPlayer@@QBEHXZ	; CvPlayer::getArtistsFromFaith
	mov	ecx, eax
	mov	eax, esi
	jmp	$LN70@GetDesired
$LN34@GetDesired:

; 7114 : 				}
; 7115 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_MUSICIAN"))

	push	OFFSET $SG229035
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 7116 : 				{
; 7117 : 					if (eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_CULTURE"))

	push	0
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	cmp	ebp, eax
	jne	SHORT $LN30@GetDesired
	push	OFFSET $SG229038
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 7118 : 					{
; 7119 : 						iScore = 1000;
; 7120 : 					}
; 7121 : 					else
; 7122 : 					{
; 7123 : 						iScore = 400;
; 7124 : 					}
; 7125 : 					iScore /= (1+ m_pPlayer->getMusiciansFromFaith());

	mov	ecx, DWORD PTR [ebx+4]
	sub	esi, eax
	neg	esi
	sbb	esi, esi
	and	esi, -600				; fffffda8H
	add	esi, 1000				; 000003e8H
	call	?getMusiciansFromFaith@CvPlayer@@QBEHXZ	; CvPlayer::getMusiciansFromFaith
	mov	ecx, eax
	mov	eax, esi
	jmp	$LN70@GetDesired
$LN30@GetDesired:

; 7126 : 				}
; 7127 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_SCIENTIST"))

	push	OFFSET $SG229042
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 7128 : 				{
; 7129 : 					if (eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_SPACESHIP"))

	push	0
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	cmp	ebp, eax
	jne	SHORT $LN26@GetDesired
	push	OFFSET $SG229045
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 7130 : 					{
; 7131 : 						iScore = 1000;
; 7132 : 					}
; 7133 : 					else
; 7134 : 					{
; 7135 : 						iScore = 400;
; 7136 : 					}
; 7137 : #ifndef AUI_WARNING_FIXES
; 7138 : 					iScore = 1000;
; 7139 : #endif
; 7140 : 					iScore /= (1+ m_pPlayer->getScientistsFromFaith());

	mov	ecx, DWORD PTR [ebx+4]
	call	?getScientistsFromFaith@CvPlayer@@QBEHXZ ; CvPlayer::getScientistsFromFaith
	jmp	$LN71@GetDesired
$LN26@GetDesired:

; 7141 : 				}
; 7142 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_MERCHANT"))

	push	OFFSET $SG229049
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 7143 : 				{
; 7144 : 					if (eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_UNITED_NATIONS"))

	push	0
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	cmp	ebp, eax
	jne	SHORT $LN22@GetDesired
	push	OFFSET $SG229052
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 7145 : 					{
; 7146 : 						iScore = 1000;
; 7147 : 					}
; 7148 : 					else
; 7149 : 					{
; 7150 : 						iScore = 400;
; 7151 : 					}
; 7152 : 					iScore /= (1+ m_pPlayer->getMerchantsFromFaith());

	mov	ecx, DWORD PTR [ebx+4]
	sub	esi, eax
	neg	esi
	sbb	esi, esi
	and	esi, -600				; fffffda8H
	add	esi, 1000				; 000003e8H
	call	?getMerchantsFromFaith@CvPlayer@@QBEHXZ	; CvPlayer::getMerchantsFromFaith
	mov	ecx, eax
	mov	eax, esi
	jmp	$LN70@GetDesired
$LN22@GetDesired:

; 7153 : 				}
; 7154 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_ENGINEER"))

	push	OFFSET $SG229056
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 7155 : 				{
; 7156 : 					EconomicAIStrategyTypes eStrategy = (EconomicAIStrategyTypes) GC.getInfoTypeForString("ECONOMICAISTRATEGY_GS_SPACESHIP_HOMESTRETCH");

	push	0
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	cmp	ebp, eax
	jne	SHORT $LN18@GetDesired
	push	OFFSET $SG229059
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 7157 : 					if (eStrategy != NO_ECONOMICAISTRATEGY && m_pPlayer->GetEconomicAI()->IsUsingStrategy(eStrategy))

	cmp	eax, -1
	je	SHORT $LN17@GetDesired
	mov	ecx, DWORD PTR [ebx+4]
	push	eax
	call	?GetEconomicAI@CvPlayer@@QBEPAVCvEconomicAI@@XZ ; CvPlayer::GetEconomicAI
	mov	ecx, eax
	call	?IsUsingStrategy@CvEconomicAI@@QAE_NW4EconomicAIStrategyTypes@@@Z ; CvEconomicAI::IsUsingStrategy

; 7158 : 					{
; 7159 : 						iScore = 2000;

	mov	esi, 2000				; 000007d0H
	test	al, al
	jne	SHORT $LN16@GetDesired
$LN17@GetDesired:

; 7160 : 					}
; 7161 : 					else
; 7162 : 					{
; 7163 : 						iScore = 500;

	mov	esi, 500				; 000001f4H
$LN16@GetDesired:

; 7164 : 					}
; 7165 : 					iScore /= (1+ m_pPlayer->getEngineersFromFaith());

	mov	ecx, DWORD PTR [ebx+4]
	call	?getEngineersFromFaith@CvPlayer@@QBEHXZ	; CvPlayer::getEngineersFromFaith
	mov	ecx, eax
	mov	eax, esi
	jmp	$LN70@GetDesired
$LN18@GetDesired:

; 7166 : 				}
; 7167 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_GREAT_GENERAL"))

	push	OFFSET $SG229064
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 7168 : 				{
; 7169 : 					if (eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_CONQUEST")&& !(GC.getMap().GetAIMapHint() & 1))

	push	0
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	cmp	ebp, eax
	jne	SHORT $LN14@GetDesired
	push	OFFSET $SG229067
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jne	SHORT $LN13@GetDesired
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	call	?GetAIMapHint@CvMap@@QAEHXZ		; CvMap::GetAIMapHint

; 7170 : 					{
; 7171 : 						iScore = 1000;

	mov	esi, 1000				; 000003e8H
	test	al, 1
	je	SHORT $LN12@GetDesired
$LN13@GetDesired:

; 7172 : 					}
; 7173 : 					else
; 7174 : 					{
; 7175 : 						iScore = 400;

	mov	esi, 400				; 00000190H
$LN12@GetDesired:

; 7176 : 					}
; 7177 : 					iScore /= (1+ m_pPlayer->getGeneralsFromFaith() + m_pPlayer->GetNumUnitsWithUnitAI(UNITAI_GENERAL));

	mov	ecx, DWORD PTR [ebx+4]
	push	1
	push	0
	push	13					; 0000000dH
	call	?GetNumUnitsWithUnitAI@CvPlayer@@QAEHW4UnitAITypes@@_N1@Z ; CvPlayer::GetNumUnitsWithUnitAI
	mov	ecx, DWORD PTR [ebx+4]
	mov	edi, eax
	call	?getGeneralsFromFaith@CvPlayer@@QBEHXZ	; CvPlayer::getGeneralsFromFaith
	lea	ecx, DWORD PTR [edi+eax+1]
	mov	eax, esi
	jmp	$LN72@GetDesired
$LN14@GetDesired:

; 7178 : 				}
; 7179 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_GREAT_ADMIRAL"))

	push	OFFSET $SG229071
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 7180 : 				{
; 7181 : 					if (eVictoryStrategy == (AIGrandStrategyTypes) GC.getInfoTypeForString("AIGRANDSTRATEGY_CONQUEST") && GC.getMap().GetAIMapHint() & 1)

	push	0
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	cmp	ebp, eax
	jne	SHORT $LN10@GetDesired
	push	OFFSET $SG229074
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	esi, eax
	jne	SHORT $LN9@GetDesired
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	call	?GetAIMapHint@CvMap@@QAEHXZ		; CvMap::GetAIMapHint

; 7182 : 					{
; 7183 : 						iScore = 1000;

	mov	esi, 1000				; 000003e8H
	test	al, 1
	jne	SHORT $LN8@GetDesired
$LN9@GetDesired:

; 7184 : 					}
; 7185 : 					else
; 7186 : 					{
; 7187 : 						iScore = 400;

	mov	esi, 400				; 00000190H
$LN8@GetDesired:

; 7188 : 					}
; 7189 : 					iScore /= (1+ m_pPlayer->getAdmiralsFromFaith() + m_pPlayer->GetNumUnitsWithUnitAI(UNITAI_ADMIRAL));

	mov	ecx, DWORD PTR [ebx+4]
	push	1
	push	0
	push	37					; 00000025H
	call	?GetNumUnitsWithUnitAI@CvPlayer@@QAEHW4UnitAITypes@@_N1@Z ; CvPlayer::GetNumUnitsWithUnitAI
	mov	ecx, DWORD PTR [ebx+4]
	mov	edi, eax
	call	?getAdmiralsFromFaith@CvPlayer@@QBEHXZ	; CvPlayer::getAdmiralsFromFaith
	lea	ecx, DWORD PTR [edi+eax+1]
	mov	eax, esi
	jmp	SHORT $LN72@GetDesired
$LN10@GetDesired:

; 7190 : 				}
; 7191 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_MISSIONARY"))

	push	OFFSET $SG229078
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 7192 : 				{
; 7193 : 					if (HaveNearbyConversionTarget(eReligion, false /*bCanIncludeReligionStarter*/))

	push	0
	cmp	ebp, eax
	jne	SHORT $LN6@GetDesired
	mov	edx, DWORD PTR _eReligion$[esp+40]
	push	edx
	mov	ecx, ebx
	call	?HaveNearbyConversionTarget@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::HaveNearbyConversionTarget
	test	al, al
	je	SHORT $LN2@GetDesired

; 7194 : 					{
; 7195 : 						iScore = 1000 / (m_pPlayer->GetNumUnitsWithUnitAI(UNITAI_MISSIONARY) + 1);		

	push	1
	push	0
	push	35					; 00000023H

; 7196 : 					}
; 7197 : 				}

	jmp	SHORT $LN73@GetDesired
$LN6@GetDesired:

; 7198 : 				else if (eUnitClass == GC.getInfoTypeForString("UNITCLASS_INQUISITOR"))

	push	OFFSET $SG229082
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	cmp	ebp, eax
	jne	SHORT $LN2@GetDesired

; 7199 : 				{
; 7200 : 					if (HaveEnoughInquisitors(eReligion))

	mov	edx, DWORD PTR _eReligion$[esp+36]
	push	edx
	mov	ecx, ebx
	call	?HaveEnoughInquisitors@CvReligionAI@@ABE_NW4ReligionTypes@@@Z ; CvReligionAI::HaveEnoughInquisitors
	test	al, al
	je	SHORT $LN2@GetDesired

; 7201 : 					{
; 7202 : 						iScore = 1000 / (m_pPlayer->GetNumUnitsWithUnitAI(UNITAI_INQUISITOR) + 1);

	push	1
	push	0
	push	36					; 00000024H
$LN73@GetDesired:
	mov	ecx, DWORD PTR [ebx+4]
	call	?GetNumUnitsWithUnitAI@CvPlayer@@QAEHW4UnitAITypes@@_N1@Z ; CvPlayer::GetNumUnitsWithUnitAI
$LN71@GetDesired:
	mov	ecx, eax
	mov	eax, 1000				; 000003e8H
$LN70@GetDesired:
	inc	ecx
$LN72@GetDesired:
	cdq
	idiv	ecx
	mov	edi, eax
$LN2@GetDesired:

; 7203 : 					}
; 7204 : 				}
; 7205 : 
; 7206 : 				if (iScore > iBestScore)

	cmp	edi, DWORD PTR _iBestScore$[esp+36]

; 7207 : 				{
; 7208 : 					iBestScore = iScore;
; 7209 : 					eRtnValue = eUnit;

	mov	esi, DWORD PTR _iUnitLoop$228995[esp+36]
	jle	SHORT $LN52@GetDesired
	mov	edx, esi
	mov	DWORD PTR _iBestScore$[esp+36], edi
	mov	DWORD PTR _eRtnValue$[esp+36], edx
$LN52@GetDesired:
	inc	esi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _iUnitLoop$228995[esp+36], esi
	call	?getNumUnitInfos@CvGlobals@@QAEHXZ	; CvGlobals::getNumUnitInfos
	cmp	esi, eax
	jl	$LL69@GetDesired

; 7210 : 				}
; 7211 : 			}
; 7212 : 		}
; 7213 : 	}
; 7214 : 
; 7215 : 	return eRtnValue;

	mov	eax, DWORD PTR _eRtnValue$[esp+36]
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx

; 7216 : }

	add	esp, 20					; 00000014H
	ret	0
$LN64@GetDesired:

; 7210 : 				}
; 7211 : 			}
; 7212 : 		}
; 7213 : 	}
; 7214 : 
; 7215 : 	return eRtnValue;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx

; 7216 : }

	add	esp, 20					; 00000014H
	ret	0
?GetDesiredFaithGreatPerson@CvReligionAI@@ABE?AW4UnitTypes@@XZ ENDP ; CvReligionAI::GetDesiredFaithGreatPerson
_TEXT	ENDS
PUBLIC	??0?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	mov	eax, ecx

; 471  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 472  : 		}

	ret	0
??0?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >
_TEXT	ENDS
PUBLIC	??1?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligion,16,0,297,0>::~FStaticVector<CvReligion,16,0,297,0>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
;	COMDAT ??1?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ
_TEXT	SEGMENT
??1?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ PROC ; FStaticVector<CvReligion,16,0,297,0>::~FStaticVector<CvReligion,16,0,297,0>, COMDAT
; _this$ = ecx

; 618  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [ecx]
	push	eax
	push	edx
	call	?Free@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXPAVCvReligion@@I@Z ; FStaticVector<CvReligion,16,0,297,0>::Free

; 619  : 	};

	ret	0
??1?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAE@XZ ENDP ; FStaticVector<CvReligion,16,0,297,0>::~FStaticVector<CvReligion,16,0,297,0>
_TEXT	ENDS
PUBLIC	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z
_TEXT	SEGMENT
_element$ = 8						; size = 4
?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z PROC ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	esi
	mov	esi, ecx

; 677  : 		m_bIsResized = false;
; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	eax, DWORD PTR [esi+8]
	mov	BYTE PTR [esi+204], 0
	cmp	DWORD PTR [esi+4], eax
	jne	SHORT $LN1@push_back

; 679  : 			GrowSize(m_uiCurrMaxSize);

	push	eax
	call	?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize
$LN1@push_back:

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]
	test	eax, eax
	je	SHORT $LN4@push_back
	mov	ecx, DWORD PTR _element$[esp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], ecx
$LN4@push_back:

; 681  : 		return m_uiCurrSize++;

	mov	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 682  : 	};

	ret	4
?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ENDP ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back
_TEXT	ENDS
PUBLIC	??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx

; 470  : 		{	// construct empty vector

	mov	eax, ecx

; 471  : 		_Buy(0);

	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 472  : 		}

	ret	0
??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??0?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ; CvWeightedVector<enum BeliefTypes,100,1>::CvWeightedVector<enum BeliefTypes,100,1>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
;	COMDAT ??0?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ
_TEXT	SEGMENT
??0?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ PROC ; CvWeightedVector<enum BeliefTypes,100,1>::CvWeightedVector<enum BeliefTypes,100,1>, COMDAT
; _this$ = ecx

; 52   : 	CvWeightedVector(void)

	mov	eax, ecx
	lea	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 100			; 00000064H
	mov	DWORD PTR [eax], ecx

; 53   : 	{
; 54   : 	};

	ret	0
??0?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ENDP ; CvWeightedVector<enum BeliefTypes,100,1>::CvWeightedVector<enum BeliefTypes,100,1>
_TEXT	ENDS
PUBLIC	??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ
_TEXT	SEGMENT
??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ PROC ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>, COMDAT
; _this$ = ecx

; 59   : 	};

	mov	eax, DWORD PTR [ecx]
	add	ecx, 12					; 0000000cH
	cmp	eax, ecx
	je	SHORT $LN6@CvWeighted
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	pop	ecx
$LN6@CvWeighted:
	ret	0
??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ENDP ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@0@Z ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::erase
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?erase@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@0@Z PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::erase, COMDAT
; _this$ = ecx

; 1029 : 		iterator _First = _Make_iter(_First_arg);

	mov	edx, DWORD PTR __First_arg$[esp-4]
	push	ebp
	mov	ebp, DWORD PTR ___$ReturnUdt$[esp]
	push	esi

; 1030 : 		iterator _Last = _Make_iter(_Last_arg);
; 1031 : 
; 1032 : 		if (_First != _Last)

	mov	esi, DWORD PTR __Last_arg$[esp+4]
	push	edi
	mov	edi, ecx
	mov	DWORD PTR [ebp], edx
	cmp	edx, esi
	je	SHORT $LN29@erase@2

; 1033 : 			{	// worth doing, copy down over hole
; 1034 : 
; 1035 :  #if _HAS_ITERATOR_DEBUGGING
; 1036 : 			if (_Last < _First || _First._Mycont != this
; 1037 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1038 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1039 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1040 : 				_VEC_ITER_BASE(_First));
; 1041 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1042 : 
; 1043 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));

	mov	eax, DWORD PTR [edi+8]
	sub	eax, esi
	sar	eax, 2
	lea	ecx, DWORD PTR [eax*4]
	push	ebx
	lea	ebx, DWORD PTR [ecx+edx]
	test	eax, eax
	jle	SHORT $LN26@erase@2
	push	ecx
	push	esi
	push	ecx
	push	edx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN26@erase@2:

; 1046 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1047 : 
; 1048 : 			_Destroy(_Ptr, _Mylast);
; 1049 : 			_Mylast = _Ptr;

	mov	DWORD PTR [edi+8], ebx
	pop	ebx
$LN29@erase@2:
	pop	edi
	pop	esi

; 1050 : 			}
; 1051 : #if _HAS_ITERATOR_DEBUGGING
; 1052 :         return (iterator(_First._Myptr, this));
; 1053 : #else
; 1054 : 		return (_First);

	mov	eax, ebp
	pop	ebp

; 1055 : #endif
; 1056 : 		}

	ret	12					; 0000000cH
?erase@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE?AV?$_Vector_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@V?$_Vector_const_iterator@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@2@0@Z ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAEXXZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAEXXZ PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@IAEXXZ ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::_Tidy
_TEXT	ENDS
PUBLIC	?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligion,16,0,297,0>::GrowSize
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	SEGMENT
__unwindtable$?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z$0
__ehfuncinfo$?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	ENDS
;	COMDAT ?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z
_TEXT	SEGMENT
_pTemp$ = -20						; size = 4
$T241521 = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T241576 = 8						; size = 4
_i$229468 = 8						; size = 4
_uiFit$ = 8						; size = 4
?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z PROC ; FStaticVector<CvReligion,16,0,297,0>::GrowSize, COMDAT
; _this$ = ecx

; 744  : 	{

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	mov	esi, ecx

; 745  : 		if( m_uiCurrMaxSize == 0 ) m_uiCurrMaxSize = 1;

	cmp	DWORD PTR [esi+8], 0
	push	edi
	jne	SHORT $LN45@GrowSize@3
	mov	DWORD PTR [esi+8], 1
$LN45@GrowSize@3:

; 746  : 		while( uiFit >= m_uiCurrMaxSize ){

	mov	edx, DWORD PTR _uiFit$[esp+28]
	cmp	edx, DWORD PTR [esi+8]
	jb	SHORT $LN7@GrowSize@3
$LL8@GrowSize@3:

; 747  : 
; 748  : 			//Try to double size...
; 749  : 			UINT uiNewSize = m_uiCurrMaxSize<<1;

	mov	eax, DWORD PTR [esi+8]
	lea	ecx, DWORD PTR [eax+eax]

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	cmp	ecx, eax
	jb	SHORT $LN40@GrowSize@3

; 754  : 				break;
; 755  : 			}
; 756  : 
; 757  : 			//...otherwise use the doubled size
; 758  : 			m_uiCurrMaxSize = uiNewSize;

	mov	DWORD PTR [esi+8], ecx
	cmp	edx, ecx
	jae	SHORT $LL8@GrowSize@3

; 750  : 
; 751  : 			//...on overflow bail and set to exact size
; 752  : 			if( uiNewSize < m_uiCurrMaxSize ){

	jmp	SHORT $LN7@GrowSize@3
$LN40@GrowSize@3:

; 753  : 				m_uiCurrMaxSize = uiFit;

	mov	DWORD PTR [esi+8], edx
$LN7@GrowSize@3:

; 759  : 		}
; 760  : 
; 761  : 		T* pTemp = Alloc(m_uiCurrMaxSize);

	mov	edi, DWORD PTR [esi+8]
	cmp	edi, 16					; 00000010H
	jbe	SHORT $LN16@GrowSize@3
	mov	eax, edi
	imul	eax, 328				; 00000148H
	push	798					; 0000031eH
	push	OFFSET ??_C@_0GH@ECFAPJEJ@c?3?2users?2enormousapplepie?2docume@
	push	4
	push	eax
	call	?FireMallocAlignedNoTracking@@YAPAXIIPBDH@Z ; FireMallocAlignedNoTracking
	add	esp, 16					; 00000010H
	mov	ebx, eax
	mov	DWORD PTR [esi+8], edi
	jmp	SHORT $LN15@GrowSize@3
$LN16@GrowSize@3:
	lea	ebx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+8], 16			; 00000010H
$LN15@GrowSize@3:

; 762  : 		if( bPODType ){
; 763  : 			memcpy( (void*)pTemp, (void*)m_pData, sizeof(T)*m_uiCurrSize);
; 764  : 		}else{
; 765  : 			for(unsigned int i = 0; i < m_uiCurrSize; ++i)

	xor	edi, edi
	push	ebp
	mov	DWORD PTR _pTemp$[esp+36], ebx
	mov	DWORD PTR _i$229468[esp+32], edi
	cmp	DWORD PTR [esi+4], edi
	jbe	SHORT $LN1@GrowSize@3
	or	ebp, -1
$LL3@GrowSize@3:

; 766  : 				new( (void*)&(pTemp[i]) )T( m_pData[i]);

	mov	eax, edi
	imul	eax, 328				; 00000148H
	lea	ecx, DWORD PTR [eax+ebx]
	mov	DWORD PTR $T241521[esp+36], ecx
	mov	DWORD PTR __$EHRec$[esp+44], 0
	test	ecx, ecx
	je	SHORT $LN12@GrowSize@3
	mov	edx, DWORD PTR [esi]
	add	edx, eax
	push	edx
	call	??0CvReligion@@QAE@ABV0@@Z
$LN12@GrowSize@3:
	inc	edi
	mov	DWORD PTR __$EHRec$[esp+44], ebp
	mov	DWORD PTR _i$229468[esp+32], edi
	cmp	edi, DWORD PTR [esi+4]
	jb	SHORT $LL3@GrowSize@3
$LN1@GrowSize@3:

; 767  : 		}
; 768  : 		Free(m_pData, m_uiCurrSize);

	mov	eax, DWORD PTR [esi+4]
	mov	edi, DWORD PTR [esi]
	mov	DWORD PTR $T241576[esp+32], edi
	test	eax, eax
	jbe	SHORT $LN25@GrowSize@3
	add	edi, 152				; 00000098H
	mov	ebp, eax
	npad	6
$LL27@GrowSize@3:
	mov	ecx, edi
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	add	edi, 328				; 00000148H
	sub	ebp, 1
	jne	SHORT $LL27@GrowSize@3
	mov	edi, DWORD PTR $T241576[esp+32]
$LN25@GrowSize@3:
	lea	eax, DWORD PTR [esi+12]
	pop	ebp
	cmp	edi, eax
	je	SHORT $LN44@GrowSize@3
	push	edi
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN44@GrowSize@3:

; 769  : 		m_pData = pTemp;
; 770  : 
; 771  : 		m_bIsResized = true;
; 772  : 	};

	mov	ecx, DWORD PTR __$EHRec$[esp+32]
	mov	DWORD PTR [esi], ebx
	pop	edi
	mov	BYTE PTR [esi+5260], 1
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 20					; 00000014H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z$0:
	mov	eax, DWORD PTR _i$229468[ebp-4]
	imul	eax, 328				; 00000148H
	add	eax, DWORD PTR _pTemp$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T241521[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z ENDP ; FStaticVector<CvReligion,16,0,297,0>::GrowSize
PUBLIC	?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::push_back
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z
_TEXT	SEGMENT
_element$ = 8						; size = 4
?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z PROC ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	esi
	mov	esi, ecx

; 677  : 		m_bIsResized = false;
; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	eax, DWORD PTR [esi+8]
	mov	BYTE PTR [esi+812], 0
	cmp	DWORD PTR [esi+4], eax
	jne	SHORT $LN1@push_back@2

; 679  : 			GrowSize(m_uiCurrMaxSize);

	push	eax
	call	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::GrowSize
$LN1@push_back@2:

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	lea	eax, DWORD PTR [ecx+eax*8]
	test	eax, eax
	je	SHORT $LN4@push_back@2
	mov	ecx, DWORD PTR _element$[esp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN4@push_back@2:

; 681  : 		return m_uiCurrSize++;

	mov	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 682  : 	};

	ret	4
?push_back@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@QAEIABUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@Z ENDP ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::push_back
_TEXT	ENDS
PUBLIC	??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z ; fastdelegate::MakeDelegate<CvGame,CvGame,int,char const *,int>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\eventsystem\fastdelegate.h
;	COMDAT ??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_func$ = 16						; size = 4
??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z PROC ; fastdelegate::MakeDelegate<CvGame,CvGame,int,char const *,int>, COMDAT

; 2031 : 	return FastDelegate2<Param1, Param2, FASTDLGT_RETTYPE>(x, func);

	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR _func$[esp-4]
	mov	edx, DWORD PTR _x$[esp-4]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax], edx

; 2032 : }

	ret	0
??$MakeDelegate@VCvGame@@V1@HPBDH@fastdelegate@@YA?AV?$FastDelegate2@HPBDH@0@PAVCvGame@@P82@AEHHPBD@Z@Z ENDP ; fastdelegate::MakeDelegate<CvGame,CvGame,int,char const *,int>
_TEXT	ENDS
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@1@0PAW42@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Ucopy<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> > >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@1@0PAW42@@Z
_TEXT	SEGMENT
$T241654 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$241657 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Ucopy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@1@0PAW42@@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Ucopy<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> > >, COMDAT
; _this$ = ecx

; 1138 : 		pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1139 : 		{	// copy initializing [_First, _Last), using allocator
; 1140 : 		return (_STDEXT unchecked_uninitialized_copy(_First, _Last,
; 1141 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$241657[esp]
	mov	BYTE PTR $T241654[esp+4], 0
	mov	eax, DWORD PTR $T241654[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >

; 1142 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Ucopy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@1@0PAW42@@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Ucopy<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> > >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@@Z ; std::_Destroy_range<std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@@Z PROC ; std::_Destroy_range<std::allocator<enum BeliefTypes> >, COMDAT

; 225  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 226  : 	}

	ret	0
??$_Destroy_range@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@0AAV?$allocator@W4BeliefTypes@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@std@@@Z ; stdext::unchecked_uninitialized_fill_n<enum BeliefTypes *,unsigned int,enum BeliefTypes,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$unchecked_uninitialized_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@std@@@Z
_TEXT	SEGMENT
$T241672 = -4						; size = 1
__Cat$241677 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@std@@@Z PROC ; stdext::unchecked_uninitialized_fill_n<enum BeliefTypes *,unsigned int,enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT

; 940  : 	{	// copy _Count *_Val to raw _First, using _Al

	push	ecx

; 941  : 	_STD _Uninit_fill_n(_First, _Count, _Val, _Al,
; 942  : 		_STD _Ptr_cat(_First, _First), _STD _Range_checked_iterator_tag());

	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T241672[esp+4], 0
	mov	eax, DWORD PTR $T241672[esp+4]
	mov	ecx, DWORD PTR __Cat$241677[esp+4]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Count$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<enum BeliefTypes *,unsigned int,enum BeliefTypes,std::allocator<enum BeliefTypes> >

; 943  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$unchecked_uninitialized_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<enum BeliefTypes *,unsigned int,enum BeliefTypes,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@U_Undefined_move_tag@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes>,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Uninit_move@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@U_Undefined_move_tag@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T241689 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$241693 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@U_Undefined_move_tag@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes>,std::_Undefined_move_tag>, COMDAT

; 206  : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	ecx, DWORD PTR __Cat$241693[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T241689[esp+4], 0
	mov	eax, DWORD PTR $T241689[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >

; 208  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Uninit_move@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@U_Undefined_move_tag@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes>,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ; std::_Unguarded_partition<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z
_TEXT	SEGMENT
__Tmp$241806 = -24					; size = 8
__Tmp$241735 = -16					; size = 8
__Tmp$241761 = -8					; size = 8
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z PROC ; std::_Unguarded_partition<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 3024 : 	{	// partition [_First, _Last), using operator<

	sub	esp, 24					; 00000018H
	push	ebx

; 3025 : 	_RanIt _Mid = _First + (_Last - _First) / 2;	// sort median to _Mid

	mov	ebx, DWORD PTR __First$[esp+24]
	push	ebp
	mov	ebp, DWORD PTR __Last$[esp+28]
	mov	eax, ebp
	sub	eax, ebx
	sar	eax, 3
	cdq
	push	esi
	sub	eax, edx
	push	edi
	sar	eax, 1
	lea	edi, DWORD PTR [ebx+eax*8]

; 3026 : 	std::_Median(_First, _Mid, _Last - 1);

	lea	eax, DWORD PTR [ebp-8]
	push	eax
	push	edi
	push	ebx
	call	??$_Median@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Median<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
	add	esp, 12					; 0000000cH

; 3027 : 	_RanIt _Pfirst = _Mid;

	mov	ecx, edi

; 3028 : 	_RanIt _Plast = _Pfirst + 1;

	lea	esi, DWORD PTR [edi+8]

; 3029 : 
; 3030 : 	while (_First < _Pfirst
; 3031 : 		&& !_DEBUG_LT(*(_Pfirst - 1), *_Pfirst)
; 3032 : 		&& !(*_Pfirst < *(_Pfirst - 1)))

	cmp	ebx, edi
	jae	SHORT $LN99@Unguarded_
$LL27@Unguarded_:
	mov	eax, DWORD PTR [ecx-4]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, eax
	jl	SHORT $LN99@Unguarded_
	jg	SHORT $LN99@Unguarded_

; 3033 : 		--_Pfirst;

	sub	ecx, 8
	cmp	ebx, ecx
	jb	SHORT $LL27@Unguarded_
$LN99@Unguarded_:

; 3034 : 	while (_Plast < _Last
; 3035 : 		&& !_DEBUG_LT(*_Plast, *_Pfirst)
; 3036 : 		&& !(*_Pfirst < *_Plast))

	cmp	esi, ebp
	jae	SHORT $LN24@Unguarded_
	mov	edx, DWORD PTR [ecx+4]
	npad	1
$LL25@Unguarded_:
	mov	eax, DWORD PTR [esi+4]
	cmp	edx, eax
	jl	SHORT $LN24@Unguarded_
	jg	SHORT $LN24@Unguarded_

; 3037 : 		++_Plast;

	add	esi, 8
	cmp	esi, ebp
	jb	SHORT $LL25@Unguarded_
$LN24@Unguarded_:

; 3038 : 
; 3039 : 	_RanIt _Gfirst = _Plast;

	mov	eax, esi

; 3040 : 	_RanIt _Glast = _Pfirst;

	mov	ebx, ecx
$LL23@Unguarded_:

; 3041 : 
; 3042 : 	for (; ; )
; 3043 : 		{	// partition
; 3044 : 		for (; _Gfirst < _Last; ++_Gfirst)

	cmp	eax, DWORD PTR __Last$[esp+36]
	jae	SHORT $LN103@Unguarded_
	npad	6
$LL21@Unguarded_:

; 3045 : 			if (_DEBUG_LT(*_Pfirst, *_Gfirst))

	mov	edx, DWORD PTR [eax+4]
	mov	edi, DWORD PTR [ecx+4]
	cmp	edx, edi
	jl	SHORT $LN20@Unguarded_

; 3046 : 				;
; 3047 : 			else if (*_Gfirst < *_Pfirst)

	jg	SHORT $LN103@Unguarded_

; 3048 : 				break;
; 3049 : 			else
; 3050 : 				std::iter_swap(_Plast++, _Gfirst);

	mov	edx, esi
	add	esi, 8
	cmp	edx, eax
	je	SHORT $LN20@Unguarded_
	mov	ebp, DWORD PTR [edx+4]
	mov	edi, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$241735[esp+44], ebp
	mov	ebp, DWORD PTR [eax]
	mov	DWORD PTR [edx], ebp
	mov	ebp, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ebp
	mov	edx, DWORD PTR __Tmp$241735[esp+44]
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], edx
$LN20@Unguarded_:
	add	eax, 8
	cmp	eax, DWORD PTR __Last$[esp+36]
	jb	SHORT $LL21@Unguarded_
$LN103@Unguarded_:

; 3051 : 		for (; _First < _Glast; --_Glast)

	cmp	ebx, DWORD PTR __First$[esp+36]
	jbe	SHORT $LN115@Unguarded_
	lea	edx, DWORD PTR [ebx-8]
$LL14@Unguarded_:

; 3052 : 			if (_DEBUG_LT(*(_Glast - 1), *_Pfirst))

	mov	edi, DWORD PTR [edx+4]
	mov	ebp, DWORD PTR [ecx+4]
	cmp	ebp, edi
	jl	SHORT $LN13@Unguarded_

; 3053 : 				;
; 3054 : 			else if (*_Pfirst < *(_Glast - 1))

	jg	SHORT $LN111@Unguarded_

; 3055 : 				break;
; 3056 : 			else
; 3057 : 				std::iter_swap(--_Pfirst, _Glast - 1);

	sub	ecx, 8
	cmp	ecx, edx
	je	SHORT $LN13@Unguarded_
	mov	ebp, DWORD PTR [ecx+4]
	mov	edi, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$241761[esp+44], ebp
	mov	ebp, DWORD PTR [edx]
	mov	DWORD PTR [ecx], ebp
	mov	ebp, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], ebp
	mov	DWORD PTR [edx], edi
	mov	edi, DWORD PTR __Tmp$241761[esp+44]
	mov	DWORD PTR [edx+4], edi
$LN13@Unguarded_:
	sub	ebx, 8
	sub	edx, 8
	cmp	DWORD PTR __First$[esp+36], ebx
	jb	SHORT $LL14@Unguarded_
$LN111@Unguarded_:

; 3058 : 		if (_Glast == _First && _Gfirst == _Last)

	cmp	ebx, DWORD PTR __First$[esp+36]
$LN115@Unguarded_:
	jne	SHORT $LN6@Unguarded_
	cmp	eax, DWORD PTR __Last$[esp+36]
	je	$LN105@Unguarded_

; 3060 : 
; 3061 : 		if (_Glast == _First)
; 3062 : 			{	// no room at bottom, rotate pivot upward
; 3063 : 			if (_Plast != _Gfirst)

	cmp	esi, eax
	je	SHORT $LN64@Unguarded_

; 3064 : 				std::iter_swap(_Pfirst, _Plast);

	cmp	ecx, esi
	je	SHORT $LN64@Unguarded_
	mov	ebp, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx]
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx], ebp
	mov	ebp, DWORD PTR [esi+4]
	mov	DWORD PTR [ecx+4], ebp
	mov	DWORD PTR [esi], edx
	mov	DWORD PTR [esi+4], edi
$LN64@Unguarded_:

; 3065 : 			++_Plast;
; 3066 : 			std::iter_swap(_Pfirst++, _Gfirst++);

	mov	edx, eax
	mov	edi, ecx
	add	esi, 8
	add	ecx, 8
	add	eax, 8
	cmp	edi, edx
	je	$LL23@Unguarded_
	mov	ebp, DWORD PTR [edi]
	mov	DWORD PTR __Tmp$241806[esp+40], ebp
	mov	ebp, DWORD PTR [edi+4]
	mov	DWORD PTR __Tmp$241806[esp+44], ebp
	mov	ebp, DWORD PTR [edx]
	mov	DWORD PTR [edi], ebp
	mov	ebp, DWORD PTR [edx+4]
	mov	DWORD PTR [edi+4], ebp
	mov	edi, DWORD PTR __Tmp$241806[esp+40]
	mov	DWORD PTR [edx], edi
	mov	edi, DWORD PTR __Tmp$241806[esp+44]
	mov	DWORD PTR [edx+4], edi
	jmp	$LL23@Unguarded_
$LN6@Unguarded_:

; 3067 : 			}
; 3068 : 		else if (_Gfirst == _Last)
; 3069 : 			{	// no room at top, rotate pivot downward
; 3070 : 			if (--_Glast != --_Pfirst)

	sub	ebx, 8
	cmp	eax, DWORD PTR __Last$[esp+36]
	jne	SHORT $LN3@Unguarded_
	sub	ecx, 8
	cmp	ebx, ecx
	je	SHORT $LN78@Unguarded_

; 3071 : 				std::iter_swap(_Glast, _Pfirst);

	mov	ebp, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ebx]
	mov	edi, DWORD PTR [ebx+4]
	mov	DWORD PTR [ebx], ebp
	mov	ebp, DWORD PTR [ecx+4]
	mov	DWORD PTR [ebx+4], ebp
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], edi
$LN78@Unguarded_:

; 3072 : 			std::iter_swap(_Pfirst, --_Plast);

	sub	esi, 8
	cmp	ecx, esi
	je	$LL23@Unguarded_
	mov	ebp, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx]
	mov	edi, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx], ebp
	mov	ebp, DWORD PTR [esi+4]
	mov	DWORD PTR [ecx+4], ebp
	mov	DWORD PTR [esi], edx
	mov	DWORD PTR [esi+4], edi

; 3073 : 			}
; 3074 : 		else

	jmp	$LL23@Unguarded_
$LN3@Unguarded_:

; 3075 : 			std::iter_swap(_Gfirst++, --_Glast);

	cmp	eax, ebx
	je	SHORT $LN92@Unguarded_
	mov	ebp, DWORD PTR [ebx]
	mov	edx, DWORD PTR [eax]
	mov	edi, DWORD PTR [eax+4]
	mov	DWORD PTR [eax], ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [eax+4], ebp
	mov	DWORD PTR [ebx], edx
	mov	DWORD PTR [ebx+4], edi
$LN92@Unguarded_:
	add	eax, 8

; 3076 : 		}

	jmp	$LL23@Unguarded_
$LN105@Unguarded_:

; 3059 : 			return (pair<_RanIt, _RanIt>(_Pfirst, _Plast));

	mov	eax, DWORD PTR ___$ReturnUdt$[esp+36]
	pop	edi
	mov	DWORD PTR [eax+4], esi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], ecx
	pop	ebx

; 3077 : 	}

	add	esp, 24					; 00000018H
	ret	0
??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ENDP ; std::_Unguarded_partition<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$make_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ; std::make_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Ogtpy
;	COMDAT ??$make_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$make_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z PROC ; std::make_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 2178 : 	_DEBUG_RANGE(_First, _Last);
; 2179 : 	if (1 < _Last - _First)

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, eax
	sub	edx, ecx
	and	edx, -8					; fffffff8H
	cmp	edx, 8
	jle	SHORT $LN1@make_heap

; 2180 : 		_Make_heap(_CHECKED_BASE(_First), _CHECKED_BASE(_Last),
; 2181 : 			_Dist_type(_First), _Val_type(_First));

	push	0
	push	0
	push	eax
	push	ecx
	call	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
	add	esp, 16					; 00000010H
$LN1@make_heap:

; 2182 : 	}

	ret	0
??$make_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ENDP ; std::make_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Insertion_sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ; std::_Insertion_sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Insertion_sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Insertion_sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z PROC ; std::_Insertion_sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 2993 : 	std::_Insertion_sort1(_First, _Last, _Val_type(_First));

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	push	0
	push	eax
	push	ecx
	call	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
	add	esp, 12					; 0000000cH

; 2994 : 	}

	ret	0
??$_Insertion_sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ENDP ; std::_Insertion_sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@U_Undefined_move_tag@3@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes>,std::_Undefined_move_tag>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@U_Undefined_move_tag@3@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T241916 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$241919 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@U_Undefined_move_tag@3@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes>,std::_Undefined_move_tag>, COMDAT

; 206  : 	{	// move defaults to copy if there is not a more effecient way

	push	ecx

; 207  : 	return (_STDEXT unchecked_uninitialized_copy(_First, _Last, _Dest, _Al));

	mov	ecx, DWORD PTR __Cat$241919[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T241916[esp+4], 0
	mov	eax, DWORD PTR $T241916[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >

; 208  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Uninit_move@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@U_Undefined_move_tag@3@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes>,std::_Undefined_move_tag>
_TEXT	ENDS
PUBLIC	??$pop_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ; std::pop_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$pop_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$pop_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z PROC ; std::pop_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 2095 : 	_DEBUG_RANGE(_First, _Last);
; 2096 : 	_DEBUG_HEAP(_First, _Last);
; 2097 : 	if (1 < _Last - _First)

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	push	ebx
	mov	edx, eax
	push	esi
	sub	edx, ecx
	mov	esi, edx
	and	esi, -8					; fffffff8H
	cmp	esi, 8
	push	edi
	jle	SHORT $LN12@pop_heap

; 2098 : 		_Pop_heap_0(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Val_type(_First));

	mov	ebx, DWORD PTR [ecx]
	mov	esi, DWORD PTR [eax-8]
	mov	edi, DWORD PTR [eax-4]
	mov	DWORD PTR [eax-8], ebx
	mov	ebx, DWORD PTR [ecx+4]
	sub	esp, 8
	mov	DWORD PTR [eax-4], ebx
	mov	eax, esp
	add	edx, -8					; fffffff8H
	sar	edx, 3
	push	edx
	push	0
	push	ecx
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [eax+4], edi
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
	add	esp, 20					; 00000014H
$LN12@pop_heap:

; 2099 : 	}

	pop	edi
	pop	esi
	pop	ebx
	ret	0
??$pop_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ENDP ; std::pop_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??0CvGameReligions@@QAE@XZ			; CvGameReligions::CvGameReligions
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
;	COMDAT ??0CvGameReligions@@QAE@XZ
_TEXT	SEGMENT
??0CvGameReligions@@QAE@XZ PROC				; CvGameReligions::CvGameReligions, COMDAT
; _this$ = ecx

; 288  : {

	mov	eax, ecx
	xor	edx, edx
	lea	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], 16			; 00000010H
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+5264], edx

; 289  : }

	ret	0
??0CvGameReligions@@QAE@XZ ENDP				; CvGameReligions::CvGameReligions
_TEXT	ENDS
PUBLIC	??1CvGameReligions@@QAE@XZ			; CvGameReligions::~CvGameReligions
; Function compile flags: /Ogtpy
;	COMDAT ??1CvGameReligions@@QAE@XZ
_TEXT	SEGMENT
??1CvGameReligions@@QAE@XZ PROC				; CvGameReligions::~CvGameReligions, COMDAT
; _this$ = ecx

; 294  : 
; 295  : }

	mov	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [ecx]
	push	eax
	push	edx
	call	?Free@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXPAVCvReligion@@I@Z ; FStaticVector<CvReligion,16,0,297,0>::Free
	ret	0
??1CvGameReligions@@QAE@XZ ENDP				; CvGameReligions::~CvGameReligions
_TEXT	ENDS
PUBLIC	?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z ; CvGameReligions::CheckSpawnGreatProphet
EXTRN	?ChangeFaith@CvPlayer@@QAEXH@Z:PROC		; CvPlayer::ChangeFaith
EXTRN	?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z:PROC ; CvCityCitizens::DoSpawnGreatPerson
EXTRN	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ:PROC ; CvCity::GetCityCitizens
EXTRN	?getJonRandNum@CvGame@@QAEHHPBD@Z:PROC		; CvGame::getJonRandNum
EXTRN	?getCivilizationUnits@CvCivilizationInfo@@QBEHH@Z:PROC ; CvCivilizationInfo::getCivilizationUnits
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z$1
__ehfuncinfo$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z
_TEXT	SEGMENT
_this$ = -76						; size = 4
_eUnit$ = -72						; size = 4
_strLogMsg$226271 = -68					; size = 28
$T242003 = -40						; size = 28
__$EHRec$ = -12						; size = 12
$T242137 = 8						; size = 4
_iFaith$ = 8						; size = 4
_kPlayer$ = 8						; size = 4
?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z PROC ; CvGameReligions::CheckSpawnGreatProphet, COMDAT
; _this$ = ecx

; 2464 : {

	push	-1
	push	__ehhandler$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 64					; 00000040H
	push	esi
	push	edi

; 2465 : #ifdef LEK_UNIQUE_FAITH_UNIT_FIX
; 2466 : 	UnitClassTypes eUnitClass = (UnitClassTypes) GC.getInfoTypeForString("UNITCLASS_PROPHET", true);

	push	1
	mov	DWORD PTR _this$[esp+88], ecx
	push	OFFSET $SG226248
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString

; 2467 : 	UnitTypes eUnit = (UnitTypes) kPlayer.getCivilizationInfo().getCivilizationUnits(eUnitClass);

	mov	edi, DWORD PTR _kPlayer$[esp+80]
	mov	esi, eax
	push	esi
	mov	ecx, edi
	call	?getCivilizationInfo@CvPlayer@@QBEAAVCvCivilizationInfo@@XZ ; CvPlayer::getCivilizationInfo
	mov	ecx, eax
	call	?getCivilizationUnits@CvCivilizationInfo@@QBEHH@Z ; CvCivilizationInfo::getCivilizationUnits
	mov	DWORD PTR _eUnit$[esp+84], eax

; 2468 : #else
; 2469 : 	UnitTypes eUnit = (UnitTypes)GC.getInfoTypeForString("UNIT_PROPHET", true);
; 2470 : #endif
; 2471 : 
; 2472 : 
; 2473 : #ifdef LEK_UNIQUE_FAITH_UNIT_FIX
; 2474 : 	
; 2475 : 	if (eUnitClass == NO_UNITCLASS)

	cmp	esi, -1
	jne	SHORT $LN12@CheckSpawn
$LN95@CheckSpawn:
	pop	edi

; 2476 :     {
; 2477 :         return false;

	xor	al, al
	pop	esi

; 2562 : 
; 2563 : 	return true;
; 2564 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+76]
	mov	DWORD PTR fs:0, ecx
	add	esp, 76					; 0000004cH
	ret	4
$LN12@CheckSpawn:

; 2478 :     }
; 2479 : #endif
; 2480 : 	if (eUnit == NO_UNIT)

	cmp	eax, -1

; 2481 : 	{
; 2482 : 		return false;

	je	SHORT $LN95@CheckSpawn
	push	ebx
	push	ebp

; 2483 : 	}
; 2484 : 
; 2485 : 	const CvReligion* pReligion = NULL;
; 2486 : 	const int iFaith = kPlayer.GetFaith();

	mov	ecx, edi
	xor	ebp, ebp
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith

; 2487 : 	int iCost = kPlayer.GetReligions()->GetCostNextProphet(true /*bIncludeBeliefDiscounts*/, true /*bAdjustForSpeedDifficulty*/);

	push	1
	push	1
	mov	ecx, edi
	mov	DWORD PTR _iFaith$[esp+96], eax
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?GetCostNextProphet@CvPlayerReligions@@QBEH_N0@Z ; CvPlayerReligions::GetCostNextProphet

; 2488 : 
; 2489 : 	ReligionTypes ePlayerReligion = GetReligionCreatedByPlayer(kPlayer.GetID());

	mov	esi, DWORD PTR [edi+44]
	mov	ecx, DWORD PTR _this$[esp+92]
	push	esi
	mov	ebx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer

; 2490 : 	if(ePlayerReligion > RELIGION_PANTHEON)
; 2491 : 	{
; 2492 : 		pReligion = GetReligion(ePlayerReligion, kPlayer.GetID());

	mov	ecx, DWORD PTR _this$[esp+92]
	test	eax, eax
	jle	SHORT $LN10@CheckSpawn
	push	esi
	push	eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	mov	ebp, eax
	jmp	SHORT $LN8@CheckSpawn
$LN10@CheckSpawn:

; 2493 : 	}
; 2494 : 
; 2495 : 	// If player hasn't founded a religion yet, drop out of this if all religions have been founded
; 2496 : 	else if(GetNumReligionsStillToFound() <= 0)

	call	?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsStillToFound
	test	eax, eax

; 2497 : 	{
; 2498 : 		return false;

	jle	SHORT $LN94@CheckSpawn
$LN8@CheckSpawn:

; 2499 : 	}
; 2500 : 
; 2501 : 	if(iFaith < iCost)

	mov	eax, DWORD PTR _iFaith$[esp+88]
	cmp	eax, ebx

; 2502 : 	{
; 2503 : 		return false;

	jl	SHORT $LN94@CheckSpawn

; 2504 : 	}
; 2505 : 
; 2506 : 	int iChance = GC.getRELIGION_BASE_CHANCE_PROPHET_SPAWN();
; 2507 : 	iChance += (iFaith - iCost);

	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7884

; 2508 : 
; 2509 : 	int iRand = GC.getGame().getJonRandNum(100, "Religion: spawn Great Prophet roll.");

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	OFFSET $SG226263
	sub	esi, ebx
	push	100					; 00000064H
	add	esi, eax
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum

; 2510 : 	if(iRand >= iChance)

	cmp	eax, esi
	jl	SHORT $LN6@CheckSpawn
$LN94@CheckSpawn:
	pop	ebp
	pop	ebx
	pop	edi

; 2511 : 	{
; 2512 : 		return false;

	xor	al, al
	pop	esi

; 2562 : 
; 2563 : 	return true;
; 2564 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+76]
	mov	DWORD PTR fs:0, ecx
	add	esp, 76					; 0000004cH
	ret	4
$LN6@CheckSpawn:

; 2513 : 	}
; 2514 : 
; 2515 : 	CvCity* pSpawnCity = NULL;
; 2516 : 	if(pReligion)

	test	ebp, ebp
	je	$LN4@CheckSpawn

; 2517 : 	{
; 2518 : 		pSpawnCity = GC.getMap().plot(pReligion->m_iHolyCityX, pReligion->m_iHolyCityY)->getPlotCity();

	mov	eax, DWORD PTR [ebp+8]
	mov	ecx, DWORD PTR [ebp+12]
	mov	DWORD PTR $T242137[esp+88], ecx
	cmp	eax, -2147483647			; 80000001H
	je	$LN31@CheckSpawn
	cmp	ecx, -2147483647			; 80000001H
	je	$LN31@CheckSpawn
	mov	esi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	dl, BYTE PTR [esi+4056]
	mov	ecx, DWORD PTR [esi+4020]
	test	dl, dl
	je	SHORT $LN87@CheckSpawn
	test	eax, eax
	jge	SHORT $LN43@CheckSpawn
	cdq
	idiv	ecx
	mov	ebp, edx
	add	ebp, ecx
	jmp	SHORT $LN45@CheckSpawn
$LN43@CheckSpawn:
	cmp	eax, ecx
	jl	SHORT $LN87@CheckSpawn
	cdq
	idiv	ecx
	mov	ebp, edx
	jmp	SHORT $LN45@CheckSpawn
$LN87@CheckSpawn:
	mov	ebp, eax
$LN45@CheckSpawn:
	mov	al, BYTE PTR [esi+4057]
	mov	esi, DWORD PTR [esi+4024]
	test	al, al
	mov	eax, DWORD PTR $T242137[esp+88]
	je	SHORT $LN51@CheckSpawn
	test	eax, eax
	jge	SHORT $LN53@CheckSpawn
	cdq
	idiv	esi
	add	edx, esi
	jmp	SHORT $LN55@CheckSpawn
$LN53@CheckSpawn:
	cmp	eax, esi
	jl	SHORT $LN51@CheckSpawn
	cdq
	idiv	esi
	jmp	SHORT $LN55@CheckSpawn
$LN51@CheckSpawn:
	mov	edx, eax
$LN55@CheckSpawn:
	test	ebp, ebp
	jl	SHORT $LN31@CheckSpawn
	cmp	ebp, ecx
	jge	SHORT $LN31@CheckSpawn
	test	edx, edx
	jl	SHORT $LN31@CheckSpawn
	cmp	edx, esi
	jge	SHORT $LN31@CheckSpawn
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	imul	ecx, edx
	add	ecx, ebp
	imul	ecx, 484				; 000001e4H
	add	ecx, DWORD PTR [eax+4068]
	jmp	SHORT $LN33@CheckSpawn
$LN31@CheckSpawn:
	xor	ecx, ecx
$LN33@CheckSpawn:
	call	?getPlotCity@CvPlot@@QBEPAVCvCity@@XZ	; CvPlot::getPlotCity
	mov	esi, eax

; 2519 : 	}
; 2520 : 
; 2521 : 	if(pSpawnCity != NULL && pSpawnCity->getOwner() == kPlayer.GetID())

	test	esi, esi
	je	SHORT $LN4@CheckSpawn
	mov	eax, DWORD PTR [esi+84]
	cmp	eax, DWORD PTR [edi+44]
	jne	SHORT $LN4@CheckSpawn

; 2522 : 	{
; 2523 : #ifdef LEK_UNIQUE_FAITH_UNIT_FIX
; 2524 : 		pSpawnCity->GetCityCitizens()->DoSpawnGreatPerson(eUnit, false /*bIncrementCount*/, true);

	mov	ecx, DWORD PTR _eUnit$[esp+92]
	push	1
	push	0
	push	ecx

; 2525 : #else
; 2526 : 		pSpawnCity->GetCityCitizens()->DoSpawnGreatPerson(eUnit, false /*bIncrementCount*/, true);
; 2527 : #endif
; 2528 : #ifdef NQ_SPAWN_PROPHETS_REMOVE_ONLY_REQUIRED_FAITH
; 2529 : 		kPlayer.ChangeFaith(-iCost);
; 2530 : #else
; 2531 : 		kPlayer.SetFaith(0);
; 2532 : #endif
; 2533 : 	}
; 2534 : 	else

	jmp	SHORT $LN93@CheckSpawn
$LN4@CheckSpawn:

; 2535 : 	{
; 2536 : 		pSpawnCity = kPlayer.getCapitalCity();

	mov	ecx, edi
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	esi, eax

; 2537 : 		if(pSpawnCity != NULL)

	test	esi, esi
	je	SHORT $LN88@CheckSpawn

; 2538 : 		{
; 2539 : #ifdef LEK_UNIQUE_FAITH_UNIT_FIX
; 2540 : 		pSpawnCity->GetCityCitizens()->DoSpawnGreatPerson(eUnit, false /*bIncrementCount*/, true);

	mov	edx, DWORD PTR _eUnit$[esp+92]
	push	1
	push	0
	push	edx
$LN93@CheckSpawn:
	mov	ecx, esi
	call	?GetCityCitizens@CvCity@@QBEPAVCvCityCitizens@@XZ ; CvCity::GetCityCitizens
	mov	ecx, eax
	call	?DoSpawnGreatPerson@CvCityCitizens@@QAEXW4UnitTypes@@_N1@Z ; CvCityCitizens::DoSpawnGreatPerson

; 2541 : #else
; 2542 : 		pSpawnCity->GetCityCitizens()->DoSpawnGreatPerson(eUnit, false /*bIncrementCount*/, true);
; 2543 : #endif
; 2544 : #ifdef NQ_SPAWN_PROPHETS_REMOVE_ONLY_REQUIRED_FAITH
; 2545 : 			kPlayer.ChangeFaith(-iCost);

	neg	ebx
	push	ebx
	mov	ecx, edi
	call	?ChangeFaith@CvPlayer@@QAEXH@Z		; CvPlayer::ChangeFaith
$LN88@CheckSpawn:

; 2546 : #else
; 2547 : 			kPlayer.SetFaith(0);
; 2548 : #endif
; 2549 : 		}
; 2550 : 	}
; 2551 : 
; 2552 : 	// Logging
; 2553 : 	if(GC.getLogging() && pSpawnCity)

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	$LN1@CheckSpawn
	test	esi, esi
	je	$LN1@CheckSpawn

; 2554 : 	{
; 2555 : 		CvString strLogMsg;

	lea	ecx, DWORD PTR _strLogMsg$226271[esp+92]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2556 : 		strLogMsg = kPlayer.getCivilizationShortDescription();

	mov	ecx, edi
	mov	DWORD PTR __$EHRec$[esp+100], 0
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	push	eax
	lea	ecx, DWORD PTR _strLogMsg$226271[esp+96]
	call	??4CvString@@QAEAAV0@PBD@Z		; CvString::operator=

; 2557 : 		strLogMsg += ", PROPHET SPAWNED, ";

	push	OFFSET $SG226272
	lea	ecx, DWORD PTR _strLogMsg$226271[esp+96]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 2558 : 		strLogMsg += pSpawnCity->getName();

	lea	eax, DWORD PTR $T242003[esp+92]
	push	eax
	mov	ecx, esi
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	push	eax
	lea	ecx, DWORD PTR _strLogMsg$226271[esp+96]
	mov	BYTE PTR __$EHRec$[esp+104], 1
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T242003[esp+92]
	mov	BYTE PTR __$EHRec$[esp+100], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 2559 : 		strLogMsg += ", Faith: 0";

	push	OFFSET $SG226274
	lea	ecx, DWORD PTR _strLogMsg$226271[esp+96]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 2560 : 		LogReligionMessage(strLogMsg);

	lea	ecx, DWORD PTR _strLogMsg$226271[esp+92]
	push	ecx
	mov	ecx, DWORD PTR _this$[esp+96]
	call	?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z ; CvGameReligions::LogReligionMessage

; 2561 : 	}

	lea	ecx, DWORD PTR _strLogMsg$226271[esp+92]
	mov	DWORD PTR __$EHRec$[esp+100], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@CheckSpawn:

; 2562 : 
; 2563 : 	return true;
; 2564 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+92]
	pop	ebp
	pop	ebx
	pop	edi
	mov	al, 1
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 76					; 0000004cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z$0:
	lea	ecx, DWORD PTR _strLogMsg$226271[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z$1:
	lea	ecx, DWORD PTR $T242003[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z ENDP ; CvGameReligions::CheckSpawnGreatProphet
PUBLIC	?Copy@CvCityReligions@@QAEXPAV1@@Z		; CvCityReligions::Copy
; Function compile flags: /Ogtpy
;	COMDAT ?Copy@CvCityReligions@@QAEXPAV1@@Z
_TEXT	SEGMENT
_pOldCity$ = 8						; size = 4
?Copy@CvCityReligions@@QAEXPAV1@@Z PROC			; CvCityReligions::Copy, COMDAT
; _this$ = ecx

; 3139 : {

	push	ebp

; 3140 : 	m_ReligionStatus.clear();
; 3141 : 
; 3142 : 	SetPaidAdoptionBonus(pOldCity->HasPaidAdoptionBonus());

	mov	ebp, DWORD PTR _pOldCity$[esp]
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi+4], 0
	mov	al, BYTE PTR [ebp+420]
	mov	BYTE PTR [esi+420], al

; 3143 : 	SetReligiousPressureModifier(pOldCity->GetReligiousPressureModifier());

	mov	ecx, DWORD PTR [ebp+424]
	mov	DWORD PTR [esi+424], ecx

; 3144 : 
; 3145 : 	ReligionInCityList::iterator religionIt;
; 3146 : 	for(religionIt = pOldCity->m_ReligionStatus.begin(); religionIt != pOldCity->m_ReligionStatus.end(); ++religionIt)

	mov	eax, DWORD PTR [ebp+4]
	push	edi
	mov	edi, DWORD PTR [ebp]
	lea	edx, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [edi+edx*8]
	cmp	edi, eax
	je	SHORT $LN1@Copy
	npad	8
$LL3@Copy:

; 3147 : 	{
; 3148 : 		m_ReligionStatus.push_back(*religionIt);

	mov	eax, DWORD PTR [esi+8]
	mov	BYTE PTR [esi+204], 0
	cmp	DWORD PTR [esi+4], eax
	jne	SHORT $LN26@Copy
	push	eax
	mov	ecx, esi
	call	?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize
$LN26@Copy:
	mov	eax, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi]
	lea	ecx, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [edx+ecx*8]
	test	eax, eax
	je	SHORT $LN29@Copy
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [edi+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [edi+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [edi+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR [edi+20]
	mov	DWORD PTR [eax+20], edx
$LN29@Copy:
	inc	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [ebp+4]
	mov	ecx, DWORD PTR [ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	add	edi, 24					; 00000018H
	lea	edx, DWORD PTR [ecx+eax*8]
	cmp	edi, edx
	jne	SHORT $LL3@Copy
$LN1@Copy:
	pop	edi
	pop	esi
	pop	ebp

; 3149 : 	}
; 3150 : }

	ret	4
?Copy@CvCityReligions@@QAEXPAV1@@Z ENDP			; CvCityReligions::Copy
_TEXT	ENDS
PUBLIC	?AdoptReligionFully@CvCityReligions@@QAEXW4ReligionTypes@@@Z ; CvCityReligions::AdoptReligionFully
; Function compile flags: /Ogtpy
;	COMDAT ?AdoptReligionFully@CvCityReligions@@QAEXW4ReligionTypes@@@Z
_TEXT	SEGMENT
_religion$ = -24					; size = 24
_eReligion$ = 8						; size = 4
?AdoptReligionFully@CvCityReligions@@QAEXW4ReligionTypes@@@Z PROC ; CvCityReligions::AdoptReligionFully, COMDAT
; _this$ = ecx

; 4086 : {

	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	mov	esi, ecx

; 4087 : 	m_ReligionStatus.clear();

	xor	ebx, ebx
	push	edi

; 4088 : 
; 4089 : 	CvReligionInCity religion;
; 4090 : 
; 4091 : 	// Add 1 pop of Atheism (needed in case other religions wiped out by an Inquisitor/Prophet
; 4092 : 	religion.m_bFoundedHere = false;
; 4093 : 	religion.m_eReligion = NO_RELIGION;
; 4094 : 	religion.m_iFollowers = 1;
; 4095 : 	religion.m_iPressure = religion.m_iFollowers * GC.getRELIGION_ATHEISM_PRESSURE_PER_POP();
; 4096 : 	m_ReligionStatus.push_back(religion);

	lea	ecx, DWORD PTR _religion$[esp+36]
	mov	DWORD PTR [esi+4], ebx
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7888
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR _religion$[esp+56], ebx
	mov	DWORD PTR _religion$[esp+60], ebx
	mov	BYTE PTR _religion$[esp+44], bl
	mov	DWORD PTR _religion$[esp+40], -1
	mov	DWORD PTR _religion$[esp+48], 1
	mov	DWORD PTR _religion$[esp+52], eax
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back

; 4097 : 
; 4098 : 	// Now add full pop of this religion
; 4099 : 	religion.m_bFoundedHere = false;
; 4100 : 	religion.m_eReligion = eReligion;

	mov	edi, DWORD PTR _eReligion$[esp+32]

; 4101 : 	religion.m_iFollowers = m_pCity->getPopulation();

	mov	ecx, DWORD PTR [esi+416]
	mov	BYTE PTR _religion$[esp+40], bl
	mov	DWORD PTR _religion$[esp+36], edi
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation

; 4102 : 	religion.m_iPressure = religion.m_iFollowers * GC.getRELIGION_ATHEISM_PRESSURE_PER_POP();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7888
	imul	edx, eax
	mov	DWORD PTR _religion$[esp+44], eax

; 4103 : 	m_ReligionStatus.push_back(religion);

	lea	eax, DWORD PTR _religion$[esp+36]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR _religion$[esp+52], edx
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back

; 4104 : 
; 4105 : 	m_pCity->UpdateReligion(eReligion);

	mov	ecx, DWORD PTR [esi+416]
	push	edi
	call	?UpdateReligion@CvCity@@QAEXW4ReligionTypes@@@Z ; CvCity::UpdateReligion
	pop	edi
	pop	esi
	pop	ebx

; 4106 : }

	add	esp, 24					; 00000018H
	ret	4
?AdoptReligionFully@CvCityReligions@@QAEXW4ReligionTypes@@@Z ENDP ; CvCityReligions::AdoptReligionFully
_TEXT	ENDS
PUBLIC	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers
; Function compile flags: /Ogtpy
;	COMDAT ?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_eMostFollowers$242356 = -44				; size = 4
_iOldFollowers$ = -40					; size = 4
_iTotalFollowers$242353 = -36				; size = 4
tv465 = -32						; size = 4
tv454 = -28						; size = 4
_religion$227107 = -24					; size = 24
_eReason$ = 8						; size = 4
_eOldMajorityReligion$ = 12				; size = 4
_eResponsibleParty$ = 16				; size = 4
?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvCityReligions::RecomputeFollowers, COMDAT
; _this$ = ecx

; 4290 : {

	sub	esp, 44					; 0000002cH
	push	ebx
	push	esi
	mov	esi, ecx

; 4291 : 	int iOldFollowers = GetNumFollowers(eOldMajorityReligion);

	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	edx, DWORD PTR [eax+ecx*8]
	cmp	eax, edx
	je	SHORT $LN101@RecomputeF
	npad	10
$LL24@RecomputeF:
	mov	ecx, DWORD PTR _eOldMajorityReligion$[esp+48]
	cmp	DWORD PTR [eax], ecx
	je	$LN90@RecomputeF
	mov	ecx, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [ecx+ecx*2]
	mov	ecx, DWORD PTR [esi]
	add	eax, 24					; 00000018H
	lea	edx, DWORD PTR [ecx+edx*8]
	cmp	eax, edx
	jne	SHORT $LL24@RecomputeF
$LN101@RecomputeF:
	mov	DWORD PTR _iOldFollowers$[esp+52], 0
$LN25@RecomputeF:

; 4292 : 	int iUnassignedFollowers = m_pCity->getPopulation();

	mov	ecx, DWORD PTR [esi+416]
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	mov	ebx, eax

; 4293 : 	int iPressurePerFollower;
; 4294 : 
; 4295 : 	// Safety check to avoid divide by zero
; 4296 : 	if (iUnassignedFollowers < 1)

	cmp	ebx, 1
	jl	$LN2@RecomputeF

; 4297 : 	{
; 4298 : 		CvAssertMsg (false, "Invalid city population when recomputing followers");
; 4299 : 		return;
; 4300 : 	}
; 4301 : 
; 4302 : 	// Find total pressure
; 4303 : 	int iTotalPressure = 0;
; 4304 : 	ReligionInCityList::iterator it;
; 4305 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4306 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4307 : #else
; 4308 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	edx, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	push	ebp
	lea	edx, DWORD PTR [edx+edx*2]
	push	edi
	lea	edx, DWORD PTR [ecx+edx*8]
	xor	edi, edi
	xor	eax, eax
	cmp	ecx, edx
	je	SHORT $LN100@RecomputeF
	mov	edx, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [edx+edx*2]

; 4309 : #endif
; 4310 : 	{
; 4311 : 		iTotalPressure += it->m_iPressure;

	mov	ebp, ecx
	lea	edx, DWORD PTR [ebp+edx*8]
	npad	3
$LL17@RecomputeF:
	add	eax, DWORD PTR [ecx+12]
	add	ecx, 24					; 00000018H
	cmp	ecx, edx
	jne	SHORT $LL17@RecomputeF

; 4312 : 	}
; 4313 : 
; 4314 : 	// safety check - if pressure was wiped out somehow, just rebuild pressure of 1 atheist
; 4315 : 	if (iTotalPressure <= 0)

	cmp	eax, edi
	jg	SHORT $LN102@RecomputeF
$LN100@RecomputeF:

; 4316 : 	{
; 4317 : 		m_ReligionStatus.clear();
; 4318 : 
; 4319 : 		CvReligionInCity religion;
; 4320 : 		religion.m_bFoundedHere = false;
; 4321 : 		religion.m_eReligion = NO_RELIGION;
; 4322 : 		religion.m_iFollowers = 1;
; 4323 : 		religion.m_iPressure = GC.getRELIGION_ATHEISM_PRESSURE_PER_POP();
; 4324 : 		m_ReligionStatus.push_back(religion);

	lea	ecx, DWORD PTR _religion$227107[esp+60]
	mov	DWORD PTR [esi+4], edi
	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7888
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR _religion$227107[esp+80], edi
	mov	DWORD PTR _religion$227107[esp+84], edi
	mov	BYTE PTR _religion$227107[esp+68], 0
	mov	DWORD PTR _religion$227107[esp+64], -1
	mov	DWORD PTR _religion$227107[esp+72], 1
	mov	DWORD PTR _religion$227107[esp+76], eax
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back

; 4325 : 
; 4326 : 		iTotalPressure = GC.getRELIGION_ATHEISM_PRESSURE_PER_POP();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7888
$LN102@RecomputeF:

; 4327 : 	}
; 4328 : 
; 4329 : 	iPressurePerFollower = iTotalPressure / iUnassignedFollowers;

	cdq
	idiv	ebx

; 4330 : 
; 4331 : 	// Loop through each religion
; 4332 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4333 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4334 : #else
; 4335 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	ecx, DWORD PTR [esi]
	mov	ebp, eax
	mov	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+edx*8]
	cmp	ecx, eax
	je	SHORT $LN11@RecomputeF
	npad	4
$LL13@RecomputeF:

; 4336 : #endif
; 4337 : 	{
; 4338 : 		it->m_iFollowers = it->m_iPressure / iPressurePerFollower;

	mov	edi, DWORD PTR [ecx+12]
	mov	eax, edi
	cdq
	idiv	ebp
	add	ecx, 24					; 00000018H
	mov	DWORD PTR [ecx-16], eax

; 4339 : 		iUnassignedFollowers -= it->m_iFollowers;

	sub	ebx, eax

; 4340 : 		it->m_iTemp = it->m_iPressure - (it->m_iFollowers * iPressurePerFollower);  // Remainder

	imul	eax, ebp
	sub	edi, eax
	mov	DWORD PTR [ecx-4], edi
	mov	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR [esi]
	lea	edx, DWORD PTR [eax+edx*8]
	cmp	ecx, edx
	jne	SHORT $LL13@RecomputeF
$LN11@RecomputeF:

; 4341 : 	}
; 4342 : 
; 4343 : 	// Assign out the remainder
; 4344 : 	for (int iI = 0; iI < iUnassignedFollowers; iI++)

	test	ebx, ebx
	jle	SHORT $LN8@RecomputeF
	npad	5
$LL103@RecomputeF:

; 4345 : 	{
; 4346 : 		ReligionInCityList::iterator itLargestRemainder = NULL;
; 4347 : 		int iLargestRemainder = 0;
; 4348 : 
; 4349 : #ifdef AUI_WARNING_FIXES
; 4350 : 		for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end() && it; ++it)
; 4351 : #else
; 4352 : 		for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	ecx, DWORD PTR [eax+ecx*8]
	xor	edi, edi
	xor	edx, edx
	cmp	eax, ecx
	je	SHORT $LN9@RecomputeF
	mov	ecx, DWORD PTR [esi+4]
	lea	ecx, DWORD PTR [ecx+ecx*2]

; 4353 : #endif
; 4354 : 		{
; 4355 : 			if (it->m_iTemp > iLargestRemainder)

	mov	ebp, eax
	lea	ebp, DWORD PTR [ebp+ecx*8]
	npad	1
$LL7@RecomputeF:
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, edx
	jle	SHORT $LN6@RecomputeF

; 4356 : 			{
; 4357 : 				iLargestRemainder = it->m_iTemp;

	mov	edx, ecx

; 4358 : 				itLargestRemainder = it;

	mov	edi, eax
$LN6@RecomputeF:
	add	eax, 24					; 00000018H
	cmp	eax, ebp
	jne	SHORT $LL7@RecomputeF

; 4359 : 			}
; 4360 : 		}
; 4361 : 
; 4362 : 		if (itLargestRemainder && iLargestRemainder > 0)

	test	edi, edi
	je	SHORT $LN9@RecomputeF
	test	edx, edx
	jle	SHORT $LN9@RecomputeF

; 4363 : 		{
; 4364 : 			itLargestRemainder->m_iFollowers++;

	inc	DWORD PTR [edi+8]

; 4365 : 			itLargestRemainder->m_iTemp = 0;

	mov	DWORD PTR [edi+20], 0
$LN9@RecomputeF:

; 4341 : 	}
; 4342 : 
; 4343 : 	// Assign out the remainder
; 4344 : 	for (int iI = 0; iI < iUnassignedFollowers; iI++)

	sub	ebx, 1
	jne	SHORT $LL103@RecomputeF
$LN8@RecomputeF:

; 4366 : 		}
; 4367 : 	}
; 4368 : 
; 4369 : 	ReligionTypes eMajority = GetReligiousMajority();

	mov	ecx, DWORD PTR [esi+4]
	mov	edi, DWORD PTR [esi]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	ecx, DWORD PTR [edi+ecx*8]
	xor	ebp, ebp
	or	edx, -1
	mov	eax, edi
	xor	ebx, ebx
	mov	DWORD PTR _iTotalFollowers$242353[esp+60], ebp
	mov	DWORD PTR _eMostFollowers$242356[esp+60], edx
	mov	DWORD PTR tv454[esp+60], ecx
	cmp	eax, ecx
	je	SHORT $LN61@RecomputeF
	mov	ecx, DWORD PTR [esi+4]
	mov	ebp, edi
	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	ecx, DWORD PTR [ebp+ecx*8]
	mov	ebp, DWORD PTR _iTotalFollowers$242353[esp+60]
	mov	DWORD PTR tv465[esp+60], ecx
$LL63@RecomputeF:
	mov	ecx, DWORD PTR [eax+8]
	add	ebp, ecx
	cmp	ecx, edx
	jg	SHORT $LN59@RecomputeF
	jne	SHORT $LN62@RecomputeF
	cmp	DWORD PTR [eax+12], ebx
	jle	SHORT $LN62@RecomputeF
$LN59@RecomputeF:
	mov	ebx, DWORD PTR [eax+12]
	mov	edx, ecx
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _eMostFollowers$242356[esp+60], ecx
$LN62@RecomputeF:
	add	eax, 24					; 00000018H
	cmp	eax, DWORD PTR tv465[esp+60]
	jne	SHORT $LL63@RecomputeF
	mov	ecx, DWORD PTR tv454[esp+60]
$LN61@RecomputeF:
	add	edx, edx
	cmp	edx, ebp
	jl	SHORT $LN58@RecomputeF
	mov	edx, DWORD PTR _eMostFollowers$242356[esp+60]
	jmp	SHORT $LN57@RecomputeF
$LN90@RecomputeF:

; 4291 : 	int iOldFollowers = GetNumFollowers(eOldMajorityReligion);

	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _iOldFollowers$[esp+52], eax
	jmp	$LN25@RecomputeF

; 4366 : 		}
; 4367 : 	}
; 4368 : 
; 4369 : 	ReligionTypes eMajority = GetReligiousMajority();

$LN58@RecomputeF:
	or	edx, -1
$LN57@RecomputeF:

; 4370 : 	int iFollowers = GetNumFollowers(eMajority);

	mov	eax, edi
	cmp	eax, ecx
	je	SHORT $LN71@RecomputeF
	npad	6
$LL73@RecomputeF:
	cmp	DWORD PTR [eax], edx
	je	SHORT $LN91@RecomputeF
	mov	ecx, DWORD PTR [esi+4]
	mov	edi, DWORD PTR [esi]
	lea	ecx, DWORD PTR [ecx+ecx*2]
	add	eax, 24					; 00000018H
	lea	ecx, DWORD PTR [edi+ecx*8]
	cmp	eax, ecx
	jne	SHORT $LL73@RecomputeF
$LN71@RecomputeF:
	xor	eax, eax
$LN74@RecomputeF:

; 4371 : 
; 4372 : 	if(eMajority != eOldMajorityReligion || iFollowers != iOldFollowers)

	mov	ecx, DWORD PTR _eOldMajorityReligion$[esp+56]
	pop	edi
	pop	ebp
	cmp	edx, ecx
	jne	SHORT $LN1@RecomputeF
	cmp	eax, DWORD PTR _iOldFollowers$[esp+52]
	je	SHORT $LN2@RecomputeF
$LN1@RecomputeF:

; 4373 : 	{
; 4374 : 		CityConvertsReligion(eMajority, eOldMajorityReligion, eResponsibleParty);

	mov	eax, DWORD PTR _eResponsibleParty$[esp+48]
	push	eax
	push	ecx
	push	edx
	mov	ecx, esi
	call	?CityConvertsReligion@CvCityReligions@@AAEXW4ReligionTypes@@0W4PlayerTypes@@@Z ; CvCityReligions::CityConvertsReligion

; 4375 : 		GC.GetEngineUserInterface()->setDirty(CityInfo_DIRTY_BIT, true);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8600
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+260]
	push	1
	push	18					; 00000012H
	call	eax

; 4376 : 		LogFollowersChange(eReason);

	mov	ecx, DWORD PTR _eReason$[esp+48]
	push	ecx
	mov	ecx, esi
	call	?LogFollowersChange@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@@Z ; CvCityReligions::LogFollowersChange
$LN2@RecomputeF:
	pop	esi
	pop	ebx

; 4377 : 	}
; 4378 : }

	add	esp, 44					; 0000002cH
	ret	12					; 0000000cH
$LN91@RecomputeF:

; 4370 : 	int iFollowers = GetNumFollowers(eMajority);

	mov	eax, DWORD PTR [eax+8]
	jmp	SHORT $LN74@RecomputeF
?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvCityReligions::RecomputeFollowers
_TEXT	ENDS
PUBLIC	?CopyToSimulatedStatus@CvCityReligions@@AAEXXZ	; CvCityReligions::CopyToSimulatedStatus
; Function compile flags: /Ogtpy
;	COMDAT ?CopyToSimulatedStatus@CvCityReligions@@AAEXXZ
_TEXT	SEGMENT
?CopyToSimulatedStatus@CvCityReligions@@AAEXXZ PROC	; CvCityReligions::CopyToSimulatedStatus, COMDAT
; _this$ = ecx

; 4448 : {

	push	ebp
	mov	ebp, ecx
	push	esi

; 4449 : 	m_SimulatedStatus.clear();

	lea	esi, DWORD PTR [ebp+208]
	mov	DWORD PTR [esi+4], 0

; 4450 : 
; 4451 : 	ReligionInCityList::iterator it;
; 4452 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4453 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4454 : #else
; 4455 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR [ebp+4]
	push	edi
	mov	edi, DWORD PTR [ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	ecx, DWORD PTR [edi+eax*8]
	cmp	edi, ecx
	je	SHORT $LN1@CopyToSimu
$LL3@CopyToSimu:

; 4456 : #endif
; 4457 : 	{
; 4458 : 		m_SimulatedStatus.push_back(*it);

	mov	eax, DWORD PTR [esi+8]
	mov	BYTE PTR [esi+204], 0
	cmp	DWORD PTR [esi+4], eax
	jne	SHORT $LN18@CopyToSimu
	push	eax
	mov	ecx, esi
	call	?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize
$LN18@CopyToSimu:
	mov	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR [esi]
	lea	eax, DWORD PTR [eax+edx*8]
	test	eax, eax
	je	SHORT $LN21@CopyToSimu
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [edi+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [edi+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [edi+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR [edi+20]
	mov	DWORD PTR [eax+20], edx
$LN21@CopyToSimu:
	inc	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [ebp+4]
	mov	ecx, DWORD PTR [ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	add	edi, 24					; 00000018H
	lea	edx, DWORD PTR [ecx+eax*8]
	cmp	edi, edx
	jne	SHORT $LL3@CopyToSimu
$LN1@CopyToSimu:
	pop	edi
	pop	esi
	pop	ebp

; 4459 : 	}
; 4460 : }

	ret	0
?CopyToSimulatedStatus@CvCityReligions@@AAEXXZ ENDP	; CvCityReligions::CopyToSimulatedStatus
_TEXT	ENDS
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAVCvCityReligions@@@Z ; operator>>
; Function compile flags: /Ogtpy
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAVCvCityReligions@@@Z
_TEXT	SEGMENT
_uiVersion$ = -32					; size = 4
_iEntriesToRead$ = -28					; size = 4
_tempItem$ = -24					; size = 24
_bTemp$227323 = 8					; size = 1
_loadFrom$ = 8						; size = 4
_uiVersion$242531 = 12					; size = 4
_iTemp$227326 = 12					; size = 4
_writeTo$ = 12						; size = 4
??5@YAAAVFDataStream@@AAV0@AAVCvCityReligions@@@Z PROC	; operator>>, COMDAT

; 4768 : {

	sub	esp, 32					; 00000020H
	push	ebx
	push	ebp
	push	esi
	push	edi

; 4769 : 	uint uiVersion;
; 4770 : 
; 4771 : 	loadFrom >> uiVersion;

	mov	edi, DWORD PTR _loadFrom$[esp+44]
	lea	eax, DWORD PTR _uiVersion$[esp+48]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 4772 : 
; 4773 : 	if(uiVersion >= 2)

	xor	ebx, ebx
	cmp	DWORD PTR _uiVersion$[esp+48], 2
	jb	SHORT $LN7@operator@10

; 4774 : 	{
; 4775 : 		bool bTemp;
; 4776 : 		loadFrom >> bTemp;

	lea	ecx, DWORD PTR _bTemp$227323[esp+44]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read

; 4777 : 		writeTo.SetPaidAdoptionBonus(bTemp);

	mov	esi, DWORD PTR _writeTo$[esp+44]
	mov	dl, BYTE PTR _bTemp$227323[esp+44]
	mov	BYTE PTR [esi+420], dl

; 4778 : 	}
; 4779 : 	else

	jmp	SHORT $LN16@operator@10
$LN7@operator@10:

; 4780 : 	{
; 4781 : 		writeTo.SetPaidAdoptionBonus(false);

	mov	esi, DWORD PTR _writeTo$[esp+44]
	mov	BYTE PTR [esi+420], bl
$LN16@operator@10:

; 4782 : 	}
; 4783 : 
; 4784 : 	if (uiVersion >= 3)

	cmp	DWORD PTR _uiVersion$[esp+48], 3
	jb	SHORT $LN5@operator@10

; 4785 : 	{
; 4786 : 		int iTemp;
; 4787 : 		loadFrom >> iTemp;

	lea	eax, DWORD PTR _iTemp$227326[esp+44]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 4788 : 		writeTo.SetReligiousPressureModifier(iTemp);

	mov	ecx, DWORD PTR _iTemp$227326[esp+44]
	mov	DWORD PTR [esi+424], ecx

; 4789 : 	}
; 4790 : 	else

	jmp	SHORT $LN22@operator@10
$LN5@operator@10:

; 4791 : 	{
; 4792 : 		writeTo.SetReligiousPressureModifier(0);

	mov	DWORD PTR [esi+424], ebx
$LN22@operator@10:

; 4793 : 	}
; 4794 : 
; 4795 : 	int iEntriesToRead;
; 4796 : 	CvReligionInCity tempItem;
; 4797 : 
; 4798 : 	writeTo.m_ReligionStatus.clear();
; 4799 : 	loadFrom >> iEntriesToRead;

	lea	edx, DWORD PTR _iEntriesToRead$[esp+48]
	push	edx
	mov	ecx, edi
	mov	DWORD PTR _tempItem$[esp+52], -1
	mov	BYTE PTR _tempItem$[esp+56], bl
	mov	DWORD PTR _tempItem$[esp+60], ebx
	mov	DWORD PTR _tempItem$[esp+64], ebx
	mov	DWORD PTR _tempItem$[esp+68], ebx
	mov	DWORD PTR _tempItem$[esp+72], ebx
	mov	DWORD PTR [esi+4], ebx
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 4800 : 	for(int iI = 0; iI < iEntriesToRead; iI++)

	xor	ebp, ebp
	cmp	DWORD PTR _iEntriesToRead$[esp+48], ebx
	jle	$LN61@operator@10
$LL3@operator@10:

; 4801 : 	{
; 4802 : 		loadFrom >> tempItem;

	lea	eax, DWORD PTR _uiVersion$242531[esp+44]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read
	lea	ecx, DWORD PTR _tempItem$[esp+48]
	push	ecx
	push	edi
	call	??5@YAAAVFDataStream@@AAV0@AAW4ReligionTypes@@@Z ; operator>>
	add	esp, 8
	lea	edx, DWORD PTR _tempItem$[esp+52]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAA_N@Z		; FDataStream::Read
	lea	eax, DWORD PTR _tempItem$[esp+56]
	push	eax
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	lea	ecx, DWORD PTR _tempItem$[esp+60]
	push	ecx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	cmp	DWORD PTR _uiVersion$242531[esp+44], 2
	jne	SHORT $LN37@operator@10
	lea	edx, DWORD PTR _tempItem$[esp+64]
	push	edx
	mov	ecx, edi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	jmp	SHORT $LN36@operator@10
$LN37@operator@10:
	mov	DWORD PTR _tempItem$[esp+64], ebx
$LN36@operator@10:

; 4803 : 		writeTo.m_ReligionStatus.push_back(tempItem);

	mov	eax, DWORD PTR [esi+8]
	mov	BYTE PTR [esi+204], bl
	cmp	DWORD PTR [esi+4], eax
	jne	SHORT $LN50@operator@10
	push	eax
	mov	ecx, esi
	call	?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize
$LN50@operator@10:
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]
	cmp	eax, ebx
	je	SHORT $LN53@operator@10
	mov	edx, DWORD PTR _tempItem$[esp+48]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR _tempItem$[esp+52]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR _tempItem$[esp+56]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR _tempItem$[esp+60]
	mov	DWORD PTR [eax+12], ecx
	mov	edx, DWORD PTR _tempItem$[esp+64]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR _tempItem$[esp+68]
	mov	DWORD PTR [eax+20], ecx
$LN53@operator@10:
	inc	DWORD PTR [esi+4]
	inc	ebp
	cmp	ebp, DWORD PTR _iEntriesToRead$[esp+48]
	jl	$LL3@operator@10
$LN61@operator@10:

; 4804 : 	}
; 4805 : 
; 4806 : 	return loadFrom;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 4807 : }

	add	esp, 32					; 00000020H
	ret	0
??5@YAAAVFDataStream@@AAV0@AAVCvCityReligions@@@Z ENDP	; operator>>
_TEXT	ENDS
PUBLIC	?DoFaithPurchases@CvReligionAI@@AAEXXZ		; CvReligionAI::DoFaithPurchases
EXTRN	?GetCurrentEra@CvPlayer@@QBE?AW4EraTypes@@XZ:PROC ; CvPlayer::GetCurrentEra
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__unwindtable$?DoFaithPurchases@CvReligionAI@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoFaithPurchases@CvReligionAI@@AAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoFaithPurchases@CvReligionAI@@AAEXXZ$1
__ehfuncinfo$?DoFaithPurchases@CvReligionAI@@AAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?DoFaithPurchases@CvReligionAI@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?DoFaithPurchases@CvReligionAI@@AAEXXZ
_TEXT	SEGMENT
_bTooManyMissionaries$ = -77				; size = 1
_pMyReligion$ = -76					; size = 4
_eFaithBuilding$ = -72					; size = 4
_strLogMsg$ = -68					; size = 28
_strFaith$228450 = -40					; size = 28
__$EHRec$ = -12						; size = 12
?DoFaithPurchases@CvReligionAI@@AAEXXZ PROC		; CvReligionAI::DoFaithPurchases, COMDAT
; _this$ = ecx

; 5699 : {

	push	-1
	push	__ehhandler$?DoFaithPurchases@CvReligionAI@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	esi, ecx

; 5700 : 	ReligionTypes eReligion = GetReligionToSpread();

	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread

; 5701 : 
; 5702 : 	CvGameReligions* pReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	edi, eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ebx, eax

; 5703 : 	const CvReligion* pMyReligion = pReligions->GetReligion(eReligion, m_pPlayer->GetID());

	mov	eax, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [eax+44]
	push	eax
	push	edi
	mov	ecx, ebx
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 5704 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 5705 : 	std::vector<BuildingClassTypes> eFaithBuilding = FaithBuildingAvailable(eReligion);
; 5706 : #else
; 5707 : 	BuildingClassTypes eFaithBuilding = FaithBuildingAvailable(eReligion);

	push	edi
	mov	ecx, esi
	mov	DWORD PTR _pMyReligion$[esp+100], eax
	call	?FaithBuildingAvailable@CvReligionAI@@ABE?AW4BuildingClassTypes@@W4ReligionTypes@@@Z ; CvReligionAI::FaithBuildingAvailable

; 5708 : #endif
; 5709 : 	bool bTooManyMissionaries = m_pPlayer->GetNumUnitsWithUnitAI(UNITAI_MISSIONARY) > GC.getRELIGION_MAX_MISSIONARIES();

	mov	ecx, DWORD PTR [esi+4]
	mov	ebp, DWORD PTR ?gGlobals@@3VCvGlobals@@A+3436
	push	1
	push	0
	push	35					; 00000023H
	mov	DWORD PTR _eFaithBuilding$[esp+108], eax
	call	?GetNumUnitsWithUnitAI@CvPlayer@@QAEHW4UnitAITypes@@_N1@Z ; CvPlayer::GetNumUnitsWithUnitAI
	cmp	eax, ebp

; 5710 : 
; 5711 : 	CvString strLogMsg;

	lea	ecx, DWORD PTR _strLogMsg$[esp+96]
	setg	BYTE PTR _bTooManyMissionaries$[esp+96]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 5712 : 	if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR __$EHRec$[esp+104], 0
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	SHORT $LN55@DoFaithPur

; 5713 : 	{
; 5714 : 		strLogMsg = m_pPlayer->getCivilizationShortDescription();

	mov	ecx, DWORD PTR [esi+4]
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	lea	ecx, DWORD PTR _strLogMsg$[esp+96]
	test	eax, eax
	je	SHORT $LN56@DoFaithPur
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN55@DoFaithPur
$LN56@DoFaithPur:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN55@DoFaithPur:

; 5715 : 	}
; 5716 : 
; 5717 : 	// Save for another prophet if haven't enhanced religion yet
; 5718 : 	if(pMyReligion == NULL || !pMyReligion->m_bEnhanced)

	mov	eax, DWORD PTR _pMyReligion$[esp+96]
	test	eax, eax
	je	$LN78@DoFaithPur
	cmp	BYTE PTR [eax+21], 0
	je	$LN85@DoFaithPur

; 5740 : 							}
; 5741 : 						}				
; 5742 : 					}
; 5743 : 				}
; 5744 : 			}
; 5745 : 		}
; 5746 : 	}
; 5747 : 	else
; 5748 : 	{
; 5749 : 		// Do we need a prophet pronto to reestablish our religion?
; 5750 : 		UnitTypes eProphetType = (UnitTypes)GC.getInfoTypeForString("UNIT_PROPHET", true);

	push	1
	push	OFFSET $SG228409
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ebx, eax

; 5751 : 		if (eProphetType != NO_UNIT && ChooseProphetConversionCity(true/*bOnlyBetterThanEnhancingReligion*/) && m_pPlayer->GetReligions()->GetNumProphetsSpawned() <= 5)

	cmp	ebx, -1
	je	SHORT $LN29@DoFaithPur
	push	1
	mov	ecx, esi
	call	?ChooseProphetConversionCity@CvReligionAI@@QBEPAVCvCity@@_N@Z ; CvReligionAI::ChooseProphetConversionCity
	test	eax, eax
	je	SHORT $LN29@DoFaithPur
	mov	ecx, DWORD PTR [esi+4]
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	cmp	DWORD PTR [eax+4], 5
	jg	SHORT $LN29@DoFaithPur

; 5752 : 		{
; 5753 : 			BuyGreatPerson(eProphetType);

	push	ebx
	mov	ecx, esi
	call	?BuyGreatPerson@CvReligionAI@@AAEXW4UnitTypes@@@Z ; CvReligionAI::BuyGreatPerson

; 5754 : 
; 5755 : 			if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	$LN84@DoFaithPur

; 5756 : 			{
; 5757 : 				strLogMsg += ", Saving for Prophet, ";

	push	OFFSET $SG228412
	lea	ecx, DWORD PTR _strLogMsg$[esp+100]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 5758 : 				strLogMsg += GC.getUnitInfo(eProphetType)->GetDescription();

	push	ebx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	lea	ecx, DWORD PTR [eax+36]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strLogMsg$[esp+100]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 5759 : 			}				
; 5760 : 		}

	jmp	$LN84@DoFaithPur
$LN29@DoFaithPur:

; 5761 : 
; 5762 : 		// Besides prophets, first priority is to convert all our non-puppet cities
; 5763 : 		else if(!bTooManyMissionaries && !AreAllOurCitiesConverted(eReligion, false /*bIncludePuppets*/))

	cmp	BYTE PTR _bTooManyMissionaries$[esp+96], 0
	jne	SHORT $LN26@DoFaithPur
	push	0
	push	edi
	mov	ecx, esi
	call	?AreAllOurCitiesConverted@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::AreAllOurCitiesConverted
	test	al, al
	jne	SHORT $LN26@DoFaithPur

; 5764 : 		{
; 5765 : 			BuyMissionary(eReligion);

	push	edi
	mov	ecx, esi
	call	?BuyMissionary@CvReligionAI@@AAEXW4ReligionTypes@@@Z ; CvReligionAI::BuyMissionary

; 5766 : 
; 5767 : 			if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	$LN84@DoFaithPur

; 5768 : 			{
; 5769 : 				strLogMsg += ", Saving for Missionary, Need to Convert Non-Puppet Cities";

	push	OFFSET $SG228416
	lea	ecx, DWORD PTR _strLogMsg$[esp+100]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 5770 : 			}
; 5771 : 		}

	jmp	$LN84@DoFaithPur
$LN26@DoFaithPur:

; 5772 : 
; 5773 : 		// Next priority is to establish our faith building in every non-puppet city
; 5774 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 5775 : 		else if (eFaithBuilding.size() > 0 && !AreAllOurCitiesHaveFaithBuilding(eReligion, false /*bIncludePuppets*/))
; 5776 : 		{
; 5777 : 			for (std::vector<BuildingClassTypes>::iterator it = eFaithBuilding.begin(); it != eFaithBuilding.end(); ++it)
; 5778 : 			{
; 5779 : 				BuyFaithBuilding(eReligion, (*it));
; 5780 : 			}
; 5781 : #else
; 5782 : 		else if(eFaithBuilding != NO_BUILDINGCLASS && !AreAllOurCitiesHaveFaithBuilding(eReligion, false /*bIncludePuppets*/))

	mov	ebp, DWORD PTR _eFaithBuilding$[esp+96]
	cmp	ebp, -1
	je	SHORT $LN80@DoFaithPur
	push	0
	push	edi
	mov	ecx, esi
	call	?AreAllOurCitiesHaveFaithBuilding@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::AreAllOurCitiesHaveFaithBuilding
	test	al, al
	jne	SHORT $LN80@DoFaithPur

; 5783 : 		{
; 5784 : 			BuyFaithBuilding(eReligion, eFaithBuilding);

	push	ebp
	push	edi
	mov	ecx, esi
	call	?BuyFaithBuilding@CvReligionAI@@AAEXW4ReligionTypes@@W4BuildingClassTypes@@@Z ; CvReligionAI::BuyFaithBuilding

; 5785 : #endif
; 5786 : 
; 5787 : 			if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	$LN84@DoFaithPur

; 5788 : 			{
; 5789 : 				strLogMsg += ", Saving for Faith Building, For Our Non-Puppet Cities";

	push	OFFSET $SG228420
	lea	ecx, DWORD PTR _strLogMsg$[esp+100]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 5790 : 			}
; 5791 : 		}

	jmp	$LN84@DoFaithPur
$LN80@DoFaithPur:

; 5792 : 
; 5793 : 		// Try to build other buildings with Faith if we took that belief
; 5794 : 		else if (CanBuyNonFaithBuilding())

	mov	ecx, esi
	call	?CanBuyNonFaithBuilding@CvReligionAI@@ABE_NXZ ; CvReligionAI::CanBuyNonFaithBuilding
	test	al, al
	je	SHORT $LN20@DoFaithPur

; 5795 : 		{
; 5796 : 			if (!BuyAnyAvailableNonFaithBuilding())

	mov	ecx, esi
	call	?BuyAnyAvailableNonFaithBuilding@CvReligionAI@@AAE_NXZ ; CvReligionAI::BuyAnyAvailableNonFaithBuilding
	test	al, al
	jne	$LN84@DoFaithPur

; 5797 : 			{
; 5798 : 				if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	$LN84@DoFaithPur

; 5799 : 				{
; 5800 : 					strLogMsg += ", Saving for Science Building, Have Reformation Belief";

	push	OFFSET $SG228425
	lea	ecx, DWORD PTR _strLogMsg$[esp+100]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 5801 : 				}
; 5802 : 			}
; 5803 : 		}

	jmp	$LN84@DoFaithPur
$LN20@DoFaithPur:

; 5804 : 
; 5805 : 		// If in Industrial, see if we want to save for buying a great person
; 5806 : 		else if (m_pPlayer->GetCurrentEra() >= GC.getInfoTypeForString("ERA_INDUSTRIAL") && GetDesiredFaithGreatPerson() != NO_UNIT)

	push	0
	push	OFFSET $SG228428
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR [esi+4]
	mov	ebx, eax
	call	?GetCurrentEra@CvPlayer@@QBE?AW4EraTypes@@XZ ; CvPlayer::GetCurrentEra
	cmp	eax, ebx
	jl	SHORT $LN81@DoFaithPur
	mov	ecx, esi
	call	?GetDesiredFaithGreatPerson@CvReligionAI@@ABE?AW4UnitTypes@@XZ ; CvReligionAI::GetDesiredFaithGreatPerson
	cmp	eax, -1
	je	SHORT $LN81@DoFaithPur

; 5807 : 		{
; 5808 : 			UnitTypes eGPType = GetDesiredFaithGreatPerson();

	mov	ecx, esi
	call	?GetDesiredFaithGreatPerson@CvReligionAI@@ABE?AW4UnitTypes@@XZ ; CvReligionAI::GetDesiredFaithGreatPerson
	mov	edi, eax

; 5809 : 			BuyGreatPerson(eGPType);

	push	edi
	mov	ecx, esi
	call	?BuyGreatPerson@CvReligionAI@@AAEXW4UnitTypes@@@Z ; CvReligionAI::BuyGreatPerson

; 5810 : 
; 5811 : 			if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	$LN84@DoFaithPur

; 5812 : 			{
; 5813 : 				strLogMsg += ", Saving for Great Person, ";

	push	OFFSET $SG228431
	lea	ecx, DWORD PTR _strLogMsg$[esp+100]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 5814 : #ifdef AUI_WARNING_FIXES
; 5815 : 				CvUnitEntry* pGPInfo = GC.getUnitInfo(eGPType);
; 5816 : 				if (pGPInfo)
; 5817 : 					strLogMsg += pGPInfo->GetDescription();
; 5818 : #else
; 5819 : 				strLogMsg += GC.getUnitInfo(eGPType)->GetDescription();

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo
	lea	ecx, DWORD PTR [eax+36]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strLogMsg$[esp+100]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 5820 : #endif
; 5821 : 			}				
; 5822 : 		}

	jmp	$LN84@DoFaithPur
$LN81@DoFaithPur:

; 5823 : 
; 5824 : 		// Might as well convert puppet-cities to build our religious strength
; 5825 : #ifdef AUI_RELIGION_FIX_MULTIPLE_FAITH_BUILDINGS
; 5826 : 		else if (!bTooManyMissionaries && eFaithBuilding.size() > 0 && !AreAllOurCitiesHaveFaithBuilding(eReligion, true /*bIncludePuppets*/))
; 5827 : #else
; 5828 : 		else if(!bTooManyMissionaries && eFaithBuilding != NO_BUILDINGCLASS && !AreAllOurCitiesHaveFaithBuilding(eReligion, true /*bIncludePuppets*/))

	mov	bl, BYTE PTR _bTooManyMissionaries$[esp+96]
	test	bl, bl
	jne	SHORT $LN83@DoFaithPur
	cmp	ebp, -1
	je	SHORT $LN82@DoFaithPur
	push	1
	push	edi
	mov	ecx, esi
	call	?AreAllOurCitiesHaveFaithBuilding@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::AreAllOurCitiesHaveFaithBuilding
	test	al, al
	jne	SHORT $LN82@DoFaithPur

; 5829 : #endif
; 5830 : 		{
; 5831 : 			BuyMissionary(eReligion);

	push	edi
	mov	ecx, esi
	call	?BuyMissionary@CvReligionAI@@AAEXW4ReligionTypes@@@Z ; CvReligionAI::BuyMissionary

; 5832 : 
; 5833 : 			if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	$LN84@DoFaithPur

; 5834 : 			{
; 5835 : 				strLogMsg += ", Saving for Missionary, Need to Convert Puppet Cities";

	push	OFFSET $SG228435
	lea	ecx, DWORD PTR _strLogMsg$[esp+100]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 5836 : 			}
; 5837 : 		}

	jmp	$LN84@DoFaithPur
$LN82@DoFaithPur:

; 5838 : 
; 5839 : 		// Have civs nearby to target who didn't start a religion?
; 5840 : 		else if(!bTooManyMissionaries && HaveNearbyConversionTarget(eReligion, false /*bCanIncludeReligionStarter*/))

	push	0
	push	edi
	mov	ecx, esi
	call	?HaveNearbyConversionTarget@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::HaveNearbyConversionTarget
	test	al, al
	je	SHORT $LN83@DoFaithPur

; 5841 : 		{
; 5842 : 			BuyMissionary(eReligion);

	push	edi
	mov	ecx, esi
	call	?BuyMissionary@CvReligionAI@@AAEXW4ReligionTypes@@@Z ; CvReligionAI::BuyMissionary

; 5843 : 
; 5844 : 			if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	$LN84@DoFaithPur

; 5845 : 			{
; 5846 : 				strLogMsg += ", Saving for Missionary, Need to Convert Cities of Non-Religion Starters";

	push	OFFSET $SG228439
	lea	ecx, DWORD PTR _strLogMsg$[esp+100]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 5847 : 			}
; 5848 : 		}

	jmp	SHORT $LN84@DoFaithPur
$LN83@DoFaithPur:

; 5849 : 
; 5850 : 		// Have cities Inquisitors can defend?
; 5851 : 		else if(!HaveEnoughInquisitors(eReligion))

	push	edi
	mov	ecx, esi
	call	?HaveEnoughInquisitors@CvReligionAI@@ABE_NW4ReligionTypes@@@Z ; CvReligionAI::HaveEnoughInquisitors
	test	al, al
	jne	SHORT $LN7@DoFaithPur

; 5852 : 		{
; 5853 : 			BuyInquisitor(eReligion);

	push	edi
	mov	ecx, esi
	call	?BuyInquisitor@CvReligionAI@@AAEXW4ReligionTypes@@@Z ; CvReligionAI::BuyInquisitor

; 5854 : 
; 5855 : 			if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	SHORT $LN84@DoFaithPur

; 5856 : 			{
; 5857 : 				strLogMsg += ", Saving for Inquisitors, Need to Defend Our Cities";

	push	OFFSET $SG228443
	lea	ecx, DWORD PTR _strLogMsg$[esp+100]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 5858 : 			}
; 5859 : 		}

	jmp	SHORT $LN84@DoFaithPur
$LN7@DoFaithPur:

; 5860 : 
; 5861 : 		// Have civs nearby to target who did start a religion?
; 5862 : 		else if(!bTooManyMissionaries && HaveNearbyConversionTarget(eReligion, true /*bCanIncludeReligionStarter*/))

	test	bl, bl
	jne	SHORT $LN4@DoFaithPur
	push	1
	push	edi
	mov	ecx, esi
	call	?HaveNearbyConversionTarget@CvReligionAI@@ABE_NW4ReligionTypes@@_N@Z ; CvReligionAI::HaveNearbyConversionTarget
	test	al, al
	je	SHORT $LN4@DoFaithPur

; 5863 : 		{
; 5864 : 			BuyMissionary(eReligion);

	push	edi
	mov	ecx, esi
	call	?BuyMissionary@CvReligionAI@@AAEXW4ReligionTypes@@@Z ; CvReligionAI::BuyMissionary

; 5865 : 
; 5866 : 			if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	SHORT $LN84@DoFaithPur

; 5867 : 			{
; 5868 : 				strLogMsg += ", Saving for Missionary, Need to Convert Cities of Religion Starters";

	push	OFFSET $SG228447
	lea	ecx, DWORD PTR _strLogMsg$[esp+100]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 5869 : 			}
; 5870 : 		}
; 5871 : 
; 5872 : 		// Any faith buildings from other religions we can buy?
; 5873 : 		else

	jmp	SHORT $LN84@DoFaithPur
$LN4@DoFaithPur:

; 5874 : 		{
; 5875 : 			BuyAnyAvailableFaithBuilding();

	mov	ecx, esi
	call	?BuyAnyAvailableFaithBuilding@CvReligionAI@@AAE_NXZ ; CvReligionAI::BuyAnyAvailableFaithBuilding
$LN84@DoFaithPur:

; 5876 : 		}
; 5877 : 
; 5878 : 		if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	$LN85@DoFaithPur

; 5879 : 		{
; 5880 : 			CvString strFaith;

	lea	ecx, DWORD PTR _strFaith$228450[esp+96]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 5881 : 			strFaith.Format(", Faith: %d", m_pPlayer->GetFaith());

	mov	ecx, DWORD PTR [esi+4]
	mov	BYTE PTR __$EHRec$[esp+104], 1
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	push	eax
	lea	ecx, DWORD PTR _strFaith$228450[esp+100]
	push	OFFSET $SG228451
	push	ecx
	call	?Format@CvString@@QAAXPBDZZ		; CvString::Format
	add	esp, 12					; 0000000cH

; 5882 : 			strLogMsg += strFaith;

	lea	edx, DWORD PTR _strFaith$228450[esp+96]
	push	edx
	lea	ecx, DWORD PTR _strLogMsg$[esp+100]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z

; 5883 : 			GC.getGame().GetGameReligions()->LogReligionMessage(strLogMsg);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	lea	eax, DWORD PTR _strLogMsg$[esp+96]
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z ; CvGameReligions::LogReligionMessage

; 5884 : 		}

	lea	ecx, DWORD PTR _strFaith$228450[esp+96]
	mov	BYTE PTR __$EHRec$[esp+104], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	$LN85@DoFaithPur
$LN78@DoFaithPur:

; 5719 : 	{
; 5720 : 		// Unless all religions gone and we didn't start one
; 5721 : 		if(pMyReligion == NULL && pReligions->GetNumReligionsStillToFound() <= 0)

	mov	ecx, ebx
	call	?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsStillToFound
	test	eax, eax
	jg	$LN85@DoFaithPur

; 5722 : 		{
; 5723 : 			// Fill our cities with any Faith buildings possible
; 5724 : 			if(!BuyAnyAvailableFaithBuilding())

	mov	ecx, esi
	call	?BuyAnyAvailableFaithBuilding@CvReligionAI@@AAE_NXZ ; CvReligionAI::BuyAnyAvailableFaithBuilding
	test	al, al
	jne	SHORT $LN85@DoFaithPur

; 5725 : 			{
; 5726 : 				if(m_pPlayer->GetCurrentEra() >= GC.getInfoTypeForString("ERA_INDUSTRIAL"))

	push	0
	push	OFFSET $SG228399
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, DWORD PTR [esi+4]
	mov	edi, eax
	call	?GetCurrentEra@CvPlayer@@QBE?AW4EraTypes@@XZ ; CvPlayer::GetCurrentEra
	cmp	eax, edi
	jl	SHORT $LN85@DoFaithPur

; 5727 : 				{
; 5728 : 					UnitTypes eGPType = GetDesiredFaithGreatPerson();

	mov	ecx, esi
	call	?GetDesiredFaithGreatPerson@CvReligionAI@@ABE?AW4UnitTypes@@XZ ; CvReligionAI::GetDesiredFaithGreatPerson
	mov	edi, eax

; 5729 : 					if (eGPType != NO_UNIT)

	cmp	edi, -1
	je	SHORT $LN85@DoFaithPur

; 5730 : 					{
; 5731 : 						BuyGreatPerson(eGPType);

	push	edi
	mov	ecx, esi
	call	?BuyGreatPerson@CvReligionAI@@AAEXW4UnitTypes@@@Z ; CvReligionAI::BuyGreatPerson

; 5732 : 
; 5733 : 						if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	SHORT $LN85@DoFaithPur

; 5734 : 						{
; 5735 : 							strLogMsg += ", Saving for Great Person, ";

	push	OFFSET $SG228403
	lea	ecx, DWORD PTR _strLogMsg$[esp+100]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 5736 : 							CvUnitEntry *pkEntry = GC.getUnitInfo(eGPType);

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo

; 5737 : 							if (pkEntry)

	test	eax, eax
	je	SHORT $LN85@DoFaithPur

; 5738 : 							{
; 5739 : 								strLogMsg += pkEntry->GetDescription();

	lea	ecx, DWORD PTR [eax+36]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strLogMsg$[esp+100]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
$LN85@DoFaithPur:

; 5885 : 	}
; 5886 : }

	lea	ecx, DWORD PTR _strLogMsg$[esp+96]
	mov	DWORD PTR __$EHRec$[esp+104], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[esp+96]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 80					; 00000050H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoFaithPurchases@CvReligionAI@@AAEXXZ$0:
	lea	ecx, DWORD PTR _strLogMsg$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoFaithPurchases@CvReligionAI@@AAEXXZ$1:
	lea	ecx, DWORD PTR _strFaith$228450[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoFaithPurchases@CvReligionAI@@AAEXXZ:
	mov	eax, OFFSET __ehfuncinfo$?DoFaithPurchases@CvReligionAI@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoFaithPurchases@CvReligionAI@@AAEXXZ ENDP		; CvReligionAI::DoFaithPurchases
PUBLIC	??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::~vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::~vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::~vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAEXXZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::clear
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAEXXZ PROC ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::clear, COMDAT
; _this$ = ecx

; 1059 : 		{	// erase all

	push	esi
	push	edi
	mov	edi, ecx

; 1060 : 		erase(begin(), end());

	mov	ecx, DWORD PTR [edi+8]
	mov	esi, DWORD PTR [edi+4]
	cmp	esi, ecx
	je	SHORT $LN15@clear@2
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	lea	edx, DWORD PTR [eax*4]
	push	ebx
	lea	ebx, DWORD PTR [edx+esi]
	test	eax, eax
	jle	SHORT $LN40@clear@2
	push	edx
	push	ecx
	push	edx
	push	esi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN40@clear@2:
	mov	DWORD PTR [edi+8], ebx
	pop	ebx
$LN15@clear@2:
	pop	edi
	pop	esi

; 1061 : 		}

	ret	0
?clear@?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAEXXZ ENDP ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::clear
_TEXT	ENDS
PUBLIC	?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z ; FStaticVector<CvReligion,16,0,297,0>::push_back
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
xdata$x	SEGMENT
__unwindtable$?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z$0
__ehfuncinfo$?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	ENDS
;	COMDAT ?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T242819 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_element$ = 8						; size = 4
?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z PROC ; FStaticVector<CvReligion,16,0,297,0>::push_back, COMDAT
; _this$ = ecx

; 676  : 	unsigned int push_back(const T& element){

	push	-1
	push	__ehhandler$?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	esi
	mov	esi, ecx

; 677  : 		m_bIsResized = false;
; 678  : 		if( m_uiCurrSize == m_uiCurrMaxSize )

	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR _this$[esp+24], esi
	mov	BYTE PTR [esi+5260], 0
	cmp	DWORD PTR [esi+4], eax
	jne	SHORT $LN1@push_back@3

; 679  : 			GrowSize(m_uiCurrMaxSize);

	push	eax
	call	?GrowSize@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligion,16,0,297,0>::GrowSize
$LN1@push_back@3:

; 680  : 		new( (void*)&m_pData[m_uiCurrSize] )T(element);

	mov	ecx, DWORD PTR [esi+4]
	imul	ecx, 328				; 00000148H
	add	ecx, DWORD PTR [esi]
	mov	DWORD PTR $T242819[esp+24], ecx
	mov	DWORD PTR __$EHRec$[esp+32], 0
	je	SHORT $LN4@push_back@3
	mov	eax, DWORD PTR _element$[esp+20]
	push	eax
	call	??0CvReligion@@QAE@ABV0@@Z
$LN4@push_back@3:

; 681  : 		return m_uiCurrSize++;

	mov	eax, DWORD PTR [esi+4]
	lea	ecx, DWORD PTR [eax+1]
	mov	DWORD PTR [esi+4], ecx

; 682  : 	};

	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 20					; 00000014H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z$0:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 328				; 00000148H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR $T242819[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z ENDP ; FStaticVector<CvReligion,16,0,297,0>::push_back
PUBLIC	?push_back@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEIABW4BeliefTypes@@H@Z ; CvWeightedVector<enum BeliefTypes,100,1>::push_back
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
;	COMDAT ?push_back@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEIABW4BeliefTypes@@H@Z
_TEXT	SEGMENT
_element$ = 8						; size = 4
_iWeight$ = 12						; size = 4
?push_back@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEIABW4BeliefTypes@@H@Z PROC ; CvWeightedVector<enum BeliefTypes,100,1>::push_back, COMDAT
; _this$ = ecx

; 104  : //		FAssertMsg(iWeight >= 0, "Weight should not be negative.");
; 105  : 
; 106  : 		WeightedElement weightedElem;
; 107  : 		weightedElem.m_Element = element;

	mov	eax, DWORD PTR _element$[esp-4]
	push	esi
	mov	esi, ecx
	push	edi
	mov	edi, DWORD PTR [eax]

; 108  : 		weightedElem.m_iWeight = iWeight;
; 109  : 
; 110  : 		return m_pItems.push_back(weightedElem);

	mov	eax, DWORD PTR [esi+8]
	mov	BYTE PTR [esi+812], 0
	cmp	DWORD PTR [esi+4], eax
	jne	SHORT $LN5@push_back@4
	push	eax
	call	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::GrowSize
$LN5@push_back@4:
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi]
	lea	eax, DWORD PTR [edx+ecx*8]
	test	eax, eax
	je	SHORT $LN8@push_back@4
	mov	ecx, DWORD PTR _iWeight$[esp+4]
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], ecx
$LN8@push_back@4:
	mov	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [eax+1]
	pop	edi
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 111  : 	};

	ret	8
?push_back@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEIABW4BeliefTypes@@H@Z ENDP ; CvWeightedVector<enum BeliefTypes,100,1>::push_back
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXPAW4BeliefTypes@@0@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Destroy
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXPAW4BeliefTypes@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXPAW4BeliefTypes@@0@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Destroy, COMDAT
; _this$ = ecx

; 1119 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1120 : 		}

	ret	8
?_Destroy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXPAW4BeliefTypes@@0@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy, COMDAT
; _this$ = ecx

; 1123 : 		{	// free all storage

	push	esi
	mov	esi, ecx

; 1124 : 		if (_Myfirst != 0)

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@Tidy@2

; 1125 : 			{	// something to free, destroy and deallocate it
; 1126 : 
; 1127 :  #if _HAS_ITERATOR_DEBUGGING
; 1128 : 			this->_Orphan_all();
; 1129 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1130 : 
; 1131 : 			_Destroy(_Myfirst, _Mylast);
; 1132 : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@Tidy@2:

; 1133 : 			}
; 1134 : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 1135 : 		}

	ret	0
?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@PAW43@IABW43@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Ufill
; Function compile flags: /Ogtpy
;	COMDAT ?_Ufill@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@PAW43@IABW43@@Z
_TEXT	SEGMENT
$T242883 = -4						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Cat$242886 = 16					; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@PAW43@IABW43@@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Ufill, COMDAT
; _this$ = ecx

; 1253 : 		{	// copy initializing _Count * _Val, using allocator

	push	ecx

; 1254 : 		_STDEXT unchecked_uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

	mov	edx, DWORD PTR __Cat$242886[esp]
	push	esi
	mov	esi, DWORD PTR __Count$[esp+4]
	push	edi
	mov	edi, DWORD PTR __Ptr$[esp+8]
	mov	BYTE PTR $T242883[esp+12], 0
	mov	eax, DWORD PTR $T242883[esp+12]
	push	eax
	mov	eax, DWORD PTR __Val$[esp+12]
	push	edx
	push	ecx
	push	eax
	push	esi
	push	edi
	call	??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<enum BeliefTypes *,unsigned int,enum BeliefTypes,std::allocator<enum BeliefTypes> >
	add	esp, 24					; 00000018H

; 1255 : 		return (_Ptr + _Count);

	lea	eax, DWORD PTR [edi+esi*4]
	pop	edi
	pop	esi

; 1256 : 		}

	pop	ecx
	ret	12					; 0000000cH
?_Ufill@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@PAW43@IABW43@@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Ufill
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@stdext@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@0PAW41@AAV?$allocator@W4BeliefTypes@@@3@@Z ; stdext::_Unchecked_uninitialized_move<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
;	COMDAT ??$_Unchecked_uninitialized_move@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@stdext@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@0PAW41@AAV?$allocator@W4BeliefTypes@@@3@@Z
_TEXT	SEGMENT
$T242919 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$242923 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@stdext@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@0PAW41@AAV?$allocator@W4BeliefTypes@@@3@@Z PROC ; stdext::_Unchecked_uninitialized_move<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >, COMDAT

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$242923[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T242919[esp+4], 0
	mov	eax, DWORD PTR $T242919[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >

; 865  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_uninitialized_move@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@stdext@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@0PAW41@AAV?$allocator@W4BeliefTypes@@@3@@Z ENDP ; stdext::_Unchecked_uninitialized_move<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@std@@@Z ; stdext::_Unchecked_uninitialized_move<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Unchecked_uninitialized_move@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@std@@@Z
_TEXT	SEGMENT
$T242956 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$242959 = 16					; size = 1
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@std@@@Z PROC ; stdext::_Unchecked_uninitialized_move<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >, COMDAT

; 861  : 	{	// move [_First, _Last) to raw _Dest, using _Al

	push	ecx

; 862  : 	return (_STD _Uninit_move(_CHECKED_BASE(_First),
; 863  : 		_CHECKED_BASE(_Last), _Dest, _Al,
; 864  : 		_STD _Move_cat(_Dest), _STD _Range_checked_iterator_tag()));

	mov	ecx, DWORD PTR __Cat$242959[esp]
	mov	edx, DWORD PTR __Al$[esp]
	mov	BYTE PTR $T242956[esp+4], 0
	mov	eax, DWORD PTR $T242956[esp+4]
	push	eax
	mov	eax, DWORD PTR __Dest$[esp+4]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+8]
	push	edx
	mov	edx, DWORD PTR __First$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >

; 865  : 	}

	add	esp, 28					; 0000001cH
	ret	0
??$_Unchecked_uninitialized_move@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@stdext@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@std@@@Z ENDP ; stdext::_Unchecked_uninitialized_move<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??$_Sort_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ; std::_Sort_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Sort_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Sort_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z PROC ; std::_Sort_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 2215 : 	_DEBUG_RANGE(_First, _Last);
; 2216 : 	_DEBUG_HEAP(_First, _Last);
; 2217 : 	for (; 1 < _Last - _First; --_Last)

	mov	ecx, DWORD PTR __Last$[esp-4]
	push	ebx
	push	esi
	push	edi
	mov	edi, DWORD PTR __First$[esp+8]
	mov	eax, ecx
	sub	eax, edi
	sar	eax, 3
	cmp	eax, 1
	jle	SHORT $LN1@Sort_heap
	mov	ebx, 8
	sub	ebx, edi

; 2218 : 		std::pop_heap(_First, _Last);

	cmp	eax, 1
	lea	esi, DWORD PTR [ecx-8]
	jle	SHORT $LN2@Sort_heap
$LN24@Sort_heap:
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR [edi+4]
	sub	esp, 8
	mov	DWORD PTR [esi+4], eax
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	lea	ecx, DWORD PTR [ebx+esi-8]
	sar	ecx, 3
	push	ecx
	push	0
	push	edi
	mov	DWORD PTR [eax+4], edx
	call	??$_Adjust_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HHU12@@Z ; std::_Adjust_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
	add	esp, 20					; 00000014H
$LN2@Sort_heap:
	sub	esi, 8
	lea	eax, DWORD PTR [ebx+esi]
	sar	eax, 3
	cmp	eax, 1
	jg	SHORT $LN24@Sort_heap
$LN1@Sort_heap:

; 2219 : 	}

	pop	edi
	pop	esi
	pop	ebx
	ret	0
??$_Sort_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ENDP ; std::_Sort_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??0CvReligionXMLEntries@@QAE@XZ			; CvReligionXMLEntries::CvReligionXMLEntries
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
;	COMDAT ??0CvReligionXMLEntries@@QAE@XZ
_TEXT	SEGMENT
??0CvReligionXMLEntries@@QAE@XZ PROC			; CvReligionXMLEntries::CvReligionXMLEntries, COMDAT
; _this$ = ecx

; 58   : {

	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx

; 59   : 
; 60   : }

	ret	0
??0CvReligionXMLEntries@@QAE@XZ ENDP			; CvReligionXMLEntries::CvReligionXMLEntries
_TEXT	ENDS
PUBLIC	?DeleteArray@CvReligionXMLEntries@@QAEXXZ	; CvReligionXMLEntries::DeleteArray
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$?DeleteArray@CvReligionXMLEntries@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DeleteArray@CvReligionXMLEntries@@QAEXXZ$0
__ehfuncinfo$?DeleteArray@CvReligionXMLEntries@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DeleteArray@CvReligionXMLEntries@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?DeleteArray@CvReligionXMLEntries@@QAEXXZ
_TEXT	SEGMENT
$T243255 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?DeleteArray@CvReligionXMLEntries@@QAEXXZ PROC		; CvReligionXMLEntries::DeleteArray, COMDAT
; _this$ = ecx

; 82   : {

	push	-1
	push	__ehhandler$?DeleteArray@CvReligionXMLEntries@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	ebx
	push	esi
	mov	ebx, ecx

; 83   : 	for(std::vector<CvReligionEntry*>::iterator it = m_paReligionEntries.begin(); it != m_paReligionEntries.end(); ++it)

	mov	eax, DWORD PTR [ebx+8]
	push	edi
	mov	edi, DWORD PTR [ebx+4]
	cmp	edi, eax
	je	SHORT $LN1@DeleteArra
$LL14@DeleteArra:

; 84   : 	{
; 85   : 		SAFE_DELETE(*it);

	mov	esi, DWORD PTR [edi]
	mov	DWORD PTR $T243255[esp+28], esi
	test	esi, esi
	je	SHORT $LN32@DeleteArra
	mov	DWORD PTR [esi], OFFSET ??_7CvReligionEntry@@6B@
	lea	ecx, DWORD PTR [esi+260]
	mov	DWORD PTR __$EHRec$[esp+36], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+36], -1
	call	??1CvBaseInfo@@QAE@XZ
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN32@DeleteArra:
	mov	DWORD PTR [edi], 0
	add	edi, 4
	cmp	edi, DWORD PTR [ebx+8]
	jne	SHORT $LL14@DeleteArra
$LN1@DeleteArra:

; 86   : 	}
; 87   : 
; 88   : 	m_paReligionEntries.clear();

	mov	ecx, DWORD PTR [ebx+8]
	mov	esi, DWORD PTR [ebx+4]
	cmp	esi, ecx
	je	SHORT $LN58@DeleteArra
	mov	eax, ecx
	sub	eax, ecx
	sar	eax, 2
	lea	edx, DWORD PTR [eax*4]
	lea	edi, DWORD PTR [edx+esi]
	test	eax, eax
	jle	SHORT $LN83@DeleteArra
	push	edx
	push	ecx
	push	edx
	push	esi
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN83@DeleteArra:
	mov	DWORD PTR [ebx+8], edi
$LN58@DeleteArra:

; 89   : }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DeleteArray@CvReligionXMLEntries@@QAEXXZ$0:
	mov	ecx, DWORD PTR $T243255[ebp]
	jmp	??1CvBaseInfo@@QAE@XZ
__ehhandler$?DeleteArray@CvReligionXMLEntries@@QAEXXZ:
	mov	eax, OFFSET __ehfuncinfo$?DeleteArray@CvReligionXMLEntries@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DeleteArray@CvReligionXMLEntries@@QAEXXZ ENDP		; CvReligionXMLEntries::DeleteArray
PUBLIC	??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z ; operator>>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z$0
__ehfuncinfo$??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z
_TEXT	SEGMENT
_uiVersion$ = -352					; size = 4
_iMinFaith$ = -348					; size = 4
_iEntriesToRead$226350 = -344				; size = 4
_tempItem$226351 = -340					; size = 328
__$EHRec$ = -12						; size = 12
_loadFrom$ = 8						; size = 4
_writeTo$ = 12						; size = 4
??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z PROC	; operator>>, COMDAT

; 2640 : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 340				; 00000154H
	push	ebp
	push	esi

; 2641 : 	uint uiVersion;
; 2642 : 	int iMinFaith;
; 2643 : 
; 2644 : 	loadFrom >> uiVersion;

	mov	esi, DWORD PTR _loadFrom$[esp+356]
	lea	eax, DWORD PTR _uiVersion$[esp+360]
	push	eax
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 2645 : 
; 2646 : 	if(uiVersion >= 3)

	cmp	DWORD PTR _uiVersion$[esp+360], 3
	jb	SHORT $LN7@operator@11

; 2647 : 	{
; 2648 : 		loadFrom >> iMinFaith;

	lea	ecx, DWORD PTR _iMinFaith$[esp+360]
	push	ecx
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2649 : 		writeTo.SetMinimumFaithNextPantheon(iMinFaith);

	mov	ebp, DWORD PTR _writeTo$[esp+356]
	mov	edx, DWORD PTR _iMinFaith$[esp+360]
	mov	DWORD PTR [ebp+5264], edx

; 2650 : 	}
; 2651 : 	else

	jmp	SHORT $LN17@operator@11
$LN7@operator@11:

; 2652 : 	{
; 2653 : 		writeTo.SetMinimumFaithNextPantheon(0);

	mov	ebp, DWORD PTR _writeTo$[esp+356]
	mov	DWORD PTR [ebp+5264], 0
$LN17@operator@11:

; 2654 : 	}
; 2655 : 
; 2656 : 	if(uiVersion < 4)

	cmp	DWORD PTR _uiVersion$[esp+360], 4
	jae	SHORT $LN19@operator@11

; 2657 : 	{
; 2658 : 		loadFrom >> iMinFaith;

	lea	eax, DWORD PTR _iMinFaith$[esp+360]
	push	eax
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
$LN19@operator@11:

; 2659 : 		//	writeTo.SetMinimumFaithNextGreatProphet(iMinFaith);  -- eliminated in Version 4
; 2660 : 	}
; 2661 : 
; 2662 : 	if(uiVersion >= 2)

	cmp	DWORD PTR _uiVersion$[esp+360], 2
	jb	$LN31@operator@11
	push	ebx

; 2663 : 	{
; 2664 : 		int iEntriesToRead;
; 2665 : 		CvReligion tempItem;

	or	ebx, -1
	push	edi
	lea	ecx, DWORD PTR _tempItem$226351[esp+520]
	mov	DWORD PTR _tempItem$226351[esp+368], ebx
	mov	DWORD PTR _tempItem$226351[esp+372], ebx
	mov	DWORD PTR _tempItem$226351[esp+376], ebx
	mov	DWORD PTR _tempItem$226351[esp+380], ebx
	mov	DWORD PTR _tempItem$226351[esp+384], ebx
	mov	BYTE PTR _tempItem$226351[esp+388], 0
	mov	BYTE PTR _tempItem$226351[esp+389], 0
	call	??0CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::CvReligionBeliefs
	push	128					; 00000080H
	xor	edi, edi
	lea	ecx, DWORD PTR _tempItem$226351[esp+394]
	push	edi
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 2666 : 
; 2667 : 		writeTo.m_CurrentReligions.clear();

	mov	ecx, ebp
	mov	DWORD PTR __$EHRec$[esp+376], edi
	call	?clear@?$BaseVector@VCvReligion@@$0A@@@QAEXXZ ; BaseVector<CvReligion,0>::clear

; 2668 : 		loadFrom >> iEntriesToRead;

	lea	edx, DWORD PTR _iEntriesToRead$226350[esp+368]
	push	edx
	mov	ecx, esi
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 2669 : 		for(int iI = 0; iI < iEntriesToRead; iI++)

	cmp	DWORD PTR _iEntriesToRead$226350[esp+368], edi
	jle	SHORT $LN1@operator@11
	npad	7
$LL3@operator@11:

; 2670 : 		{
; 2671 : 			loadFrom >> tempItem;

	lea	eax, DWORD PTR _tempItem$226351[esp+368]
	push	eax
	push	esi
	call	??5@YAAAVFDataStream@@AAV0@AAVCvReligion@@@Z ; operator>>
	add	esp, 8

; 2672 : 			writeTo.m_CurrentReligions.push_back(tempItem);

	lea	ecx, DWORD PTR _tempItem$226351[esp+368]
	push	ecx
	mov	ecx, ebp
	call	?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z ; FStaticVector<CvReligion,16,0,297,0>::push_back
	inc	edi
	cmp	edi, DWORD PTR _iEntriesToRead$226350[esp+368]
	jl	SHORT $LL3@operator@11
$LN1@operator@11:

; 2673 : 		}
; 2674 : 	}

	lea	ecx, DWORD PTR _tempItem$226351[esp+520]
	mov	DWORD PTR __$EHRec$[esp+376], ebx
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	pop	edi
	pop	ebx
$LN31@operator@11:

; 2675 : 
; 2676 : 	return loadFrom;
; 2677 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+360]
	mov	eax, esi
	pop	esi
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	add	esp, 352				; 00000160H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z$0:
	lea	ecx, DWORD PTR _tempItem$226351[ebp]
	jmp	??1CvReligion@@QAE@XZ
__ehhandler$??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z:
	mov	eax, OFFSET __ehfuncinfo$??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??5@YAAAVFDataStream@@AAV0@AAVCvGameReligions@@@Z ENDP	; operator>>
PUBLIC	?DoReligionFounded@CvCityReligions@@QAEXW4ReligionTypes@@@Z ; CvCityReligions::DoReligionFounded
; Function compile flags: /Ogtpy
;	COMDAT ?DoReligionFounded@CvCityReligions@@QAEXW4ReligionTypes@@@Z
_TEXT	SEGMENT
_newReligion$ = -24					; size = 24
_eReligion$ = 8						; size = 4
?DoReligionFounded@CvCityReligions@@QAEXW4ReligionTypes@@@Z PROC ; CvCityReligions::DoReligionFounded, COMDAT
; _this$ = ecx

; 3751 : {

	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	esi, ecx

; 3752 : 	int iInitialPressure;
; 3753 : 	ReligionTypes eOldMajorityReligion = GetReligiousMajority();

	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority

; 3754 : 
; 3755 : 	iInitialPressure = GC.getRELIGION_INITIAL_FOUNDING_CITY_PRESSURE() * m_pCity->getPopulation();

	mov	ecx, DWORD PTR [esi+416]
	mov	ebx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7892
	mov	edi, eax

; 3756 : 	CvReligionInCity newReligion(eReligion, true, 0, iInitialPressure);

	mov	eax, DWORD PTR _eReligion$[esp+32]
	mov	DWORD PTR _newReligion$[esp+36], eax
	mov	BYTE PTR _newReligion$[esp+40], 1
	mov	DWORD PTR _newReligion$[esp+44], 0
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	imul	eax, ebx

; 3757 : 	m_ReligionStatus.push_back(newReligion);

	lea	ecx, DWORD PTR _newReligion$[esp+36]
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR _newReligion$[esp+52], eax
	mov	DWORD PTR _newReligion$[esp+56], 0
	mov	DWORD PTR _newReligion$[esp+60], 0
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back

; 3758 : 
; 3759 : 	RecomputeFollowers(FOLLOWER_CHANGE_RELIGION_FOUNDED, eOldMajorityReligion);

	push	-1
	push	edi
	push	3
	mov	ecx, esi
	call	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers
	pop	edi
	pop	esi
	pop	ebx

; 3760 : }

	add	esp, 24					; 00000018H
	ret	4
?DoReligionFounded@CvCityReligions@@QAEXW4ReligionTypes@@@Z ENDP ; CvCityReligions::DoReligionFounded
_TEXT	ENDS
PUBLIC	?AddProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@HW4PlayerTypes@@@Z ; CvCityReligions::AddProphetSpread
; Function compile flags: /Ogtpy
;	COMDAT ?AddProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@HW4PlayerTypes@@@Z
_TEXT	SEGMENT
_bProphetsReligionFoundedHere$ = -45			; size = 1
_ePressureRetainedReligion$ = -44			; size = 4
_iAtheismPressure$ = -40				; size = 4
_iReligionPressure$ = -36				; size = 4
_eHolyCityReligion$ = -32				; size = 4
_eOldMajorityReligion$ = -28				; size = 4
_pressureRetainedReligion$226888 = -24			; size = 24
_holyCityReligion$226886 = -24				; size = 24
_holyCityReligion$226884 = -24				; size = 24
_prophetReligion$ = -24					; size = 24
_atheism$ = -24						; size = 24
_eReligion$ = 8						; size = 4
_iPressure$ = 12					; size = 4
_eResponsiblePlayer$ = 16				; size = 4
?AddProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@HW4PlayerTypes@@@Z PROC ; CvCityReligions::AddProphetSpread, COMDAT
; _this$ = ecx

; 3764 : {

	sub	esp, 48					; 00000030H
	push	ebx
	push	ebp
	push	esi

; 3765 : 	int iAtheismPressure = 0;

	xor	ebx, ebx
	push	edi
	mov	esi, ecx
	mov	DWORD PTR _iAtheismPressure$[esp+64], ebx

; 3766 : 	int iReligionPressure = 0;

	mov	DWORD PTR _iReligionPressure$[esp+64], ebx

; 3767 : 	int iPressureRetained = 0;

	xor	ebp, ebp

; 3768 : 	ReligionTypes eOldMajorityReligion = GetReligiousMajority();

	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority

; 3769 : 	ReligionTypes eHolyCityReligion = NO_RELIGION;
; 3770 : 	ReligionTypes ePressureRetainedReligion = NO_RELIGION;
; 3771 : 	bool bProphetsReligionFoundedHere = false;
; 3772 : 
; 3773 : 	ReligionInCityList::iterator it;
; 3774 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3775 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 3776 : #else
; 3777 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	edi, DWORD PTR [esi]
	mov	DWORD PTR _eOldMajorityReligion$[esp+64], eax
	or	eax, -1
	mov	DWORD PTR _eHolyCityReligion$[esp+64], eax
	mov	DWORD PTR _ePressureRetainedReligion$[esp+64], eax
	mov	eax, DWORD PTR [esi+4]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	ecx, DWORD PTR [edi+eax*8]
	mov	BYTE PTR _bProphetsReligionFoundedHere$[esp+64], bl
	cmp	edi, ecx
	je	$LN13@AddProphet
$LL64@AddProphet:

; 3778 : #endif
; 3779 : 	{
; 3780 : 		if (it->m_eReligion == NO_RELIGION)

	mov	eax, DWORD PTR [edi]
	cmp	eax, -1
	jne	SHORT $LN12@AddProphet

; 3781 : 		{
; 3782 : 			iAtheismPressure = it->m_iPressure;

	mov	edx, DWORD PTR [edi+12]
	mov	DWORD PTR _iAtheismPressure$[esp+64], edx
	jmp	SHORT $LN7@AddProphet
$LN12@AddProphet:

; 3783 : 		}
; 3784 : 		else if (eReligion == it->m_eReligion)

	cmp	DWORD PTR _eReligion$[esp+60], eax
	jne	SHORT $LN10@AddProphet

; 3785 : 		{
; 3786 : 			iReligionPressure = it->m_iPressure;

	mov	ecx, DWORD PTR [edi+12]
	mov	DWORD PTR _iReligionPressure$[esp+64], ecx

; 3787 : 			if (it->m_bFoundedHere)

	cmp	BYTE PTR [edi+4], bl
	je	SHORT $LN7@AddProphet

; 3788 : 			{
; 3789 : 				bProphetsReligionFoundedHere = true;

	mov	BYTE PTR _bProphetsReligionFoundedHere$[esp+64], 1

; 3790 : 			}
; 3791 : 		}

	jmp	SHORT $LN7@AddProphet
$LN10@AddProphet:

; 3792 : 		else if (it->m_bFoundedHere)

	cmp	BYTE PTR [edi+4], bl
	je	SHORT $LN7@AddProphet

; 3793 : 		{
; 3794 : 			eHolyCityReligion = it->m_eReligion;

	mov	DWORD PTR _eHolyCityReligion$[esp+64], eax
$LN7@AddProphet:

; 3795 : 		}
; 3796 : 
; 3797 : 		if (it->m_eReligion > RELIGION_PANTHEON &&  it->m_eReligion != eReligion)

	cmp	eax, ebx
	jle	SHORT $LN14@AddProphet
	cmp	eax, DWORD PTR _eReligion$[esp+60]
	je	SHORT $LN14@AddProphet

; 3798 : 		{
; 3799 : 			const CvReligion *pReligion = GC.getGame().GetGameReligions()->GetReligion(it->m_eReligion, NO_PLAYER);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	-1
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 3800 : 			int iPressureRetention = pReligion->m_Beliefs.GetInquisitorPressureRetention();  // Normally 0

	mov	eax, DWORD PTR [eax+268]

; 3801 : 			if (iPressureRetention > 0)

	cmp	eax, ebx
	jle	SHORT $LN14@AddProphet

; 3802 : 			{
; 3803 : 				ePressureRetainedReligion = it->m_eReligion;
; 3804 : 				iPressureRetained = it->m_iPressure * iPressureRetention / 100;

	mov	ecx, DWORD PTR [edi+12]
	mov	edx, DWORD PTR [edi]
	imul	ecx, eax
	mov	DWORD PTR _ePressureRetainedReligion$[esp+64], edx
	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	ebp, edx
	shr	ebp, 31					; 0000001fH
	add	ebp, edx
$LN14@AddProphet:
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	lea	eax, DWORD PTR [eax+eax*2]
	add	edi, 24					; 00000018H
	lea	edx, DWORD PTR [ecx+eax*8]
	cmp	edi, edx
	jne	$LL64@AddProphet
$LN13@AddProphet:

; 3805 : 			}
; 3806 : 		}
; 3807 : 	}
; 3808 : 
; 3809 : 	// Clear list
; 3810 : 	m_ReligionStatus.clear();
; 3811 : 
; 3812 : 	// Add atheists and this back in
; 3813 : 	CvReligionInCity atheism(NO_RELIGION, false/*bFoundedHere*/, 0, iAtheismPressure);

	or	edi, -1
	mov	DWORD PTR [esi+4], ebx
	mov	BYTE PTR _atheism$[esp+68], bl

; 3814 : 	m_ReligionStatus.push_back(atheism);

	mov	BYTE PTR [esi+204], bl
	cmp	DWORD PTR [esi+8], ebx
	jne	SHORT $LN36@AddProphet
	push	0
	mov	ecx, esi
	call	?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize
$LN36@AddProphet:
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]
	test	eax, eax
	je	SHORT $LN39@AddProphet
	mov	edx, DWORD PTR _atheism$[esp+68]
	mov	ecx, DWORD PTR _iAtheismPressure$[esp+64]
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], ecx
$LN39@AddProphet:

; 3815 : 	CvReligionInCity prophetReligion(eReligion, bProphetsReligionFoundedHere, 0, iReligionPressure + iPressure);

	mov	dl, BYTE PTR _bProphetsReligionFoundedHere$[esp+64]
	mov	eax, DWORD PTR _iPressure$[esp+60]
	inc	DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+4]
	mov	BYTE PTR _prophetReligion$[esp+68], dl
	mov	edx, DWORD PTR _iReligionPressure$[esp+64]
	lea	ebx, DWORD PTR [edx+eax]

; 3816 : 	m_ReligionStatus.push_back(prophetReligion);

	mov	eax, DWORD PTR [esi+8]
	xor	edx, edx
	xor	edi, edi
	mov	BYTE PTR [esi+204], dl
	cmp	ecx, eax
	jne	SHORT $LN45@AddProphet
	push	eax
	mov	ecx, esi
	call	?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize
	xor	edx, edx
$LN45@AddProphet:
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]
	cmp	eax, edx
	je	SHORT $LN48@AddProphet
	mov	ecx, DWORD PTR _eReligion$[esp+60]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _prophetReligion$[esp+68]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], edi
	xor	ecx, ecx
	mov	DWORD PTR [eax+12], ebx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], ecx
$LN48@AddProphet:

; 3817 : 
; 3818 : 	// Reestablish Holy City religion
; 3819 : 	if (eHolyCityReligion != NO_RELIGION && !bProphetsReligionFoundedHere)

	mov	edi, DWORD PTR _eHolyCityReligion$[esp+64]
	inc	DWORD PTR [esi+4]
	cmp	edi, -1
	je	SHORT $LN62@AddProphet
	cmp	BYTE PTR _bProphetsReligionFoundedHere$[esp+64], 0
	jne	SHORT $LN62@AddProphet

; 3820 : 	{
; 3821 : 		if (eHolyCityReligion == ePressureRetainedReligion)

	mov	ebx, DWORD PTR _ePressureRetainedReligion$[esp+64]

; 3822 : 		{
; 3823 : 			CvReligionInCity holyCityReligion(eHolyCityReligion, true/*bFoundedHere*/, 0, iPressureRetained);

	mov	DWORD PTR _holyCityReligion$226884[esp+64], edi
	mov	BYTE PTR _holyCityReligion$226884[esp+68], 1
	mov	DWORD PTR _holyCityReligion$226884[esp+72], edx
	mov	DWORD PTR _holyCityReligion$226884[esp+80], edx
	mov	DWORD PTR _holyCityReligion$226884[esp+84], edx

; 3824 : 			m_ReligionStatus.push_back(holyCityReligion);			

	mov	ecx, esi
	cmp	edi, ebx
	jne	SHORT $LN3@AddProphet
	lea	edx, DWORD PTR _holyCityReligion$226884[esp+64]
	push	edx
	mov	DWORD PTR _holyCityReligion$226884[esp+80], ebp
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back

; 3825 : 		}
; 3826 : 		else

	xor	edx, edx
	jmp	SHORT $LN2@AddProphet
$LN3@AddProphet:

; 3827 : 		{
; 3828 : 			CvReligionInCity holyCityReligion(eHolyCityReligion, true/*bFoundedHere*/, 0, 0);
; 3829 : 			m_ReligionStatus.push_back(holyCityReligion);

	lea	eax, DWORD PTR _holyCityReligion$226886[esp+64]
	push	eax
	mov	DWORD PTR _holyCityReligion$226886[esp+80], edx
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back
	xor	edx, edx
	jmp	SHORT $LN2@AddProphet
$LN62@AddProphet:

; 3825 : 		}
; 3826 : 		else

	mov	ebx, DWORD PTR _ePressureRetainedReligion$[esp+64]
$LN2@AddProphet:

; 3830 : 		}
; 3831 : 	}
; 3832 : 
; 3833 : 	// Reestablish pressure-retained religion (if wasn't Holy City religion)
; 3834 : 	if (ePressureRetainedReligion != NO_RELIGION && eHolyCityReligion != ePressureRetainedReligion)

	cmp	ebx, -1
	je	SHORT $LN1@AddProphet
	cmp	edi, ebx
	je	SHORT $LN1@AddProphet

; 3835 : 	{
; 3836 : 		CvReligionInCity pressureRetainedReligion(ePressureRetainedReligion, false/*bFoundedHere*/, 0, iPressureRetained);
; 3837 : 		m_ReligionStatus.push_back(pressureRetainedReligion);

	lea	ecx, DWORD PTR _pressureRetainedReligion$226888[esp+64]
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR _pressureRetainedReligion$226888[esp+68], ebx
	mov	BYTE PTR _pressureRetainedReligion$226888[esp+72], 0
	mov	DWORD PTR _pressureRetainedReligion$226888[esp+76], edx
	mov	DWORD PTR _pressureRetainedReligion$226888[esp+80], ebp
	mov	DWORD PTR _pressureRetainedReligion$226888[esp+84], edx
	mov	DWORD PTR _pressureRetainedReligion$226888[esp+88], edx
	call	?push_back@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEIABVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::push_back
$LN1@AddProphet:

; 3838 : 	}
; 3839 : 
; 3840 : 	RecomputeFollowers(FOLLOWER_CHANGE_PROPHET, eOldMajorityReligion, eResponsiblePlayer);

	mov	edx, DWORD PTR _eResponsiblePlayer$[esp+60]
	mov	eax, DWORD PTR _eOldMajorityReligion$[esp+64]
	push	edx
	push	eax
	push	7
	mov	ecx, esi
	call	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3841 : }

	add	esp, 48					; 00000030H
	ret	12					; 0000000cH
?AddProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@HW4PlayerTypes@@@Z ENDP ; CvCityReligions::AddProphetSpread
_TEXT	ENDS
PUBLIC	?AddReligiousPressure@CvCityReligions@@QAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@HW4PlayerTypes@@@Z ; CvCityReligions::AddReligiousPressure
; Function compile flags: /Ogtpy
;	COMDAT ?AddReligiousPressure@CvCityReligions@@QAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@HW4PlayerTypes@@@Z
_TEXT	SEGMENT
$T243630 = -36						; size = 4
$T243627 = -36						; size = 4
$T243629 = -32						; size = 4
$T243628 = -32						; size = 4
_eOldMajorityReligion$ = -28				; size = 4
_newReligion$226916 = -24				; size = 24
_eReason$ = 8						; size = 4
_eReligion$ = 12					; size = 4
_iPressure$ = 16					; size = 4
_eResponsiblePlayer$ = 20				; size = 4
?AddReligiousPressure@CvCityReligions@@QAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@HW4PlayerTypes@@@Z PROC ; CvCityReligions::AddReligiousPressure, COMDAT
; _this$ = ecx

; 3845 : {

	sub	esp, 36					; 00000024H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx

; 3846 : 	bool bFoundIt = false;

	xor	bl, bl

; 3847 : 
; 3848 : 	ReligionTypes eOldMajorityReligion = GetReligiousMajority();

	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority

; 3849 : 
; 3850 : 	ReligionInCityList::iterator it;
; 3851 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3852 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 3853 : #else
; 3854 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	esi, DWORD PTR [edi]
	mov	DWORD PTR _eOldMajorityReligion$[esp+52], eax
	mov	eax, DWORD PTR [edi+4]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	ecx, DWORD PTR [esi+eax*8]
	cmp	esi, ecx
	je	$LN40@AddReligio
$LL10@AddReligio:

; 3855 : #endif
; 3856 : 	{
; 3857 : 		if(it->m_eReligion == eReligion)

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR _eReligion$[esp+48]
	cmp	eax, ecx
	jne	SHORT $LN7@AddReligio

; 3858 : 		{
; 3859 : 			it->m_iPressure += iPressure;

	mov	edx, DWORD PTR _iPressure$[esp+48]
	add	DWORD PTR [esi+12], edx

; 3860 : 			bFoundIt = true;

	mov	bl, 1
	jmp	$LN9@AddReligio
$LN7@AddReligio:

; 3861 : 		}
; 3862 : 
; 3863 : 		//  If this is pressure from a real religion, reduce presence of pantheon by the same amount
; 3864 : 		else if(eReligion > RELIGION_PANTHEON && it->m_eReligion == RELIGION_PANTHEON)

	xor	ebp, ebp
	cmp	ecx, ebp
	jle	SHORT $LN5@AddReligio
	cmp	eax, ebp
	jne	SHORT $LN42@AddReligio

; 3865 : 		{
; 3866 : 			it->m_iPressure = max(0, (it->m_iPressure - iPressure));

	mov	eax, DWORD PTR [esi+12]
	sub	eax, DWORD PTR _iPressure$[esp+48]
	mov	DWORD PTR $T243628[esp+52], ebp
	mov	DWORD PTR $T243627[esp+52], eax
	cmp	eax, ebp
	lea	eax, DWORD PTR $T243627[esp+52]
	jg	SHORT $LN20@AddReligio
	lea	eax, DWORD PTR $T243628[esp+52]
$LN20@AddReligio:
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi+12], eax
	jmp	SHORT $LN9@AddReligio
$LN5@AddReligio:

; 3867 : 		}
; 3868 : 
; 3869 : 		else if (it->m_eReligion > RELIGION_PANTHEON && eReason == FOLLOWER_CHANGE_MISSIONARY)

	cmp	eax, ebp
$LN42@AddReligio:
	jle	SHORT $LN9@AddReligio
	cmp	DWORD PTR _eReason$[esp+48], 6
	jne	SHORT $LN9@AddReligio

; 3870 : 		{
; 3871 : 			const CvReligion *pReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, NO_PLAYER);

	push	-1
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 3872 : 			int iPressureErosion = pReligion->m_Beliefs.GetOtherReligionPressureErosion();  // Normally 0

	mov	eax, DWORD PTR [eax+260]

; 3873 : 			if (iPressureErosion > 0)

	cmp	eax, ebp
	jle	SHORT $LN9@AddReligio

; 3874 : 			{
; 3875 : 				int iErosionAmount = iPressureErosion * iPressure / 100;

	imul	eax, DWORD PTR _iPressure$[esp+48]
	mov	ecx, eax
	mov	eax, 1374389535				; 51eb851fH
	imul	ecx

; 3876 : 				it->m_iPressure = max(0, (it->m_iPressure - iErosionAmount));

	mov	eax, DWORD PTR [esi+12]
	sar	edx, 5
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	sub	eax, ecx
	mov	DWORD PTR $T243629[esp+52], eax
	cmp	eax, ebp
	mov	DWORD PTR $T243630[esp+52], ebp
	lea	eax, DWORD PTR $T243629[esp+52]
	jg	SHORT $LN28@AddReligio
	lea	eax, DWORD PTR $T243630[esp+52]
$LN28@AddReligio:
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [esi+12], edx
$LN9@AddReligio:
	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi]
	lea	eax, DWORD PTR [eax+eax*2]
	add	esi, 24					; 00000018H
	lea	edx, DWORD PTR [ecx+eax*8]
	cmp	esi, edx
	jne	$LL10@AddReligio

; 3877 : 			}
; 3878 : 		}
; 3879 : 	}
; 3880 : 
; 3881 : 	// Didn't find it, add new entry
; 3882 : 	if(!bFoundIt)

	test	bl, bl
	jne	SHORT $LN32@AddReligio
$LN40@AddReligio:

; 3883 : 	{
; 3884 : 		CvReligionInCity newReligion(eReligion, false, 0, iPressure);
; 3885 : 		m_ReligionStatus.push_back(newReligion);

	mov	eax, DWORD PTR [edi+8]
	xor	esi, esi
	xor	ebx, ebx
	xor	ebp, ebp
	mov	BYTE PTR _newReligion$226916[esp+56], 0
	mov	BYTE PTR [edi+204], 0
	cmp	DWORD PTR [edi+4], eax
	jne	SHORT $LN31@AddReligio
	push	eax
	mov	ecx, edi
	call	?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize
$LN31@AddReligio:
	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]
	test	eax, eax
	je	SHORT $LN34@AddReligio
	mov	edx, DWORD PTR _eReligion$[esp+48]
	mov	ecx, DWORD PTR _newReligion$226916[esp+56]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR _iPressure$[esp+48]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax+16], ebx
	mov	DWORD PTR [eax+20], ebp
$LN34@AddReligio:
	inc	DWORD PTR [edi+4]
$LN32@AddReligio:

; 3886 : 	}
; 3887 : 
; 3888 : 	RecomputeFollowers(eReason, eOldMajorityReligion, eResponsiblePlayer);

	mov	eax, DWORD PTR _eResponsiblePlayer$[esp+48]
	mov	ecx, DWORD PTR _eOldMajorityReligion$[esp+52]
	mov	edx, DWORD PTR _eReason$[esp+48]
	push	eax
	push	ecx
	push	edx
	mov	ecx, edi
	call	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3889 : }

	add	esp, 36					; 00000024H
	ret	16					; 00000010H
?AddReligiousPressure@CvCityReligions@@QAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@HW4PlayerTypes@@@Z ENDP ; CvCityReligions::AddReligiousPressure
_TEXT	ENDS
PUBLIC	?SimulateProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::SimulateProphetSpread
; Function compile flags: /Ogtpy
;	COMDAT ?SimulateProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@H@Z
_TEXT	SEGMENT
_ePressureRetainedReligion$ = -40			; size = 4
_iAtheismPressure$ = -36				; size = 4
_iReligionPressure$ = -32				; size = 4
_this$ = -28						; size = 4
_pressureRetainedReligion$226940 = -24			; size = 24
_prophetReligion$ = -24					; size = 24
_atheism$ = -24						; size = 24
_eReligion$ = 8						; size = 4
_iPressure$ = 12					; size = 4
?SimulateProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@H@Z PROC ; CvCityReligions::SimulateProphetSpread, COMDAT
; _this$ = ecx

; 3893 : {

	sub	esp, 40					; 00000028H
	push	ebx
	push	ebp
	push	esi
	mov	esi, ecx

; 3894 : 	int iAtheismPressure = 0;

	xor	ebx, ebx
	push	edi
	mov	DWORD PTR _this$[esp+56], esi
	mov	DWORD PTR _iAtheismPressure$[esp+56], ebx

; 3895 : 	int iReligionPressure = 0;

	mov	DWORD PTR _iReligionPressure$[esp+56], ebx

; 3896 : 	int iPressureRetained = 0;

	xor	ebp, ebp

; 3897 : 	ReligionTypes ePressureRetainedReligion = NO_RELIGION;

	mov	DWORD PTR _ePressureRetainedReligion$[esp+56], -1

; 3898 : 
; 3899 : 	CopyToSimulatedStatus();

	call	?CopyToSimulatedStatus@CvCityReligions@@AAEXXZ ; CvCityReligions::CopyToSimulatedStatus

; 3900 : 
; 3901 : 	ReligionInCityList::iterator it;
; 3902 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3903 : 	for (it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); ++it)
; 3904 : #else
; 3905 : 	for(it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); it++)

	mov	edi, DWORD PTR [esi+208]
	mov	eax, DWORD PTR [esi+212]
	add	esi, 208				; 000000d0H
	lea	eax, DWORD PTR [eax+eax*2]
	mov	ecx, edi
	lea	edx, DWORD PTR [ecx+eax*8]
	cmp	edi, edx
	je	SHORT $LN60@SimulatePr
$LL9@SimulatePr:

; 3906 : #endif
; 3907 : 	{
; 3908 : 		if(it->m_eReligion == NO_RELIGION)

	mov	eax, DWORD PTR [edi]
	cmp	eax, -1
	jne	SHORT $LN6@SimulatePr

; 3909 : 		{
; 3910 : 			iAtheismPressure = it->m_iPressure;

	mov	ecx, DWORD PTR [edi+12]
	mov	DWORD PTR _iAtheismPressure$[esp+56], ecx
	jmp	SHORT $LN4@SimulatePr
$LN6@SimulatePr:

; 3911 : 		}
; 3912 : 		else if(eReligion == it->m_eReligion)

	cmp	DWORD PTR _eReligion$[esp+52], eax
	jne	SHORT $LN4@SimulatePr

; 3913 : 		{
; 3914 : 			iReligionPressure = it->m_iPressure;

	mov	edx, DWORD PTR [edi+12]
	mov	DWORD PTR _iReligionPressure$[esp+56], edx
$LN4@SimulatePr:

; 3915 : 		}
; 3916 : 
; 3917 : 		if (it->m_eReligion > RELIGION_PANTHEON && eReligion != it->m_eReligion)

	cmp	eax, ebx
	jle	SHORT $LN8@SimulatePr
	cmp	DWORD PTR _eReligion$[esp+52], eax
	je	SHORT $LN8@SimulatePr

; 3918 : 		{
; 3919 : 			const CvReligion *pReligion = GC.getGame().GetGameReligions()->GetReligion(it->m_eReligion, NO_PLAYER);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	-1
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 3920 : 			int iPressureRetention = pReligion->m_Beliefs.GetInquisitorPressureRetention();  // Normally 0

	mov	eax, DWORD PTR [eax+268]

; 3921 : 			if (iPressureRetention > 0)

	cmp	eax, ebx
	jle	SHORT $LN8@SimulatePr

; 3922 : 			{
; 3923 : 				ePressureRetainedReligion = it->m_eReligion;

	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR _ePressureRetainedReligion$[esp+56], ecx

; 3924 : 				iPressureRetained = it->m_iPressure * iPressureRetention / 100;

	mov	ecx, DWORD PTR [edi+12]
	imul	ecx, eax
	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	ebp, edx
	shr	ebp, 31					; 0000001fH
	add	ebp, edx
$LN8@SimulatePr:
	mov	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR [esi]
	add	edi, 24					; 00000018H
	lea	ecx, DWORD PTR [eax+edx*8]
	cmp	edi, ecx
	jne	SHORT $LL9@SimulatePr
$LN60@SimulatePr:

; 3925 : 			}
; 3926 : 		}
; 3927 : 	}
; 3928 : 
; 3929 : 	// Clear list
; 3930 : 	m_SimulatedStatus.clear();

	mov	DWORD PTR [esi+4], ebx

; 3931 : 
; 3932 : 	// Add atheists and this back in
; 3933 : 	CvReligionInCity atheism(NO_RELIGION, false, 0, iAtheismPressure);
; 3934 : 	m_SimulatedStatus.push_back(atheism);

	mov	eax, DWORD PTR [esi+8]
	or	edi, -1
	mov	BYTE PTR _atheism$[esp+60], bl
	mov	BYTE PTR [esi+204], bl
	cmp	DWORD PTR [esi+4], eax
	jne	SHORT $LN30@SimulatePr
	push	eax
	mov	ecx, esi
	call	?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize
$LN30@SimulatePr:
	mov	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR [esi]
	lea	eax, DWORD PTR [eax+edx*8]
	test	eax, eax
	je	SHORT $LN33@SimulatePr
	mov	ecx, DWORD PTR _atheism$[esp+60]
	mov	edx, DWORD PTR _iAtheismPressure$[esp+56]
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ebx
	xor	ecx, ecx
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], ecx
$LN33@SimulatePr:

; 3935 : 	CvReligionInCity prophetReligion(eReligion, false, 0, iReligionPressure + iPressure);

	mov	eax, DWORD PTR _iPressure$[esp+52]
	inc	DWORD PTR [esi+4]
	mov	ecx, DWORD PTR _iReligionPressure$[esp+56]
	mov	BYTE PTR _prophetReligion$[esp+60], bl
	lea	ebx, DWORD PTR [ecx+eax]

; 3936 : 	m_SimulatedStatus.push_back(prophetReligion);

	mov	eax, DWORD PTR [esi+8]
	xor	edi, edi
	mov	BYTE PTR [esi+204], 0
	cmp	DWORD PTR [esi+4], eax
	jne	SHORT $LN39@SimulatePr
	push	eax
	mov	ecx, esi
	call	?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize
$LN39@SimulatePr:
	mov	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR [esi]
	lea	eax, DWORD PTR [eax+edx*8]
	test	eax, eax
	je	SHORT $LN42@SimulatePr
	mov	ecx, DWORD PTR _eReligion$[esp+52]
	mov	edx, DWORD PTR _prophetReligion$[esp+60]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], edi
	xor	ecx, ecx
	mov	DWORD PTR [eax+12], ebx
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], ecx
$LN42@SimulatePr:
	inc	DWORD PTR [esi+4]

; 3937 : 
; 3938 : 	if (ePressureRetainedReligion != NO_RELIGION)

	cmp	DWORD PTR _ePressureRetainedReligion$[esp+56], -1
	je	SHORT $LN49@SimulatePr

; 3939 : 	{
; 3940 : 		CvReligionInCity pressureRetainedReligion(ePressureRetainedReligion, false, 0, iPressureRetained);
; 3941 : 		m_SimulatedStatus.push_back(pressureRetainedReligion);

	mov	eax, DWORD PTR [esi+8]
	xor	ebx, ebx
	xor	edi, edi
	mov	BYTE PTR _pressureRetainedReligion$226940[esp+60], 0
	mov	BYTE PTR [esi+204], bl
	cmp	DWORD PTR [esi+4], eax
	jne	SHORT $LN48@SimulatePr
	push	eax
	mov	ecx, esi
	call	?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize
$LN48@SimulatePr:
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]
	test	eax, eax
	je	SHORT $LN51@SimulatePr
	mov	edx, DWORD PTR _ePressureRetainedReligion$[esp+56]
	mov	ecx, DWORD PTR _pressureRetainedReligion$226940[esp+60]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], edi
	mov	DWORD PTR [eax+12], ebp
	xor	ecx, ecx
	mov	DWORD PTR [eax+16], ebx
	mov	DWORD PTR [eax+20], ecx
$LN51@SimulatePr:
	inc	DWORD PTR [esi+4]
$LN49@SimulatePr:

; 3942 : 
; 3943 : 	}
; 3944 : 
; 3945 : 	SimulateFollowers();

	mov	ecx, DWORD PTR _this$[esp+56]
	call	?SimulateFollowers@CvCityReligions@@AAEXXZ ; CvCityReligions::SimulateFollowers
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3946 : }

	add	esp, 40					; 00000028H
	ret	8
?SimulateProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ENDP ; CvCityReligions::SimulateProphetSpread
_TEXT	ENDS
PUBLIC	?SimulateReligiousPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::SimulateReligiousPressure
; Function compile flags: /Ogtpy
;	COMDAT ?SimulateReligiousPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z
_TEXT	SEGMENT
_bFoundIt$ = -37					; size = 1
$T243790 = -36						; size = 4
$T243787 = -36						; size = 4
$T243789 = -32						; size = 4
$T243788 = -32						; size = 4
_this$ = -28						; size = 4
_newReligion$226965 = -24				; size = 24
_eReligion$ = 8						; size = 4
_iPressure$ = 12					; size = 4
?SimulateReligiousPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z PROC ; CvCityReligions::SimulateReligiousPressure, COMDAT
; _this$ = ecx

; 3950 : {

	sub	esp, 40					; 00000028H
	push	ebx
	push	ebp
	push	esi
	mov	ebx, ecx
	push	edi
	mov	DWORD PTR _this$[esp+56], ebx

; 3951 : 	bool bFoundIt = false;

	mov	BYTE PTR _bFoundIt$[esp+56], 0

; 3952 : 
; 3953 : 	CopyToSimulatedStatus();

	call	?CopyToSimulatedStatus@CvCityReligions@@AAEXXZ ; CvCityReligions::CopyToSimulatedStatus

; 3954 : 
; 3955 : 	ReligionInCityList::iterator it;
; 3956 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 3957 : 	for (it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); ++it)
; 3958 : #else
; 3959 : 	for(it = m_SimulatedStatus.begin(); it != m_SimulatedStatus.end(); it++)

	mov	esi, DWORD PTR [ebx+208]
	mov	eax, DWORD PTR [ebx+212]
	lea	edi, DWORD PTR [ebx+208]
	lea	eax, DWORD PTR [eax+eax*2]
	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+eax*8]
	cmp	esi, edx
	je	$LN40@SimulateRe
	npad	7
$LL10@SimulateRe:

; 3960 : #endif
; 3961 : 	{
; 3962 : 		if(it->m_eReligion == eReligion)

	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR _eReligion$[esp+52]
	cmp	eax, ecx
	jne	SHORT $LN7@SimulateRe

; 3963 : 		{
; 3964 : 			it->m_iPressure += iPressure;

	mov	eax, DWORD PTR _iPressure$[esp+52]
	add	DWORD PTR [esi+12], eax

; 3965 : 			bFoundIt = true;

	mov	BYTE PTR _bFoundIt$[esp+56], 1
	jmp	$LN9@SimulateRe
$LN7@SimulateRe:

; 3966 : 		}
; 3967 : 
; 3968 : 		//  If this is pressure from a real religion, reduce presence of pantheon by the same amount
; 3969 : 		else if(eReligion > RELIGION_PANTHEON && it->m_eReligion == RELIGION_PANTHEON)

	xor	ebp, ebp
	cmp	ecx, ebp
	jle	SHORT $LN5@SimulateRe
	cmp	eax, ebp
	jne	SHORT $LN41@SimulateRe

; 3970 : 		{
; 3971 : 			it->m_iPressure = max(0, (it->m_iPressure - iPressure));

	mov	eax, DWORD PTR [esi+12]
	sub	eax, DWORD PTR _iPressure$[esp+52]
	mov	DWORD PTR $T243788[esp+56], ebp
	mov	DWORD PTR $T243787[esp+56], eax
	cmp	eax, ebp
	lea	eax, DWORD PTR $T243787[esp+56]
	jg	SHORT $LN20@SimulateRe
	lea	eax, DWORD PTR $T243788[esp+56]
$LN20@SimulateRe:
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [esi+12], ecx
	jmp	SHORT $LN9@SimulateRe
$LN5@SimulateRe:

; 3972 : 		}
; 3973 : 
; 3974 : 		else if (it->m_eReligion > RELIGION_PANTHEON)

	cmp	eax, ebp
$LN41@SimulateRe:
	jle	SHORT $LN9@SimulateRe

; 3975 : 		{
; 3976 : 			const CvReligion *pReligion = GC.getGame().GetGameReligions()->GetReligion(eReligion, NO_PLAYER);

	push	-1
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion

; 3977 : 			int iPressureErosion = pReligion->m_Beliefs.GetOtherReligionPressureErosion();  // Normally 0

	mov	eax, DWORD PTR [eax+260]

; 3978 : 			if (iPressureErosion > 0)

	cmp	eax, ebp
	jle	SHORT $LN9@SimulateRe

; 3979 : 			{
; 3980 : 				int iErosionAmount = iPressureErosion * iPressure / 100;

	imul	eax, DWORD PTR _iPressure$[esp+52]
	mov	ecx, eax
	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	ecx, eax

; 3981 : 				it->m_iPressure = max(0, (it->m_iPressure - iErosionAmount));

	mov	eax, DWORD PTR [esi+12]
	sub	eax, ecx
	mov	DWORD PTR $T243789[esp+56], eax
	cmp	eax, ebp
	mov	DWORD PTR $T243790[esp+56], ebp
	lea	eax, DWORD PTR $T243789[esp+56]
	jg	SHORT $LN28@SimulateRe
	lea	eax, DWORD PTR $T243790[esp+56]
$LN28@SimulateRe:
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [esi+12], edx
$LN9@SimulateRe:
	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi]
	lea	eax, DWORD PTR [eax+eax*2]
	add	esi, 24					; 00000018H
	lea	edx, DWORD PTR [ecx+eax*8]
	cmp	esi, edx
	jne	$LL10@SimulateRe

; 3982 : 			}
; 3983 : 		}
; 3984 : 	}
; 3985 : 
; 3986 : 	// Didn't find it, add new entry
; 3987 : 	if(!bFoundIt)

	cmp	BYTE PTR _bFoundIt$[esp+56], 0
	jne	SHORT $LN32@SimulateRe
$LN40@SimulateRe:

; 3988 : 	{
; 3989 : 		CvReligionInCity newReligion(eReligion, false, 0, iPressure);
; 3990 : 		m_SimulatedStatus.push_back(newReligion);

	mov	eax, DWORD PTR [edi+8]
	xor	ebx, ebx
	xor	esi, esi
	xor	ebp, ebp
	mov	BYTE PTR _newReligion$226965[esp+60], 0
	mov	BYTE PTR [edi+204], bl
	cmp	DWORD PTR [edi+4], eax
	jne	SHORT $LN31@SimulateRe
	push	eax
	mov	ecx, edi
	call	?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize
$LN31@SimulateRe:
	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]
	test	eax, eax
	je	SHORT $LN34@SimulateRe
	mov	edx, DWORD PTR _eReligion$[esp+52]
	mov	ecx, DWORD PTR _newReligion$226965[esp+60]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR _iPressure$[esp+52]
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax+16], ebx
	mov	DWORD PTR [eax+20], ebp
$LN34@SimulateRe:
	inc	DWORD PTR [edi+4]
	mov	ebx, DWORD PTR _this$[esp+56]
$LN32@SimulateRe:

; 3991 : 	}
; 3992 : 
; 3993 : 	SimulateFollowers();

	mov	ecx, ebx
	call	?SimulateFollowers@CvCityReligions@@AAEXXZ ; CvCityReligions::SimulateFollowers
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3994 : }

	add	esp, 40					; 00000028H
	ret	8
?SimulateReligiousPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ENDP ; CvCityReligions::SimulateReligiousPressure
_TEXT	ENDS
PUBLIC	?ConvertPercentFollowers@CvCityReligions@@QAEXW4ReligionTypes@@0H@Z ; CvCityReligions::ConvertPercentFollowers
; Function compile flags: /Ogtpy
;	COMDAT ?ConvertPercentFollowers@CvCityReligions@@QAEXW4ReligionTypes@@0H@Z
_TEXT	SEGMENT
_eToReligion$ = 8					; size = 4
_eFromReligion$ = 12					; size = 4
_iPercent$ = 16						; size = 4
?ConvertPercentFollowers@CvCityReligions@@QAEXW4ReligionTypes@@0H@Z PROC ; CvCityReligions::ConvertPercentFollowers, COMDAT
; _this$ = ecx

; 3999 : 	int iPressureConverting = 0;
; 4000 : 
; 4001 : 	// Find old religion
; 4002 : 	ReligionInCityList::iterator it;
; 4003 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4004 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4005 : #else
; 4006 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	edx, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR [ecx]
	lea	edx, DWORD PTR [edx+edx*2]
	lea	edx, DWORD PTR [esi+edx*8]
	xor	eax, eax
	cmp	esi, edx
	je	SHORT $LN3@ConvertPer
	push	ebx
	mov	ebx, DWORD PTR _eFromReligion$[esp+4]
	push	ebp
	push	edi
	mov	edi, DWORD PTR _iPercent$[esp+12]
	npad	3
$LL14@ConvertPer:

; 4007 : #endif
; 4008 : 	{
; 4009 : 		if(it->m_eReligion == eFromReligion)

	cmp	DWORD PTR [esi], ebx
	jne	SHORT $LN4@ConvertPer

; 4010 : 		{
; 4011 : 			iPressureConverting = it->m_iPressure * iPercent / 100;

	mov	edx, DWORD PTR [esi+12]
	imul	edx, edi
	mov	eax, 1374389535				; 51eb851fH
	imul	edx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx

; 4012 : 			it->m_iPressure -= iPressureConverting;

	sub	DWORD PTR [esi+12], eax

; 4013 : 			if (it->m_iPressure < 0)

	jns	SHORT $LN4@ConvertPer

; 4014 : 			{
; 4015 : 				it->m_iPressure = 0;

	mov	DWORD PTR [esi+12], 0
$LN4@ConvertPer:

; 3999 : 	int iPressureConverting = 0;
; 4000 : 
; 4001 : 	// Find old religion
; 4002 : 	ReligionInCityList::iterator it;
; 4003 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4004 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4005 : #else
; 4006 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	edx, DWORD PTR [ecx+4]
	mov	ebp, DWORD PTR [ecx]
	lea	edx, DWORD PTR [edx+edx*2]
	add	esi, 24					; 00000018H
	lea	edx, DWORD PTR [ebp+edx*8]
	cmp	esi, edx
	jne	SHORT $LL14@ConvertPer
	pop	edi
	pop	ebp
	pop	ebx
$LN3@ConvertPer:

; 4016 : 			}
; 4017 : 		}
; 4018 : 	}
; 4019 : 	AddReligiousPressure(FOLLOWER_CHANGE_SCRIPTED_CONVERSION, eToReligion, iPressureConverting, NO_PLAYER);

	push	-1
	push	eax
	mov	eax, DWORD PTR _eToReligion$[esp+8]
	push	eax
	push	9
	call	?AddReligiousPressure@CvCityReligions@@QAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@HW4PlayerTypes@@@Z ; CvCityReligions::AddReligiousPressure
	pop	esi

; 4020 : }

	ret	12					; 0000000cH
?ConvertPercentFollowers@CvCityReligions@@QAEXW4ReligionTypes@@0H@Z ENDP ; CvCityReligions::ConvertPercentFollowers
_TEXT	ENDS
PUBLIC	?AddHolyCityPressure@CvCityReligions@@QAEXXZ	; CvCityReligions::AddHolyCityPressure
; Function compile flags: /Ogtpy
;	COMDAT ?AddHolyCityPressure@CvCityReligions@@QAEXXZ
_TEXT	SEGMENT
?AddHolyCityPressure@CvCityReligions@@QAEXXZ PROC	; CvCityReligions::AddHolyCityPressure, COMDAT
; _this$ = ecx

; 4024 : {

	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx

; 4025 : 	bool bRecompute = false;

	xor	bl, bl

; 4026 : 	ReligionTypes eOldMajorityReligion = GetReligiousMajority();

	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority

; 4027 : 
; 4028 : 	ReligionInCityList::iterator it;
; 4029 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4030 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4031 : #else
; 4032 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	esi, DWORD PTR [edi]
	mov	ebp, eax
	mov	eax, DWORD PTR [edi+4]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	ecx, DWORD PTR [esi+eax*8]
	cmp	esi, ecx
	je	SHORT $LN1@AddHolyCit
	npad	2
$LL5@AddHolyCit:

; 4033 : #endif
; 4034 : 	{
; 4035 : 		if(it->m_bFoundedHere)

	cmp	BYTE PTR [esi+4], 0
	je	SHORT $LN4@AddHolyCit

; 4036 : 		{
; 4037 : 			int iPressure = GC.getGame().getGameSpeedInfo().getReligiousPressureAdjacentCity();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getReligiousPressureAdjacentCity@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getReligiousPressureAdjacentCity

; 4038 : 			iPressure *=  GC.getRELIGION_PER_TURN_FOUNDING_CITY_PRESSURE();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7896
	imul	edx, eax

; 4039 : 			it->m_iPressure += iPressure;

	add	DWORD PTR [esi+12], edx

; 4040 : 
; 4041 : 			// Found it, so we're done
; 4042 : 			bRecompute = true;

	mov	bl, 1
$LN4@AddHolyCit:
	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi]
	lea	eax, DWORD PTR [eax+eax*2]
	add	esi, 24					; 00000018H
	lea	edx, DWORD PTR [ecx+eax*8]
	cmp	esi, edx
	jne	SHORT $LL5@AddHolyCit

; 4043 : 		}
; 4044 : 	}
; 4045 : 
; 4046 : 	// Didn't find it, add new entry
; 4047 : 	if(bRecompute)

	test	bl, bl
	je	SHORT $LN1@AddHolyCit

; 4048 : 	{
; 4049 : 		RecomputeFollowers(FOLLOWER_CHANGE_HOLY_CITY, eOldMajorityReligion);

	push	-1
	push	ebp
	push	1
	mov	ecx, edi
	call	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers
$LN1@AddHolyCit:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 4050 : 	}
; 4051 : }

	ret	0
?AddHolyCityPressure@CvCityReligions@@QAEXXZ ENDP	; CvCityReligions::AddHolyCityPressure
_TEXT	ENDS
PUBLIC	?AddSpyPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::AddSpyPressure
; Function compile flags: /Ogtpy
;	COMDAT ?AddSpyPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z
_TEXT	SEGMENT
_eOldMajorityReligion$ = -4				; size = 4
_eReligion$ = 8						; size = 4
_iBasePressure$ = 12					; size = 4
?AddSpyPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z PROC ; CvCityReligions::AddSpyPressure, COMDAT
; _this$ = ecx

; 4055 : {

	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx

; 4056 : 	bool bRecompute = false;

	xor	bl, bl

; 4057 : 	ReligionTypes eOldMajorityReligion = GetReligiousMajority();

	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority

; 4058 : 
; 4059 : 	ReligionInCityList::iterator it;
; 4060 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4061 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4062 : #else
; 4063 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	esi, DWORD PTR [edi]
	mov	DWORD PTR _eOldMajorityReligion$[esp+16], eax
	mov	eax, DWORD PTR [edi+4]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	ecx, DWORD PTR [esi+eax*8]
	cmp	esi, ecx
	je	SHORT $LN1@AddSpyPres
	push	ebp
	mov	ebp, DWORD PTR _iBasePressure$[esp+16]
$LL5@AddSpyPres:

; 4064 : #endif
; 4065 : 	{
; 4066 : 		if(it->m_eReligion == eReligion)

	mov	edx, DWORD PTR _eReligion$[esp+16]
	cmp	DWORD PTR [esi], edx
	jne	SHORT $LN4@AddSpyPres

; 4067 : 		{
; 4068 : 			int iPressure = GC.getGame().getGameSpeedInfo().getReligiousPressureAdjacentCity();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getReligiousPressureAdjacentCity@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getReligiousPressureAdjacentCity

; 4069 : 			iPressure *= iBasePressure;

	imul	eax, ebp

; 4070 : 			it->m_iPressure += iPressure;

	add	DWORD PTR [esi+12], eax

; 4071 : 
; 4072 : 			// Found it, so we're done
; 4073 : 			bRecompute = true;

	mov	bl, 1
$LN4@AddSpyPres:
	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi]
	lea	eax, DWORD PTR [eax+eax*2]
	add	esi, 24					; 00000018H
	lea	edx, DWORD PTR [ecx+eax*8]
	cmp	esi, edx
	jne	SHORT $LL5@AddSpyPres
	pop	ebp

; 4074 : 		}
; 4075 : 	}
; 4076 : 
; 4077 : 	// Didn't find it, add new entry
; 4078 : 	if(bRecompute)

	test	bl, bl
	je	SHORT $LN1@AddSpyPres

; 4079 : 	{
; 4080 : 		RecomputeFollowers(FOLLOWER_CHANGE_SPY_PRESSURE, eOldMajorityReligion);

	mov	eax, DWORD PTR _eOldMajorityReligion$[esp+16]
	push	-1
	push	eax
	push	10					; 0000000aH
	mov	ecx, edi
	call	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers
$LN1@AddSpyPres:
	pop	edi
	pop	esi
	pop	ebx

; 4081 : 	}
; 4082 : }

	pop	ecx
	ret	8
?AddSpyPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ENDP ; CvCityReligions::AddSpyPressure
_TEXT	ENDS
PUBLIC	?RemoveFormerPantheon@CvCityReligions@@QAEXXZ	; CvCityReligions::RemoveFormerPantheon
; Function compile flags: /Ogtpy
;	COMDAT ?RemoveFormerPantheon@CvCityReligions@@QAEXXZ
_TEXT	SEGMENT
?RemoveFormerPantheon@CvCityReligions@@QAEXXZ PROC	; CvCityReligions::RemoveFormerPantheon, COMDAT
; _this$ = ecx

; 4110 : {

	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	esi, ecx

; 4111 : #ifndef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4112 : 	bool bFoundIt = false;

	xor	bl, bl

; 4113 : #endif
; 4114 : 	ReligionTypes eOldMajorityReligion = GetReligiousMajority();

	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority

; 4115 : 
; 4116 : 	ReligionInCityList::iterator it;
; 4117 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4118 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4119 : #else
; 4120 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end() && !bFoundIt; it++)

	mov	edi, DWORD PTR [esi]
	mov	ebp, eax
	mov	eax, DWORD PTR [esi+4]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	ecx, DWORD PTR [edi+eax*8]
	cmp	edi, ecx
	je	SHORT $LN2@RemoveForm
	npad	2
$LL4@RemoveForm:
	test	bl, bl
	jne	SHORT $LN2@RemoveForm

; 4121 : #endif
; 4122 : 	{
; 4123 : 		if(it->m_eReligion == RELIGION_PANTHEON)

	cmp	DWORD PTR [edi], 0
	jne	SHORT $LN3@RemoveForm

; 4124 : 		{
; 4125 : 			m_ReligionStatus.erase(it);

	push	edi
	mov	ecx, esi
	call	?erase@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAEXPAVCvReligionInCity@@@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::erase

; 4126 : 
; 4127 : 			// Found it, so we're done
; 4128 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4129 : 			break;
; 4130 : #else
; 4131 : 			bFoundIt = true;

	mov	bl, 1
$LN3@RemoveForm:
	mov	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [eax+eax*2]
	mov	eax, DWORD PTR [esi]
	add	edi, 24					; 00000018H
	lea	ecx, DWORD PTR [eax+edx*8]
	cmp	edi, ecx
	jne	SHORT $LL4@RemoveForm
$LN2@RemoveForm:

; 4132 : #endif
; 4133 : 		}
; 4134 : 	}
; 4135 : 
; 4136 : 	RecomputeFollowers(FOLLOWER_CHANGE_CONQUEST, eOldMajorityReligion);

	push	-1
	push	ebp
	push	5
	mov	ecx, esi
	call	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 4137 : }

	ret	0
?RemoveFormerPantheon@CvCityReligions@@QAEXXZ ENDP	; CvCityReligions::RemoveFormerPantheon
_TEXT	ENDS
PUBLIC	?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RemoveOtherReligions
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z$0
__ehfuncinfo$?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z
_TEXT	SEGMENT
_eOldMajorityReligion$ = -224				; size = 4
_tempList$ = -220					; size = 208
__$EHRec$ = -12						; size = 12
_eReligion$ = 8						; size = 4
_eResponsiblePlayer$ = 12				; size = 4
?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z PROC ; CvCityReligions::RemoveOtherReligions, COMDAT
; _this$ = ecx

; 4141 : {

	push	-1
	push	__ehhandler$?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, ecx

; 4142 : 	ReligionTypes eOldMajorityReligion = GetReligiousMajority();

	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority

; 4143 : 
; 4144 : 	// Copy list
; 4145 : 	ReligionInCityList tempList;

	xor	ecx, ecx
	mov	ebp, 8
	lea	edx, DWORD PTR _tempList$[esp+252]
	mov	DWORD PTR _eOldMajorityReligion$[esp+240], eax
	xor	ebx, ebx
	mov	DWORD PTR _tempList$[esp+244], ecx
	mov	DWORD PTR _tempList$[esp+248], ebp
	mov	DWORD PTR _tempList$[esp+240], edx

; 4146 : 	ReligionInCityList::iterator it;
; 4147 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4148 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4149 : #else
; 4150 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	eax, DWORD PTR [edi+4]
	mov	esi, DWORD PTR [edi]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [esi+eax*8]
	mov	DWORD PTR __$EHRec$[esp+248], ebx
	cmp	esi, eax
	je	SHORT $LN8@RemoveOthe
	jmp	SHORT $LN10@RemoveOthe
	npad	5
$LL98@RemoveOthe:
	mov	ebp, DWORD PTR _tempList$[esp+248]
$LN10@RemoveOthe:

; 4151 : #endif
; 4152 : 	{
; 4153 : 		tempList.push_back(*it);

	mov	BYTE PTR _tempList$[esp+444], bl
	cmp	ecx, ebp
	jne	SHORT $LN26@RemoveOthe
	push	ebp
	lea	ecx, DWORD PTR _tempList$[esp+244]
	call	?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize
$LN26@RemoveOthe:
	mov	eax, DWORD PTR _tempList$[esp+244]
	mov	edx, DWORD PTR _tempList$[esp+240]
	lea	ecx, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [edx+ecx*8]
	cmp	eax, ebx
	je	SHORT $LN29@RemoveOthe
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [esi+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR [esi+20]
	mov	DWORD PTR [eax+20], edx
$LN29@RemoveOthe:
	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR _tempList$[esp+244]
	mov	edx, DWORD PTR [edi]
	lea	eax, DWORD PTR [eax+eax*2]
	inc	ecx
	add	esi, 24					; 00000018H
	lea	eax, DWORD PTR [edx+eax*8]
	mov	DWORD PTR _tempList$[esp+244], ecx
	cmp	esi, eax
	jne	SHORT $LL98@RemoveOthe

; 4146 : 	ReligionInCityList::iterator it;
; 4147 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4148 : 	for (it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); ++it)
; 4149 : #else
; 4150 : 	for(it = m_ReligionStatus.begin(); it != m_ReligionStatus.end(); it++)

	mov	edx, DWORD PTR _tempList$[esp+240]
$LN8@RemoveOthe:

; 4154 : 	}
; 4155 : 
; 4156 : 	// Erase old list
; 4157 : 	m_ReligionStatus.clear();
; 4158 : 
; 4159 : 	// Recopy just what we want to keep
; 4160 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4161 : 	for (it = tempList.begin(); it != tempList.end(); ++it)
; 4162 : #else
; 4163 : 	for(it = tempList.begin(); it != tempList.end(); it++)

	lea	ecx, DWORD PTR [ecx+ecx*2]
	lea	eax, DWORD PTR [edx+ecx*8]
	mov	DWORD PTR [edi+4], ebx
	mov	esi, edx
	cmp	edx, eax
	je	$LN5@RemoveOthe
	npad	1
$LL7@RemoveOthe:

; 4164 : #endif
; 4165 : 	{
; 4166 : 		int iPressureRetained = 0;
; 4167 : 
; 4168 : 		ReligionTypes eLoopReligion = it->m_eReligion;

	mov	ebp, DWORD PTR [esi]
	xor	eax, eax

; 4169 : 		if (eLoopReligion > RELIGION_PANTHEON && eLoopReligion != eReligion)

	cmp	ebp, ebx
	jle	SHORT $LN97@RemoveOthe
	cmp	ebp, DWORD PTR _eReligion$[esp+236]
	je	SHORT $LN97@RemoveOthe

; 4170 : 		{
; 4171 : 			const CvReligion *pReligion = GC.getGame().GetGameReligions()->GetReligion(eLoopReligion, NO_PLAYER);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax]
	imul	edx, 328				; 00000148H
	add	edx, ecx
	cmp	ecx, edx
	je	SHORT $LN51@RemoveOthe
	npad	3
$LL53@RemoveOthe:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, ebp
	jne	SHORT $LN52@RemoveOthe
	cmp	eax, ebx
	jne	SHORT $LN54@RemoveOthe
	cmp	DWORD PTR [ecx+4], -1
	je	SHORT $LN54@RemoveOthe
$LN52@RemoveOthe:
	add	ecx, 328				; 00000148H
	cmp	ecx, edx
	jne	SHORT $LL53@RemoveOthe
$LN51@RemoveOthe:
	xor	ecx, ecx
$LN54@RemoveOthe:

; 4172 : 			iPressureRetained = pReligion->m_Beliefs.GetInquisitorPressureRetention();  // Normally 0

	mov	eax, DWORD PTR [ecx+268]
$LN97@RemoveOthe:

; 4173 : 		}
; 4174 : 
; 4175 : 		if (eLoopReligion == NO_RELIGION || eLoopReligion == eReligion || iPressureRetained > 0)

	cmp	ebp, -1
	je	SHORT $LN2@RemoveOthe
	cmp	ebp, DWORD PTR _eReligion$[esp+236]
	je	SHORT $LN2@RemoveOthe
	cmp	eax, ebx
	jle	SHORT $LN6@RemoveOthe

; 4176 : 		{
; 4177 : 			if (iPressureRetained > 0)

	jmp	SHORT $LN95@RemoveOthe
$LN2@RemoveOthe:
	cmp	eax, ebx
	jle	SHORT $LN1@RemoveOthe
$LN95@RemoveOthe:

; 4178 : 			{
; 4179 : 				it->m_iPressure = it->m_iPressure * iPressureRetained / 100;

	mov	ecx, DWORD PTR [esi+12]
	imul	ecx, eax
	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	mov	DWORD PTR [esi+12], eax
$LN1@RemoveOthe:

; 4180 : 			}
; 4181 : 
; 4182 : 			m_ReligionStatus.push_back(*it);

	mov	eax, DWORD PTR [edi+8]
	mov	BYTE PTR [edi+204], bl
	cmp	DWORD PTR [edi+4], eax
	jne	SHORT $LN62@RemoveOthe
	push	eax
	mov	ecx, edi
	call	?GrowSize@?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@IAEXI@Z ; FStaticVector<CvReligionInCity,8,0,297,0>::GrowSize
$LN62@RemoveOthe:
	mov	eax, DWORD PTR [edi+4]
	mov	edx, DWORD PTR [edi]
	lea	ecx, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [edx+ecx*8]
	cmp	eax, ebx
	je	SHORT $LN65@RemoveOthe
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [esi+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR [esi+20]
	mov	DWORD PTR [eax+20], edx
$LN65@RemoveOthe:
	inc	DWORD PTR [edi+4]
$LN6@RemoveOthe:

; 4154 : 	}
; 4155 : 
; 4156 : 	// Erase old list
; 4157 : 	m_ReligionStatus.clear();
; 4158 : 
; 4159 : 	// Recopy just what we want to keep
; 4160 : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 4161 : 	for (it = tempList.begin(); it != tempList.end(); ++it)
; 4162 : #else
; 4163 : 	for(it = tempList.begin(); it != tempList.end(); it++)

	mov	eax, DWORD PTR _tempList$[esp+244]
	mov	ecx, DWORD PTR _tempList$[esp+240]
	lea	eax, DWORD PTR [eax+eax*2]
	add	esi, 24					; 00000018H
	lea	edx, DWORD PTR [ecx+eax*8]
	cmp	esi, edx
	jne	$LL7@RemoveOthe
$LN5@RemoveOthe:

; 4183 : 		}
; 4184 : 	}
; 4185 : 
; 4186 : 	RecomputeFollowers(FOLLOWER_CHANGE_REMOVE_HERESY, eOldMajorityReligion, eResponsiblePlayer);

	mov	eax, DWORD PTR _eResponsiblePlayer$[esp+236]
	mov	ecx, DWORD PTR _eOldMajorityReligion$[esp+240]
	push	eax
	push	ecx
	push	8
	mov	ecx, edi
	call	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers

; 4187 : }

	mov	eax, DWORD PTR _tempList$[esp+240]
	pop	edi
	pop	esi
	lea	edx, DWORD PTR _tempList$[esp+244]
	pop	ebp
	mov	DWORD PTR __$EHRec$[esp+236], -1
	pop	ebx
	cmp	eax, edx
	je	SHORT $LN71@RemoveOthe
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN71@RemoveOthe:
	mov	ecx, DWORD PTR __$EHRec$[esp+224]
	mov	DWORD PTR fs:0, ecx
	add	esp, 224				; 000000e0H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z$0:
	lea	ecx, DWORD PTR _tempList$[ebp]
	jmp	??1?$FStaticVector@VCvReligionInCity@@$07$0A@$0BCJ@$0A@@@QAE@XZ ; FStaticVector<CvReligionInCity,8,0,297,0>::~FStaticVector<CvReligionInCity,8,0,297,0>
__ehhandler$?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RemoveOtherReligions@CvCityReligions@@QAEXW4ReligionTypes@@W4PlayerTypes@@@Z ENDP ; CvCityReligions::RemoveOtherReligions
PUBLIC	?GetNumFollowersAfterSpread@CvCityReligions@@QAEHW4ReligionTypes@@H@Z ; CvCityReligions::GetNumFollowersAfterSpread
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumFollowersAfterSpread@CvCityReligions@@QAEHW4ReligionTypes@@H@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
_iConversionStrength$ = 12				; size = 4
?GetNumFollowersAfterSpread@CvCityReligions@@QAEHW4ReligionTypes@@H@Z PROC ; CvCityReligions::GetNumFollowersAfterSpread, COMDAT
; _this$ = ecx

; 4247 : 	SimulateReligiousPressure(eReligion, iConversionStrength);

	mov	eax, DWORD PTR _iConversionStrength$[esp-4]
	push	esi
	push	edi
	mov	edi, DWORD PTR _eReligion$[esp+4]
	push	eax
	push	edi
	mov	esi, ecx
	call	?SimulateReligiousPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::SimulateReligiousPressure

; 4248 : 	return GetNumSimulatedFollowers(eReligion);

	push	edi
	mov	ecx, esi
	call	?GetNumSimulatedFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumSimulatedFollowers
	pop	edi
	pop	esi

; 4249 : }

	ret	8
?GetNumFollowersAfterSpread@CvCityReligions@@QAEHW4ReligionTypes@@H@Z ENDP ; CvCityReligions::GetNumFollowersAfterSpread
_TEXT	ENDS
PUBLIC	?GetNumFollowersAfterProphetSpread@CvCityReligions@@QAEHW4ReligionTypes@@H@Z ; CvCityReligions::GetNumFollowersAfterProphetSpread
; Function compile flags: /Ogtpy
;	COMDAT ?GetNumFollowersAfterProphetSpread@CvCityReligions@@QAEHW4ReligionTypes@@H@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
_iConversionStrength$ = 12				; size = 4
?GetNumFollowersAfterProphetSpread@CvCityReligions@@QAEHW4ReligionTypes@@H@Z PROC ; CvCityReligions::GetNumFollowersAfterProphetSpread, COMDAT
; _this$ = ecx

; 4254 : 	SimulateProphetSpread(eReligion, iConversionStrength);

	mov	eax, DWORD PTR _iConversionStrength$[esp-4]
	push	esi
	push	edi
	mov	edi, DWORD PTR _eReligion$[esp+4]
	push	eax
	push	edi
	mov	esi, ecx
	call	?SimulateProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::SimulateProphetSpread

; 4255 : 	return GetNumSimulatedFollowers(eReligion);

	push	edi
	mov	ecx, esi
	call	?GetNumSimulatedFollowers@CvCityReligions@@QAEHW4ReligionTypes@@@Z ; CvCityReligions::GetNumSimulatedFollowers
	pop	edi
	pop	esi

; 4256 : }

	ret	8
?GetNumFollowersAfterProphetSpread@CvCityReligions@@QAEHW4ReligionTypes@@H@Z ENDP ; CvCityReligions::GetNumFollowersAfterProphetSpread
_TEXT	ENDS
PUBLIC	?GetMajorityReligionAfterSpread@CvCityReligions@@QAE?AW4ReligionTypes@@W42@H@Z ; CvCityReligions::GetMajorityReligionAfterSpread
; Function compile flags: /Ogtpy
;	COMDAT ?GetMajorityReligionAfterSpread@CvCityReligions@@QAE?AW4ReligionTypes@@W42@H@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
_iConversionStrength$ = 12				; size = 4
?GetMajorityReligionAfterSpread@CvCityReligions@@QAE?AW4ReligionTypes@@W42@H@Z PROC ; CvCityReligions::GetMajorityReligionAfterSpread, COMDAT
; _this$ = ecx

; 4261 : 	SimulateReligiousPressure(eReligion, iConversionStrength);

	mov	eax, DWORD PTR _iConversionStrength$[esp-4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR _eReligion$[esp]
	push	eax
	push	ecx
	mov	ecx, esi
	call	?SimulateReligiousPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::SimulateReligiousPressure

; 4262 : 	return GetSimulatedReligiousMajority();

	mov	ecx, esi
	call	?GetSimulatedReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetSimulatedReligiousMajority
	pop	esi

; 4263 : }

	ret	8
?GetMajorityReligionAfterSpread@CvCityReligions@@QAE?AW4ReligionTypes@@W42@H@Z ENDP ; CvCityReligions::GetMajorityReligionAfterSpread
_TEXT	ENDS
PUBLIC	?GetMajorityReligionAfterProphetSpread@CvCityReligions@@QAE?AW4ReligionTypes@@W42@H@Z ; CvCityReligions::GetMajorityReligionAfterProphetSpread
; Function compile flags: /Ogtpy
;	COMDAT ?GetMajorityReligionAfterProphetSpread@CvCityReligions@@QAE?AW4ReligionTypes@@W42@H@Z
_TEXT	SEGMENT
_eReligion$ = 8						; size = 4
_iConversionStrength$ = 12				; size = 4
?GetMajorityReligionAfterProphetSpread@CvCityReligions@@QAE?AW4ReligionTypes@@W42@H@Z PROC ; CvCityReligions::GetMajorityReligionAfterProphetSpread, COMDAT
; _this$ = ecx

; 4268 : 	SimulateProphetSpread(eReligion, iConversionStrength);

	mov	eax, DWORD PTR _iConversionStrength$[esp-4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR _eReligion$[esp]
	push	eax
	push	ecx
	mov	ecx, esi
	call	?SimulateProphetSpread@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::SimulateProphetSpread

; 4269 : 	return GetSimulatedReligiousMajority();

	mov	ecx, esi
	call	?GetSimulatedReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetSimulatedReligiousMajority
	pop	esi

; 4270 : }

	ret	8
?GetMajorityReligionAfterProphetSpread@CvCityReligions@@QAE?AW4ReligionTypes@@W42@H@Z ENDP ; CvCityReligions::GetMajorityReligionAfterProphetSpread
_TEXT	ENDS
PUBLIC	?DoTurn@CvReligionAI@@QAEXXZ			; CvReligionAI::DoTurn
; Function compile flags: /Ogtpy
;	COMDAT ?DoTurn@CvReligionAI@@QAEXXZ
_TEXT	SEGMENT
?DoTurn@CvReligionAI@@QAEXXZ PROC			; CvReligionAI::DoTurn, COMDAT
; _this$ = ecx

; 4950 : {

	push	esi
	mov	esi, ecx

; 4951 : 	// Only AI players use this function for now
; 4952 : 	if(m_pPlayer->isHuman())

	mov	ecx, DWORD PTR [esi+4]
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman
	test	al, al
	jne	SHORT $LN2@DoTurn

; 4953 : 	{
; 4954 : 		return;
; 4955 : 	}
; 4956 : 
; 4957 : 	AI_PERF_FORMAT("AI-perf.csv", ("Religion AI, Turn %03d, %s", GC.getGame().getElapsedGameTurns(), m_pPlayer->getCivilizationShortDescription()) );
; 4958 : 
; 4959 : 	DoFaithPurchases();

	mov	ecx, esi
	pop	esi
	jmp	?DoFaithPurchases@CvReligionAI@@AAEXXZ	; CvReligionAI::DoFaithPurchases
$LN2@DoTurn:
	pop	esi

; 4960 : }

	ret	0
?DoTurn@CvReligionAI@@QAEXXZ ENDP			; CvReligionAI::DoTurn
_TEXT	ENDS
PUBLIC	??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__catchsym$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z$0
__unwindtable$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z$2
__ehfuncinfo$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
$T244211 = 8						; size = 1
__Cat$244214 = 8					; size = 1
__Right$ = 8						; size = 4
??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx

; 500  : 		{	// construct by copying _Right

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx

; 501  : 		if (_Buy(_Right.size()))

	mov	ebx, DWORD PTR __Right$[ebp]
	push	esi
	push	edi
	mov	edi, DWORD PTR [ebx+8]
	sub	edi, DWORD PTR [ebx+4]
	xor	eax, eax
	mov	esi, ecx
	sar	edi, 2
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], esi
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], eax
	cmp	edi, eax
	je	SHORT $LN7@vector@2
	cmp	edi, 1073741823				; 3fffffffH
	jbe	SHORT $LN22@vector@2
	call	?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Xlen
$LN54@vector@2:
$LN22@vector@2:
	push	eax
	push	edi
	call	??$_Allocate@W4BeliefTypes@@@std@@YAPAW4BeliefTypes@@IPAW41@@Z ; std::_Allocate<enum BeliefTypes>

; 502  : 			_TRY_BEGIN
; 503  : 			_Mylast = _Ucopy(_Right.begin(), _Right.end(), _Myfirst);

	mov	BYTE PTR $T244211[ebp], 0
	mov	edx, DWORD PTR $T244211[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$244214[ebp]
	push	edx
	lea	ecx, DWORD PTR [eax+edi*4]
	push	esi
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], ecx
	mov	ecx, DWORD PTR [ebx+8]
	mov	ebx, DWORD PTR [ebx+4]
	push	eax
	push	ecx
	push	ebx
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	??$_Uninit_copy@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >
	add	esp, 32					; 00000020H
	mov	DWORD PTR [esi+8], eax
$LN7@vector@2:

; 507  : 			_CATCH_END
; 508  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	mov	eax, esi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z$0:

; 504  : 			_CATCH_ALL
; 505  : 			_Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Tidy

; 506  : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN55@vector@2:
$LN53@vector@2:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z:
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
PUBLIC	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
; Function compile flags: /Ogtpy
;	COMDAT ??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >, COMDAT
; _this$ = ecx

; 558  : 		{	// destroy the object

	push	esi
	mov	esi, ecx

; 559  : 		_Tidy();

	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@vector@3
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@vector@3:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi

; 560  : 		}

	ret	0
??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
_TEXT	ENDS
PUBLIC	??$_Umove@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@1@0PAW42@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Umove<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> > >
; Function compile flags: /Ogtpy
;	COMDAT ??$_Umove@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@1@0PAW42@@Z
_TEXT	SEGMENT
$T244295 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$244298 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@1@0PAW42@@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Umove<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> > >, COMDAT
; _this$ = ecx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$244298[esp]
	mov	BYTE PTR $T244295[esp+4], 0
	mov	eax, DWORD PTR $T244295[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >

; 1149 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Umove@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@1@0PAW42@@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Umove<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> > >
_TEXT	ENDS
PUBLIC	??$_Umove@PAW4BeliefTypes@@@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@PAW42@00@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Umove<enum BeliefTypes *>
; Function compile flags: /Ogtpy
;	COMDAT ??$_Umove@PAW4BeliefTypes@@@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@PAW42@00@Z
_TEXT	SEGMENT
$T244351 = -4						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$244354 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAW4BeliefTypes@@@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@PAW42@00@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Umove<enum BeliefTypes *>, COMDAT
; _this$ = ecx

; 1145 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

	push	ecx

; 1146 : 		{	// move initializing [_First, _Last), using allocator
; 1147 : 		return (_STDEXT _Unchecked_uninitialized_move(_First, _Last,
; 1148 : 			_Ptr, this->_Alval));

	mov	edx, DWORD PTR __Cat$244354[esp]
	mov	BYTE PTR $T244351[esp+4], 0
	mov	eax, DWORD PTR $T244351[esp+4]
	push	eax
	mov	eax, DWORD PTR __Ptr$[esp+4]
	push	edx
	mov	edx, DWORD PTR __First$[esp+8]
	push	ecx
	mov	ecx, DWORD PTR __Last$[esp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >

; 1149 : 		}

	add	esp, 28					; 0000001cH
	ret	12					; 0000000cH
??$_Umove@PAW4BeliefTypes@@@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@PAW42@00@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Umove<enum BeliefTypes *>
_TEXT	ENDS
PUBLIC	??$sort_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ; std::sort_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$sort_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$sort_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z PROC ; std::sort_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 2224 : 	_DEBUG_HEAP(_First, _Last);
; 2225 : 	_Sort_heap(_CHECKED_BASE(_First), _CHECKED_BASE(_Last));

	jmp	??$_Sort_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ; std::_Sort_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
??$sort_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ENDP ; std::sort_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	??1CvReligionXMLEntries@@QAE@XZ			; CvReligionXMLEntries::~CvReligionXMLEntries
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1CvReligionXMLEntries@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CvReligionXMLEntries@@QAE@XZ$0
__ehfuncinfo$??1CvReligionXMLEntries@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CvReligionXMLEntries@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ??1CvReligionXMLEntries@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CvReligionXMLEntries@@QAE@XZ PROC			; CvReligionXMLEntries::~CvReligionXMLEntries, COMDAT
; _this$ = ecx

; 64   : {

	push	-1
	push	__ehhandler$??1CvReligionXMLEntries@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	push	ecx
	push	esi
	mov	esi, ecx
	push	edi
	mov	DWORD PTR _this$[esp+24], esi
	xor	edi, edi
	mov	DWORD PTR __$EHRec$[esp+32], edi

; 65   : 	DeleteArray();

	call	?DeleteArray@CvReligionXMLEntries@@QAEXXZ ; CvReligionXMLEntries::DeleteArray

; 66   : }

	mov	eax, DWORD PTR [esi+4]
	cmp	eax, edi
	je	SHORT $LN9@CvReligion@2
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN9@CvReligion@2:
	mov	ecx, DWORD PTR __$EHRec$[esp+24]
	mov	DWORD PTR [esi+4], edi
	mov	DWORD PTR [esi+8], edi
	mov	DWORD PTR [esi+12], edi
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	add	esp, 16					; 00000010H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CvReligionXMLEntries@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$vector@PAVCvReligionEntry@@V?$allocator@PAVCvReligionEntry@@@std@@@std@@QAE@XZ ; std::vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >::~vector<CvReligionEntry *,std::allocator<CvReligionEntry *> >
__ehhandler$??1CvReligionXMLEntries@@QAE@XZ:
	mov	eax, OFFSET __ehfuncinfo$??1CvReligionXMLEntries@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CvReligionXMLEntries@@QAE@XZ ENDP			; CvReligionXMLEntries::~CvReligionXMLEntries
PUBLIC	?SpreadReligionToOneCity@CvGameReligions@@QAEXPAVCvCity@@@Z ; CvGameReligions::SpreadReligionToOneCity
EXTRN	?GetSpyIndexInCity@CvPlayerEspionage@@QAEHPAVCvCity@@@Z:PROC ; CvPlayerEspionage::GetSpyIndexInCity
EXTRN	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ:PROC ; CvPlayer::GetEspionage
; Function compile flags: /Ogtpy
;	COMDAT ?SpreadReligionToOneCity@CvGameReligions@@QAEXPAVCvCity@@@Z
_TEXT	SEGMENT
tv637 = -12						; size = 4
_this$ = -8						; size = 4
_iLoop$224952 = -4					; size = 4
_iNumTradeRoutes$224960 = 8				; size = 4
_pCity$ = 8						; size = 4
?SpreadReligionToOneCity@CvGameReligions@@QAEXPAVCvCity@@@Z PROC ; CvGameReligions::SpreadReligionToOneCity, COMDAT
; _this$ = ecx

; 333  : {

	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp

; 334  : #ifdef AUI_WARNING_FIXES
; 335  : 	if (!pCity)
; 336  : 		return;
; 337  : #endif
; 338  : 	// Used to calculate how many trade routes are applying pressure to this city. This resets the value so we get a true count every turn.
; 339  : 	pCity->GetCityReligions()->ResetNumTradeRoutePressure();

	mov	ebp, DWORD PTR _pCity$[esp+16]
	push	esi
	mov	DWORD PTR _this$[esp+24], ecx
	push	edi
	mov	ecx, ebp
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [edx+edx*2]
	lea	edx, DWORD PTR [ecx+edx*8]
	cmp	ecx, edx
	je	SHORT $LN17@SpreadReli
	npad	11
$LL19@SpreadReli:
	mov	DWORD PTR [ecx+16], 0
	mov	edx, DWORD PTR [eax+4]
	mov	esi, DWORD PTR [eax]
	lea	edx, DWORD PTR [edx+edx*2]
	add	ecx, 24					; 00000018H
	lea	edx, DWORD PTR [esi+edx*8]
	cmp	ecx, edx
	jne	SHORT $LL19@SpreadReli
$LN17@SpreadReli:

; 340  : 
; 341  : 	// Is this a city where a religion was founded?
; 342  : 	if(pCity->GetCityReligions()->IsHolyCityAnyReligion())

	mov	ecx, ebp
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]
	cmp	ecx, eax
	je	SHORT $LN14@SpreadReli
	npad	1
$LL29@SpreadReli:
	cmp	BYTE PTR [ecx+4], 0
	jne	SHORT $LN101@SpreadReli
	add	ecx, 24					; 00000018H
	cmp	ecx, eax
	jne	SHORT $LL29@SpreadReli

; 387  : 					{
; 388  : 						pCity->GetCityReligions()->IncrementNumTradeRouteConnections(eMajorityReligion, iNumTradeRoutes);

	jmp	SHORT $LN14@SpreadReli
$LN101@SpreadReli:

; 343  : 	{
; 344  : 		pCity->GetCityReligions()->AddHolyCityPressure();

	mov	ecx, ebp
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?AddHolyCityPressure@CvCityReligions@@QAEXXZ ; CvCityReligions::AddHolyCityPressure
$LN14@SpreadReli:

; 345  : 	}
; 346  : 
; 347  : 	// Loop through all the players
; 348  : 	for(int iI = 0; iI < MAX_PLAYERS; iI++)

	xor	edi, edi
	mov	DWORD PTR tv637[esp+28], edi
	npad	13
$LL13@SpreadReli:

; 349  : 	{
; 350  : 		CvPlayer& kPlayer = GET_PLAYER((PlayerTypes)iI);

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 351  : 		if(kPlayer.isAlive())

	cmp	BYTE PTR [edi+ecx+2256], 0
	lea	ebx, DWORD PTR [edi+ecx]
	je	$LN12@SpreadReli

; 352  : 		{
; 353  : 			int iSpyPressure = kPlayer.GetReligions()->GetSpyPressure();

	mov	ecx, ebx
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	esi, DWORD PTR [edx+44]
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	imul	eax, 328				; 00000148H
	add	eax, ecx
	or	edx, -1
	cmp	ecx, eax
	je	$LN104@SpreadReli
$LL58@SpreadReli:
	cmp	DWORD PTR [ecx+4], esi
	jne	SHORT $LN57@SpreadReli
	cmp	BYTE PTR [ecx+20], 0
	jne	SHORT $LN57@SpreadReli
	mov	edx, DWORD PTR [ecx]
$LN57@SpreadReli:
	add	ecx, 328				; 00000148H
	cmp	ecx, eax
	jne	SHORT $LL58@SpreadReli
	cmp	edx, -1
	je	SHORT $LN104@SpreadReli
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	-1
	push	edx
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligion@CvGameReligions@@QBEPBVCvReligion@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligion
	test	eax, eax
	je	SHORT $LN104@SpreadReli
	mov	esi, DWORD PTR [eax+264]

; 354  : 			if (iSpyPressure > 0)

	test	esi, esi
	jle	SHORT $LN104@SpreadReli

; 355  : 			{
; 356  : 				if (kPlayer.GetEspionage()->GetSpyIndexInCity(pCity) != -1)

	push	ebp
	mov	ecx, ebx
	call	?GetEspionage@CvPlayer@@QBEPAVCvPlayerEspionage@@XZ ; CvPlayer::GetEspionage
	mov	ecx, eax
	call	?GetSpyIndexInCity@CvPlayerEspionage@@QAEHPAVCvCity@@@Z ; CvPlayerEspionage::GetSpyIndexInCity
	cmp	eax, -1
	je	SHORT $LN104@SpreadReli

; 357  : 				{
; 358  : 					ReligionTypes eReligionFounded = kPlayer.GetReligions()->GetReligionCreatedByPlayer();

	mov	ecx, ebx
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer

; 359  : 					pCity->GetCityReligions()->AddSpyPressure(eReligionFounded, iSpyPressure);

	push	esi
	push	eax
	mov	ecx, ebp
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?AddSpyPressure@CvCityReligions@@QAEXW4ReligionTypes@@H@Z ; CvCityReligions::AddSpyPressure
$LN104@SpreadReli:

; 360  : 				}
; 361  : 			}
; 362  : 
; 363  : 			// Loop through each of their cities
; 364  : 			int iLoop;
; 365  : 			CvCity* pLoopCity;
; 366  : 			for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$224952[esp+32]
	push	ecx
	mov	ecx, ebx
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	$LN12@SpreadReli
$LL105@SpreadReli:

; 367  : 			{
; 368  : 				// Ignore the same city
; 369  : 				if(pCity == pLoopCity)

	cmp	ebp, esi
	je	SHORT $LN6@SpreadReli

; 370  : 				{
; 371  : 					continue;
; 372  : 				}
; 373  : 
; 374  : 				// Does this city have a majority religion?
; 375  : 				ReligionTypes eMajorityReligion = pLoopCity->GetCityReligions()->GetReligiousMajority();

	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority
	mov	edi, eax

; 376  : 				if(eMajorityReligion == NO_RELIGION)

	cmp	edi, -1
	je	SHORT $LN6@SpreadReli

; 377  : 				{
; 378  : 					continue;
; 379  : 				}
; 380  : 
; 381  : 				int iNumTradeRoutes = 0;
; 382  : 				int iPressure = GetAdjacentCityReligiousPressure (eMajorityReligion, pLoopCity, pCity, iNumTradeRoutes, false);

	mov	ecx, DWORD PTR _this$[esp+28]
	push	0
	lea	edx, DWORD PTR _iNumTradeRoutes$224960[esp+28]
	push	edx
	push	ebp
	push	esi
	push	edi
	mov	DWORD PTR _iNumTradeRoutes$224960[esp+44], 0
	call	?GetAdjacentCityReligiousPressure@CvGameReligions@@QAEHW4ReligionTypes@@PAVCvCity@@1AAH_N@Z ; CvGameReligions::GetAdjacentCityReligiousPressure

; 383  : 				if (iPressure > 0)

	test	eax, eax
	jle	SHORT $LN6@SpreadReli

; 384  : 				{
; 385  : 					pCity->GetCityReligions()->AddReligiousPressure(FOLLOWER_CHANGE_ADJACENT_PRESSURE, eMajorityReligion, iPressure);

	push	-1
	push	eax
	push	edi
	push	2
	mov	ecx, ebp
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?AddReligiousPressure@CvCityReligions@@QAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@HW4PlayerTypes@@@Z ; CvCityReligions::AddReligiousPressure

; 386  : 					if (iNumTradeRoutes != 0)

	mov	esi, DWORD PTR _iNumTradeRoutes$224960[esp+24]
	test	esi, esi
	je	SHORT $LN6@SpreadReli

; 387  : 					{
; 388  : 						pCity->GetCityReligions()->IncrementNumTradeRouteConnections(eMajorityReligion, iNumTradeRoutes);

	mov	ecx, ebp
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]
	cmp	ecx, eax
	je	SHORT $LN6@SpreadReli
	npad	6
$LL80@SpreadReli:
	cmp	DWORD PTR [ecx], edi
	je	SHORT $LN94@SpreadReli
	add	ecx, 24					; 00000018H
	cmp	ecx, eax
	jne	SHORT $LL80@SpreadReli
	jmp	SHORT $LN6@SpreadReli
$LN94@SpreadReli:
	add	DWORD PTR [ecx+16], esi
$LN6@SpreadReli:

; 360  : 				}
; 361  : 			}
; 362  : 
; 363  : 			// Loop through each of their cities
; 364  : 			int iLoop;
; 365  : 			CvCity* pLoopCity;
; 366  : 			for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$224952[esp+32]
	push	ecx
	mov	ecx, ebx
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	$LL105@SpreadReli
	mov	edi, DWORD PTR tv637[esp+28]
$LN12@SpreadReli:

; 345  : 	}
; 346  : 
; 347  : 	// Loop through all the players
; 348  : 	for(int iI = 0; iI < MAX_PLAYERS; iI++)

	add	edi, 63236				; 0000f704H
	cmp	edi, 4047104				; 003dc100H
	mov	DWORD PTR tv637[esp+28], edi
	jl	$LL13@SpreadReli
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 389  : 					}
; 390  : 				}
; 391  : 			}
; 392  : 		}
; 393  : 	}
; 394  : }

	add	esp, 12					; 0000000cH
	ret	4
?SpreadReligionToOneCity@CvGameReligions@@QAEXPAVCvCity@@@Z ENDP ; CvGameReligions::SpreadReligionToOneCity
_TEXT	ENDS
PUBLIC	?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z ; CvGameReligions::FoundPantheon
EXTRN	__imp_??0String@Localization@@QAE@PBD@Z:PROC
EXTRN	?addReplayMessage@CvGame@@QAEXW4ReplayMessageTypes@@W4PlayerTypes@@ABVCvString@@HH@Z:PROC ; CvGame::addReplayMessage
EXTRN	?getBeliefInfo@CvGlobals@@QAEPAVCvBeliefEntry@@W4BeliefTypes@@@Z:PROC ; CvGlobals::getBeliefInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$3
	DD	04H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$5
	DD	06H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$7
	DD	04H
	DD	FLAT:__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$8
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z
_TEXT	SEGMENT
_iNotifyLoop$225494 = -644				; size = 4
_args$225468 = -644					; size = 4
$T244616 = -640						; size = 4
_kTeam$225510 = -640					; size = 4
_kCurNotifyPlayer$225500 = -640				; size = 4
_kGame$ = -640						; size = 4
tv817 = -636						; size = 4
$T244610 = -636						; size = 4
_pBelief$ = -632					; size = 4
_iIncrement$ = -632					; size = 4
_bResult$225469 = -625					; size = 1
_kPlayer$ = -624					; size = 4
_pEntry$ = -620						; size = 4
_this$ = -616						; size = 4
_iLoop$ = -612						; size = 4
_strLogMsg$225519 = -608				; size = 28
$T244613 = -608						; size = 28
$T244612 = -608						; size = 28
_unknownFoundedText$225513 = -580			; size = 80
_localizedText$225504 = -580				; size = 80
_replayText$225482 = -500				; size = 80
_strSummary$225479 = -420				; size = 80
_newReligion$ = -340					; size = 328
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_eBelief$ = 12						; size = 4
?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z PROC ; CvGameReligions::FoundPantheon, COMDAT
; _this$ = ecx

; 767  : {

	push	-1
	push	__ehhandler$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 632				; 00000278H

; 768  : 	CvGame& kGame = GC.getGame();

	mov	eax, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	ebx

; 769  : 	CvPlayer& kPlayer = GET_PLAYER(ePlayer);

	mov	ebx, DWORD PTR _ePlayer$[esp+644]
	push	ebp
	push	esi
	mov	esi, ebx
	imul	esi, 63236				; 0000f704H
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	lea	ebp, DWORD PTR [esi+ecx]

; 770  : 
; 771  : 	CvReligion newReligion(RELIGION_PANTHEON, ePlayer, NULL, true);

	lea	ecx, DWORD PTR _newReligion$[esp+812]
	mov	DWORD PTR _this$[esp+660], edi
	mov	DWORD PTR _kGame$[esp+660], eax
	mov	DWORD PTR _kPlayer$[esp+660], ebp
	mov	DWORD PTR _newReligion$[esp+660], 0
	mov	DWORD PTR _newReligion$[esp+664], ebx
	mov	BYTE PTR _newReligion$[esp+680], 1
	mov	BYTE PTR _newReligion$[esp+681], 0
	call	??0CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::CvReligionBeliefs
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR __$EHRec$[esp+668], 0
	call	?getGameTurn@CvGame@@QAEHXZ		; CvGame::getGameTurn
	push	128					; 00000080H
	lea	edx, DWORD PTR _newReligion$[esp+686]
	push	0
	push	edx
	mov	DWORD PTR _newReligion$[esp+688], eax
	call	_memset
	add	esp, 12					; 0000000cH

; 772  : 	newReligion.m_Beliefs.AddBelief(eBelief);

	mov	eax, DWORD PTR _eBelief$[esp+656]
	push	eax
	lea	ecx, DWORD PTR _newReligion$[esp+816]
	mov	DWORD PTR __$EHRec$[esp+672], 1
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief

; 773  : 
; 774  : 	// Found it
; 775  : 	m_CurrentReligions.push_back(newReligion);

	lea	ecx, DWORD PTR _newReligion$[esp+660]
	push	ecx
	mov	ecx, edi
	call	?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z ; FStaticVector<CvReligion,16,0,297,0>::push_back

; 776  : 
; 777  : 	// Update game systems
; 778  : 	kPlayer.UpdateReligion();

	mov	ecx, ebp
	call	?UpdateReligion@CvPlayer@@QAEXXZ	; CvPlayer::UpdateReligion

; 779  : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 780  : 	kPlayer.doSelfConsistencyCheckAllCities();
; 781  : #endif
; 782  : 	kPlayer.ChangeFaith(-GetMinimumFaithNextPantheon());

	mov	eax, DWORD PTR [edi+5264]
	neg	eax
	push	eax
	mov	ecx, ebp
	call	?ChangeFaith@CvPlayer@@QAEXH@Z		; CvPlayer::ChangeFaith

; 783  : 
; 784  : 	int iIncrement = GC.getRELIGION_GAME_FAITH_DELTA_NEXT_PANTHEON();

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7872

; 785  : 	iIncrement *= GC.getGame().getGameSpeedInfo().getTrainPercent();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	mov	DWORD PTR _iIncrement$[esp+660], edx
	call	?getGameSpeedInfo@CvGame@@QBEAAVCvGameSpeedInfo@@XZ ; CvGame::getGameSpeedInfo
	mov	ecx, eax
	call	?getTrainPercent@CvGameSpeedInfo@@QBEHXZ ; CvGameSpeedInfo::getTrainPercent
	mov	ecx, eax
	imul	ecx, DWORD PTR _iIncrement$[esp+660]

; 786  : 	iIncrement /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx

; 787  : 	SetMinimumFaithNextPantheon(GetMinimumFaithNextPantheon() + iIncrement);

	mov	ecx, DWORD PTR [edi+5264]
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	add	ecx, eax
	mov	DWORD PTR [edi+5264], ecx

; 788  : 
; 789  : #ifdef AUI_RELIGION_FIX_FOUND_PANTHEON_NULL_POINTER_DEREFERENCE
; 790  : 	CvCity* pCapitol = GET_PLAYER(ePlayer).getCapitalCity();
; 791  : 	if (pCapitol)
; 792  : 	{
; 793  : #endif
; 794  : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8596
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	mov	edi, eax

; 795  : 	if(pkScriptSystem) 

	test	edi, edi
	je	$LN148@FoundPanth

; 796  : 	{
; 797  : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$225468[esp+660]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle

; 798  : 		args->Push(ePlayer);

	mov	ecx, DWORD PTR _args$225468[esp+660]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	push	ebx
	mov	BYTE PTR __$EHRec$[esp+672], 2
	call	edx

; 799  : #ifdef AUI_RELIGION_FIX_FOUND_PANTHEON_NULL_POINTER_DEREFERENCE
; 800  : 		args->Push(pCapitol->GetID());
; 801  : #else
; 802  : 		args->Push(GET_PLAYER(ePlayer).getCapitalCity()->GetID());

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ebx, DWORD PTR _args$225468[esp+660]
	add	esi, eax
	mov	ecx, esi
	call	?getCapitalCity@CvPlayer@@QAEPAVCvCity@@XZ ; CvPlayer::getCapitalCity
	mov	eax, DWORD PTR [eax+120]
	mov	edx, DWORD PTR [ebx]
	push	eax
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, ebx
	call	eax

; 803  : #endif
; 804  : 		args->Push(RELIGION_PANTHEON);

	mov	ecx, DWORD PTR _args$225468[esp+660]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	push	0
	call	eax

; 805  : 		args->Push(eBelief);

	mov	ecx, DWORD PTR _args$225468[esp+660]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _eBelief$[esp+656]
	mov	edx, DWORD PTR [edx+8]
	push	eax
	call	edx

; 806  : 
; 807  : 		bool bResult;
; 808  : 		LuaSupport::CallHook(pkScriptSystem, "PantheonFounded", args.get(), bResult);

	mov	ecx, DWORD PTR _args$225468[esp+660]
	lea	eax, DWORD PTR _bResult$225469[esp+660]
	push	eax
	push	ecx
	push	OFFSET $SG225470
	push	edi
	call	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallHook
	add	esp, 16					; 00000010H

; 809  : 	}

	lea	ecx, DWORD PTR _args$225468[esp+660]
	mov	BYTE PTR __$EHRec$[esp+668], 1
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN148@FoundPanth:

; 810  : #ifdef AUI_RELIGION_FIX_FOUND_PANTHEON_NULL_POINTER_DEREFERENCE
; 811  : 	}
; 812  : #endif
; 813  : 
; 814  : 	// Spread the pantheon into each of their cities
; 815  : 	int iLoop;
; 816  : 	CvCity* pLoopCity;
; 817  : 	for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	edx, DWORD PTR _iLoop$[esp+664]
	push	edx
	mov	ecx, ebp
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN12@FoundPanth
$LL14@FoundPanth:

; 818  : 	{
; 819  : 		// Add enough pressure to make this the likely majority religion
; 820  : 		pLoopCity->GetCityReligions()->AddReligiousPressure(FOLLOWER_CHANGE_PANTHEON_FOUNDED, newReligion.m_eReligion, GC.getRELIGION_ATHEISM_PRESSURE_PER_POP() * pLoopCity->getPopulation() * 2);

	mov	edi, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7888
	push	-1
	mov	ecx, esi
	call	?getPopulation@CvCity@@QBEHXZ		; CvCity::getPopulation
	imul	eax, edi
	add	eax, eax
	push	eax
	mov	eax, DWORD PTR _newReligion$[esp+668]
	push	eax
	push	4
	mov	ecx, esi
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?AddReligiousPressure@CvCityReligions@@QAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@HW4PlayerTypes@@@Z ; CvCityReligions::AddReligiousPressure
	push	0
	lea	ecx, DWORD PTR _iLoop$[esp+664]
	push	ecx
	mov	ecx, ebp
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LL14@FoundPanth
$LN12@FoundPanth:

; 821  : 	}
; 822  : 
; 823  : 	// Send out messaging
; 824  : 	CvReligionEntry* pEntry = GC.getReligionInfo(newReligion.m_eReligion);

	mov	edx, DWORD PTR _newReligion$[esp+660]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo
	mov	esi, eax

; 825  : 	CvBeliefEntry* pBelief = GC.getBeliefInfo(eBelief);

	mov	eax, DWORD PTR _eBelief$[esp+656]
	push	eax
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR _pEntry$[esp+664], esi
	call	?getBeliefInfo@CvGlobals@@QAEPAVCvBeliefEntry@@W4BeliefTypes@@@Z ; CvGlobals::getBeliefInfo
	mov	ebx, eax
	mov	DWORD PTR _pBelief$[esp+660], ebx

; 826  : 	if(pEntry && pBelief)

	test	esi, esi
	je	$LN146@FoundPanth
	test	ebx, ebx
	je	$LN146@FoundPanth

; 827  : 	{
; 828  : 		//Add replay message.
; 829  : 		Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_PANTHEON_FOUNDED_S");

	mov	esi, DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	lea	ecx, DWORD PTR _strSummary$225479[esp+660]
	push	OFFSET $SG225481
	push	ecx
	call	esi

; 830  : 		Localization::String replayText = Localization::Lookup("TXT_KEY_NOTIFICATION_PANTHEON_FOUNDED");

	lea	edx, DWORD PTR _replayText$225482[esp+668]
	push	OFFSET $SG225484
	push	edx
	mov	BYTE PTR __$EHRec$[esp+684], 3
	call	esi
	add	esp, 16					; 00000010H

; 831  : 		replayText << kPlayer.getCivilizationShortDescriptionKey() << pBelief->getShortDescription() << pBelief->GetDescriptionKey();

	lea	ecx, DWORD PTR [ebx+64]
	mov	BYTE PTR __$EHRec$[esp+668], 4
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, ebx
	mov	edi, eax
	call	?getShortDescription@CvBeliefEntry@@QBEPBDXZ ; CvBeliefEntry::getShortDescription
	mov	ecx, ebp
	mov	DWORD PTR $T244610[esp+660], eax
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	esi, DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z
	push	eax
	lea	ecx, DWORD PTR _replayText$225482[esp+664]
	call	esi
	mov	eax, DWORD PTR $T244610[esp+660]
	push	eax
	lea	ecx, DWORD PTR _replayText$225482[esp+664]
	call	esi
	push	edi
	lea	ecx, DWORD PTR _replayText$225482[esp+664]
	call	esi

; 832  : 
; 833  : 		kGame.addReplayMessage(REPLAY_MESSAGE_PANTHEON_FOUNDED, newReligion.m_eFounder, replayText.toUTF8());

	mov	edi, DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	lea	ecx, DWORD PTR _replayText$225482[esp+660]
	call	edi
	xor	ebp, ebp
	cmp	eax, ebp
	jne	SHORT $LN86@FoundPanth
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN86@FoundPanth:
	push	eax
	lea	ecx, DWORD PTR $T244612[esp+664]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	edx, DWORD PTR _newReligion$[esp+664]
	push	-1
	push	-1
	lea	ecx, DWORD PTR $T244612[esp+668]
	push	ecx
	mov	ecx, DWORD PTR _kGame$[esp+672]
	push	edx
	push	6
	mov	BYTE PTR __$EHRec$[esp+688], 5
	call	?addReplayMessage@CvGame@@QAEXW4ReplayMessageTypes@@W4PlayerTypes@@ABVCvString@@HH@Z ; CvGame::addReplayMessage
	lea	ecx, DWORD PTR $T244612[esp+660]
	mov	BYTE PTR __$EHRec$[esp+668], 4
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 834  : 
; 835  : 		for(int iNotifyLoop = 0; iNotifyLoop < MAX_MAJOR_CIVS; ++iNotifyLoop){

	mov	DWORD PTR _iNotifyLoop$225494[esp+660], ebp
	mov	DWORD PTR tv817[esp+660], ebp
$LL147@FoundPanth:

; 836  : 			PlayerTypes eNotifyPlayer = (PlayerTypes) iNotifyLoop;
; 837  : 			CvPlayerAI& kCurNotifyPlayer = GET_PLAYER(eNotifyPlayer);

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	ecx, DWORD PTR tv817[esp+660]
	add	ecx, eax
	mov	DWORD PTR _kCurNotifyPlayer$225500[esp+660], ecx

; 838  : 			CvNotifications* pNotifications = kCurNotifyPlayer.GetNotifications();

	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ebp, eax

; 839  : 			if(pNotifications){

	test	ebp, ebp
	je	$LN9@FoundPanth

; 840  : 				// Message slightly different for founder player
; 841  : 				if(newReligion.m_eFounder == eNotifyPlayer)

	mov	edx, DWORD PTR _iNotifyLoop$225494[esp+660]
	cmp	DWORD PTR _newReligion$[esp+664], edx
	jne	$LN6@FoundPanth

; 842  : 				{
; 843  : 					Localization::String localizedText = GetLocalizedText("TXT_KEY_NOTIFICATION_PANTHEON_FOUNDED_ACTIVE_PLAYER");

	lea	eax, DWORD PTR $T244613[esp+660]
	push	OFFSET $SG225506
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	mov	ecx, eax
	mov	BYTE PTR __$EHRec$[esp+668], 6
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _localizedText$225504[esp+664]
	call	DWORD PTR __imp_??0String@Localization@@QAE@PBD@Z
	lea	ecx, DWORD PTR $T244613[esp+660]
	mov	BYTE PTR __$EHRec$[esp+668], 8
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 844  : 					localizedText << pBelief->getShortDescription() << pBelief->GetDescriptionKey();

	lea	ecx, DWORD PTR [ebx+64]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, DWORD PTR _pBelief$[esp+660]
	mov	ebx, eax
	call	?getShortDescription@CvBeliefEntry@@QBEPBDXZ ; CvBeliefEntry::getShortDescription
	push	eax
	lea	ecx, DWORD PTR _localizedText$225504[esp+664]
	call	esi
	push	ebx
	lea	ecx, DWORD PTR _localizedText$225504[esp+664]
	call	esi

; 845  : 
; 846  : 					pNotifications->Add(NOTIFICATION_PANTHEON_FOUNDED_ACTIVE_PLAYER, localizedText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$225479[esp+676]
	call	edi
	push	eax
	lea	ecx, DWORD PTR _localizedText$225504[esp+680]
	call	edi
	push	eax
	push	-381621422				; e940eb52H
	mov	ecx, ebp
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 847  : 				}

	lea	ecx, DWORD PTR _localizedText$225504[esp+660]
	mov	BYTE PTR __$EHRec$[esp+668], 4
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 848  : 				else

	mov	ebx, DWORD PTR _pBelief$[esp+660]
	jmp	$LN9@FoundPanth
$LN6@FoundPanth:

; 849  : 				{
; 850  : 					//If the notify player has not met this civ yet, display a more ambiguous notification.
; 851  : 					CvTeam& kTeam = GET_TEAM(kCurNotifyPlayer.getTeam());

	mov	ecx, DWORD PTR _kCurNotifyPlayer$225500[esp+660]
	mov	eax, DWORD PTR [ecx+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN108@FoundPanth
	mov	edx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	ecx, DWORD PTR [edx+4]
	mov	eax, DWORD PTR [ecx+eax*4]
	jmp	SHORT $LN109@FoundPanth
$LN108@FoundPanth:
	or	eax, -1
$LN109@FoundPanth:

; 852  : 					if(kTeam.isHasMet(kPlayer.getTeam()))

	mov	ecx, DWORD PTR _kPlayer$[esp+660]
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams
	mov	DWORD PTR _kTeam$225510[esp+660], eax
	call	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ	; CvPlayer::getTeam
	mov	ecx, DWORD PTR _kTeam$225510[esp+660]
	push	eax
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	test	al, al
	je	SHORT $LN4@FoundPanth

; 853  : 					{
; 854  : 						pNotifications->Add(NOTIFICATION_PANTHEON_FOUNDED, replayText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$225479[esp+676]
	call	edi
	push	eax
	lea	ecx, DWORD PTR _replayText$225482[esp+680]
	call	edi
	push	eax
	push	1028207137				; 3d493221H
	mov	ecx, ebp
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 855  : 					}
; 856  : 					else

	jmp	$LN9@FoundPanth
$LN4@FoundPanth:

; 857  : 					{
; 858  : 						Localization::String unknownFoundedText = Localization::Lookup("TXT_KEY_NOTIFICATION_PANTHEON_FOUNDED_UNKNOWN");

	lea	edx, DWORD PTR _unknownFoundedText$225513[esp+660]
	push	OFFSET $SG225515
	push	edx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8

; 859  : 						unknownFoundedText << pBelief->getShortDescription() << pBelief->GetDescriptionKey();

	lea	ecx, DWORD PTR [ebx+64]
	mov	BYTE PTR __$EHRec$[esp+668], 9
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	ecx, ebx
	mov	DWORD PTR $T244616[esp+660], eax
	call	?getShortDescription@CvBeliefEntry@@QBEPBDXZ ; CvBeliefEntry::getShortDescription
	push	eax
	lea	ecx, DWORD PTR _unknownFoundedText$225513[esp+664]
	call	esi
	mov	eax, DWORD PTR $T244616[esp+660]
	push	eax
	lea	ecx, DWORD PTR _unknownFoundedText$225513[esp+664]
	call	esi

; 860  : 
; 861  : 						pNotifications->Add(NOTIFICATION_PANTHEON_FOUNDED, unknownFoundedText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$225479[esp+676]
	call	edi
	push	eax
	lea	ecx, DWORD PTR _unknownFoundedText$225513[esp+680]
	call	edi
	push	eax
	push	1028207137				; 3d493221H
	mov	ecx, ebp
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 862  : 					}

	lea	ecx, DWORD PTR _unknownFoundedText$225513[esp+660]
	mov	BYTE PTR __$EHRec$[esp+668], 4
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN9@FoundPanth:
	mov	eax, DWORD PTR tv817[esp+660]
	inc	DWORD PTR _iNotifyLoop$225494[esp+660]
	add	eax, 63236				; 0000f704H
	cmp	eax, 1391192				; 00153a58H
	mov	DWORD PTR tv817[esp+660], eax
	jl	$LL147@FoundPanth

; 863  : 				}
; 864  : 			}
; 865  : 		}
; 866  : 
; 867  : 		// Logging
; 868  : 		if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	$LN2@FoundPanth

; 869  : 		{
; 870  : 			CvString strLogMsg;

	lea	ecx, DWORD PTR _strLogMsg$225519[esp+660]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 871  : 			strLogMsg = kPlayer.getCivilizationShortDescription();

	mov	ecx, DWORD PTR _kPlayer$[esp+660]
	mov	BYTE PTR __$EHRec$[esp+668], 10		; 0000000aH
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	lea	ecx, DWORD PTR _strLogMsg$225519[esp+660]
	test	eax, eax
	je	SHORT $LN125@FoundPanth
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN124@FoundPanth
$LN125@FoundPanth:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN124@FoundPanth:

; 872  : 			strLogMsg += ", PANTHEON FOUNDED, ";

	push	OFFSET $SG225520
	lea	ecx, DWORD PTR _strLogMsg$225519[esp+664]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 873  : 			strLogMsg += pEntry->GetDescription();

	mov	ecx, DWORD PTR _pEntry$[esp+660]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strLogMsg$225519[esp+664]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 874  : 			LogReligionMessage(strLogMsg);

	lea	ecx, DWORD PTR _strLogMsg$225519[esp+660]
	push	ecx
	mov	ecx, DWORD PTR _this$[esp+664]
	call	?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z ; CvGameReligions::LogReligionMessage

; 875  : 		}

	lea	ecx, DWORD PTR _strLogMsg$225519[esp+660]
	mov	BYTE PTR __$EHRec$[esp+668], 4
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@FoundPanth:

; 876  : 
; 877  : 		//Achievements!
; 878  : 		if(ePlayer == GC.getGame().getActivePlayer())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR _ePlayer$[esp+656], eax
	jne	SHORT $LN1@FoundPanth

; 879  : 		{
; 880  : 			gDLL->UnlockAchievement(ACHIEVEMENT_XP1_10);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8596
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+828]
	push	200					; 000000c8H
	call	eax
$LN1@FoundPanth:

; 881  : 		}
; 882  : 	}

	mov	esi, DWORD PTR __imp_??1String@Localization@@UAE@XZ
	lea	ecx, DWORD PTR _replayText$225482[esp+660]
	mov	BYTE PTR __$EHRec$[esp+668], 3
	call	esi
	lea	ecx, DWORD PTR _strSummary$225479[esp+660]
	mov	BYTE PTR __$EHRec$[esp+668], 1
	call	esi
$LN146@FoundPanth:

; 883  : 
; 884  : 	GC.GetEngineUserInterface()->setDirty(CityInfo_DIRTY_BIT, true);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8600
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+260]
	push	1
	push	18					; 00000012H
	call	eax

; 885  : }

	lea	ecx, DWORD PTR _newReligion$[esp+812]
	mov	DWORD PTR __$EHRec$[esp+668], -1
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	mov	ecx, DWORD PTR __$EHRec$[esp+660]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 644				; 00000284H
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$9:
	lea	ecx, DWORD PTR _newReligion$[ebp+152]
	jmp	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$0:
	lea	ecx, DWORD PTR _newReligion$[ebp]
	jmp	??1CvReligion@@QAE@XZ
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$1:
	lea	ecx, DWORD PTR _args$225468[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$2:
	lea	ecx, DWORD PTR _strSummary$225479[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$3:
	lea	ecx, DWORD PTR _replayText$225482[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$4:
	lea	ecx, DWORD PTR $T244612[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$5:
	lea	ecx, DWORD PTR $T244613[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$6:
	lea	ecx, DWORD PTR _localizedText$225504[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$7:
	lea	ecx, DWORD PTR _unknownFoundedText$225513[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z$8:
	lea	ecx, DWORD PTR _strLogMsg$225519[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z ENDP ; CvGameReligions::FoundPantheon
PUBLIC	?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z ; CvGameReligions::FoundReligion
EXTRN	?getNameKey@CvCity@@QBEPBDXZ:PROC		; CvCity::getNameKey
EXTRN	?GetReligiousStrength@CvUnitEntry@@QBEHXZ:PROC	; CvUnitEntry::GetReligiousStrength
EXTRN	?IsFoundReligion@CvUnitEntry@@QBE_NXZ:PROC	; CvUnitEntry::IsFoundReligion
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$7
	DD	04H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$9
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z
_TEXT	SEGMENT
_iNotifyLoop$225571 = -696				; size = 4
_args$225555 = -696					; size = 4
tv865 = -692						; size = 4
_eBelief$ = -692					; size = 4
_bResult$225556 = -685					; size = 1
_kNotifyTeam$225586 = -684				; size = 4
_kNotifyPlayer$225577 = -684				; size = 4
_this$ = -680						; size = 4
_pEntry$ = -676						; size = 4
_kPlayer$ = -672					; size = 4
_iLoopUnit$ = -668					; size = 4
_strLogMsg$225593 = -664				; size = 28
$T244858 = -664						; size = 28
_szReligionName$225560 = -636				; size = 28
_unknownCivText$225589 = -608				; size = 80
_localizedText$225581 = -608				; size = 80
_replayText$225565 = -528				; size = 80
$T244860 = -448						; size = 28
_strSummary$225562 = -420				; size = 80
_kReligion$ = -340					; size = 328
__$EHRec$ = -12						; size = 12
_ePlayer$ = 8						; size = 4
_eReligion$ = 12					; size = 4
_szCustomName$ = 16					; size = 4
_eBelief1$ = 20						; size = 4
_eBelief2$ = 24						; size = 4
_eBelief3$ = 28						; size = 4
_eBelief4$ = 32						; size = 4
_pkHolyCity$ = 36					; size = 4
?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z PROC ; CvGameReligions::FoundReligion, COMDAT
; _this$ = ecx

; 889  : {

	push	-1
	push	__ehhandler$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 684				; 000002acH

; 890  : 	CvPlayer& kPlayer = GET_PLAYER(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[esp+692]
	push	ebx
	push	ebp

; 891  : 
; 892  : 	CvReligion kReligion(eReligion, ePlayer, pkHolyCity, false);

	mov	ebp, DWORD PTR _pkHolyCity$[esp+700]
	push	esi
	mov	ebx, eax
	push	edi
	imul	ebx, 63236				; 0000f704H
	add	ebx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	edi, DWORD PTR _eReligion$[esp+708]
	push	0
	push	ebp
	mov	esi, ecx
	push	eax
	push	edi
	lea	ecx, DWORD PTR _kReligion$[esp+728]
	mov	DWORD PTR _this$[esp+728], esi
	mov	DWORD PTR _kPlayer$[esp+728], ebx
	call	??0CvReligion@@QAE@W4ReligionTypes@@W4PlayerTypes@@PAVCvCity@@_N@Z ; CvReligion::CvReligion

; 893  : 
; 894  : 	// Copy over belief from your pantheon
; 895  : 	BeliefTypes eBelief = GC.getGame().GetGameReligions()->GetBeliefInPantheon(kPlayer.GetID());

	mov	eax, DWORD PTR [ebx+44]
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	eax
	mov	DWORD PTR __$EHRec$[esp+724], 0
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions
	mov	ecx, eax
	call	?GetBeliefInPantheon@CvGameReligions@@QBE?AW4BeliefTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetBeliefInPantheon
	mov	DWORD PTR _eBelief$[esp+712], eax

; 896  : 	if(eBelief != NO_BELIEF)

	cmp	eax, -1
	je	SHORT $LN20@FoundRelig

; 897  : 		kReligion.m_Beliefs.AddBelief(eBelief);

	push	eax
	lea	ecx, DWORD PTR _kReligion$[esp+868]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief
$LN20@FoundRelig:

; 898  : 
; 899  : 	kReligion.m_Beliefs.AddBelief(eBelief1);

	mov	eax, DWORD PTR _eBelief1$[esp+708]
	push	eax
	lea	ecx, DWORD PTR _kReligion$[esp+868]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief

; 900  : 	kReligion.m_Beliefs.AddBelief(eBelief2);

	mov	ecx, DWORD PTR _eBelief2$[esp+708]
	push	ecx
	lea	ecx, DWORD PTR _kReligion$[esp+868]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief

; 901  : 
; 902  : 	if(eBelief3 != NO_BELIEF)

	mov	eax, DWORD PTR _eBelief3$[esp+708]
	cmp	eax, -1
	je	SHORT $LN19@FoundRelig

; 903  : 	{
; 904  : 		kReligion.m_Beliefs.AddBelief(eBelief3);

	push	eax
	lea	ecx, DWORD PTR _kReligion$[esp+868]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief
$LN19@FoundRelig:

; 905  : 	}
; 906  : 
; 907  : 	if(eBelief4 != NO_BELIEF)

	mov	eax, DWORD PTR _eBelief4$[esp+708]
	cmp	eax, -1
	je	SHORT $LN18@FoundRelig

; 908  : 	{
; 909  : 		kReligion.m_Beliefs.AddBelief(eBelief4);

	push	eax
	lea	ecx, DWORD PTR _kReligion$[esp+868]
	call	?AddBelief@CvReligionBeliefs@@QAEXW4BeliefTypes@@@Z ; CvReligionBeliefs::AddBelief
$LN18@FoundRelig:

; 910  : 	}
; 911  : 
; 912  : 	if(szCustomName != NULL && strlen(szCustomName) <= sizeof(kReligion.m_szCustomName))

	mov	eax, DWORD PTR _szCustomName$[esp+708]
	test	eax, eax
	je	SHORT $LN41@FoundRelig
	lea	edx, DWORD PTR [eax+1]
	npad	4
$LL153@FoundRelig:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL153@FoundRelig
	sub	eax, edx
	cmp	eax, 128				; 00000080H
	ja	SHORT $LN41@FoundRelig

; 913  : 	{
; 914  : 		strcpy_s(kReligion.m_szCustomName, szCustomName);

	mov	edx, DWORD PTR _szCustomName$[esp+708]
	push	edx
	lea	eax, DWORD PTR _kReligion$[esp+738]
	push	128					; 00000080H
	push	eax
	call	DWORD PTR __imp__strcpy_s
	add	esp, 12					; 0000000cH
$LN41@FoundRelig:

; 915  : 	}
; 916  : 
; 917  : 	// Found it
; 918  : 	m_CurrentReligions.push_back(kReligion);

	lea	ecx, DWORD PTR _kReligion$[esp+712]
	push	ecx
	mov	ecx, esi
	call	?push_back@?$FStaticVector@VCvReligion@@$0BA@$0A@$0BCJ@$0A@@@QAEIABVCvReligion@@@Z ; FStaticVector<CvReligion,16,0,297,0>::push_back

; 919  : 
; 920  : 	// Inform the holy city
; 921  : 	pkHolyCity->GetCityReligions()->DoReligionFounded(kReligion.m_eReligion);

	mov	edx, DWORD PTR _kReligion$[esp+712]
	push	edx
	mov	ecx, ebp
	call	?GetCityReligions@CvCity@@QBEPAVCvCityReligions@@XZ ; CvCity::GetCityReligions
	mov	ecx, eax
	call	?DoReligionFounded@CvCityReligions@@QAEXW4ReligionTypes@@@Z ; CvCityReligions::DoReligionFounded

; 922  : 
; 923  : 	// Update game systems
; 924  : 	kPlayer.UpdateReligion();

	mov	ecx, ebx
	call	?UpdateReligion@CvPlayer@@QAEXXZ	; CvPlayer::UpdateReligion

; 925  : #ifdef AUI_CITIZENS_MID_TURN_ASSIGN_RUNS_SELF_CONSISTENCY
; 926  : 	kPlayer.doSelfConsistencyCheckAllCities();
; 927  : #endif
; 928  : 	kPlayer.GetReligions()->SetFoundingReligion(false);

	mov	ecx, ebx
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions

; 929  : 
; 930  : #ifdef NQ_ALLOW_RELIGION_ONE_SHOTS
; 931  : 	kPlayer.DoReligionOneShots(eReligion);

	push	edi
	mov	ecx, ebx
	mov	DWORD PTR [eax+8], 0
	call	?DoReligionOneShots@CvPlayer@@QAEXW4ReligionTypes@@@Z ; CvPlayer::DoReligionOneShots

; 932  : #endif
; 933  : 
; 934  : 	// In case we have another prophet sitting around, make sure he's set to this religion
; 935  : 	int iLoopUnit;
; 936  : 	CvUnit* pLoopUnit;
; 937  : 	for(pLoopUnit = kPlayer.firstUnit(&iLoopUnit); pLoopUnit != NULL; pLoopUnit = kPlayer.nextUnit(&iLoopUnit))

	push	0
	lea	eax, DWORD PTR _iLoopUnit$[esp+716]
	push	eax
	mov	ecx, ebx
	call	?firstUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::firstUnit
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN14@FoundRelig
$LL16@FoundRelig:

; 938  : 	{
; 939  : 		if(pLoopUnit->getUnitInfo().IsFoundReligion())

	mov	ecx, esi
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?IsFoundReligion@CvUnitEntry@@QBE_NXZ	; CvUnitEntry::IsFoundReligion
	test	al, al
	je	SHORT $LN15@FoundRelig

; 940  : 		{
; 941  : 			pLoopUnit->GetReligionData()->SetReligion(eReligion);

	mov	eax, DWORD PTR [esi+1888]
	mov	DWORD PTR [eax], edi

; 942  : 			pLoopUnit->GetReligionData()->SetSpreadsLeft(pLoopUnit->getUnitInfo().GetReligionSpreads());

	mov	ebp, DWORD PTR [esi+1888]
	mov	ecx, esi
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?GetReligionSpreads@CvUnitEntry@@QBEHXZ	; CvUnitEntry::GetReligionSpreads
	mov	DWORD PTR [ebp+8], eax

; 943  : 			pLoopUnit->GetReligionData()->SetReligiousStrength(pLoopUnit->getUnitInfo().GetReligiousStrength());

	mov	ebp, DWORD PTR [esi+1888]
	mov	ecx, esi
	call	?getUnitInfo@CvUnit@@QBEAAVCvUnitEntry@@XZ ; CvUnit::getUnitInfo
	mov	ecx, eax
	call	?GetReligiousStrength@CvUnitEntry@@QBEHXZ ; CvUnitEntry::GetReligiousStrength
	mov	DWORD PTR [ebp+4], eax
	mov	ebp, DWORD PTR _pkHolyCity$[esp+708]
$LN15@FoundRelig:
	push	0
	lea	ecx, DWORD PTR _iLoopUnit$[esp+716]
	push	ecx
	mov	ecx, ebx
	call	?nextUnit@CvPlayer@@QAEPAVCvUnit@@PAH_N@Z ; CvPlayer::nextUnit
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LL16@FoundRelig
$LN14@FoundRelig:

; 944  : 		}
; 945  : 	}
; 946  : 
; 947  : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8596
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	esi, eax

; 948  : 	if(pkScriptSystem)

	test	esi, esi
	je	$LN12@FoundRelig

; 949  : 	{
; 950  : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$225555[esp+712]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle

; 951  : 		args->Push(ePlayer);

	mov	ecx, DWORD PTR _args$225555[esp+712]
	mov	edx, DWORD PTR [ecx]
	push	DWORD PTR _ePlayer$[esp+708]
	mov	eax, DWORD PTR [edx+8]
	mov	BYTE PTR __$EHRec$[esp+724], 1
	call	eax

; 952  : 		args->Push(pkHolyCity->GetID());

	mov	eax, DWORD PTR [ebp+120]
	mov	ecx, DWORD PTR _args$225555[esp+712]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+8]
	call	eax

; 953  : 		args->Push(eReligion);

	mov	ecx, DWORD PTR _args$225555[esp+712]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	push	edi
	call	eax

; 954  : 		args->Push(eBelief);

	mov	ecx, DWORD PTR _args$225555[esp+712]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _eBelief$[esp+712]
	mov	edx, DWORD PTR [edx+8]
	push	eax
	call	edx

; 955  : 		args->Push(eBelief1);

	mov	ecx, DWORD PTR _args$225555[esp+712]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _eBelief1$[esp+708]
	mov	eax, DWORD PTR [eax+8]
	push	edx
	call	eax

; 956  : 		args->Push(eBelief2);

	mov	ecx, DWORD PTR _args$225555[esp+712]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _eBelief2$[esp+708]
	mov	edx, DWORD PTR [edx+8]
	push	eax
	call	edx

; 957  : 		args->Push(eBelief3);

	mov	ecx, DWORD PTR _args$225555[esp+712]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _eBelief3$[esp+708]
	mov	eax, DWORD PTR [eax+8]
	push	edx
	call	eax

; 958  : 		args->Push(eBelief4);

	mov	ecx, DWORD PTR _args$225555[esp+712]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _eBelief4$[esp+708]
	mov	edx, DWORD PTR [edx+8]
	push	eax
	call	edx

; 959  : 
; 960  : 		bool bResult;
; 961  : 		LuaSupport::CallHook(pkScriptSystem, "ReligionFounded", args.get(), bResult);

	mov	ecx, DWORD PTR _args$225555[esp+712]
	lea	eax, DWORD PTR _bResult$225556[esp+712]
	push	eax
	push	ecx
	push	OFFSET $SG225557
	push	esi
	call	?CallHook@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallHook
	add	esp, 16					; 00000010H

; 962  : 	}

	lea	ecx, DWORD PTR _args$225555[esp+712]
	mov	BYTE PTR __$EHRec$[esp+720], 0
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN12@FoundRelig:

; 963  : 
; 964  : 	// Send out messaging
; 965  : 	CvReligionEntry* pEntry = GC.getReligionInfo(kReligion.m_eReligion);

	mov	edx, DWORD PTR _kReligion$[esp+712]
	push	edx
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getReligionInfo@CvGlobals@@QAEPAVCvReligionEntry@@W4ReligionTypes@@@Z ; CvGlobals::getReligionInfo
	mov	DWORD PTR _pEntry$[esp+712], eax

; 966  : 	if(pEntry)

	test	eax, eax
	je	$LN11@FoundRelig

; 967  : 	{
; 968  : 		//Add replay message
; 969  : 		CvString szReligionName = kReligion.GetName();

	lea	eax, DWORD PTR _szReligionName$225560[esp+712]
	push	eax
	lea	ecx, DWORD PTR _kReligion$[esp+716]
	call	?GetName@CvReligion@@QBE?AVCvString@@XZ	; CvReligion::GetName

; 970  : 		Localization::String strSummary = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_FOUNDED_S");

	mov	esi, DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	lea	ecx, DWORD PTR _strSummary$225562[esp+712]
	push	OFFSET $SG225564
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+728], 2
	call	esi

; 971  : 		Localization::String replayText = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_FOUNDED");

	lea	edx, DWORD PTR _replayText$225565[esp+720]
	push	OFFSET $SG225567
	push	edx
	mov	BYTE PTR __$EHRec$[esp+736], 3
	call	esi
	add	esp, 16					; 00000010H

; 972  : 		replayText << kPlayer.getCivilizationShortDescriptionKey() << szReligionName << pkHolyCity->getNameKey();

	mov	ecx, ebp
	mov	BYTE PTR __$EHRec$[esp+720], 4
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	ecx, ebx
	mov	esi, eax
	call	?getCivilizationShortDescriptionKey@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescriptionKey
	mov	edi, DWORD PTR __imp_?PushArgument@String@Localization@@QAE_NPBD@Z
	push	eax
	lea	ecx, DWORD PTR _replayText$225565[esp+716]
	call	edi
	lea	ecx, DWORD PTR _szReligionName$225560[esp+712]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _replayText$225565[esp+716]
	call	edi
	push	esi
	lea	ecx, DWORD PTR _replayText$225565[esp+716]
	call	edi

; 973  : 
; 974  : 		GC.getGame().addReplayMessage(REPLAY_MESSAGE_RELIGION_FOUNDED, kReligion.m_eFounder, replayText.toUTF8(), kReligion.m_iHolyCityX, kReligion.m_iHolyCityY);

	mov	esi, DWORD PTR __imp_?toUTF8@String@Localization@@QAEPBDXZ
	lea	ecx, DWORD PTR _replayText$225565[esp+712]
	call	esi
	xor	ebp, ebp
	cmp	eax, ebp
	jne	SHORT $LN92@FoundRelig
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN92@FoundRelig:
	push	eax
	lea	ecx, DWORD PTR $T244858[esp+716]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR _kReligion$[esp+724]
	mov	ecx, DWORD PTR _kReligion$[esp+720]
	push	eax
	mov	eax, DWORD PTR _kReligion$[esp+720]
	push	ecx
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	lea	edx, DWORD PTR $T244858[esp+720]
	push	edx
	push	eax
	push	5
	mov	BYTE PTR __$EHRec$[esp+740], 5
	call	?addReplayMessage@CvGame@@QAEXW4ReplayMessageTypes@@W4PlayerTypes@@ABVCvString@@HH@Z ; CvGame::addReplayMessage
	lea	ecx, DWORD PTR $T244858[esp+712]
	mov	BYTE PTR __$EHRec$[esp+720], 4
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 975  : 
; 976  : 		//Notify the masses
; 977  : 		for(int iNotifyLoop = 0; iNotifyLoop < MAX_MAJOR_CIVS; ++iNotifyLoop){

	mov	DWORD PTR _iNotifyLoop$225571[esp+712], ebp
	mov	DWORD PTR tv865[esp+712], ebp
	npad	2
$LL154@FoundRelig:

; 978  : 			PlayerTypes eNotifyPlayer = (PlayerTypes) iNotifyLoop;
; 979  : 			CvPlayerAI& kNotifyPlayer = GET_PLAYER(eNotifyPlayer);

	mov	ecx, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers
	mov	edx, DWORD PTR tv865[esp+712]
	add	ecx, edx
	mov	DWORD PTR _kNotifyPlayer$225577[esp+712], ecx

; 980  : 			CvNotifications* pNotifications = kNotifyPlayer.GetNotifications();

	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	ebp, eax

; 981  : 			if(pNotifications){

	test	ebp, ebp
	je	$LN9@FoundRelig

; 982  : 				// Message slightly different for founder player
; 983  : 				if(kReligion.m_eFounder == eNotifyPlayer)

	mov	eax, DWORD PTR _iNotifyLoop$225571[esp+712]
	cmp	DWORD PTR _kReligion$[esp+716], eax
	jne	$LN6@FoundRelig

; 984  : 				{
; 985  : 					Localization::String localizedText = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_FOUNDED_ACTIVE_PLAYER");

	lea	ecx, DWORD PTR _localizedText$225581[esp+712]
	push	OFFSET $SG225583
	push	ecx
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8

; 986  : 					localizedText << szReligionName << pkHolyCity->getNameKey();

	mov	ecx, DWORD PTR _pkHolyCity$[esp+708]
	mov	BYTE PTR __$EHRec$[esp+720], 6
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	lea	ecx, DWORD PTR _szReligionName$225560[esp+712]
	mov	ebx, eax
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _localizedText$225581[esp+716]
	call	edi
	push	ebx
	lea	ecx, DWORD PTR _localizedText$225581[esp+716]
	call	edi

; 987  : 
; 988  : 					pNotifications->Add(NOTIFICATION_RELIGION_FOUNDED_ACTIVE_PLAYER, localizedText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$225562[esp+728]
	call	esi
	push	eax
	lea	ecx, DWORD PTR _localizedText$225581[esp+732]
	call	esi
	push	eax
	push	216217508				; 0ce337a4H
	mov	ecx, ebp
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 989  : 				}

	lea	ecx, DWORD PTR _localizedText$225581[esp+712]
	mov	BYTE PTR __$EHRec$[esp+720], 4
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ

; 990  : 				else

	mov	ebx, DWORD PTR _kPlayer$[esp+712]
	jmp	$LN9@FoundRelig
$LN6@FoundRelig:

; 991  : 				{
; 992  : 					CvTeam& kNotifyTeam = GET_TEAM(kNotifyPlayer.getTeam());

	mov	edx, DWORD PTR _kNotifyPlayer$225577[esp+712]
	mov	eax, DWORD PTR [edx+44]
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN111@FoundRelig
	mov	ecx, DWORD PTR ?sr_TeamTypes@CvPreGame@@3ABV?$vector@W4TeamTypes@@V?$allocator@W4TeamTypes@@@std@@@std@@B ; CvPreGame::sr_TeamTypes
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	jmp	SHORT $LN112@FoundRelig
$LN111@FoundRelig:
	or	eax, -1
$LN112@FoundRelig:
	imul	eax, 2984				; 00000ba8H
	add	eax, DWORD PTR ?m_aTeams@CvTeam@@1PAV1@A ; CvTeam::m_aTeams

; 993  : 
; 994  : 					if(kNotifyTeam.isHasMet(kPlayer.getTeam()))

	mov	ecx, ebx
	mov	DWORD PTR _kNotifyTeam$225586[esp+712], eax
	call	?getTeam@CvPlayer@@QBE?AW4TeamTypes@@XZ	; CvPlayer::getTeam
	mov	ecx, DWORD PTR _kNotifyTeam$225586[esp+712]
	push	eax
	call	?isHasMet@CvTeam@@QBE_NW4TeamTypes@@@Z	; CvTeam::isHasMet
	test	al, al
	je	SHORT $LN4@FoundRelig

; 995  : 					{
; 996  : 						pNotifications->Add(NOTIFICATION_RELIGION_FOUNDED, replayText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$225562[esp+728]
	call	esi
	push	eax
	lea	ecx, DWORD PTR _replayText$225565[esp+732]
	call	esi
	push	eax
	push	1516141982				; 5a5e7d9eH
	mov	ecx, ebp
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 997  : 					}
; 998  : 					else

	jmp	SHORT $LN9@FoundRelig
$LN4@FoundRelig:

; 999  : 					{
; 1000 : 						Localization::String unknownCivText = Localization::Lookup("TXT_KEY_NOTIFICATION_RELIGION_FOUNDED_UNKNOWN");

	lea	eax, DWORD PTR _unknownCivText$225589[esp+712]
	push	OFFSET $SG225591
	push	eax
	call	DWORD PTR __imp_?Lookup@Localization@@YA?AVString@1@PBD@Z
	add	esp, 8

; 1001 : 						unknownCivText << szReligionName;

	lea	ecx, DWORD PTR _szReligionName$225560[esp+712]
	mov	BYTE PTR __$EHRec$[esp+720], 7
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _unknownCivText$225589[esp+716]
	call	edi

; 1002 : 
; 1003 : 						pNotifications->Add(NOTIFICATION_RELIGION_FOUNDED, unknownCivText.toUTF8(), strSummary.toUTF8(), -1, -1, -1);

	push	-1
	push	-1
	push	-1
	push	-1
	lea	ecx, DWORD PTR _strSummary$225562[esp+728]
	call	esi
	push	eax
	lea	ecx, DWORD PTR _unknownCivText$225589[esp+732]
	call	esi
	push	eax
	push	1516141982				; 5a5e7d9eH
	mov	ecx, ebp
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 1004 : 					}

	lea	ecx, DWORD PTR _unknownCivText$225589[esp+712]
	mov	BYTE PTR __$EHRec$[esp+720], 4
	call	DWORD PTR __imp_??1String@Localization@@UAE@XZ
$LN9@FoundRelig:
	mov	eax, DWORD PTR tv865[esp+712]
	inc	DWORD PTR _iNotifyLoop$225571[esp+712]
	add	eax, 63236				; 0000f704H
	cmp	eax, 1391192				; 00153a58H
	mov	DWORD PTR tv865[esp+712], eax
	jl	$LL154@FoundRelig

; 1005 : 				}
; 1006 : 			}
; 1007 : 		}
; 1008 : 
; 1009 : 		// Logging
; 1010 : 		if(GC.getLogging())

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getLogging@CvGlobals@@QAE_NXZ		; CvGlobals::getLogging
	test	al, al
	je	$LN2@FoundRelig

; 1011 : 		{
; 1012 : 			CvString strLogMsg;

	lea	ecx, DWORD PTR _strLogMsg$225593[esp+712]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1013 : 			strLogMsg = kPlayer.getCivilizationShortDescription();

	mov	ecx, ebx
	mov	BYTE PTR __$EHRec$[esp+720], 8
	call	?getCivilizationShortDescription@CvPlayer@@QBEPBDXZ ; CvPlayer::getCivilizationShortDescription
	lea	ecx, DWORD PTR _strLogMsg$225593[esp+712]
	test	eax, eax
	je	SHORT $LN126@FoundRelig
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN125@FoundRelig
$LN126@FoundRelig:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN125@FoundRelig:

; 1014 : 			strLogMsg += ", RELIGION FOUNDED, ";

	push	OFFSET $SG225594
	lea	ecx, DWORD PTR _strLogMsg$225593[esp+716]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1015 : 			strLogMsg += pkHolyCity->getName();

	lea	ecx, DWORD PTR $T244860[esp+712]
	push	ecx
	mov	ecx, DWORD PTR _pkHolyCity$[esp+712]
	call	?getName@CvCity@@QBE?BVCvString@@XZ	; CvCity::getName
	push	eax
	lea	ecx, DWORD PTR _strLogMsg$225593[esp+716]
	mov	BYTE PTR __$EHRec$[esp+724], 9
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T244860[esp+712]
	mov	BYTE PTR __$EHRec$[esp+720], 8
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 1016 : 			strLogMsg += ", ";

	push	OFFSET $SG225596
	lea	ecx, DWORD PTR _strLogMsg$225593[esp+716]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1017 : 			strLogMsg += pEntry->GetDescription();

	mov	ecx, DWORD PTR _pEntry$[esp+712]
	add	ecx, 36					; 00000024H
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _strLogMsg$225593[esp+716]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z

; 1018 : 			LogReligionMessage(strLogMsg);

	mov	ecx, DWORD PTR _this$[esp+712]
	lea	edx, DWORD PTR _strLogMsg$225593[esp+712]
	push	edx
	call	?LogReligionMessage@CvGameReligions@@QAEXAAVCvString@@@Z ; CvGameReligions::LogReligionMessage

; 1019 : 		}

	lea	ecx, DWORD PTR _strLogMsg$225593[esp+712]
	mov	BYTE PTR __$EHRec$[esp+720], 4
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@FoundRelig:

; 1020 : 
; 1021 : 		//Achievements!
; 1022 : 		if(ePlayer == GC.getGame().getActivePlayer())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	call	?getActivePlayer@CvGame@@QBE?AW4PlayerTypes@@XZ ; CvGame::getActivePlayer
	cmp	DWORD PTR _ePlayer$[esp+708], eax
	jne	SHORT $LN1@FoundRelig

; 1023 : 		{
; 1024 : 			gDLL->UnlockAchievement(ACHIEVEMENT_XP1_11);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8596
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+828]
	push	201					; 000000c9H
	call	edx
$LN1@FoundRelig:

; 1025 : 		}
; 1026 : 	}

	mov	esi, DWORD PTR __imp_??1String@Localization@@UAE@XZ
	lea	ecx, DWORD PTR _replayText$225565[esp+712]
	mov	BYTE PTR __$EHRec$[esp+720], 3
	call	esi
	lea	ecx, DWORD PTR _strSummary$225562[esp+712]
	mov	BYTE PTR __$EHRec$[esp+720], 2
	call	esi
	lea	ecx, DWORD PTR _szReligionName$225560[esp+712]
	mov	BYTE PTR __$EHRec$[esp+720], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN11@FoundRelig:

; 1027 : 	GC.GetEngineUserInterface()->setDirty(CityInfo_DIRTY_BIT, true);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8600
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+260]
	push	1
	push	18					; 00000012H
	call	edx

; 1028 : }

	lea	ecx, DWORD PTR _kReligion$[esp+864]
	mov	DWORD PTR __$EHRec$[esp+720], -1
	call	??1CvReligionBeliefs@@QAE@XZ		; CvReligionBeliefs::~CvReligionBeliefs
	mov	ecx, DWORD PTR __$EHRec$[esp+712]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 696				; 000002b8H
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$0:
	lea	ecx, DWORD PTR _kReligion$[ebp]
	jmp	??1CvReligion@@QAE@XZ
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$1:
	lea	ecx, DWORD PTR _args$225555[ebp]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$2:
	lea	ecx, DWORD PTR _szReligionName$225560[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$3:
	lea	ecx, DWORD PTR _strSummary$225562[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$4:
	lea	ecx, DWORD PTR _replayText$225565[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$5:
	lea	ecx, DWORD PTR $T244858[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$6:
	lea	ecx, DWORD PTR _localizedText$225581[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$7:
	lea	ecx, DWORD PTR _unknownCivText$225589[ebp]
	jmp	DWORD PTR __imp_??1String@Localization@@UAE@XZ
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$8:
	lea	ecx, DWORD PTR _strLogMsg$225593[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z$9:
	lea	ecx, DWORD PTR $T244860[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FoundReligion@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@PBDW4BeliefTypes@@333PAVCvCity@@@Z ENDP ; CvGameReligions::FoundReligion
PUBLIC	?DoPopulationChange@CvCityReligions@@QAEXH@Z	; CvCityReligions::DoPopulationChange
; Function compile flags: /Ogtpy
;	COMDAT ?DoPopulationChange@CvCityReligions@@QAEXH@Z
_TEXT	SEGMENT
_iChange$ = 8						; size = 4
?DoPopulationChange@CvCityReligions@@QAEXH@Z PROC	; CvCityReligions::DoPopulationChange, COMDAT
; _this$ = ecx

; 3735 : {

	push	esi
	mov	esi, ecx

; 3736 : 	ReligionTypes eMajorityReligion = GetReligiousMajority();

	call	?GetReligiousMajority@CvCityReligions@@QAE?AW4ReligionTypes@@XZ ; CvCityReligions::GetReligiousMajority

; 3737 : 
; 3738 : 	// Only add pressure if the population went up; if starving, leave pressure alone (but recompute followers)
; 3739 : 	if(iChange > 0)

	mov	ecx, DWORD PTR _iChange$[esp]
	test	ecx, ecx
	jle	SHORT $LN8@DoPopulati

; 3740 : 	{
; 3741 : 		AddReligiousPressure(FOLLOWER_CHANGE_POP_CHANGE, eMajorityReligion, iChange * GC.getRELIGION_ATHEISM_PRESSURE_PER_POP());

	mov	edx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+7888
	imul	edx, ecx
	push	-1
	push	edx
	push	eax
	push	0
	mov	ecx, esi
	call	?AddReligiousPressure@CvCityReligions@@QAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@HW4PlayerTypes@@@Z ; CvCityReligions::AddReligiousPressure
	pop	esi

; 3746 : 	}
; 3747 : }

	ret	4
$LN8@DoPopulati:

; 3742 : 	}
; 3743 : 	else if (iChange < 0)

	jge	SHORT $LN1@DoPopulati

; 3744 : 	{
; 3745 : 		RecomputeFollowers(FOLLOWER_CHANGE_POP_CHANGE, eMajorityReligion);

	push	-1
	push	eax
	push	0
	mov	ecx, esi
	call	?RecomputeFollowers@CvCityReligions@@AAEXW4CvReligiousFollowChangeReason@@W4ReligionTypes@@W4PlayerTypes@@@Z ; CvCityReligions::RecomputeFollowers
$LN1@DoPopulati:
	pop	esi

; 3746 : 	}
; 3747 : }

	ret	4
?DoPopulationChange@CvCityReligions@@QAEXH@Z ENDP	; CvCityReligions::DoPopulationChange
_TEXT	ENDS
PUBLIC	?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Ptr$229332 = -24					; size = 4
$T245229 = -20						; size = 1
__$EHRec$ = -16						; size = 16
__Cat$245233 = 8					; size = 1
__Count$ = 8						; size = 4
?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve, COMDAT
; _this$ = ecx

; 602  : 		{	// determine new minimum length of allocated storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH

; 603  : 		if (max_size() < _Count)

	mov	edx, DWORD PTR __Count$[ebp]
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, ecx
	cmp	edx, 1073741823				; 3fffffffH
	jbe	SHORT $LN5@reserve

; 604  : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Xlen
$LN57@reserve:
$LN5@reserve:

; 605  : 		else if (capacity() < _Count)

	mov	ecx, DWORD PTR [esi+4]
	test	ecx, ecx
	jne	SHORT $LN20@reserve
	xor	eax, eax
	jmp	SHORT $LN21@reserve
$LN20@reserve:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, ecx
	sar	eax, 2
$LN21@reserve:
	cmp	eax, edx
	jae	SHORT $LN3@reserve

; 606  : 			{	// not enough room, reallocate
; 607  : 			pointer _Ptr = this->_Alval.allocate(_Count);

	push	0
	push	edx
	call	??$_Allocate@W4BeliefTypes@@@std@@YAPAW4BeliefTypes@@IPAW41@@Z ; std::_Allocate<enum BeliefTypes>

; 608  : 
; 609  : 			_TRY_BEGIN
; 610  : 			_Umove(begin(), end(), _Ptr);

	mov	ecx, DWORD PTR [esi+4]
	mov	BYTE PTR $T245229[ebp], 0
	mov	edx, DWORD PTR $T245229[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$245233[ebp]
	push	edx
	mov	ebx, eax
	mov	eax, DWORD PTR [esi+8]
	push	esi
	push	ebx
	push	eax
	push	ecx
	mov	DWORD PTR __Ptr$229332[ebp], ebx
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	??$_Uninit_copy@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@PAW4BeliefTypes@@V?$allocator@W4BeliefTypes@@@2@@std@@YAPAW4BeliefTypes@@V?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@0@0PAW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_iterator<enum BeliefTypes,std::allocator<enum BeliefTypes> >,enum BeliefTypes *,std::allocator<enum BeliefTypes> >

; 614  : 			_CATCH_END
; 615  : 
; 616  : 			size_type _Size = size();

	mov	eax, DWORD PTR [esi+4]
	mov	edi, DWORD PTR [esi+8]
	sub	edi, eax
	add	esp, 32					; 00000020H
	sar	edi, 2

; 617  : 			if (_Myfirst != 0)

	test	eax, eax
	je	SHORT $LN52@reserve

; 618  : 				{	// destroy and deallocate old array
; 619  : 				_Destroy(_Myfirst, _Mylast);
; 620  : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN52@reserve:

; 621  : 				}
; 622  : 
; 623  :  #if _HAS_ITERATOR_DEBUGGING
; 624  : 			this->_Orphan_all();
; 625  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 626  : 
; 627  : 			_Myend = _Ptr + _Count;

	mov	eax, DWORD PTR __Count$[ebp]
	lea	ecx, DWORD PTR [ebx+eax*4]

; 628  : 			_Mylast = _Ptr + _Size;

	lea	edx, DWORD PTR [ebx+edi*4]
	mov	DWORD PTR [esi+12], ecx
	mov	DWORD PTR [esi+8], edx

; 629  : 			_Myfirst = _Ptr;

	mov	DWORD PTR [esi+4], ebx
$LN3@reserve:

; 630  : 			}
; 631  : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z$0:

; 611  : 			_CATCH_ALL
; 612  : 			this->_Alval.deallocate(_Ptr, _Count);

	mov	eax, DWORD PTR __Ptr$229332[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 613  : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN58@reserve:
$LN56@reserve:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z:
	mov	eax, OFFSET __ehfuncinfo$?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve
PUBLIC	?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Insert_n
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$2
__catchsym$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$0
__unwindtable$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$5
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z
_TEXT	SEGMENT
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Cat$245467 = 8					; size = 1
__Cat$245395 = 8					; size = 1
__Where$ = 8						; size = 4
__Tmp$229739 = 12					; size = 4
__Tmp$229729 = 12					; size = 4
__Newvec$229714 = 12					; size = 4
__Count$ = 12						; size = 4
tv515 = 16						; size = 4
$T245464 = 16						; size = 1
$T245392 = 16						; size = 1
__Val$ = 16						; size = 4
?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Insert_n, COMDAT
; _this$ = ecx

; 1153 : 		{	// insert _Count * _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 8
	push	ebx
	push	esi
	mov	esi, ecx

; 1154 : 
; 1155 :  #if _HAS_ITERATOR_DEBUGGING
; 1156 : 		if (_Where._Mycont != this
; 1157 : 			|| _Where._Myptr < _Myfirst || _Mylast < _Where._Myptr)
; 1158 : 			_DEBUG_ERROR("vector insert iterator outside range");
; 1159 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1160 : 
; 1161 : 		size_type _Capacity = capacity();

	mov	edx, DWORD PTR [esi+4]
	push	edi
	mov	DWORD PTR __$EHRec$[ebp], esp
	test	edx, edx
	jne	SHORT $LN29@Insert_n
	xor	ecx, ecx
	jmp	SHORT $LN30@Insert_n
$LN29@Insert_n:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, edx
	sar	eax, 2
	mov	ecx, eax
$LN30@Insert_n:

; 1162 : 
; 1163 : 		if (_Count == 0)

	mov	edi, DWORD PTR __Count$[ebp]
	test	edi, edi
	je	$LN1@Insert_n

; 1164 : 			;
; 1165 : 		else if (max_size() - size() < _Count)

	mov	ebx, DWORD PTR [esi+8]
	mov	eax, ebx
	sub	eax, edx
	sar	eax, 2
	mov	edx, 1073741823				; 3fffffffH
	sub	edx, eax
	cmp	edx, edi
	jae	SHORT $LN12@Insert_n

; 1166 : 			_Xlen();	// result too long

	call	?_Xlen@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@KAXXZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Xlen
$LN87@Insert_n:
$LN12@Insert_n:

; 1167 : 		else if (_Capacity < size() + _Count)

	lea	edx, DWORD PTR [eax+edi]
	cmp	ecx, edx
	jae	$LN10@Insert_n

; 1168 : 			{	// not enough room, reallocate
; 1169 : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1170 : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

	mov	eax, ecx
	shr	eax, 1
	mov	ebx, 1073741823				; 3fffffffH
	sub	ebx, eax
	cmp	ebx, ecx
	jae	SHORT $LN17@Insert_n
	mov	DWORD PTR __Capacity$[ebp], 0
	mov	ecx, DWORD PTR __Capacity$[ebp]
	jmp	SHORT $LN18@Insert_n
$LN17@Insert_n:
	add	ecx, eax
	mov	DWORD PTR __Capacity$[ebp], ecx
$LN18@Insert_n:

; 1171 : 			if (_Capacity < size() + _Count)

	cmp	ecx, edx
	jae	SHORT $LN9@Insert_n

; 1172 : 				_Capacity = size() + _Count;

	mov	DWORD PTR __Capacity$[ebp], edx
	mov	ecx, edx
$LN9@Insert_n:

; 1173 : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

	push	0
	push	ecx
	call	??$_Allocate@W4BeliefTypes@@@std@@YAPAW4BeliefTypes@@IPAW41@@Z ; std::_Allocate<enum BeliefTypes>

; 1174 : 			size_type _Whereoff = _VEC_ITER_BASE(_Where) - _Myfirst;

	mov	ebx, DWORD PTR __Where$[ebp]
	sub	ebx, DWORD PTR [esi+4]

; 1175 : 			int _Ncopied = 0;
; 1176 : 
; 1177 : 			_TRY_BEGIN
; 1178 : 			_Ufill(_Newvec + _Whereoff, _Count, _Val);	// add new stuff

	mov	ecx, DWORD PTR __Val$[ebp]
	add	esp, 8
	push	ecx
	sar	ebx, 2
	push	edi
	lea	edx, DWORD PTR [eax+ebx*4]
	push	edx
	mov	ecx, esi
	mov	DWORD PTR __Newvec$229714[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	?_Ufill@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@PAW43@IABW43@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Ufill

; 1179 : 			++_Ncopied;
; 1180 : 			_Umove(this->_Myfirst, _VEC_ITER_BASE(_Where),
; 1181 : 				_Newvec);	// move prefix

	mov	edx, DWORD PTR __Cat$245395[ebp]
	mov	eax, DWORD PTR [esi+4]
	mov	BYTE PTR $T245392[ebp], 0
	mov	ecx, DWORD PTR $T245392[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Newvec$229714[ebp]
	push	edx
	mov	edx, DWORD PTR __Where$[ebp]
	push	esi
	push	ecx
	push	edx
	push	eax
	call	??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >

; 1182 : 			++_Ncopied;
; 1183 : 			_Umove(_VEC_ITER_BASE(_Where), this->_Mylast,
; 1184 : 				_Newvec + (_Whereoff + _Count));	// move suffix

	mov	eax, DWORD PTR [esi+8]
	add	esp, 24					; 00000018H
	mov	BYTE PTR $T245464[ebp], 0
	mov	edx, DWORD PTR $T245464[ebp]
	push	edx
	mov	edx, DWORD PTR __Cat$245467[ebp]
	push	edx
	lea	ecx, DWORD PTR [ebx+edi]
	mov	ebx, DWORD PTR __Newvec$229714[ebp]
	push	esi
	lea	ecx, DWORD PTR [ebx+ecx*4]
	push	ecx
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$_Uninit_copy@PAW4BeliefTypes@@PAW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAPAW4BeliefTypes@@PAW41@00AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<enum BeliefTypes *,enum BeliefTypes *,std::allocator<enum BeliefTypes> >

; 1192 : 			_CATCH_END
; 1193 : 
; 1194 : 			_Count += size();

	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, eax
	sar	ecx, 2
	add	esp, 24					; 00000018H
	add	edi, ecx

; 1195 : 			if (_Myfirst != 0)

	test	eax, eax
	je	SHORT $LN81@Insert_n

; 1196 : 				{	// destroy and deallocate old array
; 1197 : 				_Destroy(_Myfirst, _Mylast);
; 1198 : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN81@Insert_n:

; 1199 : 				}
; 1200 : 
; 1201 :  #if _HAS_ITERATOR_DEBUGGING
; 1202 : 			this->_Orphan_all();
; 1203 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1204 : 
; 1205 : 			_Myend = _Newvec + _Capacity;

	mov	edx, DWORD PTR __Capacity$[ebp]
	lea	eax, DWORD PTR [ebx+edx*4]

; 1206 : 			_Mylast = _Newvec + _Count;

	lea	ecx, DWORD PTR [ebx+edi*4]
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+8], ecx

; 1207 : 			_Myfirst = _Newvec;

	mov	DWORD PTR [esi+4], ebx

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
__catch$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$0:

; 1185 : 			_CATCH_ALL
; 1186 : 			if (1 < _Ncopied)
; 1187 : 				_Destroy(_Newvec, _Newvec + _Whereoff);
; 1188 : 			if (0 < _Ncopied)
; 1189 : 				_Destroy(_Newvec + _Whereoff, _Newvec + _Whereoff + _Count);
; 1190 : 			this->_Alval.deallocate(_Newvec, _Capacity);

	mov	edx, DWORD PTR __Newvec$229714[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
__catch$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z$2:

; 1191 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8
$LN88@Insert_n:
$LN10@Insert_n:

; 1208 : 			}
; 1209 : 		else if ((size_type)(_Mylast - _VEC_ITER_BASE(_Where)) < _Count)

	mov	eax, DWORD PTR __Where$[ebp]
	mov	ecx, ebx
	sub	ecx, eax
	sar	ecx, 2
	cmp	ecx, edi
	jae	SHORT $LN3@Insert_n

; 1210 : 			{	// new stuff spills off end
; 1211 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	edx, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$229729[ebp], ecx

; 1212 : 
; 1213 : 			_Umove(_VEC_ITER_BASE(_Where), _Mylast,
; 1214 : 				_VEC_ITER_BASE(_Where) + _Count);	// copy suffix

	lea	ecx, DWORD PTR [edi*4]
	mov	DWORD PTR tv515[ebp], ecx
	add	ecx, eax
	push	ecx
	push	ebx
	push	eax
	mov	ecx, esi
	call	??$_Umove@PAW4BeliefTypes@@@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@PAW42@00@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Umove<enum BeliefTypes *>

; 1215 : 
; 1216 : 			_TRY_BEGIN
; 1217 : 			_Ufill(_Mylast, _Count - (_Mylast - _VEC_ITER_BASE(_Where)),
; 1218 : 				_Tmp);	// insert new stuff off end

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, eax
	sub	ecx, DWORD PTR __Where$[ebp]
	lea	edx, DWORD PTR __Tmp$229729[ebp]
	sar	ecx, 2
	push	edx
	sub	edi, ecx
	push	edi
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	call	?_Ufill@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@PAW43@IABW43@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Ufill

; 1219 : 			_CATCH_ALL
; 1220 : 			_Destroy(_VEC_ITER_BASE(_Where) + _Count, _Mylast + _Count);
; 1221 : 			_RERAISE;
; 1222 : 			_CATCH_END
; 1223 : 
; 1224 : 			_Mylast += _Count;

	mov	eax, DWORD PTR tv515[ebp]
	add	DWORD PTR [esi+8], eax
	mov	esi, DWORD PTR [esi+8]

; 1225 : 
; 1226 :  #if _HAS_ITERATOR_DEBUGGING
; 1227 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1228 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1229 : 
; 1230 : 			std::fill(_VEC_ITER_BASE(_Where), _Mylast - _Count,
; 1231 : 				_Tmp);	// insert up to old end

	lea	edx, DWORD PTR __Tmp$229729[ebp]
	push	edx
	sub	esi, eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	esi
	push	eax
	call	??$fill@PAW4BeliefTypes@@W41@@std@@YAXPAW4BeliefTypes@@0ABW41@@Z ; std::fill<enum BeliefTypes *,enum BeliefTypes>
	add	esp, 12					; 0000000cH

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN3@Insert_n:

; 1232 : 			}
; 1233 : 		else
; 1234 : 			{	// new stuff can all be assigned
; 1235 : 			_Ty _Tmp = _Val;	// in case _Val is in sequence

	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]

; 1236 : 
; 1237 : 			pointer _Oldend = _Mylast;
; 1238 : 			_Mylast = _Umove(_Oldend - _Count, _Oldend,
; 1239 : 				_Mylast);	// copy suffix

	lea	eax, DWORD PTR [edi*4]
	push	ebx
	mov	edi, ebx
	sub	edi, eax
	push	ebx
	push	edi
	mov	ecx, esi
	mov	DWORD PTR __Tmp$229739[ebp], edx
	mov	DWORD PTR tv515[ebp], eax
	call	??$_Umove@PAW4BeliefTypes@@@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEPAW4BeliefTypes@@PAW42@00@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Umove<enum BeliefTypes *>

; 1240 : 
; 1241 :  #if _HAS_ITERATOR_DEBUGGING
; 1242 : 			_Orphan_range(_Where._Myptr, _Mylast);
; 1243 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1244 : 
; 1245 : 			_STDEXT _Unchecked_move_backward(_VEC_ITER_BASE(_Where), _Oldend - _Count,
; 1246 : 				_Oldend);	// copy hole

	push	ebx
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	edi
	push	eax
	call	??$_Unchecked_move_backward@PAW4BeliefTypes@@PAW41@@stdext@@YAPAW4BeliefTypes@@PAW41@00@Z ; stdext::_Unchecked_move_backward<enum BeliefTypes *,enum BeliefTypes *>

; 1247 : 			std::fill(_VEC_ITER_BASE(_Where), _VEC_ITER_BASE(_Where) + _Count,
; 1248 : 				_Tmp);	// insert into hole

	mov	eax, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR tv515[ebp]
	lea	ecx, DWORD PTR __Tmp$229739[ebp]
	push	ecx
	add	edx, eax
	push	edx
	push	eax
	call	??$fill@PAW4BeliefTypes@@W41@@std@@YAXPAW4BeliefTypes@@0ABW41@@Z ; std::fill<enum BeliefTypes *,enum BeliefTypes>
	add	esp, 24					; 00000018H
$LN1@Insert_n:

; 1249 : 			}
; 1250 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN86@Insert_n:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Insert_n
PUBLIC	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z
_TEXT	SEGMENT
__Mid$230366 = -8					; size = 8
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z PROC ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>, COMDAT

; 3082 : 	{	// order [_First, _Last), using operator<

	sub	esp, 8
	push	ebx

; 3083 : 	_Diff _Count;
; 3084 : 	for (; _ISORT_MAX < (_Count = _Last - _First) && 0 < _Ideal; )

	mov	ebx, DWORD PTR __First$[esp+8]
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR __Last$[esp+20]
	mov	eax, edi
	sub	eax, ebx
	sar	eax, 3
	cmp	eax, 32					; 00000020H
	jle	SHORT $LN25@Sort
	mov	esi, DWORD PTR __Ideal$[esp+20]
	npad	1
$LL7@Sort:
	test	esi, esi
	jle	SHORT $LN6@Sort

; 3085 : 		{	// divide and conquer by quicksort
; 3086 : 		pair<_RanIt, _RanIt> _Mid =
; 3087 : 			std::_Unguarded_partition(_First, _Last);

	push	edi
	lea	eax, DWORD PTR __Mid$230366[esp+28]
	push	ebx
	push	eax
	call	??$_Unguarded_partition@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YA?AU?$pair@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@PAU12@@0@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ; std::_Unguarded_partition<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>

; 3088 : 		_Ideal /= 2, _Ideal += _Ideal / 2;	// allow 1.5 log2(N) divisions
; 3089 : 
; 3090 : 		if (_Mid.first - _First < _Last - _Mid.second)

	mov	ebp, DWORD PTR __Mid$230366[esp+40]
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	esi, eax
	cdq
	sub	eax, edx
	sar	eax, 1
	add	esi, eax
	mov	eax, DWORD PTR __Mid$230366[esp+36]
	mov	ecx, edi
	mov	edx, eax
	sub	ecx, ebp
	sub	edx, ebx
	add	esp, 12					; 0000000cH
	and	ecx, -8					; fffffff8H
	and	edx, -8					; fffffff8H
	cmp	edx, ecx

; 3091 : 			{	// loop on second half
; 3092 : 			std::_Sort(_First, _Mid.first, _Ideal);

	push	esi
	jge	SHORT $LN5@Sort
	push	eax
	push	ebx
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>

; 3093 : 			_First = _Mid.second;

	mov	ebx, ebp

; 3094 : 			}
; 3095 : 		else

	jmp	SHORT $LN26@Sort
$LN5@Sort:

; 3096 : 			{	// loop on first half
; 3097 : 			std::_Sort(_Mid.second, _Last, _Ideal);

	push	edi
	push	ebp
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>

; 3098 : 			_Last = _Mid.first;

	mov	edi, DWORD PTR __Mid$230366[esp+36]
$LN26@Sort:
	mov	eax, edi
	sub	eax, ebx
	sar	eax, 3
	add	esp, 12					; 0000000cH
	cmp	eax, 32					; 00000020H
	jg	SHORT $LL7@Sort
$LN25@Sort:

; 3106 : 		}
; 3107 : 	else if (1 < _Count)

	cmp	eax, 1
	jle	SHORT $LN19@Sort

; 3108 : 		std::_Insertion_sort(_First, _Last);	// small

	push	0
	push	edi
	push	ebx
	call	??$_Insertion_sort1@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@U12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@00@Z ; std::_Insertion_sort1<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
	add	esp, 12					; 0000000cH
$LN19@Sort:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3109 : 	}

	add	esp, 8
	ret	0
$LN6@Sort:

; 3099 : 			}
; 3100 : 		}
; 3101 : 
; 3102 : 	if (_ISORT_MAX < _Count)

	cmp	eax, 32					; 00000020H
	jle	SHORT $LN25@Sort

; 3103 : 		{	// heap sort if too many divisions
; 3104 : 		std::make_heap(_First, _Last);

	mov	eax, edi
	sub	eax, ebx
	and	eax, -8					; fffffff8H
	cmp	eax, 8
	jle	SHORT $LN10@Sort
	push	0
	push	0
	push	edi
	push	ebx
	call	??$_Make_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@HU12@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0PAH0@Z ; std::_Make_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int,CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement>
	add	esp, 16					; 00000010H
$LN10@Sort:

; 3105 : 		std::sort_heap(_First, _Last);

	push	edi
	push	ebx
	call	??$_Sort_heap@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ; std::_Sort_heap<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 3109 : 	}

	add	esp, 8
	ret	0
??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z ENDP ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>
_TEXT	ENDS
PUBLIC	?SpreadReligion@CvGameReligions@@QAEXXZ		; CvGameReligions::SpreadReligion
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
;	COMDAT ?SpreadReligion@CvGameReligions@@QAEXXZ
_TEXT	SEGMENT
_iLoop$224931 = -4					; size = 4
?SpreadReligion@CvGameReligions@@QAEXXZ PROC		; CvGameReligions::SpreadReligion, COMDAT
; _this$ = ecx

; 313  : {

	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	ebx, ecx

; 314  : 	// Loop through all the players
; 315  : 	for(int iI = 0; iI < MAX_PLAYERS; iI++)

	xor	edi, edi
	npad	8
$LL7@SpreadReli@2:

; 316  : 	{
; 317  : 		CvPlayer& kPlayer = GET_PLAYER((PlayerTypes)iI);

	mov	eax, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 318  : 		if(kPlayer.isAlive())

	cmp	BYTE PTR [edi+eax+2256], 0
	lea	esi, DWORD PTR [edi+eax]
	je	SHORT $LN6@SpreadReli@2

; 319  : 		{
; 320  : 			// Loop through each of their cities
; 321  : 			int iLoop;
; 322  : 			CvCity* pLoopCity;
; 323  : 			for(pLoopCity = kPlayer.firstCity(&iLoop); pLoopCity != NULL; pLoopCity = kPlayer.nextCity(&iLoop))

	push	0
	lea	ecx, DWORD PTR _iLoop$224931[esp+20]
	push	ecx
	mov	ecx, esi
	call	?firstCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::firstCity
	test	eax, eax
	je	SHORT $LN6@SpreadReli@2
$LL3@SpreadReli@2:

; 324  : 			{
; 325  : 				SpreadReligionToOneCity(pLoopCity);

	push	eax
	mov	ecx, ebx
	call	?SpreadReligionToOneCity@CvGameReligions@@QAEXPAVCvCity@@@Z ; CvGameReligions::SpreadReligionToOneCity
	push	0
	lea	edx, DWORD PTR _iLoop$224931[esp+20]
	push	edx
	mov	ecx, esi
	call	?nextCity@CvPlayer@@QAEPAVCvCity@@PAH_N@Z ; CvPlayer::nextCity
	test	eax, eax
	jne	SHORT $LL3@SpreadReli@2
$LN6@SpreadReli@2:

; 314  : 	// Loop through all the players
; 315  : 	for(int iI = 0; iI < MAX_PLAYERS; iI++)

	add	edi, 63236				; 0000f704H
	cmp	edi, 4047104				; 003dc100H
	jl	SHORT $LL7@SpreadReli@2
	pop	edi
	pop	esi
	pop	ebx

; 326  : 			}
; 327  : 		}
; 328  : 	}
; 329  : }

	pop	ecx
	ret	0
?SpreadReligion@CvGameReligions@@QAEXXZ ENDP		; CvGameReligions::SpreadReligion
_TEXT	ENDS
PUBLIC	?insert@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@ABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::insert
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?insert@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@ABW4BeliefTypes@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@ABW4BeliefTypes@@@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::insert, COMDAT
; _this$ = ecx

; 875  : 		{	// insert _Val at _Where

	push	esi
	push	edi
	mov	edi, ecx

; 876  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, eax
	test	ecx, -4					; fffffffcH
	mov	ecx, DWORD PTR __Where$[esp+4]
	jne	SHORT $LN3@insert
	xor	esi, esi
	jmp	SHORT $LN4@insert
$LN3@insert:
	mov	esi, ecx
	sub	esi, eax
	sar	esi, 2
$LN4@insert:

; 877  : 		_Insert_n(_Where, (size_type)1, _Val);

	mov	edx, DWORD PTR __Val$[esp+4]
	push	edx
	push	1
	push	ecx
	mov	ecx, edi
	call	?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Insert_n

; 878  : 		return (begin() + _Off);

	mov	eax, DWORD PTR [edi+4]
	lea	ecx, DWORD PTR [eax+esi*4]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi

; 879  : 		}

	ret	12					; 0000000cH
?insert@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE?AV?$_Vector_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@V?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@ABW4BeliefTypes@@@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::insert
_TEXT	ENDS
PUBLIC	??$sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ; std::sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\algorithm
;	COMDAT ??$sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z PROC ; std::sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>, COMDAT

; 3114 : 	_DEBUG_RANGE(_First, _Last);
; 3115 : 	std::_Sort(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Last - _First);

	mov	eax, DWORD PTR __Last$[esp-4]
	mov	ecx, DWORD PTR __First$[esp-4]
	mov	edx, eax
	sub	edx, ecx
	sar	edx, 3
	push	edx
	push	eax
	push	ecx
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 3116 : 	}

	ret	0
??$sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0@Z ENDP ; std::sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *>
_TEXT	ENDS
PUBLIC	?DoTurn@CvGameReligions@@QAEXXZ			; CvGameReligions::DoTurn
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
;	COMDAT ?DoTurn@CvGameReligions@@QAEXXZ
_TEXT	SEGMENT
?DoTurn@CvGameReligions@@QAEXXZ PROC			; CvGameReligions::DoTurn, COMDAT
; _this$ = ecx

; 308  : 	SpreadReligion();

	jmp	?SpreadReligion@CvGameReligions@@QAEXXZ	; CvGameReligions::SpreadReligion
?DoTurn@CvGameReligions@@QAEXXZ ENDP			; CvGameReligions::DoTurn
_TEXT	ENDS
PUBLIC	?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
;	COMDAT ?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z
_TEXT	SEGMENT
$T245651 = -4						; size = 1
__Cat$245654 = 8					; size = 1
__Val$ = 8						; size = 4
?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z PROC ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back, COMDAT
; _this$ = ecx

; 809  : 		{	// insert element at end

	push	ecx
	push	esi
	mov	esi, ecx

; 810  : 		if (size() < capacity())

	mov	ecx, DWORD PTR [esi+4]
	push	edi
	test	ecx, ecx
	jne	SHORT $LN9@push_back@5
	xor	eax, eax
	jmp	SHORT $LN10@push_back@5
$LN9@push_back@5:
	mov	eax, DWORD PTR [esi+12]
	sub	eax, ecx
	sar	eax, 2
$LN10@push_back@5:
	mov	edi, DWORD PTR [esi+8]
	mov	edx, edi
	sub	edx, ecx
	sar	edx, 2
	cmp	edx, eax
	jae	SHORT $LN2@push_back@5

; 811  : 
; 812  :  #if _HAS_ITERATOR_DEBUGGING
; 813  : 			{ // room at end, construct it there
; 814  : 			_Orphan_range(_Mylast, _Mylast);
; 815  : 			_Mylast = _Ufill(_Mylast, 1, _Val);
; 816  : 			}
; 817  : 
; 818  :  #else /* _HAS_ITERATOR_DEBUGGING */
; 819  : 			_Mylast = _Ufill(_Mylast, 1, _Val);

	mov	ecx, DWORD PTR __Cat$245654[esp+8]
	mov	edx, DWORD PTR __Val$[esp+8]
	mov	BYTE PTR $T245651[esp+12], 0
	mov	eax, DWORD PTR $T245651[esp+12]
	push	eax
	push	ecx
	push	esi
	push	edx
	push	1
	push	edi
	call	??$_Uninit_fill_n@PAW4BeliefTypes@@IW41@V?$allocator@W4BeliefTypes@@@std@@@std@@YAXPAW4BeliefTypes@@IABW41@AAV?$allocator@W4BeliefTypes@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<enum BeliefTypes *,unsigned int,enum BeliefTypes,std::allocator<enum BeliefTypes> >
	add	esp, 24					; 00000018H
	add	edi, 4
	mov	DWORD PTR [esi+8], edi
	pop	edi
	pop	esi

; 824  : 		}

	pop	ecx
	ret	4
$LN2@push_back@5:

; 820  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 821  : 
; 822  : 		else
; 823  : 			insert(end(), _Val);

	mov	eax, DWORD PTR __Val$[esp+8]
	push	eax
	push	1
	push	edi
	mov	ecx, esi
	call	?_Insert_n@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@IAEXV?$_Vector_const_iterator@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@2@IABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::_Insert_n
	pop	edi
	pop	esi

; 824  : 		}

	pop	ecx
	ret	4
?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z ENDP ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back
_TEXT	ENDS
PUBLIC	?SortItems@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEXXZ ; CvWeightedVector<enum BeliefTypes,100,1>::SortItems
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvweightedvector.h
;	COMDAT ?SortItems@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEXXZ
_TEXT	SEGMENT
?SortItems@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEXXZ PROC ; CvWeightedVector<enum BeliefTypes,100,1>::SortItems, COMDAT
; _this$ = ecx

; 140  : 		std::sort(m_pItems.begin(), m_pItems.end());

	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	lea	ecx, DWORD PTR [eax+ecx*8]
	mov	edx, ecx
	sub	edx, eax
	sar	edx, 3
	push	edx
	push	ecx
	push	eax
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>
	add	esp, 12					; 0000000cH

; 141  : 	}

	ret	0
?SortItems@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEXXZ ENDP ; CvWeightedVector<enum BeliefTypes,100,1>::SortItems
_TEXT	ENDS
PUBLIC	?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailablePantheonBeliefs
EXTRN	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ:PROC	; CvBeliefXMLEntries::GetNumBeliefs
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__unwindtable$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0
__ehfuncinfo$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
_TEXT	SEGMENT
$T245781 = -24						; size = 4
_this$ = -20						; size = 4
_eBelief$225873 = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ PROC ; CvGameReligions::GetAvailablePantheonBeliefs, COMDAT
; _this$ = ecx

; 1598 : {

	push	-1
	push	__ehhandler$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi
	xor	esi, esi
	mov	DWORD PTR $T245781[esp+36], esi
	push	edi

; 1599 : 	std::vector<BeliefTypes> availableBeliefs;

	mov	edi, DWORD PTR ___$ReturnUdt$[esp+36]
	mov	DWORD PTR _this$[esp+40], ecx
	mov	DWORD PTR [edi+4], esi
	mov	DWORD PTR [edi+8], esi
	mov	DWORD PTR [edi+12], esi

; 1621 : 			}
; 1622 : 		}
; 1623 : 	}
; 1624 : 
; 1625 : 	return availableBeliefs;

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR __$EHRec$[esp+48], esi
	mov	DWORD PTR $T245781[esp+40], 1
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ebp, eax
	mov	ecx, ebp
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	mov	ebx, eax
	push	ebx
	mov	ecx, edi
	call	?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve
	test	ebx, ebx
	jle	SHORT $LN49@GetAvailab
$LL5@GetAvailab:

; 1600 : 
; 1601 : 	CvBeliefXMLEntries* pkBeliefs = GC.GetGameBeliefs();
; 1602 : 	const int iNumBeleifs = pkBeliefs->GetNumBeliefs();
; 1603 : 
; 1604 : 	availableBeliefs.reserve(iNumBeleifs);
; 1605 : 	for(int iI = 0; iI < iNumBeleifs; iI++)
; 1606 : 	{
; 1607 : 		const BeliefTypes eBelief(static_cast<BeliefTypes>(iI));
; 1608 : #ifdef AUI_WARNING_FIXES
; 1609 : 		CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);
; 1610 : 		if (pEntry && pEntry->IsPantheonBelief())
; 1611 : 		{
; 1612 : 			if (!IsInSomeReligion(eBelief))
; 1613 : #else
; 1614 : 		if(!IsInSomeReligion(eBelief))

	mov	ecx, DWORD PTR _this$[esp+40]
	push	esi
	mov	DWORD PTR _eBelief$225873[esp+44], esi
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	test	al, al
	jne	SHORT $LN4@GetAvailab

; 1615 : 		{
; 1616 : 			CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);

	push	esi
	mov	ecx, ebp
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry

; 1617 : 			if(pEntry && pEntry->IsPantheonBelief())

	test	eax, eax
	je	SHORT $LN4@GetAvailab
	mov	ecx, eax
	call	?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsPantheonBelief
	test	al, al
	je	SHORT $LN4@GetAvailab

; 1618 : #endif
; 1619 : 			{
; 1620 : 				availableBeliefs.push_back(eBelief);

	lea	eax, DWORD PTR _eBelief$225873[esp+40]
	push	eax
	mov	ecx, edi
	call	?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back
$LN4@GetAvailab:
	inc	esi
	cmp	esi, ebx
	jl	SHORT $LL5@GetAvailab
$LN49@GetAvailab:

; 1626 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 24					; 00000018H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0:
	mov	eax, DWORD PTR $T245781[ebp]
	and	eax, 1
	je	$LN9@GetAvailab
	and	DWORD PTR $T245781[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
$LN9@GetAvailab:
	ret	0
__ehhandler$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ENDP ; CvGameReligions::GetAvailablePantheonBeliefs
PUBLIC	?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableFounderBeliefs
EXTRN	?IsFounderBelief@CvBeliefEntry@@QBE_NXZ:PROC	; CvBeliefEntry::IsFounderBelief
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__unwindtable$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0
__ehfuncinfo$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
_TEXT	SEGMENT
$T245934 = -24						; size = 4
_this$ = -20						; size = 4
_eBelief$226029 = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ PROC ; CvGameReligions::GetAvailableFounderBeliefs, COMDAT
; _this$ = ecx

; 1896 : {

	push	-1
	push	__ehhandler$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi
	xor	esi, esi
	mov	DWORD PTR $T245934[esp+36], esi
	push	edi

; 1897 : 	std::vector<BeliefTypes> availableBeliefs;

	mov	edi, DWORD PTR ___$ReturnUdt$[esp+36]
	mov	DWORD PTR _this$[esp+40], ecx
	mov	DWORD PTR [edi+4], esi
	mov	DWORD PTR [edi+8], esi
	mov	DWORD PTR [edi+12], esi

; 1919 : 			}
; 1920 : 		}
; 1921 : 	}
; 1922 : 
; 1923 : 	return availableBeliefs;

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR __$EHRec$[esp+48], esi
	mov	DWORD PTR $T245934[esp+40], 1
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ebp, eax
	mov	ecx, ebp
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	mov	ebx, eax
	push	ebx
	mov	ecx, edi
	call	?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve
	test	ebx, ebx
	jle	SHORT $LN49@GetAvailab@2
$LL5@GetAvailab@2:

; 1898 : 
; 1899 : 	CvBeliefXMLEntries* pkBeliefs = GC.GetGameBeliefs();
; 1900 : 	const int iNumBeleifs = pkBeliefs->GetNumBeliefs();
; 1901 : 
; 1902 : 	availableBeliefs.reserve(iNumBeleifs);
; 1903 : 	for(int iI = 0; iI < iNumBeleifs; iI++)
; 1904 : 	{
; 1905 : 		const BeliefTypes eBelief(static_cast<BeliefTypes>(iI));
; 1906 : #ifdef AUI_WARNING_FIXES
; 1907 : 		CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);
; 1908 : 		if (pEntry && pEntry->IsFounderBelief())
; 1909 : 		{
; 1910 : 			if (!IsInSomeReligion(eBelief))
; 1911 : #else
; 1912 : 		if(!IsInSomeReligion(eBelief))

	mov	ecx, DWORD PTR _this$[esp+40]
	push	esi
	mov	DWORD PTR _eBelief$226029[esp+44], esi
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	test	al, al
	jne	SHORT $LN4@GetAvailab@2

; 1913 : 		{
; 1914 : 			CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);

	push	esi
	mov	ecx, ebp
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry

; 1915 : 			if(pEntry && pEntry->IsFounderBelief())

	test	eax, eax
	je	SHORT $LN4@GetAvailab@2
	mov	ecx, eax
	call	?IsFounderBelief@CvBeliefEntry@@QBE_NXZ	; CvBeliefEntry::IsFounderBelief
	test	al, al
	je	SHORT $LN4@GetAvailab@2

; 1916 : #endif
; 1917 : 			{
; 1918 : 				availableBeliefs.push_back(eBelief);

	lea	eax, DWORD PTR _eBelief$226029[esp+40]
	push	eax
	mov	ecx, edi
	call	?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back
$LN4@GetAvailab@2:
	inc	esi
	cmp	esi, ebx
	jl	SHORT $LL5@GetAvailab@2
$LN49@GetAvailab@2:

; 1924 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 24					; 00000018H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0:
	mov	eax, DWORD PTR $T245934[ebp]
	and	eax, 1
	je	$LN9@GetAvailab@2
	and	DWORD PTR $T245934[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
$LN9@GetAvailab@2:
	ret	0
__ehhandler$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ENDP ; CvGameReligions::GetAvailableFounderBeliefs
PUBLIC	?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableFollowerBeliefs
EXTRN	?IsFollowerBelief@CvBeliefEntry@@QBE_NXZ:PROC	; CvBeliefEntry::IsFollowerBelief
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__unwindtable$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0
__ehfuncinfo$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
_TEXT	SEGMENT
$T246087 = -24						; size = 4
_this$ = -20						; size = 4
_eBelief$226053 = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ PROC ; CvGameReligions::GetAvailableFollowerBeliefs, COMDAT
; _this$ = ecx

; 1928 : {

	push	-1
	push	__ehhandler$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi
	xor	esi, esi
	mov	DWORD PTR $T246087[esp+36], esi
	push	edi

; 1929 : 	std::vector<BeliefTypes> availableBeliefs;

	mov	edi, DWORD PTR ___$ReturnUdt$[esp+36]
	mov	DWORD PTR _this$[esp+40], ecx
	mov	DWORD PTR [edi+4], esi
	mov	DWORD PTR [edi+8], esi
	mov	DWORD PTR [edi+12], esi

; 1951 : 			}
; 1952 : 		}
; 1953 : 	}
; 1954 : 
; 1955 : 	return availableBeliefs;

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR __$EHRec$[esp+48], esi
	mov	DWORD PTR $T246087[esp+40], 1
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ebp, eax
	mov	ecx, ebp
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	mov	ebx, eax
	push	ebx
	mov	ecx, edi
	call	?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve
	test	ebx, ebx
	jle	SHORT $LN49@GetAvailab@3
$LL5@GetAvailab@3:

; 1930 : 
; 1931 : 	CvBeliefXMLEntries* pkBeliefs = GC.GetGameBeliefs();
; 1932 : 	const int iNumBeleifs = pkBeliefs->GetNumBeliefs();
; 1933 : 
; 1934 : 	availableBeliefs.reserve(iNumBeleifs);
; 1935 : 	for(int iI = 0; iI < iNumBeleifs; iI++)
; 1936 : 	{
; 1937 : 		const BeliefTypes eBelief(static_cast<BeliefTypes>(iI));
; 1938 : #ifdef AUI_WARNING_FIXES
; 1939 : 		CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);
; 1940 : 		if (pEntry && pEntry->IsFollowerBelief())
; 1941 : 		{
; 1942 : 			if (!IsInSomeReligion(eBelief))
; 1943 : #else
; 1944 : 		if(!IsInSomeReligion(eBelief))

	mov	ecx, DWORD PTR _this$[esp+40]
	push	esi
	mov	DWORD PTR _eBelief$226053[esp+44], esi
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	test	al, al
	jne	SHORT $LN4@GetAvailab@3

; 1945 : 		{
; 1946 : 			CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);

	push	esi
	mov	ecx, ebp
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry

; 1947 : 			if(pEntry && pEntry->IsFollowerBelief())

	test	eax, eax
	je	SHORT $LN4@GetAvailab@3
	mov	ecx, eax
	call	?IsFollowerBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsFollowerBelief
	test	al, al
	je	SHORT $LN4@GetAvailab@3

; 1948 : #endif
; 1949 : 			{
; 1950 : 				availableBeliefs.push_back(eBelief);

	lea	eax, DWORD PTR _eBelief$226053[esp+40]
	push	eax
	mov	ecx, edi
	call	?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back
$LN4@GetAvailab@3:
	inc	esi
	cmp	esi, ebx
	jl	SHORT $LL5@GetAvailab@3
$LN49@GetAvailab@3:

; 1956 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 24					; 00000018H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0:
	mov	eax, DWORD PTR $T246087[ebp]
	and	eax, 1
	je	$LN9@GetAvailab@3
	and	DWORD PTR $T246087[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
$LN9@GetAvailab@3:
	ret	0
__ehhandler$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ENDP ; CvGameReligions::GetAvailableFollowerBeliefs
PUBLIC	?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableEnhancerBeliefs
EXTRN	?IsEnhancerBelief@CvBeliefEntry@@QBE_NXZ:PROC	; CvBeliefEntry::IsEnhancerBelief
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__unwindtable$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0
__ehfuncinfo$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
_TEXT	SEGMENT
$T246240 = -24						; size = 4
_this$ = -20						; size = 4
_eBelief$226077 = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ PROC ; CvGameReligions::GetAvailableEnhancerBeliefs, COMDAT
; _this$ = ecx

; 1960 : {

	push	-1
	push	__ehhandler$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi
	xor	esi, esi
	mov	DWORD PTR $T246240[esp+36], esi
	push	edi

; 1961 : 	std::vector<BeliefTypes> availableBeliefs;

	mov	edi, DWORD PTR ___$ReturnUdt$[esp+36]
	mov	DWORD PTR _this$[esp+40], ecx
	mov	DWORD PTR [edi+4], esi
	mov	DWORD PTR [edi+8], esi
	mov	DWORD PTR [edi+12], esi

; 1983 : 			}
; 1984 : 		}
; 1985 : 	}
; 1986 : 
; 1987 : 	return availableBeliefs;

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR __$EHRec$[esp+48], esi
	mov	DWORD PTR $T246240[esp+40], 1
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ebp, eax
	mov	ecx, ebp
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	mov	ebx, eax
	push	ebx
	mov	ecx, edi
	call	?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve
	test	ebx, ebx
	jle	SHORT $LN49@GetAvailab@4
$LL5@GetAvailab@4:

; 1962 : 
; 1963 : 	CvBeliefXMLEntries* pkBeliefs = GC.GetGameBeliefs();
; 1964 : 	const int iNumBeleifs = pkBeliefs->GetNumBeliefs();
; 1965 : 
; 1966 : 	availableBeliefs.reserve(iNumBeleifs);
; 1967 : 	for(int iI = 0; iI < iNumBeleifs; iI++)
; 1968 : 	{
; 1969 : 		const BeliefTypes eBelief(static_cast<BeliefTypes>(iI));
; 1970 : #ifdef AUI_WARNING_FIXES
; 1971 : 		CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);
; 1972 : 		if (pEntry && pEntry->IsEnhancerBelief())
; 1973 : 		{
; 1974 : 			if (!IsInSomeReligion(eBelief))
; 1975 : #else
; 1976 : 		if(!IsInSomeReligion(eBelief))

	mov	ecx, DWORD PTR _this$[esp+40]
	push	esi
	mov	DWORD PTR _eBelief$226077[esp+44], esi
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	test	al, al
	jne	SHORT $LN4@GetAvailab@4

; 1977 : 		{
; 1978 : 			CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);

	push	esi
	mov	ecx, ebp
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry

; 1979 : 			if(pEntry && pEntry->IsEnhancerBelief())

	test	eax, eax
	je	SHORT $LN4@GetAvailab@4
	mov	ecx, eax
	call	?IsEnhancerBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsEnhancerBelief
	test	al, al
	je	SHORT $LN4@GetAvailab@4

; 1980 : #endif
; 1981 : 			{
; 1982 : 				availableBeliefs.push_back(eBelief);

	lea	eax, DWORD PTR _eBelief$226077[esp+40]
	push	eax
	mov	ecx, edi
	call	?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back
$LN4@GetAvailab@4:
	inc	esi
	cmp	esi, ebx
	jl	SHORT $LL5@GetAvailab@4
$LN49@GetAvailab@4:

; 1988 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 24					; 00000018H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0:
	mov	eax, DWORD PTR $T246240[ebp]
	and	eax, 1
	je	$LN9@GetAvailab@4
	and	DWORD PTR $T246240[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
$LN9@GetAvailab@4:
	ret	0
__ehhandler$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ENDP ; CvGameReligions::GetAvailableEnhancerBeliefs
PUBLIC	?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableBonusBeliefs
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__unwindtable$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0
__ehfuncinfo$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
_TEXT	SEGMENT
$T246393 = -28						; size = 4
_pkBeliefs$ = -24					; size = 4
_this$ = -20						; size = 4
_eBelief$226101 = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ PROC ; CvGameReligions::GetAvailableBonusBeliefs, COMDAT
; _this$ = ecx

; 1992 : {

	push	-1
	push	__ehhandler$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 16					; 00000010H
	push	ebx
	push	ebp
	push	esi
	xor	esi, esi
	mov	DWORD PTR $T246393[esp+40], esi

; 1993 : 	std::vector<BeliefTypes> availableBeliefs;

	mov	ebx, DWORD PTR ___$ReturnUdt$[esp+36]
	push	edi
	mov	DWORD PTR _this$[esp+44], ecx
	mov	DWORD PTR [ebx+4], esi
	mov	DWORD PTR [ebx+8], esi
	mov	DWORD PTR [ebx+12], esi

; 2015 : 			}
; 2016 : 		}
; 2017 : 	}
; 2018 : 
; 2019 : 	return availableBeliefs;

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR __$EHRec$[esp+52], esi
	mov	DWORD PTR $T246393[esp+44], 1
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	edi, eax
	mov	ecx, edi
	mov	DWORD PTR _pkBeliefs$[esp+44], edi
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	mov	ebp, eax
	push	ebp
	mov	ecx, ebx
	call	?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve
	cmp	ebp, esi
	jle	SHORT $LN50@GetAvailab@5

; 1994 : 
; 1995 : 	CvBeliefXMLEntries* pkBeliefs = GC.GetGameBeliefs();
; 1996 : 	const int iNumBeleifs = pkBeliefs->GetNumBeliefs();
; 1997 : 
; 1998 : 	availableBeliefs.reserve(iNumBeleifs);
; 1999 : 	for(int iI = 0; iI < iNumBeleifs; iI++)

	jmp	SHORT $LN6@GetAvailab@5
$LL52@GetAvailab@5:
	mov	edi, DWORD PTR _pkBeliefs$[esp+44]
$LN6@GetAvailab@5:

; 2000 : 	{
; 2001 : 		const BeliefTypes eBelief(static_cast<BeliefTypes>(iI));
; 2002 : #ifdef AUI_WARNING_FIXES
; 2003 : 		CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);
; 2004 : 		if (pEntry && (pEntry->IsEnhancerBelief() || pEntry->IsFollowerBelief() || pEntry->IsFounderBelief() || pEntry->IsPantheonBelief()))
; 2005 : 		{
; 2006 : 			if (!IsInSomeReligion(eBelief))
; 2007 : #else
; 2008 : 		if(!IsInSomeReligion(eBelief))

	mov	ecx, DWORD PTR _this$[esp+44]
	push	esi
	mov	DWORD PTR _eBelief$226101[esp+48], esi
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	test	al, al
	jne	SHORT $LN5@GetAvailab@5

; 2009 : 		{
; 2010 : 			CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);

	push	esi
	mov	ecx, edi
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry
	mov	edi, eax

; 2011 : 			if(pEntry && (pEntry->IsEnhancerBelief() || pEntry->IsFollowerBelief() || pEntry->IsFounderBelief() || pEntry->IsPantheonBelief()))

	test	edi, edi
	je	SHORT $LN5@GetAvailab@5
	mov	ecx, edi
	call	?IsEnhancerBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsEnhancerBelief
	test	al, al
	jne	SHORT $LN1@GetAvailab@5
	mov	ecx, edi
	call	?IsFollowerBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsFollowerBelief
	test	al, al
	jne	SHORT $LN1@GetAvailab@5
	mov	ecx, edi
	call	?IsFounderBelief@CvBeliefEntry@@QBE_NXZ	; CvBeliefEntry::IsFounderBelief
	test	al, al
	jne	SHORT $LN1@GetAvailab@5
	mov	ecx, edi
	call	?IsPantheonBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsPantheonBelief
	test	al, al
	je	SHORT $LN5@GetAvailab@5
$LN1@GetAvailab@5:

; 2012 : #endif
; 2013 : 			{
; 2014 : 				availableBeliefs.push_back(eBelief);

	lea	eax, DWORD PTR _eBelief$226101[esp+44]
	push	eax
	mov	ecx, ebx
	call	?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back
$LN5@GetAvailab@5:
	inc	esi
	cmp	esi, ebp
	jl	SHORT $LL52@GetAvailab@5
$LN50@GetAvailab@5:

; 2020 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, ebx
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 28					; 0000001cH
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0:
	mov	eax, DWORD PTR $T246393[ebp]
	and	eax, 1
	je	$LN10@GetAvailab@5
	and	DWORD PTR $T246393[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
$LN10@GetAvailab@5:
	ret	0
__ehhandler$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ENDP ; CvGameReligions::GetAvailableBonusBeliefs
PUBLIC	?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableReformationBeliefs
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
xdata$x	SEGMENT
__unwindtable$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0
__ehfuncinfo$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
_TEXT	SEGMENT
$T246548 = -24						; size = 4
_this$ = -20						; size = 4
_eBelief$226126 = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ PROC ; CvGameReligions::GetAvailableReformationBeliefs, COMDAT
; _this$ = ecx

; 2024 : {

	push	-1
	push	__ehhandler$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	ebp
	push	esi
	xor	esi, esi
	mov	DWORD PTR $T246548[esp+36], esi
	push	edi

; 2025 : 	std::vector<BeliefTypes> availableBeliefs;

	mov	edi, DWORD PTR ___$ReturnUdt$[esp+36]
	mov	DWORD PTR _this$[esp+40], ecx
	mov	DWORD PTR [edi+4], esi
	mov	DWORD PTR [edi+8], esi
	mov	DWORD PTR [edi+12], esi

; 2047 : 			}
; 2048 : 		}
; 2049 : 	}
; 2050 : 
; 2051 : 	return availableBeliefs;

	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	mov	DWORD PTR __$EHRec$[esp+48], esi
	mov	DWORD PTR $T246548[esp+40], 1
	call	?GetGameBeliefs@CvGlobals@@QBEPAVCvBeliefXMLEntries@@XZ ; CvGlobals::GetGameBeliefs
	mov	ebp, eax
	mov	ecx, ebp
	call	?GetNumBeliefs@CvBeliefXMLEntries@@QAEHXZ ; CvBeliefXMLEntries::GetNumBeliefs
	mov	ebx, eax
	push	ebx
	mov	ecx, edi
	call	?reserve@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXI@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::reserve
	test	ebx, ebx
	jle	SHORT $LN49@GetAvailab@6
$LL5@GetAvailab@6:

; 2026 : 
; 2027 : 	CvBeliefXMLEntries* pkBeliefs = GC.GetGameBeliefs();
; 2028 : 	const int iNumBeleifs = pkBeliefs->GetNumBeliefs();
; 2029 : 
; 2030 : 	availableBeliefs.reserve(iNumBeleifs);
; 2031 : 	for(int iI = 0; iI < iNumBeleifs; iI++)
; 2032 : 	{
; 2033 : 		const BeliefTypes eBelief(static_cast<BeliefTypes>(iI));
; 2034 : #ifdef AUI_WARNING_FIXES
; 2035 : 		CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);
; 2036 : 		if (pEntry && pEntry->IsReformationBelief())
; 2037 : 		{
; 2038 : 			if (!IsInSomeReligion(eBelief))
; 2039 : #else
; 2040 : 		if(!IsInSomeReligion(eBelief))

	mov	ecx, DWORD PTR _this$[esp+40]
	push	esi
	mov	DWORD PTR _eBelief$226126[esp+44], esi
	call	?IsInSomeReligion@CvGameReligions@@QBE_NW4BeliefTypes@@@Z ; CvGameReligions::IsInSomeReligion
	test	al, al
	jne	SHORT $LN4@GetAvailab@6

; 2041 : 		{
; 2042 : 			CvBeliefEntry* pEntry = pkBeliefs->GetEntry(eBelief);

	push	esi
	mov	ecx, ebp
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry

; 2043 : 			if(pEntry && pEntry->IsReformationBelief())

	test	eax, eax
	je	SHORT $LN4@GetAvailab@6
	mov	ecx, eax
	call	?IsReformationBelief@CvBeliefEntry@@QBE_NXZ ; CvBeliefEntry::IsReformationBelief
	test	al, al
	je	SHORT $LN4@GetAvailab@6

; 2044 : #endif
; 2045 : 			{
; 2046 : 				availableBeliefs.push_back(eBelief);

	lea	eax, DWORD PTR _eBelief$226126[esp+40]
	push	eax
	mov	ecx, edi
	call	?push_back@?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAEXABW4BeliefTypes@@@Z ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::push_back
$LN4@GetAvailab@6:
	inc	esi
	cmp	esi, ebx
	jl	SHORT $LL5@GetAvailab@6
$LN49@GetAvailab@6:

; 2052 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+40]
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 24					; 00000018H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ$0:
	mov	eax, DWORD PTR $T246548[ebp]
	and	eax, 1
	je	$LN9@GetAvailab@6
	and	DWORD PTR $T246548[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp-4]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
$LN9@GetAvailab@6:
	ret	0
__ehhandler$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ENDP ; CvGameReligions::GetAvailableReformationBeliefs
PUBLIC	?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ; CvReligionAI::ChoosePantheonBelief
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1
__ehfuncinfo$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
_TEXT	SEGMENT
$T246702 = -852						; size = 4
_availableBeliefs$ = -848				; size = 16
$T246701 = -832						; size = 4
_beliefChoices$ = -828					; size = 816
__$EHRec$ = -12						; size = 12
?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ PROC ; CvReligionAI::ChoosePantheonBelief, COMDAT
; _this$ = ecx

; 4964 : {

	push	-1
	push	__ehhandler$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 840				; 00000348H
	push	ebx
	push	ebp
	push	esi
	mov	ebx, ecx

; 4965 : 	CvGameReligions* pGameReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 4966 : 	CvWeightedVector<BeliefTypes, SAFE_ESTIMATE_NUM_BELIEFS, true> beliefChoices;

	xor	ecx, ecx
	lea	edx, DWORD PTR _beliefChoices$[esp+880]
	mov	DWORD PTR _beliefChoices$[esp+872], ecx
	mov	DWORD PTR _beliefChoices$[esp+876], 100	; 00000064H
	mov	DWORD PTR _beliefChoices$[esp+868], edx
	mov	DWORD PTR __$EHRec$[esp+876], ecx

; 4967 : 
; 4968 : #ifdef AUI_WARNING_FIXES
; 4969 : 	const std::vector<BeliefTypes>& availableBeliefs = pGameReligions->GetAvailablePantheonBeliefs();
; 4970 : 
; 4971 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 4972 : #else
; 4973 : 	std::vector<BeliefTypes> availableBeliefs = pGameReligions->GetAvailablePantheonBeliefs();

	lea	ecx, DWORD PTR _availableBeliefs$[esp+868]
	push	ecx
	mov	ecx, eax
	call	?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailablePantheonBeliefs

; 4974 : 
; 4975 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	eax, DWORD PTR _availableBeliefs$[esp+872]
	mov	BYTE PTR __$EHRec$[esp+876], 1
	mov	ebp, eax

; 4976 : 	        it!= availableBeliefs.end(); ++it)

	cmp	eax, DWORD PTR _availableBeliefs$[esp+876]
	je	SHORT $LN152@ChoosePant
	npad	7
$LL154@ChoosePant:

; 4977 : #endif
; 4978 : 	{
; 4979 : 		const BeliefTypes eBelief = (*it);

	mov	edi, DWORD PTR [ebp]

; 4980 : 		CvBeliefEntry* pEntry = m_pBeliefs->GetEntry(eBelief);

	mov	ecx, DWORD PTR [ebx]
	push	edi
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry

; 4981 : 		if(pEntry)

	test	eax, eax
	je	SHORT $LN4@ChoosePant

; 4982 : 		{
; 4983 : 			const int iScore = ScoreBelief(pEntry);

	push	eax
	mov	ecx, ebx
	call	?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBelief
	mov	esi, eax

; 4984 : 			if(iScore > 0)

	test	esi, esi
	jle	SHORT $LN4@ChoosePant

; 4985 : 			{
; 4986 : 				beliefChoices.push_back(eBelief, iScore);

	mov	eax, DWORD PTR _beliefChoices$[esp+876]
	mov	BYTE PTR _beliefChoices$[esp+1680], 0
	cmp	DWORD PTR _beliefChoices$[esp+872], eax
	jne	SHORT $LN51@ChoosePant
	push	eax
	lea	ecx, DWORD PTR _beliefChoices$[esp+872]
	call	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::GrowSize
$LN51@ChoosePant:
	mov	edx, DWORD PTR _beliefChoices$[esp+872]
	mov	eax, DWORD PTR _beliefChoices$[esp+868]
	lea	eax, DWORD PTR [eax+edx*8]
	test	eax, eax
	je	SHORT $LN54@ChoosePant
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], esi
$LN54@ChoosePant:
	inc	DWORD PTR _beliefChoices$[esp+872]
$LN4@ChoosePant:

; 4976 : 	        it!= availableBeliefs.end(); ++it)

	add	ebp, 4
	cmp	ebp, DWORD PTR _availableBeliefs$[esp+876]
	jne	SHORT $LL154@ChoosePant
$LN152@ChoosePant:

; 4987 : 			}
; 4988 : 		}
; 4989 : 	}
; 4990 : 
; 4991 : 	// Choose from weighted vector
; 4992 : 	beliefChoices.SortItems();

	mov	ecx, DWORD PTR _beliefChoices$[esp+868]
	mov	edx, DWORD PTR _beliefChoices$[esp+872]
	lea	eax, DWORD PTR [ecx+edx*8]
	mov	edx, eax
	sub	edx, ecx
	sar	edx, 3
	push	edx
	push	eax
	push	ecx
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>

; 4993 : 	int iNumChoices = MIN(beliefChoices.size(),3);   // Throw out two-thirds of the choices -- this was way too loose as choices way down were being selected now only top 3

	mov	eax, DWORD PTR _beliefChoices$[esp+884]
	add	esp, 12					; 0000000cH
	cmp	eax, 3
	mov	DWORD PTR $T246701[esp+868], 3
	mov	DWORD PTR $T246702[esp+868], eax
	lea	ecx, DWORD PTR $T246701[esp+868]
	jg	SHORT $LN76@ChoosePant
	lea	ecx, DWORD PTR $T246702[esp+868]
$LN76@ChoosePant:
	mov	edi, DWORD PTR [ecx]

; 4994 : 	RandomNumberDelegate fcn = MakeDelegate(&GC.getGame(), &CvGame::getJonRandNum);
; 4995 : 	BeliefTypes rtnValue = beliefChoices.ChooseFromTopChoices(iNumChoices, &fcn, "Choosing belief from Top Choices");

	cmp	edi, eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	jle	SHORT $LN100@ChoosePant
	mov	edi, eax
$LN100@ChoosePant:
	xor	ebp, ebp
	xor	esi, esi
	xor	edx, edx
	cmp	edi, ebp
	jle	SHORT $LN97@ChoosePant
	mov	eax, DWORD PTR _beliefChoices$[esp+868]
	mov	ebp, edi
$LL99@ChoosePant:
	add	edx, DWORD PTR [eax+4]
	mov	esi, DWORD PTR [eax]
	add	eax, 8
	sub	ebp, 1
	jne	SHORT $LL99@ChoosePant
$LN97@ChoosePant:
	push	OFFSET $SG227964
	push	edx
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	xor	edx, edx
	cmp	edi, ebp
	jle	SHORT $LN146@ChoosePant
	mov	ecx, DWORD PTR _beliefChoices$[esp+868]
$LL96@ChoosePant:
	sub	eax, DWORD PTR [ecx+4]
	mov	esi, DWORD PTR [ecx]
	js	SHORT $LN146@ChoosePant
	inc	edx
	add	ecx, 8
	cmp	edx, edi
	jl	SHORT $LL96@ChoosePant
$LN146@ChoosePant:

; 4996 : 	LogBeliefChoices(beliefChoices, rtnValue);

	push	esi
	lea	eax, DWORD PTR _beliefChoices$[esp+872]
	push	eax
	mov	ecx, ebx
	call	?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z ; CvReligionAI::LogBeliefChoices

; 4997 : 
; 4998 : 	return rtnValue;

	mov	eax, DWORD PTR _availableBeliefs$[esp+872]
	cmp	eax, ebp
	je	SHORT $LN124@ChoosePant
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN124@ChoosePant:
	mov	eax, DWORD PTR _beliefChoices$[esp+868]
	lea	ecx, DWORD PTR _beliefChoices$[esp+880]
	mov	DWORD PTR _availableBeliefs$[esp+872], ebp
	mov	DWORD PTR _availableBeliefs$[esp+876], ebp
	mov	DWORD PTR _availableBeliefs$[esp+880], ebp
	mov	DWORD PTR __$EHRec$[esp+876], -1
	cmp	eax, ecx
	je	SHORT $LN150@ChoosePant
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN150@ChoosePant:

; 4999 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+868]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 852				; 00000354H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0:
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	jmp	??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>
__unwindfunclet$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__ehhandler$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ENDP ; CvReligionAI::ChoosePantheonBelief
PUBLIC	?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ; CvReligionAI::ChooseFounderBelief
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1
__ehfuncinfo$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
_TEXT	SEGMENT
$T247097 = -852						; size = 4
_availableBeliefs$ = -848				; size = 16
$T247096 = -832						; size = 4
_beliefChoices$ = -828					; size = 816
__$EHRec$ = -12						; size = 12
?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ PROC ; CvReligionAI::ChooseFounderBelief, COMDAT
; _this$ = ecx

; 5003 : {

	push	-1
	push	__ehhandler$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 840				; 00000348H
	push	ebx
	push	ebp
	push	esi
	mov	ebx, ecx

; 5004 : 	CvGameReligions* pGameReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 5005 : 	CvWeightedVector<BeliefTypes, SAFE_ESTIMATE_NUM_BELIEFS, true> beliefChoices;

	xor	ecx, ecx
	lea	edx, DWORD PTR _beliefChoices$[esp+880]
	mov	DWORD PTR _beliefChoices$[esp+872], ecx
	mov	DWORD PTR _beliefChoices$[esp+876], 100	; 00000064H
	mov	DWORD PTR _beliefChoices$[esp+868], edx
	mov	DWORD PTR __$EHRec$[esp+876], ecx

; 5006 : 
; 5007 : #ifdef AUI_WARNING_FIXES
; 5008 : 	const std::vector<BeliefTypes>& availableBeliefs = pGameReligions->GetAvailableFounderBeliefs();
; 5009 : 
; 5010 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 5011 : #else
; 5012 : 	std::vector<BeliefTypes> availableBeliefs = pGameReligions->GetAvailableFounderBeliefs();

	lea	ecx, DWORD PTR _availableBeliefs$[esp+868]
	push	ecx
	mov	ecx, eax
	call	?GetAvailableFounderBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableFounderBeliefs

; 5013 : 
; 5014 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	eax, DWORD PTR _availableBeliefs$[esp+872]
	mov	BYTE PTR __$EHRec$[esp+876], 1
	mov	ebp, eax

; 5015 : 	        it!= availableBeliefs.end(); ++it)

	cmp	eax, DWORD PTR _availableBeliefs$[esp+876]
	je	SHORT $LN152@ChooseFoun
	npad	7
$LL154@ChooseFoun:

; 5016 : #endif
; 5017 : 	{
; 5018 : 		const BeliefTypes eBelief = (*it);

	mov	edi, DWORD PTR [ebp]

; 5019 : 		CvBeliefEntry* pEntry = m_pBeliefs->GetEntry(eBelief);

	mov	ecx, DWORD PTR [ebx]
	push	edi
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry

; 5020 : 		if(pEntry)

	test	eax, eax
	je	SHORT $LN4@ChooseFoun

; 5021 : 		{
; 5022 : 			const int iScore = ScoreBelief(pEntry);

	push	eax
	mov	ecx, ebx
	call	?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBelief
	mov	esi, eax

; 5023 : 			if(iScore > 0)

	test	esi, esi
	jle	SHORT $LN4@ChooseFoun

; 5024 : 			{
; 5025 : 				beliefChoices.push_back(eBelief, iScore);

	mov	eax, DWORD PTR _beliefChoices$[esp+876]
	mov	BYTE PTR _beliefChoices$[esp+1680], 0
	cmp	DWORD PTR _beliefChoices$[esp+872], eax
	jne	SHORT $LN51@ChooseFoun
	push	eax
	lea	ecx, DWORD PTR _beliefChoices$[esp+872]
	call	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::GrowSize
$LN51@ChooseFoun:
	mov	edx, DWORD PTR _beliefChoices$[esp+872]
	mov	eax, DWORD PTR _beliefChoices$[esp+868]
	lea	eax, DWORD PTR [eax+edx*8]
	test	eax, eax
	je	SHORT $LN54@ChooseFoun
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], esi
$LN54@ChooseFoun:
	inc	DWORD PTR _beliefChoices$[esp+872]
$LN4@ChooseFoun:

; 5015 : 	        it!= availableBeliefs.end(); ++it)

	add	ebp, 4
	cmp	ebp, DWORD PTR _availableBeliefs$[esp+876]
	jne	SHORT $LL154@ChooseFoun
$LN152@ChooseFoun:

; 5026 : 			}
; 5027 : 		}
; 5028 : 	}
; 5029 : 
; 5030 : 	// Choose from weighted vector
; 5031 : 	beliefChoices.SortItems();

	mov	ecx, DWORD PTR _beliefChoices$[esp+868]
	mov	edx, DWORD PTR _beliefChoices$[esp+872]
	lea	eax, DWORD PTR [ecx+edx*8]
	mov	edx, eax
	sub	edx, ecx
	sar	edx, 3
	push	edx
	push	eax
	push	ecx
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>

; 5032 : 	int iNumChoices = MIN(beliefChoices.size(),3);   // this was way too loose as choices way down were being selected now only top 3

	mov	eax, DWORD PTR _beliefChoices$[esp+884]
	add	esp, 12					; 0000000cH
	cmp	eax, 3
	mov	DWORD PTR $T247096[esp+868], 3
	mov	DWORD PTR $T247097[esp+868], eax
	lea	ecx, DWORD PTR $T247096[esp+868]
	jg	SHORT $LN76@ChooseFoun
	lea	ecx, DWORD PTR $T247097[esp+868]
$LN76@ChooseFoun:
	mov	edi, DWORD PTR [ecx]

; 5033 : 	RandomNumberDelegate fcn = MakeDelegate(&GC.getGame(), &CvGame::getJonRandNum);
; 5034 : 	BeliefTypes rtnValue = beliefChoices.ChooseFromTopChoices(iNumChoices, &fcn, "Choosing belief from Top Choices");

	cmp	edi, eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	jle	SHORT $LN100@ChooseFoun
	mov	edi, eax
$LN100@ChooseFoun:
	xor	ebp, ebp
	xor	esi, esi
	xor	edx, edx
	cmp	edi, ebp
	jle	SHORT $LN97@ChooseFoun
	mov	eax, DWORD PTR _beliefChoices$[esp+868]
	mov	ebp, edi
$LL99@ChooseFoun:
	add	edx, DWORD PTR [eax+4]
	mov	esi, DWORD PTR [eax]
	add	eax, 8
	sub	ebp, 1
	jne	SHORT $LL99@ChooseFoun
$LN97@ChooseFoun:
	push	OFFSET $SG227999
	push	edx
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	xor	edx, edx
	cmp	edi, ebp
	jle	SHORT $LN146@ChooseFoun
	mov	ecx, DWORD PTR _beliefChoices$[esp+868]
$LL96@ChooseFoun:
	sub	eax, DWORD PTR [ecx+4]
	mov	esi, DWORD PTR [ecx]
	js	SHORT $LN146@ChooseFoun
	inc	edx
	add	ecx, 8
	cmp	edx, edi
	jl	SHORT $LL96@ChooseFoun
$LN146@ChooseFoun:

; 5035 : 	LogBeliefChoices(beliefChoices, rtnValue);

	push	esi
	lea	eax, DWORD PTR _beliefChoices$[esp+872]
	push	eax
	mov	ecx, ebx
	call	?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z ; CvReligionAI::LogBeliefChoices

; 5036 : 
; 5037 : 	return rtnValue;

	mov	eax, DWORD PTR _availableBeliefs$[esp+872]
	cmp	eax, ebp
	je	SHORT $LN124@ChooseFoun
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN124@ChooseFoun:
	mov	eax, DWORD PTR _beliefChoices$[esp+868]
	lea	ecx, DWORD PTR _beliefChoices$[esp+880]
	mov	DWORD PTR _availableBeliefs$[esp+872], ebp
	mov	DWORD PTR _availableBeliefs$[esp+876], ebp
	mov	DWORD PTR _availableBeliefs$[esp+880], ebp
	mov	DWORD PTR __$EHRec$[esp+876], -1
	cmp	eax, ecx
	je	SHORT $LN150@ChooseFoun
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN150@ChooseFoun:

; 5038 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+868]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 852				; 00000354H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0:
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	jmp	??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>
__unwindfunclet$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__ehhandler$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseFounderBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ENDP ; CvReligionAI::ChooseFounderBelief
PUBLIC	?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ; CvReligionAI::ChooseFollowerBelief
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1
__ehfuncinfo$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
_TEXT	SEGMENT
$T247492 = -852						; size = 4
_availableBeliefs$ = -848				; size = 16
$T247491 = -832						; size = 4
_beliefChoices$ = -828					; size = 816
__$EHRec$ = -12						; size = 12
?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ PROC ; CvReligionAI::ChooseFollowerBelief, COMDAT
; _this$ = ecx

; 5042 : {

	push	-1
	push	__ehhandler$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 840				; 00000348H
	push	ebx
	push	ebp
	push	esi
	mov	ebx, ecx

; 5043 : 	CvGameReligions* pGameReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 5044 : 	CvWeightedVector<BeliefTypes, SAFE_ESTIMATE_NUM_BELIEFS, true> beliefChoices;

	xor	ecx, ecx
	lea	edx, DWORD PTR _beliefChoices$[esp+880]
	mov	DWORD PTR _beliefChoices$[esp+872], ecx
	mov	DWORD PTR _beliefChoices$[esp+876], 100	; 00000064H
	mov	DWORD PTR _beliefChoices$[esp+868], edx
	mov	DWORD PTR __$EHRec$[esp+876], ecx

; 5045 : 
; 5046 : #ifdef AUI_WARNING_FIXES
; 5047 : 	const std::vector<BeliefTypes>& availableBeliefs = pGameReligions->GetAvailableFollowerBeliefs();
; 5048 : 
; 5049 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 5050 : #else
; 5051 : 	std::vector<BeliefTypes> availableBeliefs = pGameReligions->GetAvailableFollowerBeliefs();

	lea	ecx, DWORD PTR _availableBeliefs$[esp+868]
	push	ecx
	mov	ecx, eax
	call	?GetAvailableFollowerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableFollowerBeliefs

; 5052 : 
; 5053 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	eax, DWORD PTR _availableBeliefs$[esp+872]
	mov	BYTE PTR __$EHRec$[esp+876], 1
	mov	ebp, eax

; 5054 : 	        it!= availableBeliefs.end(); ++it)

	cmp	eax, DWORD PTR _availableBeliefs$[esp+876]
	je	SHORT $LN152@ChooseFoll
	npad	7
$LL154@ChooseFoll:

; 5055 : #endif
; 5056 : 	{
; 5057 : 		const BeliefTypes eBelief = (*it);

	mov	edi, DWORD PTR [ebp]

; 5058 : 		CvBeliefEntry* pEntry = m_pBeliefs->GetEntry(eBelief);

	mov	ecx, DWORD PTR [ebx]
	push	edi
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry

; 5059 : 		if(pEntry)

	test	eax, eax
	je	SHORT $LN4@ChooseFoll

; 5060 : 		{
; 5061 : 			const int iScore = ScoreBelief(pEntry);

	push	eax
	mov	ecx, ebx
	call	?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBelief
	mov	esi, eax

; 5062 : 			if(iScore > 0)

	test	esi, esi
	jle	SHORT $LN4@ChooseFoll

; 5063 : 			{
; 5064 : 				beliefChoices.push_back(eBelief, iScore);

	mov	eax, DWORD PTR _beliefChoices$[esp+876]
	mov	BYTE PTR _beliefChoices$[esp+1680], 0
	cmp	DWORD PTR _beliefChoices$[esp+872], eax
	jne	SHORT $LN51@ChooseFoll
	push	eax
	lea	ecx, DWORD PTR _beliefChoices$[esp+872]
	call	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::GrowSize
$LN51@ChooseFoll:
	mov	edx, DWORD PTR _beliefChoices$[esp+872]
	mov	eax, DWORD PTR _beliefChoices$[esp+868]
	lea	eax, DWORD PTR [eax+edx*8]
	test	eax, eax
	je	SHORT $LN54@ChooseFoll
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], esi
$LN54@ChooseFoll:
	inc	DWORD PTR _beliefChoices$[esp+872]
$LN4@ChooseFoll:

; 5054 : 	        it!= availableBeliefs.end(); ++it)

	add	ebp, 4
	cmp	ebp, DWORD PTR _availableBeliefs$[esp+876]
	jne	SHORT $LL154@ChooseFoll
$LN152@ChooseFoll:

; 5065 : 			}
; 5066 : 		}
; 5067 : 	}
; 5068 : 
; 5069 : 	// Choose from weighted vector
; 5070 : 	beliefChoices.SortItems();

	mov	ecx, DWORD PTR _beliefChoices$[esp+868]
	mov	edx, DWORD PTR _beliefChoices$[esp+872]
	lea	eax, DWORD PTR [ecx+edx*8]
	mov	edx, eax
	sub	edx, ecx
	sar	edx, 3
	push	edx
	push	eax
	push	ecx
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>

; 5071 : 	int iNumChoices = MIN(beliefChoices.size(),3);   // this was way too loose as choices way down were being selected now only top 3

	mov	eax, DWORD PTR _beliefChoices$[esp+884]
	add	esp, 12					; 0000000cH
	cmp	eax, 3
	mov	DWORD PTR $T247491[esp+868], 3
	mov	DWORD PTR $T247492[esp+868], eax
	lea	ecx, DWORD PTR $T247491[esp+868]
	jg	SHORT $LN76@ChooseFoll
	lea	ecx, DWORD PTR $T247492[esp+868]
$LN76@ChooseFoll:
	mov	edi, DWORD PTR [ecx]

; 5072 : 	RandomNumberDelegate fcn = MakeDelegate(&GC.getGame(), &CvGame::getJonRandNum);
; 5073 : 	BeliefTypes rtnValue = beliefChoices.ChooseFromTopChoices(iNumChoices, &fcn, "Choosing belief from Top Choices");

	cmp	edi, eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	jle	SHORT $LN100@ChooseFoll
	mov	edi, eax
$LN100@ChooseFoll:
	xor	ebp, ebp
	xor	esi, esi
	xor	edx, edx
	cmp	edi, ebp
	jle	SHORT $LN97@ChooseFoll
	mov	eax, DWORD PTR _beliefChoices$[esp+868]
	mov	ebp, edi
$LL99@ChooseFoll:
	add	edx, DWORD PTR [eax+4]
	mov	esi, DWORD PTR [eax]
	add	eax, 8
	sub	ebp, 1
	jne	SHORT $LL99@ChooseFoll
$LN97@ChooseFoll:
	push	OFFSET $SG228034
	push	edx
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	xor	edx, edx
	cmp	edi, ebp
	jle	SHORT $LN146@ChooseFoll
	mov	ecx, DWORD PTR _beliefChoices$[esp+868]
$LL96@ChooseFoll:
	sub	eax, DWORD PTR [ecx+4]
	mov	esi, DWORD PTR [ecx]
	js	SHORT $LN146@ChooseFoll
	inc	edx
	add	ecx, 8
	cmp	edx, edi
	jl	SHORT $LL96@ChooseFoll
$LN146@ChooseFoll:

; 5074 : 	LogBeliefChoices(beliefChoices, rtnValue);

	push	esi
	lea	eax, DWORD PTR _beliefChoices$[esp+872]
	push	eax
	mov	ecx, ebx
	call	?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z ; CvReligionAI::LogBeliefChoices

; 5075 : 
; 5076 : 	return rtnValue;

	mov	eax, DWORD PTR _availableBeliefs$[esp+872]
	cmp	eax, ebp
	je	SHORT $LN124@ChooseFoll
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN124@ChooseFoll:
	mov	eax, DWORD PTR _beliefChoices$[esp+868]
	lea	ecx, DWORD PTR _beliefChoices$[esp+880]
	mov	DWORD PTR _availableBeliefs$[esp+872], ebp
	mov	DWORD PTR _availableBeliefs$[esp+876], ebp
	mov	DWORD PTR _availableBeliefs$[esp+880], ebp
	mov	DWORD PTR __$EHRec$[esp+876], -1
	cmp	eax, ecx
	je	SHORT $LN150@ChooseFoll
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN150@ChooseFoll:

; 5077 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+868]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 852				; 00000354H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0:
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	jmp	??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>
__unwindfunclet$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__ehhandler$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseFollowerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ENDP ; CvReligionAI::ChooseFollowerBelief
PUBLIC	?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ; CvReligionAI::ChooseEnhancerBelief
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1
__ehfuncinfo$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
_TEXT	SEGMENT
$T247887 = -852						; size = 4
_availableBeliefs$ = -848				; size = 16
$T247886 = -832						; size = 4
_beliefChoices$ = -828					; size = 816
__$EHRec$ = -12						; size = 12
?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ PROC ; CvReligionAI::ChooseEnhancerBelief, COMDAT
; _this$ = ecx

; 5081 : {

	push	-1
	push	__ehhandler$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 840				; 00000348H
	push	ebx
	push	ebp
	push	esi
	mov	ebx, ecx

; 5082 : 	CvGameReligions* pGameReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 5083 : 	CvWeightedVector<BeliefTypes, SAFE_ESTIMATE_NUM_BELIEFS, true> beliefChoices;

	xor	ecx, ecx
	lea	edx, DWORD PTR _beliefChoices$[esp+880]
	mov	DWORD PTR _beliefChoices$[esp+872], ecx
	mov	DWORD PTR _beliefChoices$[esp+876], 100	; 00000064H
	mov	DWORD PTR _beliefChoices$[esp+868], edx
	mov	DWORD PTR __$EHRec$[esp+876], ecx

; 5084 : 
; 5085 : #ifdef AUI_WARNING_FIXES
; 5086 : 	const std::vector<BeliefTypes>& availableBeliefs = pGameReligions->GetAvailableEnhancerBeliefs();
; 5087 : 
; 5088 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 5089 : #else
; 5090 : 	std::vector<BeliefTypes> availableBeliefs = pGameReligions->GetAvailableEnhancerBeliefs();

	lea	ecx, DWORD PTR _availableBeliefs$[esp+868]
	push	ecx
	mov	ecx, eax
	call	?GetAvailableEnhancerBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableEnhancerBeliefs

; 5091 : 
; 5092 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	eax, DWORD PTR _availableBeliefs$[esp+872]
	mov	BYTE PTR __$EHRec$[esp+876], 1
	mov	ebp, eax

; 5093 : 	        it!= availableBeliefs.end(); ++it)

	cmp	eax, DWORD PTR _availableBeliefs$[esp+876]
	je	SHORT $LN152@ChooseEnha
	npad	7
$LL154@ChooseEnha:

; 5094 : #endif
; 5095 : 	{
; 5096 : 		const BeliefTypes eBelief = (*it);

	mov	edi, DWORD PTR [ebp]

; 5097 : 		CvBeliefEntry* pEntry = m_pBeliefs->GetEntry(eBelief);

	mov	ecx, DWORD PTR [ebx]
	push	edi
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry

; 5098 : 		if(pEntry)

	test	eax, eax
	je	SHORT $LN4@ChooseEnha

; 5099 : 		{
; 5100 : 			const int iScore = ScoreBelief(pEntry);

	push	eax
	mov	ecx, ebx
	call	?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBelief
	mov	esi, eax

; 5101 : 			if(iScore > 0)

	test	esi, esi
	jle	SHORT $LN4@ChooseEnha

; 5102 : 			{
; 5103 : 				beliefChoices.push_back(eBelief, iScore);

	mov	eax, DWORD PTR _beliefChoices$[esp+876]
	mov	BYTE PTR _beliefChoices$[esp+1680], 0
	cmp	DWORD PTR _beliefChoices$[esp+872], eax
	jne	SHORT $LN51@ChooseEnha
	push	eax
	lea	ecx, DWORD PTR _beliefChoices$[esp+872]
	call	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::GrowSize
$LN51@ChooseEnha:
	mov	edx, DWORD PTR _beliefChoices$[esp+872]
	mov	eax, DWORD PTR _beliefChoices$[esp+868]
	lea	eax, DWORD PTR [eax+edx*8]
	test	eax, eax
	je	SHORT $LN54@ChooseEnha
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], esi
$LN54@ChooseEnha:
	inc	DWORD PTR _beliefChoices$[esp+872]
$LN4@ChooseEnha:

; 5093 : 	        it!= availableBeliefs.end(); ++it)

	add	ebp, 4
	cmp	ebp, DWORD PTR _availableBeliefs$[esp+876]
	jne	SHORT $LL154@ChooseEnha
$LN152@ChooseEnha:

; 5104 : 			}
; 5105 : 		}
; 5106 : 	}
; 5107 : 
; 5108 : 	// Choose from weighted vector
; 5109 : 	beliefChoices.SortItems();

	mov	ecx, DWORD PTR _beliefChoices$[esp+868]
	mov	edx, DWORD PTR _beliefChoices$[esp+872]
	lea	eax, DWORD PTR [ecx+edx*8]
	mov	edx, eax
	sub	edx, ecx
	sar	edx, 3
	push	edx
	push	eax
	push	ecx
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>

; 5110 : 	int iNumChoices = MIN(beliefChoices.size(),3);   // this was way too loose as choices way down were being selected now only top 3

	mov	eax, DWORD PTR _beliefChoices$[esp+884]
	add	esp, 12					; 0000000cH
	cmp	eax, 3
	mov	DWORD PTR $T247886[esp+868], 3
	mov	DWORD PTR $T247887[esp+868], eax
	lea	ecx, DWORD PTR $T247886[esp+868]
	jg	SHORT $LN76@ChooseEnha
	lea	ecx, DWORD PTR $T247887[esp+868]
$LN76@ChooseEnha:
	mov	edi, DWORD PTR [ecx]

; 5111 : 	RandomNumberDelegate fcn = MakeDelegate(&GC.getGame(), &CvGame::getJonRandNum);
; 5112 : 	BeliefTypes rtnValue = beliefChoices.ChooseFromTopChoices(iNumChoices, &fcn, "Choosing belief from Top Choices");

	cmp	edi, eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	jle	SHORT $LN100@ChooseEnha
	mov	edi, eax
$LN100@ChooseEnha:
	xor	ebp, ebp
	xor	esi, esi
	xor	edx, edx
	cmp	edi, ebp
	jle	SHORT $LN97@ChooseEnha
	mov	eax, DWORD PTR _beliefChoices$[esp+868]
	mov	ebp, edi
$LL99@ChooseEnha:
	add	edx, DWORD PTR [eax+4]
	mov	esi, DWORD PTR [eax]
	add	eax, 8
	sub	ebp, 1
	jne	SHORT $LL99@ChooseEnha
$LN97@ChooseEnha:
	push	OFFSET $SG228069
	push	edx
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	xor	edx, edx
	cmp	edi, ebp
	jle	SHORT $LN146@ChooseEnha
	mov	ecx, DWORD PTR _beliefChoices$[esp+868]
$LL96@ChooseEnha:
	sub	eax, DWORD PTR [ecx+4]
	mov	esi, DWORD PTR [ecx]
	js	SHORT $LN146@ChooseEnha
	inc	edx
	add	ecx, 8
	cmp	edx, edi
	jl	SHORT $LL96@ChooseEnha
$LN146@ChooseEnha:

; 5113 : 	LogBeliefChoices(beliefChoices, rtnValue);

	push	esi
	lea	eax, DWORD PTR _beliefChoices$[esp+872]
	push	eax
	mov	ecx, ebx
	call	?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z ; CvReligionAI::LogBeliefChoices

; 5114 : 
; 5115 : 	return rtnValue;

	mov	eax, DWORD PTR _availableBeliefs$[esp+872]
	cmp	eax, ebp
	je	SHORT $LN124@ChooseEnha
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN124@ChooseEnha:
	mov	eax, DWORD PTR _beliefChoices$[esp+868]
	lea	ecx, DWORD PTR _beliefChoices$[esp+880]
	mov	DWORD PTR _availableBeliefs$[esp+872], ebp
	mov	DWORD PTR _availableBeliefs$[esp+876], ebp
	mov	DWORD PTR _availableBeliefs$[esp+880], ebp
	mov	DWORD PTR __$EHRec$[esp+876], -1
	cmp	eax, ecx
	je	SHORT $LN150@ChooseEnha
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN150@ChooseEnha:

; 5116 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+868]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 852				; 00000354H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0:
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	jmp	??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>
__unwindfunclet$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__ehhandler$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseEnhancerBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ENDP ; CvReligionAI::ChooseEnhancerBelief
PUBLIC	?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z ; CvReligionAI::ChooseBonusBelief
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z$1
__ehfuncinfo$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z
_TEXT	SEGMENT
_this$ = -856						; size = 4
$T248281 = -852						; size = 4
_eBelief$228096 = -852					; size = 4
$T248282 = -848						; size = 4
_availableBeliefs$ = -844				; size = 16
_beliefChoices$ = -828					; size = 816
__$EHRec$ = -12						; size = 12
_iExcludeBelief1$ = 8					; size = 4
_iExcludeBelief2$ = 12					; size = 4
_iExcludeBelief3$ = 16					; size = 4
?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z PROC ; CvReligionAI::ChooseBonusBelief, COMDAT
; _this$ = ecx

; 5120 : {

	push	-1
	push	__ehhandler$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 844				; 0000034cH
	push	ebx
	push	ebp
	push	esi
	mov	DWORD PTR _this$[esp+868], ecx

; 5121 : 	CvGameReligions* pGameReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 5122 : 	CvWeightedVector<BeliefTypes, SAFE_ESTIMATE_NUM_BELIEFS, true> beliefChoices;

	xor	ebp, ebp
	lea	ecx, DWORD PTR _beliefChoices$[esp+884]
	mov	DWORD PTR _beliefChoices$[esp+876], ebp
	mov	DWORD PTR _beliefChoices$[esp+880], 100	; 00000064H
	mov	DWORD PTR _beliefChoices$[esp+872], ecx

; 5123 : 
; 5124 : #ifdef AUI_WARNING_FIXES
; 5125 : 	const std::vector<BeliefTypes>& availableBeliefs = pGameReligions->GetAvailableBonusBeliefs();
; 5126 : 
; 5127 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 5128 : #else
; 5129 : 	std::vector<BeliefTypes> availableBeliefs = pGameReligions->GetAvailableBonusBeliefs();

	lea	edx, DWORD PTR _availableBeliefs$[esp+872]
	push	edx
	mov	ecx, eax
	mov	DWORD PTR __$EHRec$[esp+884], ebp
	call	?GetAvailableBonusBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableBonusBeliefs

; 5130 : 
; 5131 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	eax, DWORD PTR _availableBeliefs$[esp+876]
	mov	BYTE PTR __$EHRec$[esp+880], 1
	mov	esi, eax

; 5132 : 	        it!= availableBeliefs.end(); ++it)

	cmp	eax, DWORD PTR _availableBeliefs$[esp+880]
	je	SHORT $LN4@ChooseBonu
	mov	ebx, DWORD PTR _iExcludeBelief3$[esp+868]
	mov	ebp, DWORD PTR _iExcludeBelief2$[esp+868]
	mov	edi, DWORD PTR _iExcludeBelief1$[esp+868]
$LL32@ChooseBonu:

; 5133 : #endif
; 5134 : 	{
; 5135 : 		const BeliefTypes eBelief = (*it);

	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR _eBelief$228096[esp+872], eax

; 5136 : 		CvBeliefEntry* pEntry = m_pBeliefs->GetEntry(eBelief);

	push	eax
	mov	eax, DWORD PTR _this$[esp+876]
	mov	ecx, DWORD PTR [eax]
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry

; 5137 : 		if(pEntry)

	test	eax, eax
	je	SHORT $LN5@ChooseBonu

; 5138 : 		{
; 5139 : 			if (pEntry->GetID() != iExcludeBelief1 && pEntry->GetID() != iExcludeBelief2 && pEntry->GetID() != iExcludeBelief3)

	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, edi
	je	SHORT $LN5@ChooseBonu
	cmp	ecx, ebp
	je	SHORT $LN5@ChooseBonu
	cmp	ecx, ebx
	je	SHORT $LN5@ChooseBonu

; 5140 : 			{
; 5141 : 				const int iScore = ScoreBelief(pEntry);

	mov	ecx, DWORD PTR _this$[esp+872]
	push	eax
	call	?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBelief

; 5142 : 				if(iScore > 0)

	test	eax, eax
	jle	SHORT $LN5@ChooseBonu

; 5143 : 				{
; 5144 : 					beliefChoices.push_back(eBelief, iScore);

	push	eax
	lea	ecx, DWORD PTR _eBelief$228096[esp+876]
	push	ecx
	lea	ecx, DWORD PTR _beliefChoices$[esp+880]
	call	?push_back@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAEIABW4BeliefTypes@@H@Z ; CvWeightedVector<enum BeliefTypes,100,1>::push_back
$LN5@ChooseBonu:
	add	esi, 4
	cmp	esi, DWORD PTR _availableBeliefs$[esp+880]
	jne	SHORT $LL32@ChooseBonu

; 5132 : 	        it!= availableBeliefs.end(); ++it)

	xor	ebp, ebp
$LN4@ChooseBonu:

; 5145 : 				}
; 5146 : 			}
; 5147 : 		}
; 5148 : 	}
; 5149 : 
; 5150 : 	// Choose from weighted vector
; 5151 : 	beliefChoices.SortItems();

	mov	eax, DWORD PTR _beliefChoices$[esp+872]
	mov	edx, DWORD PTR _beliefChoices$[esp+876]
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	edx, ecx
	sub	edx, eax
	sar	edx, 3
	push	edx
	push	ecx
	push	eax
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>

; 5152 : 	int iNumChoices = MIN(beliefChoices.size(),3);   // this was way too loose as choices way down were being selected now only top 3

	mov	eax, DWORD PTR _beliefChoices$[esp+888]
	add	esp, 12					; 0000000cH
	cmp	eax, 3
	mov	DWORD PTR $T248281[esp+872], 3
	mov	DWORD PTR $T248282[esp+872], eax
	lea	ecx, DWORD PTR $T248281[esp+872]
	jg	SHORT $LN69@ChooseBonu
	lea	ecx, DWORD PTR $T248282[esp+872]
$LN69@ChooseBonu:
	mov	edi, DWORD PTR [ecx]

; 5153 : 	RandomNumberDelegate fcn = MakeDelegate(&GC.getGame(), &CvGame::getJonRandNum);
; 5154 : 	BeliefTypes rtnValue = beliefChoices.ChooseFromTopChoices(iNumChoices, &fcn, "Choosing belief from Top Choices");

	cmp	edi, eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	jle	SHORT $LN93@ChooseBonu
	mov	edi, eax
$LN93@ChooseBonu:
	xor	esi, esi
	xor	edx, edx
	cmp	edi, ebp
	jle	SHORT $LN90@ChooseBonu
	mov	eax, DWORD PTR _beliefChoices$[esp+872]
	mov	ebx, edi
$LL92@ChooseBonu:
	add	edx, DWORD PTR [eax+4]
	mov	esi, DWORD PTR [eax]
	add	eax, 8
	sub	ebx, 1
	jne	SHORT $LL92@ChooseBonu
$LN90@ChooseBonu:
	push	OFFSET $SG228108
	push	edx
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	xor	edx, edx
	cmp	edi, ebp
	jle	SHORT $LN139@ChooseBonu
	mov	ecx, DWORD PTR _beliefChoices$[esp+872]
$LL89@ChooseBonu:
	sub	eax, DWORD PTR [ecx+4]
	mov	esi, DWORD PTR [ecx]
	js	SHORT $LN139@ChooseBonu
	inc	edx
	add	ecx, 8
	cmp	edx, edi
	jl	SHORT $LL89@ChooseBonu
$LN139@ChooseBonu:

; 5155 : 	LogBeliefChoices(beliefChoices, rtnValue);

	mov	ecx, DWORD PTR _this$[esp+872]
	push	esi
	lea	eax, DWORD PTR _beliefChoices$[esp+876]
	push	eax
	call	?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z ; CvReligionAI::LogBeliefChoices

; 5156 : 
; 5157 : 	return rtnValue;

	mov	eax, DWORD PTR _availableBeliefs$[esp+876]
	cmp	eax, ebp
	je	SHORT $LN117@ChooseBonu
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN117@ChooseBonu:
	mov	eax, DWORD PTR _beliefChoices$[esp+872]
	lea	ecx, DWORD PTR _beliefChoices$[esp+884]
	mov	DWORD PTR _availableBeliefs$[esp+876], ebp
	mov	DWORD PTR _availableBeliefs$[esp+880], ebp
	mov	DWORD PTR _availableBeliefs$[esp+884], ebp
	mov	DWORD PTR __$EHRec$[esp+880], -1
	cmp	eax, ecx
	je	SHORT $LN143@ChooseBonu
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN143@ChooseBonu:

; 5158 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+872]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 856				; 00000358H
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z$0:
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	jmp	??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>
__unwindfunclet$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__ehhandler$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z:
	mov	eax, OFFSET __ehfuncinfo$?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseBonusBelief@CvReligionAI@@QAE?AW4BeliefTypes@@HHH@Z ENDP ; CvReligionAI::ChooseBonusBelief
PUBLIC	?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ; CvReligionAI::ChooseReformationBelief
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\fireplace\include\fireworks\ffastvector.h
xdata$x	SEGMENT
__unwindtable$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1
__ehfuncinfo$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
_TEXT	SEGMENT
$T248642 = -852						; size = 4
_availableBeliefs$ = -848				; size = 16
$T248641 = -832						; size = 4
_beliefChoices$ = -828					; size = 816
__$EHRec$ = -12						; size = 12
?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ PROC ; CvReligionAI::ChooseReformationBelief, COMDAT
; _this$ = ecx

; 5162 : {

	push	-1
	push	__ehhandler$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 840				; 00000348H
	push	ebx
	push	ebp
	push	esi
	mov	ebx, ecx

; 5163 : 	CvGameReligions* pGameReligions = GC.getGame().GetGameReligions();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	push	edi
	call	?GetGameReligions@CvGame@@QAEPAVCvGameReligions@@XZ ; CvGame::GetGameReligions

; 5164 : 	CvWeightedVector<BeliefTypes, SAFE_ESTIMATE_NUM_BELIEFS, true> beliefChoices;

	xor	ecx, ecx
	lea	edx, DWORD PTR _beliefChoices$[esp+880]
	mov	DWORD PTR _beliefChoices$[esp+872], ecx
	mov	DWORD PTR _beliefChoices$[esp+876], 100	; 00000064H
	mov	DWORD PTR _beliefChoices$[esp+868], edx
	mov	DWORD PTR __$EHRec$[esp+876], ecx

; 5165 : 
; 5166 : #ifdef AUI_WARNING_FIXES
; 5167 : 	const std::vector<BeliefTypes>& availableBeliefs = pGameReligions->GetAvailableReformationBeliefs();
; 5168 : 
; 5169 : 	for (std::vector<BeliefTypes>::const_iterator it = availableBeliefs.begin(); it != availableBeliefs.end(); ++it)
; 5170 : #else
; 5171 : 	std::vector<BeliefTypes> availableBeliefs = pGameReligions->GetAvailableReformationBeliefs();

	lea	ecx, DWORD PTR _availableBeliefs$[esp+868]
	push	ecx
	mov	ecx, eax
	call	?GetAvailableReformationBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailableReformationBeliefs

; 5172 : 
; 5173 : 	for(std::vector<BeliefTypes>::iterator it = availableBeliefs.begin();

	mov	eax, DWORD PTR _availableBeliefs$[esp+872]
	mov	BYTE PTR __$EHRec$[esp+876], 1
	mov	ebp, eax

; 5174 : 	        it!= availableBeliefs.end(); ++it)

	cmp	eax, DWORD PTR _availableBeliefs$[esp+876]
	je	SHORT $LN152@ChooseRefo
	npad	7
$LL154@ChooseRefo:

; 5175 : #endif
; 5176 : 	{
; 5177 : 		const BeliefTypes eBelief = (*it);

	mov	edi, DWORD PTR [ebp]

; 5178 : 		CvBeliefEntry* pEntry = m_pBeliefs->GetEntry(eBelief);

	mov	ecx, DWORD PTR [ebx]
	push	edi
	call	?GetEntry@CvBeliefXMLEntries@@QAEPAVCvBeliefEntry@@H@Z ; CvBeliefXMLEntries::GetEntry

; 5179 : 		if(pEntry)

	test	eax, eax
	je	SHORT $LN4@ChooseRefo

; 5180 : 		{
; 5181 : 			const int iScore = ScoreBelief(pEntry);

	push	eax
	mov	ecx, ebx
	call	?ScoreBelief@CvReligionAI@@AAEHPAVCvBeliefEntry@@@Z ; CvReligionAI::ScoreBelief
	mov	esi, eax

; 5182 : 			if(iScore > 0)

	test	esi, esi
	jle	SHORT $LN4@ChooseRefo

; 5183 : 			{
; 5184 : 				beliefChoices.push_back(eBelief, iScore);

	mov	eax, DWORD PTR _beliefChoices$[esp+876]
	mov	BYTE PTR _beliefChoices$[esp+1680], 0
	cmp	DWORD PTR _beliefChoices$[esp+872], eax
	jne	SHORT $LN51@ChooseRefo
	push	eax
	lea	ecx, DWORD PTR _beliefChoices$[esp+872]
	call	?GrowSize@?$FStaticVector@UWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@$0GE@$00$0A@$0A@@@IAEXI@Z ; FStaticVector<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement,100,1,0,0>::GrowSize
$LN51@ChooseRefo:
	mov	edx, DWORD PTR _beliefChoices$[esp+872]
	mov	eax, DWORD PTR _beliefChoices$[esp+868]
	lea	eax, DWORD PTR [eax+edx*8]
	test	eax, eax
	je	SHORT $LN54@ChooseRefo
	mov	DWORD PTR [eax], edi
	mov	DWORD PTR [eax+4], esi
$LN54@ChooseRefo:
	inc	DWORD PTR _beliefChoices$[esp+872]
$LN4@ChooseRefo:

; 5174 : 	        it!= availableBeliefs.end(); ++it)

	add	ebp, 4
	cmp	ebp, DWORD PTR _availableBeliefs$[esp+876]
	jne	SHORT $LL154@ChooseRefo
$LN152@ChooseRefo:

; 5185 : 			}
; 5186 : 		}
; 5187 : 	}
; 5188 : 
; 5189 : 	// Choose from weighted vector
; 5190 : 	beliefChoices.SortItems();

	mov	ecx, DWORD PTR _beliefChoices$[esp+868]
	mov	edx, DWORD PTR _beliefChoices$[esp+872]
	lea	eax, DWORD PTR [ecx+edx*8]
	mov	edx, eax
	sub	edx, ecx
	sar	edx, 3
	push	edx
	push	eax
	push	ecx
	call	??$_Sort@PAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@std@@YAXPAUWeightedElement@?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@0H@Z ; std::_Sort<CvWeightedVector<enum BeliefTypes,100,1>::WeightedElement *,int>

; 5191 : 	int iNumChoices = MIN(beliefChoices.size(),3);   // this was way too loose as choices way down were being selected now only top 3

	mov	eax, DWORD PTR _beliefChoices$[esp+884]
	add	esp, 12					; 0000000cH
	cmp	eax, 3
	mov	DWORD PTR $T248641[esp+868], 3
	mov	DWORD PTR $T248642[esp+868], eax
	lea	ecx, DWORD PTR $T248641[esp+868]
	jg	SHORT $LN76@ChooseRefo
	lea	ecx, DWORD PTR $T248642[esp+868]
$LN76@ChooseRefo:
	mov	edi, DWORD PTR [ecx]

; 5192 : 	RandomNumberDelegate fcn = MakeDelegate(&GC.getGame(), &CvGame::getJonRandNum);
; 5193 : 	BeliefTypes rtnValue = beliefChoices.ChooseFromTopChoices(iNumChoices, &fcn, "Choosing belief from Top Choices");

	cmp	edi, eax
	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+48
	jle	SHORT $LN100@ChooseRefo
	mov	edi, eax
$LN100@ChooseRefo:
	xor	ebp, ebp
	xor	esi, esi
	xor	edx, edx
	cmp	edi, ebp
	jle	SHORT $LN97@ChooseRefo
	mov	eax, DWORD PTR _beliefChoices$[esp+868]
	mov	ebp, edi
$LL99@ChooseRefo:
	add	edx, DWORD PTR [eax+4]
	mov	esi, DWORD PTR [eax]
	add	eax, 8
	sub	ebp, 1
	jne	SHORT $LL99@ChooseRefo
$LN97@ChooseRefo:
	push	OFFSET $SG228143
	push	edx
	call	?getJonRandNum@CvGame@@QAEHHPBD@Z	; CvGame::getJonRandNum
	xor	edx, edx
	cmp	edi, ebp
	jle	SHORT $LN146@ChooseRefo
	mov	ecx, DWORD PTR _beliefChoices$[esp+868]
$LL96@ChooseRefo:
	sub	eax, DWORD PTR [ecx+4]
	mov	esi, DWORD PTR [ecx]
	js	SHORT $LN146@ChooseRefo
	inc	edx
	add	ecx, 8
	cmp	edx, edi
	jl	SHORT $LL96@ChooseRefo
$LN146@ChooseRefo:

; 5194 : 	LogBeliefChoices(beliefChoices, rtnValue);

	push	esi
	lea	eax, DWORD PTR _beliefChoices$[esp+872]
	push	eax
	mov	ecx, ebx
	call	?LogBeliefChoices@CvReligionAI@@AAEXAAV?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@H@Z ; CvReligionAI::LogBeliefChoices

; 5195 : 
; 5196 : 	return rtnValue;

	mov	eax, DWORD PTR _availableBeliefs$[esp+872]
	cmp	eax, ebp
	je	SHORT $LN124@ChooseRefo
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN124@ChooseRefo:
	mov	eax, DWORD PTR _beliefChoices$[esp+868]
	lea	ecx, DWORD PTR _beliefChoices$[esp+880]
	mov	DWORD PTR _availableBeliefs$[esp+872], ebp
	mov	DWORD PTR _availableBeliefs$[esp+876], ebp
	mov	DWORD PTR _availableBeliefs$[esp+880], ebp
	mov	DWORD PTR __$EHRec$[esp+876], -1
	cmp	eax, ecx
	je	SHORT $LN150@ChooseRefo
	push	eax
	call	?FireFreeAlignedNoTracking@@YAXPAX@Z	; FireFreeAlignedNoTracking
	add	esp, 4
$LN150@ChooseRefo:

; 5197 : }

	mov	ecx, DWORD PTR __$EHRec$[esp+868]
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR fs:0, ecx
	add	esp, 852				; 00000354H
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$0:
	lea	ecx, DWORD PTR _beliefChoices$[ebp]
	jmp	??1?$CvWeightedVector@W4BeliefTypes@@$0GE@$00@@QAE@XZ ; CvWeightedVector<enum BeliefTypes,100,1>::~CvWeightedVector<enum BeliefTypes,100,1>
__unwindfunclet$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ$1:
	lea	ecx, DWORD PTR _availableBeliefs$[ebp]
	jmp	??1?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@QAE@XZ ; std::vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >::~vector<enum BeliefTypes,std::allocator<enum BeliefTypes> >
__ehhandler$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ:
	mov	eax, OFFSET __ehfuncinfo$?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ENDP ; CvReligionAI::ChooseReformationBelief
PUBLIC	?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z ; CvGameReligions::CanCreatePantheon
EXTRN	?CallTestAll@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z:PROC ; LuaSupport::CallTestAll
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z$0
__ehfuncinfo$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z
_TEXT	SEGMENT
$T249037 = -28						; size = 16
__$EHRec$ = -12						; size = 12
_args$225114 = 8					; size = 4
_ePlayer$ = 8						; size = 4
_bResult$225115 = 12					; size = 1
_bCheckFaithTotal$ = 12					; size = 1
?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z PROC ; CvGameReligions::CanCreatePantheon, COMDAT
; _this$ = ecx

; 599  : {

	mov	eax, DWORD PTR fs:0
	push	-1
	push	__ehhandler$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 16					; 00000010H
	push	ebp

; 600  : 	if(ePlayer == NO_PLAYER)

	mov	ebp, DWORD PTR _ePlayer$[esp+28]
	push	esi
	mov	esi, ecx
	cmp	ebp, -1
	jne	SHORT $LN14@CanCreateP
	pop	esi

; 601  : 		return FOUNDING_INVALID_PLAYER;

	lea	eax, DWORD PTR [ebp+6]
	pop	ebp

; 660  : #endif
; 661  : 		return FOUNDING_NO_BELIEFS_AVAILABLE;
; 662  : 
; 663  : 	return FOUNDING_OK;
; 664  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	add	esp, 28					; 0000001cH
	ret	8
$LN14@CanCreateP:
	push	ebx
	push	edi

; 602  : 
; 603  : 	CvPlayer& kPlayer = GET_PLAYER(ePlayer);

	mov	edi, ebp
	imul	edi, 63236				; 0000f704H
	add	edi, DWORD PTR ?m_aPlayers@CvPlayerAI@@1PAV1@A ; CvPlayerAI::m_aPlayers

; 604  : 	const int iFaith = kPlayer.GetFaith();

	mov	ecx, edi
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith

; 605  : 
; 606  : 	if(kPlayer.isMinorCiv())

	mov	ecx, edi
	mov	ebx, eax
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	test	al, al

; 607  : 	{
; 608  : 		return FOUNDING_INVALID_PLAYER;

	jne	$LN54@CanCreateP

; 609  : 	}
; 610  : 
; 611  : 	if(HasCreatedPantheon(ePlayer) || HasCreatedReligion(ePlayer))

	push	ebp
	mov	ecx, esi
	call	?HasCreatedPantheon@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasCreatedPantheon
	test	al, al
	jne	$LN11@CanCreateP
	push	ebp
	mov	ecx, esi
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	test	eax, eax
	jg	$LN11@CanCreateP

; 612  : 	{
; 613  : 		return FOUNDING_PLAYER_ALREADY_CREATED_PANTHEON;
; 614  : 	}
; 615  : 
; 616  : 	if(bCheckFaithTotal && iFaith < GetMinimumFaithNextPantheon())

	cmp	BYTE PTR _bCheckFaithTotal$[esp+40], 0
	je	SHORT $LN10@CanCreateP
	cmp	ebx, DWORD PTR [esi+5264]
	jge	SHORT $LN10@CanCreateP
	pop	edi
	pop	ebx
	pop	esi

; 617  : 	{
; 618  : 		return FOUNDING_NOT_ENOUGH_FAITH;

	mov	eax, 3
	pop	ebp

; 660  : #endif
; 661  : 		return FOUNDING_NO_BELIEFS_AVAILABLE;
; 662  : 
; 663  : 	return FOUNDING_OK;
; 664  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	add	esp, 28					; 0000001cH
	ret	8
$LN10@CanCreateP:

; 619  : 	}
; 620  : 
; 621  : 	// Has a religion been enhanced yet (and total number of religions/pantheons is equal to number of religions allowed)?
; 622  : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 623  : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 624  : #else
; 625  : 	ReligionList::const_iterator it;
; 626  : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	eax, DWORD PTR [esi+4]
	mov	edi, DWORD PTR [esi]
	imul	eax, 328				; 00000148H
	add	eax, edi
	cmp	edi, eax
	je	SHORT $LN7@CanCreateP
	npad	3
$LL9@CanCreateP:

; 627  : #endif
; 628  : 	{
; 629  : 		if(it->m_bEnhanced)

	cmp	BYTE PTR [edi+21], 0
	je	SHORT $LN8@CanCreateP

; 630  : 		{
; 631  : 			if (GetNumPantheonsCreated() >= GC.getMap().getWorldInfo().getMaxActiveReligions())

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	call	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ ; CvMap::getWorldInfo
	mov	ecx, eax
	call	?getMaxActiveReligions@CvWorldInfo@@QBEHXZ ; CvWorldInfo::getMaxActiveReligions
	mov	ecx, esi
	mov	ebx, eax
	call	?GetNumPantheonsCreated@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumPantheonsCreated
	cmp	eax, ebx
	jge	$LN48@CanCreateP
$LN8@CanCreateP:

; 619  : 	}
; 620  : 
; 621  : 	// Has a religion been enhanced yet (and total number of religions/pantheons is equal to number of religions allowed)?
; 622  : #ifdef AUI_ITERATOR_POSTFIX_INCREMENT_OPTIMIZATIONS
; 623  : 	for (ReligionList::const_iterator it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); ++it)
; 624  : #else
; 625  : 	ReligionList::const_iterator it;
; 626  : 	for(it = m_CurrentReligions.begin(); it != m_CurrentReligions.end(); it++)

	mov	ecx, DWORD PTR [esi+4]
	imul	ecx, 328				; 00000148H
	add	ecx, DWORD PTR [esi]
	add	edi, 328				; 00000148H
	cmp	edi, ecx
	jne	SHORT $LL9@CanCreateP
$LN7@CanCreateP:

; 634  : 			}
; 635  : 		}
; 636  : 	}
; 637  : 
; 638  : 	ICvEngineScriptSystem1* pkScriptSystem = gDLL->GetScriptSystem();

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8596
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	mov	edi, eax

; 639  : 	if(pkScriptSystem) 

	test	edi, edi
	je	$LN4@CanCreateP

; 640  : 	{
; 641  : 		CvLuaArgsHandle args;

	lea	ecx, DWORD PTR _args$225114[esp+40]
	call	??0CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::CvLuaArgsHandle

; 642  : 		args->Push(ePlayer);

	mov	ecx, DWORD PTR _args$225114[esp+40]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	push	ebp
	mov	DWORD PTR __$EHRec$[esp+56], 0
	call	eax

; 643  : 
; 644  : 		// Attempt to execute the game events.
; 645  : 		// Will return false if there are no registered listeners.
; 646  : 		bool bResult = false;
; 647  : 		if (LuaSupport::CallTestAll(pkScriptSystem, "PlayerCanFoundPantheon", args.get(), bResult))

	mov	edx, DWORD PTR _args$225114[esp+40]
	lea	ecx, DWORD PTR _bResult$225115[esp+40]
	push	ecx
	push	edx
	push	OFFSET $SG225117
	push	edi
	mov	BYTE PTR _bResult$225115[esp+56], 0
	call	?CallTestAll@LuaSupport@@YA_NPAVICvEngineScriptSystem1@@PBDPAVICvEngineScriptSystemArgs1@@AA_N@Z ; LuaSupport::CallTestAll
	add	esp, 16					; 00000010H
	test	al, al
	je	SHORT $LN2@CanCreateP

; 648  : 		{
; 649  : 			if (bResult == false) 

	cmp	BYTE PTR _bResult$225115[esp+40], 0
	jne	SHORT $LN2@CanCreateP

; 650  : 			{
; 651  : 				return FOUNDING_INVALID_PLAYER;

	lea	ecx, DWORD PTR _args$225114[esp+40]
	mov	DWORD PTR __$EHRec$[esp+52], -1
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN54@CanCreateP:
	pop	edi
	pop	ebx
	pop	esi
	mov	eax, 5
	pop	ebp

; 660  : #endif
; 661  : 		return FOUNDING_NO_BELIEFS_AVAILABLE;
; 662  : 
; 663  : 	return FOUNDING_OK;
; 664  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	add	esp, 28					; 0000001cH
	ret	8
$LN48@CanCreateP:
	pop	edi
	pop	ebx
	pop	esi

; 632  : 			{
; 633  : 				return FOUNDING_RELIGION_ENHANCED;

	mov	eax, 9
	pop	ebp

; 660  : #endif
; 661  : 		return FOUNDING_NO_BELIEFS_AVAILABLE;
; 662  : 
; 663  : 	return FOUNDING_OK;
; 664  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	add	esp, 28					; 0000001cH
	ret	8
$LN2@CanCreateP:

; 652  : 			}
; 653  : 		}
; 654  : 	}

	lea	ecx, DWORD PTR _args$225114[esp+40]
	mov	DWORD PTR __$EHRec$[esp+52], -1
	call	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
$LN4@CanCreateP:

; 655  : 
; 656  : #ifdef AUI_RELIGION_FIX_NO_BELIEFS_AVAILABLE_CHECK_FOR_NON_PANTHEON_MOVED
; 657  : 	if (!IsAnyAvailablePantheonBeliefs())
; 658  : #else
; 659  : 	if (GetAvailablePantheonBeliefs().size() == 0)

	lea	eax, DWORD PTR $T249037[esp+44]
	push	eax
	mov	ecx, esi
	call	?GetAvailablePantheonBeliefs@CvGameReligions@@QAE?AV?$vector@W4BeliefTypes@@V?$allocator@W4BeliefTypes@@@std@@@std@@XZ ; CvGameReligions::GetAvailablePantheonBeliefs
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR $T249037[esp+48]
	test	ecx, -4					; fffffffcH
	sete	bl
	test	eax, eax
	je	SHORT $LN45@CanCreateP
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN45@CanCreateP:
	movzx	eax, bl
	pop	edi
	neg	eax
	pop	ebx
	sbb	eax, eax
	pop	esi
	and	eax, 10					; 0000000aH
	pop	ebp

; 660  : #endif
; 661  : 		return FOUNDING_NO_BELIEFS_AVAILABLE;
; 662  : 
; 663  : 	return FOUNDING_OK;
; 664  : }

	mov	ecx, DWORD PTR __$EHRec$[esp+28]
	mov	DWORD PTR fs:0, ecx
	add	esp, 28					; 0000001cH
	ret	8
$LN11@CanCreateP:
	mov	ecx, DWORD PTR __$EHRec$[esp+44]
	pop	edi
	pop	ebx
	pop	esi
	mov	eax, 7
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	add	esp, 28					; 0000001cH
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z$0:
	lea	ecx, DWORD PTR _args$225114[ebp-4]
	jmp	??1CvLuaArgsHandle@@QAE@XZ		; CvLuaArgsHandle::~CvLuaArgsHandle
__ehhandler$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z:
	mov	eax, OFFSET __ehfuncinfo$?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z ENDP ; CvGameReligions::CanCreatePantheon
PUBLIC	?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z ; CvGameReligions::DoPlayerTurn
EXTRN	?GetFaithPurchaseIndex@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetFaithPurchaseIndex
EXTRN	?HasPolicyGrantingReformationBelief@CvPlayerPolicies@@QBE_NXZ:PROC ; CvPlayerPolicies::HasPolicyGrantingReformationBelief
EXTRN	?GetFaithPurchaseType@CvPlayer@@QBE?AW4FaithPurchaseTypes@@XZ:PROC ; CvPlayer::GetFaithPurchaseType
EXTRN	?GetTotalFaithPerTurn@CvPlayer@@QBEHXZ:PROC	; CvPlayer::GetTotalFaithPerTurn
;	COMDAT xdata$x
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredllutil\include\cvstring.h
xdata$x	SEGMENT
__ehfuncinfo$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z DD 019930522H
	DD	0fH
	DD	FLAT:__unwindtable$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$7
	DD	06H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$8
	DD	06H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$10
	DD	06H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$12
	DD	06H
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$14
	DD	0dH
	DD	FLAT:__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$15
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvreligionclasses.cpp
xdata$x	ENDS
;	COMDAT ?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z
_TEXT	SEGMENT
$T249116 = -160						; size = 4
$T249115 = -160						; size = 4
$T249114 = -160						; size = 4
_ePlayer$ = -160					; size = 4
_bCouldAtStartAffordFaithPurchase$ = -153		; size = 1
_strBuffer$225071 = -152				; size = 28
_strBuffer$225044 = -152				; size = 28
_strBuffer$225009 = -152				; size = 28
_strBuffer$224989 = -152				; size = 28
_strSummary$224980 = -152				; size = 28
_strSummary$225075 = -124				; size = 28
_strSummary$225055 = -124				; size = 28
_strSummary$225012 = -124				; size = 28
_strSummary$224992 = -124				; size = 28
_strBuffer$224977 = -124				; size = 28
_szItemName$ = -96					; size = 28
_strSummary$225091 = -68				; size = 28
$T249113 = -68						; size = 28
_strBuffer$225082 = -40					; size = 28
$T249112 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_kPlayer$ = 8						; size = 4
?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z PROC	; CvGameReligions::DoPlayerTurn, COMDAT
; _this$ = ecx

; 398  : {

	push	-1
	push	__ehhandler$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	DWORD PTR fs:0, esp
	sub	esp, 148				; 00000094H
	push	ebx
	push	ebp
	push	esi

; 399  : 	AI_PERF_FORMAT("AI-perf.csv", ("CvGameReligions::DoPlayerTurn, Turn %03d, %s", GC.getGame().getElapsedGameTurns(), kPlayer.getCivilizationShortDescription()) );
; 400  : 	bool bCouldAtStartAffordFaithPurchase = kPlayer.GetReligions()->CanAffordFaithPurchase();

	mov	esi, DWORD PTR _kPlayer$[esp+168]
	mov	ebp, ecx
	push	edi
	mov	ecx, esi
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?CanAffordFaithPurchase@CvPlayerReligions@@QBE_NXZ ; CvPlayerReligions::CanAffordFaithPurchase
	mov	BYTE PTR _bCouldAtStartAffordFaithPurchase$[esp+176], al

; 401  : 	const PlayerTypes ePlayer = kPlayer.GetID();

	mov	eax, DWORD PTR [esi+44]

; 402  : 
; 403  : #ifndef AUI_YIELDS_APPLIED_AFTER_TURN_NOT_BEFORE
; 404  : 	int iFaithPerTurn = kPlayer.GetTotalFaithPerTurn();

	mov	ecx, esi
	mov	DWORD PTR _ePlayer$[esp+176], eax
	call	?GetTotalFaithPerTurn@CvPlayer@@QBEHXZ	; CvPlayer::GetTotalFaithPerTurn

; 405  : 	if(iFaithPerTurn > 0)

	test	eax, eax
	jle	SHORT $LN39@DoPlayerTu

; 406  : 	{
; 407  : 		kPlayer.ChangeFaith(iFaithPerTurn);

	push	eax
	mov	ecx, esi
	call	?ChangeFaith@CvPlayer@@QAEXH@Z		; CvPlayer::ChangeFaith
$LN39@DoPlayerTu:

; 408  : 	}
; 409  : #endif
; 410  : 
; 411  : 	// If just now can afford missionary, add a notification
; 412  : 	bool bCanNowAffordFaithPurchase = kPlayer.GetReligions()->CanAffordFaithPurchase();

	mov	ecx, esi
	call	?GetReligions@CvPlayer@@QBEPAVCvPlayerReligions@@XZ ; CvPlayer::GetReligions
	mov	ecx, eax
	call	?CanAffordFaithPurchase@CvPlayerReligions@@QBE_NXZ ; CvPlayerReligions::CanAffordFaithPurchase

; 413  : 	if (kPlayer.GetFaithPurchaseType() == NO_AUTOMATIC_FAITH_PURCHASE && !bCouldAtStartAffordFaithPurchase && bCanNowAffordFaithPurchase)

	mov	ecx, esi
	mov	bl, al
	call	?GetFaithPurchaseType@CvPlayer@@QBE?AW4FaithPurchaseTypes@@XZ ; CvPlayer::GetFaithPurchaseType
	test	eax, eax
	jne	$LN179@DoPlayerTu
	cmp	BYTE PTR _bCouldAtStartAffordFaithPurchase$[esp+176], al
	jne	$LN179@DoPlayerTu
	test	bl, bl
	je	$LN179@DoPlayerTu

; 414  : 	{
; 415  : 		CvNotifications* pNotifications = kPlayer.GetNotifications();

	mov	ecx, esi
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	edi, eax

; 416  : 		if(pNotifications)

	test	edi, edi
	je	$LN179@DoPlayerTu

; 417  : 		{
; 418  : 			CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_ENOUGH_FAITH_FOR_MISSIONARY");

	lea	ecx, DWORD PTR _strBuffer$224977[esp+176]
	push	OFFSET $SG224979
	push	ecx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText

; 419  : 			CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_ENOUGH_FAITH_FOR_MISSIONARY");

	lea	edx, DWORD PTR _strSummary$224980[esp+184]
	push	OFFSET $SG224982
	push	edx
	mov	DWORD PTR __$EHRec$[esp+200], 0
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 16					; 00000010H

; 420  : 			pNotifications->Add(NOTIFICATION_CAN_BUILD_MISSIONARY, strBuffer, strSummary, -1, -1, -1);

	lea	ecx, DWORD PTR _strSummary$224980[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], 1
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	-1
	push	-1
	push	-1
	push	-1
	push	eax
	lea	ecx, DWORD PTR _strBuffer$224977[esp+196]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	-1487612968				; a754d3d8H
	mov	ecx, edi
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 421  : 		}

	lea	ecx, DWORD PTR _strSummary$224980[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], 0
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strBuffer$224977[esp+176]
	mov	DWORD PTR __$EHRec$[esp+184], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN179@DoPlayerTu:

; 422  : 	}
; 423  : 
; 424  : 	// Check for pantheon or great prophet spawning (now restricted so must occur before Industrial era)
; 425  : 	if(kPlayer.GetFaith() > 0 && !kPlayer.isMinorCiv() && kPlayer.GetCurrentEra() < GC.getInfoTypeForString("ERA_INDUSTRIAL"))

	mov	ecx, esi
	call	?GetFaith@CvPlayer@@QBEHXZ		; CvPlayer::GetFaith
	test	eax, eax
	jle	$LN177@DoPlayerTu
	mov	ecx, esi
	call	?isMinorCiv@CvPlayer@@QBE_NXZ		; CvPlayer::isMinorCiv
	test	al, al
	jne	$LN177@DoPlayerTu
	push	0
	push	OFFSET $SG224984
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, esi
	mov	edi, eax
	call	?GetCurrentEra@CvPlayer@@QBE?AW4EraTypes@@XZ ; CvPlayer::GetCurrentEra
	cmp	eax, edi
	jge	$LN177@DoPlayerTu

; 426  : 	{
; 427  : 		if(CanCreatePantheon(kPlayer.GetID(), true) == FOUNDING_OK)

	mov	eax, DWORD PTR [esi+44]
	push	1
	push	eax
	mov	ecx, ebp
	call	?CanCreatePantheon@CvGameReligions@@QAE?AW4FOUNDING_RESULT@1@W4PlayerTypes@@_N@Z ; CvGameReligions::CanCreatePantheon
	test	eax, eax
	jne	$LN180@DoPlayerTu

; 428  : 		{
; 429  : 			// Create the pantheon
; 430  : 			if(kPlayer.isHuman())

	mov	ecx, esi
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman

; 431  : 			{
; 432  : 				//If the player is human then a net message will be received which will pick the pantheon.
; 433  : 				CvNotifications* pNotifications = kPlayer.GetNotifications();

	mov	ecx, esi
	test	al, al
	je	$LN34@DoPlayerTu
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	edi, eax

; 434  : 				if(pNotifications)

	test	edi, edi
	je	$LN180@DoPlayerTu

; 435  : 				{
; 436  : 					CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_ENOUGH_FAITH_FOR_PANTHEON");

	lea	eax, DWORD PTR _strBuffer$224989[esp+176]
	push	OFFSET $SG224991
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText

; 437  : 
; 438  : 					CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_ENOUGH_FAITH_FOR_PANTHEON");

	lea	ecx, DWORD PTR _strSummary$224992[esp+184]
	push	OFFSET $SG224994
	mov	ebx, 2
	push	ecx
	mov	DWORD PTR __$EHRec$[esp+200], ebx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 16					; 00000010H

; 439  : 					pNotifications->Add(NOTIFICATION_FOUND_PANTHEON, strBuffer, strSummary, -1, -1, -1);

	lea	ecx, DWORD PTR _strSummary$224992[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], 3
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	-1
	push	-1
	push	-1
	push	-1
	push	eax
	lea	ecx, DWORD PTR _strBuffer$224989[esp+196]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	1279997337				; 4c4b3599H
	mov	ecx, edi
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 440  : 				}

	lea	ecx, DWORD PTR _strSummary$224992[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strBuffer$224989[esp+176]
	mov	DWORD PTR __$EHRec$[esp+184], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 441  : 			}
; 442  : 			else

	jmp	SHORT $LN180@DoPlayerTu
$LN34@DoPlayerTu:

; 443  : 			{
; 444  : 				const BeliefTypes eBelief = kPlayer.GetReligionAI()->ChoosePantheonBelief();

	call	?GetReligionAI@CvPlayer@@QBEPAVCvReligionAI@@XZ ; CvPlayer::GetReligionAI
	mov	ecx, eax
	call	?ChoosePantheonBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ; CvReligionAI::ChoosePantheonBelief

; 445  : 
; 446  : 				FoundPantheon(ePlayer, eBelief);

	mov	edx, DWORD PTR _ePlayer$[esp+176]
	push	eax
	push	edx
	mov	ecx, ebp
	call	?FoundPantheon@CvGameReligions@@QAEXW4PlayerTypes@@W4BeliefTypes@@@Z ; CvGameReligions::FoundPantheon
$LN180@DoPlayerTu:

; 447  : 			}
; 448  : 		}
; 449  : 
; 450  : 		switch (kPlayer.GetFaithPurchaseType())

	mov	ecx, esi
	call	?GetFaithPurchaseType@CvPlayer@@QBE?AW4FaithPurchaseTypes@@XZ ; CvPlayer::GetFaithPurchaseType
	cmp	eax, 1
	ja	SHORT $LN177@DoPlayerTu

; 451  : 		{
; 452  : 		case NO_AUTOMATIC_FAITH_PURCHASE:
; 453  : 		case FAITH_PURCHASE_SAVE_PROPHET:
; 454  : 				CheckSpawnGreatProphet(kPlayer);

	push	esi
	mov	ecx, ebp
	call	?CheckSpawnGreatProphet@CvGameReligions@@AAE_NAAVCvPlayer@@@Z ; CvGameReligions::CheckSpawnGreatProphet
$LN177@DoPlayerTu:

; 455  : 				break;
; 456  : 		}
; 457  : 	}
; 458  : 
; 459  : 	// Pick a Reformation belief?
; 460  : 	ReligionTypes eReligionCreated = GetReligionCreatedByPlayer(ePlayer);

	mov	eax, DWORD PTR _ePlayer$[esp+176]
	push	eax
	mov	ecx, ebp
	call	?GetReligionCreatedByPlayer@CvGameReligions@@QBE?AW4ReligionTypes@@W4PlayerTypes@@@Z ; CvGameReligions::GetReligionCreatedByPlayer
	mov	edi, eax

; 461  : #ifdef AUI_RELIGION_FIX_NO_BELIEFS_AVAILABLE_CHECK_FOR_NON_PANTHEON_MOVED
; 462  : 	if (eReligionCreated > RELIGION_PANTHEON && CanAddReformationBelief(ePlayer) == FOUNDING_OK)
; 463  : #else
; 464  : 	if (eReligionCreated > RELIGION_PANTHEON && !HasAddedReformationBelief(ePlayer) && kPlayer.GetPlayerPolicies()->HasPolicyGrantingReformationBelief())

	test	edi, edi
	jle	$LN181@DoPlayerTu
	mov	ebx, DWORD PTR _ePlayer$[esp+176]
	push	ebx
	mov	ecx, ebp
	call	?HasAddedReformationBelief@CvGameReligions@@QBE_NW4PlayerTypes@@@Z ; CvGameReligions::HasAddedReformationBelief
	test	al, al
	jne	$LN181@DoPlayerTu
	mov	ecx, esi
	call	?GetPlayerPolicies@CvPlayer@@QBEPAVCvPlayerPolicies@@XZ ; CvPlayer::GetPlayerPolicies
	mov	ecx, eax
	call	?HasPolicyGrantingReformationBelief@CvPlayerPolicies@@QBE_NXZ ; CvPlayerPolicies::HasPolicyGrantingReformationBelief
	test	al, al
	je	$LN181@DoPlayerTu

; 465  : #endif
; 466  : 	{
; 467  : 		if (!kPlayer.isHuman())

	mov	ecx, esi
	call	?isHuman@CvPlayer@@QBE_NXZ		; CvPlayer::isHuman

; 468  : 		{
; 469  : 			BeliefTypes eReformationBelief = kPlayer.GetReligionAI()->ChooseReformationBelief();

	mov	ecx, esi
	test	al, al
	jne	SHORT $LN27@DoPlayerTu
	call	?GetReligionAI@CvPlayer@@QBEPAVCvReligionAI@@XZ ; CvPlayer::GetReligionAI
	mov	ecx, eax
	call	?ChooseReformationBelief@CvReligionAI@@QAE?AW4BeliefTypes@@XZ ; CvReligionAI::ChooseReformationBelief

; 470  : 			AddReformationBelief(ePlayer, eReligionCreated, eReformationBelief);

	push	eax
	push	edi
	push	ebx
	mov	ecx, ebp
	call	?AddReformationBelief@CvGameReligions@@QAEXW4PlayerTypes@@W4ReligionTypes@@W4BeliefTypes@@@Z ; CvGameReligions::AddReformationBelief

; 471  : 		}
; 472  : 		else

	jmp	$LN181@DoPlayerTu
$LN27@DoPlayerTu:

; 473  : 		{
; 474  : 			CvNotifications* pNotifications;
; 475  : 			pNotifications = kPlayer.GetNotifications();

	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	edi, eax

; 476  : 			if(pNotifications)

	test	edi, edi
	je	$LN181@DoPlayerTu

; 477  : 			{
; 478  : 				CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_ADD_REFORMATION_BELIEF");

	lea	ecx, DWORD PTR _strBuffer$225009[esp+176]
	push	OFFSET $SG225011
	push	ecx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText

; 479  : 				CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_ADD_REFORMATION_BELIEF");

	lea	edx, DWORD PTR _strSummary$225012[esp+184]
	push	OFFSET $SG225014
	mov	ebx, 4
	push	edx
	mov	DWORD PTR __$EHRec$[esp+200], ebx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 16					; 00000010H

; 480  : 				pNotifications->Add(NOTIFICATION_ADD_REFORMATION_BELIEF, strBuffer, strSummary, -1, -1, -1);

	lea	ecx, DWORD PTR _strSummary$225012[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], 5
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	-1
	push	-1
	push	-1
	push	-1
	push	eax
	lea	ecx, DWORD PTR _strBuffer$225009[esp+196]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	84632199				; 050b6287H
	mov	ecx, edi
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 481  : 			}

	lea	ecx, DWORD PTR _strSummary$225012[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strBuffer$225009[esp+176]
	mov	DWORD PTR __$EHRec$[esp+184], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN181@DoPlayerTu:

; 482  : 		}
; 483  : 	}
; 484  : 
; 485  : 	// Automatic faith purchases?
; 486  : 	bool bSelectionStillValid = true;
; 487  : 	CvString szItemName = "";

	push	OFFSET $SG225017
	lea	ecx, DWORD PTR _szItemName$[esp+180]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z

; 488  : 	ReligionTypes eReligion = kPlayer.GetReligionAI()->GetReligionToSpread();

	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[esp+184], 6
	call	?GetReligionAI@CvPlayer@@QBEPAVCvReligionAI@@XZ ; CvPlayer::GetReligionAI
	mov	ecx, eax
	call	?GetReligionToSpread@CvReligionAI@@QBE?AW4ReligionTypes@@XZ ; CvReligionAI::GetReligionToSpread

; 489  : 
; 490  : 	switch (kPlayer.GetFaithPurchaseType())

	mov	ecx, esi
	mov	ebx, eax
	call	?GetFaithPurchaseType@CvPlayer@@QBE?AW4FaithPurchaseTypes@@XZ ; CvPlayer::GetFaithPurchaseType
	sub	eax, 1
	je	$LN22@DoPlayerTu
	sub	eax, 1
	je	$LN10@DoPlayerTu
	sub	eax, 1
	jne	$LN178@DoPlayerTu

; 501  : 			bSelectionStillValid = false;
; 502  : 		}
; 503  : 		break;
; 504  : 
; 505  : 	case FAITH_PURCHASE_UNIT:
; 506  : 		{
; 507  : 			UnitTypes eUnit = (UnitTypes)kPlayer.GetFaithPurchaseIndex();

	mov	ecx, esi
	call	?GetFaithPurchaseIndex@CvPlayer@@QBEHXZ	; CvPlayer::GetFaithPurchaseIndex
	mov	ebp, eax

; 508  : 			CvUnitEntry *pkUnit = GC.getUnitInfo(eUnit);

	push	ebp
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getUnitInfo@CvGlobals@@QAEPAVCvUnitEntry@@W4UnitTypes@@@Z ; CvGlobals::getUnitInfo

; 509  : 			if (pkUnit)

	test	eax, eax
	je	SHORT $LN113@DoPlayerTu

; 510  : 			{
; 511  : 				szItemName = pkUnit->GetDescriptionKey();

	lea	ecx, DWORD PTR [eax+64]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	lea	ecx, DWORD PTR _szItemName$[esp+176]
	test	eax, eax
	je	SHORT $LN114@DoPlayerTu
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN113@DoPlayerTu
$LN114@DoPlayerTu:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN113@DoPlayerTu:

; 512  : 			}
; 513  : 
; 514  : 			if (!kPlayer.IsCanPurchaseAnyCity(false, false /* Don't worry about faith balance */, eUnit, NO_BUILDING, YIELD_FAITH))

	push	5
	push	-1
	push	ebp
	push	0
	push	0
	mov	ecx, esi
	call	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z ; CvPlayer::IsCanPurchaseAnyCity
	test	al, al

; 515  : 			{
; 516  : 				bSelectionStillValid = false;
; 517  : 			}
; 518  : 			else

	je	$LN176@DoPlayerTu

; 519  : 			{
; 520  : 				if (kPlayer.IsCanPurchaseAnyCity(true, true /* Check faith balance */, eUnit, NO_BUILDING, YIELD_FAITH))

	push	5
	push	-1
	push	ebp
	push	1
	push	1
	mov	ecx, esi
	call	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z ; CvPlayer::IsCanPurchaseAnyCity
	test	al, al
	je	$LN178@DoPlayerTu

; 521  : 				{
; 522  : 					CvCity *pCity = CvReligionAIHelpers::GetBestCityFaithUnitPurchase(kPlayer, eUnit, eReligion);

	push	ebx
	push	ebp
	push	esi
	call	?GetBestCityFaithUnitPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4UnitTypes@@W4ReligionTypes@@@Z ; CvReligionAIHelpers::GetBestCityFaithUnitPurchase
	mov	edi, eax
	add	esp, 12					; 0000000cH

; 523  : 					if (pCity)

	test	edi, edi
	je	$LN176@DoPlayerTu

; 524  : 					{
; 525  : 						pCity->Purchase(eUnit, NO_BUILDING, NO_PROJECT, YIELD_FAITH);

	push	5
	push	-1
	push	-1
	push	ebp
	mov	ecx, edi
	call	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::Purchase

; 526  : 
; 527  : 						CvNotifications* pNotifications = kPlayer.GetNotifications();

	mov	ecx, esi
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	esi, eax

; 528  : 						if(pNotifications)

	test	esi, esi
	je	$LN178@DoPlayerTu

; 529  : 						{
; 530  : 							CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_AUTOMATIC_FAITH_PURCHASE", szItemName, pCity->getNameKey());

	mov	ecx, edi
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	mov	DWORD PTR $T249114[esp+176], eax
	lea	eax, DWORD PTR $T249114[esp+176]
	push	eax
	lea	ecx, DWORD PTR _szItemName$[esp+180]
	push	ecx
	lea	edx, DWORD PTR _strBuffer$225044[esp+184]
	push	OFFSET $SG225054
	push	edx
	call	??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z ; GetLocalizedText<CvString,char const *>

; 531  : 							CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_AUTOMATIC_FAITH_PURCHASE");

	lea	eax, DWORD PTR _strSummary$225055[esp+192]
	push	OFFSET $SG225057
	mov	bl, 9
	push	eax
	mov	BYTE PTR __$EHRec$[esp+208], bl
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 24					; 00000018H

; 532  : 							pNotifications->Add(NOTIFICATION_CAN_BUILD_MISSIONARY, strBuffer, strSummary, pCity->getX(), pCity->getY(), -1);

	mov	ebp, DWORD PTR [edi+108]
	mov	edi, DWORD PTR [edi+96]
	lea	ecx, DWORD PTR _strSummary$225055[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], 10		; 0000000aH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	-1
	push	-1
	push	ebp
	push	edi

; 533  : 						}
; 534  : 					}
; 535  : 					else

	jmp	$LN185@DoPlayerTu
$LN10@DoPlayerTu:

; 536  : 					{
; 537  : 						bSelectionStillValid = false;
; 538  : 					}
; 539  : 				}
; 540  : 			}
; 541  : 		}
; 542  : 		break;
; 543  : 	case FAITH_PURCHASE_BUILDING:
; 544  : 		{
; 545  : 			BuildingTypes eBuilding = (BuildingTypes)kPlayer.GetFaithPurchaseIndex();

	mov	ecx, esi
	call	?GetFaithPurchaseIndex@CvPlayer@@QBEHXZ	; CvPlayer::GetFaithPurchaseIndex
	mov	edi, eax

; 546  : 			CvBuildingEntry *pkBuilding = GC.getBuildingInfo(eBuilding);

	push	edi
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getBuildingInfo@CvGlobals@@QAEPAVCvBuildingEntry@@W4BuildingTypes@@@Z ; CvGlobals::getBuildingInfo

; 547  : 			if (pkBuilding)

	test	eax, eax
	je	SHORT $LN137@DoPlayerTu

; 548  : 			{
; 549  : 				szItemName = pkBuilding->GetDescriptionKey();

	lea	ecx, DWORD PTR [eax+64]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	lea	ecx, DWORD PTR _szItemName$[esp+176]
	test	eax, eax
	je	SHORT $LN138@DoPlayerTu
	push	eax
	call	DWORD PTR __imp_?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
	jmp	SHORT $LN137@DoPlayerTu
$LN138@DoPlayerTu:
	call	DWORD PTR __imp_?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
$LN137@DoPlayerTu:

; 550  : 			}
; 551  : 
; 552  : 			if (!kPlayer.IsCanPurchaseAnyCity(false, false, NO_UNIT, eBuilding, YIELD_FAITH))

	push	5
	push	edi
	push	-1
	push	0
	push	0
	mov	ecx, esi
	call	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z ; CvPlayer::IsCanPurchaseAnyCity
	test	al, al

; 553  : 			{
; 554  : 				bSelectionStillValid = false;
; 555  : 			}
; 556  : 			else

	je	$LN176@DoPlayerTu

; 557  : 			{
; 558  : 				if (kPlayer.IsCanPurchaseAnyCity(true, true /* Check faith balance */, NO_UNIT, eBuilding, YIELD_FAITH))

	push	5
	push	edi
	push	-1
	push	1
	push	1
	mov	ecx, esi
	call	?IsCanPurchaseAnyCity@CvPlayer@@QAE_N_N0W4UnitTypes@@W4BuildingTypes@@W4YieldTypes@@@Z ; CvPlayer::IsCanPurchaseAnyCity
	test	al, al
	je	$LN178@DoPlayerTu

; 559  : 				{
; 560  : 					CvCity *pCity = CvReligionAIHelpers::GetBestCityFaithBuildingPurchase(kPlayer, eBuilding, eReligion);

	push	ebx
	push	edi
	push	esi
	call	?GetBestCityFaithBuildingPurchase@CvReligionAIHelpers@@YAPAVCvCity@@AAVCvPlayer@@W4BuildingTypes@@W4ReligionTypes@@@Z ; CvReligionAIHelpers::GetBestCityFaithBuildingPurchase
	mov	ebp, eax
	add	esp, 12					; 0000000cH

; 561  : 					if (pCity)

	test	ebp, ebp
	je	$LN176@DoPlayerTu

; 562  : 					{
; 563  : 						pCity->Purchase(NO_UNIT, eBuilding, NO_PROJECT, YIELD_FAITH);

	push	5
	push	-1
	push	edi
	push	-1
	mov	ecx, ebp
	call	?Purchase@CvCity@@QAEXW4UnitTypes@@W4BuildingTypes@@W4ProjectTypes@@W4YieldTypes@@@Z ; CvCity::Purchase

; 564  : 
; 565  : 						CvNotifications* pNotifications = kPlayer.GetNotifications();

	mov	ecx, esi
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	esi, eax

; 566  : 						if(pNotifications)

	test	esi, esi
	je	$LN178@DoPlayerTu

; 567  : 						{
; 568  : 							CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_AUTOMATIC_FAITH_PURCHASE", szItemName, pCity->getNameKey());

	mov	ecx, ebp
	call	?getNameKey@CvCity@@QBEPBDXZ		; CvCity::getNameKey
	lea	ecx, DWORD PTR $T249115[esp+176]
	push	ecx
	lea	edx, DWORD PTR _szItemName$[esp+180]
	push	edx
	mov	DWORD PTR $T249115[esp+184], eax
	lea	eax, DWORD PTR _strBuffer$225071[esp+184]
	push	OFFSET $SG225074
	push	eax
	call	??$GetLocalizedText@VCvString@@PBD@@YA?AVCvString@@PBDABV0@ABQBD@Z ; GetLocalizedText<CvString,char const *>

; 569  : 							CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_AUTOMATIC_FAITH_PURCHASE");

	lea	ecx, DWORD PTR _strSummary$225075[esp+192]
	push	OFFSET $SG225077
	mov	bl, 11					; 0000000bH
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+208], bl
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 24					; 00000018H

; 570  : 							pNotifications->Add(NOTIFICATION_CAN_BUILD_MISSIONARY, strBuffer, strSummary, -1, -1, -1);

	lea	ecx, DWORD PTR _strSummary$225075[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], 12		; 0000000cH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	-1
	push	-1
	push	-1
	push	-1
$LN185@DoPlayerTu:
	push	eax
	lea	ecx, DWORD PTR _strBuffer$225071[esp+196]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	-1487612968				; a754d3d8H
	mov	ecx, esi
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 571  : 						}

	lea	ecx, DWORD PTR _strSummary$225075[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strBuffer$225071[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], 6
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ

; 572  : 					}
; 573  : 					else

	jmp	$LN178@DoPlayerTu
$LN22@DoPlayerTu:

; 491  : 	{
; 492  : 	case FAITH_PURCHASE_SAVE_PROPHET:
; 493  : 		if (eReligion <= RELIGION_PANTHEON && GetNumReligionsStillToFound() <= 0)

	test	ebx, ebx
	jg	SHORT $LN21@DoPlayerTu
	mov	ecx, ebp
	call	?GetNumReligionsStillToFound@CvGameReligions@@QBEHXZ ; CvGameReligions::GetNumReligionsStillToFound
	test	eax, eax
	jg	SHORT $LN21@DoPlayerTu

; 494  : 		{
; 495  : 			szItemName = GetLocalizedText("TXT_KEY_RO_AUTO_FAITH_PROPHET");

	lea	edx, DWORD PTR $T249112[esp+176]
	push	OFFSET $SG225026
	push	edx
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _szItemName$[esp+180]
	mov	BYTE PTR __$EHRec$[esp+188], 7
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T249112[esp+176]

; 496  : 			bSelectionStillValid = false;

	jmp	SHORT $LN184@DoPlayerTu
$LN21@DoPlayerTu:

; 497  : 		}
; 498  : 		else if (kPlayer.GetCurrentEra() >= GC.getInfoTypeForString("ERA_INDUSTRIAL"))

	push	0
	push	OFFSET $SG225029
	mov	ecx, OFFSET ?gGlobals@@3VCvGlobals@@A	; gGlobals
	call	?getInfoTypeForString@CvGlobals@@QBEHPBD_N@Z ; CvGlobals::getInfoTypeForString
	mov	ecx, esi
	mov	edi, eax
	call	?GetCurrentEra@CvPlayer@@QBE?AW4EraTypes@@XZ ; CvPlayer::GetCurrentEra
	cmp	eax, edi
	jl	$LN178@DoPlayerTu

; 499  : 		{
; 500  : 			szItemName = GetLocalizedText("TXT_KEY_RO_AUTO_FAITH_PROPHET");

	lea	eax, DWORD PTR $T249113[esp+176]
	push	OFFSET $SG225031
	push	eax
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR _szItemName$[esp+180]
	mov	BYTE PTR __$EHRec$[esp+188], 8
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	lea	ecx, DWORD PTR $T249113[esp+176]
$LN184@DoPlayerTu:
	mov	BYTE PTR __$EHRec$[esp+184], 6
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN176@DoPlayerTu:

; 574  : 					{
; 575  : 						bSelectionStillValid = false;
; 576  : 					}
; 577  : 				}
; 578  : 			}
; 579  : 		}
; 580  : 		break;
; 581  : 	}
; 582  : 
; 583  : 	if (!bSelectionStillValid)
; 584  : 	{
; 585  : 		CvNotifications* pNotifications = kPlayer.GetNotifications();

	mov	ecx, esi
	call	?GetNotifications@CvPlayer@@QBEPAVCvNotifications@@XZ ; CvPlayer::GetNotifications
	mov	edi, eax

; 586  : 		if(pNotifications)

	test	edi, edi
	je	$LN1@DoPlayerTu

; 587  : 		{
; 588  : 			CvString strBuffer = GetLocalizedText("TXT_KEY_NOTIFICATION_NEED_NEW_AUTOMATIC_FAITH_SELECTION", szItemName);

	sub	esp, 28					; 0000001cH
	lea	edx, DWORD PTR _szItemName$[esp+204]
	mov	DWORD PTR $T249116[esp+204], esp
	mov	ecx, esp
	push	edx
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	lea	eax, DWORD PTR _strBuffer$225082[esp+204]
	push	OFFSET $SG225090
	push	eax
	call	??$GetLocalizedText@VCvString@@@@YA?AVCvString@@PBDV0@@Z ; GetLocalizedText<CvString>

; 589  : 			CvString strSummary = GetLocalizedText("TXT_KEY_NOTIFICATION_SUMMARY_NEED_NEW_AUTOMATIC_FAITH_SELECTION");

	lea	ecx, DWORD PTR _strSummary$225091[esp+212]
	push	OFFSET $SG225093
	mov	bl, 13					; 0000000dH
	push	ecx
	mov	BYTE PTR __$EHRec$[esp+228], bl
	call	?GetLocalizedText@@YA?AVCvString@@PBD@Z	; GetLocalizedText
	add	esp, 44					; 0000002cH

; 590  : 			pNotifications->Add(NOTIFICATION_AUTOMATIC_FAITH_PURCHASE_STOPPED, strBuffer, strSummary, -1, -1, -1);

	lea	ecx, DWORD PTR _strSummary$225091[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], 14		; 0000000eH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	-1
	push	-1
	push	-1
	push	-1
	push	eax
	lea	ecx, DWORD PTR _strBuffer$225082[esp+196]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	-2062740077				; 850d1593H
	mov	ecx, edi
	call	?Add@CvNotifications@@QAEHW4NotificationTypes@@PBD1HHHH@Z ; CvNotifications::Add

; 591  : 		}

	lea	ecx, DWORD PTR _strSummary$225091[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], bl
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	lea	ecx, DWORD PTR _strBuffer$225082[esp+176]
	mov	BYTE PTR __$EHRec$[esp+184], 6
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@DoPlayerTu:

; 592  : 
; 593  : 		gDLL->SendFaithPurchase(kPlayer.GetID(), NO_AUTOMATIC_FAITH_PURCHASE, 0);

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+8596
	mov	esi, DWORD PTR [esi+44]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+116]
	push	0
	push	0
	push	esi
	call	eax
$LN178@DoPlayerTu:

; 594  : 	}
; 595  : }

	lea	ecx, DWORD PTR _szItemName$[esp+176]
	mov	DWORD PTR __$EHRec$[esp+184], -1
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[esp+176]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR fs:0, ecx
	pop	ebx
	add	esp, 160				; 000000a0H
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$0:
	lea	ecx, DWORD PTR _strBuffer$224977[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$1:
	lea	ecx, DWORD PTR _strSummary$224980[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$2:
	lea	ecx, DWORD PTR _strBuffer$224989[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$3:
	lea	ecx, DWORD PTR _strSummary$224992[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$4:
	lea	ecx, DWORD PTR _strBuffer$225009[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$5:
	lea	ecx, DWORD PTR _strSummary$225012[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$6:
	lea	ecx, DWORD PTR _szItemName$[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$9:
	lea	ecx, DWORD PTR _strBuffer$225044[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$10:
	lea	ecx, DWORD PTR _strSummary$225055[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$11:
	lea	ecx, DWORD PTR _strBuffer$225071[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$12:
	lea	ecx, DWORD PTR _strSummary$225075[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$7:
	lea	ecx, DWORD PTR $T249112[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$8:
	lea	ecx, DWORD PTR $T249113[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$14:
	lea	ecx, DWORD PTR _strBuffer$225082[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__unwindfunclet$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z$15:
	lea	ecx, DWORD PTR _strSummary$225091[ebp]
	jmp	??1CvString@@QAE@XZ			; CvString::~CvString
__ehhandler$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z:
	mov	eax, OFFSET __ehfuncinfo$?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoPlayerTurn@CvGameReligions@@QAEXAAVCvPlayer@@@Z ENDP	; CvGameReligions::DoPlayerTurn
END
