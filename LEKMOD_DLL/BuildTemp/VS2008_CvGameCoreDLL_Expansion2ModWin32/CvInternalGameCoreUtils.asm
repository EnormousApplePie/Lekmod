; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Documents\GitHub\Lekmod\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvInternalGameCoreUtils.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?isWorldWonderClass@@YA_NABVCvBuildingClassInfo@@@Z ; isWorldWonderClass
EXTRN	?getMaxGlobalInstances@CvBuildingClassInfo@@QBEHXZ:PROC ; CvBuildingClassInfo::getMaxGlobalInstances
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvinternalgamecoreutils.cpp
;	COMDAT ?isWorldWonderClass@@YA_NABVCvBuildingClassInfo@@@Z
_TEXT	SEGMENT
_kBuildingClass$ = 8					; size = 4
?isWorldWonderClass@@YA_NABVCvBuildingClassInfo@@@Z PROC ; isWorldWonderClass, COMDAT

; 15   : 	return kBuildingClass.getMaxGlobalInstances() != -1;;

	mov	ecx, DWORD PTR _kBuildingClass$[esp-4]
	call	?getMaxGlobalInstances@CvBuildingClassInfo@@QBEHXZ ; CvBuildingClassInfo::getMaxGlobalInstances
	xor	ecx, ecx
	cmp	eax, -1
	setne	cl
	mov	al, cl

; 16   : }

	ret	0
?isWorldWonderClass@@YA_NABVCvBuildingClassInfo@@@Z ENDP ; isWorldWonderClass
_TEXT	ENDS
PUBLIC	?isTeamWonderClass@@YA_NABVCvBuildingClassInfo@@@Z ; isTeamWonderClass
EXTRN	?getMaxTeamInstances@CvBuildingClassInfo@@QBEHXZ:PROC ; CvBuildingClassInfo::getMaxTeamInstances
; Function compile flags: /Ogtpy
;	COMDAT ?isTeamWonderClass@@YA_NABVCvBuildingClassInfo@@@Z
_TEXT	SEGMENT
_kBuildingClass$ = 8					; size = 4
?isTeamWonderClass@@YA_NABVCvBuildingClassInfo@@@Z PROC	; isTeamWonderClass, COMDAT

; 20   : 	return kBuildingClass.getMaxTeamInstances() != -1;

	mov	ecx, DWORD PTR _kBuildingClass$[esp-4]
	call	?getMaxTeamInstances@CvBuildingClassInfo@@QBEHXZ ; CvBuildingClassInfo::getMaxTeamInstances
	xor	ecx, ecx
	cmp	eax, -1
	setne	cl
	mov	al, cl

; 21   : }

	ret	0
?isTeamWonderClass@@YA_NABVCvBuildingClassInfo@@@Z ENDP	; isTeamWonderClass
_TEXT	ENDS
PUBLIC	?isNationalWonderClass@@YA_NABVCvBuildingClassInfo@@@Z ; isNationalWonderClass
EXTRN	?getMaxPlayerInstances@CvBuildingClassInfo@@QBEHXZ:PROC ; CvBuildingClassInfo::getMaxPlayerInstances
; Function compile flags: /Ogtpy
;	COMDAT ?isNationalWonderClass@@YA_NABVCvBuildingClassInfo@@@Z
_TEXT	SEGMENT
_kBuildingClass$ = 8					; size = 4
?isNationalWonderClass@@YA_NABVCvBuildingClassInfo@@@Z PROC ; isNationalWonderClass, COMDAT

; 25   : 	return kBuildingClass.getMaxPlayerInstances() != -1;

	mov	ecx, DWORD PTR _kBuildingClass$[esp-4]
	call	?getMaxPlayerInstances@CvBuildingClassInfo@@QBEHXZ ; CvBuildingClassInfo::getMaxPlayerInstances
	xor	ecx, ecx
	cmp	eax, -1
	setne	cl
	mov	al, cl

; 26   : }

	ret	0
?isNationalWonderClass@@YA_NABVCvBuildingClassInfo@@@Z ENDP ; isNationalWonderClass
_TEXT	ENDS
PUBLIC	?isLimitedWonderClass@@YA_NABVCvBuildingClassInfo@@@Z ; isLimitedWonderClass
; Function compile flags: /Ogtpy
;	COMDAT ?isLimitedWonderClass@@YA_NABVCvBuildingClassInfo@@@Z
_TEXT	SEGMENT
_kBuildingClass$ = 8					; size = 4
?isLimitedWonderClass@@YA_NABVCvBuildingClassInfo@@@Z PROC ; isLimitedWonderClass, COMDAT

; 29   : {

	push	esi

; 30   : 	return (isWorldWonderClass(kBuildingClass) || isTeamWonderClass(kBuildingClass) || isNationalWonderClass(kBuildingClass));

	mov	esi, DWORD PTR _kBuildingClass$[esp]
	mov	ecx, esi
	call	?getMaxGlobalInstances@CvBuildingClassInfo@@QBEHXZ ; CvBuildingClassInfo::getMaxGlobalInstances
	cmp	eax, -1
	jne	SHORT $LN3@isLimitedW
	mov	ecx, esi
	call	?getMaxTeamInstances@CvBuildingClassInfo@@QBEHXZ ; CvBuildingClassInfo::getMaxTeamInstances
	cmp	eax, -1
	jne	SHORT $LN3@isLimitedW
	mov	ecx, esi
	call	?getMaxPlayerInstances@CvBuildingClassInfo@@QBEHXZ ; CvBuildingClassInfo::getMaxPlayerInstances
	cmp	eax, -1
	jne	SHORT $LN3@isLimitedW
	xor	eax, eax
	pop	esi

; 31   : }

	ret	0
$LN3@isLimitedW:

; 30   : 	return (isWorldWonderClass(kBuildingClass) || isTeamWonderClass(kBuildingClass) || isNationalWonderClass(kBuildingClass));

	mov	eax, 1
	pop	esi

; 31   : }

	ret	0
?isLimitedWonderClass@@YA_NABVCvBuildingClassInfo@@@Z ENDP ; isLimitedWonderClass
_TEXT	ENDS
PUBLIC	?limitedWonderClassLimit@@YAHABVCvBuildingClassInfo@@@Z ; limitedWonderClassLimit
; Function compile flags: /Ogtpy
;	COMDAT ?limitedWonderClassLimit@@YAHABVCvBuildingClassInfo@@@Z
_TEXT	SEGMENT
_kBuildingClass$ = 8					; size = 4
?limitedWonderClassLimit@@YAHABVCvBuildingClassInfo@@@Z PROC ; limitedWonderClassLimit, COMDAT

; 34   : {

	push	ebx
	push	esi
	push	edi

; 35   : 	int iCount = 0;
; 36   : 	bool bIsLimited = false;
; 37   : 
; 38   : 	int iMax = -1;
; 39   : 	iMax = kBuildingClass.getMaxGlobalInstances();

	mov	edi, DWORD PTR _kBuildingClass$[esp+8]
	mov	ecx, edi
	xor	esi, esi
	xor	bl, bl
	call	?getMaxGlobalInstances@CvBuildingClassInfo@@QBEHXZ ; CvBuildingClassInfo::getMaxGlobalInstances

; 40   : 	if(iMax != -1)

	cmp	eax, -1
	je	SHORT $LN3@limitedWon

; 41   : 	{
; 42   : 		iCount += iMax;

	mov	esi, eax

; 43   : 		bIsLimited = true;

	mov	bl, 1
$LN3@limitedWon:

; 44   : 	}
; 45   : 
; 46   : 	iMax = kBuildingClass.getMaxTeamInstances();

	mov	ecx, edi
	call	?getMaxTeamInstances@CvBuildingClassInfo@@QBEHXZ ; CvBuildingClassInfo::getMaxTeamInstances

; 47   : 	if(iMax != -1)

	cmp	eax, -1
	je	SHORT $LN2@limitedWon

; 48   : 	{
; 49   : 		iCount += iMax;

	add	esi, eax

; 50   : 		bIsLimited = true;

	mov	bl, 1
$LN2@limitedWon:

; 51   : 	}
; 52   : 
; 53   : 	iMax = kBuildingClass.getMaxPlayerInstances();

	mov	ecx, edi
	call	?getMaxPlayerInstances@CvBuildingClassInfo@@QBEHXZ ; CvBuildingClassInfo::getMaxPlayerInstances

; 54   : 	if(iMax != -1)

	cmp	eax, -1
	je	SHORT $LN1@limitedWon

; 55   : 	{
; 56   : 		iCount += iMax;

	add	esi, eax
	pop	edi

; 57   : 		bIsLimited = true;
; 58   : 	}
; 59   : 
; 60   : 	return bIsLimited ? iCount : -1;

	mov	eax, esi
	pop	esi
	pop	ebx

; 61   : }

	ret	0
$LN1@limitedWon:

; 57   : 		bIsLimited = true;
; 58   : 	}
; 59   : 
; 60   : 	return bIsLimited ? iCount : -1;

	test	bl, bl
	je	SHORT $LN6@limitedWon
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx

; 61   : }

	ret	0
$LN6@limitedWon:
	pop	edi
	pop	esi

; 57   : 		bIsLimited = true;
; 58   : 	}
; 59   : 
; 60   : 	return bIsLimited ? iCount : -1;

	or	eax, -1
	pop	ebx

; 61   : }

	ret	0
?limitedWonderClassLimit@@YAHABVCvBuildingClassInfo@@@Z ENDP ; limitedWonderClassLimit
_TEXT	ENDS
PUBLIC	??$max@H@std@@YAABHABH0@Z			; std::max<int>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??$max@H@std@@YAABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YAABHABH0@Z PROC				; std::max<int>, COMDAT

; 3384 : 	return (_DEBUG_LT(_Left, _Right) ? _Right : _Left);

	mov	eax, DWORD PTR __Left$[esp-4]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Right$[esp-4]
	cmp	edx, DWORD PTR [ecx]
	jge	SHORT $LN4@max
	mov	eax, ecx
$LN4@max:

; 3385 : 	}

	ret	0
??$max@H@std@@YAABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
PUBLIC	?getMap@CvGlobals@@QAEAAVCvMap@@XZ		; CvGlobals::getMap
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvglobals.h
;	COMDAT ?getMap@CvGlobals@@QAEAAVCvMap@@XZ
_TEXT	SEGMENT
?getMap@CvGlobals@@QAEAAVCvMap@@XZ PROC			; CvGlobals::getMap, COMDAT
; _this$ = ecx

; 175  : 		return *m_map;    // inlined for perf reasons, do not use outside of dll

	mov	eax, DWORD PTR [ecx+52]

; 176  : 	}

	ret	0
?getMap@CvGlobals@@QAEAAVCvMap@@XZ ENDP			; CvGlobals::getMap
_TEXT	ENDS
PUBLIC	?getWorldSizeMaxConscript@@YAHABVCvPolicyEntry@@@Z ; getWorldSizeMaxConscript
EXTRN	?getMaxConscriptModifier@CvWorldInfo@@QBEHXZ:PROC ; CvWorldInfo::getMaxConscriptModifier
EXTRN	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ:PROC	; CvMap::getWorldInfo
EXTRN	?gGlobals@@3VCvGlobals@@A:BYTE			; gGlobals
EXTRN	?GetMaxConscript@CvPolicyEntry@@QBEHXZ:PROC	; CvPolicyEntry::GetMaxConscript
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvinternalgamecoreutils.cpp
;	COMDAT ?getWorldSizeMaxConscript@@YAHABVCvPolicyEntry@@@Z
_TEXT	SEGMENT
$T217735 = -8						; size = 4
$T217736 = -4						; size = 4
_kPolicy$ = 8						; size = 4
?getWorldSizeMaxConscript@@YAHABVCvPolicyEntry@@@Z PROC	; getWorldSizeMaxConscript, COMDAT

; 64   : {

	sub	esp, 8

; 65   : 	int iMaxConscript = kPolicy.GetMaxConscript();

	mov	ecx, DWORD PTR _kPolicy$[esp+4]
	push	esi
	call	?GetMaxConscript@CvPolicyEntry@@QBEHXZ	; CvPolicyEntry::GetMaxConscript

; 66   : 
; 67   : 	iMaxConscript *= std::max(0, (GC.getMap().getWorldInfo().getMaxConscriptModifier() + 100));

	mov	ecx, DWORD PTR ?gGlobals@@3VCvGlobals@@A+52
	mov	esi, eax
	call	?getWorldInfo@CvMap@@QBEABVCvWorldInfo@@XZ ; CvMap::getWorldInfo
	mov	ecx, eax
	call	?getMaxConscriptModifier@CvWorldInfo@@QBEHXZ ; CvWorldInfo::getMaxConscriptModifier
	add	eax, 100				; 00000064H
	mov	DWORD PTR $T217735[esp+12], eax
	test	eax, eax
	mov	DWORD PTR $T217736[esp+12], 0
	lea	eax, DWORD PTR $T217735[esp+12]
	jg	SHORT $LN8@getWorldSi
	lea	eax, DWORD PTR $T217736[esp+12]
$LN8@getWorldSi:
	mov	ecx, DWORD PTR [eax]
	imul	ecx, esi

; 68   : 	iMaxConscript /= 100;

	mov	eax, 1374389535				; 51eb851fH
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	pop	esi

; 69   : 
; 70   : 	return iMaxConscript;
; 71   : }

	add	esp, 8
	ret	0
?getWorldSizeMaxConscript@@YAHABVCvPolicyEntry@@@Z ENDP	; getWorldSizeMaxConscript
_TEXT	ENDS
END
