; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Desktop\Cleanup (v1)\Lekmod Files\Lekmod DLL versions\v30\LEKMOD_DLL\CvGameCoreDLL_Expansion2\CvGoodyHuts.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
_BSS	SEGMENT
?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA DD 01H DUP (?) ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
_BSS	ENDS
PUBLIC	?DoPlayerReceivedGoody@CvGoodyHuts@@SAXW4PlayerTypes@@W4GoodyTypes@@@Z ; CvGoodyHuts::DoPlayerReceivedGoody
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\cvgamecoredll_expansion2\cvgoodyhuts.cpp
;	COMDAT ?DoPlayerReceivedGoody@CvGoodyHuts@@SAXW4PlayerTypes@@W4GoodyTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
_eGoody$ = 12						; size = 4
?DoPlayerReceivedGoody@CvGoodyHuts@@SAXW4PlayerTypes@@W4GoodyTypes@@@Z PROC ; CvGoodyHuts::DoPlayerReceivedGoody, COMDAT

; 19   : 	FAssert(ePlayer >= 0);
; 20   : 	FAssert(ePlayer < MAX_MAJOR_CIVS);
; 21   : 	FAssert(eGoody >= 0);
; 22   : 	//	FAssert(eGoody < DB.count("GoodyHuts"));
; 23   : 
; 24   : 	// Push elements up in the array so that we free up element 0
; 25   : 	for (int iGoodySlotLoop = 0; iGoodySlotLoop < NUM_GOODIES_REMEMBERED-1; iGoodySlotLoop++)
; 26   : 	{
; 27   : 		m_aaiPlayerGoodyHutResults[ePlayer][iGoodySlotLoop+1] = m_aaiPlayerGoodyHutResults[ePlayer][iGoodySlotLoop];

	mov	eax, DWORD PTR _ePlayer$[esp-4]
	mov	ecx, DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [ecx+4], edx
	mov	ecx, DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx+8], edx
	mov	ecx, DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	mov	ecx, DWORD PTR [ecx+eax*4]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [ecx+12], edx

; 28   : 	}
; 29   : 
; 30   : 	// Most recent Goody gets slot 0
; 31   : 	m_aaiPlayerGoodyHutResults[ePlayer][0] = eGoody;

	mov	ecx, DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _eGoody$[esp-4]
	mov	DWORD PTR [edx], eax

; 32   : }

	ret	0
?DoPlayerReceivedGoody@CvGoodyHuts@@SAXW4PlayerTypes@@W4GoodyTypes@@@Z ENDP ; CvGoodyHuts::DoPlayerReceivedGoody
_TEXT	ENDS
PUBLIC	?IsHasPlayerReceivedGoodyLately@CvGoodyHuts@@SA_NW4PlayerTypes@@W4GoodyTypes@@@Z ; CvGoodyHuts::IsHasPlayerReceivedGoodyLately
; Function compile flags: /Ogtpy
;	COMDAT ?IsHasPlayerReceivedGoodyLately@CvGoodyHuts@@SA_NW4PlayerTypes@@W4GoodyTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
_eGoody$ = 12						; size = 4
?IsHasPlayerReceivedGoodyLately@CvGoodyHuts@@SA_NW4PlayerTypes@@W4GoodyTypes@@@Z PROC ; CvGoodyHuts::IsHasPlayerReceivedGoodyLately, COMDAT

; 50   : 	FAssert(ePlayer >= 0);
; 51   : 	FAssert(ePlayer < MAX_MAJOR_CIVS);
; 52   : 	FAssert(eGoody >= 0);
; 53   : 	//	FAssert(eGoody < DB.count("GoodyHuts"));
; 54   : 
; 55   : 	// Look at all of our Goody slots and see if the requested Goody matches anything
; 56   : 	for (int iGoodySlotLoop = 0; iGoodySlotLoop < NUM_GOODIES_REMEMBERED; iGoodySlotLoop++)

	mov	edx, DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	mov	ecx, DWORD PTR _ePlayer$[esp-4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR _eGoody$[esp-4]
	xor	eax, eax
$LL4@IsHasPlaye:

; 57   : 	{
; 58   : 		if (m_aaiPlayerGoodyHutResults[ePlayer][iGoodySlotLoop] == eGoody)

	cmp	DWORD PTR [ecx], edx
	je	SHORT $LN8@IsHasPlaye
	inc	eax
	add	ecx, 4
	cmp	eax, 4
	jl	SHORT $LL4@IsHasPlaye

; 61   : 		}
; 62   : 	}
; 63   : 
; 64   : 	return false;

	xor	al, al

; 65   : }

	ret	0
$LN8@IsHasPlaye:

; 59   : 		{
; 60   : 			return true;

	mov	al, 1

; 65   : }

	ret	0
?IsHasPlayerReceivedGoodyLately@CvGoodyHuts@@SA_NW4PlayerTypes@@W4GoodyTypes@@@Z ENDP ; CvGoodyHuts::IsHasPlayerReceivedGoodyLately
_TEXT	ENDS
PUBLIC	?Reset@CvGoodyHuts@@SAXXZ			; CvGoodyHuts::Reset
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
; Function compile flags: /Ogtpy
;	COMDAT ?Reset@CvGoodyHuts@@SAXXZ
_TEXT	SEGMENT
?Reset@CvGoodyHuts@@SAXXZ PROC				; CvGoodyHuts::Reset, COMDAT

; 71   : 	int iI, iJ;
; 72   : 
; 73   : 	// Allocate memory
; 74   : 	if (m_aaiPlayerGoodyHutResults == NULL)

	cmp	DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA, 0 ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	jne	SHORT $LN7@Reset
	push	esi

; 75   : 	{
; 76   : 		m_aaiPlayerGoodyHutResults = FNEW(int*[MAX_MAJOR_CIVS], c_eCiv5GameplayDLL, 0);

	push	88					; 00000058H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA, eax ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	xor	esi, esi
	npad	5
$LL9@Reset:

; 77   : 		for (iI = 0; iI < MAX_MAJOR_CIVS; iI++)
; 78   : 		{
; 79   : 			m_aaiPlayerGoodyHutResults[iI] = FNEW(int[NUM_GOODIES_REMEMBERED], c_eCiv5GameplayDLL, 0);

	push	16					; 00000010H
	call	??_U@YAPAXI@Z				; operator new[]
	mov	ecx, DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	mov	DWORD PTR [esi+ecx], eax
	add	esi, 4
	add	esp, 4
	cmp	esi, 88					; 00000058H
	jl	SHORT $LL9@Reset
	pop	esi
$LN7@Reset:

; 80   : 		}
; 81   : 	}
; 82   : 
; 83   : 	// Default values
; 84   : 	for (iI = 0; iI < MAX_MAJOR_CIVS; iI++)

	xor	eax, eax
	or	ecx, -1
$LL23@Reset:

; 85   : 	{
; 86   : 		for (iJ = 0; iJ < NUM_GOODIES_REMEMBERED; iJ++)
; 87   : 		{
; 88   : 			m_aaiPlayerGoodyHutResults[iI][iJ] = -1;

	mov	edx, DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	mov	edx, DWORD PTR [eax+edx]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	mov	edx, DWORD PTR [eax+edx]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	mov	edx, DWORD PTR [eax+edx]
	mov	DWORD PTR [edx+8], ecx
	mov	edx, DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	mov	edx, DWORD PTR [eax+edx]
	add	eax, 4
	cmp	eax, 88					; 00000058H
	mov	DWORD PTR [edx+12], ecx
	jl	SHORT $LL23@Reset

; 89   : 		}
; 90   : 	}
; 91   : }

	ret	0
?Reset@CvGoodyHuts@@SAXXZ ENDP				; CvGoodyHuts::Reset
_TEXT	ENDS
PUBLIC	??0?$ArrayWrapper@H@@QAE@HPAH@Z			; ArrayWrapper<int>::ArrayWrapper<int>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??0?$ArrayWrapper@H@@QAE@HPAH@Z
_TEXT	SEGMENT
_count$ = 8						; size = 4
_values$ = 12						; size = 4
??0?$ArrayWrapper@H@@QAE@HPAH@Z PROC			; ArrayWrapper<int>::ArrayWrapper<int>, COMDAT
; _this$ = ecx

; 378  : 		: m_values(values), m_count(count) {}

	mov	edx, DWORD PTR _count$[esp-4]
	mov	eax, ecx
	mov	ecx, DWORD PTR _values$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	ret	8
??0?$ArrayWrapper@H@@QAE@HPAH@Z ENDP			; ArrayWrapper<int>::ArrayWrapper<int>
_TEXT	ENDS
PUBLIC	??$SAFE_DELETE_ARRAY@H@@YAXAAPAH@Z		; SAFE_DELETE_ARRAY<int>
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\fireplace\include\fireworks\ffiretypes.h
;	COMDAT ??$SAFE_DELETE_ARRAY@H@@YAXAAPAH@Z
_TEXT	SEGMENT
_pkInstanceArray$ = 8					; size = 4
??$SAFE_DELETE_ARRAY@H@@YAXAAPAH@Z PROC			; SAFE_DELETE_ARRAY<int>, COMDAT

; 311  : {

	push	esi

; 312  : 	delete[] pkInstanceArray;

	mov	esi, DWORD PTR _pkInstanceArray$[esp]
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 313  : 	pkInstanceArray = NULL;

	mov	DWORD PTR [esi], 0
	pop	esi

; 314  : };

	ret	0
??$SAFE_DELETE_ARRAY@H@@YAXAAPAH@Z ENDP			; SAFE_DELETE_ARRAY<int>
_TEXT	ENDS
PUBLIC	??$SAFE_DELETE_ARRAY@PAH@@YAXAAPAPAH@Z		; SAFE_DELETE_ARRAY<int *>
; Function compile flags: /Ogtpy
;	COMDAT ??$SAFE_DELETE_ARRAY@PAH@@YAXAAPAPAH@Z
_TEXT	SEGMENT
_pkInstanceArray$ = 8					; size = 4
??$SAFE_DELETE_ARRAY@PAH@@YAXAAPAPAH@Z PROC		; SAFE_DELETE_ARRAY<int *>, COMDAT

; 311  : {

	push	esi

; 312  : 	delete[] pkInstanceArray;

	mov	esi, DWORD PTR _pkInstanceArray$[esp]
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 313  : 	pkInstanceArray = NULL;

	mov	DWORD PTR [esi], 0
	pop	esi

; 314  : };

	ret	0
??$SAFE_DELETE_ARRAY@PAH@@YAXAAPAPAH@Z ENDP		; SAFE_DELETE_ARRAY<int *>
_TEXT	ENDS
PUBLIC	?getArray@?$ArrayWrapper@H@@QAEPAHXZ		; ArrayWrapper<int>::getArray
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ?getArray@?$ArrayWrapper@H@@QAEPAHXZ
_TEXT	SEGMENT
?getArray@?$ArrayWrapper@H@@QAEPAHXZ PROC		; ArrayWrapper<int>::getArray, COMDAT
; _this$ = ecx

; 382  : 		return m_values;

	mov	eax, DWORD PTR [ecx]

; 383  : 	}

	ret	0
?getArray@?$ArrayWrapper@H@@QAEPAHXZ ENDP		; ArrayWrapper<int>::getArray
_TEXT	ENDS
PUBLIC	?getArray@?$ArrayWrapper@H@@QBEPBHXZ		; ArrayWrapper<int>::getArray
; Function compile flags: /Ogtpy
;	COMDAT ?getArray@?$ArrayWrapper@H@@QBEPBHXZ
_TEXT	SEGMENT
?getArray@?$ArrayWrapper@H@@QBEPBHXZ PROC		; ArrayWrapper<int>::getArray, COMDAT
; _this$ = ecx

; 386  : 		return m_values;

	mov	eax, DWORD PTR [ecx]

; 387  : 	}

	ret	0
?getArray@?$ArrayWrapper@H@@QBEPBHXZ ENDP		; ArrayWrapper<int>::getArray
_TEXT	ENDS
PUBLIC	?getCount@?$ArrayWrapper@H@@QBEHXZ		; ArrayWrapper<int>::getCount
; Function compile flags: /Ogtpy
;	COMDAT ?getCount@?$ArrayWrapper@H@@QBEHXZ
_TEXT	SEGMENT
?getCount@?$ArrayWrapper@H@@QBEHXZ PROC			; ArrayWrapper<int>::getCount, COMDAT
; _this$ = ecx

; 391  : 		return m_count;

	mov	eax, DWORD PTR [ecx+4]

; 392  : 	}

	ret	0
?getCount@?$ArrayWrapper@H@@QBEHXZ ENDP			; ArrayWrapper<int>::getCount
_TEXT	ENDS
PUBLIC	??$?6H@FDataStream@@QAEAAV0@ABH@Z		; FDataStream::operator<<<int>
EXTRN	?Write@FDataStream@@IAEXABH@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
;	COMDAT ??$?6H@FDataStream@@QAEAAV0@ABH@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6H@FDataStream@@QAEAAV0@ABH@Z PROC			; FDataStream::operator<<<int>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6H@FDataStream@@QAEAAV0@ABH@Z ENDP			; FDataStream::operator<<<int>
_TEXT	ENDS
PUBLIC	??$?5H@FDataStream@@QAEAAV0@AAH@Z		; FDataStream::operator>><int>
EXTRN	?Read@FDataStream@@IAEXAAH@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
;	COMDAT ??$?5H@FDataStream@@QAEAAV0@AAH@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5H@FDataStream@@QAEAAV0@AAH@Z PROC			; FDataStream::operator>><int>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5H@FDataStream@@QAEAAV0@AAH@Z ENDP			; FDataStream::operator>><int>
_TEXT	ENDS
PUBLIC	??$?5I@FDataStream@@QAEAAV0@AAI@Z		; FDataStream::operator>><unsigned int>
EXTRN	?Read@FDataStream@@IAEXAAI@Z:PROC		; FDataStream::Read
; Function compile flags: /Ogtpy
;	COMDAT ??$?5I@FDataStream@@QAEAAV0@AAI@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?5I@FDataStream@@QAEAAV0@AAI@Z PROC			; FDataStream::operator>><unsigned int>, COMDAT
; _this$ = ecx

; 260  : 	// If the compiler produces an error here complaining about 
; 261  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 262  : 	// it could not find a specialization for the type supplied
; 263  : 	// in scope. If a specialization exists, be sure to include
; 264  : 	// the header (FStlContainerSerialization.h, for example), 
; 265  : 	// if not, implement :
; 266  : 	// FDataStream & operator>>(FDataStream &, YourCustomType &)
; 267  : 	Read( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read

; 268  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 269  : }

	ret	4
??$?5I@FDataStream@@QAEAAV0@AAI@Z ENDP			; FDataStream::operator>><unsigned int>
_TEXT	ENDS
PUBLIC	??$?6I@FDataStream@@QAEAAV0@ABI@Z		; FDataStream::operator<<<unsigned int>
EXTRN	?Write@FDataStream@@IAEXABI@Z:PROC		; FDataStream::Write
; Function compile flags: /Ogtpy
;	COMDAT ??$?6I@FDataStream@@QAEAAV0@ABI@Z
_TEXT	SEGMENT
_kData$ = 8						; size = 4
??$?6I@FDataStream@@QAEAAV0@ABI@Z PROC			; FDataStream::operator<<<unsigned int>, COMDAT
; _this$ = ecx

; 246  : 	// If the compiler produces an error here complaining about 
; 247  : 	// YouMustImplementASerializeOperatorForThisTypeError then
; 248  : 	// it could not find a specialization for the type supplied
; 249  : 	// in scope. If a specialization exists, be sure to include
; 250  : 	// the header (FStlContainerSerialization.h, for example), 
; 251  : 	// if not, implement :
; 252  : 	// FDataStream & operator<<(FDataStream &, YourCustomType &)
; 253  : 	Write( kData );

	mov	eax, DWORD PTR _kData$[esp-4]
	push	esi
	push	eax
	mov	esi, ecx
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write

; 254  : 	return ( *this );

	mov	eax, esi
	pop	esi

; 255  : }

	ret	4
??$?6I@FDataStream@@QAEAAV0@ABI@Z ENDP			; FDataStream::operator<<<unsigned int>
_TEXT	ENDS
PUBLIC	?IsCanPlayerReceiveGoody@CvGoodyHuts@@SA_NW4PlayerTypes@@W4GoodyTypes@@@Z ; CvGoodyHuts::IsCanPlayerReceiveGoody
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\cvgamecoredll_expansion2\cvgoodyhuts.cpp
;	COMDAT ?IsCanPlayerReceiveGoody@CvGoodyHuts@@SA_NW4PlayerTypes@@W4GoodyTypes@@@Z
_TEXT	SEGMENT
_ePlayer$ = 8						; size = 4
_eGoody$ = 12						; size = 4
?IsCanPlayerReceiveGoody@CvGoodyHuts@@SA_NW4PlayerTypes@@W4GoodyTypes@@@Z PROC ; CvGoodyHuts::IsCanPlayerReceiveGoody, COMDAT

; 38   : 	if (IsHasPlayerReceivedGoodyLately(ePlayer, eGoody))

	mov	edx, DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	mov	ecx, DWORD PTR _ePlayer$[esp-4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	edx, DWORD PTR _eGoody$[esp-4]
	xor	eax, eax
$LL7@IsCanPlaye:
	cmp	DWORD PTR [ecx], edx
	je	SHORT $LN13@IsCanPlaye
	inc	eax
	add	ecx, 4
	cmp	eax, 4
	jl	SHORT $LL7@IsCanPlaye

; 41   : 	}
; 42   : 
; 43   : 	return true;

	mov	al, 1

; 44   : }

	ret	0
$LN13@IsCanPlaye:

; 39   : 	{
; 40   : 		return false;

	xor	al, al

; 44   : }

	ret	0
?IsCanPlayerReceiveGoody@CvGoodyHuts@@SA_NW4PlayerTypes@@W4GoodyTypes@@@Z ENDP ; CvGoodyHuts::IsCanPlayerReceiveGoody
_TEXT	ENDS
PUBLIC	?Uninit@CvGoodyHuts@@SAXXZ			; CvGoodyHuts::Uninit
; Function compile flags: /Ogtpy
;	COMDAT ?Uninit@CvGoodyHuts@@SAXXZ
_TEXT	SEGMENT
?Uninit@CvGoodyHuts@@SAXXZ PROC				; CvGoodyHuts::Uninit, COMDAT

; 97   : 	if (m_aaiPlayerGoodyHutResults != NULL)

	cmp	DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA, 0 ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	je	SHORT $LN9@Uninit
	push	esi
	push	edi

; 98   : 	{
; 99   : 		for (int iI = 0; iI < MAX_MAJOR_CIVS; iI++)

	xor	edi, edi
	npad	3
$LL13@Uninit:

; 100  : 		{
; 101  : 			SAFE_DELETE_ARRAY(m_aaiPlayerGoodyHutResults[iI]);

	mov	eax, DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	mov	ecx, DWORD PTR [edi+eax]
	lea	esi, DWORD PTR [edi+eax]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	edi, 4
	add	esp, 4
	cmp	edi, 88					; 00000058H
	mov	DWORD PTR [esi], 0
	jl	SHORT $LL13@Uninit

; 102  : 		}
; 103  : 		SAFE_DELETE_ARRAY(m_aaiPlayerGoodyHutResults);

	mov	edx, DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
	pop	edi
	mov	DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA, 0 ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	pop	esi
$LN9@Uninit:

; 104  : 	}
; 105  : }

	ret	0
?Uninit@CvGoodyHuts@@SAXXZ ENDP				; CvGoodyHuts::Uninit
_TEXT	ENDS
PUBLIC	??$?5H@@YAAAVFDataStream@@AAV0@AAV?$ArrayWrapper@H@@@Z ; operator>><int>
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\fireplace\include\fireworks\fdatastream.h
;	COMDAT ??$?5H@@YAAAVFDataStream@@AAV0@AAV?$ArrayWrapper@H@@@Z
_TEXT	SEGMENT
_loadFrom$ = 8						; size = 4
_v$ = 12						; size = 4
??$?5H@@YAAAVFDataStream@@AAV0@AAV?$ArrayWrapper@H@@@Z PROC ; operator>><int>, COMDAT

; 516  : 	int i = 0;
; 517  : 	int count = v.getCount();

	mov	eax, DWORD PTR _v$[esp-4]
	push	esi

; 518  : 	ValueType * values = v.getArray();

	mov	esi, DWORD PTR [eax]
	push	edi
	mov	edi, DWORD PTR [eax+4]

; 519  : 	for(i = 0; i < count; ++i)

	test	edi, edi
	jle	SHORT $LN14@operator
	push	ebx
	mov	ebx, DWORD PTR _loadFrom$[esp+8]
$LL3@operator:

; 520  : 	{
; 521  : 		loadFrom >> values[i];

	push	esi
	mov	ecx, ebx
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	esi, 4
	sub	edi, 1
	jne	SHORT $LL3@operator

; 522  : 	}
; 523  : 	return loadFrom;

	mov	eax, ebx
	pop	ebx
	pop	edi
	pop	esi

; 524  : }

	ret	0
$LN14@operator:

; 522  : 	}
; 523  : 	return loadFrom;

	mov	eax, DWORD PTR _loadFrom$[esp+4]
	pop	edi
	pop	esi

; 524  : }

	ret	0
??$?5H@@YAAAVFDataStream@@AAV0@AAV?$ArrayWrapper@H@@@Z ENDP ; operator>><int>
_TEXT	ENDS
PUBLIC	??$?6H@@YAAAVFDataStream@@AAV0@ABV?$ArrayWrapper@H@@@Z ; operator<<<int>
; Function compile flags: /Ogtpy
;	COMDAT ??$?6H@@YAAAVFDataStream@@AAV0@ABV?$ArrayWrapper@H@@@Z
_TEXT	SEGMENT
_saveTo$ = 8						; size = 4
_v$ = 12						; size = 4
??$?6H@@YAAAVFDataStream@@AAV0@ABV?$ArrayWrapper@H@@@Z PROC ; operator<<<int>, COMDAT

; 503  : 	int i = 0;
; 504  : 	int count = v.getCount();

	mov	eax, DWORD PTR _v$[esp-4]
	push	esi

; 505  : 	const ValueType * values = v.getArray();

	mov	esi, DWORD PTR [eax]
	push	edi
	mov	edi, DWORD PTR [eax+4]

; 506  : 	for(i = 0; i < count; ++i)

	test	edi, edi
	jle	SHORT $LN14@operator@2
	push	ebx
	mov	ebx, DWORD PTR _saveTo$[esp+8]
$LL3@operator@2:

; 507  : 	{
; 508  : 		saveTo << values[i];

	push	esi
	mov	ecx, ebx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	esi, 4
	sub	edi, 1
	jne	SHORT $LL3@operator@2

; 509  : 	}
; 510  : 	return saveTo;

	mov	eax, ebx
	pop	ebx
	pop	edi
	pop	esi

; 511  : }

	ret	0
$LN14@operator@2:

; 509  : 	}
; 510  : 	return saveTo;

	mov	eax, DWORD PTR _saveTo$[esp+4]
	pop	edi
	pop	esi

; 511  : }

	ret	0
??$?6H@@YAAAVFDataStream@@AAV0@ABV?$ArrayWrapper@H@@@Z ENDP ; operator<<<int>
_TEXT	ENDS
PUBLIC	?Read@CvGoodyHuts@@SAXAAVFDataStream@@I@Z	; CvGoodyHuts::Read
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\desktop\cleanup (v1)\lekmod files\lekmod dll versions\v30\lekmod_dll\cvgamecoredll_expansion2\cvgoodyhuts.cpp
;	COMDAT ?Read@CvGoodyHuts@@SAXAAVFDataStream@@I@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
_kStream$ = 8						; size = 4
_uiParentVersion$ = 12					; size = 4
?Read@CvGoodyHuts@@SAXAAVFDataStream@@I@Z PROC		; CvGoodyHuts::Read, COMDAT

; 113  : {

	push	ecx
	push	ebx
	push	ebp
	push	esi
	push	edi

; 114  : 	Reset();

	call	?Reset@CvGoodyHuts@@SAXXZ		; CvGoodyHuts::Reset

; 115  : 
; 116  : 	uint uiVersion;
; 117  : 	kStream >> uiVersion;

	mov	ebx, DWORD PTR _kStream$[esp+16]
	lea	eax, DWORD PTR _uiVersion$[esp+20]
	push	eax
	mov	ecx, ebx
	call	?Read@FDataStream@@IAEXAAI@Z		; FDataStream::Read
	xor	ebp, ebp
	npad	4
$LL3@Read:

; 118  : 
; 119  : 	for (int iI = 0; iI < MAX_MAJOR_CIVS; iI++)
; 120  : 	{
; 121  : #ifdef AUI_WARNING_FIXES
; 122  : 		ArrayWrapper<int> kWrapper(NUM_GOODIES_REMEMBERED, m_aaiPlayerGoodyHutResults[iI]);
; 123  : 		kStream >> kWrapper;
; 124  : #else
; 125  : 		kStream >> ArrayWrapper<int>(NUM_GOODIES_REMEMBERED, m_aaiPlayerGoodyHutResults[iI]);

	mov	ecx, DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	mov	esi, DWORD PTR [ecx+ebp]
	mov	edi, 4
	npad	2
$LL12@Read:
	push	esi
	mov	ecx, ebx
	call	?Read@FDataStream@@IAEXAAH@Z		; FDataStream::Read
	add	esi, 4
	sub	edi, 1
	jne	SHORT $LL12@Read
	add	ebp, 4
	cmp	ebp, 88					; 00000058H
	jl	SHORT $LL3@Read
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 126  : #endif
; 127  : 	}
; 128  : }

	pop	ecx
	ret	0
?Read@CvGoodyHuts@@SAXAAVFDataStream@@I@Z ENDP		; CvGoodyHuts::Read
_TEXT	ENDS
PUBLIC	?Write@CvGoodyHuts@@SAXAAVFDataStream@@@Z	; CvGoodyHuts::Write
; Function compile flags: /Ogtpy
;	COMDAT ?Write@CvGoodyHuts@@SAXAAVFDataStream@@@Z
_TEXT	SEGMENT
_uiVersion$ = -4					; size = 4
_kStream$ = 8						; size = 4
?Write@CvGoodyHuts@@SAXAAVFDataStream@@@Z PROC		; CvGoodyHuts::Write, COMDAT

; 132  : {

	push	ecx
	push	ebx

; 133  : 	// Current version number
; 134  : 	uint uiVersion = 1;
; 135  : 	kStream << uiVersion;

	mov	ebx, DWORD PTR _kStream$[esp+4]
	push	ebp
	push	esi
	push	edi
	lea	eax, DWORD PTR _uiVersion$[esp+20]
	push	eax
	mov	ecx, ebx
	mov	DWORD PTR _uiVersion$[esp+24], 1
	call	?Write@FDataStream@@IAEXABI@Z		; FDataStream::Write
	xor	ebp, ebp
	npad	1
$LL3@Write:

; 136  : 
; 137  : 	for (int iI = 0; iI < MAX_MAJOR_CIVS; iI++)
; 138  : 	{
; 139  : #ifdef AUI_WARNING_FIXES
; 140  : 		ArrayWrapper<int> kWrapper(NUM_GOODIES_REMEMBERED, m_aaiPlayerGoodyHutResults[iI]);
; 141  : 		kStream << kWrapper;
; 142  : #else
; 143  : 		kStream << ArrayWrapper<int>(NUM_GOODIES_REMEMBERED, m_aaiPlayerGoodyHutResults[iI]);

	mov	ecx, DWORD PTR ?m_aaiPlayerGoodyHutResults@CvGoodyHuts@@0PAPAHA ; CvGoodyHuts::m_aaiPlayerGoodyHutResults
	mov	esi, DWORD PTR [ecx+ebp]
	mov	edi, 4
	npad	2
$LL12@Write:
	push	esi
	mov	ecx, ebx
	call	?Write@FDataStream@@IAEXABH@Z		; FDataStream::Write
	add	esi, 4
	sub	edi, 1
	jne	SHORT $LL12@Write
	add	ebp, 4
	cmp	ebp, 88					; 00000058H
	jl	SHORT $LL3@Write
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 144  : #endif
; 145  : 	}
; 146  : }

	pop	ecx
	ret	0
?Write@CvGoodyHuts@@SAXAAVFDataStream@@@Z ENDP		; CvGoodyHuts::Write
_TEXT	ENDS
END
