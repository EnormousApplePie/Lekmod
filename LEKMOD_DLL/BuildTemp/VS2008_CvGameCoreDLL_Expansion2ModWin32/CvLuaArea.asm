; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\EnormousApplePie\Documents\GitHub\Lekmod\LEKMOD_DLL\CvGameCoreDLL_Expansion2\Lua\CvLuaArea.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG219086 DB	'IsNone', 00H
	ORG $+1
$SG219087 DB	'CalculateTotalBestNatureYield', 00H
	ORG $+2
$SG219088 DB	'CountCoastalLand', 00H
	ORG $+3
$SG219089 DB	'CountNumUniqueResourceTypes', 00H
$SG219090 DB	'GetID', 00H
	ORG $+2
$SG219091 DB	'GetNumTiles', 00H
$SG219092 DB	'GetNumOwnedTiles', 00H
	ORG $+3
$SG219093 DB	'GetNumUnownedTiles', 00H
	ORG $+1
$SG219094 DB	'GetNumRiverEdges', 00H
	ORG $+3
$SG219095 DB	'GetNumCities', 00H
	ORG $+3
$SG219096 DB	'GetNumUnits', 00H
$SG219097 DB	'GetTotalPopulation', 00H
	ORG $+1
$SG219098 DB	'GetNumStartingPlots', 00H
$SG219099 DB	'IsWater', 00H
$SG219100 DB	'GetUnitsPerPlayer', 00H
	ORG $+2
$SG219101 DB	'GetCitiesPerPlayer', 00H
	ORG $+1
$SG219102 DB	'GetPopulationPerPlayer', 00H
	ORG $+1
$SG219103 DB	'GetFreeSpecialist', 00H
	ORG $+2
$SG219104 DB	'GetNumRevealedTiles', 00H
$SG219105 DB	'GetNumUnrevealedTiles', 00H
	ORG $+2
$SG219106 DB	'GetTargetCity', 00H
	ORG $+2
$SG219107 DB	'GetYieldRateModifier', 00H
	ORG $+3
$SG219108 DB	'GetNumResources', 00H
$SG219109 DB	'GetNumTotalResources', 00H
	ORG $+3
$SG219110 DB	'GetNumImprovements', 00H
	ORG $+1
$SG219116 DB	'Area', 00H
	ORG $+3
$SG219310 DB	'__instance', 00H
	ORG $+5
$SG219316 DB	'Not a valid instance.  Either the instance is NULL or yo'
	DB	'u used ''.'' instead of '':''.', 00H
	ORG $+1
$SG219324 DB	'Instance does not exist.', 00H
	ORG $+3
$SG219335 DB	'__instances', 00H
$SG219336 DB	'__mode', 00H
	ORG $+1
$SG219337 DB	'v', 00H
	ORG $+2
$SG219339 DB	'__instances', 00H
$SG219342 DB	'__instance', 00H
	ORG $+1
$SG219343 DB	'__index', 00H
CONST	ENDS
PUBLIC	?GetTypeName@CvLuaArea@@SAPBDXZ			; CvLuaArea::GetTypeName
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaarea.cpp
;	COMDAT ?GetTypeName@CvLuaArea@@SAPBDXZ
_TEXT	SEGMENT
?GetTypeName@CvLuaArea@@SAPBDXZ PROC			; CvLuaArea::GetTypeName, COMDAT

; 61   : 	return "Area";

	mov	eax, OFFSET $SG219116

; 62   : }

	ret	0
?GetTypeName@CvLuaArea@@SAPBDXZ ENDP			; CvLuaArea::GetTypeName
_TEXT	ENDS
PUBLIC	?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@KAXPAUlua_State@@@Z ; CvLuaScopedInstance<CvLuaArea,CvArea>::DefaultHandleMissingInstance
EXTRN	_luaL_error:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@KAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@KAXPAUlua_State@@@Z PROC ; CvLuaScopedInstance<CvLuaArea,CvArea>::DefaultHandleMissingInstance, COMDAT

; 165  : 	luaL_error(L, "Instance does not exist.");

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET $SG219324
	push	eax
	call	_luaL_error
	add	esp, 8

; 166  : }

	ret	0
?DefaultHandleMissingInstance@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@KAXPAUlua_State@@@Z ENDP ; CvLuaScopedInstance<CvLuaArea,CvArea>::DefaultHandleMissingInstance
_TEXT	ENDS
PUBLIC	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
EXTRN	_lua_pushnil:PROC
EXTRN	_lua_remove:PROC
EXTRN	_lua_pushlightuserdata:PROC
EXTRN	_lua_rawget:PROC
EXTRN	?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z:PROC ; CvLuaCity::PushMethods
EXTRN	_lua_gettop:PROC
EXTRN	_lua_setfield:PROC
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_setmetatable:PROC
EXTRN	_lua_rawset:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	_lua_createtable:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_getfield:PROC
EXTRN	?GetTypeName@CvLuaCity@@SAPBDXZ:PROC		; CvLuaCity::GetTypeName
; Function compile flags: /Ogtpy
;	COMDAT ?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pkType$ = 12						; size = 4
?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z PROC ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push, COMDAT

; 39   : {

	push	edi

; 40   : 	//Pushing an instance involves more than just actually pushing a pointer into the
; 41   : 	//Lua stack.  There are some caching optimizations that are done as well as some
; 42   : 	//checks.
; 43   : 	//The first step is to load or create a global table <Typename> to store all member
; 44   : 	//methods and all pushed instances.  This conserves memory and offers faster pushing
; 45   : 	//speed.
; 46   : 	//If <Typename>.__instances[pkType] is not nil, return that value.
; 47   : 	//otherwise push a new instance and assign it to __instances.
; 48   : 
; 49   : 	//NOTE: Raw gets and sets are used as an optimization over using lua_[get,set]field
; 50   : 	if(pkType)

	mov	edi, DWORD PTR _pkType$[esp]
	test	edi, edi
	je	$LN4@Push
	push	ebx
	push	ebp
	push	esi

; 51   : 	{
; 52   : 		//const int t = lua_gettop(L);
; 53   : 
; 54   : 		lua_getglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaCity@@SAPBDXZ		; CvLuaCity::GetTypeName
	mov	esi, DWORD PTR _L$[esp+12]
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_getfield

; 55   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN7@Push

; 56   : 		{
; 57   : 			//Typename wasn't found, time to build it.
; 58   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 59   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 60   : 
; 61   : 			//Create weak __instances table.
; 62   : 			lua_pushstring(L, "__instances");

	push	OFFSET $SG219335
	push	esi
	call	_lua_pushstring

; 63   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 64   : 
; 65   : 			//Create __instances.mt
; 66   : 			lua_newtable(L);

	push	0
	push	0
	push	esi
	call	_lua_createtable

; 67   : 			lua_pushstring(L, "__mode");

	push	OFFSET $SG219336
	push	esi
	call	_lua_pushstring

; 68   : 			lua_pushstring(L, "v");

	push	OFFSET $SG219337
	push	esi
	call	_lua_pushstring
	add	esp, 68					; 00000044H

; 69   : 			lua_rawset(L, -3);				// mt.__mode = "v";

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 70   : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 71   : 
; 72   : 			lua_rawset(L, -3);				//type.__instances = t;

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 73   : 
; 74   : 
; 75   : 			lua_pushvalue(L, -1);

	push	-1
	push	esi
	call	_lua_pushvalue

; 76   : 			lua_setglobal(L, Derived::GetTypeName());

	call	?GetTypeName@CvLuaCity@@SAPBDXZ		; CvLuaCity::GetTypeName
	push	eax
	push	-10002					; ffffd8eeH
	push	esi
	call	_lua_setfield

; 77   : 
; 78   : 			Derived::PushMethods(L, lua_gettop(L));

	push	esi
	call	_lua_gettop
	push	eax
	push	esi
	call	?PushMethods@CvLuaCity@@SAXPAUlua_State@@H@Z ; CvLuaCity::PushMethods
	add	esp, 56					; 00000038H
$LN7@Push:

; 79   : 		}
; 80   : 		const int type_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 81   : 
; 82   : 		lua_pushstring(L, "__instances");

	push	OFFSET $SG219339
	push	esi
	mov	ebx, eax
	call	_lua_pushstring

; 83   : 		lua_rawget(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 84   : 
; 85   : 		const int instances_index = lua_gettop(L);

	push	esi
	call	_lua_gettop

; 86   : 
; 87   : 		lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	mov	ebp, eax
	call	_lua_pushlightuserdata

; 88   : 
; 89   : 		lua_rawget(L, -2);					//retrieve type.__instances[pkType]

	push	-2					; fffffffeH
	push	esi
	call	_lua_rawget

; 90   : 
; 91   : 		if(lua_isnil(L, -1))

	push	-1
	push	esi
	call	_lua_type
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN2@Push

; 92   : 		{
; 93   : 			lua_pop(L, 1);

	push	-2					; fffffffeH
	push	esi
	call	_lua_settop

; 94   : 
; 95   : 			//Push new instance
; 96   : 			lua_createtable(L, 0, 1);

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 97   : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 98   : 			lua_setfield(L, -2, "__instance");

	push	OFFSET $SG219342
	push	-2					; fffffffeH
	push	esi
	call	_lua_setfield

; 99   : 
; 100  : 			lua_createtable(L, 0, 1);			// create mt

	push	1
	push	0
	push	esi
	call	_lua_createtable

; 101  : 			lua_pushstring(L, "__index");

	push	OFFSET $SG219343
	push	esi
	call	_lua_pushstring

; 102  : 			lua_pushvalue(L, type_index);

	push	ebx
	push	esi
	call	_lua_pushvalue
	add	esp, 68					; 00000044H

; 103  : 			lua_rawset(L, -3);					// mt.__index = Type

	push	-3					; fffffffdH
	push	esi
	call	_lua_rawset

; 104  : 			lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_setmetatable

; 105  : 
; 106  : 			//Assign it in instances
; 107  : 			lua_pushlightuserdata(L, pkType);

	push	edi
	push	esi
	call	_lua_pushlightuserdata

; 108  : 			lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	push	esi
	call	_lua_pushvalue

; 109  : 			lua_rawset(L, instances_index);				//__instances[pkType] = t;

	push	ebp
	push	esi
	call	_lua_rawset
	add	esp, 40					; 00000028H
$LN2@Push:

; 110  : 		}
; 111  : 
; 112  : 		//VERIFY(instances_index > type_index);
; 113  : 		lua_remove(L, instances_index);

	push	ebp
	push	esi
	call	_lua_remove

; 114  : 		lua_remove(L, type_index);

	push	ebx
	push	esi
	call	_lua_remove
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
$LN4@Push:

; 115  : 
; 116  : 		//const int dt = lua_gettop(L);
; 117  : 		//VERIFY(dt == t + 1)
; 118  : 	}
; 119  : 	else
; 120  : 	{
; 121  : 		lua_pushnil(L);

	mov	eax, DWORD PTR _L$[esp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
	pop	edi

; 122  : 	}
; 123  : }

	ret	0
?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ENDP ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
_TEXT	ENDS
PUBLIC	?GetID@CvArea@@QBEHXZ				; CvArea::GetID
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\cvarea.h
;	COMDAT ?GetID@CvArea@@QBEHXZ
_TEXT	SEGMENT
?GetID@CvArea@@QBEHXZ PROC				; CvArea::GetID, COMDAT
; _this$ = ecx

; 54   : 		return m_iID;

	mov	eax, DWORD PTR [ecx+4]

; 55   : 	}

	ret	0
?GetID@CvArea@@QBEHXZ ENDP				; CvArea::GetID
_TEXT	ENDS
PUBLIC	?HandleMissingInstance@CvLuaArea@@SAXPAUlua_State@@@Z ; CvLuaArea::HandleMissingInstance
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaarea.cpp
;	COMDAT ?HandleMissingInstance@CvLuaArea@@SAXPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?HandleMissingInstance@CvLuaArea@@SAXPAUlua_State@@@Z PROC ; CvLuaArea::HandleMissingInstance, COMDAT

; 56   : 	DefaultHandleMissingInstance(L);

	mov	eax, DWORD PTR _L$[esp-4]
	push	OFFSET $SG219324
	push	eax
	call	_luaL_error
	add	esp, 8

; 57   : }

	ret	0
?HandleMissingInstance@CvLuaArea@@SAXPAUlua_State@@@Z ENDP ; CvLuaArea::HandleMissingInstance
_TEXT	ENDS
PUBLIC	?GetInstance@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@SAPAVCvArea@@PAUlua_State@@H_N@Z ; CvLuaScopedInstance<CvLuaArea,CvArea>::GetInstance
EXTRN	_lua_touserdata:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluascopedinstance.h
;	COMDAT ?GetInstance@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@SAPAVCvArea@@PAUlua_State@@H_N@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_bErrorOnFail$ = 16					; size = 1
?GetInstance@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@SAPAVCvArea@@PAUlua_State@@H_N@Z PROC ; CvLuaScopedInstance<CvLuaArea,CvArea>::GetInstance, COMDAT

; 127  : {

	push	ebx
	push	ebp
	push	esi

; 128  : 	const int stack_size = lua_gettop(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	mov	ebp, eax

; 129  : 	bool bFail = true;
; 130  : 
; 131  : 	InstanceType* pkInstance = NULL;
; 132  : 	if(lua_type(L, idx) == LUA_TTABLE)

	mov	eax, DWORD PTR _idx$[esp+16]
	push	eax
	push	esi
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN3@GetInstanc

; 133  : 	{
; 134  : 		lua_getfield(L, idx, "__instance");

	mov	ecx, DWORD PTR _idx$[esp+12]
	push	OFFSET $SG219310
	push	ecx
	push	esi
	call	_lua_getfield

; 135  : 		if(lua_type(L, -1) == LUA_TLIGHTUSERDATA)

	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN3@GetInstanc

; 136  : 		{
; 137  : 			pkInstance = static_cast<InstanceType*>(lua_touserdata(L, -1));

	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8

; 138  : 			if(pkInstance)

	test	edi, edi
	je	SHORT $LN3@GetInstanc

; 139  : 			{
; 140  : 				bFail = false;

	xor	bl, bl
$LN3@GetInstanc:

; 141  : 			}
; 142  : 		}
; 143  : 	}
; 144  : 
; 145  : 	lua_settop(L, stack_size);

	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8

; 146  : 
; 147  : 	if(bFail && bErrorOnFail)

	test	bl, bl
	je	SHORT $LN13@GetInstanc
	cmp	BYTE PTR _bErrorOnFail$[esp+12], 0
	je	SHORT $LN13@GetInstanc

; 148  : 	{
; 149  : 		if(idx == 1)

	cmp	DWORD PTR _idx$[esp+12], 1
	jne	SHORT $LN1@GetInstanc

; 150  : 			luaL_error(L, "Not a valid instance.  Either the instance is NULL or you used '.' instead of ':'.");

	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	add	esp, 8
$LN1@GetInstanc:

; 151  : 		Derived::HandleMissingInstance(L);

	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 8
$LN13@GetInstanc:

; 152  : 	}
; 153  : 	return pkInstance;

	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx

; 154  : }

	ret	0
?GetInstance@?$CvLuaScopedInstance@VCvLuaArea@@VCvArea@@@@SAPAVCvArea@@PAUlua_State@@H_N@Z ENDP ; CvLuaScopedInstance<CvLuaArea,CvArea>::GetInstance
_TEXT	ENDS
PUBLIC	?lIsNone@CvLuaArea@@KAHPAUlua_State@@@Z		; CvLuaArea::lIsNone
EXTRN	_lua_pushboolean:PROC
; Function compile flags: /Ogtpy
; File c:\users\enormousapplepie\documents\github\lekmod\lekmod_dll\cvgamecoredll_expansion2\lua\cvluaarea.cpp
;	COMDAT ?lIsNone@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsNone@CvLuaArea@@KAHPAUlua_State@@@Z PROC		; CvLuaArea::lIsNone, COMDAT

; 70   : {

	push	ebx
	push	ebp
	push	esi

; 71   : #ifdef AUI_WARNING_FIXES
; 72   : 	const bool bExists = (GetInstance(L, 1, false) != NULL);
; 73   : #else
; 74   : 	const bool bExists = (GetInstance(L, false) != NULL);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	xor	edi, edi
	push	edi
	push	esi
	mov	ebp, eax
	mov	bl, 1
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsNone
	push	OFFSET $SG219310
	push	edi
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsNone
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsNone
	xor	bl, bl
$LN5@lIsNone:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsNone
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 8
$LN12@lIsNone:
	xor	eax, eax
	test	edi, edi
	setne	al

; 75   : #endif
; 76   : 	lua_pushboolean(L, bExists);

	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 77   : 
; 78   : 	return 1;

	mov	eax, 1
	pop	ebx

; 79   : }

	ret	0
?lIsNone@CvLuaArea@@KAHPAUlua_State@@@Z ENDP		; CvLuaArea::lIsNone
_TEXT	ENDS
PUBLIC	?lCalculateTotalBestNatureYield@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lCalculateTotalBestNatureYield
EXTRN	_lua_pushinteger:PROC
EXTRN	?calculateTotalBestNatureYield@CvArea@@QBEHXZ:PROC ; CvArea::calculateTotalBestNatureYield
; Function compile flags: /Ogtpy
;	COMDAT ?lCalculateTotalBestNatureYield@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCalculateTotalBestNatureYield@CvLuaArea@@KAHPAUlua_State@@@Z PROC ; CvLuaArea::lCalculateTotalBestNatureYield, COMDAT

; 82   : {

	push	ebx
	push	ebp
	push	esi

; 83   : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCalculate
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCalculate
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCalculate
	xor	bl, bl
$LN5@lCalculate:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCalculate
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCalculate:

; 84   : 
; 85   : 	const int iResult = pkArea->calculateTotalBestNatureYield();

	mov	ecx, edi
	call	?calculateTotalBestNatureYield@CvArea@@QBEHXZ ; CvArea::calculateTotalBestNatureYield

; 86   : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 87   : 	return 1;

	mov	eax, 1
	pop	ebx

; 88   : }

	ret	0
?lCalculateTotalBestNatureYield@CvLuaArea@@KAHPAUlua_State@@@Z ENDP ; CvLuaArea::lCalculateTotalBestNatureYield
_TEXT	ENDS
PUBLIC	?lCountCoastalLand@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lCountCoastalLand
EXTRN	?countCoastalLand@CvArea@@QBEHXZ:PROC		; CvArea::countCoastalLand
; Function compile flags: /Ogtpy
;	COMDAT ?lCountCoastalLand@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountCoastalLand@CvLuaArea@@KAHPAUlua_State@@@Z PROC	; CvLuaArea::lCountCoastalLand, COMDAT

; 92   : {

	push	ebx
	push	ebp
	push	esi

; 93   : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCountCoas
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCountCoas
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCountCoas
	xor	bl, bl
$LN5@lCountCoas:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCountCoas
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCountCoas:

; 94   : 
; 95   : 	const int iResult = pkArea->countCoastalLand();

	mov	ecx, edi
	call	?countCoastalLand@CvArea@@QBEHXZ	; CvArea::countCoastalLand

; 96   : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 97   : 	return 1;

	mov	eax, 1
	pop	ebx

; 98   : }

	ret	0
?lCountCoastalLand@CvLuaArea@@KAHPAUlua_State@@@Z ENDP	; CvLuaArea::lCountCoastalLand
_TEXT	ENDS
PUBLIC	?lCountNumUniqueResourceTypes@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lCountNumUniqueResourceTypes
EXTRN	?countNumUniqueResourceTypes@CvArea@@QBEHXZ:PROC ; CvArea::countNumUniqueResourceTypes
; Function compile flags: /Ogtpy
;	COMDAT ?lCountNumUniqueResourceTypes@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lCountNumUniqueResourceTypes@CvLuaArea@@KAHPAUlua_State@@@Z PROC ; CvLuaArea::lCountNumUniqueResourceTypes, COMDAT

; 102  : {

	push	ebx
	push	ebp
	push	esi

; 103  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lCountNumU
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lCountNumU
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lCountNumU
	xor	bl, bl
$LN5@lCountNumU:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lCountNumU
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lCountNumU:

; 104  : 
; 105  : 	const int iResult = pkArea->countNumUniqueResourceTypes();

	mov	ecx, edi
	call	?countNumUniqueResourceTypes@CvArea@@QBEHXZ ; CvArea::countNumUniqueResourceTypes

; 106  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 107  : 	return 1;

	mov	eax, 1
	pop	ebx

; 108  : }

	ret	0
?lCountNumUniqueResourceTypes@CvLuaArea@@KAHPAUlua_State@@@Z ENDP ; CvLuaArea::lCountNumUniqueResourceTypes
_TEXT	ENDS
PUBLIC	?lGetID@CvLuaArea@@KAHPAUlua_State@@@Z		; CvLuaArea::lGetID
; Function compile flags: /Ogtpy
;	COMDAT ?lGetID@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetID@CvLuaArea@@KAHPAUlua_State@@@Z PROC		; CvLuaArea::lGetID, COMDAT

; 112  : {

	push	ebx
	push	ebp
	push	esi

; 113  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetID
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetID
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetID
	xor	bl, bl
$LN5@lGetID:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetID
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetID:

; 114  : 
; 115  : 	const int iResult = pkArea->GetID();
; 116  : 	lua_pushinteger(L, iResult);

	mov	eax, DWORD PTR [edi+4]
	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 117  : 	return 1;

	mov	eax, 1
	pop	ebx

; 118  : }

	ret	0
?lGetID@CvLuaArea@@KAHPAUlua_State@@@Z ENDP		; CvLuaArea::lGetID
_TEXT	ENDS
PUBLIC	?lGetNumTiles@CvLuaArea@@KAHPAUlua_State@@@Z	; CvLuaArea::lGetNumTiles
EXTRN	?getNumTiles@CvArea@@QBEHXZ:PROC		; CvArea::getNumTiles
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumTiles@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumTiles@CvLuaArea@@KAHPAUlua_State@@@Z PROC	; CvLuaArea::lGetNumTiles, COMDAT

; 122  : {

	push	ebx
	push	ebp
	push	esi

; 123  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumTil
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumTil
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumTil
	xor	bl, bl
$LN5@lGetNumTil:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumTil
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumTil:

; 124  : 
; 125  : 	const int iResult = pkArea->getNumTiles();

	mov	ecx, edi
	call	?getNumTiles@CvArea@@QBEHXZ		; CvArea::getNumTiles

; 126  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 127  : 	return 1;

	mov	eax, 1
	pop	ebx

; 128  : }

	ret	0
?lGetNumTiles@CvLuaArea@@KAHPAUlua_State@@@Z ENDP	; CvLuaArea::lGetNumTiles
_TEXT	ENDS
PUBLIC	?lGetNumOwnedTiles@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumOwnedTiles
EXTRN	?getNumOwnedTiles@CvArea@@QBEHXZ:PROC		; CvArea::getNumOwnedTiles
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumOwnedTiles@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumOwnedTiles@CvLuaArea@@KAHPAUlua_State@@@Z PROC	; CvLuaArea::lGetNumOwnedTiles, COMDAT

; 142  : {

	push	ebx
	push	ebp
	push	esi

; 143  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumOwn
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumOwn
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumOwn
	xor	bl, bl
$LN5@lGetNumOwn:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumOwn
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumOwn:

; 144  : 
; 145  : 	const int iResult = pkArea->getNumOwnedTiles();

	mov	ecx, edi
	call	?getNumOwnedTiles@CvArea@@QBEHXZ	; CvArea::getNumOwnedTiles

; 146  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 147  : 	return 1;

	mov	eax, 1
	pop	ebx

; 148  : }

	ret	0
?lGetNumOwnedTiles@CvLuaArea@@KAHPAUlua_State@@@Z ENDP	; CvLuaArea::lGetNumOwnedTiles
_TEXT	ENDS
PUBLIC	?lGetNumUnownedTiles@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumUnownedTiles
EXTRN	?getNumUnownedTiles@CvArea@@QBEHXZ:PROC		; CvArea::getNumUnownedTiles
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumUnownedTiles@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnownedTiles@CvLuaArea@@KAHPAUlua_State@@@Z PROC ; CvLuaArea::lGetNumUnownedTiles, COMDAT

; 152  : {

	push	ebx
	push	ebp
	push	esi

; 153  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumUno
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumUno
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumUno
	xor	bl, bl
$LN5@lGetNumUno:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumUno
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumUno:

; 154  : 
; 155  : 	const int iResult = pkArea->getNumUnownedTiles();

	mov	ecx, edi
	call	?getNumUnownedTiles@CvArea@@QBEHXZ	; CvArea::getNumUnownedTiles

; 156  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 157  : 	return 1;

	mov	eax, 1
	pop	ebx

; 158  : }

	ret	0
?lGetNumUnownedTiles@CvLuaArea@@KAHPAUlua_State@@@Z ENDP ; CvLuaArea::lGetNumUnownedTiles
_TEXT	ENDS
PUBLIC	?lGetNumRiverEdges@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumRiverEdges
EXTRN	?getNumRiverEdges@CvArea@@QBEHXZ:PROC		; CvArea::getNumRiverEdges
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumRiverEdges@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumRiverEdges@CvLuaArea@@KAHPAUlua_State@@@Z PROC	; CvLuaArea::lGetNumRiverEdges, COMDAT

; 162  : {

	push	ebx
	push	ebp
	push	esi

; 163  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumRiv
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumRiv
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumRiv
	xor	bl, bl
$LN5@lGetNumRiv:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumRiv
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumRiv:

; 164  : 
; 165  : 	const int iResult = pkArea->getNumRiverEdges();

	mov	ecx, edi
	call	?getNumRiverEdges@CvArea@@QBEHXZ	; CvArea::getNumRiverEdges

; 166  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 167  : 	return 1;

	mov	eax, 1
	pop	ebx

; 168  : }

	ret	0
?lGetNumRiverEdges@CvLuaArea@@KAHPAUlua_State@@@Z ENDP	; CvLuaArea::lGetNumRiverEdges
_TEXT	ENDS
PUBLIC	?lGetNumCities@CvLuaArea@@KAHPAUlua_State@@@Z	; CvLuaArea::lGetNumCities
EXTRN	?getNumCities@CvArea@@QBEHXZ:PROC		; CvArea::getNumCities
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumCities@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumCities@CvLuaArea@@KAHPAUlua_State@@@Z PROC	; CvLuaArea::lGetNumCities, COMDAT

; 172  : {

	push	ebx
	push	ebp
	push	esi

; 173  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumCit
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumCit
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumCit
	xor	bl, bl
$LN5@lGetNumCit:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumCit
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumCit:

; 174  : 
; 175  : 	const int iResult = pkArea->getNumCities();

	mov	ecx, edi
	call	?getNumCities@CvArea@@QBEHXZ		; CvArea::getNumCities

; 176  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 177  : 	return 1;

	mov	eax, 1
	pop	ebx

; 178  : }

	ret	0
?lGetNumCities@CvLuaArea@@KAHPAUlua_State@@@Z ENDP	; CvLuaArea::lGetNumCities
_TEXT	ENDS
PUBLIC	?lGetNumUnits@CvLuaArea@@KAHPAUlua_State@@@Z	; CvLuaArea::lGetNumUnits
EXTRN	?getNumUnits@CvArea@@QBEHXZ:PROC		; CvArea::getNumUnits
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumUnits@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnits@CvLuaArea@@KAHPAUlua_State@@@Z PROC	; CvLuaArea::lGetNumUnits, COMDAT

; 182  : {

	push	ebx
	push	ebp
	push	esi

; 183  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumUni
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumUni
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumUni
	xor	bl, bl
$LN5@lGetNumUni:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumUni
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumUni:

; 184  : 
; 185  : 	const int iResult = pkArea->getNumUnits();

	mov	ecx, edi
	call	?getNumUnits@CvArea@@QBEHXZ		; CvArea::getNumUnits

; 186  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 187  : 	return 1;

	mov	eax, 1
	pop	ebx

; 188  : }

	ret	0
?lGetNumUnits@CvLuaArea@@KAHPAUlua_State@@@Z ENDP	; CvLuaArea::lGetNumUnits
_TEXT	ENDS
PUBLIC	?lGetTotalPopulation@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetTotalPopulation
EXTRN	?getTotalPopulation@CvArea@@QBEHXZ:PROC		; CvArea::getTotalPopulation
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTotalPopulation@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTotalPopulation@CvLuaArea@@KAHPAUlua_State@@@Z PROC ; CvLuaArea::lGetTotalPopulation, COMDAT

; 192  : {

	push	ebx
	push	ebp
	push	esi

; 193  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTotalP
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTotalP
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTotalP
	xor	bl, bl
$LN5@lGetTotalP:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTotalP
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTotalP:

; 194  : 
; 195  : 	const int iResult = pkArea->getTotalPopulation();

	mov	ecx, edi
	call	?getTotalPopulation@CvArea@@QBEHXZ	; CvArea::getTotalPopulation

; 196  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 197  : 	return 1;

	mov	eax, 1
	pop	ebx

; 198  : }

	ret	0
?lGetTotalPopulation@CvLuaArea@@KAHPAUlua_State@@@Z ENDP ; CvLuaArea::lGetTotalPopulation
_TEXT	ENDS
PUBLIC	?lGetNumStartingPlots@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumStartingPlots
EXTRN	?getNumStartingPlots@CvArea@@QBEHXZ:PROC	; CvArea::getNumStartingPlots
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumStartingPlots@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumStartingPlots@CvLuaArea@@KAHPAUlua_State@@@Z PROC ; CvLuaArea::lGetNumStartingPlots, COMDAT

; 202  : {

	push	ebx
	push	ebp
	push	esi

; 203  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumSta
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumSta
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumSta
	xor	bl, bl
$LN5@lGetNumSta:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumSta
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumSta:

; 204  : 
; 205  : 	const int iResult = pkArea->getNumStartingPlots();

	mov	ecx, edi
	call	?getNumStartingPlots@CvArea@@QBEHXZ	; CvArea::getNumStartingPlots

; 206  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 207  : 	return 1;

	mov	eax, 1
	pop	ebx

; 208  : }

	ret	0
?lGetNumStartingPlots@CvLuaArea@@KAHPAUlua_State@@@Z ENDP ; CvLuaArea::lGetNumStartingPlots
_TEXT	ENDS
PUBLIC	?lIsWater@CvLuaArea@@KAHPAUlua_State@@@Z	; CvLuaArea::lIsWater
EXTRN	?isWater@CvArea@@QBE_NXZ:PROC			; CvArea::isWater
; Function compile flags: /Ogtpy
;	COMDAT ?lIsWater@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lIsWater@CvLuaArea@@KAHPAUlua_State@@@Z PROC		; CvLuaArea::lIsWater, COMDAT

; 212  : {

	push	ebx
	push	ebp
	push	esi

; 213  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lIsWater
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lIsWater
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lIsWater
	xor	bl, bl
$LN5@lIsWater:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lIsWater
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lIsWater:

; 214  : 	const bool bResult = pkArea->isWater();

	mov	ecx, edi
	call	?isWater@CvArea@@QBE_NXZ		; CvArea::isWater

; 215  : 	lua_pushboolean(L, bResult);

	movzx	eax, al
	push	eax
	push	esi
	call	_lua_pushboolean
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 216  : 	return 1;

	mov	eax, 1
	pop	ebx

; 217  : }

	ret	0
?lIsWater@CvLuaArea@@KAHPAUlua_State@@@Z ENDP		; CvLuaArea::lIsWater
_TEXT	ENDS
PUBLIC	?lGetUnitsPerPlayer@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetUnitsPerPlayer
EXTRN	?getUnitsPerPlayer@CvArea@@QBEHW4PlayerTypes@@@Z:PROC ; CvArea::getUnitsPerPlayer
EXTRN	_lua_tointeger:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?lGetUnitsPerPlayer@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetUnitsPerPlayer@CvLuaArea@@KAHPAUlua_State@@@Z PROC	; CvLuaArea::lGetUnitsPerPlayer, COMDAT

; 221  : {

	push	ebx
	push	ebp
	push	esi

; 222  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetUnitsP
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetUnitsP
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetUnitsP
	xor	bl, bl
$LN5@lGetUnitsP:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetUnitsP
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetUnitsP:

; 223  : 	const PlayerTypes eIndex = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 224  : 
; 225  : 	const int iResult = pkArea->getUnitsPerPlayer(eIndex);

	push	eax
	mov	ecx, edi
	call	?getUnitsPerPlayer@CvArea@@QBEHW4PlayerTypes@@@Z ; CvArea::getUnitsPerPlayer

; 226  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 227  : 	return 1;

	mov	eax, 1
	pop	ebx

; 228  : }

	ret	0
?lGetUnitsPerPlayer@CvLuaArea@@KAHPAUlua_State@@@Z ENDP	; CvLuaArea::lGetUnitsPerPlayer
_TEXT	ENDS
PUBLIC	?lGetCitiesPerPlayer@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetCitiesPerPlayer
EXTRN	?getCitiesPerPlayer@CvArea@@QBEHW4PlayerTypes@@@Z:PROC ; CvArea::getCitiesPerPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetCitiesPerPlayer@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetCitiesPerPlayer@CvLuaArea@@KAHPAUlua_State@@@Z PROC ; CvLuaArea::lGetCitiesPerPlayer, COMDAT

; 232  : {

	push	ebx
	push	ebp
	push	esi

; 233  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetCities
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetCities
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetCities
	xor	bl, bl
$LN5@lGetCities:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetCities
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetCities:

; 234  : 	const PlayerTypes eIndex = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 235  : 
; 236  : 	const int iResult = pkArea->getCitiesPerPlayer(eIndex);

	push	eax
	mov	ecx, edi
	call	?getCitiesPerPlayer@CvArea@@QBEHW4PlayerTypes@@@Z ; CvArea::getCitiesPerPlayer

; 237  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 238  : 	return 1;

	mov	eax, 1
	pop	ebx

; 239  : }

	ret	0
?lGetCitiesPerPlayer@CvLuaArea@@KAHPAUlua_State@@@Z ENDP ; CvLuaArea::lGetCitiesPerPlayer
_TEXT	ENDS
PUBLIC	?lGetPopulationPerPlayer@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetPopulationPerPlayer
EXTRN	?getPopulationPerPlayer@CvArea@@QBEHW4PlayerTypes@@@Z:PROC ; CvArea::getPopulationPerPlayer
; Function compile flags: /Ogtpy
;	COMDAT ?lGetPopulationPerPlayer@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetPopulationPerPlayer@CvLuaArea@@KAHPAUlua_State@@@Z PROC ; CvLuaArea::lGetPopulationPerPlayer, COMDAT

; 243  : {

	push	ebx
	push	ebp
	push	esi

; 244  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetPopula
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetPopula
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetPopula
	xor	bl, bl
$LN5@lGetPopula:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetPopula
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetPopula:

; 245  : 	const PlayerTypes eIndex = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 246  : 
; 247  : 	const int iResult = pkArea->getPopulationPerPlayer(eIndex);

	push	eax
	mov	ecx, edi
	call	?getPopulationPerPlayer@CvArea@@QBEHW4PlayerTypes@@@Z ; CvArea::getPopulationPerPlayer

; 248  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 249  : 	return 1;

	mov	eax, 1
	pop	ebx

; 250  : }

	ret	0
?lGetPopulationPerPlayer@CvLuaArea@@KAHPAUlua_State@@@Z ENDP ; CvLuaArea::lGetPopulationPerPlayer
_TEXT	ENDS
PUBLIC	?lGetFreeSpecialist@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetFreeSpecialist
EXTRN	?getFreeSpecialist@CvArea@@QBEHW4PlayerTypes@@@Z:PROC ; CvArea::getFreeSpecialist
; Function compile flags: /Ogtpy
;	COMDAT ?lGetFreeSpecialist@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetFreeSpecialist@CvLuaArea@@KAHPAUlua_State@@@Z PROC	; CvLuaArea::lGetFreeSpecialist, COMDAT

; 254  : {

	push	ebx
	push	ebp
	push	esi

; 255  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetFreeSp
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetFreeSp
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetFreeSp
	xor	bl, bl
$LN5@lGetFreeSp:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetFreeSp
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetFreeSp:

; 256  : 	const PlayerTypes eIndex = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 257  : 
; 258  : 	const int iResult = pkArea->getFreeSpecialist(eIndex);

	push	eax
	mov	ecx, edi
	call	?getFreeSpecialist@CvArea@@QBEHW4PlayerTypes@@@Z ; CvArea::getFreeSpecialist

; 259  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 260  : 	return 1;

	mov	eax, 1
	pop	ebx

; 261  : }

	ret	0
?lGetFreeSpecialist@CvLuaArea@@KAHPAUlua_State@@@Z ENDP	; CvLuaArea::lGetFreeSpecialist
_TEXT	ENDS
PUBLIC	?lGetNumRevealedTiles@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumRevealedTiles
EXTRN	?getNumRevealedTiles@CvArea@@QBEHW4TeamTypes@@@Z:PROC ; CvArea::getNumRevealedTiles
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumRevealedTiles@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumRevealedTiles@CvLuaArea@@KAHPAUlua_State@@@Z PROC ; CvLuaArea::lGetNumRevealedTiles, COMDAT

; 265  : {

	push	ebx
	push	ebp
	push	esi

; 266  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumRev
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumRev
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumRev
	xor	bl, bl
$LN5@lGetNumRev:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumRev
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumRev:

; 267  : 	const TeamTypes eIndex = (TeamTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 268  : 
; 269  : 	const int iResult = pkArea->getNumRevealedTiles(eIndex);

	push	eax
	mov	ecx, edi
	call	?getNumRevealedTiles@CvArea@@QBEHW4TeamTypes@@@Z ; CvArea::getNumRevealedTiles

; 270  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 271  : 	return 1;

	mov	eax, 1
	pop	ebx

; 272  : }

	ret	0
?lGetNumRevealedTiles@CvLuaArea@@KAHPAUlua_State@@@Z ENDP ; CvLuaArea::lGetNumRevealedTiles
_TEXT	ENDS
PUBLIC	?lGetNumUnrevealedTiles@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumUnrevealedTiles
EXTRN	?getNumUnrevealedTiles@CvArea@@QBEHW4TeamTypes@@@Z:PROC ; CvArea::getNumUnrevealedTiles
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumUnrevealedTiles@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumUnrevealedTiles@CvLuaArea@@KAHPAUlua_State@@@Z PROC ; CvLuaArea::lGetNumUnrevealedTiles, COMDAT

; 276  : {

	push	ebx
	push	ebp
	push	esi

; 277  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumUnr
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumUnr
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumUnr
	xor	bl, bl
$LN5@lGetNumUnr:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumUnr
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumUnr:

; 278  : 	const TeamTypes eIndex = (TeamTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 279  : 
; 280  : 	const int iResult = pkArea->getNumUnrevealedTiles(eIndex);

	push	eax
	mov	ecx, edi
	call	?getNumUnrevealedTiles@CvArea@@QBEHW4TeamTypes@@@Z ; CvArea::getNumUnrevealedTiles

; 281  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 282  : 	return 1;

	mov	eax, 1
	pop	ebx

; 283  : }

	ret	0
?lGetNumUnrevealedTiles@CvLuaArea@@KAHPAUlua_State@@@Z ENDP ; CvLuaArea::lGetNumUnrevealedTiles
_TEXT	ENDS
PUBLIC	?lGetTargetCity@CvLuaArea@@KAHPAUlua_State@@@Z	; CvLuaArea::lGetTargetCity
EXTRN	?getTargetCity@CvArea@@QBEPAVCvCity@@W4PlayerTypes@@@Z:PROC ; CvArea::getTargetCity
; Function compile flags: /Ogtpy
;	COMDAT ?lGetTargetCity@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetTargetCity@CvLuaArea@@KAHPAUlua_State@@@Z PROC	; CvLuaArea::lGetTargetCity, COMDAT

; 288  : {

	push	ebx
	push	ebp
	push	esi

; 289  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetTarget
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetTarget
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetTarget
	xor	bl, bl
$LN5@lGetTarget:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetTarget
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetTarget:

; 290  : 	const PlayerTypes eIndex = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 291  : 
; 292  : 	CvCity* pkCity = pkArea->getTargetCity(eIndex);

	push	eax
	mov	ecx, edi
	call	?getTargetCity@CvArea@@QBEPAVCvCity@@W4PlayerTypes@@@Z ; CvArea::getTargetCity

; 293  : 	CvLuaCity::Push(L, pkCity);

	push	eax
	push	esi
	call	?Push@?$CvLuaScopedInstance@VCvLuaCity@@VCvCity@@@@SAXPAUlua_State@@PAVCvCity@@@Z ; CvLuaScopedInstance<CvLuaCity,CvCity>::Push
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 294  : 	return 1;

	mov	eax, 1
	pop	ebx

; 295  : }

	ret	0
?lGetTargetCity@CvLuaArea@@KAHPAUlua_State@@@Z ENDP	; CvLuaArea::lGetTargetCity
_TEXT	ENDS
PUBLIC	?lGetYieldRateModifier@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetYieldRateModifier
EXTRN	?getYieldRateModifier@CvArea@@QBEHW4PlayerTypes@@W4YieldTypes@@@Z:PROC ; CvArea::getYieldRateModifier
; Function compile flags: /Ogtpy
;	COMDAT ?lGetYieldRateModifier@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetYieldRateModifier@CvLuaArea@@KAHPAUlua_State@@@Z PROC ; CvLuaArea::lGetYieldRateModifier, COMDAT

; 299  : {

	push	ebx
	push	ebp
	push	esi

; 300  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetYieldR
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetYieldR
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetYieldR
	xor	bl, bl
$LN5@lGetYieldR:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetYieldR
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetYieldR:

; 301  : 	const PlayerTypes eIndex1 = (PlayerTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger

; 302  : 	const YieldTypes eIndex2 = (YieldTypes)lua_tointeger(L, 3);

	push	3
	push	esi
	mov	ebx, eax
	call	_lua_tointeger
	add	esp, 16					; 00000010H

; 303  : 
; 304  : 	const int iResult = pkArea->getYieldRateModifier(eIndex1, eIndex2);

	push	eax
	push	ebx
	mov	ecx, edi
	call	?getYieldRateModifier@CvArea@@QBEHW4PlayerTypes@@W4YieldTypes@@@Z ; CvArea::getYieldRateModifier

; 305  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 306  : 	return 1;

	mov	eax, 1
	pop	ebx

; 307  : }

	ret	0
?lGetYieldRateModifier@CvLuaArea@@KAHPAUlua_State@@@Z ENDP ; CvLuaArea::lGetYieldRateModifier
_TEXT	ENDS
PUBLIC	?lGetNumResources@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumResources
EXTRN	?getNumResources@CvArea@@QBEHW4ResourceTypes@@@Z:PROC ; CvArea::getNumResources
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumResources@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumResources@CvLuaArea@@KAHPAUlua_State@@@Z PROC	; CvLuaArea::lGetNumResources, COMDAT

; 311  : {

	push	ebx
	push	ebp
	push	esi

; 312  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumRes
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumRes
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumRes
	xor	bl, bl
$LN5@lGetNumRes:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumRes
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumRes:

; 313  : 	const ResourceTypes eResource = (ResourceTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 314  : 
; 315  : 	const int iResult = pkArea->getNumResources(eResource);

	push	eax
	mov	ecx, edi
	call	?getNumResources@CvArea@@QBEHW4ResourceTypes@@@Z ; CvArea::getNumResources

; 316  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 317  : 	return 1;

	mov	eax, 1
	pop	ebx

; 318  : }

	ret	0
?lGetNumResources@CvLuaArea@@KAHPAUlua_State@@@Z ENDP	; CvLuaArea::lGetNumResources
_TEXT	ENDS
PUBLIC	?lGetNumTotalResources@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumTotalResources
EXTRN	?getNumTotalResources@CvArea@@QBEHXZ:PROC	; CvArea::getNumTotalResources
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumTotalResources@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumTotalResources@CvLuaArea@@KAHPAUlua_State@@@Z PROC ; CvLuaArea::lGetNumTotalResources, COMDAT

; 322  : {

	push	ebx
	push	ebp
	push	esi

; 323  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumTot
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumTot
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumTot
	xor	bl, bl
$LN5@lGetNumTot:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumTot
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumTot:

; 324  : 
; 325  : 	const int iResult = pkArea->getNumTotalResources();

	mov	ecx, edi
	call	?getNumTotalResources@CvArea@@QBEHXZ	; CvArea::getNumTotalResources

; 326  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 327  : 	return 1;

	mov	eax, 1
	pop	ebx

; 328  : }

	ret	0
?lGetNumTotalResources@CvLuaArea@@KAHPAUlua_State@@@Z ENDP ; CvLuaArea::lGetNumTotalResources
_TEXT	ENDS
PUBLIC	?lGetNumImprovements@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumImprovements
EXTRN	?getNumImprovements@CvArea@@QBEHW4ImprovementTypes@@@Z:PROC ; CvArea::getNumImprovements
; Function compile flags: /Ogtpy
;	COMDAT ?lGetNumImprovements@CvLuaArea@@KAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?lGetNumImprovements@CvLuaArea@@KAHPAUlua_State@@@Z PROC ; CvLuaArea::lGetNumImprovements, COMDAT

; 332  : {

	push	ebx
	push	ebp
	push	esi

; 333  : 	CvArea* pkArea = GetInstance(L);

	mov	esi, DWORD PTR _L$[esp+8]
	push	edi
	push	esi
	call	_lua_gettop
	push	1
	push	esi
	mov	ebp, eax
	mov	bl, 1
	xor	edi, edi
	call	_lua_type
	add	esp, 12					; 0000000cH
	cmp	eax, 5
	jne	SHORT $LN5@lGetNumImp
	push	OFFSET $SG219310
	push	1
	push	esi
	call	_lua_getfield
	push	-1
	push	esi
	call	_lua_type
	add	esp, 20					; 00000014H
	cmp	eax, 2
	jne	SHORT $LN5@lGetNumImp
	push	-1
	push	esi
	call	_lua_touserdata
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@lGetNumImp
	xor	bl, bl
$LN5@lGetNumImp:
	push	ebp
	push	esi
	call	_lua_settop
	add	esp, 8
	test	bl, bl
	je	SHORT $LN12@lGetNumImp
	push	OFFSET $SG219316
	push	esi
	call	_luaL_error
	push	OFFSET $SG219324
	push	esi
	call	_luaL_error
	add	esp, 16					; 00000010H
$LN12@lGetNumImp:

; 334  : 	const ImprovementTypes eImprovement = (ImprovementTypes)lua_tointeger(L, 2);

	push	2
	push	esi
	call	_lua_tointeger
	add	esp, 8

; 335  : 
; 336  : 	const int iResult = pkArea->getNumImprovements(eImprovement);

	push	eax
	mov	ecx, edi
	call	?getNumImprovements@CvArea@@QBEHW4ImprovementTypes@@@Z ; CvArea::getNumImprovements

; 337  : 	lua_pushinteger(L, iResult);

	push	eax
	push	esi
	call	_lua_pushinteger
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp

; 338  : 	return 1;

	mov	eax, 1
	pop	ebx

; 339  : }

	ret	0
?lGetNumImprovements@CvLuaArea@@KAHPAUlua_State@@@Z ENDP ; CvLuaArea::lGetNumImprovements
_TEXT	ENDS
PUBLIC	?PushMethods@CvLuaArea@@SAXPAUlua_State@@H@Z	; CvLuaArea::PushMethods
EXTRN	_lua_pushcclosure:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?PushMethods@CvLuaArea@@SAXPAUlua_State@@H@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
?PushMethods@CvLuaArea@@SAXPAUlua_State@@H@Z PROC	; CvLuaArea::PushMethods, COMDAT

; 20   : {

	push	esi

; 21   : 	Method(IsNone);

	mov	esi, DWORD PTR _L$[esp]
	push	edi
	push	0
	push	OFFSET ?lIsNone@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lIsNone
	push	esi
	call	_lua_pushcclosure
	mov	edi, DWORD PTR _t$[esp+16]
	push	OFFSET $SG219086
	push	edi
	push	esi
	call	_lua_setfield

; 22   : 
; 23   : 	Method(CalculateTotalBestNatureYield);

	push	0
	push	OFFSET ?lCalculateTotalBestNatureYield@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lCalculateTotalBestNatureYield
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219087
	push	edi
	push	esi
	call	_lua_setfield

; 24   : 	Method(CountCoastalLand);

	push	0
	push	OFFSET ?lCountCoastalLand@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lCountCoastalLand
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219088
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 25   : 	Method(CountNumUniqueResourceTypes);

	push	0
	push	OFFSET ?lCountNumUniqueResourceTypes@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lCountNumUniqueResourceTypes
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219089
	push	edi
	push	esi
	call	_lua_setfield

; 26   : 	Method(GetID);

	push	0
	push	OFFSET ?lGetID@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetID
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219090
	push	edi
	push	esi
	call	_lua_setfield

; 27   : 	Method(GetNumTiles);

	push	0
	push	OFFSET ?lGetNumTiles@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumTiles
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219091
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 28   : 	//Method(IsLake);
; 29   : 	Method(GetNumOwnedTiles);

	push	0
	push	OFFSET ?lGetNumOwnedTiles@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumOwnedTiles
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219092
	push	edi
	push	esi
	call	_lua_setfield

; 30   : 	Method(GetNumUnownedTiles);

	push	0
	push	OFFSET ?lGetNumUnownedTiles@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumUnownedTiles
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219093
	push	edi
	push	esi
	call	_lua_setfield

; 31   : 	Method(GetNumRiverEdges);

	push	0
	push	OFFSET ?lGetNumRiverEdges@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumRiverEdges
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219094
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 32   : 	Method(GetNumCities);

	push	0
	push	OFFSET ?lGetNumCities@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumCities
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219095
	push	edi
	push	esi
	call	_lua_setfield

; 33   : 	Method(GetNumUnits);

	push	0
	push	OFFSET ?lGetNumUnits@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumUnits
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219096
	push	edi
	push	esi
	call	_lua_setfield

; 34   : 	Method(GetTotalPopulation);

	push	0
	push	OFFSET ?lGetTotalPopulation@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetTotalPopulation
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219097
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 35   : 	Method(GetNumStartingPlots);

	push	0
	push	OFFSET ?lGetNumStartingPlots@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumStartingPlots
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219098
	push	edi
	push	esi
	call	_lua_setfield

; 36   : 	Method(IsWater);

	push	0
	push	OFFSET ?lIsWater@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lIsWater
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219099
	push	edi
	push	esi
	call	_lua_setfield

; 37   : 
; 38   : 	Method(GetUnitsPerPlayer);

	push	0
	push	OFFSET ?lGetUnitsPerPlayer@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetUnitsPerPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219100
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 39   : 	Method(GetCitiesPerPlayer);

	push	0
	push	OFFSET ?lGetCitiesPerPlayer@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetCitiesPerPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219101
	push	edi
	push	esi
	call	_lua_setfield

; 40   : 	Method(GetPopulationPerPlayer);

	push	0
	push	OFFSET ?lGetPopulationPerPlayer@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetPopulationPerPlayer
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219102
	push	edi
	push	esi
	call	_lua_setfield

; 41   : 	Method(GetFreeSpecialist);

	push	0
	push	OFFSET ?lGetFreeSpecialist@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetFreeSpecialist
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219103
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 42   : 
; 43   : 	Method(GetNumRevealedTiles);

	push	0
	push	OFFSET ?lGetNumRevealedTiles@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumRevealedTiles
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219104
	push	edi
	push	esi
	call	_lua_setfield

; 44   : 	Method(GetNumUnrevealedTiles);

	push	0
	push	OFFSET ?lGetNumUnrevealedTiles@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumUnrevealedTiles
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219105
	push	edi
	push	esi
	call	_lua_setfield

; 45   : 
; 46   : 	Method(GetTargetCity);

	push	0
	push	OFFSET ?lGetTargetCity@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetTargetCity
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219106
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 47   : 	Method(GetYieldRateModifier);

	push	0
	push	OFFSET ?lGetYieldRateModifier@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetYieldRateModifier
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219107
	push	edi
	push	esi
	call	_lua_setfield

; 48   : 
; 49   : 	Method(GetNumResources);

	push	0
	push	OFFSET ?lGetNumResources@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumResources
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219108
	push	edi
	push	esi
	call	_lua_setfield

; 50   : 	Method(GetNumTotalResources);

	push	0
	push	OFFSET ?lGetNumTotalResources@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumTotalResources
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219109
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 72					; 00000048H

; 51   : 	Method(GetNumImprovements);

	push	0
	push	OFFSET ?lGetNumImprovements@CvLuaArea@@KAHPAUlua_State@@@Z ; CvLuaArea::lGetNumImprovements
	push	esi
	call	_lua_pushcclosure
	push	OFFSET $SG219110
	push	edi
	push	esi
	call	_lua_setfield
	add	esp, 24					; 00000018H
	pop	edi
	pop	esi

; 52   : }

	ret	0
?PushMethods@CvLuaArea@@SAXPAUlua_State@@H@Z ENDP	; CvLuaArea::PushMethods
_TEXT	ENDS
END
